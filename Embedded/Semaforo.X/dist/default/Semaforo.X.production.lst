

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jul 13 17:50:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199                           
   200                           	psect	idataBANK0
   201  0A8A                     __pidataBANK0:	
   202                           
   203                           ;initializer for _randx
   204  0A8A  3401               	retlw	1
   205  0A8B  3400               	retlw	0
   206  0A8C  3400               	retlw	0
   207  0A8D  3400               	retlw	0
   208                           
   209                           ;initializer for _DigitsArr
   210  0A8E  34DA               	retlw	low (_digits0| 0)
   211  0A8F  34D7               	retlw	low (_digits1| 0)
   212                           
   213                           ;initializer for _Semafori
   214  0A90  34C1               	retlw	low (_s0| 0)
   215  0A91  34B3               	retlw	low (_s1| 0)
   216                           
   217                           	psect	strings
   218  0800                     __pstrings:	
   219  0800                     stringtab:	
   220  0800                     __stringtab:	
   221  0800                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224  0800                     stringdir:	
   225  0800  3008               	movlw	high stringdir
   226  0801  008A               	movwf	10
   227  0802  0804               	movf	4,w
   228  0803  0A84               	incf	4,f
   229  0804  0782               	addwf	2,f
   230  0805                     __stringbase:	
   231  0805  3400               	retlw	0
   232  0806                     __end_of__stringtab:	
   233  0806                     _display:	
   234  0806  343F               	retlw	63
   235  0807  3406               	retlw	6
   236  0808  345B               	retlw	91
   237  0809  344F               	retlw	79
   238  080A  3466               	retlw	102
   239  080B  346D               	retlw	109
   240  080C  347D               	retlw	125
   241  080D  3407               	retlw	7
   242  080E  347F               	retlw	127
   243  080F  346F               	retlw	111
   244  0810  3400               	retlw	0
   245  0811                     __end_of_display:	
   246  0811                     _n_semafori:	
   247  0811  3402               	retlw	2
   248  0812                     __end_of_n_semafori:	
   249  0008                     _PORTD	set	8
   250  0005                     _PORTAbits	set	5
   251  001A                     _RCREG	set	26
   252  0019                     _TXREG	set	25
   253  000B                     _INTCONbits	set	11
   254  0018                     _RCSTAbits	set	24
   255  001E                     _ADRESH	set	30
   256  001F                     _ADCON0	set	31
   257  0006                     _PORTBbits	set	6
   258  0007                     _PORTCbits	set	7
   259  000E                     _TMR1L	set	14
   260  000F                     _TMR1H	set	15
   261  0010                     _T1CON	set	16
   262  0001                     _TMR0	set	1
   263  000B                     _INTCON	set	11
   264  0060                     _TMR1IF	set	96
   265  005A                     _TMR0IF	set	90
   266  0065                     _RCIF	set	101
   267  0064                     _TXIF	set	100
   268  00FA                     _GO_nDONE	set	250
   269  008C                     _PIE1bits	set	140
   270  0099                     _SPBRG	set	153
   271  0098                     _TXSTAbits	set	152
   272  0087                     _TRISCbits	set	135
   273  009E                     _ADRESL	set	158
   274  009F                     _ADCON1	set	159
   275  0085                     _TRISA	set	133
   276  0081                     _OPTION_REG	set	129
   277  0089                     _TRISE	set	137
   278  0088                     _TRISD	set	136
   279  0087                     _TRISC	set	135
   280  0086                     _TRISB	set	134
   281                           
   282                           ; #config settings
   283  0000                     
   284                           	psect	cinit
   285  0013                     start_initialization:	
   286  0013                     __initialization:	
   287                           
   288                           ; Initialize objects allocated to BANK0
   289  0013  1383               	bcf	3,7	;select IRP bank0
   290  0014  3066               	movlw	low (__pdataBANK0+8)
   291  0015  00FD               	movwf	btemp+-1
   292  0016  300A               	movlw	high __pidataBANK0
   293  0017  00FE               	movwf	btemp
   294  0018  308A               	movlw	low __pidataBANK0
   295  0019  00FF               	movwf	btemp+1
   296  001A  305E               	movlw	low __pdataBANK0
   297  001B  0084               	movwf	4
   298  001C  120A  158A  22BD  120A  118A  	fcall	init_ram0
   299                           
   300                           ; Clear objects allocated to BANK1
   301  0021  30A0               	movlw	low __pbssBANK1
   302  0022  0084               	movwf	4
   303  0023  30DD               	movlw	low (__pbssBANK1+61)
   304  0024  120A  158A  2282  120A  118A  	fcall	clear_ram0
   305                           
   306                           ; Clear objects allocated to BANK0
   307  0029  3049               	movlw	low __pbssBANK0
   308  002A  0084               	movwf	4
   309  002B  305E               	movlw	low (__pbssBANK0+21)
   310  002C  120A  158A  2282  120A  118A  	fcall	clear_ram0
   311  0031                     end_of_initialization:	
   312                           ;End of C runtime variable initialization code
   313                           
   314  0031                     __end_of__initialization:	
   315  0031  0183               	clrf	3
   316  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   317                           
   318                           	psect	bssBANK0
   319  0049                     __pbssBANK0:	
   320  0049                     _time:	
   321  0049                     	ds	4
   322  004D                     _count:	
   323  004D                     	ds	2
   324  004F                     _pressione:	
   325  004F                     	ds	1
   326  0050                     _umidita:	
   327  0050                     	ds	1
   328  0051                     _temp:	
   329  0051                     	ds	1
   330  0052                     _timerReadFromGateway:	
   331  0052                     	ds	1
   332  0053                     _dataFromGatewayIndex:	
   333  0053                     	ds	1
   334  0054                     _count_lux:	
   335  0054                     	ds	1
   336  0055                     _disp:	
   337  0055                     	ds	1
   338  0056                     _cycled:	
   339  0056                     	ds	1
   340  0057                     _secondPassed:	
   341  0057                     	ds	1
   342  0058                     _readGateway:	
   343  0058                     	ds	1
   344  0059                     _readGatewayDone:	
   345  0059                     	ds	1
   346  005A                     _motorcycle:	
   347  005A                     	ds	4
   348                           
   349                           	psect	dataBANK0
   350  005E                     __pdataBANK0:	
   351  005E                     _randx:	
   352  005E                     	ds	4
   353  0062                     _DigitsArr:	
   354  0062                     	ds	2
   355  0064                     _Semafori:	
   356  0064                     	ds	2
   357                           
   358                           	psect	bssBANK1
   359  00A0                     __pbssBANK1:	
   360  00A0                     _RoadsSensors:	
   361  00A0                     	ds	4
   362  00A4                     _dataFromGateway:	
   363  00A4                     	ds	15
   364  00B3                     _s1:	
   365  00B3                     	ds	14
   366  00C1                     _s0:	
   367  00C1                     	ds	14
   368  00CF                     _truck:	
   369  00CF                     	ds	4
   370  00D3                     _car:	
   371  00D3                     	ds	4
   372  00D7                     _digits1:	
   373  00D7                     	ds	3
   374  00DA                     _digits0:	
   375  00DA                     	ds	3
   376                           
   377                           	psect	inittext
   378  0AB9                     init_fetch0:	
   379                           ;	Called with low address in FSR and high address in W
   380                           
   381  0AB9  087E               	movf	btemp,w
   382  0ABA  008A               	movwf	10
   383  0ABB  087F               	movf	btemp+1,w
   384  0ABC  0082               	movwf	2
   385  0ABD                     init_ram0:	
   386                           ;Called with:
   387                           ;	high address of idata address in btemp 
   388                           ;	low address of idata address in btemp+1 
   389                           ;	low address of data in FSR
   390                           ;	high address + 1 of data in btemp-1
   391                           
   392  0ABD  120A  158A  22B9  120A  158A  	fcall	init_fetch0
   393  0AC2  0080               	movwf	0
   394  0AC3  0A84               	incf	4,f
   395  0AC4  0804               	movf	4,w
   396  0AC5  067D               	xorwf	btemp+-1,w
   397  0AC6  1903               	btfsc	3,2
   398  0AC7  3400               	retlw	0
   399  0AC8  0AFF               	incf	btemp+1,f
   400  0AC9  1903               	btfsc	3,2
   401  0ACA  0AFE               	incf	btemp,f
   402  0ACB  2ABD               	goto	init_ram0
   403                           
   404                           	psect	clrtext
   405  0A82                     clear_ram0:	
   406                           ;	Called with FSR containing the base address, and
   407                           ;	W with the last address+1
   408                           
   409  0A82  0064               	clrwdt	;clear the watchdog before getting into this loop
   410  0A83                     clrloop0:	
   411  0A83  0180               	clrf	0	;clear RAM location pointed to by FSR
   412  0A84  0A84               	incf	4,f	;increment pointer
   413  0A85  0604               	xorwf	4,w	;XOR with final address
   414  0A86  1903               	btfsc	3,2	;have we reached the end yet?
   415  0A87  3400               	retlw	0	;all done for this memory range, return
   416  0A88  0604               	xorwf	4,w	;XOR again to restore value
   417  0A89  2A83               	goto	clrloop0	;do the next byte
   418                           
   419                           	psect	cstackBANK1
   420  00DD                     __pcstackBANK1:	
   421  00DD                     main@randomMoto:	
   422                           
   423                           ; 1 bytes @ 0x0
   424  00DD                     	ds	1
   425  00DE                     main@randomCar:	
   426                           
   427                           ; 1 bytes @ 0x1
   428  00DE                     	ds	1
   429  00DF                     main@randomTruck:	
   430                           
   431                           ; 1 bytes @ 0x2
   432  00DF                     	ds	1
   433  00E0                     main@i_481:	
   434                           
   435                           ; 1 bytes @ 0x3
   436  00E0                     	ds	1
   437  00E1                     main@i_483:	
   438                           
   439                           ; 1 bytes @ 0x4
   440  00E1                     	ds	1
   441  00E2                     main@i_480:	
   442                           
   443                           ; 2 bytes @ 0x5
   444  00E2                     	ds	2
   445  00E4                     main@lux_select:	
   446                           
   447                           ; 1 bytes @ 0x7
   448  00E4                     	ds	1
   449  00E5                     main@i_485:	
   450                           
   451                           ; 1 bytes @ 0x8
   452  00E5                     	ds	1
   453  00E6                     main@i:	
   454                           
   455                           ; 1 bytes @ 0x9
   456  00E6                     	ds	1
   457                           
   458                           	psect	cstackCOMMON
   459  0070                     __pcstackCOMMON:	
   460  0070                     ?_init_ADC:	
   461  0070                     ?_ShowDigitsOnDisplay:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_UpdateTimes:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_Conteggio:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_main:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_UART_TxChar:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_UART_Read:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ??_UART_Read:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_conteggioVeicoli:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_ISR:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     Conteggio@_count:	
   489                           ; 1 bytes @ 0x0
   490                           
   491                           
   492                           ; 2 bytes @ 0x0
   493  0070                     	ds	2
   494  0072                     Conteggio@_motorcycle:	
   495                           
   496                           ; 1 bytes @ 0x2
   497  0072                     	ds	1
   498  0073                     Conteggio@_car:	
   499                           
   500                           ; 1 bytes @ 0x3
   501  0073                     	ds	1
   502  0074                     Conteggio@_truck:	
   503                           
   504                           ; 1 bytes @ 0x4
   505  0074                     	ds	1
   506  0075                     Conteggio@index:	
   507                           
   508                           ; 1 bytes @ 0x5
   509  0075                     	ds	1
   510  0076                     ??_Conteggio:	
   511                           
   512                           ; 1 bytes @ 0x6
   513  0076                     	ds	3
   514  0079                     ??_conteggioVeicoli:	
   515                           
   516                           ; 1 bytes @ 0x9
   517  0079                     	ds	4
   518  007D                     conteggioVeicoli@i:	
   519                           
   520                           ; 1 bytes @ 0xD
   521  007D                     	ds	1
   522                           
   523                           	psect	cstackBANK0
   524  0020                     __pcstackBANK0:	
   525  0020                     ??_ISR:	
   526                           
   527                           ; 1 bytes @ 0x0
   528  0020                     	ds	4
   529  0024                     ??_init_ADC:	
   530  0024                     ?_luciSemaforo:	
   531                           ; 1 bytes @ 0x4
   532                           
   533  0024                     ?_BuildByte:	
   534                           ; 1 bytes @ 0x4
   535                           
   536  0024                     ??_UpdateTimes:	
   537                           ; 1 bytes @ 0x4
   538                           
   539  0024                     ?_SetDefaultTimers:	
   540                           ; 1 bytes @ 0x4
   541                           
   542  0024                     ??_UART_TxChar:	
   543                           ; 1 bytes @ 0x4
   544                           
   545  0024                     ?_SetDisplay:	
   546                           ; 1 bytes @ 0x4
   547                           
   548  0024                     ?___bmul:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0024                     ?_ADC_Read:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0024                     ?_GetTime:	
   555                           ; 2 bytes @ 0x4
   556                           
   557  0024                     ?___wmul:	
   558                           ; 2 bytes @ 0x4
   559                           
   560  0024                     ?___awmod:	
   561                           ; 2 bytes @ 0x4
   562                           
   563  0024                     ?___lmul:	
   564                           ; 2 bytes @ 0x4
   565                           
   566  0024                     ?___aldiv:	
   567                           ; 4 bytes @ 0x4
   568                           
   569  0024                     BuildByte@byte1:	
   570                           ; 4 bytes @ 0x4
   571                           
   572  0024                     GetTime@_dataFromGateway:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0024                     UART_TxChar@ch:	
   576                           ; 1 bytes @ 0x4
   577                           
   578  0024                     luciSemaforo@lux:	
   579                           ; 1 bytes @ 0x4
   580                           
   581  0024                     SetDisplay@d1:	
   582                           ; 1 bytes @ 0x4
   583                           
   584  0024                     ___bmul@multiplicand:	
   585                           ; 1 bytes @ 0x4
   586                           
   587  0024                     SetDefaultTimers@rosso:	
   588                           ; 1 bytes @ 0x4
   589                           
   590  0024                     ___wmul@multiplier:	
   591                           ; 2 bytes @ 0x4
   592                           
   593  0024                     ___awmod@divisor:	
   594                           ; 2 bytes @ 0x4
   595                           
   596  0024                     ___lmul@multiplier:	
   597                           ; 2 bytes @ 0x4
   598                           
   599  0024                     ___aldiv@divisor:	
   600                           ; 4 bytes @ 0x4
   601                           
   602                           
   603                           ; 4 bytes @ 0x4
   604  0024                     	ds	1
   605  0025                     ??_luciSemaforo:	
   606  0025                     ??___bmul:	
   607                           ; 1 bytes @ 0x5
   608                           
   609  0025                     BuildByte@valore:	
   610                           ; 1 bytes @ 0x5
   611                           
   612  0025                     SetDisplay@d2:	
   613                           ; 1 bytes @ 0x5
   614                           
   615                           
   616                           ; 1 bytes @ 0x5
   617  0025                     	ds	1
   618  0026                     ??_ADC_Read:	
   619  0026                     ??_BuildByte:	
   620                           ; 1 bytes @ 0x6
   621                           
   622  0026                     ??_GetTime:	
   623                           ; 1 bytes @ 0x6
   624                           
   625  0026                     SetDisplay@d3:	
   626                           ; 1 bytes @ 0x6
   627                           
   628  0026                     ___bmul@product:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  0026                     SetDefaultTimers@verde:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0026                     ___wmul@multiplicand:	
   635                           ; 2 bytes @ 0x6
   636                           
   637  0026                     ___awmod@dividend:	
   638                           ; 2 bytes @ 0x6
   639                           
   640                           
   641                           ; 2 bytes @ 0x6
   642  0026                     	ds	1
   643  0027                     ADC_Read@canale:	
   644  0027                     luciSemaforo@index:	
   645                           ; 1 bytes @ 0x7
   646                           
   647  0027                     SetDisplay@value:	
   648                           ; 1 bytes @ 0x7
   649                           
   650  0027                     ___bmul@multiplier:	
   651                           ; 1 bytes @ 0x7
   652                           
   653                           
   654                           ; 1 bytes @ 0x7
   655  0027                     	ds	1
   656  0028                     ??_SetDisplay:	
   657  0028                     ??___wmul:	
   658                           ; 1 bytes @ 0x8
   659                           
   660  0028                     ??___awmod:	
   661                           ; 1 bytes @ 0x8
   662                           
   663  0028                     BuildByte@byte0:	
   664                           ; 1 bytes @ 0x8
   665                           
   666  0028                     GetTime@index:	
   667                           ; 1 bytes @ 0x8
   668                           
   669  0028                     SetDefaultTimers@giallo:	
   670                           ; 1 bytes @ 0x8
   671                           
   672  0028                     ___wmul@product:	
   673                           ; 2 bytes @ 0x8
   674                           
   675  0028                     ___lmul@multiplicand:	
   676                           ; 2 bytes @ 0x8
   677                           
   678  0028                     ___aldiv@dividend:	
   679                           ; 4 bytes @ 0x8
   680                           
   681                           
   682                           ; 4 bytes @ 0x8
   683  0028                     	ds	1
   684  0029                     GetTime@shortInt:	
   685  0029                     ___awmod@counter:	
   686                           ; 1 bytes @ 0x9
   687                           
   688  0029                     BuildByte@txByte:	
   689                           ; 1 bytes @ 0x9
   690                           
   691                           
   692                           ; 5 bytes @ 0x9
   693  0029                     	ds	1
   694  002A                     SetDefaultTimers@_semafori:	
   695  002A                     SetDisplay@display_index:	
   696                           ; 1 bytes @ 0xA
   697                           
   698  002A                     ___awmod@sign:	
   699                           ; 1 bytes @ 0xA
   700                           
   701  002A                     GetTime@tmp:	
   702                           ; 1 bytes @ 0xA
   703                           
   704                           
   705                           ; 2 bytes @ 0xA
   706  002A                     	ds	1
   707  002B                     ??_ShowDigitsOnDisplay:	
   708  002B                     ??_SetDefaultTimers:	
   709                           ; 1 bytes @ 0xB
   710                           
   711  002B                     ?___awdiv:	
   712                           ; 1 bytes @ 0xB
   713                           
   714  002B                     ___awdiv@divisor:	
   715                           ; 2 bytes @ 0xB
   716                           
   717                           
   718                           ; 2 bytes @ 0xB
   719  002B                     	ds	1
   720  002C                     ?_SetReceivedTimes:	
   721  002C                     ??___lmul:	
   722                           ; 1 bytes @ 0xC
   723                           
   724  002C                     ??___aldiv:	
   725                           ; 1 bytes @ 0xC
   726                           
   727  002C                     SetReceivedTimes@_semafori:	
   728                           ; 1 bytes @ 0xC
   729                           
   730                           
   731                           ; 1 bytes @ 0xC
   732  002C                     	ds	1
   733  002D                     ??_SetReceivedTimes:	
   734  002D                     ShowDigitsOnDisplay@display_index:	
   735                           ; 1 bytes @ 0xD
   736                           
   737  002D                     ___aldiv@counter:	
   738                           ; 1 bytes @ 0xD
   739                           
   740  002D                     ___awdiv@dividend:	
   741                           ; 1 bytes @ 0xD
   742                           
   743  002D                     ___lmul@product:	
   744                           ; 2 bytes @ 0xD
   745                           
   746                           
   747                           ; 4 bytes @ 0xD
   748  002D                     	ds	1
   749  002E                     BuildByte@sommaRow:	
   750  002E                     UpdateTimes@_semafori:	
   751                           ; 1 bytes @ 0xE
   752                           
   753  002E                     SetDefaultTimers@l:	
   754                           ; 1 bytes @ 0xE
   755                           
   756  002E                     ___aldiv@sign:	
   757                           ; 1 bytes @ 0xE
   758                           
   759                           
   760                           ; 1 bytes @ 0xE
   761  002E                     	ds	1
   762  002F                     ??___awdiv:	
   763  002F                     BuildByte@sommaColumn:	
   764                           ; 1 bytes @ 0xF
   765                           
   766  002F                     UpdateTimes@i:	
   767                           ; 1 bytes @ 0xF
   768                           
   769  002F                     SetDefaultTimers@i:	
   770                           ; 1 bytes @ 0xF
   771                           
   772  002F                     ___aldiv@quotient:	
   773                           ; 1 bytes @ 0xF
   774                           
   775                           
   776                           ; 4 bytes @ 0xF
   777  002F                     	ds	1
   778  0030                     UpdateTimes@l:	
   779  0030                     ___awdiv@counter:	
   780                           ; 1 bytes @ 0x10
   781                           
   782  0030                     BuildByte@y:	
   783                           ; 1 bytes @ 0x10
   784                           
   785                           
   786                           ; 2 bytes @ 0x10
   787  0030                     	ds	1
   788  0031                     ?_rand:	
   789  0031                     SetReceivedTimes@semaforoId:	
   790                           ; 2 bytes @ 0x11
   791                           
   792  0031                     ___awdiv@sign:	
   793                           ; 1 bytes @ 0x11
   794                           
   795                           
   796                           ; 1 bytes @ 0x11
   797  0031                     	ds	1
   798  0032                     SetReceivedTimes@colorId:	
   799  0032                     BuildByte@y_342:	
   800                           ; 1 bytes @ 0x12
   801                           
   802  0032                     ___awdiv@quotient:	
   803                           ; 2 bytes @ 0x12
   804                           
   805                           
   806                           ; 2 bytes @ 0x12
   807  0032                     	ds	1
   808  0033                     ?_UART_Init:	
   809  0033                     ??_rand:	
   810                           ; 1 bytes @ 0x13
   811                           
   812  0033                     SetReceivedTimes@_dataFromGateway:	
   813                           ; 1 bytes @ 0x13
   814                           
   815  0033                     UART_Init@baudrate:	
   816                           ; 1 bytes @ 0x13
   817                           
   818                           
   819                           ; 2 bytes @ 0x13
   820  0033                     	ds	1
   821  0034                     ?_GetDigits:	
   822  0034                     ?_map:	
   823                           ; 1 bytes @ 0x14
   824                           
   825  0034                     SetReceivedTimes@index:	
   826                           ; 2 bytes @ 0x14
   827                           
   828  0034                     GetDigits@index:	
   829                           ; 1 bytes @ 0x14
   830                           
   831  0034                     BuildByte@i:	
   832                           ; 1 bytes @ 0x14
   833                           
   834  0034                     map@x:	
   835                           ; 2 bytes @ 0x14
   836                           
   837                           
   838                           ; 2 bytes @ 0x14
   839  0034                     	ds	1
   840  0035                     ??_UART_Init:	
   841  0035                     SetReceivedTimes@i:	
   842                           ; 1 bytes @ 0x15
   843                           
   844  0035                     GetDigits@Time:	
   845                           ; 1 bytes @ 0x15
   846                           
   847                           
   848                           ; 2 bytes @ 0x15
   849  0035                     	ds	1
   850  0036                     BuildByte@i_341:	
   851  0036                     map@in_min:	
   852                           ; 2 bytes @ 0x16
   853                           
   854                           
   855                           ; 2 bytes @ 0x16
   856  0036                     	ds	1
   857  0037                     ??_GetDigits:	
   858                           
   859                           ; 1 bytes @ 0x17
   860  0037                     	ds	1
   861  0038                     ?_sendByte:	
   862  0038                     sendByte@byte1:	
   863                           ; 1 bytes @ 0x18
   864                           
   865  0038                     map@in_max:	
   866                           ; 1 bytes @ 0x18
   867                           
   868                           
   869                           ; 2 bytes @ 0x18
   870  0038                     	ds	1
   871  0039                     sendByte@valore:	
   872                           
   873                           ; 1 bytes @ 0x19
   874  0039                     	ds	1
   875  003A                     ??_sendByte:	
   876  003A                     map@out_min:	
   877                           ; 1 bytes @ 0x1A
   878                           
   879  003A                     _GetDigits$1203:	
   880                           ; 2 bytes @ 0x1A
   881                           
   882                           
   883                           ; 2 bytes @ 0x1A
   884  003A                     	ds	2
   885  003C                     GetDigits@_digits:	
   886  003C                     map@out_max:	
   887                           ; 1 bytes @ 0x1C
   888                           
   889                           
   890                           ; 2 bytes @ 0x1C
   891  003C                     	ds	1
   892  003D                     sendByte@byte0:	
   893                           
   894                           ; 1 bytes @ 0x1D
   895  003D                     	ds	1
   896  003E                     ??_map:	
   897  003E                     sendByte@txByte:	
   898                           ; 1 bytes @ 0x1E
   899                           
   900                           
   901                           ; 1 bytes @ 0x1E
   902  003E                     	ds	1
   903  003F                     sendByte@i:	
   904                           
   905                           ; 1 bytes @ 0x1F
   906  003F                     	ds	1
   907  0040                     ??_main:	
   908                           
   909                           ; 1 bytes @ 0x20
   910  0040                     	ds	9
   911                           
   912                           	psect	maintext
   913  0035                     __pmaintext:	
   914 ;;
   915 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   916 ;;
   917 ;; *************** function _main *****************
   918 ;; Defined at:
   919 ;;		line 136 in file "main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  lux_select      1    7[BANK1 ] unsigned char 
   924 ;;  randomTruck     1    2[BANK1 ] unsigned char 
   925 ;;  randomCar       1    1[BANK1 ] unsigned char 
   926 ;;  randomMoto      1    0[BANK1 ] unsigned char 
   927 ;;  i               1    8[BANK1 ] unsigned char 
   928 ;;  i               1    4[BANK1 ] unsigned char 
   929 ;;  i               1    3[BANK1 ] unsigned char 
   930 ;;  i               2    5[BANK1 ] int 
   931 ;;  i               1    9[BANK1 ] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : B00/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         0       0      10       0       0
   943 ;;      Temps:          0       9       0       0       0
   944 ;;      Totals:         0       9      10       0       0
   945 ;;Total ram usage:       19 bytes
   946 ;; Hardware stack levels required when called:    5
   947 ;; This function calls:
   948 ;;		_ADC_Read
   949 ;;		_GetDigits
   950 ;;		_SetDefaultTimers
   951 ;;		_SetReceivedTimes
   952 ;;		_ShowDigitsOnDisplay
   953 ;;		_UART_Init
   954 ;;		_UpdateTimes
   955 ;;		_init_ADC
   956 ;;		_luciSemaforo
   957 ;;		_map
   958 ;;		_rand
   959 ;;		_sendByte
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _main
   967  0035                     _main:	
   968  0035                     l3511:	
   969                           ;incstack = 0
   970                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   971                           
   972                           
   973                           ;main.c: 138:     TRISB = 0x38;
   974  0035  3038               	movlw	56
   975  0036  1683               	bsf	3,5	;RP0=1, select bank1
   976  0037  1303               	bcf	3,6	;RP1=0, select bank1
   977  0038  0086               	movwf	6	;volatile
   978                           
   979                           ;main.c: 139:     TRISC = 0x80;
   980  0039  3080               	movlw	128
   981  003A  0087               	movwf	7	;volatile
   982  003B                     l3513:	
   983                           
   984                           ;main.c: 140:     TRISD = 0x00;
   985  003B  0188               	clrf	8	;volatile
   986  003C                     l3515:	
   987                           
   988                           ;main.c: 141:     TRISE = 0x01;
   989  003C  3001               	movlw	1
   990  003D  0089               	movwf	9	;volatile
   991  003E                     l3517:	
   992                           
   993                           ;main.c: 142:     INTCON = 0xE0;
   994  003E  30E0               	movlw	224
   995  003F  008B               	movwf	11	;volatile
   996  0040                     l3519:	
   997                           
   998                           ;main.c: 143:     OPTION_REG = 0x04;
   999  0040  3004               	movlw	4
  1000  0041  0081               	movwf	1	;volatile
  1001  0042                     l3521:	
  1002                           
  1003                           ;main.c: 144:     TMR0 = 6;
  1004  0042  3006               	movlw	6
  1005  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0045  0081               	movwf	1	;volatile
  1008  0046                     l3523:	
  1009                           
  1010                           ;main.c: 145:     T1CON = 0x31;
  1011  0046  3031               	movlw	49
  1012  0047  0090               	movwf	16	;volatile
  1013  0048                     l3525:	
  1014                           
  1015                           ;main.c: 147:     TMR1H = 60;
  1016  0048  303C               	movlw	60
  1017  0049  008F               	movwf	15	;volatile
  1018  004A                     l3527:	
  1019                           
  1020                           ;main.c: 148:     TMR1L = 176;
  1021  004A  30B0               	movlw	176
  1022  004B  008E               	movwf	14	;volatile
  1023  004C                     l3529:	
  1024                           
  1025                           ;main.c: 151:     init_ADC();
  1026  004C  120A  158A  22A6  120A  118A  	fcall	_init_ADC
  1027  0051                     l3531:	
  1028                           
  1029                           ;main.c: 152:     UART_Init(9600);
  1030  0051  3080               	movlw	128
  1031  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0054  00B3               	movwf	UART_Init@baudrate
  1034  0055  3025               	movlw	37
  1035  0056  00B4               	movwf	UART_Init@baudrate+1
  1036  0057  120A  158A  237F  120A  118A  	fcall	_UART_Init
  1037  005C                     l3533:	
  1038                           
  1039                           ;main.c: 153:     SetDefaultTimers(6, 4, 2, Semafori);
  1040  005C  3006               	movlw	6
  1041  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1042  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1043  005F  00A4               	movwf	SetDefaultTimers@rosso
  1044  0060  3000               	movlw	0
  1045  0061  00A5               	movwf	SetDefaultTimers@rosso+1
  1046  0062  3004               	movlw	4
  1047  0063  00A6               	movwf	SetDefaultTimers@verde
  1048  0064  3000               	movlw	0
  1049  0065  00A7               	movwf	SetDefaultTimers@verde+1
  1050  0066  3002               	movlw	2
  1051  0067  00A8               	movwf	SetDefaultTimers@giallo
  1052  0068  3000               	movlw	0
  1053  0069  00A9               	movwf	SetDefaultTimers@giallo+1
  1054  006A  3064               	movlw	(low (_Semafori| 0))& (0+255)
  1055  006B  00C0               	movwf	??_main
  1056  006C  0840               	movf	??_main,w
  1057  006D  00AA               	movwf	SetDefaultTimers@_semafori
  1058  006E  120A  118A  261A  120A  118A  	fcall	_SetDefaultTimers
  1059  0073                     l3535:	
  1060                           
  1061                           ;main.c: 155:     PORTCbits.RC0 = 0;
  1062  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0075  1007               	bcf	7,0	;volatile
  1065  0076                     l3537:	
  1066                           
  1067                           ;main.c: 156:     PORTBbits.RB7 = 0;
  1068  0076  1386               	bcf	6,7	;volatile
  1069  0077                     l3539:	
  1070                           
  1071                           ;main.c: 157:     PORTCbits.RC2 = 0;
  1072  0077  1107               	bcf	7,2	;volatile
  1073  0078                     l3541:	
  1074                           
  1075                           ;main.c: 158:     PORTBbits.RB6 = 0;
  1076  0078  1306               	bcf	6,6	;volatile
  1077  0079                     l3543:	
  1078                           
  1079                           ;main.c: 159:     PORTCbits.RC1 = 0;
  1080  0079  1087               	bcf	7,1	;volatile
  1081  007A                     l3545:	
  1082                           
  1083                           ;main.c: 160:     PORTBbits.RB1 = 0;
  1084  007A  1086               	bcf	6,1	;volatile
  1085  007B                     l3547:	
  1086                           
  1087                           ;main.c: 163:     {;main.c: 165:         if (readGateway.Bit)
  1088  007B  1C58               	btfss	_readGateway,0
  1089  007C  287E               	goto	u3031
  1090  007D  287F               	goto	u3030
  1091  007E                     u3031:	
  1092  007E  2C82               	goto	l260
  1093  007F                     u3030:	
  1094  007F  2B41               	goto	l3641
  1095  0080                     l225:	
  1096                           ;main.c: 168:             {;main.c: 169:             case 0x08:
  1097                           
  1098                           
  1099                           ;main.c: 170:                 readGatewayDone.Bit = 1;
  1100  0080  1459               	bsf	_readGatewayDone,0
  1101                           
  1102                           ;main.c: 171:                 readGateway.Bit = 0;
  1103  0081  1058               	bcf	_readGateway,0
  1104  0082                     l3551:	
  1105                           
  1106                           ;main.c: 173:                 for (unsigned char i = 0; i < 4; i++)
  1107  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0084  01E6               	clrf	main@i^(0+128)
  1110  0085                     l3557:	
  1111                           
  1112                           ;main.c: 174:                 {;main.c: 176:                     unsigned char randomMot
      +                          o = (char)rand();
  1113  0085  120A  158A  23FF  120A  118A  	fcall	_rand
  1114  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1115  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1116  008C  0831               	movf	?_rand,w
  1117  008D  00C0               	movwf	??_main
  1118  008E  0840               	movf	??_main,w
  1119  008F  1683               	bsf	3,5	;RP0=1, select bank1
  1120  0090  1303               	bcf	3,6	;RP1=0, select bank1
  1121  0091  00DD               	movwf	main@randomMoto^(0+128)
  1122                           
  1123                           ;main.c: 177:                     unsigned char randomCar = (char)rand();
  1124  0092  120A  158A  23FF  120A  118A  	fcall	_rand
  1125  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0099  0831               	movf	?_rand,w
  1128  009A  00C0               	movwf	??_main
  1129  009B  0840               	movf	??_main,w
  1130  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1131  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1132  009E  00DE               	movwf	main@randomCar^(0+128)
  1133                           
  1134                           ;main.c: 178:                     unsigned char randomTruck = (char)rand();
  1135  009F  120A  158A  23FF  120A  118A  	fcall	_rand
  1136  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00A6  0831               	movf	?_rand,w
  1139  00A7  00C0               	movwf	??_main
  1140  00A8  0840               	movf	??_main,w
  1141  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1142  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1143  00AB  00DF               	movwf	main@randomTruck^(0+128)
  1144  00AC                     l3559:	
  1145                           
  1146                           ;main.c: 179:                     if (randomMoto < 255)
  1147  00AC  0A5D               	incf	main@randomMoto^(0+128),w
  1148  00AD  1903               	btfsc	3,2
  1149  00AE  28B0               	goto	u3041
  1150  00AF  28B1               	goto	u3040
  1151  00B0                     u3041:	
  1152  00B0  28BF               	goto	l3563
  1153  00B1                     u3040:	
  1154  00B1                     l3561:	
  1155                           
  1156                           ;main.c: 180:                     {;main.c: 181:                         motorcycle[i] =
      +                           randomMoto;
  1157  00B1  085D               	movf	main@randomMoto^(0+128),w
  1158  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1159  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1160  00B4  00C0               	movwf	??_main
  1161  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1162  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1163  00B7  0866               	movf	main@i^(0+128),w
  1164  00B8  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1165  00B9  0084               	movwf	4
  1166  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1167  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1168  00BC  0840               	movf	??_main,w
  1169  00BD  1383               	bcf	3,7	;select IRP bank0
  1170  00BE  0080               	movwf	0
  1171  00BF                     l3563:	
  1172                           
  1173                           ;main.c: 183:                     if (randomCar < 255)
  1174  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1175  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1176  00C1  0A5E               	incf	main@randomCar^(0+128),w
  1177  00C2  1903               	btfsc	3,2
  1178  00C3  28C5               	goto	u3051
  1179  00C4  28C6               	goto	u3050
  1180  00C5                     u3051:	
  1181  00C5  28D4               	goto	l3567
  1182  00C6                     u3050:	
  1183  00C6                     l3565:	
  1184                           
  1185                           ;main.c: 184:                     {;main.c: 185:                         car[i] = random
      +                          Car;
  1186  00C6  085E               	movf	main@randomCar^(0+128),w
  1187  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1188  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1189  00C9  00C0               	movwf	??_main
  1190  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1191  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1192  00CC  0866               	movf	main@i^(0+128),w
  1193  00CD  3ED3               	addlw	(low (_car| 0))& (0+255)
  1194  00CE  0084               	movwf	4
  1195  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1196  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1197  00D1  0840               	movf	??_main,w
  1198  00D2  1383               	bcf	3,7	;select IRP bank1
  1199  00D3  0080               	movwf	0
  1200  00D4                     l3567:	
  1201                           
  1202                           ;main.c: 187:                     if (randomTruck < 255)
  1203  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1204  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1205  00D6  0A5F               	incf	main@randomTruck^(0+128),w
  1206  00D7  1903               	btfsc	3,2
  1207  00D8  28DA               	goto	u3061
  1208  00D9  28DB               	goto	u3060
  1209  00DA                     u3061:	
  1210  00DA  29FE               	goto	l3581
  1211  00DB                     u3060:	
  1212  00DB                     l3569:	
  1213                           
  1214                           ;main.c: 188:                     {;main.c: 189:                         truck[i] = rand
      +                          omTruck;
  1215  00DB  085F               	movf	main@randomTruck^(0+128),w
  1216  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1217  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1218  00DE  00C0               	movwf	??_main
  1219  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1220  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1221  00E1  0866               	movf	main@i^(0+128),w
  1222  00E2  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1223  00E3  0084               	movwf	4
  1224  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1225  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1226  00E6  0840               	movf	??_main,w
  1227  00E7  1383               	bcf	3,7	;select IRP bank1
  1228  00E8  0080               	movwf	0
  1229  00E9  29FE               	goto	l3581
  1230  00EA                     l3571:	
  1231                           
  1232                           ;main.c: 196:                         sendByte(0x03, 0x01, motorcycle[i]);
  1233  00EA  01B8               	clrf	sendByte@byte1
  1234  00EB  0AB8               	incf	sendByte@byte1,f
  1235  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1236  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1237  00EE  0866               	movf	main@i^(0+128),w
  1238  00EF  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1239  00F0  0084               	movwf	4
  1240  00F1  1383               	bcf	3,7	;select IRP bank0
  1241  00F2  0800               	movf	0,w
  1242  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1243  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1244  00F5  00C0               	movwf	??_main
  1245  00F6  0840               	movf	??_main,w
  1246  00F7  00B9               	movwf	sendByte@valore
  1247  00F8  3003               	movlw	3
  1248  00F9  120A  158A  2319  120A  118A  	fcall	_sendByte
  1249                           
  1250                           ;main.c: 197:                         sendByte(0x03, 0x02, car[i]);
  1251  00FE  3002               	movlw	2
  1252  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0101  00C0               	movwf	??_main
  1255  0102  0840               	movf	??_main,w
  1256  0103  00B8               	movwf	sendByte@byte1
  1257  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0106  0866               	movf	main@i^(0+128),w
  1260  0107  3ED3               	addlw	(low (_car| 0))& (0+255)
  1261  0108  0084               	movwf	4
  1262  0109  1383               	bcf	3,7	;select IRP bank1
  1263  010A  0800               	movf	0,w
  1264  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1265  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1266  010D  00C1               	movwf	??_main+1
  1267  010E  0841               	movf	??_main+1,w
  1268  010F  00B9               	movwf	sendByte@valore
  1269  0110  3003               	movlw	3
  1270  0111  120A  158A  2319  120A  118A  	fcall	_sendByte
  1271                           
  1272                           ;main.c: 198:                         sendByte(0x03, 0x03, truck[i]);
  1273  0116  3003               	movlw	3
  1274  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0119  00C0               	movwf	??_main
  1277  011A  0840               	movf	??_main,w
  1278  011B  00B8               	movwf	sendByte@byte1
  1279  011C  1683               	bsf	3,5	;RP0=1, select bank1
  1280  011D  1303               	bcf	3,6	;RP1=0, select bank1
  1281  011E  0866               	movf	main@i^(0+128),w
  1282  011F  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1283  0120  0084               	movwf	4
  1284  0121  1383               	bcf	3,7	;select IRP bank1
  1285  0122  0800               	movf	0,w
  1286  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0125  00C1               	movwf	??_main+1
  1289  0126  0841               	movf	??_main+1,w
  1290  0127  00B9               	movwf	sendByte@valore
  1291  0128  3003               	movlw	3
  1292  0129  120A  158A  2319  120A  118A  	fcall	_sendByte
  1293                           
  1294                           ;main.c: 199:                         break;
  1295  012E  2A18               	goto	l3583
  1296  012F                     l3573:	
  1297                           
  1298                           ;main.c: 201:                         sendByte(0x05, 0x01, motorcycle[i]);
  1299  012F  01B8               	clrf	sendByte@byte1
  1300  0130  0AB8               	incf	sendByte@byte1,f
  1301  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0133  0866               	movf	main@i^(0+128),w
  1304  0134  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1305  0135  0084               	movwf	4
  1306  0136  1383               	bcf	3,7	;select IRP bank0
  1307  0137  0800               	movf	0,w
  1308  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1310  013A  00C0               	movwf	??_main
  1311  013B  0840               	movf	??_main,w
  1312  013C  00B9               	movwf	sendByte@valore
  1313  013D  3005               	movlw	5
  1314  013E  120A  158A  2319  120A  118A  	fcall	_sendByte
  1315                           
  1316                           ;main.c: 202:                         sendByte(0x05, 0x02, car[i]);
  1317  0143  3002               	movlw	2
  1318  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0146  00C0               	movwf	??_main
  1321  0147  0840               	movf	??_main,w
  1322  0148  00B8               	movwf	sendByte@byte1
  1323  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1324  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1325  014B  0866               	movf	main@i^(0+128),w
  1326  014C  3ED3               	addlw	(low (_car| 0))& (0+255)
  1327  014D  0084               	movwf	4
  1328  014E  1383               	bcf	3,7	;select IRP bank1
  1329  014F  0800               	movf	0,w
  1330  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0152  00C1               	movwf	??_main+1
  1333  0153  0841               	movf	??_main+1,w
  1334  0154  00B9               	movwf	sendByte@valore
  1335  0155  3005               	movlw	5
  1336  0156  120A  158A  2319  120A  118A  	fcall	_sendByte
  1337                           
  1338                           ;main.c: 203:                         sendByte(0x05, 0x03, truck[i]);
  1339  015B  3003               	movlw	3
  1340  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1341  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1342  015E  00C0               	movwf	??_main
  1343  015F  0840               	movf	??_main,w
  1344  0160  00B8               	movwf	sendByte@byte1
  1345  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1347  0163  0866               	movf	main@i^(0+128),w
  1348  0164  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1349  0165  0084               	movwf	4
  1350  0166  1383               	bcf	3,7	;select IRP bank1
  1351  0167  0800               	movf	0,w
  1352  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1354  016A  00C1               	movwf	??_main+1
  1355  016B  0841               	movf	??_main+1,w
  1356  016C  00B9               	movwf	sendByte@valore
  1357  016D  3005               	movlw	5
  1358  016E  120A  158A  2319  120A  118A  	fcall	_sendByte
  1359                           
  1360                           ;main.c: 204:                         break;
  1361  0173  2A18               	goto	l3583
  1362  0174                     l3575:	
  1363                           
  1364                           ;main.c: 206:                         sendByte(0x07, 0x01, motorcycle[i]);
  1365  0174  01B8               	clrf	sendByte@byte1
  1366  0175  0AB8               	incf	sendByte@byte1,f
  1367  0176  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0177  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0178  0866               	movf	main@i^(0+128),w
  1370  0179  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1371  017A  0084               	movwf	4
  1372  017B  1383               	bcf	3,7	;select IRP bank0
  1373  017C  0800               	movf	0,w
  1374  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1375  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1376  017F  00C0               	movwf	??_main
  1377  0180  0840               	movf	??_main,w
  1378  0181  00B9               	movwf	sendByte@valore
  1379  0182  3007               	movlw	7
  1380  0183  120A  158A  2319  120A  118A  	fcall	_sendByte
  1381                           
  1382                           ;main.c: 207:                         sendByte(0x07, 0x02, car[i]);
  1383  0188  3002               	movlw	2
  1384  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1385  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1386  018B  00C0               	movwf	??_main
  1387  018C  0840               	movf	??_main,w
  1388  018D  00B8               	movwf	sendByte@byte1
  1389  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1390  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1391  0190  0866               	movf	main@i^(0+128),w
  1392  0191  3ED3               	addlw	(low (_car| 0))& (0+255)
  1393  0192  0084               	movwf	4
  1394  0193  1383               	bcf	3,7	;select IRP bank1
  1395  0194  0800               	movf	0,w
  1396  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0197  00C1               	movwf	??_main+1
  1399  0198  0841               	movf	??_main+1,w
  1400  0199  00B9               	movwf	sendByte@valore
  1401  019A  3007               	movlw	7
  1402  019B  120A  158A  2319  120A  118A  	fcall	_sendByte
  1403                           
  1404                           ;main.c: 208:                         sendByte(0x07, 0x03, truck[i]);
  1405  01A0  3003               	movlw	3
  1406  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1407  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1408  01A3  00C0               	movwf	??_main
  1409  01A4  0840               	movf	??_main,w
  1410  01A5  00B8               	movwf	sendByte@byte1
  1411  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1412  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1413  01A8  0866               	movf	main@i^(0+128),w
  1414  01A9  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1415  01AA  0084               	movwf	4
  1416  01AB  1383               	bcf	3,7	;select IRP bank1
  1417  01AC  0800               	movf	0,w
  1418  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1419  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1420  01AF  00C1               	movwf	??_main+1
  1421  01B0  0841               	movf	??_main+1,w
  1422  01B1  00B9               	movwf	sendByte@valore
  1423  01B2  3007               	movlw	7
  1424  01B3  120A  158A  2319  120A  118A  	fcall	_sendByte
  1425                           
  1426                           ;main.c: 209:                         break;
  1427  01B8  2A18               	goto	l3583
  1428  01B9                     l3577:	
  1429                           
  1430                           ;main.c: 211:                         sendByte(0x09, 0x01, motorcycle[i]);
  1431  01B9  01B8               	clrf	sendByte@byte1
  1432  01BA  0AB8               	incf	sendByte@byte1,f
  1433  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1434  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1435  01BD  0866               	movf	main@i^(0+128),w
  1436  01BE  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1437  01BF  0084               	movwf	4
  1438  01C0  1383               	bcf	3,7	;select IRP bank0
  1439  01C1  0800               	movf	0,w
  1440  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1441  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1442  01C4  00C0               	movwf	??_main
  1443  01C5  0840               	movf	??_main,w
  1444  01C6  00B9               	movwf	sendByte@valore
  1445  01C7  3009               	movlw	9
  1446  01C8  120A  158A  2319  120A  118A  	fcall	_sendByte
  1447                           
  1448                           ;main.c: 212:                         sendByte(0x09, 0x02, car[i]);
  1449  01CD  3002               	movlw	2
  1450  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1451  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1452  01D0  00C0               	movwf	??_main
  1453  01D1  0840               	movf	??_main,w
  1454  01D2  00B8               	movwf	sendByte@byte1
  1455  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1456  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1457  01D5  0866               	movf	main@i^(0+128),w
  1458  01D6  3ED3               	addlw	(low (_car| 0))& (0+255)
  1459  01D7  0084               	movwf	4
  1460  01D8  1383               	bcf	3,7	;select IRP bank1
  1461  01D9  0800               	movf	0,w
  1462  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1463  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1464  01DC  00C1               	movwf	??_main+1
  1465  01DD  0841               	movf	??_main+1,w
  1466  01DE  00B9               	movwf	sendByte@valore
  1467  01DF  3009               	movlw	9
  1468  01E0  120A  158A  2319  120A  118A  	fcall	_sendByte
  1469                           
  1470                           ;main.c: 213:                         sendByte(0x09, 0x03, truck[i]);
  1471  01E5  3003               	movlw	3
  1472  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1473  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1474  01E8  00C0               	movwf	??_main
  1475  01E9  0840               	movf	??_main,w
  1476  01EA  00B8               	movwf	sendByte@byte1
  1477  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1478  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1479  01ED  0866               	movf	main@i^(0+128),w
  1480  01EE  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1481  01EF  0084               	movwf	4
  1482  01F0  1383               	bcf	3,7	;select IRP bank1
  1483  01F1  0800               	movf	0,w
  1484  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1485  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1486  01F4  00C1               	movwf	??_main+1
  1487  01F5  0841               	movf	??_main+1,w
  1488  01F6  00B9               	movwf	sendByte@valore
  1489  01F7  3009               	movlw	9
  1490  01F8  120A  158A  2319  120A  118A  	fcall	_sendByte
  1491                           
  1492                           ;main.c: 214:                         break;
  1493  01FD  2A18               	goto	l3583
  1494  01FE                     l3581:	
  1495  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  1496  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  1497  0200  0866               	movf	main@i^(0+128),w
  1498  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0203  00C0               	movwf	??_main
  1501  0204  01C1               	clrf	??_main+1
  1502                           
  1503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1504                           ; Switch size 1, requested type "simple"
  1505                           ; Number of cases is 1, Range of values is 0 to 0
  1506                           ; switch strategies available:
  1507                           ; Name         Instructions Cycles
  1508                           ; simple_byte            4     3 (average)
  1509                           ; direct_byte           11     8 (fixed)
  1510                           ; jumptable            260     6 (fixed)
  1511                           ;	Chosen strategy is simple_byte
  1512  0205  0841               	movf	??_main+1,w
  1513  0206  3A00               	xorlw	0	; case 0
  1514  0207  1903               	skipnz
  1515  0208  2A0A               	goto	l3941
  1516  0209  2A18               	goto	l3583
  1517  020A                     l3941:	
  1518                           
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 4, Range of values is 0 to 3
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte           13     7 (average)
  1524                           ; direct_byte           20     8 (fixed)
  1525                           ; jumptable            260     6 (fixed)
  1526                           ;	Chosen strategy is simple_byte
  1527  020A  0840               	movf	??_main,w
  1528  020B  3A00               	xorlw	0	; case 0
  1529  020C  1903               	skipnz
  1530  020D  28EA               	goto	l3571
  1531  020E  3A01               	xorlw	1	; case 1
  1532  020F  1903               	skipnz
  1533  0210  292F               	goto	l3573
  1534  0211  3A03               	xorlw	3	; case 2
  1535  0212  1903               	skipnz
  1536  0213  2974               	goto	l3575
  1537  0214  3A01               	xorlw	1	; case 3
  1538  0215  1903               	skipnz
  1539  0216  29B9               	goto	l3577
  1540  0217  2A18               	goto	l3583
  1541  0218                     l3583:	
  1542                           
  1543                           ;main.c: 216:                 }
  1544  0218  3001               	movlw	1
  1545  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1546  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1547  021B  00C0               	movwf	??_main
  1548  021C  0840               	movf	??_main,w
  1549  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1550  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1551  021F  07E6               	addwf	main@i^(0+128),f
  1552  0220                     l3585:	
  1553  0220  3004               	movlw	4
  1554  0221  0266               	subwf	main@i^(0+128),w
  1555  0222  1C03               	skipc
  1556  0223  2A25               	goto	u3071
  1557  0224  2A26               	goto	u3070
  1558  0225                     u3071:	
  1559  0225  2885               	goto	l3557
  1560  0226                     u3070:	
  1561  0226                     l3587:	
  1562                           
  1563                           ;main.c: 218:                 for (int i = 0; i < 4; i++)
  1564  0226  01E2               	clrf	main@i_480^(0+128)
  1565  0227  01E3               	clrf	(main@i_480+1)^(0+128)
  1566  0228                     l3593:	
  1567                           
  1568                           ;main.c: 219:                 {;main.c: 220:                     motorcycle[i] = 0;
  1569  0228  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0229  1303               	bcf	3,6	;RP1=0, select bank1
  1571  022A  0862               	movf	main@i_480^(0+128),w
  1572  022B  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1573  022C  0084               	movwf	4
  1574  022D  1383               	bcf	3,7	;select IRP bank0
  1575  022E  0180               	clrf	0
  1576                           
  1577                           ;main.c: 221:                     car[i] = 0;
  1578  022F  0862               	movf	main@i_480^(0+128),w
  1579  0230  3ED3               	addlw	(low (_car| 0))& (0+255)
  1580  0231  0084               	movwf	4
  1581  0232  0180               	clrf	0
  1582                           
  1583                           ;main.c: 222:                     truck[i] = 0;
  1584  0233  0862               	movf	main@i_480^(0+128),w
  1585  0234  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1586  0235  0084               	movwf	4
  1587  0236  0180               	clrf	0
  1588  0237                     l3595:	
  1589                           
  1590                           ;main.c: 223:                 }
  1591  0237  3001               	movlw	1
  1592  0238  07E2               	addwf	main@i_480^(0+128),f
  1593  0239  1803               	skipnc
  1594  023A  0AE3               	incf	(main@i_480+1)^(0+128),f
  1595  023B  3000               	movlw	0
  1596  023C  07E3               	addwf	(main@i_480+1)^(0+128),f
  1597  023D                     l3597:	
  1598  023D  0863               	movf	(main@i_480+1)^(0+128),w
  1599  023E  3A80               	xorlw	128
  1600  023F  00FF               	movwf	btemp+1
  1601  0240  3080               	movlw	128
  1602  0241  027F               	subwf	btemp+1,w
  1603  0242  1D03               	skipz
  1604  0243  2A46               	goto	u3085
  1605  0244  3004               	movlw	4
  1606  0245  0262               	subwf	main@i_480^(0+128),w
  1607  0246                     u3085:	
  1608  0246  1C03               	skipc
  1609  0247  2A49               	goto	u3081
  1610  0248  2A4A               	goto	u3080
  1611  0249                     u3081:	
  1612  0249  2A28               	goto	l3593
  1613  024A                     u3080:	
  1614  024A                     l3599:	
  1615                           
  1616                           ;main.c: 225:                 for (unsigned char i = 0; i < 5; i++)
  1617  024A  1683               	bsf	3,5	;RP0=1, select bank1
  1618  024B  1303               	bcf	3,6	;RP1=0, select bank1
  1619  024C  01E0               	clrf	main@i_481^(0+128)
  1620  024D                     l3605:	
  1621                           
  1622                           ;main.c: 226:                 {;main.c: 227:                     dataFromGateway[i] = 0;
  1623  024D  0860               	movf	main@i_481^(0+128),w
  1624  024E  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1625  024F  0084               	movwf	4
  1626  0250  1383               	bcf	3,7	;select IRP bank1
  1627  0251  0180               	clrf	0
  1628  0252                     l3607:	
  1629                           
  1630                           ;main.c: 228:                 }
  1631  0252  3001               	movlw	1
  1632  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0255  00C0               	movwf	??_main
  1635  0256  0840               	movf	??_main,w
  1636  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1637  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1638  0259  07E0               	addwf	main@i_481^(0+128),f
  1639  025A                     l3609:	
  1640  025A  3005               	movlw	5
  1641  025B  0260               	subwf	main@i_481^(0+128),w
  1642  025C  1C03               	skipc
  1643  025D  2A5F               	goto	u3091
  1644  025E  2A60               	goto	u3090
  1645  025F                     u3091:	
  1646  025F  2A4D               	goto	l3605
  1647  0260                     u3090:	
  1648  0260  2B56               	goto	l241
  1649  0261                     l242:	
  1650                           ;main.c: 230:             case 0x0A:
  1651                           
  1652                           
  1653                           ;main.c: 231:                 readGatewayDone.Bit = 1;
  1654  0261  1459               	bsf	_readGatewayDone,0
  1655                           
  1656                           ;main.c: 232:                 readGateway.Bit = 0;
  1657  0262  1058               	bcf	_readGateway,0
  1658  0263                     l3611:	
  1659                           
  1660                           ;main.c: 234:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1661  0263  3000               	movlw	0
  1662  0264  120A  158A  22CC  120A  118A  	fcall	_ADC_Read
  1663  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1664  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1665  026B  0824               	movf	?_ADC_Read,w
  1666  026C  00C0               	movwf	??_main
  1667  026D  0825               	movf	?_ADC_Read+1,w
  1668  026E  00C1               	movwf	??_main+1
  1669  026F  0D41               	rlf	??_main+1,w
  1670  0270  0CC1               	rrf	??_main+1,f
  1671  0271  0CC0               	rrf	??_main,f
  1672  0272  0D41               	rlf	??_main+1,w
  1673  0273  0CC1               	rrf	??_main+1,f
  1674  0274  0CC0               	rrf	??_main,f
  1675  0275  0840               	movf	??_main,w
  1676  0276  00B4               	movwf	map@x
  1677  0277  0841               	movf	??_main+1,w
  1678  0278  00B5               	movwf	map@x+1
  1679  0279  3000               	movlw	0
  1680  027A  00B6               	movwf	map@in_min
  1681  027B  00B7               	movwf	map@in_min+1
  1682  027C  30FF               	movlw	255
  1683  027D  00B8               	movwf	map@in_max
  1684  027E  3000               	movlw	0
  1685  027F  00B9               	movwf	map@in_max+1
  1686  0280  30EC               	movlw	236
  1687  0281  00BA               	movwf	map@out_min
  1688  0282  30FF               	movlw	255
  1689  0283  00BB               	movwf	map@out_min+1
  1690  0284  303C               	movlw	60
  1691  0285  00BC               	movwf	map@out_max
  1692  0286  3000               	movlw	0
  1693  0287  00BD               	movwf	map@out_max+1
  1694  0288  120A  158A  234A  120A  118A  	fcall	_map
  1695  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1696  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1697  028F  0834               	movf	?_map,w
  1698  0290  00C2               	movwf	??_main+2
  1699  0291  0842               	movf	??_main+2,w
  1700  0292  00D1               	movwf	_temp
  1701                           
  1702                           ;main.c: 235:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1703  0293  3001               	movlw	1
  1704  0294  120A  158A  22CC  120A  118A  	fcall	_ADC_Read
  1705  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1706  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1707  029B  0824               	movf	?_ADC_Read,w
  1708  029C  00C0               	movwf	??_main
  1709  029D  0825               	movf	?_ADC_Read+1,w
  1710  029E  00C1               	movwf	??_main+1
  1711  029F  0D41               	rlf	??_main+1,w
  1712  02A0  0CC1               	rrf	??_main+1,f
  1713  02A1  0CC0               	rrf	??_main,f
  1714  02A2  0D41               	rlf	??_main+1,w
  1715  02A3  0CC1               	rrf	??_main+1,f
  1716  02A4  0CC0               	rrf	??_main,f
  1717  02A5  0840               	movf	??_main,w
  1718  02A6  00B4               	movwf	map@x
  1719  02A7  0841               	movf	??_main+1,w
  1720  02A8  00B5               	movwf	map@x+1
  1721  02A9  3000               	movlw	0
  1722  02AA  00B6               	movwf	map@in_min
  1723  02AB  00B7               	movwf	map@in_min+1
  1724  02AC  30FF               	movlw	255
  1725  02AD  00B8               	movwf	map@in_max
  1726  02AE  3000               	movlw	0
  1727  02AF  00B9               	movwf	map@in_max+1
  1728  02B0  3000               	movlw	0
  1729  02B1  00BA               	movwf	map@out_min
  1730  02B2  00BB               	movwf	map@out_min+1
  1731  02B3  3064               	movlw	100
  1732  02B4  00BC               	movwf	map@out_max
  1733  02B5  3000               	movlw	0
  1734  02B6  00BD               	movwf	map@out_max+1
  1735  02B7  120A  158A  234A  120A  118A  	fcall	_map
  1736  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1737  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1738  02BE  0834               	movf	?_map,w
  1739  02BF  00C2               	movwf	??_main+2
  1740  02C0  0842               	movf	??_main+2,w
  1741  02C1  00D0               	movwf	_umidita
  1742                           
  1743                           ;main.c: 236:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1744  02C2  3005               	movlw	5
  1745  02C3  120A  158A  22CC  120A  118A  	fcall	_ADC_Read
  1746  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1747  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1748  02CA  0824               	movf	?_ADC_Read,w
  1749  02CB  00C0               	movwf	??_main
  1750  02CC  0825               	movf	?_ADC_Read+1,w
  1751  02CD  00C1               	movwf	??_main+1
  1752  02CE  0D41               	rlf	??_main+1,w
  1753  02CF  0CC1               	rrf	??_main+1,f
  1754  02D0  0CC0               	rrf	??_main,f
  1755  02D1  0D41               	rlf	??_main+1,w
  1756  02D2  0CC1               	rrf	??_main+1,f
  1757  02D3  0CC0               	rrf	??_main,f
  1758  02D4  0840               	movf	??_main,w
  1759  02D5  00B4               	movwf	map@x
  1760  02D6  0841               	movf	??_main+1,w
  1761  02D7  00B5               	movwf	map@x+1
  1762  02D8  3000               	movlw	0
  1763  02D9  00B6               	movwf	map@in_min
  1764  02DA  00B7               	movwf	map@in_min+1
  1765  02DB  30FF               	movlw	255
  1766  02DC  00B8               	movwf	map@in_max
  1767  02DD  3000               	movlw	0
  1768  02DE  00B9               	movwf	map@in_max+1
  1769  02DF  3000               	movlw	0
  1770  02E0  00BA               	movwf	map@out_min
  1771  02E1  00BB               	movwf	map@out_min+1
  1772  02E2  3064               	movlw	100
  1773  02E3  00BC               	movwf	map@out_max
  1774  02E4  3000               	movlw	0
  1775  02E5  00BD               	movwf	map@out_max+1
  1776  02E6  120A  158A  234A  120A  118A  	fcall	_map
  1777  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1778  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1779  02ED  0834               	movf	?_map,w
  1780  02EE  00C2               	movwf	??_main+2
  1781  02EF  0842               	movf	??_main+2,w
  1782  02F0  00CF               	movwf	_pressione
  1783  02F1                     l3613:	
  1784                           
  1785                           ;main.c: 237:                 sendByte(0x02, 0x00, temp);
  1786  02F1  01B8               	clrf	sendByte@byte1
  1787  02F2  0851               	movf	_temp,w
  1788  02F3  00C0               	movwf	??_main
  1789  02F4  0840               	movf	??_main,w
  1790  02F5  00B9               	movwf	sendByte@valore
  1791  02F6  3002               	movlw	2
  1792  02F7  120A  158A  2319  120A  118A  	fcall	_sendByte
  1793  02FC                     l3615:	
  1794                           
  1795                           ;main.c: 238:                 sendByte(0x04, 0x00, umidita);
  1796  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1797  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1798  02FE  01B8               	clrf	sendByte@byte1
  1799  02FF  0850               	movf	_umidita,w
  1800  0300  00C0               	movwf	??_main
  1801  0301  0840               	movf	??_main,w
  1802  0302  00B9               	movwf	sendByte@valore
  1803  0303  3004               	movlw	4
  1804  0304  120A  158A  2319  120A  118A  	fcall	_sendByte
  1805  0309                     l3617:	
  1806                           
  1807                           ;main.c: 239:                 sendByte(0x06, 0x00, pressione);
  1808  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1809  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1810  030B  01B8               	clrf	sendByte@byte1
  1811  030C  084F               	movf	_pressione,w
  1812  030D  00C0               	movwf	??_main
  1813  030E  0840               	movf	??_main,w
  1814  030F  00B9               	movwf	sendByte@valore
  1815  0310  3006               	movlw	6
  1816  0311  120A  158A  2319  120A  118A  	fcall	_sendByte
  1817  0316                     l3619:	
  1818                           
  1819                           ;main.c: 241:                 for (unsigned char i = 0; i < 5; i++)
  1820  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0318  01E1               	clrf	main@i_483^(0+128)
  1823  0319                     l3621:	
  1824  0319  3005               	movlw	5
  1825  031A  0261               	subwf	main@i_483^(0+128),w
  1826  031B  1C03               	skipc
  1827  031C  2B1E               	goto	u3101
  1828  031D  2B1F               	goto	u3100
  1829  031E                     u3101:	
  1830  031E  2B20               	goto	l3625
  1831  031F                     u3100:	
  1832  031F  2B56               	goto	l241
  1833  0320                     l3625:	
  1834                           
  1835                           ;main.c: 242:                 {;main.c: 243:                     dataFromGateway[i] = 0;
  1836  0320  0861               	movf	main@i_483^(0+128),w
  1837  0321  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1838  0322  0084               	movwf	4
  1839  0323  1383               	bcf	3,7	;select IRP bank1
  1840  0324  0180               	clrf	0
  1841  0325                     l3627:	
  1842                           
  1843                           ;main.c: 244:                 }
  1844  0325  3001               	movlw	1
  1845  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0328  00C0               	movwf	??_main
  1848  0329  0840               	movf	??_main,w
  1849  032A  1683               	bsf	3,5	;RP0=1, select bank1
  1850  032B  1303               	bcf	3,6	;RP1=0, select bank1
  1851  032C  07E1               	addwf	main@i_483^(0+128),f
  1852  032D  2B19               	goto	l3621
  1853  032E                     l3631:	
  1854                           
  1855                           ;main.c: 248:                 if (timerReadFromGateway >= 4)
  1856  032E  3004               	movlw	4
  1857  032F  0252               	subwf	_timerReadFromGateway,w
  1858  0330  1C03               	skipc
  1859  0331  2B33               	goto	u3111
  1860  0332  2B34               	goto	u3110
  1861  0333                     u3111:	
  1862  0333  2B37               	goto	l3635
  1863  0334                     u3110:	
  1864  0334                     l3633:	
  1865                           
  1866                           ;main.c: 249:                 {;main.c: 250:                     readGatewayDone.Bit = 1
      +                          ;
  1867  0334  1459               	bsf	_readGatewayDone,0
  1868                           
  1869                           ;main.c: 251:                     readGatewayDone.Timeout = 1;
  1870  0335  14D9               	bsf	_readGatewayDone,1
  1871                           
  1872                           ;main.c: 252:                     readGateway.Bit = 0;
  1873  0336  1058               	bcf	_readGateway,0
  1874  0337                     l3635:	
  1875                           
  1876                           ;main.c: 255:                 if (dataFromGatewayIndex >= 15)
  1877  0337  300F               	movlw	15
  1878  0338  0253               	subwf	_dataFromGatewayIndex,w
  1879  0339  1C03               	skipc
  1880  033A  2B3C               	goto	u3121
  1881  033B  2B3D               	goto	u3120
  1882  033C                     u3121:	
  1883  033C  2B56               	goto	l241
  1884  033D                     u3120:	
  1885  033D                     l3637:	
  1886                           
  1887                           ;main.c: 256:                 {;main.c: 257:                     readGatewayDone.Bit = 1
      +                          ;
  1888  033D  1459               	bsf	_readGatewayDone,0
  1889                           
  1890                           ;main.c: 258:                     readGatewayDone.Timeout = 0;
  1891  033E  10D9               	bcf	_readGatewayDone,1
  1892                           
  1893                           ;main.c: 259:                     readGateway.Bit = 0;
  1894  033F  1058               	bcf	_readGateway,0
  1895  0340  2B56               	goto	l241
  1896  0341                     l3641:	
  1897  0341  1683               	bsf	3,5	;RP0=1, select bank1
  1898  0342  1303               	bcf	3,6	;RP1=0, select bank1
  1899  0343  0824               	movf	_dataFromGateway^(0+128),w
  1900  0344  397F               	andlw	127
  1901  0345  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0346  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0347  00C0               	movwf	??_main
  1904  0348  01C1               	clrf	??_main+1
  1905                           
  1906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1907                           ; Switch size 1, requested type "simple"
  1908                           ; Number of cases is 1, Range of values is 0 to 0
  1909                           ; switch strategies available:
  1910                           ; Name         Instructions Cycles
  1911                           ; simple_byte            4     3 (average)
  1912                           ; direct_byte           11     8 (fixed)
  1913                           ; jumptable            260     6 (fixed)
  1914                           ;	Chosen strategy is simple_byte
  1915  0349  0841               	movf	??_main+1,w
  1916  034A  3A00               	xorlw	0	; case 0
  1917  034B  1903               	skipnz
  1918  034C  2B4E               	goto	l3943
  1919  034D  2B2E               	goto	l3631
  1920  034E                     l3943:	
  1921                           
  1922                           ; Switch size 1, requested type "simple"
  1923                           ; Number of cases is 2, Range of values is 8 to 10
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte            7     4 (average)
  1927                           ; direct_byte           20    11 (fixed)
  1928                           ; jumptable            263     9 (fixed)
  1929                           ;	Chosen strategy is simple_byte
  1930  034E  0840               	movf	??_main,w
  1931  034F  3A08               	xorlw	8	; case 8
  1932  0350  1903               	skipnz
  1933  0351  2880               	goto	l225
  1934  0352  3A02               	xorlw	2	; case 10
  1935  0353  1903               	skipnz
  1936  0354  2A61               	goto	l242
  1937  0355  2B2E               	goto	l3631
  1938  0356                     l241:	
  1939                           
  1940                           ;main.c: 265:             if (readGatewayDone.Bit)
  1941  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0357  1C59               	btfss	_readGatewayDone,0
  1943  0358  2B5A               	goto	u3131
  1944  0359  2B5B               	goto	u3130
  1945  035A                     u3131:	
  1946  035A  2B6F               	goto	l3655
  1947  035B                     u3130:	
  1948  035B                     l3643:	
  1949                           
  1950                           ;main.c: 266:             {;main.c: 268:                 readGateway.Bit = 0;
  1951  035B  1058               	bcf	_readGateway,0
  1952  035C                     l3645:	
  1953                           
  1954                           ;main.c: 269:                 dataFromGatewayIndex = 0;
  1955  035C  01D3               	clrf	_dataFromGatewayIndex
  1956  035D                     l3647:	
  1957                           
  1958                           ;main.c: 270:                 readGatewayDone.Bit = 0;
  1959  035D  1059               	bcf	_readGatewayDone,0
  1960                           
  1961                           ;main.c: 271:                 timerReadFromGateway = 0;
  1962  035E  01D2               	clrf	_timerReadFromGateway
  1963  035F                     l3649:	
  1964                           
  1965                           ;main.c: 274:                 if (readGatewayDone.Timeout)
  1966  035F  1CD9               	btfss	_readGatewayDone,1
  1967  0360  2B62               	goto	u3141
  1968  0361  2B63               	goto	u3140
  1969  0362                     u3141:	
  1970  0362  2B65               	goto	l3653
  1971  0363                     u3140:	
  1972  0363                     l3651:	
  1973                           
  1974                           ;main.c: 275:                 {;main.c: 276:                     readGatewayDone.Timeout
      +                           = 0;
  1975  0363  10D9               	bcf	_readGatewayDone,1
  1976                           
  1977                           ;main.c: 277:                 }
  1978  0364  2B6F               	goto	l3655
  1979  0365                     l3653:	
  1980                           
  1981                           ;main.c: 280:                 {;main.c: 282:                     SetReceivedTimes(dataFr
      +                          omGateway, Semafori);
  1982  0365  3064               	movlw	(low (_Semafori| 0))& (0+255)
  1983  0366  00C0               	movwf	??_main
  1984  0367  0840               	movf	??_main,w
  1985  0368  00AC               	movwf	SetReceivedTimes@_semafori
  1986  0369  30A4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1987  036A  120A  158A  2635  120A  118A  	fcall	_SetReceivedTimes
  1988  036F                     l3655:	
  1989                           
  1990                           ;main.c: 288:             if (secondPassed.Bit && cycled.Bit)
  1991  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0371  1C57               	btfss	_secondPassed,0
  1994  0372  2B74               	goto	u3151
  1995  0373  2B75               	goto	u3150
  1996  0374                     u3151:	
  1997  0374  2C68               	goto	l3689
  1998  0375                     u3150:	
  1999  0375                     l3657:	
  2000  0375  1C56               	btfss	_cycled,0
  2001  0376  2B78               	goto	u3161
  2002  0377  2B79               	goto	u3160
  2003  0378                     u3161:	
  2004  0378  2C68               	goto	l3689
  2005  0379                     u3160:	
  2006  0379                     l3659:	
  2007                           
  2008                           ;main.c: 289:             {;main.c: 290:                 for (unsigned char i = 0; i < n
      +                          _semafori; i++)
  2009  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2010  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2011  037B  01E5               	clrf	main@i_485^(0+128)
  2012  037C                     l3661:	
  2013  037C  3002               	movlw	2
  2014  037D  0265               	subwf	main@i_485^(0+128),w
  2015  037E  1C03               	skipc
  2016  037F  2B81               	goto	u3171
  2017  0380  2B82               	goto	u3170
  2018  0381                     u3171:	
  2019  0381  2B83               	goto	l3665
  2020  0382                     u3170:	
  2021  0382  2C68               	goto	l3689
  2022  0383                     l3665:	
  2023                           
  2024                           ;main.c: 291:                 {;main.c: 292:                     if ((*Semafori[i]).time
      +                          s[0] != 0)
  2025  0383  0865               	movf	main@i_485^(0+128),w
  2026  0384  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2027  0385  0084               	movwf	4
  2028  0386  1383               	bcf	3,7	;select IRP bank0
  2029  0387  0800               	movf	0,w
  2030  0388  0084               	movwf	4
  2031  0389  0800               	movf	0,w
  2032  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2033  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2034  038C  00C0               	movwf	??_main
  2035  038D  0A84               	incf	4,f
  2036  038E  0800               	movf	0,w
  2037  038F  00C1               	movwf	??_main+1
  2038  0390  0840               	movf	??_main,w
  2039  0391  0441               	iorwf	??_main+1,w
  2040  0392  1903               	btfsc	3,2
  2041  0393  2B95               	goto	u3181
  2042  0394  2B96               	goto	u3180
  2043  0395                     u3181:	
  2044  0395  2C5F               	goto	l3685
  2045  0396                     u3180:	
  2046  0396                     l3667:	
  2047                           
  2048                           ;main.c: 293:                     {;main.c: 294:                         time[i]++;
  2049  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2051  0398  0865               	movf	main@i_485^(0+128),w
  2052  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2053  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2054  039B  00C0               	movwf	??_main
  2055  039C  0740               	addwf	??_main,w
  2056  039D  3E49               	addlw	(low (_time| 0))& (0+255)
  2057  039E  0084               	movwf	4
  2058  039F  3001               	movlw	1
  2059  03A0  0780               	addwf	0,f
  2060  03A1  0A84               	incf	4,f
  2061  03A2  1803               	skipnc
  2062  03A3  0A80               	incf	0,f
  2063                           
  2064                           ;main.c: 295:                         unsigned char lux_select = (*Semafori[i]).lux_sele
      +                          ct;
  2065  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2066  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  2067  03A6  0865               	movf	main@i_485^(0+128),w
  2068  03A7  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2069  03A8  0084               	movwf	4
  2070  03A9  0800               	movf	0,w
  2071  03AA  3E0C               	addlw	12
  2072  03AB  0084               	movwf	4
  2073  03AC  0800               	movf	0,w
  2074  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2075  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2076  03AF  00C0               	movwf	??_main
  2077  03B0  0840               	movf	??_main,w
  2078  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2079  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2080  03B3  00E4               	movwf	main@lux_select^(0+128)
  2081                           
  2082                           ;main.c: 297:                         if ((*Semafori[i]).times[lux_select] - time[i] < 0
      +                          )
  2083  03B4  0865               	movf	main@i_485^(0+128),w
  2084  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2085  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2086  03B7  00C0               	movwf	??_main
  2087  03B8  0740               	addwf	??_main,w
  2088  03B9  3E49               	addlw	(low (_time| 0))& (0+255)
  2089  03BA  0084               	movwf	4
  2090  03BB  0800               	movf	0,w
  2091  03BC  00C1               	movwf	??_main+1
  2092  03BD  0A84               	incf	4,f
  2093  03BE  0800               	movf	0,w
  2094  03BF  00C2               	movwf	??_main+2
  2095  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2096  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2097  03C2  0865               	movf	main@i_485^(0+128),w
  2098  03C3  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2099  03C4  0084               	movwf	4
  2100  03C5  0864               	movf	main@lux_select^(0+128),w
  2101  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2102  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2103  03C8  00C3               	movwf	??_main+3
  2104  03C9  0743               	addwf	??_main+3,w
  2105  03CA  0700               	addwf	0,w
  2106  03CB  00C4               	movwf	??_main+4
  2107  03CC  0844               	movf	??_main+4,w
  2108  03CD  0084               	movwf	4
  2109  03CE  0800               	movf	0,w
  2110  03CF  00C5               	movwf	??_main+5
  2111  03D0  0A84               	incf	4,f
  2112  03D1  0800               	movf	0,w
  2113  03D2  00C6               	movwf	??_main+6
  2114  03D3  0841               	movf	??_main+1,w
  2115  03D4  0245               	subwf	??_main+5,w
  2116  03D5  00C7               	movwf	??_main+7
  2117  03D6  0842               	movf	??_main+2,w
  2118  03D7  1C03               	skipc
  2119  03D8  0A42               	incf	??_main+2,w
  2120  03D9  0246               	subwf	??_main+6,w
  2121  03DA  00C8               	movwf	??_main+8
  2122  03DB  1FC8               	btfss	??_main+8,7
  2123  03DC  2BDE               	goto	u3191
  2124  03DD  2BDF               	goto	u3190
  2125  03DE                     u3191:	
  2126  03DE  2C05               	goto	l255
  2127  03DF                     u3190:	
  2128  03DF                     l3669:	
  2129                           
  2130                           ;main.c: 298:                         {;main.c: 299:                             lux_sel
      +                          ect++;
  2131  03DF  3001               	movlw	1
  2132  03E0  00C0               	movwf	??_main
  2133  03E1  0840               	movf	??_main,w
  2134  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2135  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2136  03E4  07E4               	addwf	main@lux_select^(0+128),f
  2137  03E5                     l3671:	
  2138                           
  2139                           ;main.c: 300:                             time[i] = 1;
  2140  03E5  0865               	movf	main@i_485^(0+128),w
  2141  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2142  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2143  03E8  00C0               	movwf	??_main
  2144  03E9  0740               	addwf	??_main,w
  2145  03EA  3E49               	addlw	(low (_time| 0))& (0+255)
  2146  03EB  0084               	movwf	4
  2147  03EC  3001               	movlw	1
  2148  03ED  0080               	movwf	0
  2149  03EE  0A84               	incf	4,f
  2150  03EF  3000               	movlw	0
  2151  03F0  0080               	movwf	0
  2152  03F1                     l3673:	
  2153                           
  2154                           ;main.c: 302:                             if (lux_select >= 3)
  2155  03F1  3003               	movlw	3
  2156  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2157  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2158  03F4  0264               	subwf	main@lux_select^(0+128),w
  2159  03F5  1C03               	skipc
  2160  03F6  2BF8               	goto	u3201
  2161  03F7  2BF9               	goto	u3200
  2162  03F8                     u3201:	
  2163  03F8  2C05               	goto	l255
  2164  03F9                     u3200:	
  2165  03F9                     l3675:	
  2166                           
  2167                           ;main.c: 303:                             {;main.c: 304:                                
      +                           lux_select = 0;
  2168  03F9  01E4               	clrf	main@lux_select^(0+128)
  2169  03FA                     l3677:	
  2170                           
  2171                           ;main.c: 306:                                 if (i == 0)
  2172  03FA  0865               	movf	main@i_485^(0+128),w
  2173  03FB  1D03               	btfss	3,2
  2174  03FC  2BFE               	goto	u3211
  2175  03FD  2BFF               	goto	u3210
  2176  03FE                     u3211:	
  2177  03FE  2C05               	goto	l255
  2178  03FF                     u3210:	
  2179  03FF                     l3679:	
  2180                           
  2181                           ;main.c: 307:                                 {;main.c: 308:                            
      +                                   UpdateTimes(Semafori);
  2182  03FF  3064               	movlw	(low (_Semafori| 0))& (0+255)
  2183  0400  120A  118A  277E  120A  118A  	fcall	_UpdateTimes
  2184  0405                     l255:	
  2185                           ;main.c: 311:                         }
  2186                           
  2187                           
  2188                           ;main.c: 313:                         luciSemaforo(i, lux_select);
  2189  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2190  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2191  0407  0864               	movf	main@lux_select^(0+128),w
  2192  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2194  040A  00C0               	movwf	??_main
  2195  040B  0840               	movf	??_main,w
  2196  040C  00A4               	movwf	luciSemaforo@lux
  2197  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2198  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2199  040F  0865               	movf	main@i_485^(0+128),w
  2200  0410  120A  158A  24DA  120A  118A  	fcall	_luciSemaforo
  2201  0415                     l3681:	
  2202                           
  2203                           ;main.c: 314:                         (*Semafori[i]).lux_select = lux_select;
  2204  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0417  0864               	movf	main@lux_select^(0+128),w
  2207  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2209  041A  00C0               	movwf	??_main
  2210  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2211  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2212  041D  0865               	movf	main@i_485^(0+128),w
  2213  041E  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2214  041F  0084               	movwf	4
  2215  0420  1383               	bcf	3,7	;select IRP bank0
  2216  0421  0800               	movf	0,w
  2217  0422  3E0C               	addlw	12
  2218  0423  0084               	movwf	4
  2219  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0426  0840               	movf	??_main,w
  2222  0427  0080               	movwf	0
  2223  0428                     l3683:	
  2224                           
  2225                           ;main.c: 315:                         GetDigits(DigitsArr, i, (*Semafori[i]).times[lux_s
      +                          elect] - time[i]);
  2226  0428  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0429  1303               	bcf	3,6	;RP1=0, select bank1
  2228  042A  0865               	movf	main@i_485^(0+128),w
  2229  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2230  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2231  042D  00C0               	movwf	??_main
  2232  042E  0840               	movf	??_main,w
  2233  042F  00B4               	movwf	GetDigits@index
  2234  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2235  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2236  0432  0865               	movf	main@i_485^(0+128),w
  2237  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0435  00C1               	movwf	??_main+1
  2240  0436  0741               	addwf	??_main+1,w
  2241  0437  3E49               	addlw	(low (_time| 0))& (0+255)
  2242  0438  0084               	movwf	4
  2243  0439  0800               	movf	0,w
  2244  043A  00C2               	movwf	??_main+2
  2245  043B  0A84               	incf	4,f
  2246  043C  0800               	movf	0,w
  2247  043D  00C3               	movwf	??_main+3
  2248  043E  1683               	bsf	3,5	;RP0=1, select bank1
  2249  043F  1303               	bcf	3,6	;RP1=0, select bank1
  2250  0440  0865               	movf	main@i_485^(0+128),w
  2251  0441  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2252  0442  0084               	movwf	4
  2253  0443  0864               	movf	main@lux_select^(0+128),w
  2254  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0446  00C4               	movwf	??_main+4
  2257  0447  0744               	addwf	??_main+4,w
  2258  0448  0700               	addwf	0,w
  2259  0449  00C5               	movwf	??_main+5
  2260  044A  0845               	movf	??_main+5,w
  2261  044B  0084               	movwf	4
  2262  044C  0800               	movf	0,w
  2263  044D  00C6               	movwf	??_main+6
  2264  044E  0A84               	incf	4,f
  2265  044F  0800               	movf	0,w
  2266  0450  00C7               	movwf	??_main+7
  2267  0451  0842               	movf	??_main+2,w
  2268  0452  0246               	subwf	??_main+6,w
  2269  0453  00B5               	movwf	GetDigits@Time
  2270  0454  0843               	movf	??_main+3,w
  2271  0455  1C03               	skipc
  2272  0456  0A43               	incf	??_main+3,w
  2273  0457  0247               	subwf	??_main+7,w
  2274  0458  00B6               	movwf	GetDigits@Time+1
  2275  0459  3062               	movlw	(low (_DigitsArr| 0))& (0+255)
  2276  045A  120A  118A  2485  120A  118A  	fcall	_GetDigits
  2277  045F                     l3685:	
  2278                           
  2279                           ;main.c: 317:                 }
  2280  045F  3001               	movlw	1
  2281  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0462  00C0               	movwf	??_main
  2284  0463  0840               	movf	??_main,w
  2285  0464  1683               	bsf	3,5	;RP0=1, select bank1
  2286  0465  1303               	bcf	3,6	;RP1=0, select bank1
  2287  0466  07E5               	addwf	main@i_485^(0+128),f
  2288  0467  2B7C               	goto	l3661
  2289  0468                     l3689:	
  2290                           
  2291                           ;main.c: 320:             ShowDigitsOnDisplay();
  2292  0468  120A  118A  26D1  120A  118A  	fcall	_ShowDigitsOnDisplay
  2293  046D                     l3691:	
  2294                           
  2295                           ;main.c: 326:             if (secondPassed.Bit && cycled.Bit)
  2296  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2297  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2298  046F  1C57               	btfss	_secondPassed,0
  2299  0470  2C72               	goto	u3221
  2300  0471  2C73               	goto	u3220
  2301  0472                     u3221:	
  2302  0472  2C79               	goto	l258
  2303  0473                     u3220:	
  2304  0473                     l3693:	
  2305  0473  1C56               	btfss	_cycled,0
  2306  0474  2C76               	goto	u3231
  2307  0475  2C77               	goto	u3230
  2308  0476                     u3231:	
  2309  0476  2C79               	goto	l258
  2310  0477                     u3230:	
  2311  0477                     l3695:	
  2312                           
  2313                           ;main.c: 327:             {;main.c: 328:                 secondPassed.Bit = 0;
  2314  0477  1057               	bcf	_secondPassed,0
  2315                           
  2316                           ;main.c: 329:                 cycled.Bit = 0;
  2317  0478  1056               	bcf	_cycled,0
  2318  0479                     l258:	
  2319                           ;main.c: 330:             }
  2320                           
  2321                           
  2322                           ;main.c: 331:             if (secondPassed.Bit && !cycled.Bit)
  2323  0479  1C57               	btfss	_secondPassed,0
  2324  047A  2C7C               	goto	u3241
  2325  047B  2C7D               	goto	u3240
  2326  047C                     u3241:	
  2327  047C  2C82               	goto	l260
  2328  047D                     u3240:	
  2329  047D                     l3697:	
  2330  047D  1856               	btfsc	_cycled,0
  2331  047E  2C80               	goto	u3251
  2332  047F  2C81               	goto	u3250
  2333  0480                     u3251:	
  2334  0480  2C82               	goto	l260
  2335  0481                     u3250:	
  2336  0481                     l3699:	
  2337                           
  2338                           ;main.c: 332:             {;main.c: 333:                 cycled.Bit = 1;
  2339  0481  1456               	bsf	_cycled,0
  2340  0482                     l260:	
  2341  0482  120A  118A  2810   	ljmp	start
  2342  0485                     __end_of_main:	
  2343                           
  2344                           	psect	text1
  2345  0B19                     __ptext1:	
  2346 ;; *************** function _sendByte *****************
  2347 ;; Defined at:
  2348 ;;		line 397 in file "main.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  byte0           1    wreg     unsigned char 
  2351 ;;  byte1           1   24[BANK0 ] unsigned char 
  2352 ;;  valore          1   25[BANK0 ] unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  byte0           1   29[BANK0 ] unsigned char 
  2355 ;;  i               1   31[BANK0 ] unsigned char 
  2356 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2357 ;;		 -> BuildByte@txByte(5), 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2367 ;;      Params:         0       2       0       0       0
  2368 ;;      Locals:         0       3       0       0       0
  2369 ;;      Temps:          0       3       0       0       0
  2370 ;;      Totals:         0       8       0       0       0
  2371 ;;Total ram usage:        8 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    4
  2374 ;; This function calls:
  2375 ;;		_BuildByte
  2376 ;;		_UART_TxChar
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _sendByte
  2384  0B19                     _sendByte:	
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2388                           ;sendByte@byte0 stored from wreg
  2389  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0B1B  00BD               	movwf	sendByte@byte0
  2392  0B1C                     l3415:	
  2393                           
  2394                           ;main.c: 397: void sendByte(char byte0, char byte1, char valore);main.c: 398: {;main.c: 
      +                          399:     char *txByte;;main.c: 400:     txByte = BuildByte(byte0, byte1, valore);
  2395  0B1C  0838               	movf	sendByte@byte1,w
  2396  0B1D  00BA               	movwf	??_sendByte
  2397  0B1E  083A               	movf	??_sendByte,w
  2398  0B1F  00A4               	movwf	BuildByte@byte1
  2399  0B20  0839               	movf	sendByte@valore,w
  2400  0B21  00BB               	movwf	??_sendByte+1
  2401  0B22  083B               	movf	??_sendByte+1,w
  2402  0B23  00A5               	movwf	BuildByte@valore
  2403  0B24  083D               	movf	sendByte@byte0,w
  2404  0B25  120A  118A  2552  120A  158A  	fcall	_BuildByte
  2405  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0B2C  00BC               	movwf	??_sendByte+2
  2408  0B2D  083C               	movf	??_sendByte+2,w
  2409  0B2E  00BE               	movwf	sendByte@txByte
  2410  0B2F                     l3417:	
  2411                           
  2412                           ;main.c: 402:     for (unsigned char i = 0; i < 5; i++)
  2413  0B2F  01BF               	clrf	sendByte@i
  2414  0B30                     l3423:	
  2415                           
  2416                           ;main.c: 403:     {;main.c: 404:         UART_TxChar(*(txByte++));
  2417  0B30  083E               	movf	sendByte@txByte,w
  2418  0B31  0084               	movwf	4
  2419  0B32  1383               	bcf	3,7	;select IRP bank0
  2420  0B33  0800               	movf	0,w
  2421  0B34  120A  158A  229B  120A  158A  	fcall	_UART_TxChar
  2422  0B39                     l3425:	
  2423  0B39  3001               	movlw	1
  2424  0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0B3C  00BA               	movwf	??_sendByte
  2427  0B3D  083A               	movf	??_sendByte,w
  2428  0B3E  07BE               	addwf	sendByte@txByte,f
  2429  0B3F                     l3427:	
  2430                           
  2431                           ;main.c: 405:     }
  2432  0B3F  3001               	movlw	1
  2433  0B40  00BA               	movwf	??_sendByte
  2434  0B41  083A               	movf	??_sendByte,w
  2435  0B42  07BF               	addwf	sendByte@i,f
  2436  0B43                     l3429:	
  2437  0B43  3005               	movlw	5
  2438  0B44  023F               	subwf	sendByte@i,w
  2439  0B45  1C03               	skipc
  2440  0B46  2B48               	goto	u2941
  2441  0B47  2B49               	goto	u2940
  2442  0B48                     u2941:	
  2443  0B48  2B30               	goto	l3423
  2444  0B49                     u2940:	
  2445  0B49                     l297:	
  2446  0B49  0008               	return
  2447  0B4A                     __end_of_sendByte:	
  2448                           
  2449                           	psect	text2
  2450  0A9B                     __ptext2:	
  2451 ;; *************** function _UART_TxChar *****************
  2452 ;; Defined at:
  2453 ;;		line 372 in file "main.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  ch              1    wreg     unsigned char 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  ch              1    4[BANK0 ] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2467 ;;      Params:         0       0       0       0       0
  2468 ;;      Locals:         0       1       0       0       0
  2469 ;;      Temps:          0       0       0       0       0
  2470 ;;      Totals:         0       1       0       0       0
  2471 ;;Total ram usage:        1 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    3
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		_sendByte
  2478 ;;		_UART_Write_Text
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _UART_TxChar
  2484  0A9B                     _UART_TxChar:	
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _UART_TxChar: [wreg]
  2488                           ;UART_TxChar@ch stored from wreg
  2489  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  2491  0A9D  00A4               	movwf	UART_TxChar@ch
  2492  0A9E                     l3107:	
  2493  0A9E                     l277:	
  2494                           ;main.c: 375:         ;
  2495                           
  2496                           
  2497                           ;main.c: 374:     while (!TXIF)
  2498  0A9E  1E0C               	btfss	12,4	;volatile
  2499  0A9F  2AA1               	goto	u2431
  2500  0AA0  2AA2               	goto	u2430
  2501  0AA1                     u2431:	
  2502  0AA1  2A9E               	goto	l277
  2503  0AA2                     u2430:	
  2504  0AA2                     l279:	
  2505                           
  2506                           ;main.c: 376:     TXIF = 0;
  2507  0AA2  120C               	bcf	12,4	;volatile
  2508  0AA3                     l3109:	
  2509                           
  2510                           ;main.c: 377:     TXREG = ch;
  2511  0AA3  0824               	movf	UART_TxChar@ch,w
  2512  0AA4  0099               	movwf	25	;volatile
  2513  0AA5                     l280:	
  2514  0AA5  0008               	return
  2515  0AA6                     __end_of_UART_TxChar:	
  2516                           
  2517                           	psect	text3
  2518  0552                     __ptext3:	
  2519 ;; *************** function _BuildByte *****************
  2520 ;; Defined at:
  2521 ;;		line 2 in file "./CustomLib/Serial.h"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  byte0           1    wreg     unsigned char 
  2524 ;;  byte1           1    4[BANK0 ] unsigned char 
  2525 ;;  valore          1    5[BANK0 ] unsigned char 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  byte0           1    8[BANK0 ] unsigned char 
  2528 ;;  y               2   18[BANK0 ] int 
  2529 ;;  y               2   16[BANK0 ] int 
  2530 ;;  i               2   22[BANK0 ] int 
  2531 ;;  i               2   20[BANK0 ] int 
  2532 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2533 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2534 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      PTR unsigned char 
  2537 ;; Registers used:
  2538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2544 ;;      Params:         0       2       0       0       0
  2545 ;;      Locals:         0      16       0       0       0
  2546 ;;      Temps:          0       2       0       0       0
  2547 ;;      Totals:         0      20       0       0       0
  2548 ;;Total ram usage:       20 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    3
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_sendByte
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           
  2559                           ;psect for function _BuildByte
  2560  0552                     _BuildByte:	
  2561                           
  2562                           ;incstack = 0
  2563                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2564                           ;BuildByte@byte0 stored from wreg
  2565  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0554  00A8               	movwf	BuildByte@byte0
  2568  0555                     l3025:	
  2569                           
  2570                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2571  0555  0828               	movf	BuildByte@byte0,w
  2572  0556  397F               	andlw	127
  2573  0557  00A6               	movwf	??_BuildByte
  2574  0558  0826               	movf	??_BuildByte,w
  2575  0559  00A9               	movwf	BuildByte@txByte
  2576                           
  2577                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2578  055A  0824               	movf	BuildByte@byte1,w
  2579  055B  397F               	andlw	127
  2580  055C  00A6               	movwf	??_BuildByte
  2581  055D  0826               	movf	??_BuildByte,w
  2582  055E  00AA               	movwf	BuildByte@txByte+1
  2583                           
  2584                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2585  055F  0825               	movf	BuildByte@valore,w
  2586  0560  397F               	andlw	127
  2587  0561  00A6               	movwf	??_BuildByte
  2588  0562  0826               	movf	??_BuildByte,w
  2589  0563  00AB               	movwf	BuildByte@txByte+2
  2590  0564                     l3027:	
  2591                           
  2592                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2593  0564  0825               	movf	BuildByte@valore,w
  2594  0565  00A6               	movwf	??_BuildByte
  2595  0566  3007               	movlw	7
  2596  0567                     u2325:	
  2597  0567  1003               	clrc
  2598  0568  0CA6               	rrf	??_BuildByte,f
  2599  0569  3EFF               	addlw	-1
  2600  056A  1D03               	skipz
  2601  056B  2D67               	goto	u2325
  2602  056C  0826               	movf	??_BuildByte,w
  2603  056D  397F               	andlw	127
  2604  056E  00A7               	movwf	??_BuildByte+1
  2605  056F  0827               	movf	??_BuildByte+1,w
  2606  0570  00AC               	movwf	BuildByte@txByte+3
  2607  0571                     l3029:	
  2608                           
  2609                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2610  0571  01AE               	clrf	BuildByte@sommaRow
  2611  0572                     l3031:	
  2612                           
  2613                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2614  0572  01AF               	clrf	BuildByte@sommaColumn
  2615  0573                     l3033:	
  2616                           
  2617                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2618  0573  01B4               	clrf	BuildByte@i
  2619  0574  01B5               	clrf	BuildByte@i+1
  2620  0575                     l3039:	
  2621                           
  2622                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2623  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2625  0577  01B0               	clrf	BuildByte@y
  2626  0578  01B1               	clrf	BuildByte@y+1
  2627  0579                     l3045:	
  2628                           
  2629                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2630  0579  1283               	bcf	3,5	;RP0=0, select bank0
  2631  057A  1303               	bcf	3,6	;RP1=0, select bank0
  2632  057B  0834               	movf	BuildByte@i,w
  2633  057C  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2634  057D  0084               	movwf	4
  2635  057E  1383               	bcf	3,7	;select IRP bank0
  2636  057F  0800               	movf	0,w
  2637  0580  00A6               	movwf	??_BuildByte
  2638  0581  0A30               	incf	BuildByte@y,w
  2639  0582  2D85               	goto	u2334
  2640  0583                     u2335:	
  2641  0583  1003               	clrc
  2642  0584  0CA6               	rrf	??_BuildByte,f
  2643  0585                     u2334:	
  2644  0585  3EFF               	addlw	-1
  2645  0586  1D03               	skipz
  2646  0587  2D83               	goto	u2335
  2647  0588  0826               	movf	??_BuildByte,w
  2648  0589  3901               	andlw	1
  2649  058A  00A7               	movwf	??_BuildByte+1
  2650  058B  0827               	movf	??_BuildByte+1,w
  2651  058C  07AE               	addwf	BuildByte@sommaRow,f
  2652  058D                     l3047:	
  2653                           
  2654                           ;./CustomLib/Serial.h: 18:         }
  2655  058D  3001               	movlw	1
  2656  058E  07B0               	addwf	BuildByte@y,f
  2657  058F  1803               	skipnc
  2658  0590  0AB1               	incf	BuildByte@y+1,f
  2659  0591  3000               	movlw	0
  2660  0592  07B1               	addwf	BuildByte@y+1,f
  2661  0593                     l3049:	
  2662  0593  0831               	movf	BuildByte@y+1,w
  2663  0594  3A80               	xorlw	128
  2664  0595  00FF               	movwf	btemp+1
  2665  0596  3080               	movlw	128
  2666  0597  027F               	subwf	btemp+1,w
  2667  0598  1D03               	skipz
  2668  0599  2D9C               	goto	u2345
  2669  059A  3008               	movlw	8
  2670  059B  0230               	subwf	BuildByte@y,w
  2671  059C                     u2345:	
  2672  059C  1C03               	skipc
  2673  059D  2D9F               	goto	u2341
  2674  059E  2DA0               	goto	u2340
  2675  059F                     u2341:	
  2676  059F  2D79               	goto	l3045
  2677  05A0                     u2340:	
  2678  05A0                     l105:	
  2679                           
  2680                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2681  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2682  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2683  05A2  1C2E               	btfss	BuildByte@sommaRow,0
  2684  05A3  2DA5               	goto	u2351
  2685  05A4  2DA6               	goto	u2350
  2686  05A5                     u2351:	
  2687  05A5  2DAE               	goto	l3053
  2688  05A6                     u2350:	
  2689  05A6                     l3051:	
  2690                           
  2691                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2692  05A6  3080               	movlw	128
  2693  05A7  00A6               	movwf	??_BuildByte
  2694  05A8  0834               	movf	BuildByte@i,w
  2695  05A9  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2696  05AA  0084               	movwf	4
  2697  05AB  0826               	movf	??_BuildByte,w
  2698  05AC  1383               	bcf	3,7	;select IRP bank0
  2699  05AD  0780               	addwf	0,f
  2700  05AE                     l3053:	
  2701                           
  2702                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2703  05AE  01AE               	clrf	BuildByte@sommaRow
  2704  05AF                     l3057:	
  2705                           ;./CustomLib/Serial.h: 23:         }
  2706                           
  2707                           
  2708                           ;./CustomLib/Serial.h: 28:     }
  2709  05AF  3001               	movlw	1
  2710  05B0  07B4               	addwf	BuildByte@i,f
  2711  05B1  1803               	skipnc
  2712  05B2  0AB5               	incf	BuildByte@i+1,f
  2713  05B3  3000               	movlw	0
  2714  05B4  07B5               	addwf	BuildByte@i+1,f
  2715  05B5                     l3059:	
  2716  05B5  0835               	movf	BuildByte@i+1,w
  2717  05B6  3A80               	xorlw	128
  2718  05B7  00FF               	movwf	btemp+1
  2719  05B8  3080               	movlw	128
  2720  05B9  027F               	subwf	btemp+1,w
  2721  05BA  1D03               	skipz
  2722  05BB  2DBE               	goto	u2365
  2723  05BC  3004               	movlw	4
  2724  05BD  0234               	subwf	BuildByte@i,w
  2725  05BE                     u2365:	
  2726  05BE  1C03               	skipc
  2727  05BF  2DC1               	goto	u2361
  2728  05C0  2DC2               	goto	u2360
  2729  05C1                     u2361:	
  2730  05C1  2D75               	goto	l3039
  2731  05C2                     u2360:	
  2732  05C2                     l3061:	
  2733                           
  2734                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2735  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2736  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2737  05C4  01B6               	clrf	BuildByte@i_341
  2738  05C5  01B7               	clrf	BuildByte@i_341+1
  2739  05C6                     l3067:	
  2740                           
  2741                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2742  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2743  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2744  05C8  01B2               	clrf	BuildByte@y_342
  2745  05C9  01B3               	clrf	BuildByte@y_342+1
  2746  05CA                     l3073:	
  2747                           
  2748                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2749  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2750  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2751  05CC  0832               	movf	BuildByte@y_342,w
  2752  05CD  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2753  05CE  0084               	movwf	4
  2754  05CF  1383               	bcf	3,7	;select IRP bank0
  2755  05D0  0800               	movf	0,w
  2756  05D1  00A6               	movwf	??_BuildByte
  2757  05D2  0A36               	incf	BuildByte@i_341,w
  2758  05D3  2DD6               	goto	u2374
  2759  05D4                     u2375:	
  2760  05D4  1003               	clrc
  2761  05D5  0CA6               	rrf	??_BuildByte,f
  2762  05D6                     u2374:	
  2763  05D6  3EFF               	addlw	-1
  2764  05D7  1D03               	skipz
  2765  05D8  2DD4               	goto	u2375
  2766  05D9  0826               	movf	??_BuildByte,w
  2767  05DA  3901               	andlw	1
  2768  05DB  00A7               	movwf	??_BuildByte+1
  2769  05DC  0827               	movf	??_BuildByte+1,w
  2770  05DD  07AF               	addwf	BuildByte@sommaColumn,f
  2771  05DE                     l3075:	
  2772                           
  2773                           ;./CustomLib/Serial.h: 37:         }
  2774  05DE  3001               	movlw	1
  2775  05DF  07B2               	addwf	BuildByte@y_342,f
  2776  05E0  1803               	skipnc
  2777  05E1  0AB3               	incf	BuildByte@y_342+1,f
  2778  05E2  3000               	movlw	0
  2779  05E3  07B3               	addwf	BuildByte@y_342+1,f
  2780  05E4                     l3077:	
  2781  05E4  0833               	movf	BuildByte@y_342+1,w
  2782  05E5  3A80               	xorlw	128
  2783  05E6  00FF               	movwf	btemp+1
  2784  05E7  3080               	movlw	128
  2785  05E8  027F               	subwf	btemp+1,w
  2786  05E9  1D03               	skipz
  2787  05EA  2DED               	goto	u2385
  2788  05EB  3004               	movlw	4
  2789  05EC  0232               	subwf	BuildByte@y_342,w
  2790  05ED                     u2385:	
  2791  05ED  1C03               	skipc
  2792  05EE  2DF0               	goto	u2381
  2793  05EF  2DF1               	goto	u2380
  2794  05F0                     u2381:	
  2795  05F0  2DCA               	goto	l3073
  2796  05F1                     u2380:	
  2797  05F1                     l111:	
  2798                           
  2799                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2800  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2801  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2802  05F3  1C2F               	btfss	BuildByte@sommaColumn,0
  2803  05F4  2DF6               	goto	u2391
  2804  05F5  2DF7               	goto	u2390
  2805  05F6                     u2391:	
  2806  05F6  2E04               	goto	l3081
  2807  05F7                     u2390:	
  2808  05F7                     l3079:	
  2809                           
  2810                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2811  05F7  3001               	movlw	1
  2812  05F8  00A6               	movwf	??_BuildByte
  2813  05F9  0A36               	incf	BuildByte@i_341,w
  2814  05FA  2DFD               	goto	u2404
  2815  05FB                     u2405:	
  2816  05FB  1003               	clrc
  2817  05FC  0DA6               	rlf	??_BuildByte,f
  2818  05FD                     u2404:	
  2819  05FD  3EFF               	addlw	-1
  2820  05FE  1D03               	skipz
  2821  05FF  2DFB               	goto	u2405
  2822  0600  0826               	movf	??_BuildByte,w
  2823  0601  00A7               	movwf	??_BuildByte+1
  2824  0602  0827               	movf	??_BuildByte+1,w
  2825  0603  07AD               	addwf	BuildByte@txByte+4,f
  2826  0604                     l3081:	
  2827                           
  2828                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2829  0604  01AF               	clrf	BuildByte@sommaColumn
  2830  0605                     l3085:	
  2831                           ;./CustomLib/Serial.h: 42:         }
  2832                           
  2833                           
  2834                           ;./CustomLib/Serial.h: 47:     }
  2835  0605  3001               	movlw	1
  2836  0606  07B6               	addwf	BuildByte@i_341,f
  2837  0607  1803               	skipnc
  2838  0608  0AB7               	incf	BuildByte@i_341+1,f
  2839  0609  3000               	movlw	0
  2840  060A  07B7               	addwf	BuildByte@i_341+1,f
  2841  060B                     l3087:	
  2842  060B  0837               	movf	BuildByte@i_341+1,w
  2843  060C  3A80               	xorlw	128
  2844  060D  00FF               	movwf	btemp+1
  2845  060E  3080               	movlw	128
  2846  060F  027F               	subwf	btemp+1,w
  2847  0610  1D03               	skipz
  2848  0611  2E14               	goto	u2415
  2849  0612  3008               	movlw	8
  2850  0613  0236               	subwf	BuildByte@i_341,w
  2851  0614                     u2415:	
  2852  0614  1C03               	skipc
  2853  0615  2E17               	goto	u2411
  2854  0616  2E18               	goto	u2410
  2855  0617                     u2411:	
  2856  0617  2DC6               	goto	l3067
  2857  0618                     u2410:	
  2858  0618                     l3089:	
  2859                           
  2860                           ;./CustomLib/Serial.h: 49:     return txByte;
  2861  0618  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2862  0619                     l114:	
  2863  0619  0008               	return
  2864  061A                     __end_of_BuildByte:	
  2865                           
  2866                           	psect	text4
  2867  0BFF                     __ptext4:	
  2868 ;; *************** function _rand *****************
  2869 ;; Defined at:
  2870 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2   17[BANK0 ] int 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       2       0       0       0
  2885 ;;      Locals:         0       0       0       0       0
  2886 ;;      Temps:          0       5       0       0       0
  2887 ;;      Totals:         0       7       0       0       0
  2888 ;;Total ram usage:        7 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    4
  2891 ;; This function calls:
  2892 ;;		___lmul
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _rand
  2900  0BFF                     _rand:	
  2901  0BFF                     l3407:	
  2902                           ;incstack = 0
  2903                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2904                           
  2905  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0C01  0861               	movf	_randx+3,w
  2908  0C02  00A7               	movwf	___lmul@multiplier+3
  2909  0C03  0860               	movf	_randx+2,w
  2910  0C04  00A6               	movwf	___lmul@multiplier+2
  2911  0C05  085F               	movf	_randx+1,w
  2912  0C06  00A5               	movwf	___lmul@multiplier+1
  2913  0C07  085E               	movf	_randx,w
  2914  0C08  00A4               	movwf	___lmul@multiplier
  2915  0C09  3041               	movlw	65
  2916  0C0A  00AB               	movwf	___lmul@multiplicand+3
  2917  0C0B  30C6               	movlw	198
  2918  0C0C  00AA               	movwf	___lmul@multiplicand+2
  2919  0C0D  304E               	movlw	78
  2920  0C0E  00A9               	movwf	___lmul@multiplicand+1
  2921  0C0F  306D               	movlw	109
  2922  0C10  00A8               	movwf	___lmul@multiplicand
  2923  0C11  120A  158A  2446  120A  158A  	fcall	___lmul
  2924  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0C18  0827               	movf	?___lmul+3,w
  2927  0C19  00E1               	movwf	_randx+3
  2928  0C1A  0826               	movf	?___lmul+2,w
  2929  0C1B  00E0               	movwf	_randx+2
  2930  0C1C  0825               	movf	?___lmul+1,w
  2931  0C1D  00DF               	movwf	_randx+1
  2932  0C1E  0824               	movf	?___lmul,w
  2933  0C1F  00DE               	movwf	_randx
  2934  0C20                     l3409:	
  2935  0C20  3039               	movlw	57
  2936  0C21  07DE               	addwf	_randx,f
  2937  0C22  3030               	movlw	48
  2938  0C23  1803               	skipnc
  2939  0C24  3031               	movlw	49
  2940  0C25  07DF               	addwf	_randx+1,f
  2941  0C26  3000               	movlw	0
  2942  0C27  1803               	skipnc
  2943  0C28  3001               	movlw	1
  2944  0C29  07E0               	addwf	_randx+2,f
  2945  0C2A  3000               	movlw	0
  2946  0C2B  1803               	skipnc
  2947  0C2C  3001               	movlw	1
  2948  0C2D  07E1               	addwf	_randx+3,f
  2949  0C2E                     l3411:	
  2950  0C2E  085E               	movf	_randx,w
  2951  0C2F  00B3               	movwf	??_rand
  2952  0C30  085F               	movf	_randx+1,w
  2953  0C31  00B4               	movwf	??_rand+1
  2954  0C32  0860               	movf	_randx+2,w
  2955  0C33  00B5               	movwf	??_rand+2
  2956  0C34  0861               	movf	_randx+3,w
  2957  0C35  00B6               	movwf	??_rand+3
  2958  0C36  3010               	movlw	16
  2959  0C37  00B7               	movwf	??_rand+4
  2960  0C38                     u2935:	
  2961  0C38  0D36               	rlf	??_rand+3,w
  2962  0C39  0CB6               	rrf	??_rand+3,f
  2963  0C3A  0CB5               	rrf	??_rand+2,f
  2964  0C3B  0CB4               	rrf	??_rand+1,f
  2965  0C3C  0CB3               	rrf	??_rand,f
  2966  0C3D                     u2930:	
  2967  0C3D  0BB7               	decfsz	??_rand+4,f
  2968  0C3E  2C38               	goto	u2935
  2969  0C3F  30FF               	movlw	255
  2970  0C40  0533               	andwf	??_rand,w
  2971  0C41  00B1               	movwf	?_rand
  2972  0C42  307F               	movlw	127
  2973  0C43  0534               	andwf	??_rand+1,w
  2974  0C44  00B2               	movwf	?_rand+1
  2975  0C45                     l889:	
  2976  0C45  0008               	return
  2977  0C46                     __end_of_rand:	
  2978                           
  2979                           	psect	text5
  2980  0C46                     __ptext5:	
  2981 ;; *************** function ___lmul *****************
  2982 ;; Defined at:
  2983 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  multiplier      4    4[BANK0 ] unsigned long 
  2986 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  product         4   13[BANK0 ] unsigned long 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  4    4[BANK0 ] unsigned long 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         0       8       0       0       0
  2999 ;;      Locals:         0       4       0       0       0
  3000 ;;      Temps:          0       1       0       0       0
  3001 ;;      Totals:         0      13       0       0       0
  3002 ;;Total ram usage:       13 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    3
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_rand
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function ___lmul
  3014  0C46                     ___lmul:	
  3015  0C46                     l3143:	
  3016                           ;incstack = 0
  3017                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3018                           
  3019  0C46  3000               	movlw	0
  3020  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0C49  00B0               	movwf	___lmul@product+3
  3023  0C4A  3000               	movlw	0
  3024  0C4B  00AF               	movwf	___lmul@product+2
  3025  0C4C  3000               	movlw	0
  3026  0C4D  00AE               	movwf	___lmul@product+1
  3027  0C4E  3000               	movlw	0
  3028  0C4F  00AD               	movwf	___lmul@product
  3029  0C50                     l3145:	
  3030  0C50  1C24               	btfss	___lmul@multiplier,0
  3031  0C51  2C53               	goto	u2481
  3032  0C52  2C54               	goto	u2480
  3033  0C53                     u2481:	
  3034  0C53  2C6B               	goto	l3149
  3035  0C54                     u2480:	
  3036  0C54                     l3147:	
  3037  0C54  0828               	movf	___lmul@multiplicand,w
  3038  0C55  07AD               	addwf	___lmul@product,f
  3039  0C56  0829               	movf	___lmul@multiplicand+1,w
  3040  0C57  1103               	clrz
  3041  0C58  1803               	skipnc
  3042  0C59  3E01               	addlw	1
  3043  0C5A  1903               	skipnz
  3044  0C5B  2C5D               	goto	u2491
  3045  0C5C  07AE               	addwf	___lmul@product+1,f
  3046  0C5D                     u2491:	
  3047  0C5D  082A               	movf	___lmul@multiplicand+2,w
  3048  0C5E  1103               	clrz
  3049  0C5F  1803               	skipnc
  3050  0C60  3E01               	addlw	1
  3051  0C61  1903               	skipnz
  3052  0C62  2C64               	goto	u2492
  3053  0C63  07AF               	addwf	___lmul@product+2,f
  3054  0C64                     u2492:	
  3055  0C64  082B               	movf	___lmul@multiplicand+3,w
  3056  0C65  1103               	clrz
  3057  0C66  1803               	skipnc
  3058  0C67  3E01               	addlw	1
  3059  0C68  1903               	skipnz
  3060  0C69  2C6B               	goto	u2493
  3061  0C6A  07B0               	addwf	___lmul@product+3,f
  3062  0C6B                     u2493:	
  3063  0C6B                     l3149:	
  3064  0C6B  3001               	movlw	1
  3065  0C6C  00AC               	movwf	??___lmul
  3066  0C6D                     u2505:	
  3067  0C6D  1003               	clrc
  3068  0C6E  0DA8               	rlf	___lmul@multiplicand,f
  3069  0C6F  0DA9               	rlf	___lmul@multiplicand+1,f
  3070  0C70  0DAA               	rlf	___lmul@multiplicand+2,f
  3071  0C71  0DAB               	rlf	___lmul@multiplicand+3,f
  3072  0C72  0BAC               	decfsz	??___lmul,f
  3073  0C73  2C6D               	goto	u2505
  3074  0C74                     l3151:	
  3075  0C74  3001               	movlw	1
  3076  0C75                     u2515:	
  3077  0C75  1003               	clrc
  3078  0C76  0CA7               	rrf	___lmul@multiplier+3,f
  3079  0C77  0CA6               	rrf	___lmul@multiplier+2,f
  3080  0C78  0CA5               	rrf	___lmul@multiplier+1,f
  3081  0C79  0CA4               	rrf	___lmul@multiplier,f
  3082  0C7A  3EFF               	addlw	-1
  3083  0C7B  1D03               	skipz
  3084  0C7C  2C75               	goto	u2515
  3085  0C7D  0827               	movf	___lmul@multiplier+3,w
  3086  0C7E  0426               	iorwf	___lmul@multiplier+2,w
  3087  0C7F  0425               	iorwf	___lmul@multiplier+1,w
  3088  0C80  0424               	iorwf	___lmul@multiplier,w
  3089  0C81  1D03               	skipz
  3090  0C82  2C84               	goto	u2521
  3091  0C83  2C85               	goto	u2520
  3092  0C84                     u2521:	
  3093  0C84  2C50               	goto	l3145
  3094  0C85                     u2520:	
  3095  0C85                     l3153:	
  3096  0C85  0830               	movf	___lmul@product+3,w
  3097  0C86  00A7               	movwf	?___lmul+3
  3098  0C87  082F               	movf	___lmul@product+2,w
  3099  0C88  00A6               	movwf	?___lmul+2
  3100  0C89  082E               	movf	___lmul@product+1,w
  3101  0C8A  00A5               	movwf	?___lmul+1
  3102  0C8B  082D               	movf	___lmul@product,w
  3103  0C8C  00A4               	movwf	?___lmul
  3104  0C8D                     l453:	
  3105  0C8D  0008               	return
  3106  0C8E                     __end_of___lmul:	
  3107                           
  3108                           	psect	text6
  3109  0B4A                     __ptext6:	
  3110 ;; *************** function _map *****************
  3111 ;; Defined at:
  3112 ;;		line 127 in file "./CustomLib/TrafficLight.h"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  x               2   20[BANK0 ] int 
  3115 ;;  in_min          2   22[BANK0 ] int 
  3116 ;;  in_max          2   24[BANK0 ] int 
  3117 ;;  out_min         2   26[BANK0 ] int 
  3118 ;;  out_max         2   28[BANK0 ] int 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  2   20[BANK0 ] int 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0, pclath, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         0      10       0       0       0
  3131 ;;      Locals:         0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0
  3133 ;;      Totals:         0      10       0       0       0
  3134 ;;Total ram usage:       10 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    4
  3137 ;; This function calls:
  3138 ;;		___awdiv
  3139 ;;		___wmul
  3140 ;; This function is called by:
  3141 ;;		_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function _map
  3147  0B4A                     _map:	
  3148  0B4A                     l3385:	
  3149                           ;incstack = 0
  3150                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3151                           
  3152                           
  3153                           ;./CustomLib/TrafficLight.h: 127: int map(int x, int in_min, int in_max, int out_min, in
      +                          t out_max);./CustomLib/TrafficLight.h: 128: {;./CustomLib/TrafficLight.h: 129:     retur
      +                          n (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3154  0B4A  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0B4B  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0B4C  0836               	movf	map@in_min,w
  3157  0B4D  0238               	subwf	map@in_max,w
  3158  0B4E  00AB               	movwf	___awdiv@divisor
  3159  0B4F  0837               	movf	map@in_min+1,w
  3160  0B50  1C03               	skipc
  3161  0B51  0A37               	incf	map@in_min+1,w
  3162  0B52  0239               	subwf	map@in_max+1,w
  3163  0B53  00AC               	movwf	___awdiv@divisor+1
  3164  0B54  0836               	movf	map@in_min,w
  3165  0B55  0234               	subwf	map@x,w
  3166  0B56  00A4               	movwf	___wmul@multiplier
  3167  0B57  0837               	movf	map@in_min+1,w
  3168  0B58  1C03               	skipc
  3169  0B59  0A37               	incf	map@in_min+1,w
  3170  0B5A  0235               	subwf	map@x+1,w
  3171  0B5B  00A5               	movwf	___wmul@multiplier+1
  3172  0B5C  083A               	movf	map@out_min,w
  3173  0B5D  023C               	subwf	map@out_max,w
  3174  0B5E  00A6               	movwf	___wmul@multiplicand
  3175  0B5F  083B               	movf	map@out_min+1,w
  3176  0B60  1C03               	skipc
  3177  0B61  0A3B               	incf	map@out_min+1,w
  3178  0B62  023D               	subwf	map@out_max+1,w
  3179  0B63  00A7               	movwf	___wmul@multiplicand+1
  3180  0B64  120A  158A  22F2  120A  158A  	fcall	___wmul
  3181  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0B6B  0825               	movf	?___wmul+1,w
  3184  0B6C  00AE               	movwf	___awdiv@dividend+1
  3185  0B6D  0824               	movf	?___wmul,w
  3186  0B6E  00AD               	movwf	___awdiv@dividend
  3187  0B6F  120A  158A  26FA  120A  158A  	fcall	___awdiv
  3188  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  3190  0B76  083A               	movf	map@out_min,w
  3191  0B77  072B               	addwf	?___awdiv,w
  3192  0B78  00B4               	movwf	?_map
  3193  0B79  083B               	movf	map@out_min+1,w
  3194  0B7A  1803               	skipnc
  3195  0B7B  0A3B               	incf	map@out_min+1,w
  3196  0B7C  072C               	addwf	?___awdiv+1,w
  3197  0B7D  00B5               	movwf	?_map+1
  3198  0B7E                     l169:	
  3199  0B7E  0008               	return
  3200  0B7F                     __end_of_map:	
  3201                           
  3202                           	psect	text7
  3203  0AF2                     __ptext7:	
  3204 ;; *************** function ___wmul *****************
  3205 ;; Defined at:
  3206 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3209 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  product         2    8[BANK0 ] unsigned int 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  2    4[BANK0 ] unsigned int 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       4       0       0       0
  3222 ;;      Locals:         0       2       0       0       0
  3223 ;;      Temps:          0       0       0       0       0
  3224 ;;      Totals:         0       6       0       0       0
  3225 ;;Total ram usage:        6 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    3
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_map
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           
  3236                           ;psect for function ___wmul
  3237  0AF2                     ___wmul:	
  3238  0AF2                     l3129:	
  3239                           ;incstack = 0
  3240                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3241                           
  3242  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0AF4  01A8               	clrf	___wmul@product
  3245  0AF5  01A9               	clrf	___wmul@product+1
  3246  0AF6                     l3131:	
  3247  0AF6  1C24               	btfss	___wmul@multiplier,0
  3248  0AF7  2AF9               	goto	u2441
  3249  0AF8  2AFA               	goto	u2440
  3250  0AF9                     u2441:	
  3251  0AF9  2B00               	goto	l439
  3252  0AFA                     u2440:	
  3253  0AFA                     l3133:	
  3254  0AFA  0826               	movf	___wmul@multiplicand,w
  3255  0AFB  07A8               	addwf	___wmul@product,f
  3256  0AFC  1803               	skipnc
  3257  0AFD  0AA9               	incf	___wmul@product+1,f
  3258  0AFE  0827               	movf	___wmul@multiplicand+1,w
  3259  0AFF  07A9               	addwf	___wmul@product+1,f
  3260  0B00                     l439:	
  3261  0B00  3001               	movlw	1
  3262  0B01                     u2455:	
  3263  0B01  1003               	clrc
  3264  0B02  0DA6               	rlf	___wmul@multiplicand,f
  3265  0B03  0DA7               	rlf	___wmul@multiplicand+1,f
  3266  0B04  3EFF               	addlw	-1
  3267  0B05  1D03               	skipz
  3268  0B06  2B01               	goto	u2455
  3269  0B07                     l3135:	
  3270  0B07  3001               	movlw	1
  3271  0B08                     u2465:	
  3272  0B08  1003               	clrc
  3273  0B09  0CA5               	rrf	___wmul@multiplier+1,f
  3274  0B0A  0CA4               	rrf	___wmul@multiplier,f
  3275  0B0B  3EFF               	addlw	-1
  3276  0B0C  1D03               	skipz
  3277  0B0D  2B08               	goto	u2465
  3278  0B0E                     l3137:	
  3279  0B0E  0824               	movf	___wmul@multiplier,w
  3280  0B0F  0425               	iorwf	___wmul@multiplier+1,w
  3281  0B10  1D03               	btfss	3,2
  3282  0B11  2B13               	goto	u2471
  3283  0B12  2B14               	goto	u2470
  3284  0B13                     u2471:	
  3285  0B13  2AF6               	goto	l3131
  3286  0B14                     u2470:	
  3287  0B14                     l3139:	
  3288  0B14  0829               	movf	___wmul@product+1,w
  3289  0B15  00A5               	movwf	?___wmul+1
  3290  0B16  0828               	movf	___wmul@product,w
  3291  0B17  00A4               	movwf	?___wmul
  3292  0B18                     l441:	
  3293  0B18  0008               	return
  3294  0B19                     __end_of___wmul:	
  3295                           
  3296                           	psect	text8
  3297  0CDA                     __ptext8:	
  3298 ;; *************** function _luciSemaforo *****************
  3299 ;; Defined at:
  3300 ;;		line 429 in file "main.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  index           1    wreg     unsigned char 
  3303 ;;  lux             1    4[BANK0 ] unsigned char 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  index           1    7[BANK0 ] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       1       0       0       0
  3316 ;;      Locals:         0       1       0       0       0
  3317 ;;      Temps:          0       2       0       0       0
  3318 ;;      Totals:         0       4       0       0       0
  3319 ;;Total ram usage:        4 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    3
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           
  3330                           ;psect for function _luciSemaforo
  3331  0CDA                     _luciSemaforo:	
  3332                           
  3333                           ;incstack = 0
  3334                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3335                           ;luciSemaforo@index stored from wreg
  3336  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0CDC  00A7               	movwf	luciSemaforo@index
  3339  0CDD                     l3441:	
  3340                           
  3341                           ;main.c: 429: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 430: {;m
      +                          ain.c: 431:     switch (index)
  3342  0CDD  2D1C               	goto	l3453
  3343  0CDE                     l311:	
  3344                           ;main.c: 435:         {;main.c: 436:         case 0:
  3345                           
  3346                           
  3347                           ;main.c: 437:             PORTCbits.RC1 = 0;
  3348  0CDE  1087               	bcf	7,1	;volatile
  3349                           
  3350                           ;main.c: 438:             PORTCbits.RC2 = 0;
  3351  0CDF  1107               	bcf	7,2	;volatile
  3352                           
  3353                           ;main.c: 439:             PORTCbits.RC0 = 1;
  3354  0CE0  1407               	bsf	7,0	;volatile
  3355                           
  3356                           ;main.c: 440:             break;
  3357  0CE1  2D2C               	goto	l322
  3358  0CE2                     l313:	
  3359                           ;main.c: 441:         case 1:
  3360                           
  3361                           
  3362                           ;main.c: 442:             PORTCbits.RC0 = 0;
  3363  0CE2  1007               	bcf	7,0	;volatile
  3364                           
  3365                           ;main.c: 443:             PORTCbits.RC2 = 0;
  3366  0CE3  1107               	bcf	7,2	;volatile
  3367                           
  3368                           ;main.c: 444:             PORTCbits.RC1 = 1;
  3369  0CE4  1487               	bsf	7,1	;volatile
  3370                           
  3371                           ;main.c: 445:             break;
  3372  0CE5  2D2C               	goto	l322
  3373  0CE6                     l314:	
  3374                           ;main.c: 446:         case 2:
  3375                           
  3376                           
  3377                           ;main.c: 447:             PORTCbits.RC0 = 0;
  3378  0CE6  1007               	bcf	7,0	;volatile
  3379                           
  3380                           ;main.c: 448:             PORTCbits.RC1 = 0;
  3381  0CE7  1087               	bcf	7,1	;volatile
  3382                           
  3383                           ;main.c: 449:             PORTCbits.RC2 = 1;
  3384  0CE8  1507               	bsf	7,2	;volatile
  3385                           
  3386                           ;main.c: 450:             break;
  3387  0CE9  2D2C               	goto	l322
  3388  0CEA                     l3445:	
  3389  0CEA  0824               	movf	luciSemaforo@lux,w
  3390  0CEB  00A5               	movwf	??_luciSemaforo
  3391  0CEC  01A6               	clrf	??_luciSemaforo+1
  3392                           
  3393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3394                           ; Switch size 1, requested type "simple"
  3395                           ; Number of cases is 1, Range of values is 0 to 0
  3396                           ; switch strategies available:
  3397                           ; Name         Instructions Cycles
  3398                           ; simple_byte            4     3 (average)
  3399                           ; direct_byte           11     8 (fixed)
  3400                           ; jumptable            260     6 (fixed)
  3401                           ;	Chosen strategy is simple_byte
  3402  0CED  0826               	movf	??_luciSemaforo+1,w
  3403  0CEE  3A00               	xorlw	0	; case 0
  3404  0CEF  1903               	skipnz
  3405  0CF0  2CF2               	goto	l3945
  3406  0CF1  2D2C               	goto	l322
  3407  0CF2                     l3945:	
  3408                           
  3409                           ; Switch size 1, requested type "simple"
  3410                           ; Number of cases is 3, Range of values is 0 to 2
  3411                           ; switch strategies available:
  3412                           ; Name         Instructions Cycles
  3413                           ; simple_byte           10     6 (average)
  3414                           ; direct_byte           17     8 (fixed)
  3415                           ; jumptable            260     6 (fixed)
  3416                           ;	Chosen strategy is simple_byte
  3417  0CF2  0825               	movf	??_luciSemaforo,w
  3418  0CF3  3A00               	xorlw	0	; case 0
  3419  0CF4  1903               	skipnz
  3420  0CF5  2CDE               	goto	l311
  3421  0CF6  3A01               	xorlw	1	; case 1
  3422  0CF7  1903               	skipnz
  3423  0CF8  2CE2               	goto	l313
  3424  0CF9  3A03               	xorlw	3	; case 2
  3425  0CFA  1903               	skipnz
  3426  0CFB  2CE6               	goto	l314
  3427  0CFC  2D2C               	goto	l322
  3428  0CFD                     l318:	
  3429                           ;main.c: 456:         {;main.c: 457:         case 0:
  3430                           
  3431                           
  3432                           ;main.c: 458:             PORTBbits.RB1 = 0;
  3433  0CFD  1086               	bcf	6,1	;volatile
  3434                           
  3435                           ;main.c: 459:             PORTBbits.RB6 = 0;
  3436  0CFE  1306               	bcf	6,6	;volatile
  3437                           
  3438                           ;main.c: 460:             PORTBbits.RB7 = 1;
  3439  0CFF  1786               	bsf	6,7	;volatile
  3440                           
  3441                           ;main.c: 461:             break;
  3442  0D00  2D2C               	goto	l322
  3443  0D01                     l320:	
  3444                           ;main.c: 462:         case 1:
  3445                           
  3446                           
  3447                           ;main.c: 463:             PORTBbits.RB7 = 0;
  3448  0D01  1386               	bcf	6,7	;volatile
  3449                           
  3450                           ;main.c: 464:             PORTBbits.RB6 = 0;
  3451  0D02  1306               	bcf	6,6	;volatile
  3452                           
  3453                           ;main.c: 465:             PORTBbits.RB1 = 1;
  3454  0D03  1486               	bsf	6,1	;volatile
  3455                           
  3456                           ;main.c: 466:             break;
  3457  0D04  2D2C               	goto	l322
  3458  0D05                     l321:	
  3459                           ;main.c: 467:         case 2:
  3460                           
  3461                           
  3462                           ;main.c: 468:             PORTBbits.RB7 = 0;
  3463  0D05  1386               	bcf	6,7	;volatile
  3464                           
  3465                           ;main.c: 469:             PORTBbits.RB1 = 0;
  3466  0D06  1086               	bcf	6,1	;volatile
  3467                           
  3468                           ;main.c: 470:             PORTBbits.RB6 = 1;
  3469  0D07  1706               	bsf	6,6	;volatile
  3470                           
  3471                           ;main.c: 471:             break;
  3472  0D08  2D2C               	goto	l322
  3473  0D09                     l3449:	
  3474  0D09  0824               	movf	luciSemaforo@lux,w
  3475  0D0A  00A5               	movwf	??_luciSemaforo
  3476  0D0B  01A6               	clrf	??_luciSemaforo+1
  3477                           
  3478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3479                           ; Switch size 1, requested type "simple"
  3480                           ; Number of cases is 1, Range of values is 0 to 0
  3481                           ; switch strategies available:
  3482                           ; Name         Instructions Cycles
  3483                           ; simple_byte            4     3 (average)
  3484                           ; direct_byte           11     8 (fixed)
  3485                           ; jumptable            260     6 (fixed)
  3486                           ;	Chosen strategy is simple_byte
  3487  0D0C  0826               	movf	??_luciSemaforo+1,w
  3488  0D0D  3A00               	xorlw	0	; case 0
  3489  0D0E  1903               	skipnz
  3490  0D0F  2D11               	goto	l3947
  3491  0D10  2D2C               	goto	l322
  3492  0D11                     l3947:	
  3493                           
  3494                           ; Switch size 1, requested type "simple"
  3495                           ; Number of cases is 3, Range of values is 0 to 2
  3496                           ; switch strategies available:
  3497                           ; Name         Instructions Cycles
  3498                           ; simple_byte           10     6 (average)
  3499                           ; direct_byte           17     8 (fixed)
  3500                           ; jumptable            260     6 (fixed)
  3501                           ;	Chosen strategy is simple_byte
  3502  0D11  0825               	movf	??_luciSemaforo,w
  3503  0D12  3A00               	xorlw	0	; case 0
  3504  0D13  1903               	skipnz
  3505  0D14  2CFD               	goto	l318
  3506  0D15  3A01               	xorlw	1	; case 1
  3507  0D16  1903               	skipnz
  3508  0D17  2D01               	goto	l320
  3509  0D18  3A03               	xorlw	3	; case 2
  3510  0D19  1903               	skipnz
  3511  0D1A  2D05               	goto	l321
  3512  0D1B  2D2C               	goto	l322
  3513  0D1C                     l3453:	
  3514  0D1C  0827               	movf	luciSemaforo@index,w
  3515  0D1D  00A5               	movwf	??_luciSemaforo
  3516  0D1E  01A6               	clrf	??_luciSemaforo+1
  3517                           
  3518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3519                           ; Switch size 1, requested type "simple"
  3520                           ; Number of cases is 1, Range of values is 0 to 0
  3521                           ; switch strategies available:
  3522                           ; Name         Instructions Cycles
  3523                           ; simple_byte            4     3 (average)
  3524                           ; direct_byte           11     8 (fixed)
  3525                           ; jumptable            260     6 (fixed)
  3526                           ;	Chosen strategy is simple_byte
  3527  0D1F  0826               	movf	??_luciSemaforo+1,w
  3528  0D20  3A00               	xorlw	0	; case 0
  3529  0D21  1903               	skipnz
  3530  0D22  2D24               	goto	l3949
  3531  0D23  2D2C               	goto	l322
  3532  0D24                     l3949:	
  3533                           
  3534                           ; Switch size 1, requested type "simple"
  3535                           ; Number of cases is 2, Range of values is 0 to 1
  3536                           ; switch strategies available:
  3537                           ; Name         Instructions Cycles
  3538                           ; simple_byte            7     4 (average)
  3539                           ; direct_byte           14     8 (fixed)
  3540                           ; jumptable            260     6 (fixed)
  3541                           ;	Chosen strategy is simple_byte
  3542  0D24  0825               	movf	??_luciSemaforo,w
  3543  0D25  3A00               	xorlw	0	; case 0
  3544  0D26  1903               	skipnz
  3545  0D27  2CEA               	goto	l3445
  3546  0D28  3A01               	xorlw	1	; case 1
  3547  0D29  1903               	skipnz
  3548  0D2A  2D09               	goto	l3449
  3549  0D2B  2D2C               	goto	l322
  3550  0D2C                     l322:	
  3551  0D2C  0008               	return
  3552  0D2D                     __end_of_luciSemaforo:	
  3553                           
  3554                           	psect	text9
  3555  0AA6                     __ptext9:	
  3556 ;; *************** function _init_ADC *****************
  3557 ;; Defined at:
  3558 ;;		line 341 in file "main.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3572 ;;      Params:         0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0
  3574 ;;      Temps:          0       1       0       0       0
  3575 ;;      Totals:         0       1       0       0       0
  3576 ;;Total ram usage:        1 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    3
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_main
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _init_ADC
  3588  0AA6                     _init_ADC:	
  3589  0AA6                     l3389:	
  3590                           ;incstack = 0
  3591                           ; Regs used in _init_ADC: [wreg+status,2]
  3592                           
  3593                           
  3594                           ;main.c: 343:     TRISA = 0xE3;
  3595  0AA6  30E3               	movlw	227
  3596  0AA7  1683               	bsf	3,5	;RP0=1, select bank1
  3597  0AA8  1303               	bcf	3,6	;RP1=0, select bank1
  3598  0AA9  0085               	movwf	5	;volatile
  3599  0AAA                     l3391:	
  3600                           
  3601                           ;main.c: 344:     ADCON0 = 0x00;
  3602  0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0AAB  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0AAC  019F               	clrf	31	;volatile
  3605  0AAD                     l3393:	
  3606                           
  3607                           ;main.c: 345:     ADCON1 = 0x80;
  3608  0AAD  3080               	movlw	128
  3609  0AAE  1683               	bsf	3,5	;RP0=1, select bank1
  3610  0AAF  1303               	bcf	3,6	;RP1=0, select bank1
  3611  0AB0  009F               	movwf	31	;volatile
  3612  0AB1                     l3395:	
  3613                           
  3614                           ;main.c: 346:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3615  0AB1  3019               	movlw	25
  3616  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0AB4  00A4               	movwf	??_init_ADC
  3619  0AB5                     u3277:	
  3620  0AB5  0BA4               	decfsz	??_init_ADC,f
  3621  0AB6  2AB5               	goto	u3277
  3622  0AB7  2AB8               	nop2
  3623  0AB8                     l265:	
  3624  0AB8  0008               	return
  3625  0AB9                     __end_of_init_ADC:	
  3626                           
  3627                           	psect	text10
  3628  077E                     __ptext10:	
  3629 ;; *************** function _UpdateTimes *****************
  3630 ;; Defined at:
  3631 ;;		line 4 in file "./CustomLib/TrafficLight.h"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  _semafori       1    wreg     PTR PTR struct .
  3634 ;;		 -> Semafori(2), 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  _semafori       1   14[BANK0 ] PTR PTR struct .
  3637 ;;		 -> Semafori(2), 
  3638 ;;  i               1   15[BANK0 ] unsigned char 
  3639 ;;  l               1   16[BANK0 ] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3649 ;;      Params:         0       0       0       0       0
  3650 ;;      Locals:         0       3       0       0       0
  3651 ;;      Temps:          0      10       0       0       0
  3652 ;;      Totals:         0      13       0       0       0
  3653 ;;Total ram usage:       13 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    3
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           
  3664                           ;psect for function _UpdateTimes
  3665  077E                     _UpdateTimes:	
  3666                           
  3667                           ;incstack = 0
  3668                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3669                           ;UpdateTimes@_semafori stored from wreg
  3670  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3671  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3672  0780  00AE               	movwf	UpdateTimes@_semafori
  3673  0781                     l3293:	
  3674                           
  3675                           ;./CustomLib/TrafficLight.h: 4: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 5: {;./CustomLib/TrafficLight.h: 7:     for (unsigned char l = 0; l < n_semafo
      +                          ri; l++)
  3676  0781  01B0               	clrf	UpdateTimes@l
  3677  0782                     l3299:	
  3678                           
  3679                           ;./CustomLib/TrafficLight.h: 8:     {;./CustomLib/TrafficLight.h: 9:         for (unsign
      +                          ed char i = 0; i < 3; i++)
  3680  0782  01AF               	clrf	UpdateTimes@i
  3681  0783                     l3305:	
  3682                           
  3683                           ;./CustomLib/TrafficLight.h: 10:         {;./CustomLib/TrafficLight.h: 11:             i
      +                          f ((*(_semafori)[l]).times[i] != (*(_semafori)[l]).new_times[i])
  3684  0783  0830               	movf	UpdateTimes@l,w
  3685  0784  072E               	addwf	UpdateTimes@_semafori,w
  3686  0785  00A4               	movwf	??_UpdateTimes
  3687  0786  0824               	movf	??_UpdateTimes,w
  3688  0787  0084               	movwf	4
  3689  0788  082F               	movf	UpdateTimes@i,w
  3690  0789  00A5               	movwf	??_UpdateTimes+1
  3691  078A  0725               	addwf	??_UpdateTimes+1,w
  3692  078B  1383               	bcf	3,7	;select IRP bank0
  3693  078C  0700               	addwf	0,w
  3694  078D  00A6               	movwf	??_UpdateTimes+2
  3695  078E  0826               	movf	??_UpdateTimes+2,w
  3696  078F  3E06               	addlw	6
  3697  0790  0084               	movwf	4
  3698  0791  0800               	movf	0,w
  3699  0792  00A7               	movwf	??_UpdateTimes+3
  3700  0793  0A84               	incf	4,f
  3701  0794  0800               	movf	0,w
  3702  0795  00A8               	movwf	??_UpdateTimes+4
  3703  0796  0830               	movf	UpdateTimes@l,w
  3704  0797  072E               	addwf	UpdateTimes@_semafori,w
  3705  0798  00A9               	movwf	??_UpdateTimes+5
  3706  0799  0829               	movf	??_UpdateTimes+5,w
  3707  079A  0084               	movwf	4
  3708  079B  082F               	movf	UpdateTimes@i,w
  3709  079C  00AA               	movwf	??_UpdateTimes+6
  3710  079D  072A               	addwf	??_UpdateTimes+6,w
  3711  079E  0700               	addwf	0,w
  3712  079F  00AB               	movwf	??_UpdateTimes+7
  3713  07A0  082B               	movf	??_UpdateTimes+7,w
  3714  07A1  0084               	movwf	4
  3715  07A2  0800               	movf	0,w
  3716  07A3  00AC               	movwf	??_UpdateTimes+8
  3717  07A4  0A84               	incf	4,f
  3718  07A5  0800               	movf	0,w
  3719  07A6  00AD               	movwf	??_UpdateTimes+9
  3720  07A7  0828               	movf	??_UpdateTimes+4,w
  3721  07A8  062D               	xorwf	??_UpdateTimes+9,w
  3722  07A9  1D03               	skipz
  3723  07AA  2FAD               	goto	u2845
  3724  07AB  0827               	movf	??_UpdateTimes+3,w
  3725  07AC  062C               	xorwf	??_UpdateTimes+8,w
  3726  07AD                     u2845:	
  3727  07AD  1903               	skipnz
  3728  07AE  2FB0               	goto	u2841
  3729  07AF  2FB1               	goto	u2840
  3730  07B0                     u2841:	
  3731  07B0  2FD4               	goto	l3309
  3732  07B1                     u2840:	
  3733  07B1                     l3307:	
  3734                           
  3735                           ;./CustomLib/TrafficLight.h: 12:             {;./CustomLib/TrafficLight.h: 13:          
      +                                 (*(_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3736  07B1  0830               	movf	UpdateTimes@l,w
  3737  07B2  072E               	addwf	UpdateTimes@_semafori,w
  3738  07B3  00A4               	movwf	??_UpdateTimes
  3739  07B4  0824               	movf	??_UpdateTimes,w
  3740  07B5  0084               	movwf	4
  3741  07B6  082F               	movf	UpdateTimes@i,w
  3742  07B7  00A5               	movwf	??_UpdateTimes+1
  3743  07B8  0725               	addwf	??_UpdateTimes+1,w
  3744  07B9  0700               	addwf	0,w
  3745  07BA  00A6               	movwf	??_UpdateTimes+2
  3746  07BB  0826               	movf	??_UpdateTimes+2,w
  3747  07BC  3E06               	addlw	6
  3748  07BD  0084               	movwf	4
  3749  07BE  0800               	movf	0,w
  3750  07BF  00A7               	movwf	??_UpdateTimes+3
  3751  07C0  0A84               	incf	4,f
  3752  07C1  0800               	movf	0,w
  3753  07C2  00A8               	movwf	??_UpdateTimes+4
  3754  07C3  0830               	movf	UpdateTimes@l,w
  3755  07C4  072E               	addwf	UpdateTimes@_semafori,w
  3756  07C5  00A9               	movwf	??_UpdateTimes+5
  3757  07C6  0829               	movf	??_UpdateTimes+5,w
  3758  07C7  0084               	movwf	4
  3759  07C8  082F               	movf	UpdateTimes@i,w
  3760  07C9  00AA               	movwf	??_UpdateTimes+6
  3761  07CA  072A               	addwf	??_UpdateTimes+6,w
  3762  07CB  0700               	addwf	0,w
  3763  07CC  00AB               	movwf	??_UpdateTimes+7
  3764  07CD  082B               	movf	??_UpdateTimes+7,w
  3765  07CE  0084               	movwf	4
  3766  07CF  0827               	movf	??_UpdateTimes+3,w
  3767  07D0  0080               	movwf	0
  3768  07D1  0A84               	incf	4,f
  3769  07D2  0828               	movf	??_UpdateTimes+4,w
  3770  07D3  0080               	movwf	0
  3771  07D4                     l3309:	
  3772                           
  3773                           ;./CustomLib/TrafficLight.h: 15:         }
  3774  07D4  3001               	movlw	1
  3775  07D5  00A4               	movwf	??_UpdateTimes
  3776  07D6  0824               	movf	??_UpdateTimes,w
  3777  07D7  07AF               	addwf	UpdateTimes@i,f
  3778  07D8                     l3311:	
  3779  07D8  3003               	movlw	3
  3780  07D9  022F               	subwf	UpdateTimes@i,w
  3781  07DA  1C03               	skipc
  3782  07DB  2FDD               	goto	u2851
  3783  07DC  2FDE               	goto	u2850
  3784  07DD                     u2851:	
  3785  07DD  2F83               	goto	l3305
  3786  07DE                     u2850:	
  3787  07DE                     l3315:	
  3788                           
  3789                           ;./CustomLib/TrafficLight.h: 21:     }
  3790  07DE  3001               	movlw	1
  3791  07DF  00A4               	movwf	??_UpdateTimes
  3792  07E0  0824               	movf	??_UpdateTimes,w
  3793  07E1  07B0               	addwf	UpdateTimes@l,f
  3794  07E2                     l3317:	
  3795  07E2  3002               	movlw	2
  3796  07E3  0230               	subwf	UpdateTimes@l,w
  3797  07E4  1C03               	skipc
  3798  07E5  2FE7               	goto	u2861
  3799  07E6  2FE8               	goto	u2860
  3800  07E7                     u2861:	
  3801  07E7  2F82               	goto	l3299
  3802  07E8                     u2860:	
  3803  07E8                     l127:	
  3804  07E8  0008               	return
  3805  07E9                     __end_of_UpdateTimes:	
  3806                           
  3807                           	psect	text11
  3808  0B7F                     __ptext11:	
  3809 ;; *************** function _UART_Init *****************
  3810 ;; Defined at:
  3811 ;;		line 360 in file "main.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  baudrate        2   19[BANK0 ] int 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0, pclath, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3825 ;;      Params:         0       2       0       0       0
  3826 ;;      Locals:         0       0       0       0       0
  3827 ;;      Temps:          0       4       0       0       0
  3828 ;;      Totals:         0       6       0       0       0
  3829 ;;Total ram usage:        6 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    4
  3832 ;; This function calls:
  3833 ;;		___aldiv
  3834 ;; This function is called by:
  3835 ;;		_main
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           
  3840                           ;psect for function _UART_Init
  3841  0B7F                     _UART_Init:	
  3842  0B7F                     l3397:	
  3843                           ;incstack = 0
  3844                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3845                           
  3846                           
  3847                           ;main.c: 360: void UART_Init(int baudrate);main.c: 361: {;main.c: 362:     TRISCbits.TRI
      +                          SC6 = 0;
  3848  0B7F  1683               	bsf	3,5	;RP0=1, select bank1
  3849  0B80  1303               	bcf	3,6	;RP1=0, select bank1
  3850  0B81  1307               	bcf	7,6	;volatile
  3851                           
  3852                           ;main.c: 363:     TXSTAbits.TXEN = 1;
  3853  0B82  1698               	bsf	24,5	;volatile
  3854                           
  3855                           ;main.c: 364:     RCSTAbits.SPEN = 1;
  3856  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  3857  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  3858  0B85  1798               	bsf	24,7	;volatile
  3859                           
  3860                           ;main.c: 365:     RCSTAbits.CREN = 1;
  3861  0B86  1618               	bsf	24,4	;volatile
  3862  0B87                     l3399:	
  3863                           
  3864                           ;main.c: 366:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3865  0B87  0833               	movf	UART_Init@baudrate,w
  3866  0B88  00B5               	movwf	??_UART_Init
  3867  0B89  0834               	movf	UART_Init@baudrate+1,w
  3868  0B8A  00B6               	movwf	??_UART_Init+1
  3869  0B8B  3000               	movlw	0
  3870  0B8C  1BB6               	btfsc	??_UART_Init+1,7
  3871  0B8D  30FF               	movlw	255
  3872  0B8E  00B7               	movwf	??_UART_Init+2
  3873  0B8F  00B8               	movwf	??_UART_Init+3
  3874  0B90  3006               	movlw	6
  3875  0B91                     u2925:	
  3876  0B91  1003               	clrc
  3877  0B92  0DB5               	rlf	??_UART_Init,f
  3878  0B93  0DB6               	rlf	??_UART_Init+1,f
  3879  0B94  0DB7               	rlf	??_UART_Init+2,f
  3880  0B95  0DB8               	rlf	??_UART_Init+3,f
  3881  0B96                     u2920:	
  3882  0B96  3EFF               	addlw	-1
  3883  0B97  1D03               	skipz
  3884  0B98  2B91               	goto	u2925
  3885  0B99  0838               	movf	??_UART_Init+3,w
  3886  0B9A  00A7               	movwf	___aldiv@divisor+3
  3887  0B9B  0837               	movf	??_UART_Init+2,w
  3888  0B9C  00A6               	movwf	___aldiv@divisor+2
  3889  0B9D  0836               	movf	??_UART_Init+1,w
  3890  0B9E  00A5               	movwf	___aldiv@divisor+1
  3891  0B9F  0835               	movf	??_UART_Init,w
  3892  0BA0  00A4               	movwf	___aldiv@divisor
  3893  0BA1  3001               	movlw	1
  3894  0BA2  00AB               	movwf	___aldiv@dividend+3
  3895  0BA3  30E8               	movlw	232
  3896  0BA4  00AA               	movwf	___aldiv@dividend+2
  3897  0BA5  3048               	movlw	72
  3898  0BA6  00A9               	movwf	___aldiv@dividend+1
  3899  0BA7  3000               	movlw	0
  3900  0BA8  00A8               	movwf	___aldiv@dividend
  3901  0BA9  120A  158A  2763  120A  158A  	fcall	___aldiv
  3902  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3903  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3904  0BB0  0824               	movf	?___aldiv,w
  3905  0BB1  3EFF               	addlw	255
  3906  0BB2  1683               	bsf	3,5	;RP0=1, select bank1
  3907  0BB3  1303               	bcf	3,6	;RP1=0, select bank1
  3908  0BB4  0099               	movwf	25	;volatile
  3909  0BB5                     l3401:	
  3910                           
  3911                           ;main.c: 367:     INTCONbits.GIE = 1;
  3912  0BB5  178B               	bsf	11,7	;volatile
  3913  0BB6                     l3403:	
  3914                           
  3915                           ;main.c: 368:     INTCONbits.PEIE = 1;
  3916  0BB6  170B               	bsf	11,6	;volatile
  3917  0BB7                     l3405:	
  3918                           
  3919                           ;main.c: 369:     PIE1bits.RCIE = 1;
  3920  0BB7  168C               	bsf	12,5	;volatile
  3921  0BB8                     l274:	
  3922  0BB8  0008               	return
  3923  0BB9                     __end_of_UART_Init:	
  3924                           
  3925                           	psect	text12
  3926  0F63                     __ptext12:	
  3927 ;; *************** function ___aldiv *****************
  3928 ;; Defined at:
  3929 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  divisor         4    4[BANK0 ] long 
  3932 ;;  dividend        4    8[BANK0 ] long 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  quotient        4   15[BANK0 ] long 
  3935 ;;  sign            1   14[BANK0 ] unsigned char 
  3936 ;;  counter         1   13[BANK0 ] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  4    4[BANK0 ] long 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3946 ;;      Params:         0       8       0       0       0
  3947 ;;      Locals:         0       6       0       0       0
  3948 ;;      Temps:          0       1       0       0       0
  3949 ;;      Totals:         0      15       0       0       0
  3950 ;;Total ram usage:       15 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    3
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_UART_Init
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           
  3961                           ;psect for function ___aldiv
  3962  0F63                     ___aldiv:	
  3963  0F63                     l3171:	
  3964                           ;incstack = 0
  3965                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3966                           
  3967  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0F65  01AE               	clrf	___aldiv@sign
  3970  0F66                     l3173:	
  3971  0F66  1FA7               	btfss	___aldiv@divisor+3,7
  3972  0F67  2F69               	goto	u2551
  3973  0F68  2F6A               	goto	u2550
  3974  0F69                     u2551:	
  3975  0F69  2F77               	goto	l504
  3976  0F6A                     u2550:	
  3977  0F6A                     l3175:	
  3978  0F6A  09A4               	comf	___aldiv@divisor,f
  3979  0F6B  09A5               	comf	___aldiv@divisor+1,f
  3980  0F6C  09A6               	comf	___aldiv@divisor+2,f
  3981  0F6D  09A7               	comf	___aldiv@divisor+3,f
  3982  0F6E  0AA4               	incf	___aldiv@divisor,f
  3983  0F6F  1903               	skipnz
  3984  0F70  0AA5               	incf	___aldiv@divisor+1,f
  3985  0F71  1903               	skipnz
  3986  0F72  0AA6               	incf	___aldiv@divisor+2,f
  3987  0F73  1903               	skipnz
  3988  0F74  0AA7               	incf	___aldiv@divisor+3,f
  3989  0F75  01AE               	clrf	___aldiv@sign
  3990  0F76  0AAE               	incf	___aldiv@sign,f
  3991  0F77                     l504:	
  3992  0F77  1FAB               	btfss	___aldiv@dividend+3,7
  3993  0F78  2F7A               	goto	u2561
  3994  0F79  2F7B               	goto	u2560
  3995  0F7A                     u2561:	
  3996  0F7A  2F8A               	goto	l3181
  3997  0F7B                     u2560:	
  3998  0F7B                     l3177:	
  3999  0F7B  09A8               	comf	___aldiv@dividend,f
  4000  0F7C  09A9               	comf	___aldiv@dividend+1,f
  4001  0F7D  09AA               	comf	___aldiv@dividend+2,f
  4002  0F7E  09AB               	comf	___aldiv@dividend+3,f
  4003  0F7F  0AA8               	incf	___aldiv@dividend,f
  4004  0F80  1903               	skipnz
  4005  0F81  0AA9               	incf	___aldiv@dividend+1,f
  4006  0F82  1903               	skipnz
  4007  0F83  0AAA               	incf	___aldiv@dividend+2,f
  4008  0F84  1903               	skipnz
  4009  0F85  0AAB               	incf	___aldiv@dividend+3,f
  4010  0F86                     l3179:	
  4011  0F86  3001               	movlw	1
  4012  0F87  00AC               	movwf	??___aldiv
  4013  0F88  082C               	movf	??___aldiv,w
  4014  0F89  06AE               	xorwf	___aldiv@sign,f
  4015  0F8A                     l3181:	
  4016  0F8A  3000               	movlw	0
  4017  0F8B  00B2               	movwf	___aldiv@quotient+3
  4018  0F8C  3000               	movlw	0
  4019  0F8D  00B1               	movwf	___aldiv@quotient+2
  4020  0F8E  3000               	movlw	0
  4021  0F8F  00B0               	movwf	___aldiv@quotient+1
  4022  0F90  3000               	movlw	0
  4023  0F91  00AF               	movwf	___aldiv@quotient
  4024  0F92                     l3183:	
  4025  0F92  0827               	movf	___aldiv@divisor+3,w
  4026  0F93  0426               	iorwf	___aldiv@divisor+2,w
  4027  0F94  0425               	iorwf	___aldiv@divisor+1,w
  4028  0F95  0424               	iorwf	___aldiv@divisor,w
  4029  0F96  1903               	skipnz
  4030  0F97  2F99               	goto	u2571
  4031  0F98  2F9A               	goto	u2570
  4032  0F99                     u2571:	
  4033  0F99  2FE7               	goto	l3203
  4034  0F9A                     u2570:	
  4035  0F9A                     l3185:	
  4036  0F9A  01AD               	clrf	___aldiv@counter
  4037  0F9B  0AAD               	incf	___aldiv@counter,f
  4038  0F9C  2FAA               	goto	l3189
  4039  0F9D                     l3187:	
  4040  0F9D  3001               	movlw	1
  4041  0F9E  00AC               	movwf	??___aldiv
  4042  0F9F                     u2585:	
  4043  0F9F  1003               	clrc
  4044  0FA0  0DA4               	rlf	___aldiv@divisor,f
  4045  0FA1  0DA5               	rlf	___aldiv@divisor+1,f
  4046  0FA2  0DA6               	rlf	___aldiv@divisor+2,f
  4047  0FA3  0DA7               	rlf	___aldiv@divisor+3,f
  4048  0FA4  0BAC               	decfsz	??___aldiv,f
  4049  0FA5  2F9F               	goto	u2585
  4050  0FA6  3001               	movlw	1
  4051  0FA7  00AC               	movwf	??___aldiv
  4052  0FA8  082C               	movf	??___aldiv,w
  4053  0FA9  07AD               	addwf	___aldiv@counter,f
  4054  0FAA                     l3189:	
  4055  0FAA  1FA7               	btfss	___aldiv@divisor+3,7
  4056  0FAB  2FAD               	goto	u2591
  4057  0FAC  2FAE               	goto	u2590
  4058  0FAD                     u2591:	
  4059  0FAD  2F9D               	goto	l3187
  4060  0FAE                     u2590:	
  4061  0FAE                     l3191:	
  4062  0FAE  3001               	movlw	1
  4063  0FAF  00AC               	movwf	??___aldiv
  4064  0FB0                     u2605:	
  4065  0FB0  1003               	clrc
  4066  0FB1  0DAF               	rlf	___aldiv@quotient,f
  4067  0FB2  0DB0               	rlf	___aldiv@quotient+1,f
  4068  0FB3  0DB1               	rlf	___aldiv@quotient+2,f
  4069  0FB4  0DB2               	rlf	___aldiv@quotient+3,f
  4070  0FB5  0BAC               	decfsz	??___aldiv,f
  4071  0FB6  2FB0               	goto	u2605
  4072  0FB7                     l3193:	
  4073  0FB7  0827               	movf	___aldiv@divisor+3,w
  4074  0FB8  022B               	subwf	___aldiv@dividend+3,w
  4075  0FB9  1D03               	skipz
  4076  0FBA  2FC5               	goto	u2615
  4077  0FBB  0826               	movf	___aldiv@divisor+2,w
  4078  0FBC  022A               	subwf	___aldiv@dividend+2,w
  4079  0FBD  1D03               	skipz
  4080  0FBE  2FC5               	goto	u2615
  4081  0FBF  0825               	movf	___aldiv@divisor+1,w
  4082  0FC0  0229               	subwf	___aldiv@dividend+1,w
  4083  0FC1  1D03               	skipz
  4084  0FC2  2FC5               	goto	u2615
  4085  0FC3  0824               	movf	___aldiv@divisor,w
  4086  0FC4  0228               	subwf	___aldiv@dividend,w
  4087  0FC5                     u2615:	
  4088  0FC5  1C03               	skipc
  4089  0FC6  2FC8               	goto	u2611
  4090  0FC7  2FC9               	goto	u2610
  4091  0FC8                     u2611:	
  4092  0FC8  2FD8               	goto	l3199
  4093  0FC9                     u2610:	
  4094  0FC9                     l3195:	
  4095  0FC9  0824               	movf	___aldiv@divisor,w
  4096  0FCA  02A8               	subwf	___aldiv@dividend,f
  4097  0FCB  0825               	movf	___aldiv@divisor+1,w
  4098  0FCC  1C03               	skipc
  4099  0FCD  0F25               	incfsz	___aldiv@divisor+1,w
  4100  0FCE  02A9               	subwf	___aldiv@dividend+1,f
  4101  0FCF  0826               	movf	___aldiv@divisor+2,w
  4102  0FD0  1C03               	skipc
  4103  0FD1  0F26               	incfsz	___aldiv@divisor+2,w
  4104  0FD2  02AA               	subwf	___aldiv@dividend+2,f
  4105  0FD3  0827               	movf	___aldiv@divisor+3,w
  4106  0FD4  1C03               	skipc
  4107  0FD5  0F27               	incfsz	___aldiv@divisor+3,w
  4108  0FD6  02AB               	subwf	___aldiv@dividend+3,f
  4109  0FD7                     l3197:	
  4110  0FD7  142F               	bsf	___aldiv@quotient,0
  4111  0FD8                     l3199:	
  4112  0FD8  3001               	movlw	1
  4113  0FD9                     u2625:	
  4114  0FD9  1003               	clrc
  4115  0FDA  0CA7               	rrf	___aldiv@divisor+3,f
  4116  0FDB  0CA6               	rrf	___aldiv@divisor+2,f
  4117  0FDC  0CA5               	rrf	___aldiv@divisor+1,f
  4118  0FDD  0CA4               	rrf	___aldiv@divisor,f
  4119  0FDE  3EFF               	addlw	-1
  4120  0FDF  1D03               	skipz
  4121  0FE0  2FD9               	goto	u2625
  4122  0FE1                     l3201:	
  4123  0FE1  3001               	movlw	1
  4124  0FE2  02AD               	subwf	___aldiv@counter,f
  4125  0FE3  1D03               	btfss	3,2
  4126  0FE4  2FE6               	goto	u2631
  4127  0FE5  2FE7               	goto	u2630
  4128  0FE6                     u2631:	
  4129  0FE6  2FAE               	goto	l3191
  4130  0FE7                     u2630:	
  4131  0FE7                     l3203:	
  4132  0FE7  082E               	movf	___aldiv@sign,w
  4133  0FE8  1903               	btfsc	3,2
  4134  0FE9  2FEB               	goto	u2641
  4135  0FEA  2FEC               	goto	u2640
  4136  0FEB                     u2641:	
  4137  0FEB  2FF7               	goto	l3207
  4138  0FEC                     u2640:	
  4139  0FEC                     l3205:	
  4140  0FEC  09AF               	comf	___aldiv@quotient,f
  4141  0FED  09B0               	comf	___aldiv@quotient+1,f
  4142  0FEE  09B1               	comf	___aldiv@quotient+2,f
  4143  0FEF  09B2               	comf	___aldiv@quotient+3,f
  4144  0FF0  0AAF               	incf	___aldiv@quotient,f
  4145  0FF1  1903               	skipnz
  4146  0FF2  0AB0               	incf	___aldiv@quotient+1,f
  4147  0FF3  1903               	skipnz
  4148  0FF4  0AB1               	incf	___aldiv@quotient+2,f
  4149  0FF5  1903               	skipnz
  4150  0FF6  0AB2               	incf	___aldiv@quotient+3,f
  4151  0FF7                     l3207:	
  4152  0FF7  0832               	movf	___aldiv@quotient+3,w
  4153  0FF8  00A7               	movwf	?___aldiv+3
  4154  0FF9  0831               	movf	___aldiv@quotient+2,w
  4155  0FFA  00A6               	movwf	?___aldiv+2
  4156  0FFB  0830               	movf	___aldiv@quotient+1,w
  4157  0FFC  00A5               	movwf	?___aldiv+1
  4158  0FFD  082F               	movf	___aldiv@quotient,w
  4159  0FFE  00A4               	movwf	?___aldiv
  4160  0FFF                     l514:	
  4161  0FFF  0008               	return
  4162  1000                     __end_of___aldiv:	
  4163                           
  4164                           	psect	text13
  4165  06D1                     __ptext13:	
  4166 ;; *************** function _ShowDigitsOnDisplay *****************
  4167 ;; Defined at:
  4168 ;;		line 502 in file "main.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  display_inde    1   13[BANK0 ] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         0       0       0       0       0
  4183 ;;      Locals:         0       1       0       0       0
  4184 ;;      Temps:          0       2       0       0       0
  4185 ;;      Totals:         0       3       0       0       0
  4186 ;;Total ram usage:        3 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    4
  4189 ;; This function calls:
  4190 ;;		_SetDisplay
  4191 ;;		___awmod
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _ShowDigitsOnDisplay
  4199  06D1                     _ShowDigitsOnDisplay:	
  4200  06D1                     l3473:	
  4201                           ;incstack = 0
  4202                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4203                           
  4204                           
  4205                           ;main.c: 504:     for (unsigned char display_index = 0; display_index < n_semafori; disp
      +                          lay_index++)
  4206  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  4207  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  4208  06D3  01AD               	clrf	ShowDigitsOnDisplay@display_index
  4209  06D4  2F48               	goto	l3493
  4210  06D5                     l3479:	
  4211                           
  4212                           ;main.c: 509:             if ((*DigitsArr[display_index]).centinaia > 0)
  4213  06D5  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4214  06D6  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4215  06D7  0084               	movwf	4
  4216  06D8  1383               	bcf	3,7	;select IRP bank0
  4217  06D9  0800               	movf	0,w
  4218  06DA  0084               	movwf	4
  4219  06DB  0800               	movf	0,w
  4220  06DC  1903               	btfsc	3,2
  4221  06DD  2EDF               	goto	u2971
  4222  06DE  2EE0               	goto	u2970
  4223  06DF                     u2971:	
  4224  06DF  2F5B               	goto	l3495
  4225  06E0                     u2970:	
  4226  06E0                     l3481:	
  4227                           
  4228                           ;main.c: 510:             {;main.c: 511:                 SetDisplay(display_index, 1, 0,
      +                           0, display[(*DigitsArr[display_index]).centinaia]);
  4229  06E0  01A4               	clrf	SetDisplay@d1
  4230  06E1  0AA4               	incf	SetDisplay@d1,f
  4231  06E2  01A5               	clrf	SetDisplay@d2
  4232  06E3  01A6               	clrf	SetDisplay@d3
  4233  06E4  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4234  06E5  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4235  06E6  0084               	movwf	4
  4236  06E7  0800               	movf	0,w
  4237  06E8  0084               	movwf	4
  4238  06E9  0800               	movf	0,w
  4239  06EA  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4240  06EB  0084               	movwf	4
  4241  06EC  120A  158A  2000  120A  118A  	fcall	stringdir
  4242  06F1  00AB               	movwf	??_ShowDigitsOnDisplay
  4243  06F2  082B               	movf	??_ShowDigitsOnDisplay,w
  4244  06F3  00A7               	movwf	SetDisplay@value
  4245  06F4  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4246  06F5  120A  158A  252D  120A  118A  	fcall	_SetDisplay
  4247  06FA  2F5B               	goto	l3495
  4248  06FB                     l3483:	
  4249                           
  4250                           ;main.c: 515:             if ((*DigitsArr[display_index]).decine > 0 || (*DigitsArr[disp
      +                          lay_index]).centinaia > 0)
  4251  06FB  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4252  06FC  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4253  06FD  0084               	movwf	4
  4254  06FE  1383               	bcf	3,7	;select IRP bank0
  4255  06FF  0A00               	incf	0,w
  4256  0700  0084               	movwf	4
  4257  0701  0800               	movf	0,w
  4258  0702  1D03               	btfss	3,2
  4259  0703  2F05               	goto	u2981
  4260  0704  2F06               	goto	u2980
  4261  0705                     u2981:	
  4262  0705  2F10               	goto	l3487
  4263  0706                     u2980:	
  4264  0706                     l3485:	
  4265  0706  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4266  0707  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4267  0708  0084               	movwf	4
  4268  0709  0800               	movf	0,w
  4269  070A  0084               	movwf	4
  4270  070B  0800               	movf	0,w
  4271  070C  1903               	btfsc	3,2
  4272  070D  2F0F               	goto	u2991
  4273  070E  2F10               	goto	u2990
  4274  070F                     u2991:	
  4275  070F  2F5B               	goto	l3495
  4276  0710                     u2990:	
  4277  0710                     l3487:	
  4278                           
  4279                           ;main.c: 516:             {;main.c: 517:                 SetDisplay(display_index, 0, 1,
      +                           0, display[(*DigitsArr[display_index]).decine]);
  4280  0710  01A4               	clrf	SetDisplay@d1
  4281  0711  01A5               	clrf	SetDisplay@d2
  4282  0712  0AA5               	incf	SetDisplay@d2,f
  4283  0713  01A6               	clrf	SetDisplay@d3
  4284  0714  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4285  0715  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4286  0716  0084               	movwf	4
  4287  0717  0A00               	incf	0,w
  4288  0718  0084               	movwf	4
  4289  0719  0800               	movf	0,w
  4290  071A  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4291  071B  0084               	movwf	4
  4292  071C  120A  158A  2000  120A  118A  	fcall	stringdir
  4293  0721  00AB               	movwf	??_ShowDigitsOnDisplay
  4294  0722  082B               	movf	??_ShowDigitsOnDisplay,w
  4295  0723  00A7               	movwf	SetDisplay@value
  4296  0724  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4297  0725  120A  158A  252D  120A  118A  	fcall	_SetDisplay
  4298  072A  2F5B               	goto	l3495
  4299  072B                     l3489:	
  4300                           
  4301                           ;main.c: 521:             SetDisplay(display_index, 0, 0, 1, display[(*DigitsArr[display
      +                          _index]).unita]);
  4302  072B  01A4               	clrf	SetDisplay@d1
  4303  072C  01A5               	clrf	SetDisplay@d2
  4304  072D  01A6               	clrf	SetDisplay@d3
  4305  072E  0AA6               	incf	SetDisplay@d3,f
  4306  072F  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4307  0730  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4308  0731  0084               	movwf	4
  4309  0732  1383               	bcf	3,7	;select IRP bank0
  4310  0733  0800               	movf	0,w
  4311  0734  3E02               	addlw	2
  4312  0735  0084               	movwf	4
  4313  0736  0800               	movf	0,w
  4314  0737  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4315  0738  0084               	movwf	4
  4316  0739  120A  158A  2000  120A  118A  	fcall	stringdir
  4317  073E  00AB               	movwf	??_ShowDigitsOnDisplay
  4318  073F  082B               	movf	??_ShowDigitsOnDisplay,w
  4319  0740  00A7               	movwf	SetDisplay@value
  4320  0741  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4321  0742  120A  158A  252D  120A  118A  	fcall	_SetDisplay
  4322                           
  4323                           ;main.c: 522:             break;
  4324  0747  2F5B               	goto	l3495
  4325  0748                     l3493:	
  4326  0748  0855               	movf	_disp,w
  4327  0749  00AB               	movwf	??_ShowDigitsOnDisplay
  4328  074A  01AC               	clrf	??_ShowDigitsOnDisplay+1
  4329                           
  4330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4331                           ; Switch size 1, requested type "simple"
  4332                           ; Number of cases is 1, Range of values is 0 to 0
  4333                           ; switch strategies available:
  4334                           ; Name         Instructions Cycles
  4335                           ; simple_byte            4     3 (average)
  4336                           ; direct_byte           11     8 (fixed)
  4337                           ; jumptable            260     6 (fixed)
  4338                           ;	Chosen strategy is simple_byte
  4339  074B  082C               	movf	??_ShowDigitsOnDisplay+1,w
  4340  074C  3A00               	xorlw	0	; case 0
  4341  074D  1903               	skipnz
  4342  074E  2F50               	goto	l3951
  4343  074F  2F5B               	goto	l3495
  4344  0750                     l3951:	
  4345                           
  4346                           ; Switch size 1, requested type "simple"
  4347                           ; Number of cases is 3, Range of values is 0 to 2
  4348                           ; switch strategies available:
  4349                           ; Name         Instructions Cycles
  4350                           ; simple_byte           10     6 (average)
  4351                           ; direct_byte           17     8 (fixed)
  4352                           ; jumptable            260     6 (fixed)
  4353                           ;	Chosen strategy is simple_byte
  4354  0750  082B               	movf	??_ShowDigitsOnDisplay,w
  4355  0751  3A00               	xorlw	0	; case 0
  4356  0752  1903               	skipnz
  4357  0753  2ED5               	goto	l3479
  4358  0754  3A01               	xorlw	1	; case 1
  4359  0755  1903               	skipnz
  4360  0756  2EFB               	goto	l3483
  4361  0757  3A03               	xorlw	3	; case 2
  4362  0758  1903               	skipnz
  4363  0759  2F2B               	goto	l3489
  4364  075A  2F5B               	goto	l3495
  4365  075B                     l3495:	
  4366                           
  4367                           ;main.c: 524:     }
  4368  075B  3001               	movlw	1
  4369  075C  1283               	bcf	3,5	;RP0=0, select bank0
  4370  075D  1303               	bcf	3,6	;RP1=0, select bank0
  4371  075E  00AB               	movwf	??_ShowDigitsOnDisplay
  4372  075F  082B               	movf	??_ShowDigitsOnDisplay,w
  4373  0760  07AD               	addwf	ShowDigitsOnDisplay@display_index,f
  4374  0761                     l3497:	
  4375  0761  3002               	movlw	2
  4376  0762  022D               	subwf	ShowDigitsOnDisplay@display_index,w
  4377  0763  1C03               	skipc
  4378  0764  2F66               	goto	u3001
  4379  0765  2F67               	goto	u3000
  4380  0766                     u3001:	
  4381  0766  2F48               	goto	l3493
  4382  0767                     u3000:	
  4383  0767                     l3499:	
  4384                           
  4385                           ;main.c: 525:     disp = (disp + 1) % 3;
  4386  0767  3003               	movlw	3
  4387  0768  00A4               	movwf	___awmod@divisor
  4388  0769  3000               	movlw	0
  4389  076A  00A5               	movwf	___awmod@divisor+1
  4390  076B  0855               	movf	_disp,w
  4391  076C  3E01               	addlw	1
  4392  076D  00A6               	movwf	___awmod@dividend
  4393  076E  3000               	movlw	0
  4394  076F  1803               	skipnc
  4395  0770  3001               	movlw	1
  4396  0771  00A7               	movwf	___awmod@dividend+1
  4397  0772  120A  158A  25DA  120A  118A  	fcall	___awmod
  4398  0777  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0778  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0779  0824               	movf	?___awmod,w
  4401  077A  00AB               	movwf	??_ShowDigitsOnDisplay
  4402  077B  082B               	movf	??_ShowDigitsOnDisplay,w
  4403  077C  00D5               	movwf	_disp
  4404  077D                     l343:	
  4405  077D  0008               	return
  4406  077E                     __end_of_ShowDigitsOnDisplay:	
  4407                           
  4408                           	psect	text14
  4409  0D2D                     __ptext14:	
  4410 ;; *************** function _SetDisplay *****************
  4411 ;; Defined at:
  4412 ;;		line 477 in file "main.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  display_inde    1    wreg     unsigned char 
  4415 ;;  d1              1    4[BANK0 ] unsigned char 
  4416 ;;  d2              1    5[BANK0 ] unsigned char 
  4417 ;;  d3              1    6[BANK0 ] unsigned char 
  4418 ;;  value           1    7[BANK0 ] unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  display_inde    1   10[BANK0 ] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         0       4       0       0       0
  4431 ;;      Locals:         0       1       0       0       0
  4432 ;;      Temps:          0       2       0       0       0
  4433 ;;      Totals:         0       7       0       0       0
  4434 ;;Total ram usage:        7 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    3
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_ShowDigitsOnDisplay
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           
  4445                           ;psect for function _SetDisplay
  4446  0D2D                     _SetDisplay:	
  4447                           
  4448                           ;incstack = 0
  4449                           ; Regs used in _SetDisplay: [wreg-fsr0h+status,2+status,0]
  4450                           ;SetDisplay@display_index stored from wreg
  4451  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  4452  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  4453  0D2F  00AA               	movwf	SetDisplay@display_index
  4454  0D30                     l3111:	
  4455                           
  4456                           ;main.c: 477: void SetDisplay(unsigned char display_index, char d1, char d2, char d3, ch
      +                          ar value);main.c: 478: {;main.c: 479:     switch (display_index)
  4457  0D30  2D71               	goto	l3121
  4458  0D31                     l3113:	
  4459                           
  4460                           ;main.c: 482:         PORTAbits.RA2 = d1;
  4461  0D31  0C24               	rrf	SetDisplay@d1,w
  4462  0D32  1C03               	skipc
  4463  0D33  1105               	bcf	5,2	;volatile
  4464  0D34  1803               	skipnc
  4465  0D35  1505               	bsf	5,2	;volatile
  4466                           
  4467                           ;main.c: 483:         PORTAbits.RA3 = d2;
  4468  0D36  0C25               	rrf	SetDisplay@d2,w
  4469  0D37  1C03               	skipc
  4470  0D38  1185               	bcf	5,3	;volatile
  4471  0D39  1803               	skipnc
  4472  0D3A  1585               	bsf	5,3	;volatile
  4473                           
  4474                           ;main.c: 484:         PORTAbits.RA4 = d3;
  4475  0D3B  0C26               	rrf	SetDisplay@d3,w
  4476  0D3C  1C03               	skipc
  4477  0D3D  1205               	bcf	5,4	;volatile
  4478  0D3E  1803               	skipnc
  4479  0D3F  1605               	bsf	5,4	;volatile
  4480                           
  4481                           ;main.c: 485:         PORTBbits.RB0 = d1;
  4482  0D40  0C24               	rrf	SetDisplay@d1,w
  4483  0D41  1C03               	skipc
  4484  0D42  1006               	bcf	6,0	;volatile
  4485  0D43  1803               	skipnc
  4486  0D44  1406               	bsf	6,0	;volatile
  4487                           
  4488                           ;main.c: 486:         PORTBbits.RB0 = d2;
  4489  0D45  0C25               	rrf	SetDisplay@d2,w
  4490  0D46  1C03               	skipc
  4491  0D47  1006               	bcf	6,0	;volatile
  4492  0D48  1803               	skipnc
  4493  0D49  1406               	bsf	6,0	;volatile
  4494                           
  4495                           ;main.c: 487:         PORTBbits.RB0 = d3;
  4496  0D4A  0C26               	rrf	SetDisplay@d3,w
  4497  0D4B  1C03               	skipc
  4498  0D4C  1006               	bcf	6,0	;volatile
  4499  0D4D  1803               	skipnc
  4500  0D4E  1406               	bsf	6,0	;volatile
  4501  0D4F                     l3115:	
  4502                           
  4503                           ;main.c: 488:         PORTD = value;
  4504  0D4F  0827               	movf	SetDisplay@value,w
  4505  0D50  0088               	movwf	8	;volatile
  4506                           
  4507                           ;main.c: 489:         break;
  4508  0D51  2D81               	goto	l329
  4509  0D52                     l3117:	
  4510                           
  4511                           ;main.c: 491:         PORTAbits.RA5 = d1;
  4512  0D52  0C24               	rrf	SetDisplay@d1,w
  4513  0D53  1C03               	skipc
  4514  0D54  1285               	bcf	5,5	;volatile
  4515  0D55  1803               	skipnc
  4516  0D56  1685               	bsf	5,5	;volatile
  4517                           
  4518                           ;main.c: 492:         PORTBbits.RB0 = d2;
  4519  0D57  0C25               	rrf	SetDisplay@d2,w
  4520  0D58  1C03               	skipc
  4521  0D59  1006               	bcf	6,0	;volatile
  4522  0D5A  1803               	skipnc
  4523  0D5B  1406               	bsf	6,0	;volatile
  4524                           
  4525                           ;main.c: 493:         PORTBbits.RB0 = d3;
  4526  0D5C  0C26               	rrf	SetDisplay@d3,w
  4527  0D5D  1C03               	skipc
  4528  0D5E  1006               	bcf	6,0	;volatile
  4529  0D5F  1803               	skipnc
  4530  0D60  1406               	bsf	6,0	;volatile
  4531                           
  4532                           ;main.c: 494:         PORTBbits.RB0 = d1;
  4533  0D61  0C24               	rrf	SetDisplay@d1,w
  4534  0D62  1C03               	skipc
  4535  0D63  1006               	bcf	6,0	;volatile
  4536  0D64  1803               	skipnc
  4537  0D65  1406               	bsf	6,0	;volatile
  4538                           
  4539                           ;main.c: 495:         PORTBbits.RB0 = d2;
  4540  0D66  0C25               	rrf	SetDisplay@d2,w
  4541  0D67  1C03               	skipc
  4542  0D68  1006               	bcf	6,0	;volatile
  4543  0D69  1803               	skipnc
  4544  0D6A  1406               	bsf	6,0	;volatile
  4545                           
  4546                           ;main.c: 496:         PORTBbits.RB0 = d3;
  4547  0D6B  0C26               	rrf	SetDisplay@d3,w
  4548  0D6C  1C03               	skipc
  4549  0D6D  1006               	bcf	6,0	;volatile
  4550  0D6E  1803               	skipnc
  4551  0D6F  1406               	bsf	6,0	;volatile
  4552                           
  4553                           ;main.c: 498:         break;
  4554  0D70  2D81               	goto	l329
  4555  0D71                     l3121:	
  4556  0D71  082A               	movf	SetDisplay@display_index,w
  4557  0D72  00A8               	movwf	??_SetDisplay
  4558  0D73  01A9               	clrf	??_SetDisplay+1
  4559                           
  4560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4561                           ; Switch size 1, requested type "simple"
  4562                           ; Number of cases is 1, Range of values is 0 to 0
  4563                           ; switch strategies available:
  4564                           ; Name         Instructions Cycles
  4565                           ; simple_byte            4     3 (average)
  4566                           ; direct_byte           11     8 (fixed)
  4567                           ; jumptable            260     6 (fixed)
  4568                           ;	Chosen strategy is simple_byte
  4569  0D74  0829               	movf	??_SetDisplay+1,w
  4570  0D75  3A00               	xorlw	0	; case 0
  4571  0D76  1903               	skipnz
  4572  0D77  2D79               	goto	l3953
  4573  0D78  2D81               	goto	l329
  4574  0D79                     l3953:	
  4575                           
  4576                           ; Switch size 1, requested type "simple"
  4577                           ; Number of cases is 2, Range of values is 0 to 1
  4578                           ; switch strategies available:
  4579                           ; Name         Instructions Cycles
  4580                           ; simple_byte            7     4 (average)
  4581                           ; direct_byte           14     8 (fixed)
  4582                           ; jumptable            260     6 (fixed)
  4583                           ;	Chosen strategy is simple_byte
  4584  0D79  0828               	movf	??_SetDisplay,w
  4585  0D7A  3A00               	xorlw	0	; case 0
  4586  0D7B  1903               	skipnz
  4587  0D7C  2D31               	goto	l3113
  4588  0D7D  3A01               	xorlw	1	; case 1
  4589  0D7E  1903               	skipnz
  4590  0D7F  2D52               	goto	l3117
  4591  0D80  2D81               	goto	l329
  4592  0D81                     l329:	
  4593  0D81  0008               	return
  4594  0D82                     __end_of_SetDisplay:	
  4595                           
  4596                           	psect	text15
  4597  0E35                     __ptext15:	
  4598 ;; *************** function _SetReceivedTimes *****************
  4599 ;; Defined at:
  4600 ;;		line 86 in file "./CustomLib/TrafficLight.h"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4603 ;;		 -> dataFromGateway(15), 
  4604 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4605 ;;		 -> Semafori(2), 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  _dataFromGat    1   19[BANK0 ] PTR unsigned char 
  4608 ;;		 -> dataFromGateway(15), 
  4609 ;;  index           1   20[BANK0 ] unsigned char 
  4610 ;;  colorId         1   18[BANK0 ] unsigned char 
  4611 ;;  semaforoId      1   17[BANK0 ] unsigned char 
  4612 ;;  i               1   21[BANK0 ] unsigned char 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4622 ;;      Params:         0       1       0       0       0
  4623 ;;      Locals:         0       5       0       0       0
  4624 ;;      Temps:          0       4       0       0       0
  4625 ;;      Totals:         0      10       0       0       0
  4626 ;;Total ram usage:       10 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    4
  4629 ;; This function calls:
  4630 ;;		_GetTime
  4631 ;;		___bmul
  4632 ;; This function is called by:
  4633 ;;		_main
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           
  4638                           ;psect for function _SetReceivedTimes
  4639  0E35                     _SetReceivedTimes:	
  4640                           
  4641                           ;incstack = 0
  4642                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4643                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4644  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  4645  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  4646  0E37  00B3               	movwf	SetReceivedTimes@_dataFromGateway
  4647  0E38                     l3355:	
  4648                           
  4649                           ;./CustomLib/TrafficLight.h: 86: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 87: {;./CustomLib/TrafficLight.h: 88:   
      +                            for (unsigned char i = 0; i < 3; i++)
  4650  0E38  01B5               	clrf	SetReceivedTimes@i
  4651  0E39                     l3357:	
  4652  0E39  3003               	movlw	3
  4653  0E3A  0235               	subwf	SetReceivedTimes@i,w
  4654  0E3B  1C03               	skipc
  4655  0E3C  2E3E               	goto	u2891
  4656  0E3D  2E3F               	goto	u2890
  4657  0E3E                     u2891:	
  4658  0E3E  2E40               	goto	l3361
  4659  0E3F                     u2890:	
  4660  0E3F  2E94               	goto	l154
  4661  0E40                     l3361:	
  4662                           
  4663                           ;./CustomLib/TrafficLight.h: 89:     {;./CustomLib/TrafficLight.h: 90:         unsigned 
      +                          char index = i * 5;
  4664  0E40  3005               	movlw	5
  4665  0E41  00AD               	movwf	??_SetReceivedTimes
  4666  0E42  082D               	movf	??_SetReceivedTimes,w
  4667  0E43  00A4               	movwf	___bmul@multiplicand
  4668  0E44  0835               	movf	SetReceivedTimes@i,w
  4669  0E45  120A  118A  27E9  120A  158A  	fcall	___bmul
  4670  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0E4C  00AE               	movwf	??_SetReceivedTimes+1
  4673  0E4D  082E               	movf	??_SetReceivedTimes+1,w
  4674  0E4E  00B4               	movwf	SetReceivedTimes@index
  4675  0E4F                     l3363:	
  4676                           
  4677                           ;./CustomLib/TrafficLight.h: 91:         unsigned char semaforoId = (_dataFromGateway[in
      +                          dex] >> 1) & 0x0F;
  4678  0E4F  0834               	movf	SetReceivedTimes@index,w
  4679  0E50  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4680  0E51  00AD               	movwf	??_SetReceivedTimes
  4681  0E52  082D               	movf	??_SetReceivedTimes,w
  4682  0E53  0084               	movwf	4
  4683  0E54  1383               	bcf	3,7	;select IRP bank0
  4684  0E55  0800               	movf	0,w
  4685  0E56  00AE               	movwf	??_SetReceivedTimes+1
  4686  0E57  1003               	clrc
  4687  0E58  0C2E               	rrf	??_SetReceivedTimes+1,w
  4688  0E59  390F               	andlw	15
  4689  0E5A  00AF               	movwf	??_SetReceivedTimes+2
  4690  0E5B  082F               	movf	??_SetReceivedTimes+2,w
  4691  0E5C  00B1               	movwf	SetReceivedTimes@semaforoId
  4692  0E5D                     l3365:	
  4693                           
  4694                           ;./CustomLib/TrafficLight.h: 92:         unsigned char colorId = ((_dataFromGateway[inde
      +                          x] >> 5) & 0x03) - 1;
  4695  0E5D  0834               	movf	SetReceivedTimes@index,w
  4696  0E5E  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4697  0E5F  00AD               	movwf	??_SetReceivedTimes
  4698  0E60  082D               	movf	??_SetReceivedTimes,w
  4699  0E61  0084               	movwf	4
  4700  0E62  0800               	movf	0,w
  4701  0E63  00AE               	movwf	??_SetReceivedTimes+1
  4702  0E64  3005               	movlw	5
  4703  0E65                     u2905:	
  4704  0E65  1003               	clrc
  4705  0E66  0CAE               	rrf	??_SetReceivedTimes+1,f
  4706  0E67  3EFF               	addlw	-1
  4707  0E68  1D03               	skipz
  4708  0E69  2E65               	goto	u2905
  4709  0E6A  082E               	movf	??_SetReceivedTimes+1,w
  4710  0E6B  3903               	andlw	3
  4711  0E6C  3EFF               	addlw	255
  4712  0E6D  00AF               	movwf	??_SetReceivedTimes+2
  4713  0E6E  082F               	movf	??_SetReceivedTimes+2,w
  4714  0E6F  00B2               	movwf	SetReceivedTimes@colorId
  4715  0E70                     l3367:	
  4716                           
  4717                           ;./CustomLib/TrafficLight.h: 94:         (*(_semafori)[semaforoId]).new_times[colorId] =
      +                           GetTime(index, _dataFromGateway);
  4718  0E70  0833               	movf	SetReceivedTimes@_dataFromGateway,w
  4719  0E71  00AD               	movwf	??_SetReceivedTimes
  4720  0E72  082D               	movf	??_SetReceivedTimes,w
  4721  0E73  00A4               	movwf	GetTime@_dataFromGateway
  4722  0E74  0834               	movf	SetReceivedTimes@index,w
  4723  0E75  120A  158A  23B9  120A  158A  	fcall	_GetTime
  4724  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  4725  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  4726  0E7C  0831               	movf	SetReceivedTimes@semaforoId,w
  4727  0E7D  072C               	addwf	SetReceivedTimes@_semafori,w
  4728  0E7E  00AE               	movwf	??_SetReceivedTimes+1
  4729  0E7F  082E               	movf	??_SetReceivedTimes+1,w
  4730  0E80  0084               	movwf	4
  4731  0E81  0832               	movf	SetReceivedTimes@colorId,w
  4732  0E82  00AF               	movwf	??_SetReceivedTimes+2
  4733  0E83  072F               	addwf	??_SetReceivedTimes+2,w
  4734  0E84  1383               	bcf	3,7	;select IRP bank0
  4735  0E85  0700               	addwf	0,w
  4736  0E86  00B0               	movwf	??_SetReceivedTimes+3
  4737  0E87  0830               	movf	??_SetReceivedTimes+3,w
  4738  0E88  3E06               	addlw	6
  4739  0E89  0084               	movwf	4
  4740  0E8A  0824               	movf	?_GetTime,w
  4741  0E8B  0080               	movwf	0
  4742  0E8C  0A84               	incf	4,f
  4743  0E8D  0825               	movf	?_GetTime+1,w
  4744  0E8E  0080               	movwf	0
  4745  0E8F                     l3369:	
  4746                           
  4747                           ;./CustomLib/TrafficLight.h: 95:     }
  4748  0E8F  3001               	movlw	1
  4749  0E90  00AD               	movwf	??_SetReceivedTimes
  4750  0E91  082D               	movf	??_SetReceivedTimes,w
  4751  0E92  07B5               	addwf	SetReceivedTimes@i,f
  4752  0E93  2E39               	goto	l3357
  4753  0E94                     l154:	
  4754  0E94  0008               	return
  4755  0E95                     __end_of_SetReceivedTimes:	
  4756                           
  4757                           	psect	text16
  4758  0BB9                     __ptext16:	
  4759 ;; *************** function _GetTime *****************
  4760 ;; Defined at:
  4761 ;;		line 37 in file "./CustomLib/TrafficLight.h"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  index           1    wreg     unsigned char 
  4764 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4765 ;;		 -> dataFromGateway(15), 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  index           1    8[BANK0 ] unsigned char 
  4768 ;;  tmp             2   10[BANK0 ] int 
  4769 ;;  shortInt        1    9[BANK0 ] struct .
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  2    4[BANK0 ] int 
  4772 ;; Registers used:
  4773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4779 ;;      Params:         0       2       0       0       0
  4780 ;;      Locals:         0       4       0       0       0
  4781 ;;      Temps:          0       2       0       0       0
  4782 ;;      Totals:         0       8       0       0       0
  4783 ;;Total ram usage:        8 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    3
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_SetReceivedTimes
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function _GetTime
  4795  0BB9                     _GetTime:	
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4799                           ;GetTime@index stored from wreg
  4800  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  4801  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  4802  0BBB  00A8               	movwf	GetTime@index
  4803  0BBC                     l3093:	
  4804                           
  4805                           ;./CustomLib/TrafficLight.h: 37: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 38: {;./CustomLib/TrafficLight.h: 39:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 43:     } shortInt;;./CustomLib/TrafficLight.h: 45:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4806  0BBC  0828               	movf	GetTime@index,w
  4807  0BBD  0724               	addwf	GetTime@_dataFromGateway,w
  4808  0BBE  00A6               	movwf	??_GetTime
  4809  0BBF  0826               	movf	??_GetTime,w
  4810  0BC0  3E03               	addlw	3
  4811  0BC1  0084               	movwf	4
  4812  0BC2  307F               	movlw	127
  4813  0BC3  1383               	bcf	3,7	;select IRP bank0
  4814  0BC4  0500               	andwf	0,w
  4815  0BC5  00A7               	movwf	??_GetTime+1
  4816  0BC6  0829               	movf	GetTime@shortInt,w
  4817  0BC7  0627               	xorwf	??_GetTime+1,w
  4818  0BC8  3980               	andlw	-128
  4819  0BC9  0627               	xorwf	??_GetTime+1,w
  4820  0BCA  00A9               	movwf	GetTime@shortInt
  4821  0BCB                     l3095:	
  4822                           
  4823                           ;./CustomLib/TrafficLight.h: 46:     tmp = shortInt.Val;
  4824  0BCB  0829               	movf	GetTime@shortInt,w
  4825  0BCC  397F               	andlw	127
  4826  0BCD  00A6               	movwf	??_GetTime
  4827  0BCE  01A7               	clrf	??_GetTime+1
  4828  0BCF  0826               	movf	??_GetTime,w
  4829  0BD0  00AA               	movwf	GetTime@tmp
  4830  0BD1  0827               	movf	??_GetTime+1,w
  4831  0BD2  00AB               	movwf	GetTime@tmp+1
  4832  0BD3                     l3097:	
  4833                           
  4834                           ;./CustomLib/TrafficLight.h: 47:     tmp = (tmp << 7) & 0x80;
  4835  0BD3  082B               	movf	GetTime@tmp+1,w
  4836  0BD4  00A7               	movwf	??_GetTime+1
  4837  0BD5  082A               	movf	GetTime@tmp,w
  4838  0BD6  00A6               	movwf	??_GetTime
  4839  0BD7  3007               	movlw	7
  4840  0BD8  00FF               	movwf	btemp+1
  4841  0BD9                     u2425:	
  4842  0BD9  1003               	clrc
  4843  0BDA  0DA6               	rlf	??_GetTime,f
  4844  0BDB  0DA7               	rlf	??_GetTime+1,f
  4845  0BDC  0BFF               	decfsz	btemp+1,f
  4846  0BDD  2BD9               	goto	u2425
  4847  0BDE  3080               	movlw	128
  4848  0BDF  0526               	andwf	??_GetTime,w
  4849  0BE0  00AA               	movwf	GetTime@tmp
  4850  0BE1  3000               	movlw	0
  4851  0BE2  0527               	andwf	??_GetTime+1,w
  4852  0BE3  00AB               	movwf	GetTime@tmp+1
  4853  0BE4                     l3099:	
  4854                           
  4855                           ;./CustomLib/TrafficLight.h: 49:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4856  0BE4  0828               	movf	GetTime@index,w
  4857  0BE5  0724               	addwf	GetTime@_dataFromGateway,w
  4858  0BE6  00A6               	movwf	??_GetTime
  4859  0BE7  0826               	movf	??_GetTime,w
  4860  0BE8  3E02               	addlw	2
  4861  0BE9  0084               	movwf	4
  4862  0BEA  307F               	movlw	127
  4863  0BEB  0500               	andwf	0,w
  4864  0BEC  00A7               	movwf	??_GetTime+1
  4865  0BED  0829               	movf	GetTime@shortInt,w
  4866  0BEE  0627               	xorwf	??_GetTime+1,w
  4867  0BEF  3980               	andlw	-128
  4868  0BF0  0627               	xorwf	??_GetTime+1,w
  4869  0BF1  00A9               	movwf	GetTime@shortInt
  4870  0BF2                     l3101:	
  4871                           
  4872                           ;./CustomLib/TrafficLight.h: 50:     tmp = tmp | shortInt.Val;
  4873  0BF2  0829               	movf	GetTime@shortInt,w
  4874  0BF3  397F               	andlw	127
  4875  0BF4  00A6               	movwf	??_GetTime
  4876  0BF5  082A               	movf	GetTime@tmp,w
  4877  0BF6  0426               	iorwf	??_GetTime,w
  4878  0BF7  00AA               	movwf	GetTime@tmp
  4879  0BF8  082B               	movf	GetTime@tmp+1,w
  4880  0BF9  00AB               	movwf	GetTime@tmp+1
  4881  0BFA                     l3103:	
  4882                           
  4883                           ;./CustomLib/TrafficLight.h: 52:     return tmp;
  4884  0BFA  082B               	movf	GetTime@tmp+1,w
  4885  0BFB  00A5               	movwf	?_GetTime+1
  4886  0BFC  082A               	movf	GetTime@tmp,w
  4887  0BFD  00A4               	movwf	?_GetTime
  4888  0BFE                     l137:	
  4889  0BFE  0008               	return
  4890  0BFF                     __end_of_GetTime:	
  4891                           
  4892                           	psect	text17
  4893  061A                     __ptext17:	
  4894 ;; *************** function _SetDefaultTimers *****************
  4895 ;; Defined at:
  4896 ;;		line 56 in file "./CustomLib/TrafficLight.h"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  rosso           2    4[BANK0 ] int 
  4899 ;;  verde           2    6[BANK0 ] int 
  4900 ;;  giallo          2    8[BANK0 ] int 
  4901 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4902 ;;		 -> Semafori(2), 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  i               1   15[BANK0 ] unsigned char 
  4905 ;;  l               1   14[BANK0 ] unsigned char 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4915 ;;      Params:         0       7       0       0       0
  4916 ;;      Locals:         0       2       0       0       0
  4917 ;;      Temps:          0       3       0       0       0
  4918 ;;      Totals:         0      12       0       0       0
  4919 ;;Total ram usage:       12 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:    3
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		_main
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           
  4930                           ;psect for function _SetDefaultTimers
  4931  061A                     _SetDefaultTimers:	
  4932  061A                     l3319:	
  4933                           ;incstack = 0
  4934                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4935                           
  4936                           
  4937                           ;./CustomLib/TrafficLight.h: 56: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 57: {;./CustomLib/TrafficLight.h: 58: 
      +                              for (unsigned char l = 0; l < n_semafori; l++)
  4938  061A  1283               	bcf	3,5	;RP0=0, select bank0
  4939  061B  1303               	bcf	3,6	;RP1=0, select bank0
  4940  061C  01AE               	clrf	SetDefaultTimers@l
  4941  061D                     l3325:	
  4942                           
  4943                           ;./CustomLib/TrafficLight.h: 59:     {;./CustomLib/TrafficLight.h: 60:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4944  061D  01AF               	clrf	SetDefaultTimers@i
  4945  061E  2E8E               	goto	l3339
  4946  061F                     l3331:	
  4947                           
  4948                           ;./CustomLib/TrafficLight.h: 65:                 (*(_semafori)[l]).times[i] = rosso;
  4949  061F  082E               	movf	SetDefaultTimers@l,w
  4950  0620  072A               	addwf	SetDefaultTimers@_semafori,w
  4951  0621  00AB               	movwf	??_SetDefaultTimers
  4952  0622  082B               	movf	??_SetDefaultTimers,w
  4953  0623  0084               	movwf	4
  4954  0624  082F               	movf	SetDefaultTimers@i,w
  4955  0625  00AC               	movwf	??_SetDefaultTimers+1
  4956  0626  072C               	addwf	??_SetDefaultTimers+1,w
  4957  0627  1383               	bcf	3,7	;select IRP bank0
  4958  0628  0700               	addwf	0,w
  4959  0629  00AD               	movwf	??_SetDefaultTimers+2
  4960  062A  082D               	movf	??_SetDefaultTimers+2,w
  4961  062B  0084               	movwf	4
  4962  062C  0824               	movf	SetDefaultTimers@rosso,w
  4963  062D  0080               	movwf	0
  4964  062E  0A84               	incf	4,f
  4965  062F  0825               	movf	SetDefaultTimers@rosso+1,w
  4966  0630  0080               	movwf	0
  4967                           
  4968                           ;./CustomLib/TrafficLight.h: 66:                 (*(_semafori)[l]).new_times[i] = rosso;
  4969  0631  082E               	movf	SetDefaultTimers@l,w
  4970  0632  072A               	addwf	SetDefaultTimers@_semafori,w
  4971  0633  00AB               	movwf	??_SetDefaultTimers
  4972  0634  082B               	movf	??_SetDefaultTimers,w
  4973  0635  0084               	movwf	4
  4974  0636  082F               	movf	SetDefaultTimers@i,w
  4975  0637  00AC               	movwf	??_SetDefaultTimers+1
  4976  0638  072C               	addwf	??_SetDefaultTimers+1,w
  4977  0639  0700               	addwf	0,w
  4978  063A  00AD               	movwf	??_SetDefaultTimers+2
  4979  063B  082D               	movf	??_SetDefaultTimers+2,w
  4980  063C  3E06               	addlw	6
  4981  063D  0084               	movwf	4
  4982  063E  0824               	movf	SetDefaultTimers@rosso,w
  4983  063F  0080               	movwf	0
  4984  0640  0A84               	incf	4,f
  4985  0641  0825               	movf	SetDefaultTimers@rosso+1,w
  4986  0642  0080               	movwf	0
  4987                           
  4988                           ;./CustomLib/TrafficLight.h: 67:                 break;
  4989  0643  2EA1               	goto	l3341
  4990  0644                     l3333:	
  4991                           
  4992                           ;./CustomLib/TrafficLight.h: 69:                 (*(_semafori)[l]).times[i] = verde;
  4993  0644  082E               	movf	SetDefaultTimers@l,w
  4994  0645  072A               	addwf	SetDefaultTimers@_semafori,w
  4995  0646  00AB               	movwf	??_SetDefaultTimers
  4996  0647  082B               	movf	??_SetDefaultTimers,w
  4997  0648  0084               	movwf	4
  4998  0649  082F               	movf	SetDefaultTimers@i,w
  4999  064A  00AC               	movwf	??_SetDefaultTimers+1
  5000  064B  072C               	addwf	??_SetDefaultTimers+1,w
  5001  064C  1383               	bcf	3,7	;select IRP bank0
  5002  064D  0700               	addwf	0,w
  5003  064E  00AD               	movwf	??_SetDefaultTimers+2
  5004  064F  082D               	movf	??_SetDefaultTimers+2,w
  5005  0650  0084               	movwf	4
  5006  0651  0826               	movf	SetDefaultTimers@verde,w
  5007  0652  0080               	movwf	0
  5008  0653  0A84               	incf	4,f
  5009  0654  0827               	movf	SetDefaultTimers@verde+1,w
  5010  0655  0080               	movwf	0
  5011                           
  5012                           ;./CustomLib/TrafficLight.h: 70:                 (*(_semafori)[l]).new_times[i] = verde;
  5013  0656  082E               	movf	SetDefaultTimers@l,w
  5014  0657  072A               	addwf	SetDefaultTimers@_semafori,w
  5015  0658  00AB               	movwf	??_SetDefaultTimers
  5016  0659  082B               	movf	??_SetDefaultTimers,w
  5017  065A  0084               	movwf	4
  5018  065B  082F               	movf	SetDefaultTimers@i,w
  5019  065C  00AC               	movwf	??_SetDefaultTimers+1
  5020  065D  072C               	addwf	??_SetDefaultTimers+1,w
  5021  065E  0700               	addwf	0,w
  5022  065F  00AD               	movwf	??_SetDefaultTimers+2
  5023  0660  082D               	movf	??_SetDefaultTimers+2,w
  5024  0661  3E06               	addlw	6
  5025  0662  0084               	movwf	4
  5026  0663  0826               	movf	SetDefaultTimers@verde,w
  5027  0664  0080               	movwf	0
  5028  0665  0A84               	incf	4,f
  5029  0666  0827               	movf	SetDefaultTimers@verde+1,w
  5030  0667  0080               	movwf	0
  5031                           
  5032                           ;./CustomLib/TrafficLight.h: 71:                 break;
  5033  0668  2EA1               	goto	l3341
  5034  0669                     l3335:	
  5035                           
  5036                           ;./CustomLib/TrafficLight.h: 73:                 (*(_semafori)[l]).times[i] = giallo;
  5037  0669  082E               	movf	SetDefaultTimers@l,w
  5038  066A  072A               	addwf	SetDefaultTimers@_semafori,w
  5039  066B  00AB               	movwf	??_SetDefaultTimers
  5040  066C  082B               	movf	??_SetDefaultTimers,w
  5041  066D  0084               	movwf	4
  5042  066E  082F               	movf	SetDefaultTimers@i,w
  5043  066F  00AC               	movwf	??_SetDefaultTimers+1
  5044  0670  072C               	addwf	??_SetDefaultTimers+1,w
  5045  0671  1383               	bcf	3,7	;select IRP bank0
  5046  0672  0700               	addwf	0,w
  5047  0673  00AD               	movwf	??_SetDefaultTimers+2
  5048  0674  082D               	movf	??_SetDefaultTimers+2,w
  5049  0675  0084               	movwf	4
  5050  0676  0828               	movf	SetDefaultTimers@giallo,w
  5051  0677  0080               	movwf	0
  5052  0678  0A84               	incf	4,f
  5053  0679  0829               	movf	SetDefaultTimers@giallo+1,w
  5054  067A  0080               	movwf	0
  5055                           
  5056                           ;./CustomLib/TrafficLight.h: 74:                 (*(_semafori)[l]).new_times[i] = giallo
      +                          ;
  5057  067B  082E               	movf	SetDefaultTimers@l,w
  5058  067C  072A               	addwf	SetDefaultTimers@_semafori,w
  5059  067D  00AB               	movwf	??_SetDefaultTimers
  5060  067E  082B               	movf	??_SetDefaultTimers,w
  5061  067F  0084               	movwf	4
  5062  0680  082F               	movf	SetDefaultTimers@i,w
  5063  0681  00AC               	movwf	??_SetDefaultTimers+1
  5064  0682  072C               	addwf	??_SetDefaultTimers+1,w
  5065  0683  0700               	addwf	0,w
  5066  0684  00AD               	movwf	??_SetDefaultTimers+2
  5067  0685  082D               	movf	??_SetDefaultTimers+2,w
  5068  0686  3E06               	addlw	6
  5069  0687  0084               	movwf	4
  5070  0688  0828               	movf	SetDefaultTimers@giallo,w
  5071  0689  0080               	movwf	0
  5072  068A  0A84               	incf	4,f
  5073  068B  0829               	movf	SetDefaultTimers@giallo+1,w
  5074  068C  0080               	movwf	0
  5075                           
  5076                           ;./CustomLib/TrafficLight.h: 75:                 break;
  5077  068D  2EA1               	goto	l3341
  5078  068E                     l3339:	
  5079  068E  082F               	movf	SetDefaultTimers@i,w
  5080  068F  00AB               	movwf	??_SetDefaultTimers
  5081  0690  01AC               	clrf	??_SetDefaultTimers+1
  5082                           
  5083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5084                           ; Switch size 1, requested type "simple"
  5085                           ; Number of cases is 1, Range of values is 0 to 0
  5086                           ; switch strategies available:
  5087                           ; Name         Instructions Cycles
  5088                           ; simple_byte            4     3 (average)
  5089                           ; direct_byte           11     8 (fixed)
  5090                           ; jumptable            260     6 (fixed)
  5091                           ;	Chosen strategy is simple_byte
  5092  0691  082C               	movf	??_SetDefaultTimers+1,w
  5093  0692  3A00               	xorlw	0	; case 0
  5094  0693  1903               	skipnz
  5095  0694  2E96               	goto	l3955
  5096  0695  2EA1               	goto	l3341
  5097  0696                     l3955:	
  5098                           
  5099                           ; Switch size 1, requested type "simple"
  5100                           ; Number of cases is 3, Range of values is 0 to 2
  5101                           ; switch strategies available:
  5102                           ; Name         Instructions Cycles
  5103                           ; simple_byte           10     6 (average)
  5104                           ; direct_byte           17     8 (fixed)
  5105                           ; jumptable            260     6 (fixed)
  5106                           ;	Chosen strategy is simple_byte
  5107  0696  082B               	movf	??_SetDefaultTimers,w
  5108  0697  3A00               	xorlw	0	; case 0
  5109  0698  1903               	skipnz
  5110  0699  2E1F               	goto	l3331
  5111  069A  3A01               	xorlw	1	; case 1
  5112  069B  1903               	skipnz
  5113  069C  2E44               	goto	l3333
  5114  069D  3A03               	xorlw	3	; case 2
  5115  069E  1903               	skipnz
  5116  069F  2E69               	goto	l3335
  5117  06A0  2EA1               	goto	l3341
  5118  06A1                     l3341:	
  5119                           
  5120                           ;./CustomLib/TrafficLight.h: 77:         }
  5121  06A1  3001               	movlw	1
  5122  06A2  00AB               	movwf	??_SetDefaultTimers
  5123  06A3  082B               	movf	??_SetDefaultTimers,w
  5124  06A4  07AF               	addwf	SetDefaultTimers@i,f
  5125  06A5                     l3343:	
  5126  06A5  3003               	movlw	3
  5127  06A6  022F               	subwf	SetDefaultTimers@i,w
  5128  06A7  1C03               	skipc
  5129  06A8  2EAA               	goto	u2871
  5130  06A9  2EAB               	goto	u2870
  5131  06AA                     u2871:	
  5132  06AA  2E8E               	goto	l3339
  5133  06AB                     u2870:	
  5134  06AB                     l3345:	
  5135                           
  5136                           ;./CustomLib/TrafficLight.h: 78:     }
  5137  06AB  3001               	movlw	1
  5138  06AC  00AB               	movwf	??_SetDefaultTimers
  5139  06AD  082B               	movf	??_SetDefaultTimers,w
  5140  06AE  07AE               	addwf	SetDefaultTimers@l,f
  5141  06AF                     l3347:	
  5142  06AF  3002               	movlw	2
  5143  06B0  022E               	subwf	SetDefaultTimers@l,w
  5144  06B1  1C03               	skipc
  5145  06B2  2EB4               	goto	u2881
  5146  06B3  2EB5               	goto	u2880
  5147  06B4                     u2881:	
  5148  06B4  2E1D               	goto	l3325
  5149  06B5                     u2880:	
  5150  06B5                     l3349:	
  5151                           
  5152                           ;./CustomLib/TrafficLight.h: 80:     (*(_semafori)[0]).lux_select = 0;
  5153  06B5  082A               	movf	SetDefaultTimers@_semafori,w
  5154  06B6  0084               	movwf	4
  5155  06B7  1383               	bcf	3,7	;select IRP bank0
  5156  06B8  0800               	movf	0,w
  5157  06B9  3E0C               	addlw	12
  5158  06BA  0084               	movwf	4
  5159  06BB  0180               	clrf	0
  5160                           
  5161                           ;./CustomLib/TrafficLight.h: 81:     (*(_semafori)[0]).new_lux_select = 0;
  5162  06BC  082A               	movf	SetDefaultTimers@_semafori,w
  5163  06BD  0084               	movwf	4
  5164  06BE  0800               	movf	0,w
  5165  06BF  3E0D               	addlw	13
  5166  06C0  0084               	movwf	4
  5167  06C1  0180               	clrf	0
  5168                           
  5169                           ;./CustomLib/TrafficLight.h: 82:     (*(_semafori)[1]).lux_select = 1;
  5170  06C2  0A2A               	incf	SetDefaultTimers@_semafori,w
  5171  06C3  0084               	movwf	4
  5172  06C4  0800               	movf	0,w
  5173  06C5  3E0C               	addlw	12
  5174  06C6  0084               	movwf	4
  5175  06C7  0180               	clrf	0
  5176  06C8  0A80               	incf	0,f
  5177                           
  5178                           ;./CustomLib/TrafficLight.h: 83:     (*(_semafori)[1]).new_lux_select = 1;
  5179  06C9  0A2A               	incf	SetDefaultTimers@_semafori,w
  5180  06CA  0084               	movwf	4
  5181  06CB  0800               	movf	0,w
  5182  06CC  3E0D               	addlw	13
  5183  06CD  0084               	movwf	4
  5184  06CE  0180               	clrf	0
  5185  06CF  0A80               	incf	0,f
  5186  06D0                     l149:	
  5187  06D0  0008               	return
  5188  06D1                     __end_of_SetDefaultTimers:	
  5189                           
  5190                           	psect	text18
  5191  0485                     __ptext18:	
  5192 ;; *************** function _GetDigits *****************
  5193 ;; Defined at:
  5194 ;;		line 98 in file "./CustomLib/TrafficLight.h"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  _digits         1    wreg     PTR PTR struct .
  5197 ;;		 -> DigitsArr(2), 
  5198 ;;  index           1   20[BANK0 ] unsigned char 
  5199 ;;  Time            2   21[BANK0 ] int 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  _digits         1   28[BANK0 ] PTR PTR struct .
  5202 ;;		 -> DigitsArr(2), 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      void 
  5205 ;; Registers used:
  5206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5212 ;;      Params:         0       3       0       0       0
  5213 ;;      Locals:         0       3       0       0       0
  5214 ;;      Temps:          0       3       0       0       0
  5215 ;;      Totals:         0       9       0       0       0
  5216 ;;Total ram usage:        9 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    4
  5219 ;; This function calls:
  5220 ;;		___awdiv
  5221 ;;		___awmod
  5222 ;;		___bmul
  5223 ;; This function is called by:
  5224 ;;		_main
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           
  5229                           ;psect for function _GetDigits
  5230  0485                     _GetDigits:	
  5231                           
  5232                           ;incstack = 0
  5233                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5234                           ;GetDigits@_digits stored from wreg
  5235  0485  1283               	bcf	3,5	;RP0=0, select bank0
  5236  0486  1303               	bcf	3,6	;RP1=0, select bank0
  5237  0487  00BC               	movwf	GetDigits@_digits
  5238  0488                     l3373:	
  5239                           
  5240                           ;./CustomLib/TrafficLight.h: 98: void GetDigits(_Digits _digits, unsigned char index, in
      +                          t Time);./CustomLib/TrafficLight.h: 99: {;./CustomLib/TrafficLight.h: 100:     while (Ti
      +                          me / 1000 > 0)
  5241  0488  2C9E               	goto	l3377
  5242  0489                     l3375:	
  5243                           
  5244                           ;./CustomLib/TrafficLight.h: 101:     {;./CustomLib/TrafficLight.h: 102:         Time = 
      +                          Time / 10;
  5245  0489  300A               	movlw	10
  5246  048A  1283               	bcf	3,5	;RP0=0, select bank0
  5247  048B  1303               	bcf	3,6	;RP1=0, select bank0
  5248  048C  00AB               	movwf	___awdiv@divisor
  5249  048D  3000               	movlw	0
  5250  048E  00AC               	movwf	___awdiv@divisor+1
  5251  048F  0836               	movf	GetDigits@Time+1,w
  5252  0490  00AE               	movwf	___awdiv@dividend+1
  5253  0491  0835               	movf	GetDigits@Time,w
  5254  0492  00AD               	movwf	___awdiv@dividend
  5255  0493  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5256  0498  1283               	bcf	3,5	;RP0=0, select bank0
  5257  0499  1303               	bcf	3,6	;RP1=0, select bank0
  5258  049A  082C               	movf	?___awdiv+1,w
  5259  049B  00B6               	movwf	GetDigits@Time+1
  5260  049C  082B               	movf	?___awdiv,w
  5261  049D  00B5               	movwf	GetDigits@Time
  5262  049E                     l3377:	
  5263                           
  5264                           ;./CustomLib/TrafficLight.h: 100:     while (Time / 1000 > 0)
  5265  049E  30E8               	movlw	232
  5266  049F  00AB               	movwf	___awdiv@divisor
  5267  04A0  3003               	movlw	3
  5268  04A1  00AC               	movwf	___awdiv@divisor+1
  5269  04A2  0836               	movf	GetDigits@Time+1,w
  5270  04A3  00AE               	movwf	___awdiv@dividend+1
  5271  04A4  0835               	movf	GetDigits@Time,w
  5272  04A5  00AD               	movwf	___awdiv@dividend
  5273  04A6  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5274  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  5275  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  5276  04AD  082C               	movf	?___awdiv+1,w
  5277  04AE  3A80               	xorlw	128
  5278  04AF  00FF               	movwf	btemp+1
  5279  04B0  3080               	movlw	128
  5280  04B1  027F               	subwf	btemp+1,w
  5281  04B2  1D03               	skipz
  5282  04B3  2CB6               	goto	u2915
  5283  04B4  3001               	movlw	1
  5284  04B5  022B               	subwf	?___awdiv,w
  5285  04B6                     u2915:	
  5286  04B6  1803               	skipnc
  5287  04B7  2CB9               	goto	u2911
  5288  04B8  2CBA               	goto	u2910
  5289  04B9                     u2911:	
  5290  04B9  2C89               	goto	l3375
  5291  04BA                     u2910:	
  5292  04BA                     l3379:	
  5293                           
  5294                           ;./CustomLib/TrafficLight.h: 105:     (*_digits)[index].centinaia = Time / 100;
  5295  04BA  3064               	movlw	100
  5296  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  5297  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  5298  04BD  00AB               	movwf	___awdiv@divisor
  5299  04BE  3000               	movlw	0
  5300  04BF  00AC               	movwf	___awdiv@divisor+1
  5301  04C0  0836               	movf	GetDigits@Time+1,w
  5302  04C1  00AE               	movwf	___awdiv@dividend+1
  5303  04C2  0835               	movf	GetDigits@Time,w
  5304  04C3  00AD               	movwf	___awdiv@dividend
  5305  04C4  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5306  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  5307  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  5308  04CB  082B               	movf	?___awdiv,w
  5309  04CC  00B7               	movwf	??_GetDigits
  5310  04CD  083C               	movf	GetDigits@_digits,w
  5311  04CE  0084               	movwf	4
  5312  04CF  3003               	movlw	3
  5313  04D0  00B8               	movwf	??_GetDigits+1
  5314  04D1  0838               	movf	??_GetDigits+1,w
  5315  04D2  00A4               	movwf	___bmul@multiplicand
  5316  04D3  0834               	movf	GetDigits@index,w
  5317  04D4  120A  118A  27E9  120A  118A  	fcall	___bmul
  5318  04D9  1383               	bcf	3,7	;select IRP bank0
  5319  04DA  0700               	addwf	0,w
  5320  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  5321  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  5322  04DD  00B9               	movwf	??_GetDigits+2
  5323  04DE  0839               	movf	??_GetDigits+2,w
  5324  04DF  0084               	movwf	4
  5325  04E0  0837               	movf	??_GetDigits,w
  5326  04E1  0080               	movwf	0
  5327                           
  5328                           ;./CustomLib/TrafficLight.h: 106:     (*_digits)[index].decine = (Time % 100) / 10;
  5329  04E2  300A               	movlw	10
  5330  04E3  00AB               	movwf	___awdiv@divisor
  5331  04E4  3000               	movlw	0
  5332  04E5  00AC               	movwf	___awdiv@divisor+1
  5333  04E6  0836               	movf	GetDigits@Time+1,w
  5334  04E7  00A7               	movwf	___awmod@dividend+1
  5335  04E8  0835               	movf	GetDigits@Time,w
  5336  04E9  00A6               	movwf	___awmod@dividend
  5337  04EA  3064               	movlw	100
  5338  04EB  00A4               	movwf	___awmod@divisor
  5339  04EC  3000               	movlw	0
  5340  04ED  00A5               	movwf	___awmod@divisor+1
  5341  04EE  120A  158A  25DA  120A  118A  	fcall	___awmod
  5342  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  5343  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  5344  04F5  0825               	movf	?___awmod+1,w
  5345  04F6  00AE               	movwf	___awdiv@dividend+1
  5346  04F7  0824               	movf	?___awmod,w
  5347  04F8  00AD               	movwf	___awdiv@dividend
  5348  04F9  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5349  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  5350  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  5351  0500  082B               	movf	?___awdiv,w
  5352  0501  00B7               	movwf	??_GetDigits
  5353  0502  083C               	movf	GetDigits@_digits,w
  5354  0503  0084               	movwf	4
  5355  0504  3003               	movlw	3
  5356  0505  00B8               	movwf	??_GetDigits+1
  5357  0506  0838               	movf	??_GetDigits+1,w
  5358  0507  00A4               	movwf	___bmul@multiplicand
  5359  0508  0834               	movf	GetDigits@index,w
  5360  0509  120A  118A  27E9  120A  118A  	fcall	___bmul
  5361  050E  1383               	bcf	3,7	;select IRP bank0
  5362  050F  0700               	addwf	0,w
  5363  0510  1283               	bcf	3,5	;RP0=0, select bank0
  5364  0511  1303               	bcf	3,6	;RP1=0, select bank0
  5365  0512  00B9               	movwf	??_GetDigits+2
  5366  0513  0A39               	incf	??_GetDigits+2,w
  5367  0514  0084               	movwf	4
  5368  0515  0837               	movf	??_GetDigits,w
  5369  0516  0080               	movwf	0
  5370  0517                     l3381:	
  5371                           
  5372                           ;./CustomLib/TrafficLight.h: 107:     (*_digits)[index].unita = (Time % 100) % 10;
  5373  0517  0836               	movf	GetDigits@Time+1,w
  5374  0518  00A7               	movwf	___awmod@dividend+1
  5375  0519  0835               	movf	GetDigits@Time,w
  5376  051A  00A6               	movwf	___awmod@dividend
  5377  051B  3064               	movlw	100
  5378  051C  00A4               	movwf	___awmod@divisor
  5379  051D  3000               	movlw	0
  5380  051E  00A5               	movwf	___awmod@divisor+1
  5381  051F  120A  158A  25DA  120A  118A  	fcall	___awmod
  5382  0524  1283               	bcf	3,5	;RP0=0, select bank0
  5383  0525  1303               	bcf	3,6	;RP1=0, select bank0
  5384  0526  0825               	movf	?___awmod+1,w
  5385  0527  00BB               	movwf	_GetDigits$1203+1
  5386  0528  0824               	movf	?___awmod,w
  5387  0529  00BA               	movwf	_GetDigits$1203
  5388  052A                     l3383:	
  5389                           
  5390                           ;./CustomLib/TrafficLight.h: 107:     (*_digits)[index].unita = (Time % 100) % 10;
  5391  052A  300A               	movlw	10
  5392  052B  00A4               	movwf	___awmod@divisor
  5393  052C  3000               	movlw	0
  5394  052D  00A5               	movwf	___awmod@divisor+1
  5395  052E  083B               	movf	_GetDigits$1203+1,w
  5396  052F  00A7               	movwf	___awmod@dividend+1
  5397  0530  083A               	movf	_GetDigits$1203,w
  5398  0531  00A6               	movwf	___awmod@dividend
  5399  0532  120A  158A  25DA  120A  118A  	fcall	___awmod
  5400  0537  1283               	bcf	3,5	;RP0=0, select bank0
  5401  0538  1303               	bcf	3,6	;RP1=0, select bank0
  5402  0539  0824               	movf	?___awmod,w
  5403  053A  00B7               	movwf	??_GetDigits
  5404  053B  083C               	movf	GetDigits@_digits,w
  5405  053C  0084               	movwf	4
  5406  053D  3003               	movlw	3
  5407  053E  00B8               	movwf	??_GetDigits+1
  5408  053F  0838               	movf	??_GetDigits+1,w
  5409  0540  00A4               	movwf	___bmul@multiplicand
  5410  0541  0834               	movf	GetDigits@index,w
  5411  0542  120A  118A  27E9  120A  118A  	fcall	___bmul
  5412  0547  1383               	bcf	3,7	;select IRP bank0
  5413  0548  0700               	addwf	0,w
  5414  0549  1283               	bcf	3,5	;RP0=0, select bank0
  5415  054A  1303               	bcf	3,6	;RP1=0, select bank0
  5416  054B  00B9               	movwf	??_GetDigits+2
  5417  054C  0839               	movf	??_GetDigits+2,w
  5418  054D  3E02               	addlw	2
  5419  054E  0084               	movwf	4
  5420  054F  0837               	movf	??_GetDigits,w
  5421  0550  0080               	movwf	0
  5422  0551                     l160:	
  5423  0551  0008               	return
  5424  0552                     __end_of_GetDigits:	
  5425                           
  5426                           	psect	text19
  5427  07E9                     __ptext19:	
  5428 ;; *************** function ___bmul *****************
  5429 ;; Defined at:
  5430 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  multiplier      1    wreg     unsigned char 
  5433 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  multiplier      1    7[BANK0 ] unsigned char 
  5436 ;;  product         1    6[BANK0 ] unsigned char 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  1    wreg      unsigned char 
  5439 ;; Registers used:
  5440 ;;		wreg, status,2, status,0
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5446 ;;      Params:         0       1       0       0       0
  5447 ;;      Locals:         0       2       0       0       0
  5448 ;;      Temps:          0       1       0       0       0
  5449 ;;      Totals:         0       4       0       0       0
  5450 ;;Total ram usage:        4 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:    3
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_SetReceivedTimes
  5457 ;;		_GetDigits
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           
  5462                           ;psect for function ___bmul
  5463  07E9                     ___bmul:	
  5464                           
  5465                           ;incstack = 0
  5466                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5467                           ;___bmul@multiplier stored from wreg
  5468  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  5469  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  5470  07EB  00A7               	movwf	___bmul@multiplier
  5471  07EC                     l3157:	
  5472  07EC  01A6               	clrf	___bmul@product
  5473  07ED                     l3159:	
  5474  07ED  1C27               	btfss	___bmul@multiplier,0
  5475  07EE  2FF0               	goto	u2531
  5476  07EF  2FF1               	goto	u2530
  5477  07F0                     u2531:	
  5478  07F0  2FF5               	goto	l3163
  5479  07F1                     u2530:	
  5480  07F1                     l3161:	
  5481  07F1  0824               	movf	___bmul@multiplicand,w
  5482  07F2  00A5               	movwf	??___bmul
  5483  07F3  0825               	movf	??___bmul,w
  5484  07F4  07A6               	addwf	___bmul@product,f
  5485  07F5                     l3163:	
  5486  07F5  1003               	clrc
  5487  07F6  0DA4               	rlf	___bmul@multiplicand,f
  5488  07F7                     l3165:	
  5489  07F7  1003               	clrc
  5490  07F8  0CA7               	rrf	___bmul@multiplier,f
  5491  07F9  0827               	movf	___bmul@multiplier,w
  5492  07FA  1D03               	btfss	3,2
  5493  07FB  2FFD               	goto	u2541
  5494  07FC  2FFE               	goto	u2540
  5495  07FD                     u2541:	
  5496  07FD  2FED               	goto	l3159
  5497  07FE                     u2540:	
  5498  07FE                     l3167:	
  5499  07FE  0826               	movf	___bmul@product,w
  5500  07FF                     l465:	
  5501  07FF  0008               	return
  5502  0800                     __end_of___bmul:	
  5503                           
  5504                           	psect	text20
  5505  0DDA                     __ptext20:	
  5506 ;; *************** function ___awmod *****************
  5507 ;; Defined at:
  5508 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  divisor         2    4[BANK0 ] int 
  5511 ;;  dividend        2    6[BANK0 ] int 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  sign            1   10[BANK0 ] unsigned char 
  5514 ;;  counter         1    9[BANK0 ] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  2    4[BANK0 ] int 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5524 ;;      Params:         0       4       0       0       0
  5525 ;;      Locals:         0       2       0       0       0
  5526 ;;      Temps:          0       1       0       0       0
  5527 ;;      Totals:         0       7       0       0       0
  5528 ;;Total ram usage:        7 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    3
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_GetDigits
  5535 ;;		_ShowDigitsOnDisplay
  5536 ;;		_ChangeTrafficLight
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function ___awmod
  5542  0DDA                     ___awmod:	
  5543  0DDA                     l3255:	
  5544                           ;incstack = 0
  5545                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5546                           
  5547  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5548  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5549  0DDC  01AA               	clrf	___awmod@sign
  5550  0DDD                     l3257:	
  5551  0DDD  1FA7               	btfss	___awmod@dividend+1,7
  5552  0DDE  2DE0               	goto	u2751
  5553  0DDF  2DE1               	goto	u2750
  5554  0DE0                     u2751:	
  5555  0DE0  2DE8               	goto	l3263
  5556  0DE1                     u2750:	
  5557  0DE1                     l3259:	
  5558  0DE1  09A6               	comf	___awmod@dividend,f
  5559  0DE2  09A7               	comf	___awmod@dividend+1,f
  5560  0DE3  0AA6               	incf	___awmod@dividend,f
  5561  0DE4  1903               	skipnz
  5562  0DE5  0AA7               	incf	___awmod@dividend+1,f
  5563  0DE6                     l3261:	
  5564  0DE6  01AA               	clrf	___awmod@sign
  5565  0DE7  0AAA               	incf	___awmod@sign,f
  5566  0DE8                     l3263:	
  5567  0DE8  1FA5               	btfss	___awmod@divisor+1,7
  5568  0DE9  2DEB               	goto	u2761
  5569  0DEA  2DEC               	goto	u2760
  5570  0DEB                     u2761:	
  5571  0DEB  2DF1               	goto	l3267
  5572  0DEC                     u2760:	
  5573  0DEC                     l3265:	
  5574  0DEC  09A4               	comf	___awmod@divisor,f
  5575  0DED  09A5               	comf	___awmod@divisor+1,f
  5576  0DEE  0AA4               	incf	___awmod@divisor,f
  5577  0DEF  1903               	skipnz
  5578  0DF0  0AA5               	incf	___awmod@divisor+1,f
  5579  0DF1                     l3267:	
  5580  0DF1  0824               	movf	___awmod@divisor,w
  5581  0DF2  0425               	iorwf	___awmod@divisor+1,w
  5582  0DF3  1903               	btfsc	3,2
  5583  0DF4  2DF6               	goto	u2771
  5584  0DF5  2DF7               	goto	u2770
  5585  0DF6                     u2771:	
  5586  0DF6  2E26               	goto	l3285
  5587  0DF7                     u2770:	
  5588  0DF7                     l3269:	
  5589  0DF7  01A9               	clrf	___awmod@counter
  5590  0DF8  0AA9               	incf	___awmod@counter,f
  5591  0DF9  2E05               	goto	l3275
  5592  0DFA                     l3271:	
  5593  0DFA  3001               	movlw	1
  5594  0DFB                     u2785:	
  5595  0DFB  1003               	clrc
  5596  0DFC  0DA4               	rlf	___awmod@divisor,f
  5597  0DFD  0DA5               	rlf	___awmod@divisor+1,f
  5598  0DFE  3EFF               	addlw	-1
  5599  0DFF  1D03               	skipz
  5600  0E00  2DFB               	goto	u2785
  5601  0E01                     l3273:	
  5602  0E01  3001               	movlw	1
  5603  0E02  00A8               	movwf	??___awmod
  5604  0E03  0828               	movf	??___awmod,w
  5605  0E04  07A9               	addwf	___awmod@counter,f
  5606  0E05                     l3275:	
  5607  0E05  1FA5               	btfss	___awmod@divisor+1,7
  5608  0E06  2E08               	goto	u2791
  5609  0E07  2E09               	goto	u2790
  5610  0E08                     u2791:	
  5611  0E08  2DFA               	goto	l3271
  5612  0E09                     u2790:	
  5613  0E09                     l3277:	
  5614  0E09  0825               	movf	___awmod@divisor+1,w
  5615  0E0A  0227               	subwf	___awmod@dividend+1,w
  5616  0E0B  1D03               	skipz
  5617  0E0C  2E0F               	goto	u2805
  5618  0E0D  0824               	movf	___awmod@divisor,w
  5619  0E0E  0226               	subwf	___awmod@dividend,w
  5620  0E0F                     u2805:	
  5621  0E0F  1C03               	skipc
  5622  0E10  2E12               	goto	u2801
  5623  0E11  2E13               	goto	u2800
  5624  0E12                     u2801:	
  5625  0E12  2E19               	goto	l3281
  5626  0E13                     u2800:	
  5627  0E13                     l3279:	
  5628  0E13  0824               	movf	___awmod@divisor,w
  5629  0E14  02A6               	subwf	___awmod@dividend,f
  5630  0E15  0825               	movf	___awmod@divisor+1,w
  5631  0E16  1C03               	skipc
  5632  0E17  03A7               	decf	___awmod@dividend+1,f
  5633  0E18  02A7               	subwf	___awmod@dividend+1,f
  5634  0E19                     l3281:	
  5635  0E19  3001               	movlw	1
  5636  0E1A                     u2815:	
  5637  0E1A  1003               	clrc
  5638  0E1B  0CA5               	rrf	___awmod@divisor+1,f
  5639  0E1C  0CA4               	rrf	___awmod@divisor,f
  5640  0E1D  3EFF               	addlw	-1
  5641  0E1E  1D03               	skipz
  5642  0E1F  2E1A               	goto	u2815
  5643  0E20                     l3283:	
  5644  0E20  3001               	movlw	1
  5645  0E21  02A9               	subwf	___awmod@counter,f
  5646  0E22  1D03               	btfss	3,2
  5647  0E23  2E25               	goto	u2821
  5648  0E24  2E26               	goto	u2820
  5649  0E25                     u2821:	
  5650  0E25  2E09               	goto	l3277
  5651  0E26                     u2820:	
  5652  0E26                     l3285:	
  5653  0E26  082A               	movf	___awmod@sign,w
  5654  0E27  1903               	btfsc	3,2
  5655  0E28  2E2A               	goto	u2831
  5656  0E29  2E2B               	goto	u2830
  5657  0E2A                     u2831:	
  5658  0E2A  2E30               	goto	l3289
  5659  0E2B                     u2830:	
  5660  0E2B                     l3287:	
  5661  0E2B  09A6               	comf	___awmod@dividend,f
  5662  0E2C  09A7               	comf	___awmod@dividend+1,f
  5663  0E2D  0AA6               	incf	___awmod@dividend,f
  5664  0E2E  1903               	skipnz
  5665  0E2F  0AA7               	incf	___awmod@dividend+1,f
  5666  0E30                     l3289:	
  5667  0E30  0827               	movf	___awmod@dividend+1,w
  5668  0E31  00A5               	movwf	?___awmod+1
  5669  0E32  0826               	movf	___awmod@dividend,w
  5670  0E33  00A4               	movwf	?___awmod
  5671  0E34                     l605:	
  5672  0E34  0008               	return
  5673  0E35                     __end_of___awmod:	
  5674                           
  5675                           	psect	text21
  5676  0EFA                     __ptext21:	
  5677 ;; *************** function ___awdiv *****************
  5678 ;; Defined at:
  5679 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  divisor         2   11[BANK0 ] int 
  5682 ;;  dividend        2   13[BANK0 ] int 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  quotient        2   18[BANK0 ] int 
  5685 ;;  sign            1   17[BANK0 ] unsigned char 
  5686 ;;  counter         1   16[BANK0 ] unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  2   11[BANK0 ] int 
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, status,0
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5696 ;;      Params:         0       4       0       0       0
  5697 ;;      Locals:         0       4       0       0       0
  5698 ;;      Temps:          0       1       0       0       0
  5699 ;;      Totals:         0       9       0       0       0
  5700 ;;Total ram usage:        9 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    3
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_GetDigits
  5707 ;;		_map
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           
  5712                           ;psect for function ___awdiv
  5713  0EFA                     ___awdiv:	
  5714  0EFA                     l3211:	
  5715                           ;incstack = 0
  5716                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5717                           
  5718  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  5719  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  5720  0EFC  01B1               	clrf	___awdiv@sign
  5721  0EFD                     l3213:	
  5722  0EFD  1FAC               	btfss	___awdiv@divisor+1,7
  5723  0EFE  2F00               	goto	u2651
  5724  0EFF  2F01               	goto	u2650
  5725  0F00                     u2651:	
  5726  0F00  2F08               	goto	l3219
  5727  0F01                     u2650:	
  5728  0F01                     l3215:	
  5729  0F01  09AB               	comf	___awdiv@divisor,f
  5730  0F02  09AC               	comf	___awdiv@divisor+1,f
  5731  0F03  0AAB               	incf	___awdiv@divisor,f
  5732  0F04  1903               	skipnz
  5733  0F05  0AAC               	incf	___awdiv@divisor+1,f
  5734  0F06                     l3217:	
  5735  0F06  01B1               	clrf	___awdiv@sign
  5736  0F07  0AB1               	incf	___awdiv@sign,f
  5737  0F08                     l3219:	
  5738  0F08  1FAE               	btfss	___awdiv@dividend+1,7
  5739  0F09  2F0B               	goto	u2661
  5740  0F0A  2F0C               	goto	u2660
  5741  0F0B                     u2661:	
  5742  0F0B  2F15               	goto	l3225
  5743  0F0C                     u2660:	
  5744  0F0C                     l3221:	
  5745  0F0C  09AD               	comf	___awdiv@dividend,f
  5746  0F0D  09AE               	comf	___awdiv@dividend+1,f
  5747  0F0E  0AAD               	incf	___awdiv@dividend,f
  5748  0F0F  1903               	skipnz
  5749  0F10  0AAE               	incf	___awdiv@dividend+1,f
  5750  0F11                     l3223:	
  5751  0F11  3001               	movlw	1
  5752  0F12  00AF               	movwf	??___awdiv
  5753  0F13  082F               	movf	??___awdiv,w
  5754  0F14  06B1               	xorwf	___awdiv@sign,f
  5755  0F15                     l3225:	
  5756  0F15  01B2               	clrf	___awdiv@quotient
  5757  0F16  01B3               	clrf	___awdiv@quotient+1
  5758  0F17                     l3227:	
  5759  0F17  082B               	movf	___awdiv@divisor,w
  5760  0F18  042C               	iorwf	___awdiv@divisor+1,w
  5761  0F19  1903               	btfsc	3,2
  5762  0F1A  2F1C               	goto	u2671
  5763  0F1B  2F1D               	goto	u2670
  5764  0F1C                     u2671:	
  5765  0F1C  2F54               	goto	l3247
  5766  0F1D                     u2670:	
  5767  0F1D                     l3229:	
  5768  0F1D  01B0               	clrf	___awdiv@counter
  5769  0F1E  0AB0               	incf	___awdiv@counter,f
  5770  0F1F  2F2B               	goto	l3235
  5771  0F20                     l3231:	
  5772  0F20  3001               	movlw	1
  5773  0F21                     u2685:	
  5774  0F21  1003               	clrc
  5775  0F22  0DAB               	rlf	___awdiv@divisor,f
  5776  0F23  0DAC               	rlf	___awdiv@divisor+1,f
  5777  0F24  3EFF               	addlw	-1
  5778  0F25  1D03               	skipz
  5779  0F26  2F21               	goto	u2685
  5780  0F27                     l3233:	
  5781  0F27  3001               	movlw	1
  5782  0F28  00AF               	movwf	??___awdiv
  5783  0F29  082F               	movf	??___awdiv,w
  5784  0F2A  07B0               	addwf	___awdiv@counter,f
  5785  0F2B                     l3235:	
  5786  0F2B  1FAC               	btfss	___awdiv@divisor+1,7
  5787  0F2C  2F2E               	goto	u2691
  5788  0F2D  2F2F               	goto	u2690
  5789  0F2E                     u2691:	
  5790  0F2E  2F20               	goto	l3231
  5791  0F2F                     u2690:	
  5792  0F2F                     l3237:	
  5793  0F2F  3001               	movlw	1
  5794  0F30                     u2705:	
  5795  0F30  1003               	clrc
  5796  0F31  0DB2               	rlf	___awdiv@quotient,f
  5797  0F32  0DB3               	rlf	___awdiv@quotient+1,f
  5798  0F33  3EFF               	addlw	-1
  5799  0F34  1D03               	skipz
  5800  0F35  2F30               	goto	u2705
  5801  0F36  082C               	movf	___awdiv@divisor+1,w
  5802  0F37  022E               	subwf	___awdiv@dividend+1,w
  5803  0F38  1D03               	skipz
  5804  0F39  2F3C               	goto	u2715
  5805  0F3A  082B               	movf	___awdiv@divisor,w
  5806  0F3B  022D               	subwf	___awdiv@dividend,w
  5807  0F3C                     u2715:	
  5808  0F3C  1C03               	skipc
  5809  0F3D  2F3F               	goto	u2711
  5810  0F3E  2F40               	goto	u2710
  5811  0F3F                     u2711:	
  5812  0F3F  2F47               	goto	l3243
  5813  0F40                     u2710:	
  5814  0F40                     l3239:	
  5815  0F40  082B               	movf	___awdiv@divisor,w
  5816  0F41  02AD               	subwf	___awdiv@dividend,f
  5817  0F42  082C               	movf	___awdiv@divisor+1,w
  5818  0F43  1C03               	skipc
  5819  0F44  03AE               	decf	___awdiv@dividend+1,f
  5820  0F45  02AE               	subwf	___awdiv@dividend+1,f
  5821  0F46                     l3241:	
  5822  0F46  1432               	bsf	___awdiv@quotient,0
  5823  0F47                     l3243:	
  5824  0F47  3001               	movlw	1
  5825  0F48                     u2725:	
  5826  0F48  1003               	clrc
  5827  0F49  0CAC               	rrf	___awdiv@divisor+1,f
  5828  0F4A  0CAB               	rrf	___awdiv@divisor,f
  5829  0F4B  3EFF               	addlw	-1
  5830  0F4C  1D03               	skipz
  5831  0F4D  2F48               	goto	u2725
  5832  0F4E                     l3245:	
  5833  0F4E  3001               	movlw	1
  5834  0F4F  02B0               	subwf	___awdiv@counter,f
  5835  0F50  1D03               	btfss	3,2
  5836  0F51  2F53               	goto	u2731
  5837  0F52  2F54               	goto	u2730
  5838  0F53                     u2731:	
  5839  0F53  2F2F               	goto	l3237
  5840  0F54                     u2730:	
  5841  0F54                     l3247:	
  5842  0F54  0831               	movf	___awdiv@sign,w
  5843  0F55  1903               	btfsc	3,2
  5844  0F56  2F58               	goto	u2741
  5845  0F57  2F59               	goto	u2740
  5846  0F58                     u2741:	
  5847  0F58  2F5E               	goto	l3251
  5848  0F59                     u2740:	
  5849  0F59                     l3249:	
  5850  0F59  09B2               	comf	___awdiv@quotient,f
  5851  0F5A  09B3               	comf	___awdiv@quotient+1,f
  5852  0F5B  0AB2               	incf	___awdiv@quotient,f
  5853  0F5C  1903               	skipnz
  5854  0F5D  0AB3               	incf	___awdiv@quotient+1,f
  5855  0F5E                     l3251:	
  5856  0F5E  0833               	movf	___awdiv@quotient+1,w
  5857  0F5F  00AC               	movwf	?___awdiv+1
  5858  0F60  0832               	movf	___awdiv@quotient,w
  5859  0F61  00AB               	movwf	?___awdiv
  5860  0F62                     l592:	
  5861  0F62  0008               	return
  5862  0F63                     __end_of___awdiv:	
  5863                           
  5864                           	psect	text22
  5865  0ACC                     __ptext22:	
  5866 ;; *************** function _ADC_Read *****************
  5867 ;; Defined at:
  5868 ;;		line 350 in file "main.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  canale          1    wreg     unsigned char 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  canale          1    7[BANK0 ] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  2    4[BANK0 ] int 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5882 ;;      Params:         0       2       0       0       0
  5883 ;;      Locals:         0       1       0       0       0
  5884 ;;      Temps:          0       1       0       0       0
  5885 ;;      Totals:         0       4       0       0       0
  5886 ;;Total ram usage:        4 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    3
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_main
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           
  5897                           ;psect for function _ADC_Read
  5898  0ACC                     _ADC_Read:	
  5899                           
  5900                           ;incstack = 0
  5901                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5902                           ;ADC_Read@canale stored from wreg
  5903  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  5904  0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  5905  0ACE  00A7               	movwf	ADC_Read@canale
  5906  0ACF                     l3431:	
  5907                           
  5908                           ;main.c: 350: int ADC_Read(char canale);main.c: 351: {;main.c: 352:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5909  0ACF  0827               	movf	ADC_Read@canale,w
  5910  0AD0  00A6               	movwf	??_ADC_Read
  5911  0AD1  3002               	movlw	2
  5912  0AD2                     u2955:	
  5913  0AD2  1003               	clrc
  5914  0AD3  0DA6               	rlf	??_ADC_Read,f
  5915  0AD4  3EFF               	addlw	-1
  5916  0AD5  1D03               	skipz
  5917  0AD6  2AD2               	goto	u2955
  5918  0AD7  1003               	clrc
  5919  0AD8  0D26               	rlf	??_ADC_Read,w
  5920  0AD9  3801               	iorlw	1
  5921  0ADA  009F               	movwf	31	;volatile
  5922  0ADB                     l3433:	
  5923                           
  5924                           ;main.c: 353:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5925  0ADB  3004               	movlw	4
  5926  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  5927  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  5928  0ADE  00A6               	movwf	??_ADC_Read
  5929  0ADF                     u3287:	
  5930  0ADF  0BA6               	decfsz	??_ADC_Read,f
  5931  0AE0  2ADF               	goto	u3287
  5932  0AE1  0000               	nop
  5933  0AE2                     l3435:	
  5934                           
  5935                           ;main.c: 354:     GO_nDONE = 1;
  5936  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  5937  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  5938  0AE4  151F               	bsf	31,2	;volatile
  5939  0AE5                     l268:	
  5940                           ;main.c: 356:         ;
  5941                           
  5942                           
  5943                           ;main.c: 355:     while (GO_nDONE)
  5944  0AE5  191F               	btfsc	31,2	;volatile
  5945  0AE6  2AE8               	goto	u2961
  5946  0AE7  2AE9               	goto	u2960
  5947  0AE8                     u2961:	
  5948  0AE8  2AE5               	goto	l268
  5949  0AE9                     u2960:	
  5950  0AE9                     l3437:	
  5951                           
  5952                           ;main.c: 357:     return ADRESL + (ADRESH << 8);
  5953  0AE9  081E               	movf	30,w	;volatile
  5954  0AEA  00A5               	movwf	?_ADC_Read+1
  5955  0AEB  1683               	bsf	3,5	;RP0=1, select bank1
  5956  0AEC  1303               	bcf	3,6	;RP1=0, select bank1
  5957  0AED  081E               	movf	30,w	;volatile
  5958  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  5959  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  5960  0AF0  00A4               	movwf	?_ADC_Read
  5961  0AF1                     l271:	
  5962  0AF1  0008               	return
  5963  0AF2                     __end_of_ADC_Read:	
  5964                           
  5965                           	psect	text23
  5966  0D82                     __ptext23:	
  5967 ;; *************** function _ISR *****************
  5968 ;; Defined at:
  5969 ;;		line 528 in file "main.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;		None
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5983 ;;      Params:         0       0       0       0       0
  5984 ;;      Locals:         0       0       0       0       0
  5985 ;;      Temps:          0       4       0       0       0
  5986 ;;      Totals:         0       4       0       0       0
  5987 ;;Total ram usage:        4 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    2
  5990 ;; This function calls:
  5991 ;;		_UART_Read
  5992 ;;		_conteggioVeicoli
  5993 ;; This function is called by:
  5994 ;;		Interrupt level 1
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function _ISR
  6000  0D82                     _ISR:	
  6001  0D82                     i1l2761:	
  6002                           
  6003                           ;main.c: 531:     if (RCIF && readGateway.Bit == 0)
  6004  0D82  1E8C               	btfss	12,5	;volatile
  6005  0D83  2D85               	goto	u225_21
  6006  0D84  2D86               	goto	u225_20
  6007  0D85                     u225_21:	
  6008  0D85  2D8F               	goto	i1l2769
  6009  0D86                     u225_20:	
  6010  0D86                     i1l2763:	
  6011  0D86  1858               	btfsc	_readGateway,0
  6012  0D87  2D89               	goto	u226_21
  6013  0D88  2D8A               	goto	u226_20
  6014  0D89                     u226_21:	
  6015  0D89  2D8F               	goto	i1l2769
  6016  0D8A                     u226_20:	
  6017  0D8A                     i1l2765:	
  6018                           
  6019                           ;main.c: 532:     {;main.c: 533:         readGateway.Bit = 1;
  6020  0D8A  1458               	bsf	_readGateway,0
  6021                           
  6022                           ;main.c: 534:         readGatewayDone.Bit = 0;
  6023  0D8B  1059               	bcf	_readGatewayDone,0
  6024                           
  6025                           ;main.c: 535:         readGatewayDone.Timeout = 0;
  6026  0D8C  10D9               	bcf	_readGatewayDone,1
  6027  0D8D                     i1l2767:	
  6028                           
  6029                           ;main.c: 536:         dataFromGatewayIndex = 0;
  6030  0D8D  01D3               	clrf	_dataFromGatewayIndex
  6031                           
  6032                           ;main.c: 537:         timerReadFromGateway = 0;
  6033  0D8E  01D2               	clrf	_timerReadFromGateway
  6034  0D8F                     i1l2769:	
  6035                           
  6036                           ;main.c: 539:     if (RCIF && readGateway.Bit == 1)
  6037  0D8F  1E8C               	btfss	12,5	;volatile
  6038  0D90  2D92               	goto	u227_21
  6039  0D91  2D93               	goto	u227_20
  6040  0D92                     u227_21:	
  6041  0D92  2DAA               	goto	i1l2779
  6042  0D93                     u227_20:	
  6043  0D93                     i1l2771:	
  6044  0D93  1C58               	btfss	_readGateway,0
  6045  0D94  2D96               	goto	u228_21
  6046  0D95  2D97               	goto	u228_20
  6047  0D96                     u228_21:	
  6048  0D96  2DAA               	goto	i1l2779
  6049  0D97                     u228_20:	
  6050  0D97                     i1l2773:	
  6051                           
  6052                           ;main.c: 540:     {;main.c: 541:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  6053  0D97  120A  158A  2292  120A  158A  	fcall	_UART_Read
  6054  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  6056  0D9E  00A0               	movwf	??_ISR
  6057  0D9F  0853               	movf	_dataFromGatewayIndex,w
  6058  0DA0  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  6059  0DA1  0084               	movwf	4
  6060  0DA2  0820               	movf	??_ISR,w
  6061  0DA3  1383               	bcf	3,7	;select IRP bank1
  6062  0DA4  0080               	movwf	0
  6063  0DA5                     i1l2775:	
  6064                           
  6065                           ;main.c: 542:         dataFromGatewayIndex++;
  6066  0DA5  3001               	movlw	1
  6067  0DA6  00A0               	movwf	??_ISR
  6068  0DA7  0820               	movf	??_ISR,w
  6069  0DA8  07D3               	addwf	_dataFromGatewayIndex,f
  6070  0DA9                     i1l2777:	
  6071                           
  6072                           ;main.c: 543:         timerReadFromGateway = 0;
  6073  0DA9  01D2               	clrf	_timerReadFromGateway
  6074  0DAA                     i1l2779:	
  6075                           
  6076                           ;main.c: 548:     if (TMR0IF)
  6077  0DAA  1D0B               	btfss	11,2	;volatile
  6078  0DAB  2DAD               	goto	u229_21
  6079  0DAC  2DAE               	goto	u229_20
  6080  0DAD                     u229_21:	
  6081  0DAD  2DB8               	goto	i1l2787
  6082  0DAE                     u229_20:	
  6083  0DAE                     i1l2781:	
  6084                           
  6085                           ;main.c: 549:     {;main.c: 550:         TMR0IF = 0;
  6086  0DAE  110B               	bcf	11,2	;volatile
  6087  0DAF                     i1l2783:	
  6088                           
  6089                           ;main.c: 551:         conteggioVeicoli();
  6090  0DAF  120A  158A  2695  120A  158A  	fcall	_conteggioVeicoli
  6091  0DB4                     i1l2785:	
  6092                           
  6093                           ;main.c: 552:         TMR0 = 6;
  6094  0DB4  3006               	movlw	6
  6095  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  6096  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  6097  0DB7  0081               	movwf	1	;volatile
  6098  0DB8                     i1l2787:	
  6099                           
  6100                           ;main.c: 555:     if (TMR1IF)
  6101  0DB8  1C0C               	btfss	12,0	;volatile
  6102  0DB9  2DBB               	goto	u230_21
  6103  0DBA  2DBC               	goto	u230_20
  6104  0DBB                     u230_21:	
  6105  0DBB  2DD1               	goto	i1l353
  6106  0DBC                     u230_20:	
  6107  0DBC                     i1l2789:	
  6108                           
  6109                           ;main.c: 556:     {;main.c: 557:         TMR1IF = 0;
  6110  0DBC  100C               	bcf	12,0	;volatile
  6111  0DBD                     i1l2791:	
  6112                           
  6113                           ;main.c: 558:         count_lux++;
  6114  0DBD  3001               	movlw	1
  6115  0DBE  00A0               	movwf	??_ISR
  6116  0DBF  0820               	movf	??_ISR,w
  6117  0DC0  07D4               	addwf	_count_lux,f
  6118  0DC1                     i1l2793:	
  6119                           
  6120                           ;main.c: 560:         if (count_lux >= 20)
  6121  0DC1  3014               	movlw	20
  6122  0DC2  0254               	subwf	_count_lux,w
  6123  0DC3  1C03               	skipc
  6124  0DC4  2DC6               	goto	u231_21
  6125  0DC5  2DC7               	goto	u231_20
  6126  0DC6                     u231_21:	
  6127  0DC6  2DCD               	goto	i1l2801
  6128  0DC7                     u231_20:	
  6129  0DC7                     i1l2795:	
  6130                           
  6131                           ;main.c: 561:         {;main.c: 562:             secondPassed.Bit = 1;
  6132  0DC7  1457               	bsf	_secondPassed,0
  6133  0DC8                     i1l2797:	
  6134                           
  6135                           ;main.c: 563:             count_lux = 0;
  6136  0DC8  01D4               	clrf	_count_lux
  6137  0DC9                     i1l2799:	
  6138                           
  6139                           ;main.c: 564:             timerReadFromGateway++;
  6140  0DC9  3001               	movlw	1
  6141  0DCA  00A0               	movwf	??_ISR
  6142  0DCB  0820               	movf	??_ISR,w
  6143  0DCC  07D2               	addwf	_timerReadFromGateway,f
  6144  0DCD                     i1l2801:	
  6145                           
  6146                           ;main.c: 567:         TMR1H = 60;
  6147  0DCD  303C               	movlw	60
  6148  0DCE  008F               	movwf	15	;volatile
  6149  0DCF                     i1l2803:	
  6150                           
  6151                           ;main.c: 568:         TMR1L = 176;
  6152  0DCF  30B0               	movlw	176
  6153  0DD0  008E               	movwf	14	;volatile
  6154  0DD1                     i1l353:	
  6155  0DD1  0823               	movf	??_ISR+3,w
  6156  0DD2  008A               	movwf	10
  6157  0DD3  0822               	movf	??_ISR+2,w
  6158  0DD4  0084               	movwf	4
  6159  0DD5  0E21               	swapf	(??_ISR+1)^0,w
  6160  0DD6  0083               	movwf	3
  6161  0DD7  0EFE               	swapf	btemp,f
  6162  0DD8  0E7E               	swapf	btemp,w
  6163  0DD9  0009               	retfie
  6164  0DDA                     __end_of_ISR:	
  6165                           
  6166                           	psect	intentry
  6167  0004                     __pintentry:	
  6168                           ;incstack = 0
  6169                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6170                           
  6171  0004                     interrupt_function:	
  6172  007E                     saved_w	set	btemp
  6173  0004  00FE               	movwf	btemp
  6174  0005  0E03               	swapf	3,w
  6175  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6176  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6177  0008  00A1               	movwf	??_ISR+1
  6178  0009  0804               	movf	4,w
  6179  000A  00A2               	movwf	??_ISR+2
  6180  000B  080A               	movf	10,w
  6181  000C  00A3               	movwf	??_ISR+3
  6182  000D  120A  158A  2D82   	ljmp	_ISR
  6183                           
  6184                           	psect	text24
  6185  0E95                     __ptext24:	
  6186 ;; *************** function _conteggioVeicoli *****************
  6187 ;; Defined at:
  6188 ;;		line 408 in file "main.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  i               1   13[COMMON] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6202 ;;      Params:         0       0       0       0       0
  6203 ;;      Locals:         1       0       0       0       0
  6204 ;;      Temps:          4       0       0       0       0
  6205 ;;      Totals:         5       0       0       0       0
  6206 ;;Total ram usage:        5 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    1
  6209 ;; This function calls:
  6210 ;;		_Conteggio
  6211 ;; This function is called by:
  6212 ;;		_ISR
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           
  6217                           ;psect for function _conteggioVeicoli
  6218  0E95                     _conteggioVeicoli:	
  6219  0E95                     i1l2525:	
  6220                           ;incstack = 0
  6221                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6222                           
  6223                           
  6224                           ;main.c: 410:     RoadsSensors[0] = PORTBbits.RB3;
  6225  0E95  3000               	movlw	0
  6226  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  6227  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  6228  0E98  1986               	btfsc	6,3	;volatile
  6229  0E99  3001               	movlw	1
  6230  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  6231  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  6232  0E9C  00A0               	movwf	_RoadsSensors^(0+128)
  6233                           
  6234                           ;main.c: 411:     RoadsSensors[1] = PORTBbits.RB4;
  6235  0E9D  3000               	movlw	0
  6236  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  6237  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  6238  0EA0  1A06               	btfsc	6,4	;volatile
  6239  0EA1  3001               	movlw	1
  6240  0EA2  1683               	bsf	3,5	;RP0=1, select bank1
  6241  0EA3  1303               	bcf	3,6	;RP1=0, select bank1
  6242  0EA4  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  6243                           
  6244                           ;main.c: 412:     RoadsSensors[2] = PORTBbits.RB5;
  6245  0EA5  3000               	movlw	0
  6246  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  6247  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  6248  0EA8  1A86               	btfsc	6,5	;volatile
  6249  0EA9  3001               	movlw	1
  6250  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  6251  0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  6252  0EAC  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  6253                           
  6254                           ;main.c: 413:     RoadsSensors[3] = PORTAbits.RA5;
  6255  0EAD  3000               	movlw	0
  6256  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  6257  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  6258  0EB0  1A85               	btfsc	5,5	;volatile
  6259  0EB1  3001               	movlw	1
  6260  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  6261  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  6262  0EB4  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  6263  0EB5                     i1l2527:	
  6264                           
  6265                           ;main.c: 415:     for (unsigned char i = 0; i < 4; i++)
  6266  0EB5  01FD               	clrf	conteggioVeicoli@i
  6267  0EB6                     i1l2531:	
  6268                           
  6269                           ;main.c: 416:     {;main.c: 417:         if (!RoadsSensors[i])
  6270  0EB6  087D               	movf	conteggioVeicoli@i,w
  6271  0EB7  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6272  0EB8  0084               	movwf	4
  6273  0EB9  1383               	bcf	3,7	;select IRP bank1
  6274  0EBA  0800               	movf	0,w
  6275  0EBB  1D03               	btfss	3,2
  6276  0EBC  2EBE               	goto	u196_21
  6277  0EBD  2EBF               	goto	u196_20
  6278  0EBE                     u196_21:	
  6279  0EBE  2EC8               	goto	i1l2535
  6280  0EBF                     u196_20:	
  6281  0EBF                     i1l2533:	
  6282                           
  6283                           ;main.c: 418:         {;main.c: 419:             count++;
  6284  0EBF  3001               	movlw	1
  6285  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  6286  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  6287  0EC2  07CD               	addwf	_count,f
  6288  0EC3  1803               	skipnc
  6289  0EC4  0ACE               	incf	_count+1,f
  6290  0EC5  3000               	movlw	0
  6291  0EC6  07CE               	addwf	_count+1,f
  6292                           
  6293                           ;main.c: 420:         }
  6294  0EC7  2EEF               	goto	i1l2541
  6295  0EC8                     i1l2535:	
  6296  0EC8  087D               	movf	conteggioVeicoli@i,w
  6297  0EC9  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6298  0ECA  0084               	movwf	4
  6299  0ECB  0800               	movf	0,w
  6300  0ECC  1903               	btfsc	3,2
  6301  0ECD  2ECF               	goto	u197_21
  6302  0ECE  2ED0               	goto	u197_20
  6303  0ECF                     u197_21:	
  6304  0ECF  2EEF               	goto	i1l2541
  6305  0ED0                     u197_20:	
  6306  0ED0                     i1l2537:	
  6307                           
  6308                           ;main.c: 422:         {;main.c: 423:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  6309  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  6310  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  6311  0ED2  084E               	movf	_count+1,w
  6312  0ED3  00F1               	movwf	Conteggio@_count+1
  6313  0ED4  084D               	movf	_count,w
  6314  0ED5  00F0               	movwf	Conteggio@_count
  6315  0ED6  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  6316  0ED7  00F9               	movwf	??_conteggioVeicoli
  6317  0ED8  0879               	movf	??_conteggioVeicoli,w
  6318  0ED9  00F2               	movwf	Conteggio@_motorcycle
  6319  0EDA  30D3               	movlw	(low (_car| 0))& (0+255)
  6320  0EDB  00FA               	movwf	??_conteggioVeicoli+1
  6321  0EDC  087A               	movf	??_conteggioVeicoli+1,w
  6322  0EDD  00F3               	movwf	Conteggio@_car
  6323  0EDE  30CF               	movlw	(low (_truck| 0))& (0+255)
  6324  0EDF  00FB               	movwf	??_conteggioVeicoli+2
  6325  0EE0  087B               	movf	??_conteggioVeicoli+2,w
  6326  0EE1  00F4               	movwf	Conteggio@_truck
  6327  0EE2  087D               	movf	conteggioVeicoli@i,w
  6328  0EE3  00FC               	movwf	??_conteggioVeicoli+3
  6329  0EE4  087C               	movf	??_conteggioVeicoli+3,w
  6330  0EE5  00F5               	movwf	Conteggio@index
  6331  0EE6  120A  158A  248E  120A  158A  	fcall	_Conteggio
  6332  0EEB                     i1l2539:	
  6333                           
  6334                           ;main.c: 424:             count = 0;
  6335  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  6336  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  6337  0EED  01CD               	clrf	_count
  6338  0EEE  01CE               	clrf	_count+1
  6339  0EEF                     i1l2541:	
  6340                           
  6341                           ;main.c: 426:     }
  6342  0EEF  3001               	movlw	1
  6343  0EF0  00F9               	movwf	??_conteggioVeicoli
  6344  0EF1  0879               	movf	??_conteggioVeicoli,w
  6345  0EF2  07FD               	addwf	conteggioVeicoli@i,f
  6346  0EF3                     i1l2543:	
  6347  0EF3  3004               	movlw	4
  6348  0EF4  027D               	subwf	conteggioVeicoli@i,w
  6349  0EF5  1C03               	skipc
  6350  0EF6  2EF8               	goto	u198_21
  6351  0EF7  2EF9               	goto	u198_20
  6352  0EF8                     u198_21:	
  6353  0EF8  2EB6               	goto	i1l2531
  6354  0EF9                     u198_20:	
  6355  0EF9                     i1l305:	
  6356  0EF9  0008               	return
  6357  0EFA                     __end_of_conteggioVeicoli:	
  6358                           
  6359                           	psect	text25
  6360  0C8E                     __ptext25:	
  6361 ;; *************** function _Conteggio *****************
  6362 ;; Defined at:
  6363 ;;		line 111 in file "./CustomLib/TrafficLight.h"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  _count          2    0[COMMON] unsigned int 
  6366 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  6367 ;;		 -> motorcycle(4), 
  6368 ;;  _car            1    3[COMMON] PTR unsigned char 
  6369 ;;		 -> car(4), 
  6370 ;;  _truck          1    4[COMMON] PTR unsigned char 
  6371 ;;		 -> truck(4), 
  6372 ;;  index           1    5[COMMON] unsigned char 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;		None
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  1    wreg      void 
  6377 ;; Registers used:
  6378 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6384 ;;      Params:         6       0       0       0       0
  6385 ;;      Locals:         0       0       0       0       0
  6386 ;;      Temps:          3       0       0       0       0
  6387 ;;      Totals:         9       0       0       0       0
  6388 ;;Total ram usage:        9 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; This function calls:
  6391 ;;		Nothing
  6392 ;; This function is called by:
  6393 ;;		_conteggioVeicoli
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           
  6398                           ;psect for function _Conteggio
  6399  0C8E                     _Conteggio:	
  6400  0C8E                     i1l2109:	
  6401                           ;incstack = 0
  6402                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  6403                           
  6404                           
  6405                           ;./CustomLib/TrafficLight.h: 111: void Conteggio(unsigned int _count, unsigned char _mot
      +                          orcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custo
      +                          mLib/TrafficLight.h: 112: {;./CustomLib/TrafficLight.h: 113:     if (_count >= 500)
  6406  0C8E  3001               	movlw	1
  6407  0C8F  0271               	subwf	Conteggio@_count+1,w
  6408  0C90  30F4               	movlw	244
  6409  0C91  1903               	skipnz
  6410  0C92  0270               	subwf	Conteggio@_count,w
  6411  0C93  1C03               	skipc
  6412  0C94  2C96               	goto	u134_21
  6413  0C95  2C97               	goto	u134_20
  6414  0C96                     u134_21:	
  6415  0C96  2CA7               	goto	i1l2113
  6416  0C97                     u134_20:	
  6417  0C97                     i1l2111:	
  6418                           
  6419                           ;./CustomLib/TrafficLight.h: 114:     {;./CustomLib/TrafficLight.h: 115:         _motorc
      +                          ycle[index] = _motorcycle[index] + 1;
  6420  0C97  0875               	movf	Conteggio@index,w
  6421  0C98  0772               	addwf	Conteggio@_motorcycle,w
  6422  0C99  00F6               	movwf	??_Conteggio
  6423  0C9A  0876               	movf	??_Conteggio,w
  6424  0C9B  0084               	movwf	4
  6425  0C9C  1383               	bcf	3,7	;select IRP bank0
  6426  0C9D  0800               	movf	0,w
  6427  0C9E  3E01               	addlw	1
  6428  0C9F  00F7               	movwf	??_Conteggio+1
  6429  0CA0  0875               	movf	Conteggio@index,w
  6430  0CA1  0772               	addwf	Conteggio@_motorcycle,w
  6431  0CA2  00F8               	movwf	??_Conteggio+2
  6432  0CA3  0878               	movf	??_Conteggio+2,w
  6433  0CA4  0084               	movwf	4
  6434  0CA5  0877               	movf	??_Conteggio+1,w
  6435  0CA6  0080               	movwf	0
  6436  0CA7                     i1l2113:	
  6437                           
  6438                           ;./CustomLib/TrafficLight.h: 117:     if (_count >= 1500)
  6439  0CA7  3005               	movlw	5
  6440  0CA8  0271               	subwf	Conteggio@_count+1,w
  6441  0CA9  30DC               	movlw	220
  6442  0CAA  1903               	skipnz
  6443  0CAB  0270               	subwf	Conteggio@_count,w
  6444  0CAC  1C03               	skipc
  6445  0CAD  2CAF               	goto	u135_21
  6446  0CAE  2CB0               	goto	u135_20
  6447  0CAF                     u135_21:	
  6448  0CAF  2CC0               	goto	i1l2117
  6449  0CB0                     u135_20:	
  6450  0CB0                     i1l2115:	
  6451                           
  6452                           ;./CustomLib/TrafficLight.h: 118:     {;./CustomLib/TrafficLight.h: 119:         _car[in
      +                          dex] = _car[index] + 1;
  6453  0CB0  0875               	movf	Conteggio@index,w
  6454  0CB1  0773               	addwf	Conteggio@_car,w
  6455  0CB2  00F6               	movwf	??_Conteggio
  6456  0CB3  0876               	movf	??_Conteggio,w
  6457  0CB4  0084               	movwf	4
  6458  0CB5  1383               	bcf	3,7	;select IRP bank0
  6459  0CB6  0800               	movf	0,w
  6460  0CB7  3E01               	addlw	1
  6461  0CB8  00F7               	movwf	??_Conteggio+1
  6462  0CB9  0875               	movf	Conteggio@index,w
  6463  0CBA  0773               	addwf	Conteggio@_car,w
  6464  0CBB  00F8               	movwf	??_Conteggio+2
  6465  0CBC  0878               	movf	??_Conteggio+2,w
  6466  0CBD  0084               	movwf	4
  6467  0CBE  0877               	movf	??_Conteggio+1,w
  6468  0CBF  0080               	movwf	0
  6469  0CC0                     i1l2117:	
  6470                           
  6471                           ;./CustomLib/TrafficLight.h: 121:     if (_count >= 3000)
  6472  0CC0  300B               	movlw	11
  6473  0CC1  0271               	subwf	Conteggio@_count+1,w
  6474  0CC2  30B8               	movlw	184
  6475  0CC3  1903               	skipnz
  6476  0CC4  0270               	subwf	Conteggio@_count,w
  6477  0CC5  1C03               	skipc
  6478  0CC6  2CC8               	goto	u136_21
  6479  0CC7  2CC9               	goto	u136_20
  6480  0CC8                     u136_21:	
  6481  0CC8  2CD9               	goto	i1l166
  6482  0CC9                     u136_20:	
  6483  0CC9                     i1l2119:	
  6484                           
  6485                           ;./CustomLib/TrafficLight.h: 122:     {;./CustomLib/TrafficLight.h: 123:         _truck[
      +                          index] = _truck[index] + 1;
  6486  0CC9  0875               	movf	Conteggio@index,w
  6487  0CCA  0774               	addwf	Conteggio@_truck,w
  6488  0CCB  00F6               	movwf	??_Conteggio
  6489  0CCC  0876               	movf	??_Conteggio,w
  6490  0CCD  0084               	movwf	4
  6491  0CCE  1383               	bcf	3,7	;select IRP bank0
  6492  0CCF  0800               	movf	0,w
  6493  0CD0  3E01               	addlw	1
  6494  0CD1  00F7               	movwf	??_Conteggio+1
  6495  0CD2  0875               	movf	Conteggio@index,w
  6496  0CD3  0774               	addwf	Conteggio@_truck,w
  6497  0CD4  00F8               	movwf	??_Conteggio+2
  6498  0CD5  0878               	movf	??_Conteggio+2,w
  6499  0CD6  0084               	movwf	4
  6500  0CD7  0877               	movf	??_Conteggio+1,w
  6501  0CD8  0080               	movwf	0
  6502  0CD9                     i1l166:	
  6503  0CD9  0008               	return
  6504  0CDA                     __end_of_Conteggio:	
  6505                           
  6506                           	psect	text26
  6507  0A92                     __ptext26:	
  6508 ;; *************** function _UART_Read *****************
  6509 ;; Defined at:
  6510 ;;		line 389 in file "main.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      unsigned char 
  6517 ;; Registers used:
  6518 ;;		wreg
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6524 ;;      Params:         0       0       0       0       0
  6525 ;;      Locals:         0       0       0       0       0
  6526 ;;      Temps:          0       0       0       0       0
  6527 ;;      Totals:         0       0       0       0       0
  6528 ;;Total ram usage:        0 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_ISR
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           
  6538                           ;psect for function _UART_Read
  6539  0A92                     _UART_Read:	
  6540  0A92                     i1l2519:	
  6541                           ;incstack = 0
  6542                           ; Regs used in _UART_Read: [wreg]
  6543                           
  6544  0A92                     i1l289:	
  6545                           ;main.c: 392:         ;
  6546                           
  6547                           
  6548                           ;main.c: 391:     while (!RCIF)
  6549  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  6550  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  6551  0A94  1E8C               	btfss	12,5	;volatile
  6552  0A95  2A97               	goto	u195_21
  6553  0A96  2A98               	goto	u195_20
  6554  0A97                     u195_21:	
  6555  0A97  2A92               	goto	i1l289
  6556  0A98                     u195_20:	
  6557  0A98                     i1l291:	
  6558                           
  6559                           ;main.c: 393:     RCIF = 0;
  6560  0A98  128C               	bcf	12,5	;volatile
  6561  0A99                     i1l2521:	
  6562                           
  6563                           ;main.c: 394:     return RCREG;
  6564  0A99  081A               	movf	26,w	;volatile
  6565  0A9A                     i1l292:	
  6566  0A9A  0008               	return
  6567  0A9B                     __end_of_UART_Read:	
  6568  007E                     btemp	set	126	;btemp
  6569  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        8
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      70
    BANK1            80     10      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    DigitsArr	PTR struct .[2] size(1) Largest target is 3
		 -> digits1(BANK1[3]), digits0(BANK1[3]), 

    Semafori	PTR struct .[2] size(1) Largest target is 14
		 -> s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK1[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    GetDigits@_digits	PTR PTR struct . size(1) Largest target is 2
		 -> DigitsArr(BANK0[2]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _rand->___lmul
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->_SetDisplay
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   23461
                                             32 BANK0      9     9      0
                                              0 BANK1     10    10      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                           _init_ADC
                       _luciSemaforo
                                _map
                               _rand
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     316
                                             17 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    5528
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2616
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     183
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         13    13      0     668
                                              4 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  3     3      0    3194
                                             11 BANK0      3     3      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           7     3      4    1514
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    10     9      1    1618
                                             12 BANK0     10     9      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    12     5      7    1395
                                              4 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            9     6      3    3993
                                             20 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     721
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
     ___bmul
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _UpdateTimes
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _rand
     ___lmul
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      A      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9B      12        0.0%
ABS                  0      0      9B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jul 13 17:50:56 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                      ___awdiv@sign 0031                                _s0 00C1  
                              _s1 00B3                                fsr 0004               ___wmul@multiplicand 0026  
                  _GetDigits$1203 003A                 luciSemaforo@index 0027                       __CFG_LVP$ON 0000  
                             l111 05F1                               l105 05A0                               l114 0619  
                             l127 07E8                               l311 0CDE                               l160 0551  
                             l320 0D01                               l137 0BFE                               l321 0D05  
                             l313 0CE2                               l241 0356                               l225 0080  
                             l154 0E94                               l314 0CE6                               l322 0D2C  
                             l242 0261                               l260 0482                               l149 06D0  
                             l318 0CFD                               l271 0AF1                               l343 077D  
                             l255 0405                               l504 0F77                               l280 0AA5  
                             l329 0D81                               l265 0AB8                               l441 0B18  
                             l169 0B7E                               l514 0FFF                               l274 0BB8  
                             l258 0479                               l268 0AE5                               l605 0E34  
                             l453 0C8D                               l277 0A9E                               l439 0B00  
                             l279 0AA2                               l465 07FF                               l297 0B49  
                             l592 0F62                               l889 0C45                      __CFG_CPD$OFF 0000  
                             _ISR 0D82                               _car 00D3                               _map 0B4A  
                             fsr0 0004                               indf 0000                      ___awmod@sign 002A  
                    __CFG_FOSC$HS 0000                              ?_ISR 0070             ??_ShowDigitsOnDisplay 002B  
                            l3101 0BF2                              l3103 0BFA                              l3111 0D30  
                            l3031 0572                              l3113 0D31                              l3121 0D71  
                            l3201 0FE1                              l3033 0573                              l3025 0555  
                            l3211 0EFA                              l3115 0D4F                              l3203 0FE7  
                            l3131 0AF6                              l3051 05A6                              l3027 0564  
                            l3107 0A9E                              l3221 0F0C                              l3213 0EFD  
                            l3117 0D52                              l3205 0FEC                              l3133 0AFA  
                            l3061 05C2                              l3053 05AE                              l3045 0579  
                            l3029 0571                              l3109 0AA3                              l3231 0F20  
                            l3223 0F11                              l3215 0F01                              l3207 0FF7  
                            l3311 07D8                              l3135 0B07                              l3151 0C74  
                            l3143 0C46                              l3047 058D                              l3039 0575  
                            l3241 0F46                              l3233 0F27                              l3225 0F15  
                            l3217 0F06                              l3161 07F1                              l3401 0BB5  
                            l3305 0783                              l3137 0B0E                              l3129 0AF2  
                            l3153 0C85                              l3145 0C50                              l3081 0604  
                            l3073 05CA                              l3057 05AF                              l3049 0593  
                            l3251 0F5E                              l3243 0F47                              l3235 0F2B  
                            l3227 0F17                              l3219 0F08                              l3163 07F5  
                            l3331 061F                              l3171 0F63                              l3403 0BB6  
                            l3315 07DE                              l3307 07B1                              l3139 0B14  
                            l3147 0C54                              l3411 0C2E                              l3075 05DE  
                            l3067 05C6                              l3059 05B5                              l3245 0F4E  
                            l3237 0F2F                              l3229 0F1D                              l3261 0DE6  
                            l3165 07F7                              l3157 07EC                              l3333 0644  
                            l3341 06A1                              l3325 061D                              l3093 0BBC  
                            l3181 0F8A                              l3173 0F66                              l3405 0BB7  
                            l3317 07E2                              l3309 07D4                              l3149 0C6B  
                            l3085 0605                              l3077 05E4                              l3431 0ACF  
                            l3239 0F40                              l3247 0F54                              l3271 0DFA  
                            l3263 0DE8                              l3255 0DDA                              l3167 07FE  
                            l3159 07ED                              l3343 06A5                              l3335 0669  
                            l3319 061A                              l3095 0BCB                              l3191 0FAE  
                            l3183 0F92                              l3175 0F6A                              l3407 0BFF  
                            l3087 060B                              l3079 05F7                              l3423 0B30  
                            l3415 0B1C                              l3511 0035                              l3433 0ADB  
                            l3249 0F59                              l3281 0E19                              l3273 0E01  
                            l3265 0DEC                              l3257 0DDD                              l3345 06AB  
                            l3097 0BD3                              l3361 0E40                              l3193 0FB7  
                            l3185 0F9A                              l3177 0F7B                              l3441 0CDD  
                            l3409 0C20                              l3089 0618                              l3425 0B39  
                            l3417 0B2F                              l3521 0042                              l3513 003B  
                            l3435 0AE2                              l3283 0E20                              l3275 0E05  
                            l3267 0DF1                              l3259 0DE1                              l3347 06AF  
                            l3339 068E                              l3099 0BE4                              l3363 0E4F  
                            l3355 0E38                              l3195 0FC9                              l3187 0F9D  
                            l3179 0F86                              l3427 0B3F                              l3611 0263  
                            l3531 0051                              l3523 0046                              l3515 003C  
                            l3437 0AE9                              l3277 0E09                              l3269 0DF7  
                            l3285 0E26                              l3381 0517                              l3373 0488  
                            l3349 06B5                              l3365 0E5D                              l3357 0E39  
                            l3197 0FD7                              l3189 0FAA                              l3293 0781  
                            l3445 0CEA                              l3453 0D1C                              l3429 0B43  
                            l3621 0319                              l3613 02F1                              l3605 024D  
                            l3541 0078                              l3533 005C                              l3525 0048  
                            l3517 003E                              l3287 0E2B                              l3279 0E13  
                            l3383 052A                              l3375 0489                              l3367 0E70  
                            l3199 0FD8                              l3391 0AAA                              l3631 032E  
                            l3615 02FC                              l3607 0252                              l3551 0082  
                            l3543 0079                              l3535 0073                              l3527 004A  
                            l3519 0040                              l3289 0E30                              l3377 049E  
                            l3369 0E8F                              l3481 06E0                              l3473 06D1  
                            l3393 0AAD                              l3449 0D09                              l3385 0B4A  
                            l3633 0334                              l3625 0320                              l3617 0309  
                            l3609 025A                              l3561 00B1                              l3641 0341  
                            l3545 007A                              l3537 0076                              l3529 004C  
                            l3379 04BA                              l3483 06FB                              l3299 0782  
                            l3395 0AB1                              l3651 0363                              l3643 035B  
                            l3635 0337                              l3627 0325                              l3619 0316  
                            l3571 00EA                              l3563 00BF                              l3547 007B  
                            l3539 0077                              l3485 0706                              l3493 0748  
                            l3397 0B7F                              l3389 0AA6                              l3661 037C  
                            l3653 0365                              l3645 035C                              l3637 033D  
                            l3573 012F                              l3581 01FE                              l3565 00C6  
                            l3557 0085                              ?_map 0034                              l3487 0710  
                            l3495 075B                              l3479 06D5                              l3399 0B87  
                            l3671 03E5                              l3647 035D                              l3655 036F  
                            l3575 0174                              l3583 0218                              l3567 00D4  
                            l3559 00AC                              l3497 0761                              l3489 072B  
                            l3681 0415                              l3673 03F1                              l3665 0383  
                            l3657 0375                              l3649 035F                              l3593 0228  
                            l3585 0220                              l3577 01B9                              l3569 00DB  
                            l3499 0767                              l3691 046D                              l3683 0428  
                            l3675 03F9                              l3667 0396                              l3659 0379  
                            l3595 0237                              l3587 0226                              l3693 0473  
                            l3677 03FA                              l3669 03DF                              l3685 045F  
                            l3597 023D                              l3941 020A                              l3951 0750  
                            l3695 0477                              l3679 03FF                              l3943 034E  
                            l3599 024A                              l3953 0D79                              l3945 0CF2  
                            l3697 047D                              l3689 0468                              l3955 0696  
                            l3947 0D11                              l3699 0481                              l3949 0D24  
                            u3000 0767                              u3001 0766                              u3100 031F  
                            u3101 031E                              u3110 0334                              u3030 007F  
                            u3111 0333                              u3031 007E                              u3200 03F9  
                            u3120 033D                              u3040 00B1                              u3201 03F8  
                            u3121 033C                              u3041 00B0                              u2410 0618  
                            u3210 03FF                              u3130 035B                              u3050 00C6  
                            u2411 0617                              u3211 03FE                              u3131 035A  
                            u3051 00C5                              u2404 05FD                              u2340 05A0  
                            u3220 0473                              u3140 0363                              u3060 00DB  
                            u2405 05FB                              u2341 059F                              u2325 0567  
                            u3221 0472                              u3141 0362                              u3061 00DA  
                            u2350 05A6                              u2334 0585                              u2430 0AA2  
                            u3230 0477                              u3150 0375                              u3070 0226  
                            u2415 0614                              u2351 05A5                              u2335 0583  
                            u2431 0AA1                              u3231 0476                              u3151 0374  
                            u3071 0225                              u2440 0AFA                              u2520 0C85  
                            u2360 05C2                              u3240 047D                              u3160 0379  
                            u3080 024A                              u2425 0BD9                              u2441 0AF9  
                            u2521 0C84                              u2505 0C6D                              u2361 05C1  
                            u2345 059C                              u3241 047C                              u3161 0378  
                            u3081 0249                              u2530 07F1                              u2610 0FC9  
                            u3250 0481                              u3170 0382                              u3090 0260  
                            u2531 07F0                              u2611 0FC8                              u2515 0C75  
                            u3251 0480                              u3171 0381                              u3091 025F  
                            u2540 07FE                              u2380 05F1                              u3180 0396  
                            u2541 07FD                              u2605 0FB0                              u2381 05F0  
                            u2365 05BE                              u3181 0395                              u3085 0246  
                            u2710 0F40                              u2630 0FE7                              u2550 0F6A  
                            u2470 0B14                              u2390 05F7                              u2374 05D6  
                            u3190 03DF                              u2711 0F3F                              u2631 0FE6  
                            u2615 0FC5                              u2551 0F69                              u2471 0B13  
                            u2455 0B01                              u2391 05F6                              u2375 05D4  
                            u3191 03DE                              u2800 0E13                              u2640 0FEC  
                            u2560 0F7B                              u2480 0C54                              u2705 0F30  
                            u2801 0E12                              u2641 0FEB                              u2625 0FD9  
                            u2561 0F7A                              u2465 0B08                              u2481 0C53  
                            u2385 05ED                              u2730 0F54                              u2650 0F01  
                            u2570 0F9A                              u2731 0F53                              u2715 0F3C  
                            u2651 0F00                              u2571 0F99                              u2491 0C5D  
                            u2740 0F59                              u2660 0F0C                              u2820 0E26  
                            u2492 0C64                              u2741 0F58                              u2725 0F48  
                            u2661 0F0B                              u2821 0E25                              u2805 0E0F  
                            u3277 0AB5                              u2493 0C6B                              u2670 0F1D  
                            u2830 0E2B                              u2750 0DE1                              u2910 04BA  
                            u2590 0FAE                              u3287 0ADF                              u2671 0F1C  
                            u2831 0E2A                              u2815 0E1A                              u2751 0DE0  
                            u2911 04B9                              u2591 0FAD                              u2760 0DEC  
                            u2920 0B96                              u2840 07B1                              u2761 0DEB  
                            u2905 0E65                              u2585 0F9F                              u2841 07B0  
                            u2690 0F2F                              u2770 0DF7                              u2850 07DE  
                            u2930 0C3D                              u2691 0F2E                              u2771 0DF6  
                            u2915 04B6                              u2851 07DD                              u2860 07E8  
                            u2940 0B49                              u2685 0F21                              u2925 0B91  
                            u2861 07E7                              u2845 07AD                              u2941 0B48  
                            u2790 0E09                              u2870 06AB                              u2791 0E08  
                            u2871 06AA                              u2935 0C38                              u2960 0AE9  
                            u2880 06B5                              u2961 0AE8                              u2785 0DFB  
                            u2881 06B4                              u2890 0E3F                              u2970 06E0  
                            u2955 0AD2                              u2891 0E3E                              u2971 06DF  
                            u2980 0706                              _RCIF 0065                              u2981 0705  
                            u2990 0710                              u2991 070F                              _TMR0 0001  
                            _TXIF 0064                      __CFG_WRT$OFF 0000                              _disp 0055  
                            _main 0035                              _rand 0BFF                              _temp 0051  
                            _time 0049                              map@x 0034                              btemp 007E  
                __end_of_ADC_Read 0AF2                     __CFG_BOREN$ON 0000                              start 0010  
                 __end_of_GetTime 0BFF                 ___bmul@multiplier 0027                             ??_ISR 0020  
       __size_of_conteggioVeicoli 0065                             ??_map 003E                   __end_of___aldiv 1000  
                           ?_main 0070                             ?_rand 0031                   __end_of___awdiv 0F63  
                   __CFG_WDTE$OFF 0000                   __end_of___awmod 0E35                   ___awdiv@divisor 002B  
                           _T1CON 0010                             i1l305 0EF9                             i1l166 0CD9  
                           i1l353 0DD1                             i1l291 0A98                             i1l292 0A9A  
                           i1l289 0A92                   ___awdiv@counter 0030                             _RCREG 001A  
            UpdateTimes@_semafori 002E                             _TMR1H 000F                             _TMR1L 000E  
                           _SPBRG 0099                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISC 0087                             _TRISD 0088  
                           _TRISE 0089                             _TXREG 0019               ___lmul@multiplicand 0028  
                   __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A                __size_of_UART_Read 0009  
                 __end_of_display 0811                             _count 004D                             _randx 005E  
                           main@i 00E6                             _truck 00CF                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 0013  
                    __end_of_main 0485                      __end_of_rand 0C46         __size_of_SetReceivedTimes 0060  
              __size_of_GetDigits 00CD                            ??_main 0040                            ??_rand 0033  
               SetDefaultTimers@i 002F                 SetDefaultTimers@l 002E                __size_of_BuildByte 00C8  
                      _SetDisplay 0D2D                            _ADCON0 001F                            _ADCON1 009F  
              __size_of_Conteggio 004C                            _ADRESH 001E                            _ADRESL 009E  
                ___awdiv@dividend 002D                            i1l2111 0C97                            i1l2113 0CA7  
                          i1l2115 0CB0                            i1l2117 0CC0                            i1l2109 0C8E  
                          i1l2119 0CC9                            i1l2521 0A99                            i1l2531 0EB6  
                          i1l2541 0EEF                            i1l2533 0EBF                            i1l2525 0E95  
                          i1l2519 0A92                            i1l2543 0EF3                            i1l2535 0EC8  
                          i1l2527 0EB5                            i1l2537 0ED0                            i1l2801 0DCD  
                          i1l2539 0EEB                            i1l2803 0DCF                            i1l2761 0D82  
                          i1l2771 0D93                            i1l2763 0D86                            i1l2781 0DAE  
                          i1l2773 0D97                            i1l2765 0D8A                            i1l2791 0DBD  
                          i1l2783 0DAF                            i1l2775 0DA5                            i1l2767 0D8D  
                          i1l2793 0DC1                            i1l2785 0DB4                            i1l2777 0DA9  
                          i1l2769 0D8F                            i1l2795 0DC7                            i1l2787 0DB8  
                          i1l2779 0DAA                            i1l2797 0DC8                            i1l2789 0DBC  
                          i1l2799 0DC9                            u134_20 0C97                            u230_20 0DBC  
                          u134_21 0C96                            u230_21 0DBB                            u135_20 0CB0  
                          u231_20 0DC7                            u135_21 0CAF                            u231_21 0DC6  
                          u136_20 0CC9                            u136_21 0CC8                            u225_20 0D86  
                          _INTCON 000B                            u225_21 0D85                            u226_20 0D8A  
                          u226_21 0D89                            u227_20 0D93                            u227_21 0D92  
                          u228_20 0D97                            u228_21 0D96                            u229_20 0DAE  
                          u229_21 0DAD                            u195_20 0A98                            u195_21 0A97  
                          u196_20 0EBF                            u196_21 0EBE                            u197_20 0ED0  
                          u197_21 0ECF                            u198_20 0EF9                            u198_21 0EF8  
                          _TMR0IF 005A                            _TMR1IF 0060                         ??_GetTime 0026  
                    ?_UART_TxChar 0070                     main@randomCar 00DE                 __end_of_UART_Init 0BB9  
               __end_of_UART_Read 0A9B                            ___bmul 07E9                            ___lmul 0C46  
                       ??___aldiv 002C                   GetTime@shortInt 0029                            ___wmul 0AF2  
                       ??___awdiv 002F                         ??___awmod 0028                  __end_of_init_ADC 0AB9  
                          _cycled 0056                  ___awdiv@quotient 0032                   ___awmod@divisor 0024  
                 ___awmod@counter 0029                  __end_of_sendByte 0B4A                         ?_ADC_Read 0024  
                          saved_w 007E           __end_of__initialization 0031                 __end_of_GetDigits 0552  
                   ??_UpdateTimes 0024         __size_of_SetDefaultTimers 00B7               ___bmul@multiplicand 0024  
                  __pcstackCOMMON 0070                 __end_of_BuildByte 061A                      __pidataBANK0 0A8A  
                _conteggioVeicoli 0E95                 __end_of_Conteggio 0CDA                     ?_luciSemaforo 0024  
                      ??_ADC_Read 0026            SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C  
                     ?_SetDisplay 0024                     GetDigits@Time 0035              _dataFromGatewayIndex 0053  
            _timerReadFromGateway 0052                        __pbssBANK0 0049                        __pbssBANK1 00A0  
                      __pmaintext 0035                           ?___bmul 0024  ShowDigitsOnDisplay@display_index 002D  
                         ?___lmul 0024                           ?___wmul 0024                    ??_luciSemaforo 0025  
             __end_of_UpdateTimes 07E9                     sendByte@byte0 003D                     sendByte@byte1 0038  
                      __pintentry 0004                    ___lmul@product 002D                  _SetReceivedTimes 0E35  
     __end_of_ShowDigitsOnDisplay 077E                        __stringtab 0800                         ?_init_ADC 0070  
                         _GetTime 0BB9                   BuildByte@valore 0025                   BuildByte@txByte 0029  
         GetTime@_dataFromGateway 0024                         ?_sendByte 0038                    main@randomMoto 00DD  
                      _n_semafori 0811              __size_of_UART_TxChar 000B                           ___aldiv 0F63  
                 __size_of___bmul 0017                           ___awdiv 0EFA                   __size_of___lmul 0048  
                         ___awmod 0DDA               __size_of_SetDisplay 0055                   __size_of___wmul 0027  
               conteggioVeicoli@i 007D                           _digits0 00DA                           _digits1 00D7  
                         __ptext1 0B19                           __ptext2 0A9B                           __ptext3 0552  
                         __ptext4 0BFF                           __ptext5 0C46                           __ptext6 0B4A  
                         __ptext7 0AF2                           __ptext8 0CDA                           __ptext9 0AA6  
                         _display 0806                      __size_of_ISR 0058                      __size_of_map 0035  
                ___awmod@dividend 0026                  ___aldiv@dividend 0028              BuildByte@sommaColumn 002F  
                         _umidita 0050                           clrloop0 0A83                  GetDigits@_digits 003C  
            end_of_initialization 0031                        ??_init_ADC 0024                    main@lux_select 00E4  
                     _UpdateTimes 077E                        ??_sendByte 003A                  _SetDefaultTimers 061A  
                       _RCSTAbits 0018                  ___aldiv@quotient 002F                        _motorcycle 005A  
                       _UART_Init 0B7F                         _UART_Read 0A92             SetReceivedTimes@index 0034  
                       _PORTAbits 0005                         _PORTBbits 0006                         _PORTCbits 0007  
                    SetDisplay@d1 0024                      SetDisplay@d2 0025                      SetDisplay@d3 0026  
                       _TRISCbits 0087                 __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0EFA  
            __end_of_luciSemaforo 0D2D                        map@out_max 003C                        map@out_min 003A  
SetReceivedTimes@_dataFromGateway 0033                         _TXSTAbits 0098                         _GetDigits 0485  
                       _DigitsArr 0062                    __end_of___bmul 0800                    __end_of___lmul 0C8E  
                  __end_of___wmul 0B19                        ?_UART_Init 0033                        ?_UART_Read 0070  
                       _BuildByte 0552                         _Conteggio 0C8E                 BuildByte@sommaRow 002E  
             start_initialization 0013                       __end_of_ISR 0DDA                      ??_SetDisplay 0028  
                     __end_of_map 0B7F          __end_of_SetReceivedTimes 0E95                        ?_GetDigits 0034  
                        ??___bmul 0025                          ??___lmul 002C                    ADC_Read@canale 0027  
                        ??___wmul 0028                        init_fetch0 0AB9                       __pdataBANK0 005E  
              __end_of_SetDisplay 0D82                    GetDigits@index 0034                        ?_BuildByte 0024  
                      ?_Conteggio 0070                         ___latbits 0002                     __pcstackBANK0 0020  
                   __pcstackBANK1 00DD                          ?_GetTime 0024             SetDefaultTimers@verde 0026  
           SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013                 __size_of_sendByte 0031  
                        ?___aldiv 0024                          ?___awdiv 002B                          ?___awmod 0024  
                     ??_UART_Init 0035                       ??_UART_Read 0070                    BuildByte@i_341 0036  
                       __pstrings 0800                    BuildByte@y_342 0032                    sendByte@valore 0039  
                  sendByte@txByte 003E                    BuildByte@byte0 0028                    BuildByte@byte1 0024  
        __end_of_SetDefaultTimers 06D1                          _ADC_Read 0ACC             __size_of_luciSemaforo 0053  
                       _count_lux 0054                     UART_TxChar@ch 0024      __size_of_ShowDigitsOnDisplay 00AD  
                 ___aldiv@divisor 0024                 SetReceivedTimes@i 0035                 interrupt_function 0004  
                 ___aldiv@counter 002D                    ___wmul@product 0028        SetReceivedTimes@semaforoId 0031  
                    ?_UpdateTimes 0070                         clear_ram0 0A82                          _PIE1bits 008C  
                   ??_UART_TxChar 0024                       ??_GetDigits 0037                          _GO_nDONE 00FA  
                    _luciSemaforo 0CDA                         _pressione 004F                 UART_Init@baudrate 0033  
                     ??_BuildByte 0026                         map@in_max 0038                         map@in_min 0036  
                     __stringbase 0805                         main@i_480 00E2                         main@i_481 00E0  
                       main@i_483 00E1                         main@i_485 00E5                       ??_Conteggio 0076  
               ___wmul@multiplier 0024                      GetTime@index 0028                 ___lmul@multiplier 0024  
                    _RoadsSensors 00A0                 ?_conteggioVeicoli 0070                      _secondPassed 0057  
              ??_conteggioVeicoli 0079                  __size_of_GetTime 0046                          _Semafori 0064  
                 main@randomTruck 00DF                       _readGateway 0058                  __size_of___aldiv 009D  
             __end_of_UART_TxChar 0AA6                  __size_of___awdiv 0069                  __size_of___awmod 005B  
              __end_of__stringtab 0806                         sendByte@i 003F                          __ptext10 077E  
                        __ptext11 0B7F                          __ptext20 0DDA                          __ptext12 0F63  
                        __ptext21 0EFA                          __ptext13 06D1                          __ptext22 0ACC  
                        __ptext14 0D2D                          __ptext23 0D82                          __ptext15 0E35  
                        __ptext24 0E95                          __ptext16 0BB9                          __ptext25 0C8E  
                        __ptext17 061A                          __ptext26 0A92                          __ptext18 0485  
                        __ptext19 07E9                __end_of_n_semafori 0812           SetDisplay@display_index 002A  
                        _init_ADC 0AA6                 ?_SetReceivedTimes 002C                     __size_of_main 0450  
                 _dataFromGateway 00A4                     __size_of_rand 0047                          _sendByte 0B19  
              ??_SetReceivedTimes 002D                        _INTCONbits 000B                          init_ram0 0ABD  
            Conteggio@_motorcycle 0072                          intlevel1 0000                   _readGatewayDone 0059  
                       stringcode 0800                       _UART_TxChar 0A9B           SetReceivedTimes@colorId 0032  
            __size_of_UpdateTimes 006B                        GetTime@tmp 002A               _ShowDigitsOnDisplay 06D1  
                      _OPTION_REG 0081                   SetDisplay@value 0027                          stringdir 0800  
                        stringtab 0800                      UpdateTimes@i 002F                      UpdateTimes@l 0030  
               ?_SetDefaultTimers 0024                      ___aldiv@sign 002E                ??_SetDefaultTimers 002B  
            ?_ShowDigitsOnDisplay 0070                        BuildByte@i 0034                        BuildByte@y 0030  
       SetDefaultTimers@_semafori 002A                   Conteggio@_count 0070                     Conteggio@_car 0073  
                 Conteggio@_truck 0074                    Conteggio@index 0075  
