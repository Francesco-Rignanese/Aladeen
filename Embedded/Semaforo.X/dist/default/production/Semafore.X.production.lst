

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jul 13 14:18:23 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	idataBANK0
   200  094E                     __pidataBANK0:	
   201                           
   202                           ;initializer for _Semafori
   203  094E  34D7               	retlw	low (_s0| 0)
   204  094F  3400               	retlw	high (_s0| 0)
   205  0950  34C9               	retlw	low (_s1| 0)
   206  0951  3400               	retlw	high (_s1| 0)
   207  0952  34BB               	retlw	low (_s2| 0)
   208  0953  3400               	retlw	high (_s2| 0)
   209  0954  3490               	retlw	low (_s3| (0+256))
   210  0955  3401               	retlw	high (_s3| (0+256))
   211                           
   212                           ;initializer for _DigitsArr
   213  0956  34E8               	retlw	low (_digits0| 0)
   214  0957  34E5               	retlw	low (_digits1| 0)
   215                           
   216                           	psect	strings
   217  0800                     __pstrings:	
   218  0800                     stringtab:	
   219  0800                     __stringtab:	
   220  0800                     stringcode:	
   221                           ;	String table - string pointers are 1 byte each
   222                           
   223  0800                     stringdir:	
   224  0800  3008               	movlw	high stringdir
   225  0801  008A               	movwf	10
   226  0802  0804               	movf	4,w
   227  0803  0A84               	incf	4,f
   228  0804  0782               	addwf	2,f
   229  0805                     __stringbase:	
   230  0805  3400               	retlw	0
   231  0806                     __end_of__stringtab:	
   232  0806                     _display:	
   233  0806  343F               	retlw	63
   234  0807  3406               	retlw	6
   235  0808  345B               	retlw	91
   236  0809  344F               	retlw	79
   237  080A  3466               	retlw	102
   238  080B  346D               	retlw	109
   239  080C  347D               	retlw	125
   240  080D  3407               	retlw	7
   241  080E  347F               	retlw	127
   242  080F  346F               	retlw	111
   243  0810  3400               	retlw	0
   244  0811                     __end_of_display:	
   245  0811                     _n_semafori:	
   246  0811  3402               	retlw	2
   247  0812                     __end_of_n_semafori:	
   248  0008                     _PORTD	set	8
   249  0005                     _PORTAbits	set	5
   250  001A                     _RCREG	set	26
   251  0019                     _TXREG	set	25
   252  000B                     _INTCONbits	set	11
   253  0018                     _RCSTAbits	set	24
   254  001E                     _ADRESH	set	30
   255  001F                     _ADCON0	set	31
   256  0006                     _PORTBbits	set	6
   257  0007                     _PORTCbits	set	7
   258  000E                     _TMR1L	set	14
   259  000F                     _TMR1H	set	15
   260  0010                     _T1CON	set	16
   261  0001                     _TMR0	set	1
   262  000B                     _INTCON	set	11
   263  0060                     _TMR1IF	set	96
   264  005A                     _TMR0IF	set	90
   265  0065                     _RCIF	set	101
   266  0064                     _TXIF	set	100
   267  00FA                     _GO_nDONE	set	250
   268  008C                     _PIE1bits	set	140
   269  0099                     _SPBRG	set	153
   270  0098                     _TXSTAbits	set	152
   271  0087                     _TRISCbits	set	135
   272  009E                     _ADRESL	set	158
   273  009F                     _ADCON1	set	159
   274  0085                     _TRISA	set	133
   275  0081                     _OPTION_REG	set	129
   276  0089                     _TRISE	set	137
   277  0088                     _TRISD	set	136
   278  0087                     _TRISC	set	135
   279  0086                     _TRISB	set	134
   280                           
   281                           ; #config settings
   282  0000                     
   283                           	psect	cinit
   284  0013                     start_initialization:	
   285  0013                     __initialization:	
   286                           
   287                           ; Initialize objects allocated to BANK0
   288  0013  1383               	bcf	3,7	;select IRP bank0
   289  0014  306B               	movlw	low (__pdataBANK0+10)
   290  0015  00FD               	movwf	btemp+-1
   291  0016  3009               	movlw	high __pidataBANK0
   292  0017  00FE               	movwf	btemp
   293  0018  304E               	movlw	low __pidataBANK0
   294  0019  00FF               	movwf	btemp+1
   295  001A  3061               	movlw	low __pdataBANK0
   296  001B  0084               	movwf	4
   297  001C  120A  158A  217A  120A  118A  	fcall	init_ram0
   298                           
   299                           ; Clear objects allocated to BANK3
   300  0021  1783               	bsf	3,7	;select IRP bank2
   301  0022  3090               	movlw	low __pbssBANK3
   302  0023  0084               	movwf	4
   303  0024  309E               	movlw	low (__pbssBANK3+14)
   304  0025  120A  158A  213D  120A  118A  	fcall	clear_ram0
   305                           
   306                           ; Clear objects allocated to BANK1
   307  002A  1383               	bcf	3,7	;select IRP bank0
   308  002B  30A0               	movlw	low __pbssBANK1
   309  002C  0084               	movwf	4
   310  002D  30EB               	movlw	low (__pbssBANK1+75)
   311  002E  120A  158A  213D  120A  118A  	fcall	clear_ram0
   312                           
   313                           ; Clear objects allocated to BANK0
   314  0033  3048               	movlw	low __pbssBANK0
   315  0034  0084               	movwf	4
   316  0035  3061               	movlw	low (__pbssBANK0+25)
   317  0036  120A  158A  213D  120A  118A  	fcall	clear_ram0
   318  003B                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  003B                     __end_of__initialization:	
   322  003B  0183               	clrf	3
   323  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssBANK0
   326  0048                     __pbssBANK0:	
   327  0048                     _count:	
   328  0048                     	ds	2
   329  004A                     _pressione:	
   330  004A                     	ds	1
   331  004B                     _umidita:	
   332  004B                     	ds	1
   333  004C                     _temp:	
   334  004C                     	ds	1
   335  004D                     _timerReadFromGateway:	
   336  004D                     	ds	1
   337  004E                     _dataFromGatewayIndex:	
   338  004E                     	ds	1
   339  004F                     _count_lux:	
   340  004F                     	ds	1
   341  0050                     _disp:	
   342  0050                     	ds	1
   343  0051                     _cycled:	
   344  0051                     	ds	1
   345  0052                     _secondPassed:	
   346  0052                     	ds	1
   347  0053                     _readGateway:	
   348  0053                     	ds	1
   349  0054                     _readGatewayDone:	
   350  0054                     	ds	1
   351  0055                     _truck:	
   352  0055                     	ds	4
   353  0059                     _car:	
   354  0059                     	ds	4
   355  005D                     _motorcycle:	
   356  005D                     	ds	4
   357                           
   358                           	psect	dataBANK0
   359  0061                     __pdataBANK0:	
   360  0061                     _Semafori:	
   361  0061                     	ds	8
   362  0069                     _DigitsArr:	
   363  0069                     	ds	2
   364                           
   365                           	psect	bssBANK1
   366  00A0                     __pbssBANK1:	
   367  00A0                     _time:	
   368  00A0                     	ds	8
   369  00A8                     _RoadsSensors:	
   370  00A8                     	ds	4
   371  00AC                     _dataFromGateway:	
   372  00AC                     	ds	15
   373  00BB                     _s2:	
   374  00BB                     	ds	14
   375  00C9                     _s1:	
   376  00C9                     	ds	14
   377  00D7                     _s0:	
   378  00D7                     	ds	14
   379  00E5                     _digits1:	
   380  00E5                     	ds	3
   381  00E8                     _digits0:	
   382  00E8                     	ds	3
   383                           
   384                           	psect	bssBANK3
   385  0190                     __pbssBANK3:	
   386  0190                     _s3:	
   387  0190                     	ds	14
   388                           
   389                           	psect	inittext
   390  0976                     init_fetch0:	
   391                           ;	Called with low address in FSR and high address in W
   392                           
   393  0976  087E               	movf	btemp,w
   394  0977  008A               	movwf	10
   395  0978  087F               	movf	btemp+1,w
   396  0979  0082               	movwf	2
   397  097A                     init_ram0:	
   398                           ;Called with:
   399                           ;	high address of idata address in btemp 
   400                           ;	low address of idata address in btemp+1 
   401                           ;	low address of data in FSR
   402                           ;	high address + 1 of data in btemp-1
   403                           
   404  097A  120A  158A  2176  120A  158A  	fcall	init_fetch0
   405  097F  0080               	movwf	0
   406  0980  0A84               	incf	4,f
   407  0981  0804               	movf	4,w
   408  0982  067D               	xorwf	btemp+-1,w
   409  0983  1903               	btfsc	3,2
   410  0984  3400               	retlw	0
   411  0985  0AFF               	incf	btemp+1,f
   412  0986  1903               	btfsc	3,2
   413  0987  0AFE               	incf	btemp,f
   414  0988  297A               	goto	init_ram0
   415                           
   416                           	psect	clrtext
   417  093D                     clear_ram0:	
   418                           ;	Called with FSR containing the base address, and
   419                           ;	W with the last address+1
   420                           
   421  093D  0064               	clrwdt	;clear the watchdog before getting into this loop
   422  093E                     clrloop0:	
   423  093E  0180               	clrf	0	;clear RAM location pointed to by FSR
   424  093F  0A84               	incf	4,f	;increment pointer
   425  0940  0604               	xorwf	4,w	;XOR with final address
   426  0941  1903               	btfsc	3,2	;have we reached the end yet?
   427  0942  3400               	retlw	0	;all done for this memory range, return
   428  0943  0604               	xorwf	4,w	;XOR again to restore value
   429  0944  293E               	goto	clrloop0	;do the next byte
   430                           
   431                           	psect	cstackBANK3
   432  019E                     __pcstackBANK3:	
   433  019E                     ??_main:	
   434                           
   435                           ; 1 bytes @ 0x0
   436  019E                     	ds	13
   437                           
   438                           	psect	cstackCOMMON
   439  0070                     __pcstackCOMMON:	
   440  0070                     ?_init_ADC:	
   441  0070                     ?_ShowDigitsOnDisplay:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_UpdateTimes:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_Conteggio:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_main:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_UART_TxChar:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_UART_Read:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ??_UART_Read:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_conteggioVeicoli:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_ISR:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     Conteggio@_count:	
   469                           ; 1 bytes @ 0x0
   470                           
   471                           
   472                           ; 2 bytes @ 0x0
   473  0070                     	ds	2
   474  0072                     Conteggio@_motorcycle:	
   475                           
   476                           ; 1 bytes @ 0x2
   477  0072                     	ds	1
   478  0073                     Conteggio@_car:	
   479                           
   480                           ; 1 bytes @ 0x3
   481  0073                     	ds	1
   482  0074                     Conteggio@_truck:	
   483                           
   484                           ; 1 bytes @ 0x4
   485  0074                     	ds	1
   486  0075                     Conteggio@index:	
   487                           
   488                           ; 1 bytes @ 0x5
   489  0075                     	ds	1
   490  0076                     ??_Conteggio:	
   491                           
   492                           ; 1 bytes @ 0x6
   493  0076                     	ds	3
   494  0079                     ??_conteggioVeicoli:	
   495                           
   496                           ; 1 bytes @ 0x9
   497  0079                     	ds	4
   498  007D                     conteggioVeicoli@i:	
   499                           
   500                           ; 1 bytes @ 0xD
   501  007D                     	ds	1
   502                           
   503                           	psect	cstackBANK0
   504  0020                     __pcstackBANK0:	
   505  0020                     ??_ISR:	
   506                           
   507                           ; 1 bytes @ 0x0
   508  0020                     	ds	4
   509  0024                     ??_init_ADC:	
   510  0024                     ?_luciSemaforo:	
   511                           ; 1 bytes @ 0x4
   512                           
   513  0024                     ?_BuildByte:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0024                     ??_UpdateTimes:	
   517                           ; 1 bytes @ 0x4
   518                           
   519  0024                     ?_SetDefaultTimers:	
   520                           ; 1 bytes @ 0x4
   521                           
   522  0024                     ??_UART_TxChar:	
   523                           ; 1 bytes @ 0x4
   524                           
   525  0024                     ?_SetDisplay:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0024                     ?___bmul:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  0024                     ?_ADC_Read:	
   532                           ; 1 bytes @ 0x4
   533                           
   534  0024                     ?_GetTime:	
   535                           ; 2 bytes @ 0x4
   536                           
   537  0024                     ?___wmul:	
   538                           ; 2 bytes @ 0x4
   539                           
   540  0024                     ?___awmod:	
   541                           ; 2 bytes @ 0x4
   542                           
   543  0024                     ?___aldiv:	
   544                           ; 2 bytes @ 0x4
   545                           
   546  0024                     BuildByte@byte1:	
   547                           ; 4 bytes @ 0x4
   548                           
   549  0024                     GetTime@_dataFromGateway:	
   550                           ; 1 bytes @ 0x4
   551                           
   552  0024                     UART_TxChar@ch:	
   553                           ; 1 bytes @ 0x4
   554                           
   555  0024                     luciSemaforo@lux:	
   556                           ; 1 bytes @ 0x4
   557                           
   558  0024                     SetDisplay@d1:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0024                     ___bmul@multiplicand:	
   562                           ; 1 bytes @ 0x4
   563                           
   564  0024                     SetDefaultTimers@rosso:	
   565                           ; 1 bytes @ 0x4
   566                           
   567  0024                     ___wmul@multiplier:	
   568                           ; 2 bytes @ 0x4
   569                           
   570  0024                     ___awmod@divisor:	
   571                           ; 2 bytes @ 0x4
   572                           
   573  0024                     ___aldiv@divisor:	
   574                           ; 2 bytes @ 0x4
   575                           
   576                           
   577                           ; 4 bytes @ 0x4
   578  0024                     	ds	1
   579  0025                     ??_luciSemaforo:	
   580  0025                     ??___bmul:	
   581                           ; 1 bytes @ 0x5
   582                           
   583  0025                     BuildByte@valore:	
   584                           ; 1 bytes @ 0x5
   585                           
   586  0025                     SetDisplay@d2:	
   587                           ; 1 bytes @ 0x5
   588                           
   589                           
   590                           ; 1 bytes @ 0x5
   591  0025                     	ds	1
   592  0026                     ??_ADC_Read:	
   593  0026                     ??_BuildByte:	
   594                           ; 1 bytes @ 0x6
   595                           
   596  0026                     ??_GetTime:	
   597                           ; 1 bytes @ 0x6
   598                           
   599  0026                     SetDisplay@d3:	
   600                           ; 1 bytes @ 0x6
   601                           
   602  0026                     ___bmul@product:	
   603                           ; 1 bytes @ 0x6
   604                           
   605  0026                     SetDefaultTimers@verde:	
   606                           ; 1 bytes @ 0x6
   607                           
   608  0026                     ___wmul@multiplicand:	
   609                           ; 2 bytes @ 0x6
   610                           
   611  0026                     ___awmod@dividend:	
   612                           ; 2 bytes @ 0x6
   613                           
   614                           
   615                           ; 2 bytes @ 0x6
   616  0026                     	ds	1
   617  0027                     ADC_Read@canale:	
   618  0027                     luciSemaforo@index:	
   619                           ; 1 bytes @ 0x7
   620                           
   621  0027                     SetDisplay@value:	
   622                           ; 1 bytes @ 0x7
   623                           
   624  0027                     ___bmul@multiplier:	
   625                           ; 1 bytes @ 0x7
   626                           
   627                           
   628                           ; 1 bytes @ 0x7
   629  0027                     	ds	1
   630  0028                     ??_SetDisplay:	
   631  0028                     ??___wmul:	
   632                           ; 1 bytes @ 0x8
   633                           
   634  0028                     ??___awmod:	
   635                           ; 1 bytes @ 0x8
   636                           
   637  0028                     BuildByte@byte0:	
   638                           ; 1 bytes @ 0x8
   639                           
   640  0028                     GetTime@index:	
   641                           ; 1 bytes @ 0x8
   642                           
   643  0028                     SetDefaultTimers@giallo:	
   644                           ; 1 bytes @ 0x8
   645                           
   646  0028                     ___wmul@product:	
   647                           ; 2 bytes @ 0x8
   648                           
   649  0028                     ___aldiv@dividend:	
   650                           ; 2 bytes @ 0x8
   651                           
   652                           
   653                           ; 4 bytes @ 0x8
   654  0028                     	ds	1
   655  0029                     GetTime@shortInt:	
   656  0029                     ___awmod@counter:	
   657                           ; 1 bytes @ 0x9
   658                           
   659  0029                     BuildByte@txByte:	
   660                           ; 1 bytes @ 0x9
   661                           
   662                           
   663                           ; 5 bytes @ 0x9
   664  0029                     	ds	1
   665  002A                     SetDefaultTimers@_semafori:	
   666  002A                     SetDisplay@display_index:	
   667                           ; 1 bytes @ 0xA
   668                           
   669  002A                     ___awmod@sign:	
   670                           ; 1 bytes @ 0xA
   671                           
   672  002A                     GetTime@tmp:	
   673                           ; 1 bytes @ 0xA
   674                           
   675                           
   676                           ; 2 bytes @ 0xA
   677  002A                     	ds	1
   678  002B                     ??_ShowDigitsOnDisplay:	
   679  002B                     ??_SetDefaultTimers:	
   680                           ; 1 bytes @ 0xB
   681                           
   682  002B                     ?___awdiv:	
   683                           ; 1 bytes @ 0xB
   684                           
   685  002B                     ___awdiv@divisor:	
   686                           ; 2 bytes @ 0xB
   687                           
   688                           
   689                           ; 2 bytes @ 0xB
   690  002B                     	ds	1
   691  002C                     ?_SetReceivedTimes:	
   692  002C                     ??___aldiv:	
   693                           ; 1 bytes @ 0xC
   694                           
   695  002C                     SetReceivedTimes@_semafori:	
   696                           ; 1 bytes @ 0xC
   697                           
   698                           
   699                           ; 1 bytes @ 0xC
   700  002C                     	ds	1
   701  002D                     ??_SetReceivedTimes:	
   702  002D                     ShowDigitsOnDisplay@display_index:	
   703                           ; 1 bytes @ 0xD
   704                           
   705  002D                     ___aldiv@counter:	
   706                           ; 1 bytes @ 0xD
   707                           
   708  002D                     ___awdiv@dividend:	
   709                           ; 1 bytes @ 0xD
   710                           
   711                           
   712                           ; 2 bytes @ 0xD
   713  002D                     	ds	1
   714  002E                     BuildByte@sommaRow:	
   715  002E                     ___aldiv@sign:	
   716                           ; 1 bytes @ 0xE
   717                           
   718                           
   719                           ; 1 bytes @ 0xE
   720  002E                     	ds	1
   721  002F                     ??___awdiv:	
   722  002F                     BuildByte@sommaColumn:	
   723                           ; 1 bytes @ 0xF
   724                           
   725  002F                     ___aldiv@quotient:	
   726                           ; 1 bytes @ 0xF
   727                           
   728                           
   729                           ; 4 bytes @ 0xF
   730  002F                     	ds	1
   731  0030                     ___awdiv@counter:	
   732  0030                     BuildByte@y:	
   733                           ; 1 bytes @ 0x10
   734                           
   735                           
   736                           ; 2 bytes @ 0x10
   737  0030                     	ds	1
   738  0031                     ___awdiv@sign:	
   739                           
   740                           ; 1 bytes @ 0x11
   741  0031                     	ds	1
   742  0032                     SetDefaultTimers@l:	
   743  0032                     BuildByte@y_338:	
   744                           ; 1 bytes @ 0x12
   745                           
   746  0032                     ___awdiv@quotient:	
   747                           ; 2 bytes @ 0x12
   748                           
   749                           
   750                           ; 2 bytes @ 0x12
   751  0032                     	ds	1
   752  0033                     ?_UART_Init:	
   753  0033                     SetDefaultTimers@i:	
   754                           ; 1 bytes @ 0x13
   755                           
   756  0033                     UART_Init@baudrate:	
   757                           ; 1 bytes @ 0x13
   758                           
   759                           
   760                           ; 2 bytes @ 0x13
   761  0033                     	ds	1
   762  0034                     ?_GetDigits:	
   763  0034                     ?_map:	
   764                           ; 1 bytes @ 0x14
   765                           
   766  0034                     GetDigits@index:	
   767                           ; 2 bytes @ 0x14
   768                           
   769  0034                     BuildByte@i:	
   770                           ; 1 bytes @ 0x14
   771                           
   772  0034                     map@x:	
   773                           ; 2 bytes @ 0x14
   774                           
   775                           
   776                           ; 2 bytes @ 0x14
   777  0034                     	ds	1
   778  0035                     ??_UART_Init:	
   779  0035                     SetReceivedTimes@semaforoId:	
   780                           ; 1 bytes @ 0x15
   781                           
   782  0035                     GetDigits@Time:	
   783                           ; 1 bytes @ 0x15
   784                           
   785                           
   786                           ; 2 bytes @ 0x15
   787  0035                     	ds	1
   788  0036                     UpdateTimes@i:	
   789  0036                     SetReceivedTimes@colorId:	
   790                           ; 1 bytes @ 0x16
   791                           
   792  0036                     BuildByte@i_337:	
   793                           ; 1 bytes @ 0x16
   794                           
   795  0036                     map@in_min:	
   796                           ; 2 bytes @ 0x16
   797                           
   798                           
   799                           ; 2 bytes @ 0x16
   800  0036                     	ds	1
   801  0037                     ??_GetDigits:	
   802  0037                     UpdateTimes@_semafori:	
   803                           ; 1 bytes @ 0x17
   804                           
   805  0037                     SetReceivedTimes@_dataFromGateway:	
   806                           ; 1 bytes @ 0x17
   807                           
   808                           
   809                           ; 1 bytes @ 0x17
   810  0037                     	ds	1
   811  0038                     ?_sendByte:	
   812  0038                     UpdateTimes@l:	
   813                           ; 1 bytes @ 0x18
   814                           
   815  0038                     SetReceivedTimes@index:	
   816                           ; 1 bytes @ 0x18
   817                           
   818  0038                     sendByte@byte1:	
   819                           ; 1 bytes @ 0x18
   820                           
   821  0038                     map@in_max:	
   822                           ; 1 bytes @ 0x18
   823                           
   824                           
   825                           ; 2 bytes @ 0x18
   826  0038                     	ds	1
   827  0039                     SetReceivedTimes@i:	
   828  0039                     sendByte@valore:	
   829                           ; 1 bytes @ 0x19
   830                           
   831                           
   832                           ; 1 bytes @ 0x19
   833  0039                     	ds	1
   834  003A                     ??_sendByte:	
   835  003A                     map@out_min:	
   836                           ; 1 bytes @ 0x1A
   837                           
   838  003A                     _GetDigits$1199:	
   839                           ; 2 bytes @ 0x1A
   840                           
   841                           
   842                           ; 2 bytes @ 0x1A
   843  003A                     	ds	2
   844  003C                     GetDigits@_digits:	
   845  003C                     map@out_max:	
   846                           ; 1 bytes @ 0x1C
   847                           
   848                           
   849                           ; 2 bytes @ 0x1C
   850  003C                     	ds	1
   851  003D                     sendByte@byte0:	
   852                           
   853                           ; 1 bytes @ 0x1D
   854  003D                     	ds	1
   855  003E                     ??_map:	
   856  003E                     sendByte@txByte:	
   857                           ; 1 bytes @ 0x1E
   858                           
   859                           
   860                           ; 1 bytes @ 0x1E
   861  003E                     	ds	1
   862  003F                     sendByte@i:	
   863                           
   864                           ; 1 bytes @ 0x1F
   865  003F                     	ds	1
   866  0040                     main@i_484:	
   867                           
   868                           ; 1 bytes @ 0x20
   869  0040                     	ds	1
   870  0041                     main@i_486:	
   871                           
   872                           ; 1 bytes @ 0x21
   873  0041                     	ds	1
   874  0042                     main@i_483:	
   875                           
   876                           ; 2 bytes @ 0x22
   877  0042                     	ds	2
   878  0044                     main@lux_select:	
   879                           
   880                           ; 1 bytes @ 0x24
   881  0044                     	ds	1
   882  0045                     main@i_488:	
   883                           
   884                           ; 1 bytes @ 0x25
   885  0045                     	ds	1
   886  0046                     main@i:	
   887                           
   888                           ; 2 bytes @ 0x26
   889  0046                     	ds	2
   890                           
   891                           	psect	maintext
   892  003F                     __pmaintext:	
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 136 in file "main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  lux_select      1   36[BANK0 ] unsigned char 
   903 ;;  i               1   33[BANK0 ] unsigned char 
   904 ;;  i               1   32[BANK0 ] unsigned char 
   905 ;;  i               2   34[BANK0 ] int 
   906 ;;  i               2   38[BANK0 ] int 
   907 ;;  i               1   37[BANK0 ] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : B00/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         0       8       0       0       0
   919 ;;      Temps:          0       0       0      13       0
   920 ;;      Totals:         0       8       0      13       0
   921 ;;Total ram usage:       21 bytes
   922 ;; Hardware stack levels required when called:    5
   923 ;; This function calls:
   924 ;;		_ADC_Read
   925 ;;		_GetDigits
   926 ;;		_SetDefaultTimers
   927 ;;		_SetReceivedTimes
   928 ;;		_ShowDigitsOnDisplay
   929 ;;		_UART_Init
   930 ;;		_UpdateTimes
   931 ;;		_init_ADC
   932 ;;		_luciSemaforo
   933 ;;		_map
   934 ;;		_sendByte
   935 ;; This function is called by:
   936 ;;		Startup code after reset
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           
   941                           ;psect for function _main
   942  003F                     _main:	
   943  003F                     l4298:	
   944                           ;incstack = 0
   945                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   946                           
   947                           
   948                           ;main.c: 138:     TRISB = 0x38;
   949  003F  3038               	movlw	56
   950  0040  1683               	bsf	3,5	;RP0=1, select bank1
   951  0041  1303               	bcf	3,6	;RP1=0, select bank1
   952  0042  0086               	movwf	6	;volatile
   953                           
   954                           ;main.c: 139:     TRISC = 0x80;
   955  0043  3080               	movlw	128
   956  0044  0087               	movwf	7	;volatile
   957  0045                     l4300:	
   958                           
   959                           ;main.c: 140:     TRISD = 0x00;
   960  0045  0188               	clrf	8	;volatile
   961  0046                     l4302:	
   962                           
   963                           ;main.c: 141:     TRISE = 0x01;
   964  0046  3001               	movlw	1
   965  0047  0089               	movwf	9	;volatile
   966  0048                     l4304:	
   967                           
   968                           ;main.c: 142:     INTCON = 0xE0;
   969  0048  30E0               	movlw	224
   970  0049  008B               	movwf	11	;volatile
   971  004A                     l4306:	
   972                           
   973                           ;main.c: 143:     OPTION_REG = 0x04;
   974  004A  3004               	movlw	4
   975  004B  0081               	movwf	1	;volatile
   976  004C                     l4308:	
   977                           
   978                           ;main.c: 144:     TMR0 = 6;
   979  004C  3006               	movlw	6
   980  004D  1283               	bcf	3,5	;RP0=0, select bank0
   981  004E  1303               	bcf	3,6	;RP1=0, select bank0
   982  004F  0081               	movwf	1	;volatile
   983  0050                     l4310:	
   984                           
   985                           ;main.c: 145:     T1CON = 0x31;
   986  0050  3031               	movlw	49
   987  0051  0090               	movwf	16	;volatile
   988  0052                     l4312:	
   989                           
   990                           ;main.c: 147:     TMR1H = 60;
   991  0052  303C               	movlw	60
   992  0053  008F               	movwf	15	;volatile
   993  0054                     l4314:	
   994                           
   995                           ;main.c: 148:     TMR1L = 176;
   996  0054  30B0               	movlw	176
   997  0055  008E               	movwf	14	;volatile
   998  0056                     l4316:	
   999                           
  1000                           ;main.c: 151:     init_ADC();
  1001  0056  120A  158A  2163  120A  118A  	fcall	_init_ADC
  1002  005B                     l4318:	
  1003                           
  1004                           ;main.c: 152:     UART_Init(9600);
  1005  005B  3080               	movlw	128
  1006  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1007  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1008  005E  00B3               	movwf	UART_Init@baudrate
  1009  005F  3025               	movlw	37
  1010  0060  00B4               	movwf	UART_Init@baudrate+1
  1011  0061  120A  158A  222C  120A  118A  	fcall	_UART_Init
  1012  0066                     l4320:	
  1013                           
  1014                           ;main.c: 153:     SetDefaultTimers(6,4,2, Semafori);
  1015  0066  3006               	movlw	6
  1016  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0069  00A4               	movwf	SetDefaultTimers@rosso
  1019  006A  3000               	movlw	0
  1020  006B  00A5               	movwf	SetDefaultTimers@rosso+1
  1021  006C  3004               	movlw	4
  1022  006D  00A6               	movwf	SetDefaultTimers@verde
  1023  006E  3000               	movlw	0
  1024  006F  00A7               	movwf	SetDefaultTimers@verde+1
  1025  0070  3002               	movlw	2
  1026  0071  00A8               	movwf	SetDefaultTimers@giallo
  1027  0072  3000               	movlw	0
  1028  0073  00A9               	movwf	SetDefaultTimers@giallo+1
  1029  0074  3061               	movlw	(low (_Semafori| 0))& (0+255)
  1030  0075  1683               	bsf	3,5	;RP0=1, select bank3
  1031  0076  1703               	bsf	3,6	;RP1=1, select bank3
  1032  0077  009E               	movwf	??_main^(0+384)
  1033  0078  081E               	movf	??_main^(0+384),w
  1034  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1035  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1036  007B  00AA               	movwf	SetDefaultTimers@_semafori
  1037  007C  120A  118A  2501  120A  118A  	fcall	_SetDefaultTimers
  1038  0081                     l4322:	
  1039                           
  1040                           ;main.c: 155:     PORTCbits.RC0 = 0;
  1041  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0083  1007               	bcf	7,0	;volatile
  1044  0084                     l4324:	
  1045                           
  1046                           ;main.c: 156:     PORTBbits.RB7 = 0;
  1047  0084  1386               	bcf	6,7	;volatile
  1048  0085                     l4326:	
  1049                           
  1050                           ;main.c: 157:     PORTCbits.RC3 = 0;
  1051  0085  1187               	bcf	7,3	;volatile
  1052  0086                     l4328:	
  1053                           
  1054                           ;main.c: 158:     PORTBbits.RB6 = 0;
  1055  0086  1306               	bcf	6,6	;volatile
  1056  0087                     l4330:	
  1057                           
  1058                           ;main.c: 159:     PORTCbits.RC1 = 0;
  1059  0087  1087               	bcf	7,1	;volatile
  1060  0088                     l4332:	
  1061                           
  1062                           ;main.c: 160:     PORTBbits.RB1 = 0;
  1063  0088  1086               	bcf	6,1	;volatile
  1064  0089                     l4334:	
  1065                           
  1066                           ;main.c: 163:     {;main.c: 165:         if (readGateway.Bit)
  1067  0089  1C53               	btfss	_readGateway,0
  1068  008A  288C               	goto	u3721
  1069  008B  288D               	goto	u3720
  1070  008C                     u3721:	
  1071  008C  2B55               	goto	l225
  1072  008D                     u3720:	
  1073  008D  2B40               	goto	l4414
  1074  008E                     l227:	
  1075                           ;main.c: 168:             {;main.c: 169:             case 0x08:
  1076                           
  1077                           
  1078                           ;main.c: 170:                 readGatewayDone.Bit = 1;
  1079  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1080  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0090  1454               	bsf	_readGatewayDone,0
  1082                           
  1083                           ;main.c: 171:                 readGateway.Bit = 0;
  1084  0091  1053               	bcf	_readGateway,0
  1085  0092                     l4338:	
  1086                           
  1087                           ;main.c: 173:                 for (int i = 0; i < 4; i++)
  1088  0092  01C6               	clrf	main@i
  1089  0093  01C7               	clrf	main@i+1
  1090  0094  29B9               	goto	l4354
  1091  0095                     l4344:	
  1092                           
  1093                           ;main.c: 178:                         sendByte(0x03, 0x01, motorcycle[i]);
  1094  0095  01B8               	clrf	sendByte@byte1
  1095  0096  0AB8               	incf	sendByte@byte1,f
  1096  0097  0846               	movf	main@i,w
  1097  0098  3E5D               	addlw	(low (_motorcycle| 0))& (0+255)
  1098  0099  0084               	movwf	4
  1099  009A  1383               	bcf	3,7	;select IRP bank0
  1100  009B  0800               	movf	0,w
  1101  009C  1683               	bsf	3,5	;RP0=1, select bank3
  1102  009D  1703               	bsf	3,6	;RP1=1, select bank3
  1103  009E  009E               	movwf	??_main^(0+384)
  1104  009F  081E               	movf	??_main^(0+384),w
  1105  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00A2  00B9               	movwf	sendByte@valore
  1108  00A3  3003               	movlw	3
  1109  00A4  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1110                           
  1111                           ;main.c: 179:                         sendByte(0x03, 0x02, car[i]);
  1112  00A9  3002               	movlw	2
  1113  00AA  1683               	bsf	3,5	;RP0=1, select bank3
  1114  00AB  1703               	bsf	3,6	;RP1=1, select bank3
  1115  00AC  009E               	movwf	??_main^(0+384)
  1116  00AD  081E               	movf	??_main^(0+384),w
  1117  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1118  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1119  00B0  00B8               	movwf	sendByte@byte1
  1120  00B1  0846               	movf	main@i,w
  1121  00B2  3E59               	addlw	(low (_car| 0))& (0+255)
  1122  00B3  0084               	movwf	4
  1123  00B4  1383               	bcf	3,7	;select IRP bank0
  1124  00B5  0800               	movf	0,w
  1125  00B6  1683               	bsf	3,5	;RP0=1, select bank3
  1126  00B7  1703               	bsf	3,6	;RP1=1, select bank3
  1127  00B8  009F               	movwf	(??_main+1)^(0+384)
  1128  00B9  081F               	movf	(??_main+1)^(0+384),w
  1129  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1130  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1131  00BC  00B9               	movwf	sendByte@valore
  1132  00BD  3003               	movlw	3
  1133  00BE  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1134                           
  1135                           ;main.c: 180:                         sendByte(0x03, 0x03, truck[i]);
  1136  00C3  3003               	movlw	3
  1137  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  1138  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  1139  00C6  009E               	movwf	??_main^(0+384)
  1140  00C7  081E               	movf	??_main^(0+384),w
  1141  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1142  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1143  00CA  00B8               	movwf	sendByte@byte1
  1144  00CB  0846               	movf	main@i,w
  1145  00CC  3E55               	addlw	(low (_truck| 0))& (0+255)
  1146  00CD  0084               	movwf	4
  1147  00CE  1383               	bcf	3,7	;select IRP bank0
  1148  00CF  0800               	movf	0,w
  1149  00D0  1683               	bsf	3,5	;RP0=1, select bank3
  1150  00D1  1703               	bsf	3,6	;RP1=1, select bank3
  1151  00D2  009F               	movwf	(??_main+1)^(0+384)
  1152  00D3  081F               	movf	(??_main+1)^(0+384),w
  1153  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1154  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1155  00D6  00B9               	movwf	sendByte@valore
  1156  00D7  3003               	movlw	3
  1157  00D8  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1158                           
  1159                           ;main.c: 181:                         break;
  1160  00DD  29CE               	goto	l4356
  1161  00DE                     l4346:	
  1162                           
  1163                           ;main.c: 183:                         sendByte(0x05, 0x01, motorcycle[i]);
  1164  00DE  01B8               	clrf	sendByte@byte1
  1165  00DF  0AB8               	incf	sendByte@byte1,f
  1166  00E0  0846               	movf	main@i,w
  1167  00E1  3E5D               	addlw	(low (_motorcycle| 0))& (0+255)
  1168  00E2  0084               	movwf	4
  1169  00E3  1383               	bcf	3,7	;select IRP bank0
  1170  00E4  0800               	movf	0,w
  1171  00E5  1683               	bsf	3,5	;RP0=1, select bank3
  1172  00E6  1703               	bsf	3,6	;RP1=1, select bank3
  1173  00E7  009E               	movwf	??_main^(0+384)
  1174  00E8  081E               	movf	??_main^(0+384),w
  1175  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1176  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1177  00EB  00B9               	movwf	sendByte@valore
  1178  00EC  3005               	movlw	5
  1179  00ED  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1180                           
  1181                           ;main.c: 184:                         sendByte(0x05, 0x02, car[i]);
  1182  00F2  3002               	movlw	2
  1183  00F3  1683               	bsf	3,5	;RP0=1, select bank3
  1184  00F4  1703               	bsf	3,6	;RP1=1, select bank3
  1185  00F5  009E               	movwf	??_main^(0+384)
  1186  00F6  081E               	movf	??_main^(0+384),w
  1187  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1188  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1189  00F9  00B8               	movwf	sendByte@byte1
  1190  00FA  0846               	movf	main@i,w
  1191  00FB  3E59               	addlw	(low (_car| 0))& (0+255)
  1192  00FC  0084               	movwf	4
  1193  00FD  1383               	bcf	3,7	;select IRP bank0
  1194  00FE  0800               	movf	0,w
  1195  00FF  1683               	bsf	3,5	;RP0=1, select bank3
  1196  0100  1703               	bsf	3,6	;RP1=1, select bank3
  1197  0101  009F               	movwf	(??_main+1)^(0+384)
  1198  0102  081F               	movf	(??_main+1)^(0+384),w
  1199  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0105  00B9               	movwf	sendByte@valore
  1202  0106  3005               	movlw	5
  1203  0107  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1204                           
  1205                           ;main.c: 185:                         sendByte(0x05, 0x03, truck[i]);
  1206  010C  3003               	movlw	3
  1207  010D  1683               	bsf	3,5	;RP0=1, select bank3
  1208  010E  1703               	bsf	3,6	;RP1=1, select bank3
  1209  010F  009E               	movwf	??_main^(0+384)
  1210  0110  081E               	movf	??_main^(0+384),w
  1211  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0113  00B8               	movwf	sendByte@byte1
  1214  0114  0846               	movf	main@i,w
  1215  0115  3E55               	addlw	(low (_truck| 0))& (0+255)
  1216  0116  0084               	movwf	4
  1217  0117  1383               	bcf	3,7	;select IRP bank0
  1218  0118  0800               	movf	0,w
  1219  0119  1683               	bsf	3,5	;RP0=1, select bank3
  1220  011A  1703               	bsf	3,6	;RP1=1, select bank3
  1221  011B  009F               	movwf	(??_main+1)^(0+384)
  1222  011C  081F               	movf	(??_main+1)^(0+384),w
  1223  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1224  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1225  011F  00B9               	movwf	sendByte@valore
  1226  0120  3005               	movlw	5
  1227  0121  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1228                           
  1229                           ;main.c: 186:                         break;
  1230  0126  29CE               	goto	l4356
  1231  0127                     l4348:	
  1232                           
  1233                           ;main.c: 188:                         sendByte(0x07, 0x01, motorcycle[i]);
  1234  0127  01B8               	clrf	sendByte@byte1
  1235  0128  0AB8               	incf	sendByte@byte1,f
  1236  0129  0846               	movf	main@i,w
  1237  012A  3E5D               	addlw	(low (_motorcycle| 0))& (0+255)
  1238  012B  0084               	movwf	4
  1239  012C  1383               	bcf	3,7	;select IRP bank0
  1240  012D  0800               	movf	0,w
  1241  012E  1683               	bsf	3,5	;RP0=1, select bank3
  1242  012F  1703               	bsf	3,6	;RP1=1, select bank3
  1243  0130  009E               	movwf	??_main^(0+384)
  1244  0131  081E               	movf	??_main^(0+384),w
  1245  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0134  00B9               	movwf	sendByte@valore
  1248  0135  3007               	movlw	7
  1249  0136  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1250                           
  1251                           ;main.c: 189:                         sendByte(0x07, 0x02, car[i]);
  1252  013B  3002               	movlw	2
  1253  013C  1683               	bsf	3,5	;RP0=1, select bank3
  1254  013D  1703               	bsf	3,6	;RP1=1, select bank3
  1255  013E  009E               	movwf	??_main^(0+384)
  1256  013F  081E               	movf	??_main^(0+384),w
  1257  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0142  00B8               	movwf	sendByte@byte1
  1260  0143  0846               	movf	main@i,w
  1261  0144  3E59               	addlw	(low (_car| 0))& (0+255)
  1262  0145  0084               	movwf	4
  1263  0146  1383               	bcf	3,7	;select IRP bank0
  1264  0147  0800               	movf	0,w
  1265  0148  1683               	bsf	3,5	;RP0=1, select bank3
  1266  0149  1703               	bsf	3,6	;RP1=1, select bank3
  1267  014A  009F               	movwf	(??_main+1)^(0+384)
  1268  014B  081F               	movf	(??_main+1)^(0+384),w
  1269  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1270  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1271  014E  00B9               	movwf	sendByte@valore
  1272  014F  3007               	movlw	7
  1273  0150  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1274                           
  1275                           ;main.c: 190:                         sendByte(0x07, 0x03, truck[i]);
  1276  0155  3003               	movlw	3
  1277  0156  1683               	bsf	3,5	;RP0=1, select bank3
  1278  0157  1703               	bsf	3,6	;RP1=1, select bank3
  1279  0158  009E               	movwf	??_main^(0+384)
  1280  0159  081E               	movf	??_main^(0+384),w
  1281  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1282  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1283  015C  00B8               	movwf	sendByte@byte1
  1284  015D  0846               	movf	main@i,w
  1285  015E  3E55               	addlw	(low (_truck| 0))& (0+255)
  1286  015F  0084               	movwf	4
  1287  0160  1383               	bcf	3,7	;select IRP bank0
  1288  0161  0800               	movf	0,w
  1289  0162  1683               	bsf	3,5	;RP0=1, select bank3
  1290  0163  1703               	bsf	3,6	;RP1=1, select bank3
  1291  0164  009F               	movwf	(??_main+1)^(0+384)
  1292  0165  081F               	movf	(??_main+1)^(0+384),w
  1293  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0168  00B9               	movwf	sendByte@valore
  1296  0169  3007               	movlw	7
  1297  016A  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1298                           
  1299                           ;main.c: 191:                         break;
  1300  016F  29CE               	goto	l4356
  1301  0170                     l4350:	
  1302                           
  1303                           ;main.c: 193:                         sendByte(0x09, 0x01, motorcycle[i]);
  1304  0170  01B8               	clrf	sendByte@byte1
  1305  0171  0AB8               	incf	sendByte@byte1,f
  1306  0172  0846               	movf	main@i,w
  1307  0173  3E5D               	addlw	(low (_motorcycle| 0))& (0+255)
  1308  0174  0084               	movwf	4
  1309  0175  1383               	bcf	3,7	;select IRP bank0
  1310  0176  0800               	movf	0,w
  1311  0177  1683               	bsf	3,5	;RP0=1, select bank3
  1312  0178  1703               	bsf	3,6	;RP1=1, select bank3
  1313  0179  009E               	movwf	??_main^(0+384)
  1314  017A  081E               	movf	??_main^(0+384),w
  1315  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1316  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1317  017D  00B9               	movwf	sendByte@valore
  1318  017E  3009               	movlw	9
  1319  017F  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1320                           
  1321                           ;main.c: 194:                         sendByte(0x09, 0x02, car[i]);
  1322  0184  3002               	movlw	2
  1323  0185  1683               	bsf	3,5	;RP0=1, select bank3
  1324  0186  1703               	bsf	3,6	;RP1=1, select bank3
  1325  0187  009E               	movwf	??_main^(0+384)
  1326  0188  081E               	movf	??_main^(0+384),w
  1327  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1328  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1329  018B  00B8               	movwf	sendByte@byte1
  1330  018C  0846               	movf	main@i,w
  1331  018D  3E59               	addlw	(low (_car| 0))& (0+255)
  1332  018E  0084               	movwf	4
  1333  018F  1383               	bcf	3,7	;select IRP bank0
  1334  0190  0800               	movf	0,w
  1335  0191  1683               	bsf	3,5	;RP0=1, select bank3
  1336  0192  1703               	bsf	3,6	;RP1=1, select bank3
  1337  0193  009F               	movwf	(??_main+1)^(0+384)
  1338  0194  081F               	movf	(??_main+1)^(0+384),w
  1339  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0197  00B9               	movwf	sendByte@valore
  1342  0198  3009               	movlw	9
  1343  0199  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1344                           
  1345                           ;main.c: 195:                         sendByte(0x09, 0x03, truck[i]);
  1346  019E  3003               	movlw	3
  1347  019F  1683               	bsf	3,5	;RP0=1, select bank3
  1348  01A0  1703               	bsf	3,6	;RP1=1, select bank3
  1349  01A1  009E               	movwf	??_main^(0+384)
  1350  01A2  081E               	movf	??_main^(0+384),w
  1351  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1352  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1353  01A5  00B8               	movwf	sendByte@byte1
  1354  01A6  0846               	movf	main@i,w
  1355  01A7  3E55               	addlw	(low (_truck| 0))& (0+255)
  1356  01A8  0084               	movwf	4
  1357  01A9  1383               	bcf	3,7	;select IRP bank0
  1358  01AA  0800               	movf	0,w
  1359  01AB  1683               	bsf	3,5	;RP0=1, select bank3
  1360  01AC  1703               	bsf	3,6	;RP1=1, select bank3
  1361  01AD  009F               	movwf	(??_main+1)^(0+384)
  1362  01AE  081F               	movf	(??_main+1)^(0+384),w
  1363  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1364  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1365  01B1  00B9               	movwf	sendByte@valore
  1366  01B2  3009               	movlw	9
  1367  01B3  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1368                           
  1369                           ;main.c: 196:                         break;
  1370  01B8  29CE               	goto	l4356
  1371  01B9                     l4354:	
  1372                           
  1373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1374                           ; Switch size 1, requested type "simple"
  1375                           ; Number of cases is 1, Range of values is 0 to 0
  1376                           ; switch strategies available:
  1377                           ; Name         Instructions Cycles
  1378                           ; simple_byte            4     3 (average)
  1379                           ; direct_byte           11     8 (fixed)
  1380                           ; jumptable            260     6 (fixed)
  1381                           ;	Chosen strategy is simple_byte
  1382  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1383  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1384  01BB  0847               	movf	main@i+1,w
  1385  01BC  3A00               	xorlw	0	; case 0
  1386  01BD  1903               	skipnz
  1387  01BE  29C0               	goto	l4714
  1388  01BF  29CE               	goto	l4356
  1389  01C0                     l4714:	
  1390                           
  1391                           ; Switch size 1, requested type "simple"
  1392                           ; Number of cases is 4, Range of values is 0 to 3
  1393                           ; switch strategies available:
  1394                           ; Name         Instructions Cycles
  1395                           ; simple_byte           13     7 (average)
  1396                           ; direct_byte           20     8 (fixed)
  1397                           ; jumptable            260     6 (fixed)
  1398                           ;	Chosen strategy is simple_byte
  1399  01C0  0846               	movf	main@i,w
  1400  01C1  3A00               	xorlw	0	; case 0
  1401  01C2  1903               	skipnz
  1402  01C3  2895               	goto	l4344
  1403  01C4  3A01               	xorlw	1	; case 1
  1404  01C5  1903               	skipnz
  1405  01C6  28DE               	goto	l4346
  1406  01C7  3A03               	xorlw	3	; case 2
  1407  01C8  1903               	skipnz
  1408  01C9  2927               	goto	l4348
  1409  01CA  3A01               	xorlw	1	; case 3
  1410  01CB  1903               	skipnz
  1411  01CC  2970               	goto	l4350
  1412  01CD  29CE               	goto	l4356
  1413  01CE                     l4356:	
  1414                           
  1415                           ;main.c: 198:                 }
  1416  01CE  3001               	movlw	1
  1417  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1418  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1419  01D1  07C6               	addwf	main@i,f
  1420  01D2  1803               	skipnc
  1421  01D3  0AC7               	incf	main@i+1,f
  1422  01D4  3000               	movlw	0
  1423  01D5  07C7               	addwf	main@i+1,f
  1424  01D6                     l4358:	
  1425  01D6  0847               	movf	main@i+1,w
  1426  01D7  3A80               	xorlw	128
  1427  01D8  00FF               	movwf	btemp+1
  1428  01D9  3080               	movlw	128
  1429  01DA  027F               	subwf	btemp+1,w
  1430  01DB  1D03               	skipz
  1431  01DC  29DF               	goto	u3735
  1432  01DD  3004               	movlw	4
  1433  01DE  0246               	subwf	main@i,w
  1434  01DF                     u3735:	
  1435  01DF  1C03               	skipc
  1436  01E0  29E2               	goto	u3731
  1437  01E1  29E3               	goto	u3730
  1438  01E2                     u3731:	
  1439  01E2  29B9               	goto	l4354
  1440  01E3                     u3730:	
  1441  01E3                     l4360:	
  1442                           
  1443                           ;main.c: 200:                 for (int i = 0; i < 4; i++)
  1444  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1445  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1446  01E5  01C2               	clrf	main@i_483
  1447  01E6  01C3               	clrf	main@i_483+1
  1448  01E7                     l4366:	
  1449                           
  1450                           ;main.c: 201:                 {;main.c: 202:                     motorcycle[i] = 0;
  1451  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1452  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1453  01E9  0842               	movf	main@i_483,w
  1454  01EA  3E5D               	addlw	(low (_motorcycle| 0))& (0+255)
  1455  01EB  0084               	movwf	4
  1456  01EC  1383               	bcf	3,7	;select IRP bank0
  1457  01ED  0180               	clrf	0
  1458                           
  1459                           ;main.c: 203:                     car[i] = 0;
  1460  01EE  0842               	movf	main@i_483,w
  1461  01EF  3E59               	addlw	(low (_car| 0))& (0+255)
  1462  01F0  0084               	movwf	4
  1463  01F1  0180               	clrf	0
  1464                           
  1465                           ;main.c: 204:                     truck[i] = 0;
  1466  01F2  0842               	movf	main@i_483,w
  1467  01F3  3E55               	addlw	(low (_truck| 0))& (0+255)
  1468  01F4  0084               	movwf	4
  1469  01F5  0180               	clrf	0
  1470  01F6                     l4368:	
  1471                           
  1472                           ;main.c: 205:                 }
  1473  01F6  3001               	movlw	1
  1474  01F7  07C2               	addwf	main@i_483,f
  1475  01F8  1803               	skipnc
  1476  01F9  0AC3               	incf	main@i_483+1,f
  1477  01FA  3000               	movlw	0
  1478  01FB  07C3               	addwf	main@i_483+1,f
  1479  01FC                     l4370:	
  1480  01FC  0843               	movf	main@i_483+1,w
  1481  01FD  3A80               	xorlw	128
  1482  01FE  00FF               	movwf	btemp+1
  1483  01FF  3080               	movlw	128
  1484  0200  027F               	subwf	btemp+1,w
  1485  0201  1D03               	skipz
  1486  0202  2A05               	goto	u3745
  1487  0203  3004               	movlw	4
  1488  0204  0242               	subwf	main@i_483,w
  1489  0205                     u3745:	
  1490  0205  1C03               	skipc
  1491  0206  2A08               	goto	u3741
  1492  0207  2A09               	goto	u3740
  1493  0208                     u3741:	
  1494  0208  29E7               	goto	l4366
  1495  0209                     u3740:	
  1496  0209                     l4372:	
  1497                           
  1498                           ;main.c: 207:                 for (unsigned char i = 0; i < 5; i++)
  1499  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1500  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1501  020B  01C0               	clrf	main@i_484
  1502  020C                     l4378:	
  1503                           
  1504                           ;main.c: 208:                 {;main.c: 209:                     dataFromGateway[i] = 0;
  1505  020C  0840               	movf	main@i_484,w
  1506  020D  3EAC               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1507  020E  0084               	movwf	4
  1508  020F  1383               	bcf	3,7	;select IRP bank1
  1509  0210  0180               	clrf	0
  1510  0211                     l4380:	
  1511                           
  1512                           ;main.c: 210:                 }
  1513  0211  3001               	movlw	1
  1514  0212  1683               	bsf	3,5	;RP0=1, select bank3
  1515  0213  1703               	bsf	3,6	;RP1=1, select bank3
  1516  0214  009E               	movwf	??_main^(0+384)
  1517  0215  081E               	movf	??_main^(0+384),w
  1518  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0218  07C0               	addwf	main@i_484,f
  1521  0219                     l4382:	
  1522  0219  3005               	movlw	5
  1523  021A  0240               	subwf	main@i_484,w
  1524  021B  1C03               	skipc
  1525  021C  2A1E               	goto	u3751
  1526  021D  2A1F               	goto	u3750
  1527  021E                     u3751:	
  1528  021E  2A0C               	goto	l4378
  1529  021F                     u3750:	
  1530  021F  2B55               	goto	l225
  1531  0220                     l241:	
  1532                           ;main.c: 212:             case 0x0A:
  1533                           
  1534                           
  1535                           ;main.c: 213:                 readGatewayDone.Bit = 1;
  1536  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0222  1454               	bsf	_readGatewayDone,0
  1539                           
  1540                           ;main.c: 214:                 readGateway.Bit = 0;
  1541  0223  1053               	bcf	_readGateway,0
  1542  0224                     l4384:	
  1543                           
  1544                           ;main.c: 216:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1545  0224  3000               	movlw	0
  1546  0225  120A  158A  21A0  120A  118A  	fcall	_ADC_Read
  1547  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1548  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1549  022C  0824               	movf	?_ADC_Read,w
  1550  022D  1683               	bsf	3,5	;RP0=1, select bank3
  1551  022E  1703               	bsf	3,6	;RP1=1, select bank3
  1552  022F  009E               	movwf	??_main^(0+384)
  1553  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0232  0825               	movf	?_ADC_Read+1,w
  1556  0233  1683               	bsf	3,5	;RP0=1, select bank3
  1557  0234  1703               	bsf	3,6	;RP1=1, select bank3
  1558  0235  009F               	movwf	(??_main^(0+384)+1)
  1559  0236  0D1F               	rlf	(??_main^(0+384)+1),w
  1560  0237  0C9F               	rrf	(??_main^(0+384)+1),f
  1561  0238  0C9E               	rrf	??_main^(0+384),f
  1562  0239  0D1F               	rlf	(??_main^(0+384)+1),w
  1563  023A  0C9F               	rrf	(??_main^(0+384)+1),f
  1564  023B  0C9E               	rrf	??_main^(0+384),f
  1565  023C  081E               	movf	??_main^(0+384),w
  1566  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1567  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1568  023F  00B4               	movwf	map@x
  1569  0240  1683               	bsf	3,5	;RP0=1, select bank3
  1570  0241  1703               	bsf	3,6	;RP1=1, select bank3
  1571  0242  081F               	movf	(??_main+1)^(0+384),w
  1572  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0245  00B5               	movwf	map@x+1
  1575  0246  3000               	movlw	0
  1576  0247  00B6               	movwf	map@in_min
  1577  0248  00B7               	movwf	map@in_min+1
  1578  0249  30FF               	movlw	255
  1579  024A  00B8               	movwf	map@in_max
  1580  024B  3000               	movlw	0
  1581  024C  00B9               	movwf	map@in_max+1
  1582  024D  30EC               	movlw	236
  1583  024E  00BA               	movwf	map@out_min
  1584  024F  30FF               	movlw	255
  1585  0250  00BB               	movwf	map@out_min+1
  1586  0251  303C               	movlw	60
  1587  0252  00BC               	movwf	map@out_max
  1588  0253  3000               	movlw	0
  1589  0254  00BD               	movwf	map@out_max+1
  1590  0255  120A  158A  21F7  120A  118A  	fcall	_map
  1591  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1592  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1593  025C  0834               	movf	?_map,w
  1594  025D  1683               	bsf	3,5	;RP0=1, select bank3
  1595  025E  1703               	bsf	3,6	;RP1=1, select bank3
  1596  025F  00A0               	movwf	(??_main+2)^(0+384)
  1597  0260  0820               	movf	(??_main+2)^(0+384),w
  1598  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0263  00CC               	movwf	_temp
  1601                           
  1602                           ;main.c: 217:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1603  0264  3001               	movlw	1
  1604  0265  120A  158A  21A0  120A  118A  	fcall	_ADC_Read
  1605  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1606  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1607  026C  0824               	movf	?_ADC_Read,w
  1608  026D  1683               	bsf	3,5	;RP0=1, select bank3
  1609  026E  1703               	bsf	3,6	;RP1=1, select bank3
  1610  026F  009E               	movwf	??_main^(0+384)
  1611  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0272  0825               	movf	?_ADC_Read+1,w
  1614  0273  1683               	bsf	3,5	;RP0=1, select bank3
  1615  0274  1703               	bsf	3,6	;RP1=1, select bank3
  1616  0275  009F               	movwf	(??_main^(0+384)+1)
  1617  0276  0D1F               	rlf	(??_main^(0+384)+1),w
  1618  0277  0C9F               	rrf	(??_main^(0+384)+1),f
  1619  0278  0C9E               	rrf	??_main^(0+384),f
  1620  0279  0D1F               	rlf	(??_main^(0+384)+1),w
  1621  027A  0C9F               	rrf	(??_main^(0+384)+1),f
  1622  027B  0C9E               	rrf	??_main^(0+384),f
  1623  027C  081E               	movf	??_main^(0+384),w
  1624  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1625  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1626  027F  00B4               	movwf	map@x
  1627  0280  1683               	bsf	3,5	;RP0=1, select bank3
  1628  0281  1703               	bsf	3,6	;RP1=1, select bank3
  1629  0282  081F               	movf	(??_main+1)^(0+384),w
  1630  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0285  00B5               	movwf	map@x+1
  1633  0286  3000               	movlw	0
  1634  0287  00B6               	movwf	map@in_min
  1635  0288  00B7               	movwf	map@in_min+1
  1636  0289  30FF               	movlw	255
  1637  028A  00B8               	movwf	map@in_max
  1638  028B  3000               	movlw	0
  1639  028C  00B9               	movwf	map@in_max+1
  1640  028D  3000               	movlw	0
  1641  028E  00BA               	movwf	map@out_min
  1642  028F  00BB               	movwf	map@out_min+1
  1643  0290  3064               	movlw	100
  1644  0291  00BC               	movwf	map@out_max
  1645  0292  3000               	movlw	0
  1646  0293  00BD               	movwf	map@out_max+1
  1647  0294  120A  158A  21F7  120A  118A  	fcall	_map
  1648  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1649  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1650  029B  0834               	movf	?_map,w
  1651  029C  1683               	bsf	3,5	;RP0=1, select bank3
  1652  029D  1703               	bsf	3,6	;RP1=1, select bank3
  1653  029E  00A0               	movwf	(??_main+2)^(0+384)
  1654  029F  0820               	movf	(??_main+2)^(0+384),w
  1655  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1656  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1657  02A2  00CB               	movwf	_umidita
  1658                           
  1659                           ;main.c: 218:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1660  02A3  3005               	movlw	5
  1661  02A4  120A  158A  21A0  120A  118A  	fcall	_ADC_Read
  1662  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1663  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1664  02AB  0824               	movf	?_ADC_Read,w
  1665  02AC  1683               	bsf	3,5	;RP0=1, select bank3
  1666  02AD  1703               	bsf	3,6	;RP1=1, select bank3
  1667  02AE  009E               	movwf	??_main^(0+384)
  1668  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1669  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1670  02B1  0825               	movf	?_ADC_Read+1,w
  1671  02B2  1683               	bsf	3,5	;RP0=1, select bank3
  1672  02B3  1703               	bsf	3,6	;RP1=1, select bank3
  1673  02B4  009F               	movwf	(??_main^(0+384)+1)
  1674  02B5  0D1F               	rlf	(??_main^(0+384)+1),w
  1675  02B6  0C9F               	rrf	(??_main^(0+384)+1),f
  1676  02B7  0C9E               	rrf	??_main^(0+384),f
  1677  02B8  0D1F               	rlf	(??_main^(0+384)+1),w
  1678  02B9  0C9F               	rrf	(??_main^(0+384)+1),f
  1679  02BA  0C9E               	rrf	??_main^(0+384),f
  1680  02BB  081E               	movf	??_main^(0+384),w
  1681  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1682  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1683  02BE  00B4               	movwf	map@x
  1684  02BF  1683               	bsf	3,5	;RP0=1, select bank3
  1685  02C0  1703               	bsf	3,6	;RP1=1, select bank3
  1686  02C1  081F               	movf	(??_main+1)^(0+384),w
  1687  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1688  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1689  02C4  00B5               	movwf	map@x+1
  1690  02C5  3000               	movlw	0
  1691  02C6  00B6               	movwf	map@in_min
  1692  02C7  00B7               	movwf	map@in_min+1
  1693  02C8  30FF               	movlw	255
  1694  02C9  00B8               	movwf	map@in_max
  1695  02CA  3000               	movlw	0
  1696  02CB  00B9               	movwf	map@in_max+1
  1697  02CC  3000               	movlw	0
  1698  02CD  00BA               	movwf	map@out_min
  1699  02CE  00BB               	movwf	map@out_min+1
  1700  02CF  3064               	movlw	100
  1701  02D0  00BC               	movwf	map@out_max
  1702  02D1  3000               	movlw	0
  1703  02D2  00BD               	movwf	map@out_max+1
  1704  02D3  120A  158A  21F7  120A  118A  	fcall	_map
  1705  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1706  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1707  02DA  0834               	movf	?_map,w
  1708  02DB  1683               	bsf	3,5	;RP0=1, select bank3
  1709  02DC  1703               	bsf	3,6	;RP1=1, select bank3
  1710  02DD  00A0               	movwf	(??_main+2)^(0+384)
  1711  02DE  0820               	movf	(??_main+2)^(0+384),w
  1712  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1713  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1714  02E1  00CA               	movwf	_pressione
  1715  02E2                     l4386:	
  1716                           
  1717                           ;main.c: 219:                 sendByte(0x02, 0x00, temp);
  1718  02E2  01B8               	clrf	sendByte@byte1
  1719  02E3  084C               	movf	_temp,w
  1720  02E4  1683               	bsf	3,5	;RP0=1, select bank3
  1721  02E5  1703               	bsf	3,6	;RP1=1, select bank3
  1722  02E6  009E               	movwf	??_main^(0+384)
  1723  02E7  081E               	movf	??_main^(0+384),w
  1724  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1725  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1726  02EA  00B9               	movwf	sendByte@valore
  1727  02EB  3002               	movlw	2
  1728  02EC  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1729  02F1                     l4388:	
  1730                           
  1731                           ;main.c: 220:                 sendByte(0x04, 0x00, umidita);
  1732  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1733  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1734  02F3  01B8               	clrf	sendByte@byte1
  1735  02F4  084B               	movf	_umidita,w
  1736  02F5  1683               	bsf	3,5	;RP0=1, select bank3
  1737  02F6  1703               	bsf	3,6	;RP1=1, select bank3
  1738  02F7  009E               	movwf	??_main^(0+384)
  1739  02F8  081E               	movf	??_main^(0+384),w
  1740  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1741  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1742  02FB  00B9               	movwf	sendByte@valore
  1743  02FC  3004               	movlw	4
  1744  02FD  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1745  0302                     l4390:	
  1746                           
  1747                           ;main.c: 221:                 sendByte(0x06, 0x00, pressione);
  1748  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0304  01B8               	clrf	sendByte@byte1
  1751  0305  084A               	movf	_pressione,w
  1752  0306  1683               	bsf	3,5	;RP0=1, select bank3
  1753  0307  1703               	bsf	3,6	;RP1=1, select bank3
  1754  0308  009E               	movwf	??_main^(0+384)
  1755  0309  081E               	movf	??_main^(0+384),w
  1756  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1757  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1758  030C  00B9               	movwf	sendByte@valore
  1759  030D  3006               	movlw	6
  1760  030E  120A  158A  21C6  120A  118A  	fcall	_sendByte
  1761  0313                     l4392:	
  1762                           
  1763                           ;main.c: 223:                 for (unsigned char i = 0; i < 5; i++)
  1764  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0315  01C1               	clrf	main@i_486
  1767  0316                     l4394:	
  1768  0316  3005               	movlw	5
  1769  0317  0241               	subwf	main@i_486,w
  1770  0318  1C03               	skipc
  1771  0319  2B1B               	goto	u3761
  1772  031A  2B1C               	goto	u3760
  1773  031B                     u3761:	
  1774  031B  2B1D               	goto	l4398
  1775  031C                     u3760:	
  1776  031C  2B55               	goto	l225
  1777  031D                     l4398:	
  1778                           
  1779                           ;main.c: 224:                 {;main.c: 225:                     dataFromGateway[i] = 0;
  1780  031D  0841               	movf	main@i_486,w
  1781  031E  3EAC               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1782  031F  0084               	movwf	4
  1783  0320  1383               	bcf	3,7	;select IRP bank1
  1784  0321  0180               	clrf	0
  1785  0322                     l4400:	
  1786                           
  1787                           ;main.c: 226:                 }
  1788  0322  3001               	movlw	1
  1789  0323  1683               	bsf	3,5	;RP0=1, select bank3
  1790  0324  1703               	bsf	3,6	;RP1=1, select bank3
  1791  0325  009E               	movwf	??_main^(0+384)
  1792  0326  081E               	movf	??_main^(0+384),w
  1793  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0329  07C1               	addwf	main@i_486,f
  1796  032A  2B16               	goto	l4394
  1797  032B                     l4404:	
  1798                           
  1799                           ;main.c: 230:                 if (timerReadFromGateway >= 4)
  1800  032B  3004               	movlw	4
  1801  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1802  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1803  032E  024D               	subwf	_timerReadFromGateway,w
  1804  032F  1C03               	skipc
  1805  0330  2B32               	goto	u3771
  1806  0331  2B33               	goto	u3770
  1807  0332                     u3771:	
  1808  0332  2B36               	goto	l4408
  1809  0333                     u3770:	
  1810  0333                     l4406:	
  1811                           
  1812                           ;main.c: 231:                 {;main.c: 232:                     readGatewayDone.Bit = 1
      +                          ;
  1813  0333  1454               	bsf	_readGatewayDone,0
  1814                           
  1815                           ;main.c: 233:                     readGatewayDone.Timeout = 1;
  1816  0334  14D4               	bsf	_readGatewayDone,1
  1817                           
  1818                           ;main.c: 234:                     readGateway.Bit = 0;
  1819  0335  1053               	bcf	_readGateway,0
  1820  0336                     l4408:	
  1821                           
  1822                           ;main.c: 237:                 if (dataFromGatewayIndex >= 15)
  1823  0336  300F               	movlw	15
  1824  0337  024E               	subwf	_dataFromGatewayIndex,w
  1825  0338  1C03               	skipc
  1826  0339  2B3B               	goto	u3781
  1827  033A  2B3C               	goto	u3780
  1828  033B                     u3781:	
  1829  033B  2B55               	goto	l225
  1830  033C                     u3780:	
  1831  033C                     l4410:	
  1832                           
  1833                           ;main.c: 238:                 {;main.c: 239:                     readGatewayDone.Bit = 1
      +                          ;
  1834  033C  1454               	bsf	_readGatewayDone,0
  1835                           
  1836                           ;main.c: 240:                     readGatewayDone.Timeout = 0;
  1837  033D  10D4               	bcf	_readGatewayDone,1
  1838                           
  1839                           ;main.c: 241:                     readGateway.Bit = 0;
  1840  033E  1053               	bcf	_readGateway,0
  1841  033F  2B55               	goto	l225
  1842  0340                     l4414:	
  1843  0340  1683               	bsf	3,5	;RP0=1, select bank1
  1844  0341  1303               	bcf	3,6	;RP1=0, select bank1
  1845  0342  082C               	movf	_dataFromGateway^(0+128),w
  1846  0343  397F               	andlw	127
  1847  0344  1683               	bsf	3,5	;RP0=1, select bank3
  1848  0345  1703               	bsf	3,6	;RP1=1, select bank3
  1849  0346  009E               	movwf	??_main^(0+384)
  1850  0347  019F               	clrf	(??_main^(0+384)+1)
  1851                           
  1852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1853                           ; Switch size 1, requested type "simple"
  1854                           ; Number of cases is 1, Range of values is 0 to 0
  1855                           ; switch strategies available:
  1856                           ; Name         Instructions Cycles
  1857                           ; simple_byte            4     3 (average)
  1858                           ; direct_byte           11     8 (fixed)
  1859                           ; jumptable            260     6 (fixed)
  1860                           ;	Chosen strategy is simple_byte
  1861  0348  081F               	movf	(??_main+1)^(0+384),w
  1862  0349  3A00               	xorlw	0	; case 0
  1863  034A  1903               	skipnz
  1864  034B  2B4D               	goto	l4716
  1865  034C  2B2B               	goto	l4404
  1866  034D                     l4716:	
  1867                           
  1868                           ; Switch size 1, requested type "simple"
  1869                           ; Number of cases is 2, Range of values is 8 to 10
  1870                           ; switch strategies available:
  1871                           ; Name         Instructions Cycles
  1872                           ; simple_byte            7     4 (average)
  1873                           ; direct_byte           20    11 (fixed)
  1874                           ; jumptable            263     9 (fixed)
  1875                           ;	Chosen strategy is simple_byte
  1876  034D  081E               	movf	??_main^(0+384),w
  1877  034E  3A08               	xorlw	8	; case 8
  1878  034F  1903               	skipnz
  1879  0350  288E               	goto	l227
  1880  0351  3A02               	xorlw	2	; case 10
  1881  0352  1903               	skipnz
  1882  0353  2A20               	goto	l241
  1883  0354  2B2B               	goto	l4404
  1884  0355                     l225:	
  1885                           ;main.c: 245:         }
  1886                           
  1887                           
  1888                           ;main.c: 248:         if (readGatewayDone.Bit)
  1889  0355  1C54               	btfss	_readGatewayDone,0
  1890  0356  2B58               	goto	u3791
  1891  0357  2B59               	goto	u3790
  1892  0358                     u3791:	
  1893  0358  2B71               	goto	l4428
  1894  0359                     u3790:	
  1895  0359                     l4416:	
  1896                           
  1897                           ;main.c: 249:         {;main.c: 251:             readGateway.Bit = 0;
  1898  0359  1053               	bcf	_readGateway,0
  1899  035A                     l4418:	
  1900                           
  1901                           ;main.c: 252:             dataFromGatewayIndex = 0;
  1902  035A  01CE               	clrf	_dataFromGatewayIndex
  1903  035B                     l4420:	
  1904                           
  1905                           ;main.c: 253:             readGatewayDone.Bit = 0;
  1906  035B  1054               	bcf	_readGatewayDone,0
  1907                           
  1908                           ;main.c: 254:             timerReadFromGateway = 0;
  1909  035C  01CD               	clrf	_timerReadFromGateway
  1910  035D                     l4422:	
  1911                           
  1912                           ;main.c: 257:             if (readGatewayDone.Timeout)
  1913  035D  1CD4               	btfss	_readGatewayDone,1
  1914  035E  2B60               	goto	u3801
  1915  035F  2B61               	goto	u3800
  1916  0360                     u3801:	
  1917  0360  2B63               	goto	l4426
  1918  0361                     u3800:	
  1919  0361                     l4424:	
  1920                           
  1921                           ;main.c: 258:             {;main.c: 259:                 readGatewayDone.Timeout = 0;
  1922  0361  10D4               	bcf	_readGatewayDone,1
  1923                           
  1924                           ;main.c: 260:             }
  1925  0362  2B71               	goto	l4428
  1926  0363                     l4426:	
  1927                           
  1928                           ;main.c: 263:             {;main.c: 265:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1929  0363  3061               	movlw	(low (_Semafori| 0))& (0+255)
  1930  0364  1683               	bsf	3,5	;RP0=1, select bank3
  1931  0365  1703               	bsf	3,6	;RP1=1, select bank3
  1932  0366  009E               	movwf	??_main^(0+384)
  1933  0367  081E               	movf	??_main^(0+384),w
  1934  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1936  036A  00AC               	movwf	SetReceivedTimes@_semafori
  1937  036B  30AC               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1938  036C  120A  118A  276A  120A  118A  	fcall	_SetReceivedTimes
  1939  0371                     l4428:	
  1940                           
  1941                           ;main.c: 271:         if (secondPassed.Bit && cycled.Bit)
  1942  0371  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0372  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0373  1C52               	btfss	_secondPassed,0
  1945  0374  2B76               	goto	u3811
  1946  0375  2B77               	goto	u3810
  1947  0376                     u3811:	
  1948  0376  2CE3               	goto	l4462
  1949  0377                     u3810:	
  1950  0377                     l4430:	
  1951  0377  1C51               	btfss	_cycled,0
  1952  0378  2B7A               	goto	u3821
  1953  0379  2B7B               	goto	u3820
  1954  037A                     u3821:	
  1955  037A  2CE3               	goto	l4462
  1956  037B                     u3820:	
  1957  037B                     l4432:	
  1958                           
  1959                           ;main.c: 272:         {;main.c: 273:             unsigned char i = 0;
  1960  037B  01C5               	clrf	main@i_488
  1961                           
  1962                           ;main.c: 274:             while (i < n_semafori)
  1963  037C  2CDD               	goto	l4460
  1964  037D                     l4434:	
  1965                           
  1966                           ;main.c: 275:             {;main.c: 276:                 if ((*Semafori[i]).times[0] != 
      +                          0)
  1967  037D  0845               	movf	main@i_488,w
  1968  037E  1683               	bsf	3,5	;RP0=1, select bank3
  1969  037F  1703               	bsf	3,6	;RP1=1, select bank3
  1970  0380  009E               	movwf	??_main^(0+384)
  1971  0381  071E               	addwf	??_main^(0+384),w
  1972  0382  3E61               	addlw	(low (_Semafori| 0))& (0+255)
  1973  0383  0084               	movwf	4
  1974  0384  1383               	bcf	3,7	;select IRP bank0
  1975  0385  0800               	movf	0,w
  1976  0386  009F               	movwf	(??_main+1)^(0+384)
  1977  0387  0A84               	incf	4,f
  1978  0388  0800               	movf	0,w
  1979  0389  00A0               	movwf	((??_main+1)^(0+384)+1)
  1980  038A  081F               	movf	(??_main+1)^(0+384),w
  1981  038B  0084               	movwf	4
  1982  038C  1783               	bsf	3,7
  1983  038D  1C20               	btfss	(??_main+2)^(0+384),0
  1984  038E  1383               	bcf	3,7
  1985  038F  0800               	movf	0,w
  1986  0390  00A1               	movwf	(??_main+3)^(0+384)
  1987  0391  0A84               	incf	4,f
  1988  0392  0800               	movf	0,w
  1989  0393  00A2               	movwf	((??_main+3)^(0+384)+1)
  1990  0394  0821               	movf	(??_main+3)^(0+384),w
  1991  0395  0422               	iorwf	((??_main+3)^(0+384)+1),w
  1992  0396  1903               	btfsc	3,2
  1993  0397  2B99               	goto	u3831
  1994  0398  2B9A               	goto	u3830
  1995  0399                     u3831:	
  1996  0399  2CD5               	goto	l4458
  1997  039A                     u3830:	
  1998  039A                     l4436:	
  1999                           
  2000                           ;main.c: 277:                 {;main.c: 278:                     time[i]++;
  2001  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2002  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2003  039C  0845               	movf	main@i_488,w
  2004  039D  1683               	bsf	3,5	;RP0=1, select bank3
  2005  039E  1703               	bsf	3,6	;RP1=1, select bank3
  2006  039F  009E               	movwf	??_main^(0+384)
  2007  03A0  071E               	addwf	??_main^(0+384),w
  2008  03A1  3EA0               	addlw	(low (_time| 0))& (0+255)
  2009  03A2  0084               	movwf	4
  2010  03A3  3001               	movlw	1
  2011  03A4  1383               	bcf	3,7	;select IRP bank1
  2012  03A5  0780               	addwf	0,f
  2013  03A6  0A84               	incf	4,f
  2014  03A7  1803               	skipnc
  2015  03A8  0A80               	incf	0,f
  2016                           
  2017                           ;main.c: 279:                     unsigned char lux_select = (*Semafori[i]).lux_select;
  2018  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2019  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2020  03AB  0845               	movf	main@i_488,w
  2021  03AC  1683               	bsf	3,5	;RP0=1, select bank3
  2022  03AD  1703               	bsf	3,6	;RP1=1, select bank3
  2023  03AE  009E               	movwf	??_main^(0+384)
  2024  03AF  071E               	addwf	??_main^(0+384),w
  2025  03B0  3E61               	addlw	(low (_Semafori| 0))& (0+255)
  2026  03B1  0084               	movwf	4
  2027  03B2  0800               	movf	0,w
  2028  03B3  009F               	movwf	(??_main+1)^(0+384)
  2029  03B4  0A84               	incf	4,f
  2030  03B5  0800               	movf	0,w
  2031  03B6  00A0               	movwf	((??_main+1)^(0+384)+1)
  2032  03B7  081F               	movf	(??_main+1)^(0+384),w
  2033  03B8  3E0C               	addlw	12
  2034  03B9  00A1               	movwf	(??_main+3)^(0+384)
  2035  03BA  0820               	movf	(??_main+2)^(0+384),w
  2036  03BB  1803               	skipnc
  2037  03BC  3E01               	addlw	1
  2038  03BD  3E00               	addlw	0
  2039  03BE  00A2               	movwf	(??_main+4)^(0+384)
  2040  03BF  0821               	movf	(??_main+3)^(0+384),w
  2041  03C0  0084               	movwf	4
  2042  03C1  1783               	bsf	3,7
  2043  03C2  1C22               	btfss	(??_main+4)^(0+384),0
  2044  03C3  1383               	bcf	3,7
  2045  03C4  0800               	movf	0,w
  2046  03C5  00A3               	movwf	(??_main+5)^(0+384)
  2047  03C6  0823               	movf	(??_main+5)^(0+384),w
  2048  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2049  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2050  03C9  00C4               	movwf	main@lux_select
  2051                           
  2052                           ;main.c: 281:                     if ((*Semafori[i]).times[lux_select] - time[i] < 0)
  2053  03CA  0845               	movf	main@i_488,w
  2054  03CB  1683               	bsf	3,5	;RP0=1, select bank3
  2055  03CC  1703               	bsf	3,6	;RP1=1, select bank3
  2056  03CD  009E               	movwf	??_main^(0+384)
  2057  03CE  071E               	addwf	??_main^(0+384),w
  2058  03CF  3EA0               	addlw	(low (_time| 0))& (0+255)
  2059  03D0  0084               	movwf	4
  2060  03D1  1383               	bcf	3,7	;select IRP bank1
  2061  03D2  0800               	movf	0,w
  2062  03D3  009F               	movwf	(??_main+1)^(0+384)
  2063  03D4  0A84               	incf	4,f
  2064  03D5  0800               	movf	0,w
  2065  03D6  00A0               	movwf	((??_main+1)^(0+384)+1)
  2066  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2067  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2068  03D9  0845               	movf	main@i_488,w
  2069  03DA  1683               	bsf	3,5	;RP0=1, select bank3
  2070  03DB  1703               	bsf	3,6	;RP1=1, select bank3
  2071  03DC  00A1               	movwf	(??_main+3)^(0+384)
  2072  03DD  0721               	addwf	(??_main+3)^(0+384),w
  2073  03DE  3E61               	addlw	(low (_Semafori| 0))& (0+255)
  2074  03DF  0084               	movwf	4
  2075  03E0  0800               	movf	0,w
  2076  03E1  00A2               	movwf	(??_main+4)^(0+384)
  2077  03E2  0A84               	incf	4,f
  2078  03E3  0800               	movf	0,w
  2079  03E4  00A3               	movwf	((??_main+4)^(0+384)+1)
  2080  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2081  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2082  03E7  0844               	movf	main@lux_select,w
  2083  03E8  1683               	bsf	3,5	;RP0=1, select bank3
  2084  03E9  1703               	bsf	3,6	;RP1=1, select bank3
  2085  03EA  00A4               	movwf	(??_main+6)^(0+384)
  2086  03EB  0724               	addwf	(??_main+6)^(0+384),w
  2087  03EC  0722               	addwf	(??_main+4)^(0+384),w
  2088  03ED  00A5               	movwf	(??_main+7)^(0+384)
  2089  03EE  0823               	movf	(??_main+5)^(0+384),w
  2090  03EF  1803               	skipnc
  2091  03F0  3E01               	addlw	1
  2092  03F1  00A6               	movwf	((??_main+7)^(0+384)+1)
  2093  03F2  0825               	movf	(??_main+7)^(0+384),w
  2094  03F3  0084               	movwf	4
  2095  03F4  1783               	bsf	3,7
  2096  03F5  1C26               	btfss	(??_main+8)^(0+384),0
  2097  03F6  1383               	bcf	3,7
  2098  03F7  0800               	movf	0,w
  2099  03F8  00A7               	movwf	(??_main+9)^(0+384)
  2100  03F9  0A84               	incf	4,f
  2101  03FA  0800               	movf	0,w
  2102  03FB  00A8               	movwf	((??_main+9)^(0+384)+1)
  2103  03FC  081F               	movf	(??_main+1)^(0+384),w
  2104  03FD  0227               	subwf	(??_main+9)^(0+384),w
  2105  03FE  00A9               	movwf	(??_main+11)^(0+384)
  2106  03FF  0820               	movf	(??_main+2)^(0+384),w
  2107  0400  1C03               	skipc
  2108  0401  0A20               	incf	(??_main+2)^(0+384),w
  2109  0402  0228               	subwf	(??_main+10)^(0+384),w
  2110  0403  00AA               	movwf	(??_main+12)^(0+384)
  2111  0404  1FAA               	btfss	(??_main+12)^(0+384),7
  2112  0405  2C07               	goto	u3841
  2113  0406  2C08               	goto	u3840
  2114  0407                     u3841:	
  2115  0407  2C2F               	goto	l4450
  2116  0408                     u3840:	
  2117  0408                     l4438:	
  2118                           
  2119                           ;main.c: 282:                     {;main.c: 283:                         lux_select++;
  2120  0408  3001               	movlw	1
  2121  0409  009E               	movwf	??_main^(0+384)
  2122  040A  081E               	movf	??_main^(0+384),w
  2123  040B  1283               	bcf	3,5	;RP0=0, select bank0
  2124  040C  1303               	bcf	3,6	;RP1=0, select bank0
  2125  040D  07C4               	addwf	main@lux_select,f
  2126  040E                     l4440:	
  2127                           
  2128                           ;main.c: 284:                         time[i] = 1;
  2129  040E  0845               	movf	main@i_488,w
  2130  040F  1683               	bsf	3,5	;RP0=1, select bank3
  2131  0410  1703               	bsf	3,6	;RP1=1, select bank3
  2132  0411  009E               	movwf	??_main^(0+384)
  2133  0412  071E               	addwf	??_main^(0+384),w
  2134  0413  3EA0               	addlw	(low (_time| 0))& (0+255)
  2135  0414  0084               	movwf	4
  2136  0415  3001               	movlw	1
  2137  0416  1383               	bcf	3,7	;select IRP bank1
  2138  0417  0080               	movwf	0
  2139  0418  0A84               	incf	4,f
  2140  0419  3000               	movlw	0
  2141  041A  0080               	movwf	0
  2142  041B                     l4442:	
  2143                           
  2144                           ;main.c: 286:                         if (lux_select >= 3)
  2145  041B  3003               	movlw	3
  2146  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2147  041D  1303               	bcf	3,6	;RP1=0, select bank0
  2148  041E  0244               	subwf	main@lux_select,w
  2149  041F  1C03               	skipc
  2150  0420  2C22               	goto	u3851
  2151  0421  2C23               	goto	u3850
  2152  0422                     u3851:	
  2153  0422  2C2F               	goto	l4450
  2154  0423                     u3850:	
  2155  0423                     l4444:	
  2156                           
  2157                           ;main.c: 287:                         {;main.c: 288:                             lux_sel
      +                          ect = 0;
  2158  0423  01C4               	clrf	main@lux_select
  2159  0424                     l4446:	
  2160                           
  2161                           ;main.c: 290:                             if (i == 0)
  2162  0424  0845               	movf	main@i_488,w
  2163  0425  1D03               	btfss	3,2
  2164  0426  2C28               	goto	u3861
  2165  0427  2C29               	goto	u3860
  2166  0428                     u3861:	
  2167  0428  2C2F               	goto	l4450
  2168  0429                     u3860:	
  2169  0429                     l4448:	
  2170                           
  2171                           ;main.c: 291:                             {;main.c: 292:                                
      +                           UpdateTimes(Semafori);
  2172  0429  3061               	movlw	(low (_Semafori| 0))& (0+255)
  2173  042A  120A  118A  2650  120A  118A  	fcall	_UpdateTimes
  2174  042F                     l4450:	
  2175                           
  2176                           ;main.c: 297:                     if(lux_select!=(*Semafori[i]).lux_select)
  2177  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0431  0845               	movf	main@i_488,w
  2180  0432  1683               	bsf	3,5	;RP0=1, select bank3
  2181  0433  1703               	bsf	3,6	;RP1=1, select bank3
  2182  0434  009E               	movwf	??_main^(0+384)
  2183  0435  071E               	addwf	??_main^(0+384),w
  2184  0436  3E61               	addlw	(low (_Semafori| 0))& (0+255)
  2185  0437  0084               	movwf	4
  2186  0438  1383               	bcf	3,7	;select IRP bank0
  2187  0439  0800               	movf	0,w
  2188  043A  009F               	movwf	(??_main+1)^(0+384)
  2189  043B  0A84               	incf	4,f
  2190  043C  0800               	movf	0,w
  2191  043D  00A0               	movwf	((??_main+1)^(0+384)+1)
  2192  043E  081F               	movf	(??_main+1)^(0+384),w
  2193  043F  3E0C               	addlw	12
  2194  0440  00A1               	movwf	(??_main+3)^(0+384)
  2195  0441  0820               	movf	(??_main+2)^(0+384),w
  2196  0442  1803               	skipnc
  2197  0443  3E01               	addlw	1
  2198  0444  3E00               	addlw	0
  2199  0445  00A2               	movwf	(??_main+4)^(0+384)
  2200  0446  0821               	movf	(??_main+3)^(0+384),w
  2201  0447  0084               	movwf	4
  2202  0448  1783               	bsf	3,7
  2203  0449  1C22               	btfss	(??_main+4)^(0+384),0
  2204  044A  1383               	bcf	3,7
  2205  044B  0800               	movf	0,w
  2206  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2207  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2208  044E  0644               	xorwf	main@lux_select,w
  2209  044F  1903               	skipnz
  2210  0450  2C52               	goto	u3871
  2211  0451  2C53               	goto	u3870
  2212  0452                     u3871:	
  2213  0452  2C85               	goto	l4456
  2214  0453                     u3870:	
  2215  0453                     l4452:	
  2216                           
  2217                           ;main.c: 298:                     {;main.c: 299:                         luciSemaforo(i,
      +                           lux_select);
  2218  0453  0844               	movf	main@lux_select,w
  2219  0454  1683               	bsf	3,5	;RP0=1, select bank3
  2220  0455  1703               	bsf	3,6	;RP1=1, select bank3
  2221  0456  009E               	movwf	??_main^(0+384)
  2222  0457  081E               	movf	??_main^(0+384),w
  2223  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2225  045A  00A4               	movwf	luciSemaforo@lux
  2226  045B  0845               	movf	main@i_488,w
  2227  045C  120A  158A  22F8  120A  118A  	fcall	_luciSemaforo
  2228  0461                     l4454:	
  2229                           
  2230                           ;main.c: 300:                         (*Semafori[i]).lux_select = lux_select;
  2231  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0463  0844               	movf	main@lux_select,w
  2234  0464  1683               	bsf	3,5	;RP0=1, select bank3
  2235  0465  1703               	bsf	3,6	;RP1=1, select bank3
  2236  0466  009E               	movwf	??_main^(0+384)
  2237  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0469  0845               	movf	main@i_488,w
  2240  046A  1683               	bsf	3,5	;RP0=1, select bank3
  2241  046B  1703               	bsf	3,6	;RP1=1, select bank3
  2242  046C  009F               	movwf	(??_main+1)^(0+384)
  2243  046D  071F               	addwf	(??_main+1)^(0+384),w
  2244  046E  3E61               	addlw	(low (_Semafori| 0))& (0+255)
  2245  046F  0084               	movwf	4
  2246  0470  1383               	bcf	3,7	;select IRP bank0
  2247  0471  0800               	movf	0,w
  2248  0472  00A0               	movwf	(??_main+2)^(0+384)
  2249  0473  0A84               	incf	4,f
  2250  0474  0800               	movf	0,w
  2251  0475  00A1               	movwf	((??_main+2)^(0+384)+1)
  2252  0476  0820               	movf	(??_main+2)^(0+384),w
  2253  0477  3E0C               	addlw	12
  2254  0478  00A2               	movwf	(??_main+4)^(0+384)
  2255  0479  0821               	movf	(??_main+3)^(0+384),w
  2256  047A  1803               	skipnc
  2257  047B  3E01               	addlw	1
  2258  047C  3E00               	addlw	0
  2259  047D  00A3               	movwf	(??_main+5)^(0+384)
  2260  047E  0822               	movf	(??_main+4)^(0+384),w
  2261  047F  0084               	movwf	4
  2262  0480  1783               	bsf	3,7
  2263  0481  1C23               	btfss	(??_main+5)^(0+384),0
  2264  0482  1383               	bcf	3,7
  2265  0483  081E               	movf	??_main^(0+384),w
  2266  0484  0080               	movwf	0
  2267  0485                     l4456:	
  2268                           
  2269                           ;main.c: 302:                     GetDigits(DigitsArr, i, (*Semafori[i]).times[lux_selec
      +                          t] - time[i]);
  2270  0485  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0486  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0487  0845               	movf	main@i_488,w
  2273  0488  1683               	bsf	3,5	;RP0=1, select bank3
  2274  0489  1703               	bsf	3,6	;RP1=1, select bank3
  2275  048A  009E               	movwf	??_main^(0+384)
  2276  048B  081E               	movf	??_main^(0+384),w
  2277  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2278  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2279  048E  00B4               	movwf	GetDigits@index
  2280  048F  0845               	movf	main@i_488,w
  2281  0490  1683               	bsf	3,5	;RP0=1, select bank3
  2282  0491  1703               	bsf	3,6	;RP1=1, select bank3
  2283  0492  009F               	movwf	(??_main+1)^(0+384)
  2284  0493  071F               	addwf	(??_main+1)^(0+384),w
  2285  0494  3EA0               	addlw	(low (_time| 0))& (0+255)
  2286  0495  0084               	movwf	4
  2287  0496  1383               	bcf	3,7	;select IRP bank1
  2288  0497  0800               	movf	0,w
  2289  0498  00A0               	movwf	(??_main+2)^(0+384)
  2290  0499  0A84               	incf	4,f
  2291  049A  0800               	movf	0,w
  2292  049B  00A1               	movwf	((??_main+2)^(0+384)+1)
  2293  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2294  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2295  049E  0845               	movf	main@i_488,w
  2296  049F  1683               	bsf	3,5	;RP0=1, select bank3
  2297  04A0  1703               	bsf	3,6	;RP1=1, select bank3
  2298  04A1  00A2               	movwf	(??_main+4)^(0+384)
  2299  04A2  0722               	addwf	(??_main+4)^(0+384),w
  2300  04A3  3E61               	addlw	(low (_Semafori| 0))& (0+255)
  2301  04A4  0084               	movwf	4
  2302  04A5  0800               	movf	0,w
  2303  04A6  00A3               	movwf	(??_main+5)^(0+384)
  2304  04A7  0A84               	incf	4,f
  2305  04A8  0800               	movf	0,w
  2306  04A9  00A4               	movwf	((??_main+5)^(0+384)+1)
  2307  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2308  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2309  04AC  0844               	movf	main@lux_select,w
  2310  04AD  1683               	bsf	3,5	;RP0=1, select bank3
  2311  04AE  1703               	bsf	3,6	;RP1=1, select bank3
  2312  04AF  00A5               	movwf	(??_main+7)^(0+384)
  2313  04B0  0725               	addwf	(??_main+7)^(0+384),w
  2314  04B1  0723               	addwf	(??_main+5)^(0+384),w
  2315  04B2  00A6               	movwf	(??_main+8)^(0+384)
  2316  04B3  0824               	movf	(??_main+6)^(0+384),w
  2317  04B4  1803               	skipnc
  2318  04B5  3E01               	addlw	1
  2319  04B6  00A7               	movwf	((??_main+8)^(0+384)+1)
  2320  04B7  0826               	movf	(??_main+8)^(0+384),w
  2321  04B8  0084               	movwf	4
  2322  04B9  1783               	bsf	3,7
  2323  04BA  1C27               	btfss	(??_main+9)^(0+384),0
  2324  04BB  1383               	bcf	3,7
  2325  04BC  0800               	movf	0,w
  2326  04BD  00A8               	movwf	(??_main+10)^(0+384)
  2327  04BE  0A84               	incf	4,f
  2328  04BF  0800               	movf	0,w
  2329  04C0  00A9               	movwf	((??_main+10)^(0+384)+1)
  2330  04C1  0820               	movf	(??_main+2)^(0+384),w
  2331  04C2  0228               	subwf	(??_main+10)^(0+384),w
  2332  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2333  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2334  04C5  00B5               	movwf	GetDigits@Time
  2335  04C6  1683               	bsf	3,5	;RP0=1, select bank3
  2336  04C7  1703               	bsf	3,6	;RP1=1, select bank3
  2337  04C8  0821               	movf	(??_main+3)^(0+384),w
  2338  04C9  1C03               	skipc
  2339  04CA  0A21               	incf	(??_main+3)^(0+384),w
  2340  04CB  0229               	subwf	(??_main+11)^(0+384),w
  2341  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2342  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2343  04CE  00B6               	movwf	GetDigits@Time+1
  2344  04CF  3069               	movlw	(low (_DigitsArr| 0))& (0+255)
  2345  04D0  120A  158A  2733  120A  118A  	fcall	_GetDigits
  2346  04D5                     l4458:	
  2347                           
  2348                           ;main.c: 305:                 i++;
  2349  04D5  3001               	movlw	1
  2350  04D6  1683               	bsf	3,5	;RP0=1, select bank3
  2351  04D7  1703               	bsf	3,6	;RP1=1, select bank3
  2352  04D8  009E               	movwf	??_main^(0+384)
  2353  04D9  081E               	movf	??_main^(0+384),w
  2354  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2355  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2356  04DC  07C5               	addwf	main@i_488,f
  2357  04DD                     l4460:	
  2358  04DD  3002               	movlw	2
  2359  04DE  0245               	subwf	main@i_488,w
  2360  04DF  1C03               	skipc
  2361  04E0  2CE2               	goto	u3881
  2362  04E1  2CE3               	goto	u3880
  2363  04E2                     u3881:	
  2364  04E2  2B7D               	goto	l4434
  2365  04E3                     u3880:	
  2366  04E3                     l4462:	
  2367                           
  2368                           ;main.c: 309:         ShowDigitsOnDisplay();
  2369  04E3  120A  158A  25BE  120A  118A  	fcall	_ShowDigitsOnDisplay
  2370  04E8                     l4464:	
  2371                           
  2372                           ;main.c: 315:         if (secondPassed.Bit && cycled.Bit)
  2373  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2374  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2375  04EA  1C52               	btfss	_secondPassed,0
  2376  04EB  2CED               	goto	u3891
  2377  04EC  2CEE               	goto	u3890
  2378  04ED                     u3891:	
  2379  04ED  2CF4               	goto	l259
  2380  04EE                     u3890:	
  2381  04EE                     l4466:	
  2382  04EE  1C51               	btfss	_cycled,0
  2383  04EF  2CF1               	goto	u3901
  2384  04F0  2CF2               	goto	u3900
  2385  04F1                     u3901:	
  2386  04F1  2CF4               	goto	l259
  2387  04F2                     u3900:	
  2388  04F2                     l4468:	
  2389                           
  2390                           ;main.c: 316:         {;main.c: 317:             secondPassed.Bit = 0;
  2391  04F2  1052               	bcf	_secondPassed,0
  2392                           
  2393                           ;main.c: 318:             cycled.Bit = 0;
  2394  04F3  1051               	bcf	_cycled,0
  2395  04F4                     l259:	
  2396                           ;main.c: 319:         }
  2397                           
  2398                           
  2399                           ;main.c: 320:         if (secondPassed.Bit && !cycled.Bit)
  2400  04F4  1C52               	btfss	_secondPassed,0
  2401  04F5  2CF7               	goto	u3911
  2402  04F6  2CF8               	goto	u3910
  2403  04F7                     u3911:	
  2404  04F7  2889               	goto	l4334
  2405  04F8                     u3910:	
  2406  04F8                     l4470:	
  2407  04F8  1851               	btfsc	_cycled,0
  2408  04F9  2CFB               	goto	u3921
  2409  04FA  2CFC               	goto	u3920
  2410  04FB                     u3921:	
  2411  04FB  2889               	goto	l4334
  2412  04FC                     u3920:	
  2413  04FC                     l4472:	
  2414                           
  2415                           ;main.c: 321:         {;main.c: 322:             cycled.Bit = 1;
  2416  04FC  1451               	bsf	_cycled,0
  2417  04FD  2889               	goto	l4334
  2418  04FE  120A  118A  2810   	ljmp	start
  2419  0501                     __end_of_main:	
  2420                           
  2421                           	psect	text1
  2422  09C6                     __ptext1:	
  2423 ;; *************** function _sendByte *****************
  2424 ;; Defined at:
  2425 ;;		line 386 in file "main.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  byte0           1    wreg     unsigned char 
  2428 ;;  byte1           1   24[BANK0 ] unsigned char 
  2429 ;;  valore          1   25[BANK0 ] unsigned char 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  byte0           1   29[BANK0 ] unsigned char 
  2432 ;;  i               1   31[BANK0 ] unsigned char 
  2433 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2434 ;;		 -> BuildByte@txByte(5), 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2444 ;;      Params:         0       2       0       0       0
  2445 ;;      Locals:         0       3       0       0       0
  2446 ;;      Temps:          0       3       0       0       0
  2447 ;;      Totals:         0       8       0       0       0
  2448 ;;Total ram usage:        8 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    4
  2451 ;; This function calls:
  2452 ;;		_BuildByte
  2453 ;;		_UART_TxChar
  2454 ;; This function is called by:
  2455 ;;		_main
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           
  2460                           ;psect for function _sendByte
  2461  09C6                     _sendByte:	
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2465                           ;sendByte@byte0 stored from wreg
  2466  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  2467  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  2468  09C8  00BD               	movwf	sendByte@byte0
  2469  09C9                     l4202:	
  2470                           
  2471                           ;main.c: 386: void sendByte(char byte0, char byte1, char valore);main.c: 387: {;main.c: 
      +                          388:     char *txByte;;main.c: 389:     txByte = BuildByte(byte0, byte1, valore);
  2472  09C9  0838               	movf	sendByte@byte1,w
  2473  09CA  00BA               	movwf	??_sendByte
  2474  09CB  083A               	movf	??_sendByte,w
  2475  09CC  00A4               	movwf	BuildByte@byte1
  2476  09CD  0839               	movf	sendByte@valore,w
  2477  09CE  00BB               	movwf	??_sendByte+1
  2478  09CF  083B               	movf	??_sendByte+1,w
  2479  09D0  00A5               	movwf	BuildByte@valore
  2480  09D1  083D               	movf	sendByte@byte0,w
  2481  09D2  120A  158A  266B  120A  158A  	fcall	_BuildByte
  2482  09D7  1283               	bcf	3,5	;RP0=0, select bank0
  2483  09D8  1303               	bcf	3,6	;RP1=0, select bank0
  2484  09D9  00BC               	movwf	??_sendByte+2
  2485  09DA  083C               	movf	??_sendByte+2,w
  2486  09DB  00BE               	movwf	sendByte@txByte
  2487  09DC                     l4204:	
  2488                           
  2489                           ;main.c: 391:     for (unsigned char i = 0; i < 5; i++)
  2490  09DC  01BF               	clrf	sendByte@i
  2491  09DD                     l4210:	
  2492                           
  2493                           ;main.c: 392:     {;main.c: 393:         UART_TxChar(*(txByte++));
  2494  09DD  083E               	movf	sendByte@txByte,w
  2495  09DE  0084               	movwf	4
  2496  09DF  1383               	bcf	3,7	;select IRP bank0
  2497  09E0  0800               	movf	0,w
  2498  09E1  120A  158A  2158  120A  158A  	fcall	_UART_TxChar
  2499  09E6                     l4212:	
  2500  09E6  3001               	movlw	1
  2501  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  2502  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  2503  09E9  00BA               	movwf	??_sendByte
  2504  09EA  083A               	movf	??_sendByte,w
  2505  09EB  07BE               	addwf	sendByte@txByte,f
  2506  09EC                     l4214:	
  2507                           
  2508                           ;main.c: 394:     }
  2509  09EC  3001               	movlw	1
  2510  09ED  00BA               	movwf	??_sendByte
  2511  09EE  083A               	movf	??_sendByte,w
  2512  09EF  07BF               	addwf	sendByte@i,f
  2513  09F0                     l4216:	
  2514  09F0  3005               	movlw	5
  2515  09F1  023F               	subwf	sendByte@i,w
  2516  09F2  1C03               	skipc
  2517  09F3  29F5               	goto	u3631
  2518  09F4  29F6               	goto	u3630
  2519  09F5                     u3631:	
  2520  09F5  29DD               	goto	l4210
  2521  09F6                     u3630:	
  2522  09F6                     l298:	
  2523  09F6  0008               	return
  2524  09F7                     __end_of_sendByte:	
  2525                           
  2526                           	psect	text2
  2527  0958                     __ptext2:	
  2528 ;; *************** function _UART_TxChar *****************
  2529 ;; Defined at:
  2530 ;;		line 361 in file "main.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  ch              1    wreg     unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  ch              1    4[BANK0 ] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2544 ;;      Params:         0       0       0       0       0
  2545 ;;      Locals:         0       1       0       0       0
  2546 ;;      Temps:          0       0       0       0       0
  2547 ;;      Totals:         0       1       0       0       0
  2548 ;;Total ram usage:        1 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    3
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_sendByte
  2555 ;;		_UART_Write_Text
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function _UART_TxChar
  2561  0958                     _UART_TxChar:	
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in _UART_TxChar: [wreg]
  2565                           ;UART_TxChar@ch stored from wreg
  2566  0958  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0959  1303               	bcf	3,6	;RP1=0, select bank0
  2568  095A  00A4               	movwf	UART_TxChar@ch
  2569  095B                     l3914:	
  2570  095B                     l278:	
  2571                           ;main.c: 364:         ;
  2572                           
  2573                           
  2574                           ;main.c: 363:     while (!TXIF)
  2575  095B  1E0C               	btfss	12,4	;volatile
  2576  095C  295E               	goto	u3171
  2577  095D  295F               	goto	u3170
  2578  095E                     u3171:	
  2579  095E  295B               	goto	l278
  2580  095F                     u3170:	
  2581  095F                     l280:	
  2582                           
  2583                           ;main.c: 365:     TXIF = 0;
  2584  095F  120C               	bcf	12,4	;volatile
  2585  0960                     l3916:	
  2586                           
  2587                           ;main.c: 366:     TXREG = ch;
  2588  0960  0824               	movf	UART_TxChar@ch,w
  2589  0961  0099               	movwf	25	;volatile
  2590  0962                     l281:	
  2591  0962  0008               	return
  2592  0963                     __end_of_UART_TxChar:	
  2593                           
  2594                           	psect	text3
  2595  0E6B                     __ptext3:	
  2596 ;; *************** function _BuildByte *****************
  2597 ;; Defined at:
  2598 ;;		line 2 in file "./CustomLib/Serial.h"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  byte0           1    wreg     unsigned char 
  2601 ;;  byte1           1    4[BANK0 ] unsigned char 
  2602 ;;  valore          1    5[BANK0 ] unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  byte0           1    8[BANK0 ] unsigned char 
  2605 ;;  y               2   18[BANK0 ] int 
  2606 ;;  y               2   16[BANK0 ] int 
  2607 ;;  i               2   22[BANK0 ] int 
  2608 ;;  i               2   20[BANK0 ] int 
  2609 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2610 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2611 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      PTR unsigned char 
  2614 ;; Registers used:
  2615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         0       2       0       0       0
  2622 ;;      Locals:         0      16       0       0       0
  2623 ;;      Temps:          0       2       0       0       0
  2624 ;;      Totals:         0      20       0       0       0
  2625 ;;Total ram usage:       20 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    3
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_sendByte
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function _BuildByte
  2637  0E6B                     _BuildByte:	
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2641                           ;BuildByte@byte0 stored from wreg
  2642  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  2643  0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  2644  0E6D  00A8               	movwf	BuildByte@byte0
  2645  0E6E                     l3832:	
  2646                           
  2647                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2648  0E6E  0828               	movf	BuildByte@byte0,w
  2649  0E6F  397F               	andlw	127
  2650  0E70  00A6               	movwf	??_BuildByte
  2651  0E71  0826               	movf	??_BuildByte,w
  2652  0E72  00A9               	movwf	BuildByte@txByte
  2653                           
  2654                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2655  0E73  0824               	movf	BuildByte@byte1,w
  2656  0E74  397F               	andlw	127
  2657  0E75  00A6               	movwf	??_BuildByte
  2658  0E76  0826               	movf	??_BuildByte,w
  2659  0E77  00AA               	movwf	BuildByte@txByte+1
  2660                           
  2661                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2662  0E78  0825               	movf	BuildByte@valore,w
  2663  0E79  397F               	andlw	127
  2664  0E7A  00A6               	movwf	??_BuildByte
  2665  0E7B  0826               	movf	??_BuildByte,w
  2666  0E7C  00AB               	movwf	BuildByte@txByte+2
  2667  0E7D                     l3834:	
  2668                           
  2669                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2670  0E7D  0825               	movf	BuildByte@valore,w
  2671  0E7E  00A6               	movwf	??_BuildByte
  2672  0E7F  3007               	movlw	7
  2673  0E80                     u3065:	
  2674  0E80  1003               	clrc
  2675  0E81  0CA6               	rrf	??_BuildByte,f
  2676  0E82  3EFF               	addlw	-1
  2677  0E83  1D03               	skipz
  2678  0E84  2E80               	goto	u3065
  2679  0E85  0826               	movf	??_BuildByte,w
  2680  0E86  397F               	andlw	127
  2681  0E87  00A7               	movwf	??_BuildByte+1
  2682  0E88  0827               	movf	??_BuildByte+1,w
  2683  0E89  00AC               	movwf	BuildByte@txByte+3
  2684  0E8A                     l3836:	
  2685                           
  2686                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2687  0E8A  01AE               	clrf	BuildByte@sommaRow
  2688  0E8B                     l3838:	
  2689                           
  2690                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2691  0E8B  01AF               	clrf	BuildByte@sommaColumn
  2692  0E8C                     l3840:	
  2693                           
  2694                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2695  0E8C  01B4               	clrf	BuildByte@i
  2696  0E8D  01B5               	clrf	BuildByte@i+1
  2697  0E8E                     l3846:	
  2698                           
  2699                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2700  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  2701  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  2702  0E90  01B0               	clrf	BuildByte@y
  2703  0E91  01B1               	clrf	BuildByte@y+1
  2704  0E92                     l3852:	
  2705                           
  2706                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2707  0E92  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0E93  1303               	bcf	3,6	;RP1=0, select bank0
  2709  0E94  0834               	movf	BuildByte@i,w
  2710  0E95  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2711  0E96  0084               	movwf	4
  2712  0E97  1383               	bcf	3,7	;select IRP bank0
  2713  0E98  0800               	movf	0,w
  2714  0E99  00A6               	movwf	??_BuildByte
  2715  0E9A  0A30               	incf	BuildByte@y,w
  2716  0E9B  2E9E               	goto	u3074
  2717  0E9C                     u3075:	
  2718  0E9C  1003               	clrc
  2719  0E9D  0CA6               	rrf	??_BuildByte,f
  2720  0E9E                     u3074:	
  2721  0E9E  3EFF               	addlw	-1
  2722  0E9F  1D03               	skipz
  2723  0EA0  2E9C               	goto	u3075
  2724  0EA1  0826               	movf	??_BuildByte,w
  2725  0EA2  3901               	andlw	1
  2726  0EA3  00A7               	movwf	??_BuildByte+1
  2727  0EA4  0827               	movf	??_BuildByte+1,w
  2728  0EA5  07AE               	addwf	BuildByte@sommaRow,f
  2729  0EA6                     l3854:	
  2730                           
  2731                           ;./CustomLib/Serial.h: 18:         }
  2732  0EA6  3001               	movlw	1
  2733  0EA7  07B0               	addwf	BuildByte@y,f
  2734  0EA8  1803               	skipnc
  2735  0EA9  0AB1               	incf	BuildByte@y+1,f
  2736  0EAA  3000               	movlw	0
  2737  0EAB  07B1               	addwf	BuildByte@y+1,f
  2738  0EAC                     l3856:	
  2739  0EAC  0831               	movf	BuildByte@y+1,w
  2740  0EAD  3A80               	xorlw	128
  2741  0EAE  00FF               	movwf	btemp+1
  2742  0EAF  3080               	movlw	128
  2743  0EB0  027F               	subwf	btemp+1,w
  2744  0EB1  1D03               	skipz
  2745  0EB2  2EB5               	goto	u3085
  2746  0EB3  3008               	movlw	8
  2747  0EB4  0230               	subwf	BuildByte@y,w
  2748  0EB5                     u3085:	
  2749  0EB5  1C03               	skipc
  2750  0EB6  2EB8               	goto	u3081
  2751  0EB7  2EB9               	goto	u3080
  2752  0EB8                     u3081:	
  2753  0EB8  2E92               	goto	l3852
  2754  0EB9                     u3080:	
  2755  0EB9                     l103:	
  2756                           
  2757                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2758  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0EBB  1C2E               	btfss	BuildByte@sommaRow,0
  2761  0EBC  2EBE               	goto	u3091
  2762  0EBD  2EBF               	goto	u3090
  2763  0EBE                     u3091:	
  2764  0EBE  2EC7               	goto	l3860
  2765  0EBF                     u3090:	
  2766  0EBF                     l3858:	
  2767                           
  2768                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2769  0EBF  3080               	movlw	128
  2770  0EC0  00A6               	movwf	??_BuildByte
  2771  0EC1  0834               	movf	BuildByte@i,w
  2772  0EC2  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2773  0EC3  0084               	movwf	4
  2774  0EC4  0826               	movf	??_BuildByte,w
  2775  0EC5  1383               	bcf	3,7	;select IRP bank0
  2776  0EC6  0780               	addwf	0,f
  2777  0EC7                     l3860:	
  2778                           
  2779                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2780  0EC7  01AE               	clrf	BuildByte@sommaRow
  2781  0EC8                     l3864:	
  2782                           ;./CustomLib/Serial.h: 23:         }
  2783                           
  2784                           
  2785                           ;./CustomLib/Serial.h: 28:     }
  2786  0EC8  3001               	movlw	1
  2787  0EC9  07B4               	addwf	BuildByte@i,f
  2788  0ECA  1803               	skipnc
  2789  0ECB  0AB5               	incf	BuildByte@i+1,f
  2790  0ECC  3000               	movlw	0
  2791  0ECD  07B5               	addwf	BuildByte@i+1,f
  2792  0ECE                     l3866:	
  2793  0ECE  0835               	movf	BuildByte@i+1,w
  2794  0ECF  3A80               	xorlw	128
  2795  0ED0  00FF               	movwf	btemp+1
  2796  0ED1  3080               	movlw	128
  2797  0ED2  027F               	subwf	btemp+1,w
  2798  0ED3  1D03               	skipz
  2799  0ED4  2ED7               	goto	u3105
  2800  0ED5  3004               	movlw	4
  2801  0ED6  0234               	subwf	BuildByte@i,w
  2802  0ED7                     u3105:	
  2803  0ED7  1C03               	skipc
  2804  0ED8  2EDA               	goto	u3101
  2805  0ED9  2EDB               	goto	u3100
  2806  0EDA                     u3101:	
  2807  0EDA  2E8E               	goto	l3846
  2808  0EDB                     u3100:	
  2809  0EDB                     l3868:	
  2810                           
  2811                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2812  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2813  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2814  0EDD  01B6               	clrf	BuildByte@i_337
  2815  0EDE  01B7               	clrf	BuildByte@i_337+1
  2816  0EDF                     l3874:	
  2817                           
  2818                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2819  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0EE1  01B2               	clrf	BuildByte@y_338
  2822  0EE2  01B3               	clrf	BuildByte@y_338+1
  2823  0EE3                     l3880:	
  2824                           
  2825                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2826  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0EE5  0832               	movf	BuildByte@y_338,w
  2829  0EE6  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2830  0EE7  0084               	movwf	4
  2831  0EE8  1383               	bcf	3,7	;select IRP bank0
  2832  0EE9  0800               	movf	0,w
  2833  0EEA  00A6               	movwf	??_BuildByte
  2834  0EEB  0A36               	incf	BuildByte@i_337,w
  2835  0EEC  2EEF               	goto	u3114
  2836  0EED                     u3115:	
  2837  0EED  1003               	clrc
  2838  0EEE  0CA6               	rrf	??_BuildByte,f
  2839  0EEF                     u3114:	
  2840  0EEF  3EFF               	addlw	-1
  2841  0EF0  1D03               	skipz
  2842  0EF1  2EED               	goto	u3115
  2843  0EF2  0826               	movf	??_BuildByte,w
  2844  0EF3  3901               	andlw	1
  2845  0EF4  00A7               	movwf	??_BuildByte+1
  2846  0EF5  0827               	movf	??_BuildByte+1,w
  2847  0EF6  07AF               	addwf	BuildByte@sommaColumn,f
  2848  0EF7                     l3882:	
  2849                           
  2850                           ;./CustomLib/Serial.h: 37:         }
  2851  0EF7  3001               	movlw	1
  2852  0EF8  07B2               	addwf	BuildByte@y_338,f
  2853  0EF9  1803               	skipnc
  2854  0EFA  0AB3               	incf	BuildByte@y_338+1,f
  2855  0EFB  3000               	movlw	0
  2856  0EFC  07B3               	addwf	BuildByte@y_338+1,f
  2857  0EFD                     l3884:	
  2858  0EFD  0833               	movf	BuildByte@y_338+1,w
  2859  0EFE  3A80               	xorlw	128
  2860  0EFF  00FF               	movwf	btemp+1
  2861  0F00  3080               	movlw	128
  2862  0F01  027F               	subwf	btemp+1,w
  2863  0F02  1D03               	skipz
  2864  0F03  2F06               	goto	u3125
  2865  0F04  3004               	movlw	4
  2866  0F05  0232               	subwf	BuildByte@y_338,w
  2867  0F06                     u3125:	
  2868  0F06  1C03               	skipc
  2869  0F07  2F09               	goto	u3121
  2870  0F08  2F0A               	goto	u3120
  2871  0F09                     u3121:	
  2872  0F09  2EE3               	goto	l3880
  2873  0F0A                     u3120:	
  2874  0F0A                     l109:	
  2875                           
  2876                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2877  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0F0C  1C2F               	btfss	BuildByte@sommaColumn,0
  2880  0F0D  2F0F               	goto	u3131
  2881  0F0E  2F10               	goto	u3130
  2882  0F0F                     u3131:	
  2883  0F0F  2F1D               	goto	l3888
  2884  0F10                     u3130:	
  2885  0F10                     l3886:	
  2886                           
  2887                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2888  0F10  3001               	movlw	1
  2889  0F11  00A6               	movwf	??_BuildByte
  2890  0F12  0A36               	incf	BuildByte@i_337,w
  2891  0F13  2F16               	goto	u3144
  2892  0F14                     u3145:	
  2893  0F14  1003               	clrc
  2894  0F15  0DA6               	rlf	??_BuildByte,f
  2895  0F16                     u3144:	
  2896  0F16  3EFF               	addlw	-1
  2897  0F17  1D03               	skipz
  2898  0F18  2F14               	goto	u3145
  2899  0F19  0826               	movf	??_BuildByte,w
  2900  0F1A  00A7               	movwf	??_BuildByte+1
  2901  0F1B  0827               	movf	??_BuildByte+1,w
  2902  0F1C  07AD               	addwf	BuildByte@txByte+4,f
  2903  0F1D                     l3888:	
  2904                           
  2905                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2906  0F1D  01AF               	clrf	BuildByte@sommaColumn
  2907  0F1E                     l3892:	
  2908                           ;./CustomLib/Serial.h: 42:         }
  2909                           
  2910                           
  2911                           ;./CustomLib/Serial.h: 47:     }
  2912  0F1E  3001               	movlw	1
  2913  0F1F  07B6               	addwf	BuildByte@i_337,f
  2914  0F20  1803               	skipnc
  2915  0F21  0AB7               	incf	BuildByte@i_337+1,f
  2916  0F22  3000               	movlw	0
  2917  0F23  07B7               	addwf	BuildByte@i_337+1,f
  2918  0F24                     l3894:	
  2919  0F24  0837               	movf	BuildByte@i_337+1,w
  2920  0F25  3A80               	xorlw	128
  2921  0F26  00FF               	movwf	btemp+1
  2922  0F27  3080               	movlw	128
  2923  0F28  027F               	subwf	btemp+1,w
  2924  0F29  1D03               	skipz
  2925  0F2A  2F2D               	goto	u3155
  2926  0F2B  3008               	movlw	8
  2927  0F2C  0236               	subwf	BuildByte@i_337,w
  2928  0F2D                     u3155:	
  2929  0F2D  1C03               	skipc
  2930  0F2E  2F30               	goto	u3151
  2931  0F2F  2F31               	goto	u3150
  2932  0F30                     u3151:	
  2933  0F30  2EDF               	goto	l3874
  2934  0F31                     u3150:	
  2935  0F31                     l3896:	
  2936                           
  2937                           ;./CustomLib/Serial.h: 49:     return txByte;
  2938  0F31  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2939  0F32                     l112:	
  2940  0F32  0008               	return
  2941  0F33                     __end_of_BuildByte:	
  2942                           
  2943                           	psect	text4
  2944  09F7                     __ptext4:	
  2945 ;; *************** function _map *****************
  2946 ;; Defined at:
  2947 ;;		line 134 in file "./CustomLib/TrafficLight.h"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  x               2   20[BANK0 ] int 
  2950 ;;  in_min          2   22[BANK0 ] int 
  2951 ;;  in_max          2   24[BANK0 ] int 
  2952 ;;  out_min         2   26[BANK0 ] int 
  2953 ;;  out_max         2   28[BANK0 ] int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  2   20[BANK0 ] int 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, pclath, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2965 ;;      Params:         0      10       0       0       0
  2966 ;;      Locals:         0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0
  2968 ;;      Totals:         0      10       0       0       0
  2969 ;;Total ram usage:       10 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    4
  2972 ;; This function calls:
  2973 ;;		___awdiv
  2974 ;;		___wmul
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _map
  2982  09F7                     _map:	
  2983  09F7                     l4180:	
  2984                           ;incstack = 0
  2985                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2986                           
  2987                           
  2988                           ;./CustomLib/TrafficLight.h: 134: int map(int x, int in_min, int in_max, int out_min, in
      +                          t out_max);./CustomLib/TrafficLight.h: 135: {;./CustomLib/TrafficLight.h: 136:     retur
      +                          n (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2989  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  2990  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  2991  09F9  0836               	movf	map@in_min,w
  2992  09FA  0238               	subwf	map@in_max,w
  2993  09FB  00AB               	movwf	___awdiv@divisor
  2994  09FC  0837               	movf	map@in_min+1,w
  2995  09FD  1C03               	skipc
  2996  09FE  0A37               	incf	map@in_min+1,w
  2997  09FF  0239               	subwf	map@in_max+1,w
  2998  0A00  00AC               	movwf	___awdiv@divisor+1
  2999  0A01  0836               	movf	map@in_min,w
  3000  0A02  0234               	subwf	map@x,w
  3001  0A03  00A4               	movwf	___wmul@multiplier
  3002  0A04  0837               	movf	map@in_min+1,w
  3003  0A05  1C03               	skipc
  3004  0A06  0A37               	incf	map@in_min+1,w
  3005  0A07  0235               	subwf	map@x+1,w
  3006  0A08  00A5               	movwf	___wmul@multiplier+1
  3007  0A09  083A               	movf	map@out_min,w
  3008  0A0A  023C               	subwf	map@out_max,w
  3009  0A0B  00A6               	movwf	___wmul@multiplicand
  3010  0A0C  083B               	movf	map@out_min+1,w
  3011  0A0D  1C03               	skipc
  3012  0A0E  0A3B               	incf	map@out_min+1,w
  3013  0A0F  023D               	subwf	map@out_max+1,w
  3014  0A10  00A7               	movwf	___wmul@multiplicand+1
  3015  0A11  120A  118A  27D8  120A  158A  	fcall	___wmul
  3016  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0A17  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0A18  0825               	movf	?___wmul+1,w
  3019  0A19  00AE               	movwf	___awdiv@dividend+1
  3020  0A1A  0824               	movf	?___wmul,w
  3021  0A1B  00AD               	movwf	___awdiv@dividend
  3022  0A1C  120A  158A  24B8  120A  158A  	fcall	___awdiv
  3023  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0A23  083A               	movf	map@out_min,w
  3026  0A24  072B               	addwf	?___awdiv,w
  3027  0A25  00B4               	movwf	?_map
  3028  0A26  083B               	movf	map@out_min+1,w
  3029  0A27  1803               	skipnc
  3030  0A28  0A3B               	incf	map@out_min+1,w
  3031  0A29  072C               	addwf	?___awdiv+1,w
  3032  0A2A  00B5               	movwf	?_map+1
  3033  0A2B                     l167:	
  3034  0A2B  0008               	return
  3035  0A2C                     __end_of_map:	
  3036                           
  3037                           	psect	text5
  3038  07D8                     __ptext5:	
  3039 ;; *************** function ___wmul *****************
  3040 ;; Defined at:
  3041 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3044 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  product         2    8[BANK0 ] unsigned int 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  2    4[BANK0 ] unsigned int 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3056 ;;      Params:         0       4       0       0       0
  3057 ;;      Locals:         0       2       0       0       0
  3058 ;;      Temps:          0       0       0       0       0
  3059 ;;      Totals:         0       6       0       0       0
  3060 ;;Total ram usage:        6 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    3
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_map
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function ___wmul
  3072  07D8                     ___wmul:	
  3073  07D8                     l3936:	
  3074                           ;incstack = 0
  3075                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3076                           
  3077  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3078  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  3079  07DA  01A8               	clrf	___wmul@product
  3080  07DB  01A9               	clrf	___wmul@product+1
  3081  07DC                     l3938:	
  3082  07DC  1C24               	btfss	___wmul@multiplier,0
  3083  07DD  2FDF               	goto	u3181
  3084  07DE  2FE0               	goto	u3180
  3085  07DF                     u3181:	
  3086  07DF  2FE6               	goto	l440
  3087  07E0                     u3180:	
  3088  07E0                     l3940:	
  3089  07E0  0826               	movf	___wmul@multiplicand,w
  3090  07E1  07A8               	addwf	___wmul@product,f
  3091  07E2  1803               	skipnc
  3092  07E3  0AA9               	incf	___wmul@product+1,f
  3093  07E4  0827               	movf	___wmul@multiplicand+1,w
  3094  07E5  07A9               	addwf	___wmul@product+1,f
  3095  07E6                     l440:	
  3096  07E6  3001               	movlw	1
  3097  07E7                     u3195:	
  3098  07E7  1003               	clrc
  3099  07E8  0DA6               	rlf	___wmul@multiplicand,f
  3100  07E9  0DA7               	rlf	___wmul@multiplicand+1,f
  3101  07EA  3EFF               	addlw	-1
  3102  07EB  1D03               	skipz
  3103  07EC  2FE7               	goto	u3195
  3104  07ED                     l3942:	
  3105  07ED  3001               	movlw	1
  3106  07EE                     u3205:	
  3107  07EE  1003               	clrc
  3108  07EF  0CA5               	rrf	___wmul@multiplier+1,f
  3109  07F0  0CA4               	rrf	___wmul@multiplier,f
  3110  07F1  3EFF               	addlw	-1
  3111  07F2  1D03               	skipz
  3112  07F3  2FEE               	goto	u3205
  3113  07F4                     l3944:	
  3114  07F4  0824               	movf	___wmul@multiplier,w
  3115  07F5  0425               	iorwf	___wmul@multiplier+1,w
  3116  07F6  1D03               	btfss	3,2
  3117  07F7  2FF9               	goto	u3211
  3118  07F8  2FFA               	goto	u3210
  3119  07F9                     u3211:	
  3120  07F9  2FDC               	goto	l3938
  3121  07FA                     u3210:	
  3122  07FA                     l3946:	
  3123  07FA  0829               	movf	___wmul@product+1,w
  3124  07FB  00A5               	movwf	?___wmul+1
  3125  07FC  0828               	movf	___wmul@product,w
  3126  07FD  00A4               	movwf	?___wmul
  3127  07FE                     l442:	
  3128  07FE  0008               	return
  3129  07FF                     __end_of___wmul:	
  3130                           
  3131                           	psect	text6
  3132  0AF8                     __ptext6:	
  3133 ;; *************** function _luciSemaforo *****************
  3134 ;; Defined at:
  3135 ;;		line 419 in file "main.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  index           1    wreg     unsigned char 
  3138 ;;  lux             1    4[BANK0 ] unsigned char 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  index           1    7[BANK0 ] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3150 ;;      Params:         0       1       0       0       0
  3151 ;;      Locals:         0       1       0       0       0
  3152 ;;      Temps:          0       2       0       0       0
  3153 ;;      Totals:         0       4       0       0       0
  3154 ;;Total ram usage:        4 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    3
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _luciSemaforo
  3166  0AF8                     _luciSemaforo:	
  3167                           
  3168                           ;incstack = 0
  3169                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3170                           ;luciSemaforo@index stored from wreg
  3171  0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0AFA  00A7               	movwf	luciSemaforo@index
  3174  0AFB                     l4228:	
  3175                           
  3176                           ;main.c: 419: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 420: {;m
      +                          ain.c: 421:     switch (index)
  3177  0AFB  2B3A               	goto	l4240
  3178  0AFC                     l312:	
  3179                           ;main.c: 425:         {;main.c: 426:         case 0:
  3180                           
  3181                           
  3182                           ;main.c: 427:             PORTCbits.RC1 = 0;
  3183  0AFC  1087               	bcf	7,1	;volatile
  3184                           
  3185                           ;main.c: 428:             PORTCbits.RC3 = 0;
  3186  0AFD  1187               	bcf	7,3	;volatile
  3187                           
  3188                           ;main.c: 429:             PORTCbits.RC0 = 1;
  3189  0AFE  1407               	bsf	7,0	;volatile
  3190                           
  3191                           ;main.c: 430:             break;
  3192  0AFF  2B4A               	goto	l323
  3193  0B00                     l314:	
  3194                           ;main.c: 431:         case 1:
  3195                           
  3196                           
  3197                           ;main.c: 432:             PORTCbits.RC0 = 0;
  3198  0B00  1007               	bcf	7,0	;volatile
  3199                           
  3200                           ;main.c: 433:             PORTCbits.RC3 = 0;
  3201  0B01  1187               	bcf	7,3	;volatile
  3202                           
  3203                           ;main.c: 434:             PORTCbits.RC1 = 1;
  3204  0B02  1487               	bsf	7,1	;volatile
  3205                           
  3206                           ;main.c: 435:             break;
  3207  0B03  2B4A               	goto	l323
  3208  0B04                     l315:	
  3209                           ;main.c: 436:         case 2:
  3210                           
  3211                           
  3212                           ;main.c: 437:             PORTCbits.RC0 = 0;
  3213  0B04  1007               	bcf	7,0	;volatile
  3214                           
  3215                           ;main.c: 438:             PORTCbits.RC1 = 0;
  3216  0B05  1087               	bcf	7,1	;volatile
  3217                           
  3218                           ;main.c: 439:             PORTCbits.RC3 = 1;
  3219  0B06  1587               	bsf	7,3	;volatile
  3220                           
  3221                           ;main.c: 440:             break;
  3222  0B07  2B4A               	goto	l323
  3223  0B08                     l4232:	
  3224  0B08  0824               	movf	luciSemaforo@lux,w
  3225  0B09  00A5               	movwf	??_luciSemaforo
  3226  0B0A  01A6               	clrf	??_luciSemaforo+1
  3227                           
  3228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3229                           ; Switch size 1, requested type "simple"
  3230                           ; Number of cases is 1, Range of values is 0 to 0
  3231                           ; switch strategies available:
  3232                           ; Name         Instructions Cycles
  3233                           ; simple_byte            4     3 (average)
  3234                           ; direct_byte           11     8 (fixed)
  3235                           ; jumptable            260     6 (fixed)
  3236                           ;	Chosen strategy is simple_byte
  3237  0B0B  0826               	movf	??_luciSemaforo+1,w
  3238  0B0C  3A00               	xorlw	0	; case 0
  3239  0B0D  1903               	skipnz
  3240  0B0E  2B10               	goto	l4718
  3241  0B0F  2B4A               	goto	l323
  3242  0B10                     l4718:	
  3243                           
  3244                           ; Switch size 1, requested type "simple"
  3245                           ; Number of cases is 3, Range of values is 0 to 2
  3246                           ; switch strategies available:
  3247                           ; Name         Instructions Cycles
  3248                           ; simple_byte           10     6 (average)
  3249                           ; direct_byte           17     8 (fixed)
  3250                           ; jumptable            260     6 (fixed)
  3251                           ;	Chosen strategy is simple_byte
  3252  0B10  0825               	movf	??_luciSemaforo,w
  3253  0B11  3A00               	xorlw	0	; case 0
  3254  0B12  1903               	skipnz
  3255  0B13  2AFC               	goto	l312
  3256  0B14  3A01               	xorlw	1	; case 1
  3257  0B15  1903               	skipnz
  3258  0B16  2B00               	goto	l314
  3259  0B17  3A03               	xorlw	3	; case 2
  3260  0B18  1903               	skipnz
  3261  0B19  2B04               	goto	l315
  3262  0B1A  2B4A               	goto	l323
  3263  0B1B                     l319:	
  3264                           ;main.c: 446:         {;main.c: 447:         case 0:
  3265                           
  3266                           
  3267                           ;main.c: 448:             PORTBbits.RB1 = 0;
  3268  0B1B  1086               	bcf	6,1	;volatile
  3269                           
  3270                           ;main.c: 449:             PORTBbits.RB6 = 0;
  3271  0B1C  1306               	bcf	6,6	;volatile
  3272                           
  3273                           ;main.c: 450:             PORTBbits.RB7 = 1;
  3274  0B1D  1786               	bsf	6,7	;volatile
  3275                           
  3276                           ;main.c: 451:             break;
  3277  0B1E  2B4A               	goto	l323
  3278  0B1F                     l321:	
  3279                           ;main.c: 452:         case 1:
  3280                           
  3281                           
  3282                           ;main.c: 453:             PORTBbits.RB7 = 0;
  3283  0B1F  1386               	bcf	6,7	;volatile
  3284                           
  3285                           ;main.c: 454:             PORTBbits.RB6 = 0;
  3286  0B20  1306               	bcf	6,6	;volatile
  3287                           
  3288                           ;main.c: 455:             PORTBbits.RB1 = 1;
  3289  0B21  1486               	bsf	6,1	;volatile
  3290                           
  3291                           ;main.c: 456:             break;
  3292  0B22  2B4A               	goto	l323
  3293  0B23                     l322:	
  3294                           ;main.c: 457:         case 2:
  3295                           
  3296                           
  3297                           ;main.c: 458:             PORTBbits.RB7 = 0;
  3298  0B23  1386               	bcf	6,7	;volatile
  3299                           
  3300                           ;main.c: 459:             PORTBbits.RB1 = 0;
  3301  0B24  1086               	bcf	6,1	;volatile
  3302                           
  3303                           ;main.c: 460:             PORTBbits.RB6 = 1;
  3304  0B25  1706               	bsf	6,6	;volatile
  3305                           
  3306                           ;main.c: 461:             break;
  3307  0B26  2B4A               	goto	l323
  3308  0B27                     l4236:	
  3309  0B27  0824               	movf	luciSemaforo@lux,w
  3310  0B28  00A5               	movwf	??_luciSemaforo
  3311  0B29  01A6               	clrf	??_luciSemaforo+1
  3312                           
  3313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3314                           ; Switch size 1, requested type "simple"
  3315                           ; Number of cases is 1, Range of values is 0 to 0
  3316                           ; switch strategies available:
  3317                           ; Name         Instructions Cycles
  3318                           ; simple_byte            4     3 (average)
  3319                           ; direct_byte           11     8 (fixed)
  3320                           ; jumptable            260     6 (fixed)
  3321                           ;	Chosen strategy is simple_byte
  3322  0B2A  0826               	movf	??_luciSemaforo+1,w
  3323  0B2B  3A00               	xorlw	0	; case 0
  3324  0B2C  1903               	skipnz
  3325  0B2D  2B2F               	goto	l4720
  3326  0B2E  2B4A               	goto	l323
  3327  0B2F                     l4720:	
  3328                           
  3329                           ; Switch size 1, requested type "simple"
  3330                           ; Number of cases is 3, Range of values is 0 to 2
  3331                           ; switch strategies available:
  3332                           ; Name         Instructions Cycles
  3333                           ; simple_byte           10     6 (average)
  3334                           ; direct_byte           17     8 (fixed)
  3335                           ; jumptable            260     6 (fixed)
  3336                           ;	Chosen strategy is simple_byte
  3337  0B2F  0825               	movf	??_luciSemaforo,w
  3338  0B30  3A00               	xorlw	0	; case 0
  3339  0B31  1903               	skipnz
  3340  0B32  2B1B               	goto	l319
  3341  0B33  3A01               	xorlw	1	; case 1
  3342  0B34  1903               	skipnz
  3343  0B35  2B1F               	goto	l321
  3344  0B36  3A03               	xorlw	3	; case 2
  3345  0B37  1903               	skipnz
  3346  0B38  2B23               	goto	l322
  3347  0B39  2B4A               	goto	l323
  3348  0B3A                     l4240:	
  3349  0B3A  0827               	movf	luciSemaforo@index,w
  3350  0B3B  00A5               	movwf	??_luciSemaforo
  3351  0B3C  01A6               	clrf	??_luciSemaforo+1
  3352                           
  3353                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3354                           ; Switch size 1, requested type "simple"
  3355                           ; Number of cases is 1, Range of values is 0 to 0
  3356                           ; switch strategies available:
  3357                           ; Name         Instructions Cycles
  3358                           ; simple_byte            4     3 (average)
  3359                           ; direct_byte           11     8 (fixed)
  3360                           ; jumptable            260     6 (fixed)
  3361                           ;	Chosen strategy is simple_byte
  3362  0B3D  0826               	movf	??_luciSemaforo+1,w
  3363  0B3E  3A00               	xorlw	0	; case 0
  3364  0B3F  1903               	skipnz
  3365  0B40  2B42               	goto	l4722
  3366  0B41  2B4A               	goto	l323
  3367  0B42                     l4722:	
  3368                           
  3369                           ; Switch size 1, requested type "simple"
  3370                           ; Number of cases is 2, Range of values is 0 to 1
  3371                           ; switch strategies available:
  3372                           ; Name         Instructions Cycles
  3373                           ; simple_byte            7     4 (average)
  3374                           ; direct_byte           14     8 (fixed)
  3375                           ; jumptable            260     6 (fixed)
  3376                           ;	Chosen strategy is simple_byte
  3377  0B42  0825               	movf	??_luciSemaforo,w
  3378  0B43  3A00               	xorlw	0	; case 0
  3379  0B44  1903               	skipnz
  3380  0B45  2B08               	goto	l4232
  3381  0B46  3A01               	xorlw	1	; case 1
  3382  0B47  1903               	skipnz
  3383  0B48  2B27               	goto	l4236
  3384  0B49  2B4A               	goto	l323
  3385  0B4A                     l323:	
  3386  0B4A  0008               	return
  3387  0B4B                     __end_of_luciSemaforo:	
  3388                           
  3389                           	psect	text7
  3390  0963                     __ptext7:	
  3391 ;; *************** function _init_ADC *****************
  3392 ;; Defined at:
  3393 ;;		line 330 in file "main.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      void 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3407 ;;      Params:         0       0       0       0       0
  3408 ;;      Locals:         0       0       0       0       0
  3409 ;;      Temps:          0       1       0       0       0
  3410 ;;      Totals:         0       1       0       0       0
  3411 ;;Total ram usage:        1 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    3
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_main
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           
  3422                           ;psect for function _init_ADC
  3423  0963                     _init_ADC:	
  3424  0963                     l4184:	
  3425                           ;incstack = 0
  3426                           ; Regs used in _init_ADC: [wreg+status,2]
  3427                           
  3428                           
  3429                           ;main.c: 332:     TRISA = 0xE3;
  3430  0963  30E3               	movlw	227
  3431  0964  1683               	bsf	3,5	;RP0=1, select bank1
  3432  0965  1303               	bcf	3,6	;RP1=0, select bank1
  3433  0966  0085               	movwf	5	;volatile
  3434  0967                     l4186:	
  3435                           
  3436                           ;main.c: 333:     ADCON0 = 0x00;
  3437  0967  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0968  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0969  019F               	clrf	31	;volatile
  3440  096A                     l4188:	
  3441                           
  3442                           ;main.c: 334:     ADCON1 = 0x80;
  3443  096A  3080               	movlw	128
  3444  096B  1683               	bsf	3,5	;RP0=1, select bank1
  3445  096C  1303               	bcf	3,6	;RP1=0, select bank1
  3446  096D  009F               	movwf	31	;volatile
  3447  096E                     l4190:	
  3448                           
  3449                           ;main.c: 335:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3450  096E  3019               	movlw	25
  3451  096F  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0970  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0971  00A4               	movwf	??_init_ADC
  3454  0972                     u3947:	
  3455  0972  0BA4               	decfsz	??_init_ADC,f
  3456  0973  2972               	goto	u3947
  3457  0974  2975               	nop2
  3458  0975                     l266:	
  3459  0975  0008               	return
  3460  0976                     __end_of_init_ADC:	
  3461                           
  3462                           	psect	text8
  3463  0650                     __ptext8:	
  3464 ;; *************** function _UpdateTimes *****************
  3465 ;; Defined at:
  3466 ;;		line 4 in file "./CustomLib/TrafficLight.h"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  _semafori       1    wreg     PTR PTR struct .
  3469 ;;		 -> Semafori(8), 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  _semafori       1   23[BANK0 ] PTR PTR struct .
  3472 ;;		 -> Semafori(8), 
  3473 ;;  i               1   22[BANK0 ] unsigned char 
  3474 ;;  l               1   24[BANK0 ] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         0       0       0       0       0
  3485 ;;      Locals:         0       3       0       0       0
  3486 ;;      Temps:          0      18       0       0       0
  3487 ;;      Totals:         0      21       0       0       0
  3488 ;;Total ram usage:       21 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    3
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function _UpdateTimes
  3500  0650                     _UpdateTimes:	
  3501                           
  3502                           ;incstack = 0
  3503                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3504                           ;UpdateTimes@_semafori stored from wreg
  3505  0650  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0651  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0652  00B7               	movwf	UpdateTimes@_semafori
  3508  0653                     l4086:	
  3509                           
  3510                           ;./CustomLib/TrafficLight.h: 4: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 5: {;./CustomLib/TrafficLight.h: 7:     for (unsigned char l = 0; l < n_semafo
      +                          ri; l++)
  3511  0653  01B8               	clrf	UpdateTimes@l
  3512  0654                     l4092:	
  3513                           
  3514                           ;./CustomLib/TrafficLight.h: 8:     {;./CustomLib/TrafficLight.h: 9:         for(unsigne
      +                          d char i = 0; i < 3; i++)
  3515  0654  01B6               	clrf	UpdateTimes@i
  3516  0655                     l4098:	
  3517                           
  3518                           ;./CustomLib/TrafficLight.h: 10:         {;./CustomLib/TrafficLight.h: 11:             i
      +                          f( (*(_semafori)[l]).times[i] != (*(_semafori)[l]).new_times[i] )
  3519  0655  0838               	movf	UpdateTimes@l,w
  3520  0656  00A4               	movwf	??_UpdateTimes
  3521  0657  0724               	addwf	??_UpdateTimes,w
  3522  0658  0737               	addwf	UpdateTimes@_semafori,w
  3523  0659  00A5               	movwf	??_UpdateTimes+1
  3524  065A  0825               	movf	??_UpdateTimes+1,w
  3525  065B  0084               	movwf	4
  3526  065C  1383               	bcf	3,7	;select IRP bank0
  3527  065D  0800               	movf	0,w
  3528  065E  00A6               	movwf	??_UpdateTimes+2
  3529  065F  0A84               	incf	4,f
  3530  0660  0800               	movf	0,w
  3531  0661  00A7               	movwf	??_UpdateTimes+3
  3532  0662  0836               	movf	UpdateTimes@i,w
  3533  0663  00A8               	movwf	??_UpdateTimes+4
  3534  0664  0728               	addwf	??_UpdateTimes+4,w
  3535  0665  3E06               	addlw	6
  3536  0666  0726               	addwf	??_UpdateTimes+2,w
  3537  0667  00A9               	movwf	??_UpdateTimes+5
  3538  0668  0827               	movf	??_UpdateTimes+3,w
  3539  0669  1803               	skipnc
  3540  066A  3E01               	addlw	1
  3541  066B  00AA               	movwf	??_UpdateTimes+6
  3542  066C  0829               	movf	??_UpdateTimes+5,w
  3543  066D  0084               	movwf	4
  3544  066E  1783               	bsf	3,7
  3545  066F  1C2A               	btfss	??_UpdateTimes+6,0
  3546  0670  1383               	bcf	3,7
  3547  0671  0800               	movf	0,w
  3548  0672  00AB               	movwf	??_UpdateTimes+7
  3549  0673  0A84               	incf	4,f
  3550  0674  0800               	movf	0,w
  3551  0675  00AC               	movwf	??_UpdateTimes+8
  3552  0676  0838               	movf	UpdateTimes@l,w
  3553  0677  00AD               	movwf	??_UpdateTimes+9
  3554  0678  072D               	addwf	??_UpdateTimes+9,w
  3555  0679  0737               	addwf	UpdateTimes@_semafori,w
  3556  067A  00AE               	movwf	??_UpdateTimes+10
  3557  067B  082E               	movf	??_UpdateTimes+10,w
  3558  067C  0084               	movwf	4
  3559  067D  1383               	bcf	3,7	;select IRP bank0
  3560  067E  0800               	movf	0,w
  3561  067F  00AF               	movwf	??_UpdateTimes+11
  3562  0680  0A84               	incf	4,f
  3563  0681  0800               	movf	0,w
  3564  0682  00B0               	movwf	??_UpdateTimes+12
  3565  0683  0836               	movf	UpdateTimes@i,w
  3566  0684  00B1               	movwf	??_UpdateTimes+13
  3567  0685  0731               	addwf	??_UpdateTimes+13,w
  3568  0686  072F               	addwf	??_UpdateTimes+11,w
  3569  0687  00B2               	movwf	??_UpdateTimes+14
  3570  0688  0830               	movf	??_UpdateTimes+12,w
  3571  0689  1803               	skipnc
  3572  068A  3E01               	addlw	1
  3573  068B  00B3               	movwf	??_UpdateTimes+15
  3574  068C  0832               	movf	??_UpdateTimes+14,w
  3575  068D  0084               	movwf	4
  3576  068E  1783               	bsf	3,7
  3577  068F  1C33               	btfss	??_UpdateTimes+15,0
  3578  0690  1383               	bcf	3,7
  3579  0691  0800               	movf	0,w
  3580  0692  00B4               	movwf	??_UpdateTimes+16
  3581  0693  0A84               	incf	4,f
  3582  0694  0800               	movf	0,w
  3583  0695  00B5               	movwf	??_UpdateTimes+17
  3584  0696  082C               	movf	??_UpdateTimes+8,w
  3585  0697  0635               	xorwf	??_UpdateTimes+17,w
  3586  0698  1D03               	skipz
  3587  0699  2E9C               	goto	u3535
  3588  069A  082B               	movf	??_UpdateTimes+7,w
  3589  069B  0634               	xorwf	??_UpdateTimes+16,w
  3590  069C                     u3535:	
  3591  069C  1903               	skipnz
  3592  069D  2E9F               	goto	u3531
  3593  069E  2EA0               	goto	u3530
  3594  069F                     u3531:	
  3595  069F  2EE1               	goto	l4102
  3596  06A0                     u3530:	
  3597  06A0                     l4100:	
  3598                           
  3599                           ;./CustomLib/TrafficLight.h: 12:             {;./CustomLib/TrafficLight.h: 13:          
      +                                 (*(_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3600  06A0  0838               	movf	UpdateTimes@l,w
  3601  06A1  00A4               	movwf	??_UpdateTimes
  3602  06A2  0724               	addwf	??_UpdateTimes,w
  3603  06A3  0737               	addwf	UpdateTimes@_semafori,w
  3604  06A4  00A5               	movwf	??_UpdateTimes+1
  3605  06A5  0825               	movf	??_UpdateTimes+1,w
  3606  06A6  0084               	movwf	4
  3607  06A7  1383               	bcf	3,7	;select IRP bank0
  3608  06A8  0800               	movf	0,w
  3609  06A9  00A6               	movwf	??_UpdateTimes+2
  3610  06AA  0A84               	incf	4,f
  3611  06AB  0800               	movf	0,w
  3612  06AC  00A7               	movwf	??_UpdateTimes+3
  3613  06AD  0836               	movf	UpdateTimes@i,w
  3614  06AE  00A8               	movwf	??_UpdateTimes+4
  3615  06AF  0728               	addwf	??_UpdateTimes+4,w
  3616  06B0  3E06               	addlw	6
  3617  06B1  0726               	addwf	??_UpdateTimes+2,w
  3618  06B2  00A9               	movwf	??_UpdateTimes+5
  3619  06B3  0827               	movf	??_UpdateTimes+3,w
  3620  06B4  1803               	skipnc
  3621  06B5  3E01               	addlw	1
  3622  06B6  00AA               	movwf	??_UpdateTimes+6
  3623  06B7  0829               	movf	??_UpdateTimes+5,w
  3624  06B8  0084               	movwf	4
  3625  06B9  1783               	bsf	3,7
  3626  06BA  1C2A               	btfss	??_UpdateTimes+6,0
  3627  06BB  1383               	bcf	3,7
  3628  06BC  0800               	movf	0,w
  3629  06BD  00AB               	movwf	??_UpdateTimes+7
  3630  06BE  0A84               	incf	4,f
  3631  06BF  0800               	movf	0,w
  3632  06C0  00AC               	movwf	??_UpdateTimes+8
  3633  06C1  0838               	movf	UpdateTimes@l,w
  3634  06C2  00AD               	movwf	??_UpdateTimes+9
  3635  06C3  072D               	addwf	??_UpdateTimes+9,w
  3636  06C4  0737               	addwf	UpdateTimes@_semafori,w
  3637  06C5  00AE               	movwf	??_UpdateTimes+10
  3638  06C6  082E               	movf	??_UpdateTimes+10,w
  3639  06C7  0084               	movwf	4
  3640  06C8  1383               	bcf	3,7	;select IRP bank0
  3641  06C9  0800               	movf	0,w
  3642  06CA  00AF               	movwf	??_UpdateTimes+11
  3643  06CB  0A84               	incf	4,f
  3644  06CC  0800               	movf	0,w
  3645  06CD  00B0               	movwf	??_UpdateTimes+12
  3646  06CE  0836               	movf	UpdateTimes@i,w
  3647  06CF  00B1               	movwf	??_UpdateTimes+13
  3648  06D0  0731               	addwf	??_UpdateTimes+13,w
  3649  06D1  072F               	addwf	??_UpdateTimes+11,w
  3650  06D2  00B2               	movwf	??_UpdateTimes+14
  3651  06D3  0830               	movf	??_UpdateTimes+12,w
  3652  06D4  1803               	skipnc
  3653  06D5  3E01               	addlw	1
  3654  06D6  00B3               	movwf	??_UpdateTimes+15
  3655  06D7  0832               	movf	??_UpdateTimes+14,w
  3656  06D8  0084               	movwf	4
  3657  06D9  1783               	bsf	3,7
  3658  06DA  1C33               	btfss	??_UpdateTimes+15,0
  3659  06DB  1383               	bcf	3,7
  3660  06DC  082B               	movf	??_UpdateTimes+7,w
  3661  06DD  0080               	movwf	0
  3662  06DE  0A84               	incf	4,f
  3663  06DF  082C               	movf	??_UpdateTimes+8,w
  3664  06E0  0080               	movwf	0
  3665  06E1                     l4102:	
  3666                           
  3667                           ;./CustomLib/TrafficLight.h: 15:         }
  3668  06E1  3001               	movlw	1
  3669  06E2  00A4               	movwf	??_UpdateTimes
  3670  06E3  0824               	movf	??_UpdateTimes,w
  3671  06E4  07B6               	addwf	UpdateTimes@i,f
  3672  06E5                     l4104:	
  3673  06E5  3003               	movlw	3
  3674  06E6  0236               	subwf	UpdateTimes@i,w
  3675  06E7  1C03               	skipc
  3676  06E8  2EEA               	goto	u3541
  3677  06E9  2EEB               	goto	u3540
  3678  06EA                     u3541:	
  3679  06EA  2E55               	goto	l4098
  3680  06EB                     u3540:	
  3681  06EB                     l4106:	
  3682                           
  3683                           ;./CustomLib/TrafficLight.h: 17:         if( (*(_semafori)[l]).lux_select != (*(_semafor
      +                          i)[l]).new_lux_select )
  3684  06EB  0838               	movf	UpdateTimes@l,w
  3685  06EC  00A4               	movwf	??_UpdateTimes
  3686  06ED  0724               	addwf	??_UpdateTimes,w
  3687  06EE  0737               	addwf	UpdateTimes@_semafori,w
  3688  06EF  00A5               	movwf	??_UpdateTimes+1
  3689  06F0  0825               	movf	??_UpdateTimes+1,w
  3690  06F1  0084               	movwf	4
  3691  06F2  1383               	bcf	3,7	;select IRP bank0
  3692  06F3  0800               	movf	0,w
  3693  06F4  00A6               	movwf	??_UpdateTimes+2
  3694  06F5  0A84               	incf	4,f
  3695  06F6  0800               	movf	0,w
  3696  06F7  00A7               	movwf	??_UpdateTimes+3
  3697  06F8  0826               	movf	??_UpdateTimes+2,w
  3698  06F9  3E0D               	addlw	13
  3699  06FA  00A8               	movwf	??_UpdateTimes+4
  3700  06FB  0827               	movf	??_UpdateTimes+3,w
  3701  06FC  1803               	skipnc
  3702  06FD  3E01               	addlw	1
  3703  06FE  3E00               	addlw	0
  3704  06FF  00A9               	movwf	??_UpdateTimes+5
  3705  0700  0828               	movf	??_UpdateTimes+4,w
  3706  0701  0084               	movwf	4
  3707  0702  1783               	bsf	3,7
  3708  0703  1C29               	btfss	??_UpdateTimes+5,0
  3709  0704  1383               	bcf	3,7
  3710  0705  0800               	movf	0,w
  3711  0706  00AA               	movwf	??_UpdateTimes+6
  3712  0707  0838               	movf	UpdateTimes@l,w
  3713  0708  00AB               	movwf	??_UpdateTimes+7
  3714  0709  072B               	addwf	??_UpdateTimes+7,w
  3715  070A  0737               	addwf	UpdateTimes@_semafori,w
  3716  070B  00AC               	movwf	??_UpdateTimes+8
  3717  070C  082C               	movf	??_UpdateTimes+8,w
  3718  070D  0084               	movwf	4
  3719  070E  1383               	bcf	3,7	;select IRP bank0
  3720  070F  0800               	movf	0,w
  3721  0710  00AD               	movwf	??_UpdateTimes+9
  3722  0711  0A84               	incf	4,f
  3723  0712  0800               	movf	0,w
  3724  0713  00AE               	movwf	??_UpdateTimes+10
  3725  0714  082D               	movf	??_UpdateTimes+9,w
  3726  0715  3E0C               	addlw	12
  3727  0716  00AF               	movwf	??_UpdateTimes+11
  3728  0717  082E               	movf	??_UpdateTimes+10,w
  3729  0718  1803               	skipnc
  3730  0719  3E01               	addlw	1
  3731  071A  3E00               	addlw	0
  3732  071B  00B0               	movwf	??_UpdateTimes+12
  3733  071C  082F               	movf	??_UpdateTimes+11,w
  3734  071D  0084               	movwf	4
  3735  071E  1783               	bsf	3,7
  3736  071F  1C30               	btfss	??_UpdateTimes+12,0
  3737  0720  1383               	bcf	3,7
  3738  0721  0800               	movf	0,w
  3739  0722  062A               	xorwf	??_UpdateTimes+6,w
  3740  0723  1903               	skipnz
  3741  0724  2F26               	goto	u3551
  3742  0725  2F27               	goto	u3550
  3743  0726                     u3551:	
  3744  0726  2F5F               	goto	l4110
  3745  0727                     u3550:	
  3746  0727                     l4108:	
  3747                           
  3748                           ;./CustomLib/TrafficLight.h: 18:         {;./CustomLib/TrafficLight.h: 19:             (
      +                          *(_semafori)[l]).lux_select = (*(_semafori)[l]).new_lux_select;
  3749  0727  0838               	movf	UpdateTimes@l,w
  3750  0728  00A4               	movwf	??_UpdateTimes
  3751  0729  0724               	addwf	??_UpdateTimes,w
  3752  072A  0737               	addwf	UpdateTimes@_semafori,w
  3753  072B  00A5               	movwf	??_UpdateTimes+1
  3754  072C  0825               	movf	??_UpdateTimes+1,w
  3755  072D  0084               	movwf	4
  3756  072E  1383               	bcf	3,7	;select IRP bank0
  3757  072F  0800               	movf	0,w
  3758  0730  00A6               	movwf	??_UpdateTimes+2
  3759  0731  0A84               	incf	4,f
  3760  0732  0800               	movf	0,w
  3761  0733  00A7               	movwf	??_UpdateTimes+3
  3762  0734  0826               	movf	??_UpdateTimes+2,w
  3763  0735  3E0D               	addlw	13
  3764  0736  00A8               	movwf	??_UpdateTimes+4
  3765  0737  0827               	movf	??_UpdateTimes+3,w
  3766  0738  1803               	skipnc
  3767  0739  3E01               	addlw	1
  3768  073A  3E00               	addlw	0
  3769  073B  00A9               	movwf	??_UpdateTimes+5
  3770  073C  0828               	movf	??_UpdateTimes+4,w
  3771  073D  0084               	movwf	4
  3772  073E  1783               	bsf	3,7
  3773  073F  1C29               	btfss	??_UpdateTimes+5,0
  3774  0740  1383               	bcf	3,7
  3775  0741  0800               	movf	0,w
  3776  0742  00AA               	movwf	??_UpdateTimes+6
  3777  0743  0838               	movf	UpdateTimes@l,w
  3778  0744  00AB               	movwf	??_UpdateTimes+7
  3779  0745  072B               	addwf	??_UpdateTimes+7,w
  3780  0746  0737               	addwf	UpdateTimes@_semafori,w
  3781  0747  00AC               	movwf	??_UpdateTimes+8
  3782  0748  082C               	movf	??_UpdateTimes+8,w
  3783  0749  0084               	movwf	4
  3784  074A  1383               	bcf	3,7	;select IRP bank0
  3785  074B  0800               	movf	0,w
  3786  074C  00AD               	movwf	??_UpdateTimes+9
  3787  074D  0A84               	incf	4,f
  3788  074E  0800               	movf	0,w
  3789  074F  00AE               	movwf	??_UpdateTimes+10
  3790  0750  082D               	movf	??_UpdateTimes+9,w
  3791  0751  3E0C               	addlw	12
  3792  0752  00AF               	movwf	??_UpdateTimes+11
  3793  0753  082E               	movf	??_UpdateTimes+10,w
  3794  0754  1803               	skipnc
  3795  0755  3E01               	addlw	1
  3796  0756  3E00               	addlw	0
  3797  0757  00B0               	movwf	??_UpdateTimes+12
  3798  0758  082F               	movf	??_UpdateTimes+11,w
  3799  0759  0084               	movwf	4
  3800  075A  1783               	bsf	3,7
  3801  075B  1C30               	btfss	??_UpdateTimes+12,0
  3802  075C  1383               	bcf	3,7
  3803  075D  082A               	movf	??_UpdateTimes+6,w
  3804  075E  0080               	movwf	0
  3805  075F                     l4110:	
  3806                           
  3807                           ;./CustomLib/TrafficLight.h: 21:     }
  3808  075F  3001               	movlw	1
  3809  0760  00A4               	movwf	??_UpdateTimes
  3810  0761  0824               	movf	??_UpdateTimes,w
  3811  0762  07B8               	addwf	UpdateTimes@l,f
  3812  0763                     l4112:	
  3813  0763  3002               	movlw	2
  3814  0764  0238               	subwf	UpdateTimes@l,w
  3815  0765  1C03               	skipc
  3816  0766  2F68               	goto	u3561
  3817  0767  2F69               	goto	u3560
  3818  0768                     u3561:	
  3819  0768  2E54               	goto	l4092
  3820  0769                     u3560:	
  3821  0769                     l125:	
  3822  0769  0008               	return
  3823  076A                     __end_of_UpdateTimes:	
  3824                           
  3825                           	psect	text9
  3826  0A2C                     __ptext9:	
  3827 ;; *************** function _UART_Init *****************
  3828 ;; Defined at:
  3829 ;;		line 349 in file "main.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  baudrate        2   19[BANK0 ] int 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, pclath, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       2       0       0       0
  3844 ;;      Locals:         0       0       0       0       0
  3845 ;;      Temps:          0       4       0       0       0
  3846 ;;      Totals:         0       6       0       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    4
  3850 ;; This function calls:
  3851 ;;		___aldiv
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function _UART_Init
  3859  0A2C                     _UART_Init:	
  3860  0A2C                     l4192:	
  3861                           ;incstack = 0
  3862                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3863                           
  3864                           
  3865                           ;main.c: 349: void UART_Init(int baudrate);main.c: 350: {;main.c: 351:     TRISCbits.TRI
      +                          SC6 = 0;
  3866  0A2C  1683               	bsf	3,5	;RP0=1, select bank1
  3867  0A2D  1303               	bcf	3,6	;RP1=0, select bank1
  3868  0A2E  1307               	bcf	7,6	;volatile
  3869                           
  3870                           ;main.c: 352:     TXSTAbits.TXEN = 1;
  3871  0A2F  1698               	bsf	24,5	;volatile
  3872                           
  3873                           ;main.c: 353:     RCSTAbits.SPEN = 1;
  3874  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  3876  0A32  1798               	bsf	24,7	;volatile
  3877                           
  3878                           ;main.c: 354:     RCSTAbits.CREN = 1;
  3879  0A33  1618               	bsf	24,4	;volatile
  3880  0A34                     l4194:	
  3881                           
  3882                           ;main.c: 355:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3883  0A34  0833               	movf	UART_Init@baudrate,w
  3884  0A35  00B5               	movwf	??_UART_Init
  3885  0A36  0834               	movf	UART_Init@baudrate+1,w
  3886  0A37  00B6               	movwf	??_UART_Init+1
  3887  0A38  3000               	movlw	0
  3888  0A39  1BB6               	btfsc	??_UART_Init+1,7
  3889  0A3A  30FF               	movlw	255
  3890  0A3B  00B7               	movwf	??_UART_Init+2
  3891  0A3C  00B8               	movwf	??_UART_Init+3
  3892  0A3D  3006               	movlw	6
  3893  0A3E                     u3625:	
  3894  0A3E  1003               	clrc
  3895  0A3F  0DB5               	rlf	??_UART_Init,f
  3896  0A40  0DB6               	rlf	??_UART_Init+1,f
  3897  0A41  0DB7               	rlf	??_UART_Init+2,f
  3898  0A42  0DB8               	rlf	??_UART_Init+3,f
  3899  0A43                     u3620:	
  3900  0A43  3EFF               	addlw	-1
  3901  0A44  1D03               	skipz
  3902  0A45  2A3E               	goto	u3625
  3903  0A46  0838               	movf	??_UART_Init+3,w
  3904  0A47  00A7               	movwf	___aldiv@divisor+3
  3905  0A48  0837               	movf	??_UART_Init+2,w
  3906  0A49  00A6               	movwf	___aldiv@divisor+2
  3907  0A4A  0836               	movf	??_UART_Init+1,w
  3908  0A4B  00A5               	movwf	___aldiv@divisor+1
  3909  0A4C  0835               	movf	??_UART_Init,w
  3910  0A4D  00A4               	movwf	___aldiv@divisor
  3911  0A4E  3001               	movlw	1
  3912  0A4F  00AB               	movwf	___aldiv@dividend+3
  3913  0A50  30E8               	movlw	232
  3914  0A51  00AA               	movwf	___aldiv@dividend+2
  3915  0A52  3048               	movlw	72
  3916  0A53  00A9               	movwf	___aldiv@dividend+1
  3917  0A54  3000               	movlw	0
  3918  0A55  00A8               	movwf	___aldiv@dividend
  3919  0A56  120A  158A  2521  120A  158A  	fcall	___aldiv
  3920  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  3921  0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  3922  0A5D  0824               	movf	?___aldiv,w
  3923  0A5E  3EFF               	addlw	255
  3924  0A5F  1683               	bsf	3,5	;RP0=1, select bank1
  3925  0A60  1303               	bcf	3,6	;RP1=0, select bank1
  3926  0A61  0099               	movwf	25	;volatile
  3927  0A62                     l4196:	
  3928                           
  3929                           ;main.c: 356:     INTCONbits.GIE = 1;
  3930  0A62  178B               	bsf	11,7	;volatile
  3931  0A63                     l4198:	
  3932                           
  3933                           ;main.c: 357:     INTCONbits.PEIE = 1;
  3934  0A63  170B               	bsf	11,6	;volatile
  3935  0A64                     l4200:	
  3936                           
  3937                           ;main.c: 358:     PIE1bits.RCIE = 1;
  3938  0A64  168C               	bsf	12,5	;volatile
  3939  0A65                     l275:	
  3940  0A65  0008               	return
  3941  0A66                     __end_of_UART_Init:	
  3942                           
  3943                           	psect	text10
  3944  0D21                     __ptext10:	
  3945 ;; *************** function ___aldiv *****************
  3946 ;; Defined at:
  3947 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  divisor         4    4[BANK0 ] long 
  3950 ;;  dividend        4    8[BANK0 ] long 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  quotient        4   15[BANK0 ] long 
  3953 ;;  sign            1   14[BANK0 ] unsigned char 
  3954 ;;  counter         1   13[BANK0 ] unsigned char 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  4    4[BANK0 ] long 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3964 ;;      Params:         0       8       0       0       0
  3965 ;;      Locals:         0       6       0       0       0
  3966 ;;      Temps:          0       1       0       0       0
  3967 ;;      Totals:         0      15       0       0       0
  3968 ;;Total ram usage:       15 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    3
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_UART_Init
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function ___aldiv
  3980  0D21                     ___aldiv:	
  3981  0D21                     l3964:	
  3982                           ;incstack = 0
  3983                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3984                           
  3985  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0D23  01AE               	clrf	___aldiv@sign
  3988  0D24                     l3966:	
  3989  0D24  1FA7               	btfss	___aldiv@divisor+3,7
  3990  0D25  2D27               	goto	u3241
  3991  0D26  2D28               	goto	u3240
  3992  0D27                     u3241:	
  3993  0D27  2D35               	goto	l505
  3994  0D28                     u3240:	
  3995  0D28                     l3968:	
  3996  0D28  09A4               	comf	___aldiv@divisor,f
  3997  0D29  09A5               	comf	___aldiv@divisor+1,f
  3998  0D2A  09A6               	comf	___aldiv@divisor+2,f
  3999  0D2B  09A7               	comf	___aldiv@divisor+3,f
  4000  0D2C  0AA4               	incf	___aldiv@divisor,f
  4001  0D2D  1903               	skipnz
  4002  0D2E  0AA5               	incf	___aldiv@divisor+1,f
  4003  0D2F  1903               	skipnz
  4004  0D30  0AA6               	incf	___aldiv@divisor+2,f
  4005  0D31  1903               	skipnz
  4006  0D32  0AA7               	incf	___aldiv@divisor+3,f
  4007  0D33  01AE               	clrf	___aldiv@sign
  4008  0D34  0AAE               	incf	___aldiv@sign,f
  4009  0D35                     l505:	
  4010  0D35  1FAB               	btfss	___aldiv@dividend+3,7
  4011  0D36  2D38               	goto	u3251
  4012  0D37  2D39               	goto	u3250
  4013  0D38                     u3251:	
  4014  0D38  2D48               	goto	l3974
  4015  0D39                     u3250:	
  4016  0D39                     l3970:	
  4017  0D39  09A8               	comf	___aldiv@dividend,f
  4018  0D3A  09A9               	comf	___aldiv@dividend+1,f
  4019  0D3B  09AA               	comf	___aldiv@dividend+2,f
  4020  0D3C  09AB               	comf	___aldiv@dividend+3,f
  4021  0D3D  0AA8               	incf	___aldiv@dividend,f
  4022  0D3E  1903               	skipnz
  4023  0D3F  0AA9               	incf	___aldiv@dividend+1,f
  4024  0D40  1903               	skipnz
  4025  0D41  0AAA               	incf	___aldiv@dividend+2,f
  4026  0D42  1903               	skipnz
  4027  0D43  0AAB               	incf	___aldiv@dividend+3,f
  4028  0D44                     l3972:	
  4029  0D44  3001               	movlw	1
  4030  0D45  00AC               	movwf	??___aldiv
  4031  0D46  082C               	movf	??___aldiv,w
  4032  0D47  06AE               	xorwf	___aldiv@sign,f
  4033  0D48                     l3974:	
  4034  0D48  3000               	movlw	0
  4035  0D49  00B2               	movwf	___aldiv@quotient+3
  4036  0D4A  3000               	movlw	0
  4037  0D4B  00B1               	movwf	___aldiv@quotient+2
  4038  0D4C  3000               	movlw	0
  4039  0D4D  00B0               	movwf	___aldiv@quotient+1
  4040  0D4E  3000               	movlw	0
  4041  0D4F  00AF               	movwf	___aldiv@quotient
  4042  0D50                     l3976:	
  4043  0D50  0827               	movf	___aldiv@divisor+3,w
  4044  0D51  0426               	iorwf	___aldiv@divisor+2,w
  4045  0D52  0425               	iorwf	___aldiv@divisor+1,w
  4046  0D53  0424               	iorwf	___aldiv@divisor,w
  4047  0D54  1903               	skipnz
  4048  0D55  2D57               	goto	u3261
  4049  0D56  2D58               	goto	u3260
  4050  0D57                     u3261:	
  4051  0D57  2DA5               	goto	l3996
  4052  0D58                     u3260:	
  4053  0D58                     l3978:	
  4054  0D58  01AD               	clrf	___aldiv@counter
  4055  0D59  0AAD               	incf	___aldiv@counter,f
  4056  0D5A  2D68               	goto	l3982
  4057  0D5B                     l3980:	
  4058  0D5B  3001               	movlw	1
  4059  0D5C  00AC               	movwf	??___aldiv
  4060  0D5D                     u3275:	
  4061  0D5D  1003               	clrc
  4062  0D5E  0DA4               	rlf	___aldiv@divisor,f
  4063  0D5F  0DA5               	rlf	___aldiv@divisor+1,f
  4064  0D60  0DA6               	rlf	___aldiv@divisor+2,f
  4065  0D61  0DA7               	rlf	___aldiv@divisor+3,f
  4066  0D62  0BAC               	decfsz	??___aldiv,f
  4067  0D63  2D5D               	goto	u3275
  4068  0D64  3001               	movlw	1
  4069  0D65  00AC               	movwf	??___aldiv
  4070  0D66  082C               	movf	??___aldiv,w
  4071  0D67  07AD               	addwf	___aldiv@counter,f
  4072  0D68                     l3982:	
  4073  0D68  1FA7               	btfss	___aldiv@divisor+3,7
  4074  0D69  2D6B               	goto	u3281
  4075  0D6A  2D6C               	goto	u3280
  4076  0D6B                     u3281:	
  4077  0D6B  2D5B               	goto	l3980
  4078  0D6C                     u3280:	
  4079  0D6C                     l3984:	
  4080  0D6C  3001               	movlw	1
  4081  0D6D  00AC               	movwf	??___aldiv
  4082  0D6E                     u3295:	
  4083  0D6E  1003               	clrc
  4084  0D6F  0DAF               	rlf	___aldiv@quotient,f
  4085  0D70  0DB0               	rlf	___aldiv@quotient+1,f
  4086  0D71  0DB1               	rlf	___aldiv@quotient+2,f
  4087  0D72  0DB2               	rlf	___aldiv@quotient+3,f
  4088  0D73  0BAC               	decfsz	??___aldiv,f
  4089  0D74  2D6E               	goto	u3295
  4090  0D75                     l3986:	
  4091  0D75  0827               	movf	___aldiv@divisor+3,w
  4092  0D76  022B               	subwf	___aldiv@dividend+3,w
  4093  0D77  1D03               	skipz
  4094  0D78  2D83               	goto	u3305
  4095  0D79  0826               	movf	___aldiv@divisor+2,w
  4096  0D7A  022A               	subwf	___aldiv@dividend+2,w
  4097  0D7B  1D03               	skipz
  4098  0D7C  2D83               	goto	u3305
  4099  0D7D  0825               	movf	___aldiv@divisor+1,w
  4100  0D7E  0229               	subwf	___aldiv@dividend+1,w
  4101  0D7F  1D03               	skipz
  4102  0D80  2D83               	goto	u3305
  4103  0D81  0824               	movf	___aldiv@divisor,w
  4104  0D82  0228               	subwf	___aldiv@dividend,w
  4105  0D83                     u3305:	
  4106  0D83  1C03               	skipc
  4107  0D84  2D86               	goto	u3301
  4108  0D85  2D87               	goto	u3300
  4109  0D86                     u3301:	
  4110  0D86  2D96               	goto	l3992
  4111  0D87                     u3300:	
  4112  0D87                     l3988:	
  4113  0D87  0824               	movf	___aldiv@divisor,w
  4114  0D88  02A8               	subwf	___aldiv@dividend,f
  4115  0D89  0825               	movf	___aldiv@divisor+1,w
  4116  0D8A  1C03               	skipc
  4117  0D8B  0F25               	incfsz	___aldiv@divisor+1,w
  4118  0D8C  02A9               	subwf	___aldiv@dividend+1,f
  4119  0D8D  0826               	movf	___aldiv@divisor+2,w
  4120  0D8E  1C03               	skipc
  4121  0D8F  0F26               	incfsz	___aldiv@divisor+2,w
  4122  0D90  02AA               	subwf	___aldiv@dividend+2,f
  4123  0D91  0827               	movf	___aldiv@divisor+3,w
  4124  0D92  1C03               	skipc
  4125  0D93  0F27               	incfsz	___aldiv@divisor+3,w
  4126  0D94  02AB               	subwf	___aldiv@dividend+3,f
  4127  0D95                     l3990:	
  4128  0D95  142F               	bsf	___aldiv@quotient,0
  4129  0D96                     l3992:	
  4130  0D96  3001               	movlw	1
  4131  0D97                     u3315:	
  4132  0D97  1003               	clrc
  4133  0D98  0CA7               	rrf	___aldiv@divisor+3,f
  4134  0D99  0CA6               	rrf	___aldiv@divisor+2,f
  4135  0D9A  0CA5               	rrf	___aldiv@divisor+1,f
  4136  0D9B  0CA4               	rrf	___aldiv@divisor,f
  4137  0D9C  3EFF               	addlw	-1
  4138  0D9D  1D03               	skipz
  4139  0D9E  2D97               	goto	u3315
  4140  0D9F                     l3994:	
  4141  0D9F  3001               	movlw	1
  4142  0DA0  02AD               	subwf	___aldiv@counter,f
  4143  0DA1  1D03               	btfss	3,2
  4144  0DA2  2DA4               	goto	u3321
  4145  0DA3  2DA5               	goto	u3320
  4146  0DA4                     u3321:	
  4147  0DA4  2D6C               	goto	l3984
  4148  0DA5                     u3320:	
  4149  0DA5                     l3996:	
  4150  0DA5  082E               	movf	___aldiv@sign,w
  4151  0DA6  1903               	btfsc	3,2
  4152  0DA7  2DA9               	goto	u3331
  4153  0DA8  2DAA               	goto	u3330
  4154  0DA9                     u3331:	
  4155  0DA9  2DB5               	goto	l4000
  4156  0DAA                     u3330:	
  4157  0DAA                     l3998:	
  4158  0DAA  09AF               	comf	___aldiv@quotient,f
  4159  0DAB  09B0               	comf	___aldiv@quotient+1,f
  4160  0DAC  09B1               	comf	___aldiv@quotient+2,f
  4161  0DAD  09B2               	comf	___aldiv@quotient+3,f
  4162  0DAE  0AAF               	incf	___aldiv@quotient,f
  4163  0DAF  1903               	skipnz
  4164  0DB0  0AB0               	incf	___aldiv@quotient+1,f
  4165  0DB1  1903               	skipnz
  4166  0DB2  0AB1               	incf	___aldiv@quotient+2,f
  4167  0DB3  1903               	skipnz
  4168  0DB4  0AB2               	incf	___aldiv@quotient+3,f
  4169  0DB5                     l4000:	
  4170  0DB5  0832               	movf	___aldiv@quotient+3,w
  4171  0DB6  00A7               	movwf	?___aldiv+3
  4172  0DB7  0831               	movf	___aldiv@quotient+2,w
  4173  0DB8  00A6               	movwf	?___aldiv+2
  4174  0DB9  0830               	movf	___aldiv@quotient+1,w
  4175  0DBA  00A5               	movwf	?___aldiv+1
  4176  0DBB  082F               	movf	___aldiv@quotient,w
  4177  0DBC  00A4               	movwf	?___aldiv
  4178  0DBD                     l515:	
  4179  0DBD  0008               	return
  4180  0DBE                     __end_of___aldiv:	
  4181                           
  4182                           	psect	text11
  4183  0DBE                     __ptext11:	
  4184 ;; *************** function _ShowDigitsOnDisplay *****************
  4185 ;; Defined at:
  4186 ;;		line 494 in file "main.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  display_inde    1   13[BANK0 ] unsigned char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4200 ;;      Params:         0       0       0       0       0
  4201 ;;      Locals:         0       1       0       0       0
  4202 ;;      Temps:          0       2       0       0       0
  4203 ;;      Totals:         0       3       0       0       0
  4204 ;;Total ram usage:        3 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    4
  4207 ;; This function calls:
  4208 ;;		_SetDisplay
  4209 ;;		___awmod
  4210 ;; This function is called by:
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _ShowDigitsOnDisplay
  4217  0DBE                     _ShowDigitsOnDisplay:	
  4218  0DBE                     l4260:	
  4219                           ;incstack = 0
  4220                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4221                           
  4222                           
  4223                           ;main.c: 496:     for(unsigned char display_index=0; display_index<n_semafori; display_i
      +                          ndex++)
  4224  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  4225  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  4226  0DC0  01AD               	clrf	ShowDigitsOnDisplay@display_index
  4227  0DC1  2E35               	goto	l4280
  4228  0DC2                     l4266:	
  4229                           
  4230                           ;main.c: 501:             if ( (*DigitsArr[display_index]).centinaia > 0 )
  4231  0DC2  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4232  0DC3  3E69               	addlw	(low (_DigitsArr| 0))& (0+255)
  4233  0DC4  0084               	movwf	4
  4234  0DC5  1383               	bcf	3,7	;select IRP bank0
  4235  0DC6  0800               	movf	0,w
  4236  0DC7  0084               	movwf	4
  4237  0DC8  0800               	movf	0,w
  4238  0DC9  1903               	btfsc	3,2
  4239  0DCA  2DCC               	goto	u3661
  4240  0DCB  2DCD               	goto	u3660
  4241  0DCC                     u3661:	
  4242  0DCC  2E48               	goto	l4282
  4243  0DCD                     u3660:	
  4244  0DCD                     l4268:	
  4245                           
  4246                           ;main.c: 502:             {;main.c: 503:                 SetDisplay(display_index, 1, 0,
      +                           0, display[(*DigitsArr[display_index]).centinaia]);
  4247  0DCD  01A4               	clrf	SetDisplay@d1
  4248  0DCE  0AA4               	incf	SetDisplay@d1,f
  4249  0DCF  01A5               	clrf	SetDisplay@d2
  4250  0DD0  01A6               	clrf	SetDisplay@d3
  4251  0DD1  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4252  0DD2  3E69               	addlw	(low (_DigitsArr| 0))& (0+255)
  4253  0DD3  0084               	movwf	4
  4254  0DD4  0800               	movf	0,w
  4255  0DD5  0084               	movwf	4
  4256  0DD6  0800               	movf	0,w
  4257  0DD7  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4258  0DD8  0084               	movwf	4
  4259  0DD9  120A  158A  2000  120A  158A  	fcall	stringdir
  4260  0DDE  00AB               	movwf	??_ShowDigitsOnDisplay
  4261  0DDF  082B               	movf	??_ShowDigitsOnDisplay,w
  4262  0DE0  00A7               	movwf	SetDisplay@value
  4263  0DE1  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4264  0DE2  120A  158A  234B  120A  158A  	fcall	_SetDisplay
  4265  0DE7  2E48               	goto	l4282
  4266  0DE8                     l4270:	
  4267                           
  4268                           ;main.c: 507:             if ( (*DigitsArr[display_index]).decine > 0 || (*DigitsArr[dis
      +                          play_index]).centinaia > 0 )
  4269  0DE8  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4270  0DE9  3E69               	addlw	(low (_DigitsArr| 0))& (0+255)
  4271  0DEA  0084               	movwf	4
  4272  0DEB  1383               	bcf	3,7	;select IRP bank0
  4273  0DEC  0A00               	incf	0,w
  4274  0DED  0084               	movwf	4
  4275  0DEE  0800               	movf	0,w
  4276  0DEF  1D03               	btfss	3,2
  4277  0DF0  2DF2               	goto	u3671
  4278  0DF1  2DF3               	goto	u3670
  4279  0DF2                     u3671:	
  4280  0DF2  2DFD               	goto	l4274
  4281  0DF3                     u3670:	
  4282  0DF3                     l4272:	
  4283  0DF3  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4284  0DF4  3E69               	addlw	(low (_DigitsArr| 0))& (0+255)
  4285  0DF5  0084               	movwf	4
  4286  0DF6  0800               	movf	0,w
  4287  0DF7  0084               	movwf	4
  4288  0DF8  0800               	movf	0,w
  4289  0DF9  1903               	btfsc	3,2
  4290  0DFA  2DFC               	goto	u3681
  4291  0DFB  2DFD               	goto	u3680
  4292  0DFC                     u3681:	
  4293  0DFC  2E48               	goto	l4282
  4294  0DFD                     u3680:	
  4295  0DFD                     l4274:	
  4296                           
  4297                           ;main.c: 508:             {;main.c: 509:                 SetDisplay(display_index, 0, 1,
      +                           0, display[(*DigitsArr[display_index]).decine]);
  4298  0DFD  01A4               	clrf	SetDisplay@d1
  4299  0DFE  01A5               	clrf	SetDisplay@d2
  4300  0DFF  0AA5               	incf	SetDisplay@d2,f
  4301  0E00  01A6               	clrf	SetDisplay@d3
  4302  0E01  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4303  0E02  3E69               	addlw	(low (_DigitsArr| 0))& (0+255)
  4304  0E03  0084               	movwf	4
  4305  0E04  0A00               	incf	0,w
  4306  0E05  0084               	movwf	4
  4307  0E06  0800               	movf	0,w
  4308  0E07  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4309  0E08  0084               	movwf	4
  4310  0E09  120A  158A  2000  120A  158A  	fcall	stringdir
  4311  0E0E  00AB               	movwf	??_ShowDigitsOnDisplay
  4312  0E0F  082B               	movf	??_ShowDigitsOnDisplay,w
  4313  0E10  00A7               	movwf	SetDisplay@value
  4314  0E11  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4315  0E12  120A  158A  234B  120A  158A  	fcall	_SetDisplay
  4316  0E17  2E48               	goto	l4282
  4317  0E18                     l4276:	
  4318                           
  4319                           ;main.c: 513:             SetDisplay(display_index, 0, 0, 1, display[(*DigitsArr[display
      +                          _index]).unita]);
  4320  0E18  01A4               	clrf	SetDisplay@d1
  4321  0E19  01A5               	clrf	SetDisplay@d2
  4322  0E1A  01A6               	clrf	SetDisplay@d3
  4323  0E1B  0AA6               	incf	SetDisplay@d3,f
  4324  0E1C  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4325  0E1D  3E69               	addlw	(low (_DigitsArr| 0))& (0+255)
  4326  0E1E  0084               	movwf	4
  4327  0E1F  1383               	bcf	3,7	;select IRP bank0
  4328  0E20  0800               	movf	0,w
  4329  0E21  3E02               	addlw	2
  4330  0E22  0084               	movwf	4
  4331  0E23  0800               	movf	0,w
  4332  0E24  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4333  0E25  0084               	movwf	4
  4334  0E26  120A  158A  2000  120A  158A  	fcall	stringdir
  4335  0E2B  00AB               	movwf	??_ShowDigitsOnDisplay
  4336  0E2C  082B               	movf	??_ShowDigitsOnDisplay,w
  4337  0E2D  00A7               	movwf	SetDisplay@value
  4338  0E2E  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4339  0E2F  120A  158A  234B  120A  158A  	fcall	_SetDisplay
  4340                           
  4341                           ;main.c: 514:             break;
  4342  0E34  2E48               	goto	l4282
  4343  0E35                     l4280:	
  4344  0E35  0850               	movf	_disp,w
  4345  0E36  00AB               	movwf	??_ShowDigitsOnDisplay
  4346  0E37  01AC               	clrf	??_ShowDigitsOnDisplay+1
  4347                           
  4348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4349                           ; Switch size 1, requested type "simple"
  4350                           ; Number of cases is 1, Range of values is 0 to 0
  4351                           ; switch strategies available:
  4352                           ; Name         Instructions Cycles
  4353                           ; simple_byte            4     3 (average)
  4354                           ; direct_byte           11     8 (fixed)
  4355                           ; jumptable            260     6 (fixed)
  4356                           ;	Chosen strategy is simple_byte
  4357  0E38  082C               	movf	??_ShowDigitsOnDisplay+1,w
  4358  0E39  3A00               	xorlw	0	; case 0
  4359  0E3A  1903               	skipnz
  4360  0E3B  2E3D               	goto	l4724
  4361  0E3C  2E48               	goto	l4282
  4362  0E3D                     l4724:	
  4363                           
  4364                           ; Switch size 1, requested type "simple"
  4365                           ; Number of cases is 3, Range of values is 0 to 2
  4366                           ; switch strategies available:
  4367                           ; Name         Instructions Cycles
  4368                           ; simple_byte           10     6 (average)
  4369                           ; direct_byte           17     8 (fixed)
  4370                           ; jumptable            260     6 (fixed)
  4371                           ;	Chosen strategy is simple_byte
  4372  0E3D  082B               	movf	??_ShowDigitsOnDisplay,w
  4373  0E3E  3A00               	xorlw	0	; case 0
  4374  0E3F  1903               	skipnz
  4375  0E40  2DC2               	goto	l4266
  4376  0E41  3A01               	xorlw	1	; case 1
  4377  0E42  1903               	skipnz
  4378  0E43  2DE8               	goto	l4270
  4379  0E44  3A03               	xorlw	3	; case 2
  4380  0E45  1903               	skipnz
  4381  0E46  2E18               	goto	l4276
  4382  0E47  2E48               	goto	l4282
  4383  0E48                     l4282:	
  4384                           
  4385                           ;main.c: 516:     }
  4386  0E48  3001               	movlw	1
  4387  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0E4B  00AB               	movwf	??_ShowDigitsOnDisplay
  4390  0E4C  082B               	movf	??_ShowDigitsOnDisplay,w
  4391  0E4D  07AD               	addwf	ShowDigitsOnDisplay@display_index,f
  4392  0E4E                     l4284:	
  4393  0E4E  3002               	movlw	2
  4394  0E4F  022D               	subwf	ShowDigitsOnDisplay@display_index,w
  4395  0E50  1C03               	skipc
  4396  0E51  2E53               	goto	u3691
  4397  0E52  2E54               	goto	u3690
  4398  0E53                     u3691:	
  4399  0E53  2E35               	goto	l4280
  4400  0E54                     u3690:	
  4401  0E54                     l4286:	
  4402                           
  4403                           ;main.c: 517:     disp = (disp + 1) % 3;
  4404  0E54  3003               	movlw	3
  4405  0E55  00A4               	movwf	___awmod@divisor
  4406  0E56  3000               	movlw	0
  4407  0E57  00A5               	movwf	___awmod@divisor+1
  4408  0E58  0850               	movf	_disp,w
  4409  0E59  3E01               	addlw	1
  4410  0E5A  00A6               	movwf	___awmod@dividend
  4411  0E5B  3000               	movlw	0
  4412  0E5C  1803               	skipnc
  4413  0E5D  3001               	movlw	1
  4414  0E5E  00A7               	movwf	___awmod@dividend+1
  4415  0E5F  120A  158A  23F8  120A  158A  	fcall	___awmod
  4416  0E64  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0E65  1303               	bcf	3,6	;RP1=0, select bank0
  4418  0E66  0824               	movf	?___awmod,w
  4419  0E67  00AB               	movwf	??_ShowDigitsOnDisplay
  4420  0E68  082B               	movf	??_ShowDigitsOnDisplay,w
  4421  0E69  00D0               	movwf	_disp
  4422  0E6A                     l344:	
  4423  0E6A  0008               	return
  4424  0E6B                     __end_of_ShowDigitsOnDisplay:	
  4425                           
  4426                           	psect	text12
  4427  0B4B                     __ptext12:	
  4428 ;; *************** function _SetDisplay *****************
  4429 ;; Defined at:
  4430 ;;		line 468 in file "main.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  display_inde    1    wreg     unsigned char 
  4433 ;;  d1              1    4[BANK0 ] unsigned char 
  4434 ;;  d2              1    5[BANK0 ] unsigned char 
  4435 ;;  d3              1    6[BANK0 ] unsigned char 
  4436 ;;  value           1    7[BANK0 ] unsigned char 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  display_inde    1   10[BANK0 ] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         0       4       0       0       0
  4449 ;;      Locals:         0       1       0       0       0
  4450 ;;      Temps:          0       2       0       0       0
  4451 ;;      Totals:         0       7       0       0       0
  4452 ;;Total ram usage:        7 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    3
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_ShowDigitsOnDisplay
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function _SetDisplay
  4464  0B4B                     _SetDisplay:	
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in _SetDisplay: [wreg-fsr0h+status,2+status,0]
  4468                           ;SetDisplay@display_index stored from wreg
  4469  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0B4D  00AA               	movwf	SetDisplay@display_index
  4472  0B4E                     l3918:	
  4473                           
  4474                           ;main.c: 468: void SetDisplay(unsigned char display_index, char d1, char d2, char d3, ch
      +                          ar value);main.c: 469: {;main.c: 470:     switch(display_index)
  4475  0B4E  2B8F               	goto	l3928
  4476  0B4F                     l3920:	
  4477                           
  4478                           ;main.c: 473:             PORTAbits.RA2 = d1;
  4479  0B4F  0C24               	rrf	SetDisplay@d1,w
  4480  0B50  1C03               	skipc
  4481  0B51  1105               	bcf	5,2	;volatile
  4482  0B52  1803               	skipnc
  4483  0B53  1505               	bsf	5,2	;volatile
  4484                           
  4485                           ;main.c: 474:             PORTAbits.RA3 = d2;
  4486  0B54  0C25               	rrf	SetDisplay@d2,w
  4487  0B55  1C03               	skipc
  4488  0B56  1185               	bcf	5,3	;volatile
  4489  0B57  1803               	skipnc
  4490  0B58  1585               	bsf	5,3	;volatile
  4491                           
  4492                           ;main.c: 475:             PORTAbits.RA4 = d3;
  4493  0B59  0C26               	rrf	SetDisplay@d3,w
  4494  0B5A  1C03               	skipc
  4495  0B5B  1205               	bcf	5,4	;volatile
  4496  0B5C  1803               	skipnc
  4497  0B5D  1605               	bsf	5,4	;volatile
  4498                           
  4499                           ;main.c: 476:             PORTBbits.RB0 = d1;
  4500  0B5E  0C24               	rrf	SetDisplay@d1,w
  4501  0B5F  1C03               	skipc
  4502  0B60  1006               	bcf	6,0	;volatile
  4503  0B61  1803               	skipnc
  4504  0B62  1406               	bsf	6,0	;volatile
  4505                           
  4506                           ;main.c: 477:             PORTBbits.RB0 = d2;
  4507  0B63  0C25               	rrf	SetDisplay@d2,w
  4508  0B64  1C03               	skipc
  4509  0B65  1006               	bcf	6,0	;volatile
  4510  0B66  1803               	skipnc
  4511  0B67  1406               	bsf	6,0	;volatile
  4512                           
  4513                           ;main.c: 478:             PORTBbits.RB0 = d3;
  4514  0B68  0C26               	rrf	SetDisplay@d3,w
  4515  0B69  1C03               	skipc
  4516  0B6A  1006               	bcf	6,0	;volatile
  4517  0B6B  1803               	skipnc
  4518  0B6C  1406               	bsf	6,0	;volatile
  4519  0B6D                     l3922:	
  4520                           
  4521                           ;main.c: 479:             PORTD = value;
  4522  0B6D  0827               	movf	SetDisplay@value,w
  4523  0B6E  0088               	movwf	8	;volatile
  4524                           
  4525                           ;main.c: 480:             break;
  4526  0B6F  2B9F               	goto	l330
  4527  0B70                     l3924:	
  4528                           
  4529                           ;main.c: 482:             PORTAbits.RA5 = d1;
  4530  0B70  0C24               	rrf	SetDisplay@d1,w
  4531  0B71  1C03               	skipc
  4532  0B72  1285               	bcf	5,5	;volatile
  4533  0B73  1803               	skipnc
  4534  0B74  1685               	bsf	5,5	;volatile
  4535                           
  4536                           ;main.c: 483:             PORTBbits.RB0 = d2;
  4537  0B75  0C25               	rrf	SetDisplay@d2,w
  4538  0B76  1C03               	skipc
  4539  0B77  1006               	bcf	6,0	;volatile
  4540  0B78  1803               	skipnc
  4541  0B79  1406               	bsf	6,0	;volatile
  4542                           
  4543                           ;main.c: 484:             PORTBbits.RB0 = d3;
  4544  0B7A  0C26               	rrf	SetDisplay@d3,w
  4545  0B7B  1C03               	skipc
  4546  0B7C  1006               	bcf	6,0	;volatile
  4547  0B7D  1803               	skipnc
  4548  0B7E  1406               	bsf	6,0	;volatile
  4549                           
  4550                           ;main.c: 485:             PORTBbits.RB0 = d1;
  4551  0B7F  0C24               	rrf	SetDisplay@d1,w
  4552  0B80  1C03               	skipc
  4553  0B81  1006               	bcf	6,0	;volatile
  4554  0B82  1803               	skipnc
  4555  0B83  1406               	bsf	6,0	;volatile
  4556                           
  4557                           ;main.c: 486:             PORTBbits.RB0 = d2;
  4558  0B84  0C25               	rrf	SetDisplay@d2,w
  4559  0B85  1C03               	skipc
  4560  0B86  1006               	bcf	6,0	;volatile
  4561  0B87  1803               	skipnc
  4562  0B88  1406               	bsf	6,0	;volatile
  4563                           
  4564                           ;main.c: 487:             PORTBbits.RB0 = d3;
  4565  0B89  0C26               	rrf	SetDisplay@d3,w
  4566  0B8A  1C03               	skipc
  4567  0B8B  1006               	bcf	6,0	;volatile
  4568  0B8C  1803               	skipnc
  4569  0B8D  1406               	bsf	6,0	;volatile
  4570                           
  4571                           ;main.c: 489:             break;
  4572  0B8E  2B9F               	goto	l330
  4573  0B8F                     l3928:	
  4574  0B8F  082A               	movf	SetDisplay@display_index,w
  4575  0B90  00A8               	movwf	??_SetDisplay
  4576  0B91  01A9               	clrf	??_SetDisplay+1
  4577                           
  4578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4579                           ; Switch size 1, requested type "simple"
  4580                           ; Number of cases is 1, Range of values is 0 to 0
  4581                           ; switch strategies available:
  4582                           ; Name         Instructions Cycles
  4583                           ; simple_byte            4     3 (average)
  4584                           ; direct_byte           11     8 (fixed)
  4585                           ; jumptable            260     6 (fixed)
  4586                           ;	Chosen strategy is simple_byte
  4587  0B92  0829               	movf	??_SetDisplay+1,w
  4588  0B93  3A00               	xorlw	0	; case 0
  4589  0B94  1903               	skipnz
  4590  0B95  2B97               	goto	l4726
  4591  0B96  2B9F               	goto	l330
  4592  0B97                     l4726:	
  4593                           
  4594                           ; Switch size 1, requested type "simple"
  4595                           ; Number of cases is 2, Range of values is 0 to 1
  4596                           ; switch strategies available:
  4597                           ; Name         Instructions Cycles
  4598                           ; simple_byte            7     4 (average)
  4599                           ; direct_byte           14     8 (fixed)
  4600                           ; jumptable            260     6 (fixed)
  4601                           ;	Chosen strategy is simple_byte
  4602  0B97  0828               	movf	??_SetDisplay,w
  4603  0B98  3A00               	xorlw	0	; case 0
  4604  0B99  1903               	skipnz
  4605  0B9A  2B4F               	goto	l3920
  4606  0B9B  3A01               	xorlw	1	; case 1
  4607  0B9C  1903               	skipnz
  4608  0B9D  2B70               	goto	l3924
  4609  0B9E  2B9F               	goto	l330
  4610  0B9F                     l330:	
  4611  0B9F  0008               	return
  4612  0BA0                     __end_of_SetDisplay:	
  4613                           
  4614                           	psect	text13
  4615  076A                     __ptext13:	
  4616 ;; *************** function _SetReceivedTimes *****************
  4617 ;; Defined at:
  4618 ;;		line 90 in file "./CustomLib/TrafficLight.h"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4621 ;;		 -> dataFromGateway(15), 
  4622 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4623 ;;		 -> Semafori(8), 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  _dataFromGat    1   23[BANK0 ] PTR unsigned char 
  4626 ;;		 -> dataFromGateway(15), 
  4627 ;;  index           1   24[BANK0 ] unsigned char 
  4628 ;;  colorId         1   22[BANK0 ] unsigned char 
  4629 ;;  semaforoId      1   21[BANK0 ] unsigned char 
  4630 ;;  i               1   25[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         0       1       0       0       0
  4641 ;;      Locals:         0       5       0       0       0
  4642 ;;      Temps:          0       8       0       0       0
  4643 ;;      Totals:         0      14       0       0       0
  4644 ;;Total ram usage:       14 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    4
  4647 ;; This function calls:
  4648 ;;		_GetTime
  4649 ;;		___bmul
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           
  4656                           ;psect for function _SetReceivedTimes
  4657  076A                     _SetReceivedTimes:	
  4658                           
  4659                           ;incstack = 0
  4660                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4661                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4662  076A  1283               	bcf	3,5	;RP0=0, select bank0
  4663  076B  1303               	bcf	3,6	;RP1=0, select bank0
  4664  076C  00B7               	movwf	SetReceivedTimes@_dataFromGateway
  4665  076D                     l4150:	
  4666                           
  4667                           ;./CustomLib/TrafficLight.h: 90: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 91: {;./CustomLib/TrafficLight.h: 92:   
      +                            for (unsigned char i = 0; i < 3; i++)
  4668  076D  01B9               	clrf	SetReceivedTimes@i
  4669  076E                     l4152:	
  4670  076E  3003               	movlw	3
  4671  076F  0239               	subwf	SetReceivedTimes@i,w
  4672  0770  1C03               	skipc
  4673  0771  2F73               	goto	u3591
  4674  0772  2F74               	goto	u3590
  4675  0773                     u3591:	
  4676  0773  2F75               	goto	l4156
  4677  0774                     u3590:	
  4678  0774  2FD7               	goto	l152
  4679  0775                     l4156:	
  4680                           
  4681                           ;./CustomLib/TrafficLight.h: 93:     {;./CustomLib/TrafficLight.h: 94:         unsigned 
      +                          char index = i * 5;
  4682  0775  3005               	movlw	5
  4683  0776  00AD               	movwf	??_SetReceivedTimes
  4684  0777  082D               	movf	??_SetReceivedTimes,w
  4685  0778  00A4               	movwf	___bmul@multiplicand
  4686  0779  0839               	movf	SetReceivedTimes@i,w
  4687  077A  120A  158A  2189  120A  118A  	fcall	___bmul
  4688  077F  1283               	bcf	3,5	;RP0=0, select bank0
  4689  0780  1303               	bcf	3,6	;RP1=0, select bank0
  4690  0781  00AE               	movwf	??_SetReceivedTimes+1
  4691  0782  082E               	movf	??_SetReceivedTimes+1,w
  4692  0783  00B8               	movwf	SetReceivedTimes@index
  4693  0784                     l4158:	
  4694                           
  4695                           ;./CustomLib/TrafficLight.h: 95:         unsigned char semaforoId = (_dataFromGateway[in
      +                          dex] >> 1) & 0x0F;
  4696  0784  0838               	movf	SetReceivedTimes@index,w
  4697  0785  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4698  0786  00AD               	movwf	??_SetReceivedTimes
  4699  0787  082D               	movf	??_SetReceivedTimes,w
  4700  0788  0084               	movwf	4
  4701  0789  1383               	bcf	3,7	;select IRP bank0
  4702  078A  0800               	movf	0,w
  4703  078B  00AE               	movwf	??_SetReceivedTimes+1
  4704  078C  1003               	clrc
  4705  078D  0C2E               	rrf	??_SetReceivedTimes+1,w
  4706  078E  390F               	andlw	15
  4707  078F  00AF               	movwf	??_SetReceivedTimes+2
  4708  0790  082F               	movf	??_SetReceivedTimes+2,w
  4709  0791  00B5               	movwf	SetReceivedTimes@semaforoId
  4710  0792                     l4160:	
  4711                           
  4712                           ;./CustomLib/TrafficLight.h: 96:         unsigned char colorId = ((_dataFromGateway[inde
      +                          x] >> 5) & 0x03) - 1;
  4713  0792  0838               	movf	SetReceivedTimes@index,w
  4714  0793  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4715  0794  00AD               	movwf	??_SetReceivedTimes
  4716  0795  082D               	movf	??_SetReceivedTimes,w
  4717  0796  0084               	movwf	4
  4718  0797  0800               	movf	0,w
  4719  0798  00AE               	movwf	??_SetReceivedTimes+1
  4720  0799  3005               	movlw	5
  4721  079A                     u3605:	
  4722  079A  1003               	clrc
  4723  079B  0CAE               	rrf	??_SetReceivedTimes+1,f
  4724  079C  3EFF               	addlw	-1
  4725  079D  1D03               	skipz
  4726  079E  2F9A               	goto	u3605
  4727  079F  082E               	movf	??_SetReceivedTimes+1,w
  4728  07A0  3903               	andlw	3
  4729  07A1  3EFF               	addlw	255
  4730  07A2  00AF               	movwf	??_SetReceivedTimes+2
  4731  07A3  082F               	movf	??_SetReceivedTimes+2,w
  4732  07A4  00B6               	movwf	SetReceivedTimes@colorId
  4733  07A5                     l4162:	
  4734                           
  4735                           ;./CustomLib/TrafficLight.h: 98:         (*(_semafori)[semaforoId]).new_times[colorId]=G
      +                          etTime(index, _dataFromGateway);
  4736  07A5  0837               	movf	SetReceivedTimes@_dataFromGateway,w
  4737  07A6  00AD               	movwf	??_SetReceivedTimes
  4738  07A7  082D               	movf	??_SetReceivedTimes,w
  4739  07A8  00A4               	movwf	GetTime@_dataFromGateway
  4740  07A9  0838               	movf	SetReceivedTimes@index,w
  4741  07AA  120A  158A  2266  120A  118A  	fcall	_GetTime
  4742  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  4743  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  4744  07B1  0835               	movf	SetReceivedTimes@semaforoId,w
  4745  07B2  00AE               	movwf	??_SetReceivedTimes+1
  4746  07B3  072E               	addwf	??_SetReceivedTimes+1,w
  4747  07B4  072C               	addwf	SetReceivedTimes@_semafori,w
  4748  07B5  00AF               	movwf	??_SetReceivedTimes+2
  4749  07B6  082F               	movf	??_SetReceivedTimes+2,w
  4750  07B7  0084               	movwf	4
  4751  07B8  1383               	bcf	3,7	;select IRP bank0
  4752  07B9  0800               	movf	0,w
  4753  07BA  00B0               	movwf	??_SetReceivedTimes+3
  4754  07BB  0A84               	incf	4,f
  4755  07BC  0800               	movf	0,w
  4756  07BD  00B1               	movwf	??_SetReceivedTimes+4
  4757  07BE  0836               	movf	SetReceivedTimes@colorId,w
  4758  07BF  00B2               	movwf	??_SetReceivedTimes+5
  4759  07C0  0732               	addwf	??_SetReceivedTimes+5,w
  4760  07C1  3E06               	addlw	6
  4761  07C2  0730               	addwf	??_SetReceivedTimes+3,w
  4762  07C3  00B3               	movwf	??_SetReceivedTimes+6
  4763  07C4  0831               	movf	??_SetReceivedTimes+4,w
  4764  07C5  1803               	skipnc
  4765  07C6  3E01               	addlw	1
  4766  07C7  00B4               	movwf	??_SetReceivedTimes+7
  4767  07C8  0833               	movf	??_SetReceivedTimes+6,w
  4768  07C9  0084               	movwf	4
  4769  07CA  1783               	bsf	3,7
  4770  07CB  1C34               	btfss	??_SetReceivedTimes+7,0
  4771  07CC  1383               	bcf	3,7
  4772  07CD  0824               	movf	?_GetTime,w
  4773  07CE  0080               	movwf	0
  4774  07CF  0A84               	incf	4,f
  4775  07D0  0825               	movf	?_GetTime+1,w
  4776  07D1  0080               	movwf	0
  4777  07D2                     l4164:	
  4778                           
  4779                           ;./CustomLib/TrafficLight.h: 99:     }
  4780  07D2  3001               	movlw	1
  4781  07D3  00AD               	movwf	??_SetReceivedTimes
  4782  07D4  082D               	movf	??_SetReceivedTimes,w
  4783  07D5  07B9               	addwf	SetReceivedTimes@i,f
  4784  07D6  2F6E               	goto	l4152
  4785  07D7                     l152:	
  4786  07D7  0008               	return
  4787  07D8                     __end_of_SetReceivedTimes:	
  4788                           
  4789                           	psect	text14
  4790  0A66                     __ptext14:	
  4791 ;; *************** function _GetTime *****************
  4792 ;; Defined at:
  4793 ;;		line 38 in file "./CustomLib/TrafficLight.h"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  index           1    wreg     unsigned char 
  4796 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4797 ;;		 -> dataFromGateway(15), 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  index           1    8[BANK0 ] unsigned char 
  4800 ;;  tmp             2   10[BANK0 ] int 
  4801 ;;  shortInt        1    9[BANK0 ] struct .
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  2    4[BANK0 ] int 
  4804 ;; Registers used:
  4805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4811 ;;      Params:         0       2       0       0       0
  4812 ;;      Locals:         0       4       0       0       0
  4813 ;;      Temps:          0       2       0       0       0
  4814 ;;      Totals:         0       8       0       0       0
  4815 ;;Total ram usage:        8 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    3
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_SetReceivedTimes
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           
  4826                           ;psect for function _GetTime
  4827  0A66                     _GetTime:	
  4828                           
  4829                           ;incstack = 0
  4830                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4831                           ;GetTime@index stored from wreg
  4832  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  4833  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  4834  0A68  00A8               	movwf	GetTime@index
  4835  0A69                     l3900:	
  4836                           
  4837                           ;./CustomLib/TrafficLight.h: 38: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 39: {;./CustomLib/TrafficLight.h: 40:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 44:     } shortInt;;./CustomLib/TrafficLight.h: 46:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4838  0A69  0828               	movf	GetTime@index,w
  4839  0A6A  0724               	addwf	GetTime@_dataFromGateway,w
  4840  0A6B  00A6               	movwf	??_GetTime
  4841  0A6C  0826               	movf	??_GetTime,w
  4842  0A6D  3E03               	addlw	3
  4843  0A6E  0084               	movwf	4
  4844  0A6F  307F               	movlw	127
  4845  0A70  1383               	bcf	3,7	;select IRP bank0
  4846  0A71  0500               	andwf	0,w
  4847  0A72  00A7               	movwf	??_GetTime+1
  4848  0A73  0829               	movf	GetTime@shortInt,w
  4849  0A74  0627               	xorwf	??_GetTime+1,w
  4850  0A75  3980               	andlw	-128
  4851  0A76  0627               	xorwf	??_GetTime+1,w
  4852  0A77  00A9               	movwf	GetTime@shortInt
  4853  0A78                     l3902:	
  4854                           
  4855                           ;./CustomLib/TrafficLight.h: 47:     tmp = shortInt.Val;
  4856  0A78  0829               	movf	GetTime@shortInt,w
  4857  0A79  397F               	andlw	127
  4858  0A7A  00A6               	movwf	??_GetTime
  4859  0A7B  01A7               	clrf	??_GetTime+1
  4860  0A7C  0826               	movf	??_GetTime,w
  4861  0A7D  00AA               	movwf	GetTime@tmp
  4862  0A7E  0827               	movf	??_GetTime+1,w
  4863  0A7F  00AB               	movwf	GetTime@tmp+1
  4864  0A80                     l3904:	
  4865                           
  4866                           ;./CustomLib/TrafficLight.h: 48:     tmp = (tmp << 7) & 0x80;
  4867  0A80  082B               	movf	GetTime@tmp+1,w
  4868  0A81  00A7               	movwf	??_GetTime+1
  4869  0A82  082A               	movf	GetTime@tmp,w
  4870  0A83  00A6               	movwf	??_GetTime
  4871  0A84  3007               	movlw	7
  4872  0A85  00FF               	movwf	btemp+1
  4873  0A86                     u3165:	
  4874  0A86  1003               	clrc
  4875  0A87  0DA6               	rlf	??_GetTime,f
  4876  0A88  0DA7               	rlf	??_GetTime+1,f
  4877  0A89  0BFF               	decfsz	btemp+1,f
  4878  0A8A  2A86               	goto	u3165
  4879  0A8B  3080               	movlw	128
  4880  0A8C  0526               	andwf	??_GetTime,w
  4881  0A8D  00AA               	movwf	GetTime@tmp
  4882  0A8E  3000               	movlw	0
  4883  0A8F  0527               	andwf	??_GetTime+1,w
  4884  0A90  00AB               	movwf	GetTime@tmp+1
  4885  0A91                     l3906:	
  4886                           
  4887                           ;./CustomLib/TrafficLight.h: 50:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4888  0A91  0828               	movf	GetTime@index,w
  4889  0A92  0724               	addwf	GetTime@_dataFromGateway,w
  4890  0A93  00A6               	movwf	??_GetTime
  4891  0A94  0826               	movf	??_GetTime,w
  4892  0A95  3E02               	addlw	2
  4893  0A96  0084               	movwf	4
  4894  0A97  307F               	movlw	127
  4895  0A98  0500               	andwf	0,w
  4896  0A99  00A7               	movwf	??_GetTime+1
  4897  0A9A  0829               	movf	GetTime@shortInt,w
  4898  0A9B  0627               	xorwf	??_GetTime+1,w
  4899  0A9C  3980               	andlw	-128
  4900  0A9D  0627               	xorwf	??_GetTime+1,w
  4901  0A9E  00A9               	movwf	GetTime@shortInt
  4902  0A9F                     l3908:	
  4903                           
  4904                           ;./CustomLib/TrafficLight.h: 51:     tmp = tmp | shortInt.Val;
  4905  0A9F  0829               	movf	GetTime@shortInt,w
  4906  0AA0  397F               	andlw	127
  4907  0AA1  00A6               	movwf	??_GetTime
  4908  0AA2  082A               	movf	GetTime@tmp,w
  4909  0AA3  0426               	iorwf	??_GetTime,w
  4910  0AA4  00AA               	movwf	GetTime@tmp
  4911  0AA5  082B               	movf	GetTime@tmp+1,w
  4912  0AA6  00AB               	movwf	GetTime@tmp+1
  4913  0AA7                     l3910:	
  4914                           
  4915                           ;./CustomLib/TrafficLight.h: 53:     return tmp;
  4916  0AA7  082B               	movf	GetTime@tmp+1,w
  4917  0AA8  00A5               	movwf	?_GetTime+1
  4918  0AA9  082A               	movf	GetTime@tmp,w
  4919  0AAA  00A4               	movwf	?_GetTime
  4920  0AAB                     l135:	
  4921  0AAB  0008               	return
  4922  0AAC                     __end_of_GetTime:	
  4923                           
  4924                           	psect	text15
  4925  0501                     __ptext15:	
  4926 ;; *************** function _SetDefaultTimers *****************
  4927 ;; Defined at:
  4928 ;;		line 58 in file "./CustomLib/TrafficLight.h"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  rosso           2    4[BANK0 ] int 
  4931 ;;  verde           2    6[BANK0 ] int 
  4932 ;;  giallo          2    8[BANK0 ] int 
  4933 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4934 ;;		 -> Semafori(8), 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  i               1   19[BANK0 ] unsigned char 
  4937 ;;  l               1   18[BANK0 ] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4947 ;;      Params:         0       7       0       0       0
  4948 ;;      Locals:         0       2       0       0       0
  4949 ;;      Temps:          0       7       0       0       0
  4950 ;;      Totals:         0      16       0       0       0
  4951 ;;Total ram usage:       16 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    3
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_main
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           
  4962                           ;psect for function _SetDefaultTimers
  4963  0501                     _SetDefaultTimers:	
  4964  0501                     l4114:	
  4965                           ;incstack = 0
  4966                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4967                           
  4968                           
  4969                           ;./CustomLib/TrafficLight.h: 58: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 59: {;./CustomLib/TrafficLight.h: 60: 
      +                              for (unsigned char l = 0; l < n_semafori; l++)
  4970  0501  1283               	bcf	3,5	;RP0=0, select bank0
  4971  0502  1303               	bcf	3,6	;RP1=0, select bank0
  4972  0503  01B2               	clrf	SetDefaultTimers@l
  4973  0504                     l4120:	
  4974                           
  4975                           ;./CustomLib/TrafficLight.h: 61:     {;./CustomLib/TrafficLight.h: 62:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4976  0504  01B3               	clrf	SetDefaultTimers@i
  4977  0505  2DCC               	goto	l4134
  4978  0506                     l4126:	
  4979                           
  4980                           ;./CustomLib/TrafficLight.h: 67:                 (*(_semafori)[l]).times[i] = rosso;
  4981  0506  0832               	movf	SetDefaultTimers@l,w
  4982  0507  00AB               	movwf	??_SetDefaultTimers
  4983  0508  072B               	addwf	??_SetDefaultTimers,w
  4984  0509  072A               	addwf	SetDefaultTimers@_semafori,w
  4985  050A  00AC               	movwf	??_SetDefaultTimers+1
  4986  050B  082C               	movf	??_SetDefaultTimers+1,w
  4987  050C  0084               	movwf	4
  4988  050D  1383               	bcf	3,7	;select IRP bank0
  4989  050E  0800               	movf	0,w
  4990  050F  00AD               	movwf	??_SetDefaultTimers+2
  4991  0510  0A84               	incf	4,f
  4992  0511  0800               	movf	0,w
  4993  0512  00AE               	movwf	??_SetDefaultTimers+3
  4994  0513  0833               	movf	SetDefaultTimers@i,w
  4995  0514  00AF               	movwf	??_SetDefaultTimers+4
  4996  0515  072F               	addwf	??_SetDefaultTimers+4,w
  4997  0516  072D               	addwf	??_SetDefaultTimers+2,w
  4998  0517  00B0               	movwf	??_SetDefaultTimers+5
  4999  0518  082E               	movf	??_SetDefaultTimers+3,w
  5000  0519  1803               	skipnc
  5001  051A  3E01               	addlw	1
  5002  051B  00B1               	movwf	??_SetDefaultTimers+6
  5003  051C  0830               	movf	??_SetDefaultTimers+5,w
  5004  051D  0084               	movwf	4
  5005  051E  1783               	bsf	3,7
  5006  051F  1C31               	btfss	??_SetDefaultTimers+6,0
  5007  0520  1383               	bcf	3,7
  5008  0521  0824               	movf	SetDefaultTimers@rosso,w
  5009  0522  0080               	movwf	0
  5010  0523  0A84               	incf	4,f
  5011  0524  0825               	movf	SetDefaultTimers@rosso+1,w
  5012  0525  0080               	movwf	0
  5013                           
  5014                           ;./CustomLib/TrafficLight.h: 68:                 (*(_semafori)[l]).new_times[i] = rosso;
  5015  0526  0832               	movf	SetDefaultTimers@l,w
  5016  0527  00AB               	movwf	??_SetDefaultTimers
  5017  0528  072B               	addwf	??_SetDefaultTimers,w
  5018  0529  072A               	addwf	SetDefaultTimers@_semafori,w
  5019  052A  00AC               	movwf	??_SetDefaultTimers+1
  5020  052B  082C               	movf	??_SetDefaultTimers+1,w
  5021  052C  0084               	movwf	4
  5022  052D  1383               	bcf	3,7	;select IRP bank0
  5023  052E  0800               	movf	0,w
  5024  052F  00AD               	movwf	??_SetDefaultTimers+2
  5025  0530  0A84               	incf	4,f
  5026  0531  0800               	movf	0,w
  5027  0532  00AE               	movwf	??_SetDefaultTimers+3
  5028  0533  0833               	movf	SetDefaultTimers@i,w
  5029  0534  00AF               	movwf	??_SetDefaultTimers+4
  5030  0535  072F               	addwf	??_SetDefaultTimers+4,w
  5031  0536  3E06               	addlw	6
  5032  0537  072D               	addwf	??_SetDefaultTimers+2,w
  5033  0538  00B0               	movwf	??_SetDefaultTimers+5
  5034  0539  082E               	movf	??_SetDefaultTimers+3,w
  5035  053A  1803               	skipnc
  5036  053B  3E01               	addlw	1
  5037  053C  00B1               	movwf	??_SetDefaultTimers+6
  5038  053D  0830               	movf	??_SetDefaultTimers+5,w
  5039  053E  0084               	movwf	4
  5040  053F  1783               	bsf	3,7
  5041  0540  1C31               	btfss	??_SetDefaultTimers+6,0
  5042  0541  1383               	bcf	3,7
  5043  0542  0824               	movf	SetDefaultTimers@rosso,w
  5044  0543  0080               	movwf	0
  5045  0544  0A84               	incf	4,f
  5046  0545  0825               	movf	SetDefaultTimers@rosso+1,w
  5047  0546  0080               	movwf	0
  5048                           
  5049                           ;./CustomLib/TrafficLight.h: 69:                 break;
  5050  0547  2DDF               	goto	l4136
  5051  0548                     l4128:	
  5052                           
  5053                           ;./CustomLib/TrafficLight.h: 71:                 (*(_semafori)[l]).times[i] = verde;
  5054  0548  0832               	movf	SetDefaultTimers@l,w
  5055  0549  00AB               	movwf	??_SetDefaultTimers
  5056  054A  072B               	addwf	??_SetDefaultTimers,w
  5057  054B  072A               	addwf	SetDefaultTimers@_semafori,w
  5058  054C  00AC               	movwf	??_SetDefaultTimers+1
  5059  054D  082C               	movf	??_SetDefaultTimers+1,w
  5060  054E  0084               	movwf	4
  5061  054F  1383               	bcf	3,7	;select IRP bank0
  5062  0550  0800               	movf	0,w
  5063  0551  00AD               	movwf	??_SetDefaultTimers+2
  5064  0552  0A84               	incf	4,f
  5065  0553  0800               	movf	0,w
  5066  0554  00AE               	movwf	??_SetDefaultTimers+3
  5067  0555  0833               	movf	SetDefaultTimers@i,w
  5068  0556  00AF               	movwf	??_SetDefaultTimers+4
  5069  0557  072F               	addwf	??_SetDefaultTimers+4,w
  5070  0558  072D               	addwf	??_SetDefaultTimers+2,w
  5071  0559  00B0               	movwf	??_SetDefaultTimers+5
  5072  055A  082E               	movf	??_SetDefaultTimers+3,w
  5073  055B  1803               	skipnc
  5074  055C  3E01               	addlw	1
  5075  055D  00B1               	movwf	??_SetDefaultTimers+6
  5076  055E  0830               	movf	??_SetDefaultTimers+5,w
  5077  055F  0084               	movwf	4
  5078  0560  1783               	bsf	3,7
  5079  0561  1C31               	btfss	??_SetDefaultTimers+6,0
  5080  0562  1383               	bcf	3,7
  5081  0563  0826               	movf	SetDefaultTimers@verde,w
  5082  0564  0080               	movwf	0
  5083  0565  0A84               	incf	4,f
  5084  0566  0827               	movf	SetDefaultTimers@verde+1,w
  5085  0567  0080               	movwf	0
  5086                           
  5087                           ;./CustomLib/TrafficLight.h: 72:                 (*(_semafori)[l]).new_times[i] = verde;
  5088  0568  0832               	movf	SetDefaultTimers@l,w
  5089  0569  00AB               	movwf	??_SetDefaultTimers
  5090  056A  072B               	addwf	??_SetDefaultTimers,w
  5091  056B  072A               	addwf	SetDefaultTimers@_semafori,w
  5092  056C  00AC               	movwf	??_SetDefaultTimers+1
  5093  056D  082C               	movf	??_SetDefaultTimers+1,w
  5094  056E  0084               	movwf	4
  5095  056F  1383               	bcf	3,7	;select IRP bank0
  5096  0570  0800               	movf	0,w
  5097  0571  00AD               	movwf	??_SetDefaultTimers+2
  5098  0572  0A84               	incf	4,f
  5099  0573  0800               	movf	0,w
  5100  0574  00AE               	movwf	??_SetDefaultTimers+3
  5101  0575  0833               	movf	SetDefaultTimers@i,w
  5102  0576  00AF               	movwf	??_SetDefaultTimers+4
  5103  0577  072F               	addwf	??_SetDefaultTimers+4,w
  5104  0578  3E06               	addlw	6
  5105  0579  072D               	addwf	??_SetDefaultTimers+2,w
  5106  057A  00B0               	movwf	??_SetDefaultTimers+5
  5107  057B  082E               	movf	??_SetDefaultTimers+3,w
  5108  057C  1803               	skipnc
  5109  057D  3E01               	addlw	1
  5110  057E  00B1               	movwf	??_SetDefaultTimers+6
  5111  057F  0830               	movf	??_SetDefaultTimers+5,w
  5112  0580  0084               	movwf	4
  5113  0581  1783               	bsf	3,7
  5114  0582  1C31               	btfss	??_SetDefaultTimers+6,0
  5115  0583  1383               	bcf	3,7
  5116  0584  0826               	movf	SetDefaultTimers@verde,w
  5117  0585  0080               	movwf	0
  5118  0586  0A84               	incf	4,f
  5119  0587  0827               	movf	SetDefaultTimers@verde+1,w
  5120  0588  0080               	movwf	0
  5121                           
  5122                           ;./CustomLib/TrafficLight.h: 73:                 break;
  5123  0589  2DDF               	goto	l4136
  5124  058A                     l4130:	
  5125                           
  5126                           ;./CustomLib/TrafficLight.h: 75:                 (*(_semafori)[l]).times[i] = giallo;
  5127  058A  0832               	movf	SetDefaultTimers@l,w
  5128  058B  00AB               	movwf	??_SetDefaultTimers
  5129  058C  072B               	addwf	??_SetDefaultTimers,w
  5130  058D  072A               	addwf	SetDefaultTimers@_semafori,w
  5131  058E  00AC               	movwf	??_SetDefaultTimers+1
  5132  058F  082C               	movf	??_SetDefaultTimers+1,w
  5133  0590  0084               	movwf	4
  5134  0591  1383               	bcf	3,7	;select IRP bank0
  5135  0592  0800               	movf	0,w
  5136  0593  00AD               	movwf	??_SetDefaultTimers+2
  5137  0594  0A84               	incf	4,f
  5138  0595  0800               	movf	0,w
  5139  0596  00AE               	movwf	??_SetDefaultTimers+3
  5140  0597  0833               	movf	SetDefaultTimers@i,w
  5141  0598  00AF               	movwf	??_SetDefaultTimers+4
  5142  0599  072F               	addwf	??_SetDefaultTimers+4,w
  5143  059A  072D               	addwf	??_SetDefaultTimers+2,w
  5144  059B  00B0               	movwf	??_SetDefaultTimers+5
  5145  059C  082E               	movf	??_SetDefaultTimers+3,w
  5146  059D  1803               	skipnc
  5147  059E  3E01               	addlw	1
  5148  059F  00B1               	movwf	??_SetDefaultTimers+6
  5149  05A0  0830               	movf	??_SetDefaultTimers+5,w
  5150  05A1  0084               	movwf	4
  5151  05A2  1783               	bsf	3,7
  5152  05A3  1C31               	btfss	??_SetDefaultTimers+6,0
  5153  05A4  1383               	bcf	3,7
  5154  05A5  0828               	movf	SetDefaultTimers@giallo,w
  5155  05A6  0080               	movwf	0
  5156  05A7  0A84               	incf	4,f
  5157  05A8  0829               	movf	SetDefaultTimers@giallo+1,w
  5158  05A9  0080               	movwf	0
  5159                           
  5160                           ;./CustomLib/TrafficLight.h: 76:                 (*(_semafori)[l]).new_times[i] = giallo
      +                          ;
  5161  05AA  0832               	movf	SetDefaultTimers@l,w
  5162  05AB  00AB               	movwf	??_SetDefaultTimers
  5163  05AC  072B               	addwf	??_SetDefaultTimers,w
  5164  05AD  072A               	addwf	SetDefaultTimers@_semafori,w
  5165  05AE  00AC               	movwf	??_SetDefaultTimers+1
  5166  05AF  082C               	movf	??_SetDefaultTimers+1,w
  5167  05B0  0084               	movwf	4
  5168  05B1  1383               	bcf	3,7	;select IRP bank0
  5169  05B2  0800               	movf	0,w
  5170  05B3  00AD               	movwf	??_SetDefaultTimers+2
  5171  05B4  0A84               	incf	4,f
  5172  05B5  0800               	movf	0,w
  5173  05B6  00AE               	movwf	??_SetDefaultTimers+3
  5174  05B7  0833               	movf	SetDefaultTimers@i,w
  5175  05B8  00AF               	movwf	??_SetDefaultTimers+4
  5176  05B9  072F               	addwf	??_SetDefaultTimers+4,w
  5177  05BA  3E06               	addlw	6
  5178  05BB  072D               	addwf	??_SetDefaultTimers+2,w
  5179  05BC  00B0               	movwf	??_SetDefaultTimers+5
  5180  05BD  082E               	movf	??_SetDefaultTimers+3,w
  5181  05BE  1803               	skipnc
  5182  05BF  3E01               	addlw	1
  5183  05C0  00B1               	movwf	??_SetDefaultTimers+6
  5184  05C1  0830               	movf	??_SetDefaultTimers+5,w
  5185  05C2  0084               	movwf	4
  5186  05C3  1783               	bsf	3,7
  5187  05C4  1C31               	btfss	??_SetDefaultTimers+6,0
  5188  05C5  1383               	bcf	3,7
  5189  05C6  0828               	movf	SetDefaultTimers@giallo,w
  5190  05C7  0080               	movwf	0
  5191  05C8  0A84               	incf	4,f
  5192  05C9  0829               	movf	SetDefaultTimers@giallo+1,w
  5193  05CA  0080               	movwf	0
  5194                           
  5195                           ;./CustomLib/TrafficLight.h: 77:                 break;
  5196  05CB  2DDF               	goto	l4136
  5197  05CC                     l4134:	
  5198  05CC  0833               	movf	SetDefaultTimers@i,w
  5199  05CD  00AB               	movwf	??_SetDefaultTimers
  5200  05CE  01AC               	clrf	??_SetDefaultTimers+1
  5201                           
  5202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5203                           ; Switch size 1, requested type "simple"
  5204                           ; Number of cases is 1, Range of values is 0 to 0
  5205                           ; switch strategies available:
  5206                           ; Name         Instructions Cycles
  5207                           ; simple_byte            4     3 (average)
  5208                           ; direct_byte           11     8 (fixed)
  5209                           ; jumptable            260     6 (fixed)
  5210                           ;	Chosen strategy is simple_byte
  5211  05CF  082C               	movf	??_SetDefaultTimers+1,w
  5212  05D0  3A00               	xorlw	0	; case 0
  5213  05D1  1903               	skipnz
  5214  05D2  2DD4               	goto	l4728
  5215  05D3  2DDF               	goto	l4136
  5216  05D4                     l4728:	
  5217                           
  5218                           ; Switch size 1, requested type "simple"
  5219                           ; Number of cases is 3, Range of values is 0 to 2
  5220                           ; switch strategies available:
  5221                           ; Name         Instructions Cycles
  5222                           ; simple_byte           10     6 (average)
  5223                           ; direct_byte           17     8 (fixed)
  5224                           ; jumptable            260     6 (fixed)
  5225                           ;	Chosen strategy is simple_byte
  5226  05D4  082B               	movf	??_SetDefaultTimers,w
  5227  05D5  3A00               	xorlw	0	; case 0
  5228  05D6  1903               	skipnz
  5229  05D7  2D06               	goto	l4126
  5230  05D8  3A01               	xorlw	1	; case 1
  5231  05D9  1903               	skipnz
  5232  05DA  2D48               	goto	l4128
  5233  05DB  3A03               	xorlw	3	; case 2
  5234  05DC  1903               	skipnz
  5235  05DD  2D8A               	goto	l4130
  5236  05DE  2DDF               	goto	l4136
  5237  05DF                     l4136:	
  5238                           
  5239                           ;./CustomLib/TrafficLight.h: 79:         }
  5240  05DF  3001               	movlw	1
  5241  05E0  00AB               	movwf	??_SetDefaultTimers
  5242  05E1  082B               	movf	??_SetDefaultTimers,w
  5243  05E2  07B3               	addwf	SetDefaultTimers@i,f
  5244  05E3                     l4138:	
  5245  05E3  3003               	movlw	3
  5246  05E4  0233               	subwf	SetDefaultTimers@i,w
  5247  05E5  1C03               	skipc
  5248  05E6  2DE8               	goto	u3571
  5249  05E7  2DE9               	goto	u3570
  5250  05E8                     u3571:	
  5251  05E8  2DCC               	goto	l4134
  5252  05E9                     u3570:	
  5253  05E9                     l4140:	
  5254                           
  5255                           ;./CustomLib/TrafficLight.h: 80:     }
  5256  05E9  3001               	movlw	1
  5257  05EA  00AB               	movwf	??_SetDefaultTimers
  5258  05EB  082B               	movf	??_SetDefaultTimers,w
  5259  05EC  07B2               	addwf	SetDefaultTimers@l,f
  5260  05ED                     l4142:	
  5261  05ED  3002               	movlw	2
  5262  05EE  0232               	subwf	SetDefaultTimers@l,w
  5263  05EF  1C03               	skipc
  5264  05F0  2DF2               	goto	u3581
  5265  05F1  2DF3               	goto	u3580
  5266  05F2                     u3581:	
  5267  05F2  2D04               	goto	l4120
  5268  05F3                     u3580:	
  5269  05F3                     l4144:	
  5270                           
  5271                           ;./CustomLib/TrafficLight.h: 82:     (*(_semafori)[0]).lux_select = 0;
  5272  05F3  082A               	movf	SetDefaultTimers@_semafori,w
  5273  05F4  0084               	movwf	4
  5274  05F5  1383               	bcf	3,7	;select IRP bank0
  5275  05F6  0800               	movf	0,w
  5276  05F7  00AB               	movwf	??_SetDefaultTimers
  5277  05F8  0A84               	incf	4,f
  5278  05F9  0800               	movf	0,w
  5279  05FA  00AC               	movwf	??_SetDefaultTimers+1
  5280  05FB  082B               	movf	??_SetDefaultTimers,w
  5281  05FC  3E0C               	addlw	12
  5282  05FD  00AD               	movwf	??_SetDefaultTimers+2
  5283  05FE  082C               	movf	??_SetDefaultTimers+1,w
  5284  05FF  1803               	skipnc
  5285  0600  3E01               	addlw	1
  5286  0601  3E00               	addlw	0
  5287  0602  00AE               	movwf	??_SetDefaultTimers+3
  5288  0603  082D               	movf	??_SetDefaultTimers+2,w
  5289  0604  0084               	movwf	4
  5290  0605  1783               	bsf	3,7
  5291  0606  1C2E               	btfss	??_SetDefaultTimers+3,0
  5292  0607  1383               	bcf	3,7
  5293  0608  0180               	clrf	0
  5294                           
  5295                           ;./CustomLib/TrafficLight.h: 83:     (*(_semafori)[0]).new_lux_select = 0;
  5296  0609  082A               	movf	SetDefaultTimers@_semafori,w
  5297  060A  0084               	movwf	4
  5298  060B  1383               	bcf	3,7	;select IRP bank0
  5299  060C  0800               	movf	0,w
  5300  060D  00AB               	movwf	??_SetDefaultTimers
  5301  060E  0A84               	incf	4,f
  5302  060F  0800               	movf	0,w
  5303  0610  00AC               	movwf	??_SetDefaultTimers+1
  5304  0611  082B               	movf	??_SetDefaultTimers,w
  5305  0612  3E0D               	addlw	13
  5306  0613  00AD               	movwf	??_SetDefaultTimers+2
  5307  0614  082C               	movf	??_SetDefaultTimers+1,w
  5308  0615  1803               	skipnc
  5309  0616  3E01               	addlw	1
  5310  0617  3E00               	addlw	0
  5311  0618  00AE               	movwf	??_SetDefaultTimers+3
  5312  0619  082D               	movf	??_SetDefaultTimers+2,w
  5313  061A  0084               	movwf	4
  5314  061B  1783               	bsf	3,7
  5315  061C  1C2E               	btfss	??_SetDefaultTimers+3,0
  5316  061D  1383               	bcf	3,7
  5317  061E  0180               	clrf	0
  5318                           
  5319                           ;./CustomLib/TrafficLight.h: 84:     (*(_semafori)[1]).lux_select = 1;
  5320  061F  082A               	movf	SetDefaultTimers@_semafori,w
  5321  0620  3E02               	addlw	2
  5322  0621  0084               	movwf	4
  5323  0622  1383               	bcf	3,7	;select IRP bank0
  5324  0623  0800               	movf	0,w
  5325  0624  00AB               	movwf	??_SetDefaultTimers
  5326  0625  0A84               	incf	4,f
  5327  0626  0800               	movf	0,w
  5328  0627  00AC               	movwf	??_SetDefaultTimers+1
  5329  0628  082B               	movf	??_SetDefaultTimers,w
  5330  0629  3E0C               	addlw	12
  5331  062A  00AD               	movwf	??_SetDefaultTimers+2
  5332  062B  082C               	movf	??_SetDefaultTimers+1,w
  5333  062C  1803               	skipnc
  5334  062D  3E01               	addlw	1
  5335  062E  3E00               	addlw	0
  5336  062F  00AE               	movwf	??_SetDefaultTimers+3
  5337  0630  082D               	movf	??_SetDefaultTimers+2,w
  5338  0631  0084               	movwf	4
  5339  0632  1783               	bsf	3,7
  5340  0633  1C2E               	btfss	??_SetDefaultTimers+3,0
  5341  0634  1383               	bcf	3,7
  5342  0635  0180               	clrf	0
  5343  0636  0A80               	incf	0,f
  5344                           
  5345                           ;./CustomLib/TrafficLight.h: 85:     (*(_semafori)[1]).new_lux_select = 1;
  5346  0637  082A               	movf	SetDefaultTimers@_semafori,w
  5347  0638  3E02               	addlw	2
  5348  0639  0084               	movwf	4
  5349  063A  1383               	bcf	3,7	;select IRP bank0
  5350  063B  0800               	movf	0,w
  5351  063C  00AB               	movwf	??_SetDefaultTimers
  5352  063D  0A84               	incf	4,f
  5353  063E  0800               	movf	0,w
  5354  063F  00AC               	movwf	??_SetDefaultTimers+1
  5355  0640  082B               	movf	??_SetDefaultTimers,w
  5356  0641  3E0D               	addlw	13
  5357  0642  00AD               	movwf	??_SetDefaultTimers+2
  5358  0643  082C               	movf	??_SetDefaultTimers+1,w
  5359  0644  1803               	skipnc
  5360  0645  3E01               	addlw	1
  5361  0646  3E00               	addlw	0
  5362  0647  00AE               	movwf	??_SetDefaultTimers+3
  5363  0648  082D               	movf	??_SetDefaultTimers+2,w
  5364  0649  0084               	movwf	4
  5365  064A  1783               	bsf	3,7
  5366  064B  1C2E               	btfss	??_SetDefaultTimers+3,0
  5367  064C  1383               	bcf	3,7
  5368  064D  0180               	clrf	0
  5369  064E  0A80               	incf	0,f
  5370  064F                     l147:	
  5371  064F  0008               	return
  5372  0650                     __end_of_SetDefaultTimers:	
  5373                           
  5374                           	psect	text16
  5375  0F33                     __ptext16:	
  5376 ;; *************** function _GetDigits *****************
  5377 ;; Defined at:
  5378 ;;		line 103 in file "./CustomLib/TrafficLight.h"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  _digits         1    wreg     PTR PTR struct .
  5381 ;;		 -> DigitsArr(2), 
  5382 ;;  index           1   20[BANK0 ] unsigned char 
  5383 ;;  Time            2   21[BANK0 ] int 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  _digits         1   28[BANK0 ] PTR PTR struct .
  5386 ;;		 -> DigitsArr(2), 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5396 ;;      Params:         0       3       0       0       0
  5397 ;;      Locals:         0       3       0       0       0
  5398 ;;      Temps:          0       3       0       0       0
  5399 ;;      Totals:         0       9       0       0       0
  5400 ;;Total ram usage:        9 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:    4
  5403 ;; This function calls:
  5404 ;;		___awdiv
  5405 ;;		___awmod
  5406 ;;		___bmul
  5407 ;; This function is called by:
  5408 ;;		_main
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           
  5413                           ;psect for function _GetDigits
  5414  0F33                     _GetDigits:	
  5415                           
  5416                           ;incstack = 0
  5417                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5418                           ;GetDigits@_digits stored from wreg
  5419  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  5420  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  5421  0F35  00BC               	movwf	GetDigits@_digits
  5422  0F36                     l4168:	
  5423                           
  5424                           ;./CustomLib/TrafficLight.h: 103: void GetDigits(_Digits _digits, unsigned char index, i
      +                          nt Time);./CustomLib/TrafficLight.h: 104: {;./CustomLib/TrafficLight.h: 105:     while(T
      +                          ime/1000>0)
  5425  0F36  2F4C               	goto	l4172
  5426  0F37                     l4170:	
  5427                           
  5428                           ;./CustomLib/TrafficLight.h: 106:     {;./CustomLib/TrafficLight.h: 107:         Time=Ti
      +                          me/10;
  5429  0F37  300A               	movlw	10
  5430  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  5431  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  5432  0F3A  00AB               	movwf	___awdiv@divisor
  5433  0F3B  3000               	movlw	0
  5434  0F3C  00AC               	movwf	___awdiv@divisor+1
  5435  0F3D  0836               	movf	GetDigits@Time+1,w
  5436  0F3E  00AE               	movwf	___awdiv@dividend+1
  5437  0F3F  0835               	movf	GetDigits@Time,w
  5438  0F40  00AD               	movwf	___awdiv@dividend
  5439  0F41  120A  158A  24B8  120A  158A  	fcall	___awdiv
  5440  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  5441  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  5442  0F48  082C               	movf	?___awdiv+1,w
  5443  0F49  00B6               	movwf	GetDigits@Time+1
  5444  0F4A  082B               	movf	?___awdiv,w
  5445  0F4B  00B5               	movwf	GetDigits@Time
  5446  0F4C                     l4172:	
  5447                           
  5448                           ;./CustomLib/TrafficLight.h: 105:     while(Time/1000>0)
  5449  0F4C  30E8               	movlw	232
  5450  0F4D  00AB               	movwf	___awdiv@divisor
  5451  0F4E  3003               	movlw	3
  5452  0F4F  00AC               	movwf	___awdiv@divisor+1
  5453  0F50  0836               	movf	GetDigits@Time+1,w
  5454  0F51  00AE               	movwf	___awdiv@dividend+1
  5455  0F52  0835               	movf	GetDigits@Time,w
  5456  0F53  00AD               	movwf	___awdiv@dividend
  5457  0F54  120A  158A  24B8  120A  158A  	fcall	___awdiv
  5458  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  5459  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  5460  0F5B  082C               	movf	?___awdiv+1,w
  5461  0F5C  3A80               	xorlw	128
  5462  0F5D  00FF               	movwf	btemp+1
  5463  0F5E  3080               	movlw	128
  5464  0F5F  027F               	subwf	btemp+1,w
  5465  0F60  1D03               	skipz
  5466  0F61  2F64               	goto	u3615
  5467  0F62  3001               	movlw	1
  5468  0F63  022B               	subwf	?___awdiv,w
  5469  0F64                     u3615:	
  5470  0F64  1803               	skipnc
  5471  0F65  2F67               	goto	u3611
  5472  0F66  2F68               	goto	u3610
  5473  0F67                     u3611:	
  5474  0F67  2F37               	goto	l4170
  5475  0F68                     u3610:	
  5476  0F68                     l4174:	
  5477                           
  5478                           ;./CustomLib/TrafficLight.h: 110:     (*_digits)[index].centinaia = Time / 100;
  5479  0F68  3064               	movlw	100
  5480  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  5481  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  5482  0F6B  00AB               	movwf	___awdiv@divisor
  5483  0F6C  3000               	movlw	0
  5484  0F6D  00AC               	movwf	___awdiv@divisor+1
  5485  0F6E  0836               	movf	GetDigits@Time+1,w
  5486  0F6F  00AE               	movwf	___awdiv@dividend+1
  5487  0F70  0835               	movf	GetDigits@Time,w
  5488  0F71  00AD               	movwf	___awdiv@dividend
  5489  0F72  120A  158A  24B8  120A  158A  	fcall	___awdiv
  5490  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  5491  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  5492  0F79  082B               	movf	?___awdiv,w
  5493  0F7A  00B7               	movwf	??_GetDigits
  5494  0F7B  083C               	movf	GetDigits@_digits,w
  5495  0F7C  0084               	movwf	4
  5496  0F7D  3003               	movlw	3
  5497  0F7E  00B8               	movwf	??_GetDigits+1
  5498  0F7F  0838               	movf	??_GetDigits+1,w
  5499  0F80  00A4               	movwf	___bmul@multiplicand
  5500  0F81  0834               	movf	GetDigits@index,w
  5501  0F82  120A  158A  2189  120A  158A  	fcall	___bmul
  5502  0F87  1383               	bcf	3,7	;select IRP bank0
  5503  0F88  0700               	addwf	0,w
  5504  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  5505  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  5506  0F8B  00B9               	movwf	??_GetDigits+2
  5507  0F8C  0839               	movf	??_GetDigits+2,w
  5508  0F8D  0084               	movwf	4
  5509  0F8E  0837               	movf	??_GetDigits,w
  5510  0F8F  0080               	movwf	0
  5511                           
  5512                           ;./CustomLib/TrafficLight.h: 111:     (*_digits)[index].decine = (Time % 100) / 10;
  5513  0F90  300A               	movlw	10
  5514  0F91  00AB               	movwf	___awdiv@divisor
  5515  0F92  3000               	movlw	0
  5516  0F93  00AC               	movwf	___awdiv@divisor+1
  5517  0F94  0836               	movf	GetDigits@Time+1,w
  5518  0F95  00A7               	movwf	___awmod@dividend+1
  5519  0F96  0835               	movf	GetDigits@Time,w
  5520  0F97  00A6               	movwf	___awmod@dividend
  5521  0F98  3064               	movlw	100
  5522  0F99  00A4               	movwf	___awmod@divisor
  5523  0F9A  3000               	movlw	0
  5524  0F9B  00A5               	movwf	___awmod@divisor+1
  5525  0F9C  120A  158A  23F8  120A  158A  	fcall	___awmod
  5526  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  5527  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  5528  0FA3  0825               	movf	?___awmod+1,w
  5529  0FA4  00AE               	movwf	___awdiv@dividend+1
  5530  0FA5  0824               	movf	?___awmod,w
  5531  0FA6  00AD               	movwf	___awdiv@dividend
  5532  0FA7  120A  158A  24B8  120A  158A  	fcall	___awdiv
  5533  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  5534  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  5535  0FAE  082B               	movf	?___awdiv,w
  5536  0FAF  00B7               	movwf	??_GetDigits
  5537  0FB0  083C               	movf	GetDigits@_digits,w
  5538  0FB1  0084               	movwf	4
  5539  0FB2  3003               	movlw	3
  5540  0FB3  00B8               	movwf	??_GetDigits+1
  5541  0FB4  0838               	movf	??_GetDigits+1,w
  5542  0FB5  00A4               	movwf	___bmul@multiplicand
  5543  0FB6  0834               	movf	GetDigits@index,w
  5544  0FB7  120A  158A  2189  120A  158A  	fcall	___bmul
  5545  0FBC  1383               	bcf	3,7	;select IRP bank0
  5546  0FBD  0700               	addwf	0,w
  5547  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5548  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5549  0FC0  00B9               	movwf	??_GetDigits+2
  5550  0FC1  0A39               	incf	??_GetDigits+2,w
  5551  0FC2  0084               	movwf	4
  5552  0FC3  0837               	movf	??_GetDigits,w
  5553  0FC4  0080               	movwf	0
  5554  0FC5                     l4176:	
  5555                           
  5556                           ;./CustomLib/TrafficLight.h: 112:     (*_digits)[index].unita = (Time % 100) % 10;
  5557  0FC5  0836               	movf	GetDigits@Time+1,w
  5558  0FC6  00A7               	movwf	___awmod@dividend+1
  5559  0FC7  0835               	movf	GetDigits@Time,w
  5560  0FC8  00A6               	movwf	___awmod@dividend
  5561  0FC9  3064               	movlw	100
  5562  0FCA  00A4               	movwf	___awmod@divisor
  5563  0FCB  3000               	movlw	0
  5564  0FCC  00A5               	movwf	___awmod@divisor+1
  5565  0FCD  120A  158A  23F8  120A  158A  	fcall	___awmod
  5566  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  5567  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  5568  0FD4  0825               	movf	?___awmod+1,w
  5569  0FD5  00BB               	movwf	_GetDigits$1199+1
  5570  0FD6  0824               	movf	?___awmod,w
  5571  0FD7  00BA               	movwf	_GetDigits$1199
  5572  0FD8                     l4178:	
  5573                           
  5574                           ;./CustomLib/TrafficLight.h: 112:     (*_digits)[index].unita = (Time % 100) % 10;
  5575  0FD8  300A               	movlw	10
  5576  0FD9  00A4               	movwf	___awmod@divisor
  5577  0FDA  3000               	movlw	0
  5578  0FDB  00A5               	movwf	___awmod@divisor+1
  5579  0FDC  083B               	movf	_GetDigits$1199+1,w
  5580  0FDD  00A7               	movwf	___awmod@dividend+1
  5581  0FDE  083A               	movf	_GetDigits$1199,w
  5582  0FDF  00A6               	movwf	___awmod@dividend
  5583  0FE0  120A  158A  23F8  120A  158A  	fcall	___awmod
  5584  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  5585  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  5586  0FE7  0824               	movf	?___awmod,w
  5587  0FE8  00B7               	movwf	??_GetDigits
  5588  0FE9  083C               	movf	GetDigits@_digits,w
  5589  0FEA  0084               	movwf	4
  5590  0FEB  3003               	movlw	3
  5591  0FEC  00B8               	movwf	??_GetDigits+1
  5592  0FED  0838               	movf	??_GetDigits+1,w
  5593  0FEE  00A4               	movwf	___bmul@multiplicand
  5594  0FEF  0834               	movf	GetDigits@index,w
  5595  0FF0  120A  158A  2189  120A  158A  	fcall	___bmul
  5596  0FF5  1383               	bcf	3,7	;select IRP bank0
  5597  0FF6  0700               	addwf	0,w
  5598  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0FF9  00B9               	movwf	??_GetDigits+2
  5601  0FFA  0839               	movf	??_GetDigits+2,w
  5602  0FFB  3E02               	addlw	2
  5603  0FFC  0084               	movwf	4
  5604  0FFD  0837               	movf	??_GetDigits,w
  5605  0FFE  0080               	movwf	0
  5606  0FFF                     l158:	
  5607  0FFF  0008               	return
  5608  1000                     __end_of_GetDigits:	
  5609                           
  5610                           	psect	text17
  5611  0989                     __ptext17:	
  5612 ;; *************** function ___bmul *****************
  5613 ;; Defined at:
  5614 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  multiplier      1    wreg     unsigned char 
  5617 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  multiplier      1    7[BANK0 ] unsigned char 
  5620 ;;  product         1    6[BANK0 ] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      unsigned char 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5630 ;;      Params:         0       1       0       0       0
  5631 ;;      Locals:         0       2       0       0       0
  5632 ;;      Temps:          0       1       0       0       0
  5633 ;;      Totals:         0       4       0       0       0
  5634 ;;Total ram usage:        4 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    3
  5637 ;; This function calls:
  5638 ;;		Nothing
  5639 ;; This function is called by:
  5640 ;;		_SetReceivedTimes
  5641 ;;		_GetDigits
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function ___bmul
  5647  0989                     ___bmul:	
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5651                           ;___bmul@multiplier stored from wreg
  5652  0989  1283               	bcf	3,5	;RP0=0, select bank0
  5653  098A  1303               	bcf	3,6	;RP1=0, select bank0
  5654  098B  00A7               	movwf	___bmul@multiplier
  5655  098C                     l3950:	
  5656  098C  01A6               	clrf	___bmul@product
  5657  098D                     l3952:	
  5658  098D  1C27               	btfss	___bmul@multiplier,0
  5659  098E  2990               	goto	u3221
  5660  098F  2991               	goto	u3220
  5661  0990                     u3221:	
  5662  0990  2995               	goto	l3956
  5663  0991                     u3220:	
  5664  0991                     l3954:	
  5665  0991  0824               	movf	___bmul@multiplicand,w
  5666  0992  00A5               	movwf	??___bmul
  5667  0993  0825               	movf	??___bmul,w
  5668  0994  07A6               	addwf	___bmul@product,f
  5669  0995                     l3956:	
  5670  0995  1003               	clrc
  5671  0996  0DA4               	rlf	___bmul@multiplicand,f
  5672  0997                     l3958:	
  5673  0997  1003               	clrc
  5674  0998  0CA7               	rrf	___bmul@multiplier,f
  5675  0999  0827               	movf	___bmul@multiplier,w
  5676  099A  1D03               	btfss	3,2
  5677  099B  299D               	goto	u3231
  5678  099C  299E               	goto	u3230
  5679  099D                     u3231:	
  5680  099D  298D               	goto	l3952
  5681  099E                     u3230:	
  5682  099E                     l3960:	
  5683  099E  0826               	movf	___bmul@product,w
  5684  099F                     l466:	
  5685  099F  0008               	return
  5686  09A0                     __end_of___bmul:	
  5687                           
  5688                           	psect	text18
  5689  0BF8                     __ptext18:	
  5690 ;; *************** function ___awmod *****************
  5691 ;; Defined at:
  5692 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  divisor         2    4[BANK0 ] int 
  5695 ;;  dividend        2    6[BANK0 ] int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  sign            1   10[BANK0 ] unsigned char 
  5698 ;;  counter         1    9[BANK0 ] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  2    4[BANK0 ] int 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5708 ;;      Params:         0       4       0       0       0
  5709 ;;      Locals:         0       2       0       0       0
  5710 ;;      Temps:          0       1       0       0       0
  5711 ;;      Totals:         0       7       0       0       0
  5712 ;;Total ram usage:        7 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    3
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_GetDigits
  5719 ;;		_ShowDigitsOnDisplay
  5720 ;;		_ChangeTrafficLight
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function ___awmod
  5726  0BF8                     ___awmod:	
  5727  0BF8                     l4048:	
  5728                           ;incstack = 0
  5729                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5730                           
  5731  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  5732  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  5733  0BFA  01AA               	clrf	___awmod@sign
  5734  0BFB                     l4050:	
  5735  0BFB  1FA7               	btfss	___awmod@dividend+1,7
  5736  0BFC  2BFE               	goto	u3441
  5737  0BFD  2BFF               	goto	u3440
  5738  0BFE                     u3441:	
  5739  0BFE  2C06               	goto	l4056
  5740  0BFF                     u3440:	
  5741  0BFF                     l4052:	
  5742  0BFF  09A6               	comf	___awmod@dividend,f
  5743  0C00  09A7               	comf	___awmod@dividend+1,f
  5744  0C01  0AA6               	incf	___awmod@dividend,f
  5745  0C02  1903               	skipnz
  5746  0C03  0AA7               	incf	___awmod@dividend+1,f
  5747  0C04                     l4054:	
  5748  0C04  01AA               	clrf	___awmod@sign
  5749  0C05  0AAA               	incf	___awmod@sign,f
  5750  0C06                     l4056:	
  5751  0C06  1FA5               	btfss	___awmod@divisor+1,7
  5752  0C07  2C09               	goto	u3451
  5753  0C08  2C0A               	goto	u3450
  5754  0C09                     u3451:	
  5755  0C09  2C0F               	goto	l4060
  5756  0C0A                     u3450:	
  5757  0C0A                     l4058:	
  5758  0C0A  09A4               	comf	___awmod@divisor,f
  5759  0C0B  09A5               	comf	___awmod@divisor+1,f
  5760  0C0C  0AA4               	incf	___awmod@divisor,f
  5761  0C0D  1903               	skipnz
  5762  0C0E  0AA5               	incf	___awmod@divisor+1,f
  5763  0C0F                     l4060:	
  5764  0C0F  0824               	movf	___awmod@divisor,w
  5765  0C10  0425               	iorwf	___awmod@divisor+1,w
  5766  0C11  1903               	btfsc	3,2
  5767  0C12  2C14               	goto	u3461
  5768  0C13  2C15               	goto	u3460
  5769  0C14                     u3461:	
  5770  0C14  2C44               	goto	l4078
  5771  0C15                     u3460:	
  5772  0C15                     l4062:	
  5773  0C15  01A9               	clrf	___awmod@counter
  5774  0C16  0AA9               	incf	___awmod@counter,f
  5775  0C17  2C23               	goto	l4068
  5776  0C18                     l4064:	
  5777  0C18  3001               	movlw	1
  5778  0C19                     u3475:	
  5779  0C19  1003               	clrc
  5780  0C1A  0DA4               	rlf	___awmod@divisor,f
  5781  0C1B  0DA5               	rlf	___awmod@divisor+1,f
  5782  0C1C  3EFF               	addlw	-1
  5783  0C1D  1D03               	skipz
  5784  0C1E  2C19               	goto	u3475
  5785  0C1F                     l4066:	
  5786  0C1F  3001               	movlw	1
  5787  0C20  00A8               	movwf	??___awmod
  5788  0C21  0828               	movf	??___awmod,w
  5789  0C22  07A9               	addwf	___awmod@counter,f
  5790  0C23                     l4068:	
  5791  0C23  1FA5               	btfss	___awmod@divisor+1,7
  5792  0C24  2C26               	goto	u3481
  5793  0C25  2C27               	goto	u3480
  5794  0C26                     u3481:	
  5795  0C26  2C18               	goto	l4064
  5796  0C27                     u3480:	
  5797  0C27                     l4070:	
  5798  0C27  0825               	movf	___awmod@divisor+1,w
  5799  0C28  0227               	subwf	___awmod@dividend+1,w
  5800  0C29  1D03               	skipz
  5801  0C2A  2C2D               	goto	u3495
  5802  0C2B  0824               	movf	___awmod@divisor,w
  5803  0C2C  0226               	subwf	___awmod@dividend,w
  5804  0C2D                     u3495:	
  5805  0C2D  1C03               	skipc
  5806  0C2E  2C30               	goto	u3491
  5807  0C2F  2C31               	goto	u3490
  5808  0C30                     u3491:	
  5809  0C30  2C37               	goto	l4074
  5810  0C31                     u3490:	
  5811  0C31                     l4072:	
  5812  0C31  0824               	movf	___awmod@divisor,w
  5813  0C32  02A6               	subwf	___awmod@dividend,f
  5814  0C33  0825               	movf	___awmod@divisor+1,w
  5815  0C34  1C03               	skipc
  5816  0C35  03A7               	decf	___awmod@dividend+1,f
  5817  0C36  02A7               	subwf	___awmod@dividend+1,f
  5818  0C37                     l4074:	
  5819  0C37  3001               	movlw	1
  5820  0C38                     u3505:	
  5821  0C38  1003               	clrc
  5822  0C39  0CA5               	rrf	___awmod@divisor+1,f
  5823  0C3A  0CA4               	rrf	___awmod@divisor,f
  5824  0C3B  3EFF               	addlw	-1
  5825  0C3C  1D03               	skipz
  5826  0C3D  2C38               	goto	u3505
  5827  0C3E                     l4076:	
  5828  0C3E  3001               	movlw	1
  5829  0C3F  02A9               	subwf	___awmod@counter,f
  5830  0C40  1D03               	btfss	3,2
  5831  0C41  2C43               	goto	u3511
  5832  0C42  2C44               	goto	u3510
  5833  0C43                     u3511:	
  5834  0C43  2C27               	goto	l4070
  5835  0C44                     u3510:	
  5836  0C44                     l4078:	
  5837  0C44  082A               	movf	___awmod@sign,w
  5838  0C45  1903               	btfsc	3,2
  5839  0C46  2C48               	goto	u3521
  5840  0C47  2C49               	goto	u3520
  5841  0C48                     u3521:	
  5842  0C48  2C4E               	goto	l4082
  5843  0C49                     u3520:	
  5844  0C49                     l4080:	
  5845  0C49  09A6               	comf	___awmod@dividend,f
  5846  0C4A  09A7               	comf	___awmod@dividend+1,f
  5847  0C4B  0AA6               	incf	___awmod@dividend,f
  5848  0C4C  1903               	skipnz
  5849  0C4D  0AA7               	incf	___awmod@dividend+1,f
  5850  0C4E                     l4082:	
  5851  0C4E  0827               	movf	___awmod@dividend+1,w
  5852  0C4F  00A5               	movwf	?___awmod+1
  5853  0C50  0826               	movf	___awmod@dividend,w
  5854  0C51  00A4               	movwf	?___awmod
  5855  0C52                     l606:	
  5856  0C52  0008               	return
  5857  0C53                     __end_of___awmod:	
  5858                           
  5859                           	psect	text19
  5860  0CB8                     __ptext19:	
  5861 ;; *************** function ___awdiv *****************
  5862 ;; Defined at:
  5863 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  divisor         2   11[BANK0 ] int 
  5866 ;;  dividend        2   13[BANK0 ] int 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  quotient        2   18[BANK0 ] int 
  5869 ;;  sign            1   17[BANK0 ] unsigned char 
  5870 ;;  counter         1   16[BANK0 ] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  2   11[BANK0 ] int 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5880 ;;      Params:         0       4       0       0       0
  5881 ;;      Locals:         0       4       0       0       0
  5882 ;;      Temps:          0       1       0       0       0
  5883 ;;      Totals:         0       9       0       0       0
  5884 ;;Total ram usage:        9 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    3
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		_GetDigits
  5891 ;;		_map
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           
  5896                           ;psect for function ___awdiv
  5897  0CB8                     ___awdiv:	
  5898  0CB8                     l4004:	
  5899                           ;incstack = 0
  5900                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5901                           
  5902  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  5903  0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  5904  0CBA  01B1               	clrf	___awdiv@sign
  5905  0CBB                     l4006:	
  5906  0CBB  1FAC               	btfss	___awdiv@divisor+1,7
  5907  0CBC  2CBE               	goto	u3341
  5908  0CBD  2CBF               	goto	u3340
  5909  0CBE                     u3341:	
  5910  0CBE  2CC6               	goto	l4012
  5911  0CBF                     u3340:	
  5912  0CBF                     l4008:	
  5913  0CBF  09AB               	comf	___awdiv@divisor,f
  5914  0CC0  09AC               	comf	___awdiv@divisor+1,f
  5915  0CC1  0AAB               	incf	___awdiv@divisor,f
  5916  0CC2  1903               	skipnz
  5917  0CC3  0AAC               	incf	___awdiv@divisor+1,f
  5918  0CC4                     l4010:	
  5919  0CC4  01B1               	clrf	___awdiv@sign
  5920  0CC5  0AB1               	incf	___awdiv@sign,f
  5921  0CC6                     l4012:	
  5922  0CC6  1FAE               	btfss	___awdiv@dividend+1,7
  5923  0CC7  2CC9               	goto	u3351
  5924  0CC8  2CCA               	goto	u3350
  5925  0CC9                     u3351:	
  5926  0CC9  2CD3               	goto	l4018
  5927  0CCA                     u3350:	
  5928  0CCA                     l4014:	
  5929  0CCA  09AD               	comf	___awdiv@dividend,f
  5930  0CCB  09AE               	comf	___awdiv@dividend+1,f
  5931  0CCC  0AAD               	incf	___awdiv@dividend,f
  5932  0CCD  1903               	skipnz
  5933  0CCE  0AAE               	incf	___awdiv@dividend+1,f
  5934  0CCF                     l4016:	
  5935  0CCF  3001               	movlw	1
  5936  0CD0  00AF               	movwf	??___awdiv
  5937  0CD1  082F               	movf	??___awdiv,w
  5938  0CD2  06B1               	xorwf	___awdiv@sign,f
  5939  0CD3                     l4018:	
  5940  0CD3  01B2               	clrf	___awdiv@quotient
  5941  0CD4  01B3               	clrf	___awdiv@quotient+1
  5942  0CD5                     l4020:	
  5943  0CD5  082B               	movf	___awdiv@divisor,w
  5944  0CD6  042C               	iorwf	___awdiv@divisor+1,w
  5945  0CD7  1903               	btfsc	3,2
  5946  0CD8  2CDA               	goto	u3361
  5947  0CD9  2CDB               	goto	u3360
  5948  0CDA                     u3361:	
  5949  0CDA  2D12               	goto	l4040
  5950  0CDB                     u3360:	
  5951  0CDB                     l4022:	
  5952  0CDB  01B0               	clrf	___awdiv@counter
  5953  0CDC  0AB0               	incf	___awdiv@counter,f
  5954  0CDD  2CE9               	goto	l4028
  5955  0CDE                     l4024:	
  5956  0CDE  3001               	movlw	1
  5957  0CDF                     u3375:	
  5958  0CDF  1003               	clrc
  5959  0CE0  0DAB               	rlf	___awdiv@divisor,f
  5960  0CE1  0DAC               	rlf	___awdiv@divisor+1,f
  5961  0CE2  3EFF               	addlw	-1
  5962  0CE3  1D03               	skipz
  5963  0CE4  2CDF               	goto	u3375
  5964  0CE5                     l4026:	
  5965  0CE5  3001               	movlw	1
  5966  0CE6  00AF               	movwf	??___awdiv
  5967  0CE7  082F               	movf	??___awdiv,w
  5968  0CE8  07B0               	addwf	___awdiv@counter,f
  5969  0CE9                     l4028:	
  5970  0CE9  1FAC               	btfss	___awdiv@divisor+1,7
  5971  0CEA  2CEC               	goto	u3381
  5972  0CEB  2CED               	goto	u3380
  5973  0CEC                     u3381:	
  5974  0CEC  2CDE               	goto	l4024
  5975  0CED                     u3380:	
  5976  0CED                     l4030:	
  5977  0CED  3001               	movlw	1
  5978  0CEE                     u3395:	
  5979  0CEE  1003               	clrc
  5980  0CEF  0DB2               	rlf	___awdiv@quotient,f
  5981  0CF0  0DB3               	rlf	___awdiv@quotient+1,f
  5982  0CF1  3EFF               	addlw	-1
  5983  0CF2  1D03               	skipz
  5984  0CF3  2CEE               	goto	u3395
  5985  0CF4  082C               	movf	___awdiv@divisor+1,w
  5986  0CF5  022E               	subwf	___awdiv@dividend+1,w
  5987  0CF6  1D03               	skipz
  5988  0CF7  2CFA               	goto	u3405
  5989  0CF8  082B               	movf	___awdiv@divisor,w
  5990  0CF9  022D               	subwf	___awdiv@dividend,w
  5991  0CFA                     u3405:	
  5992  0CFA  1C03               	skipc
  5993  0CFB  2CFD               	goto	u3401
  5994  0CFC  2CFE               	goto	u3400
  5995  0CFD                     u3401:	
  5996  0CFD  2D05               	goto	l4036
  5997  0CFE                     u3400:	
  5998  0CFE                     l4032:	
  5999  0CFE  082B               	movf	___awdiv@divisor,w
  6000  0CFF  02AD               	subwf	___awdiv@dividend,f
  6001  0D00  082C               	movf	___awdiv@divisor+1,w
  6002  0D01  1C03               	skipc
  6003  0D02  03AE               	decf	___awdiv@dividend+1,f
  6004  0D03  02AE               	subwf	___awdiv@dividend+1,f
  6005  0D04                     l4034:	
  6006  0D04  1432               	bsf	___awdiv@quotient,0
  6007  0D05                     l4036:	
  6008  0D05  3001               	movlw	1
  6009  0D06                     u3415:	
  6010  0D06  1003               	clrc
  6011  0D07  0CAC               	rrf	___awdiv@divisor+1,f
  6012  0D08  0CAB               	rrf	___awdiv@divisor,f
  6013  0D09  3EFF               	addlw	-1
  6014  0D0A  1D03               	skipz
  6015  0D0B  2D06               	goto	u3415
  6016  0D0C                     l4038:	
  6017  0D0C  3001               	movlw	1
  6018  0D0D  02B0               	subwf	___awdiv@counter,f
  6019  0D0E  1D03               	btfss	3,2
  6020  0D0F  2D11               	goto	u3421
  6021  0D10  2D12               	goto	u3420
  6022  0D11                     u3421:	
  6023  0D11  2CED               	goto	l4030
  6024  0D12                     u3420:	
  6025  0D12                     l4040:	
  6026  0D12  0831               	movf	___awdiv@sign,w
  6027  0D13  1903               	btfsc	3,2
  6028  0D14  2D16               	goto	u3431
  6029  0D15  2D17               	goto	u3430
  6030  0D16                     u3431:	
  6031  0D16  2D1C               	goto	l4044
  6032  0D17                     u3430:	
  6033  0D17                     l4042:	
  6034  0D17  09B2               	comf	___awdiv@quotient,f
  6035  0D18  09B3               	comf	___awdiv@quotient+1,f
  6036  0D19  0AB2               	incf	___awdiv@quotient,f
  6037  0D1A  1903               	skipnz
  6038  0D1B  0AB3               	incf	___awdiv@quotient+1,f
  6039  0D1C                     l4044:	
  6040  0D1C  0833               	movf	___awdiv@quotient+1,w
  6041  0D1D  00AC               	movwf	?___awdiv+1
  6042  0D1E  0832               	movf	___awdiv@quotient,w
  6043  0D1F  00AB               	movwf	?___awdiv
  6044  0D20                     l593:	
  6045  0D20  0008               	return
  6046  0D21                     __end_of___awdiv:	
  6047                           
  6048                           	psect	text20
  6049  09A0                     __ptext20:	
  6050 ;; *************** function _ADC_Read *****************
  6051 ;; Defined at:
  6052 ;;		line 339 in file "main.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  canale          1    wreg     unsigned char 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  canale          1    7[BANK0 ] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  2    4[BANK0 ] int 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6066 ;;      Params:         0       2       0       0       0
  6067 ;;      Locals:         0       1       0       0       0
  6068 ;;      Temps:          0       1       0       0       0
  6069 ;;      Totals:         0       4       0       0       0
  6070 ;;Total ram usage:        4 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    3
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           
  6081                           ;psect for function _ADC_Read
  6082  09A0                     _ADC_Read:	
  6083                           
  6084                           ;incstack = 0
  6085                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  6086                           ;ADC_Read@canale stored from wreg
  6087  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  6088  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  6089  09A2  00A7               	movwf	ADC_Read@canale
  6090  09A3                     l4218:	
  6091                           
  6092                           ;main.c: 339: int ADC_Read(char canale);main.c: 340: {;main.c: 341:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  6093  09A3  0827               	movf	ADC_Read@canale,w
  6094  09A4  00A6               	movwf	??_ADC_Read
  6095  09A5  3002               	movlw	2
  6096  09A6                     u3645:	
  6097  09A6  1003               	clrc
  6098  09A7  0DA6               	rlf	??_ADC_Read,f
  6099  09A8  3EFF               	addlw	-1
  6100  09A9  1D03               	skipz
  6101  09AA  29A6               	goto	u3645
  6102  09AB  1003               	clrc
  6103  09AC  0D26               	rlf	??_ADC_Read,w
  6104  09AD  3801               	iorlw	1
  6105  09AE  009F               	movwf	31	;volatile
  6106  09AF                     l4220:	
  6107                           
  6108                           ;main.c: 342:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  6109  09AF  3004               	movlw	4
  6110  09B0  1283               	bcf	3,5	;RP0=0, select bank0
  6111  09B1  1303               	bcf	3,6	;RP1=0, select bank0
  6112  09B2  00A6               	movwf	??_ADC_Read
  6113  09B3                     u3957:	
  6114  09B3  0BA6               	decfsz	??_ADC_Read,f
  6115  09B4  29B3               	goto	u3957
  6116  09B5  0000               	nop
  6117  09B6                     l4222:	
  6118                           
  6119                           ;main.c: 343:     GO_nDONE = 1;
  6120  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  6121  09B7  1303               	bcf	3,6	;RP1=0, select bank0
  6122  09B8  151F               	bsf	31,2	;volatile
  6123  09B9                     l269:	
  6124                           ;main.c: 345:         ;
  6125                           
  6126                           
  6127                           ;main.c: 344:     while (GO_nDONE)
  6128  09B9  191F               	btfsc	31,2	;volatile
  6129  09BA  29BC               	goto	u3651
  6130  09BB  29BD               	goto	u3650
  6131  09BC                     u3651:	
  6132  09BC  29B9               	goto	l269
  6133  09BD                     u3650:	
  6134  09BD                     l4224:	
  6135                           
  6136                           ;main.c: 346:     return ADRESL + (ADRESH << 8);
  6137  09BD  081E               	movf	30,w	;volatile
  6138  09BE  00A5               	movwf	?_ADC_Read+1
  6139  09BF  1683               	bsf	3,5	;RP0=1, select bank1
  6140  09C0  1303               	bcf	3,6	;RP1=0, select bank1
  6141  09C1  081E               	movf	30,w	;volatile
  6142  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  6143  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  6144  09C4  00A4               	movwf	?_ADC_Read
  6145  09C5                     l272:	
  6146  09C5  0008               	return
  6147  09C6                     __end_of_ADC_Read:	
  6148                           
  6149                           	psect	text21
  6150  0BA0                     __ptext21:	
  6151 ;; *************** function _ISR *****************
  6152 ;; Defined at:
  6153 ;;		line 520 in file "main.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6167 ;;      Params:         0       0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0
  6169 ;;      Temps:          0       4       0       0       0
  6170 ;;      Totals:         0       4       0       0       0
  6171 ;;Total ram usage:        4 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    2
  6174 ;; This function calls:
  6175 ;;		_UART_Read
  6176 ;;		_conteggioVeicoli
  6177 ;; This function is called by:
  6178 ;;		Interrupt level 1
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           
  6183                           ;psect for function _ISR
  6184  0BA0                     _ISR:	
  6185  0BA0                     i1l2686:	
  6186                           
  6187                           ;main.c: 523:     if (RCIF && readGateway.Bit == 0)
  6188  0BA0  1E8C               	btfss	12,5	;volatile
  6189  0BA1  2BA3               	goto	u211_21
  6190  0BA2  2BA4               	goto	u211_20
  6191  0BA3                     u211_21:	
  6192  0BA3  2BAD               	goto	i1l2694
  6193  0BA4                     u211_20:	
  6194  0BA4                     i1l2688:	
  6195  0BA4  1853               	btfsc	_readGateway,0
  6196  0BA5  2BA7               	goto	u212_21
  6197  0BA6  2BA8               	goto	u212_20
  6198  0BA7                     u212_21:	
  6199  0BA7  2BAD               	goto	i1l2694
  6200  0BA8                     u212_20:	
  6201  0BA8                     i1l2690:	
  6202                           
  6203                           ;main.c: 524:     {;main.c: 525:         readGateway.Bit = 1;
  6204  0BA8  1453               	bsf	_readGateway,0
  6205                           
  6206                           ;main.c: 526:         readGatewayDone.Bit = 0;
  6207  0BA9  1054               	bcf	_readGatewayDone,0
  6208                           
  6209                           ;main.c: 527:         readGatewayDone.Timeout = 0;
  6210  0BAA  10D4               	bcf	_readGatewayDone,1
  6211  0BAB                     i1l2692:	
  6212                           
  6213                           ;main.c: 528:         dataFromGatewayIndex = 0;
  6214  0BAB  01CE               	clrf	_dataFromGatewayIndex
  6215                           
  6216                           ;main.c: 529:         timerReadFromGateway = 0;
  6217  0BAC  01CD               	clrf	_timerReadFromGateway
  6218  0BAD                     i1l2694:	
  6219                           
  6220                           ;main.c: 531:     if (RCIF && readGateway.Bit == 1)
  6221  0BAD  1E8C               	btfss	12,5	;volatile
  6222  0BAE  2BB0               	goto	u213_21
  6223  0BAF  2BB1               	goto	u213_20
  6224  0BB0                     u213_21:	
  6225  0BB0  2BC8               	goto	i1l2704
  6226  0BB1                     u213_20:	
  6227  0BB1                     i1l2696:	
  6228  0BB1  1C53               	btfss	_readGateway,0
  6229  0BB2  2BB4               	goto	u214_21
  6230  0BB3  2BB5               	goto	u214_20
  6231  0BB4                     u214_21:	
  6232  0BB4  2BC8               	goto	i1l2704
  6233  0BB5                     u214_20:	
  6234  0BB5                     i1l2698:	
  6235                           
  6236                           ;main.c: 532:     {;main.c: 533:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  6237  0BB5  120A  158A  2145  120A  158A  	fcall	_UART_Read
  6238  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  6239  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  6240  0BBC  00A0               	movwf	??_ISR
  6241  0BBD  084E               	movf	_dataFromGatewayIndex,w
  6242  0BBE  3EAC               	addlw	(low (_dataFromGateway| 0))& (0+255)
  6243  0BBF  0084               	movwf	4
  6244  0BC0  0820               	movf	??_ISR,w
  6245  0BC1  1383               	bcf	3,7	;select IRP bank1
  6246  0BC2  0080               	movwf	0
  6247  0BC3                     i1l2700:	
  6248                           
  6249                           ;main.c: 534:         dataFromGatewayIndex++;
  6250  0BC3  3001               	movlw	1
  6251  0BC4  00A0               	movwf	??_ISR
  6252  0BC5  0820               	movf	??_ISR,w
  6253  0BC6  07CE               	addwf	_dataFromGatewayIndex,f
  6254  0BC7                     i1l2702:	
  6255                           
  6256                           ;main.c: 535:         timerReadFromGateway = 0;
  6257  0BC7  01CD               	clrf	_timerReadFromGateway
  6258  0BC8                     i1l2704:	
  6259                           
  6260                           ;main.c: 540:     if (TMR0IF)
  6261  0BC8  1D0B               	btfss	11,2	;volatile
  6262  0BC9  2BCB               	goto	u215_21
  6263  0BCA  2BCC               	goto	u215_20
  6264  0BCB                     u215_21:	
  6265  0BCB  2BD6               	goto	i1l2712
  6266  0BCC                     u215_20:	
  6267  0BCC                     i1l2706:	
  6268                           
  6269                           ;main.c: 541:     {;main.c: 542:         TMR0IF = 0;
  6270  0BCC  110B               	bcf	11,2	;volatile
  6271  0BCD                     i1l2708:	
  6272                           
  6273                           ;main.c: 543:         conteggioVeicoli();
  6274  0BCD  120A  158A  2453  120A  158A  	fcall	_conteggioVeicoli
  6275  0BD2                     i1l2710:	
  6276                           
  6277                           ;main.c: 544:         TMR0 = 6;
  6278  0BD2  3006               	movlw	6
  6279  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  6280  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  6281  0BD5  0081               	movwf	1	;volatile
  6282  0BD6                     i1l2712:	
  6283                           
  6284                           ;main.c: 547:     if (TMR1IF)
  6285  0BD6  1C0C               	btfss	12,0	;volatile
  6286  0BD7  2BD9               	goto	u216_21
  6287  0BD8  2BDA               	goto	u216_20
  6288  0BD9                     u216_21:	
  6289  0BD9  2BEF               	goto	i1l354
  6290  0BDA                     u216_20:	
  6291  0BDA                     i1l2714:	
  6292                           
  6293                           ;main.c: 548:     {;main.c: 549:         TMR1IF = 0;
  6294  0BDA  100C               	bcf	12,0	;volatile
  6295  0BDB                     i1l2716:	
  6296                           
  6297                           ;main.c: 550:         count_lux++;
  6298  0BDB  3001               	movlw	1
  6299  0BDC  00A0               	movwf	??_ISR
  6300  0BDD  0820               	movf	??_ISR,w
  6301  0BDE  07CF               	addwf	_count_lux,f
  6302  0BDF                     i1l2718:	
  6303                           
  6304                           ;main.c: 552:         if (count_lux >= 20)
  6305  0BDF  3014               	movlw	20
  6306  0BE0  024F               	subwf	_count_lux,w
  6307  0BE1  1C03               	skipc
  6308  0BE2  2BE4               	goto	u217_21
  6309  0BE3  2BE5               	goto	u217_20
  6310  0BE4                     u217_21:	
  6311  0BE4  2BEB               	goto	i1l2726
  6312  0BE5                     u217_20:	
  6313  0BE5                     i1l2720:	
  6314                           
  6315                           ;main.c: 553:         {;main.c: 554:             secondPassed.Bit = 1;
  6316  0BE5  1452               	bsf	_secondPassed,0
  6317  0BE6                     i1l2722:	
  6318                           
  6319                           ;main.c: 555:             count_lux = 0;
  6320  0BE6  01CF               	clrf	_count_lux
  6321  0BE7                     i1l2724:	
  6322                           
  6323                           ;main.c: 556:             timerReadFromGateway++;
  6324  0BE7  3001               	movlw	1
  6325  0BE8  00A0               	movwf	??_ISR
  6326  0BE9  0820               	movf	??_ISR,w
  6327  0BEA  07CD               	addwf	_timerReadFromGateway,f
  6328  0BEB                     i1l2726:	
  6329                           
  6330                           ;main.c: 559:         TMR1H = 60;
  6331  0BEB  303C               	movlw	60
  6332  0BEC  008F               	movwf	15	;volatile
  6333  0BED                     i1l2728:	
  6334                           
  6335                           ;main.c: 560:         TMR1L = 176;
  6336  0BED  30B0               	movlw	176
  6337  0BEE  008E               	movwf	14	;volatile
  6338  0BEF                     i1l354:	
  6339  0BEF  0823               	movf	??_ISR+3,w
  6340  0BF0  008A               	movwf	10
  6341  0BF1  0822               	movf	??_ISR+2,w
  6342  0BF2  0084               	movwf	4
  6343  0BF3  0E21               	swapf	(??_ISR+1)^0,w
  6344  0BF4  0083               	movwf	3
  6345  0BF5  0EFE               	swapf	btemp,f
  6346  0BF6  0E7E               	swapf	btemp,w
  6347  0BF7  0009               	retfie
  6348  0BF8                     __end_of_ISR:	
  6349                           
  6350                           	psect	intentry
  6351  0004                     __pintentry:	
  6352                           ;incstack = 0
  6353                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6354                           
  6355  0004                     interrupt_function:	
  6356  007E                     saved_w	set	btemp
  6357  0004  00FE               	movwf	btemp
  6358  0005  0E03               	swapf	3,w
  6359  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6360  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6361  0008  00A1               	movwf	??_ISR+1
  6362  0009  0804               	movf	4,w
  6363  000A  00A2               	movwf	??_ISR+2
  6364  000B  080A               	movf	10,w
  6365  000C  00A3               	movwf	??_ISR+3
  6366  000D  120A  158A  2BA0   	ljmp	_ISR
  6367                           
  6368                           	psect	text22
  6369  0C53                     __ptext22:	
  6370 ;; *************** function _conteggioVeicoli *****************
  6371 ;; Defined at:
  6372 ;;		line 398 in file "main.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;		None
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  i               1   13[COMMON] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      void 
  6379 ;; Registers used:
  6380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6386 ;;      Params:         0       0       0       0       0
  6387 ;;      Locals:         1       0       0       0       0
  6388 ;;      Temps:          4       0       0       0       0
  6389 ;;      Totals:         5       0       0       0       0
  6390 ;;Total ram usage:        5 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    1
  6393 ;; This function calls:
  6394 ;;		_Conteggio
  6395 ;; This function is called by:
  6396 ;;		_ISR
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           
  6401                           ;psect for function _conteggioVeicoli
  6402  0C53                     _conteggioVeicoli:	
  6403  0C53                     i1l2464:	
  6404                           ;incstack = 0
  6405                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6406                           
  6407                           
  6408                           ;main.c: 400:     RoadsSensors[0] = PORTBbits.RB3;
  6409  0C53  3000               	movlw	0
  6410  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  6411  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  6412  0C56  1986               	btfsc	6,3	;volatile
  6413  0C57  3001               	movlw	1
  6414  0C58  1683               	bsf	3,5	;RP0=1, select bank1
  6415  0C59  1303               	bcf	3,6	;RP1=0, select bank1
  6416  0C5A  00A8               	movwf	_RoadsSensors^(0+128)
  6417                           
  6418                           ;main.c: 401:     RoadsSensors[1] = PORTBbits.RB4;
  6419  0C5B  3000               	movlw	0
  6420  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  6421  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  6422  0C5E  1A06               	btfsc	6,4	;volatile
  6423  0C5F  3001               	movlw	1
  6424  0C60  1683               	bsf	3,5	;RP0=1, select bank1
  6425  0C61  1303               	bcf	3,6	;RP1=0, select bank1
  6426  0C62  00A9               	movwf	(_RoadsSensors^(0+128)+1)
  6427                           
  6428                           ;main.c: 402:     RoadsSensors[2] = PORTBbits.RB5;
  6429  0C63  3000               	movlw	0
  6430  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  6431  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  6432  0C66  1A86               	btfsc	6,5	;volatile
  6433  0C67  3001               	movlw	1
  6434  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  6435  0C69  1303               	bcf	3,6	;RP1=0, select bank1
  6436  0C6A  00AA               	movwf	(_RoadsSensors^(0+128)+2)
  6437                           
  6438                           ;main.c: 403:     RoadsSensors[3] = PORTAbits.RA5;
  6439  0C6B  3000               	movlw	0
  6440  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  6441  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  6442  0C6E  1A85               	btfsc	5,5	;volatile
  6443  0C6F  3001               	movlw	1
  6444  0C70  1683               	bsf	3,5	;RP0=1, select bank1
  6445  0C71  1303               	bcf	3,6	;RP1=0, select bank1
  6446  0C72  00AB               	movwf	(_RoadsSensors^(0+128)+3)
  6447  0C73                     i1l2466:	
  6448                           
  6449                           ;main.c: 405:     for (unsigned char i = 0; i < 4; i++)
  6450  0C73  01FD               	clrf	conteggioVeicoli@i
  6451  0C74                     i1l2470:	
  6452                           
  6453                           ;main.c: 406:     {;main.c: 407:         if (!RoadsSensors[i])
  6454  0C74  087D               	movf	conteggioVeicoli@i,w
  6455  0C75  3EA8               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6456  0C76  0084               	movwf	4
  6457  0C77  1383               	bcf	3,7	;select IRP bank1
  6458  0C78  0800               	movf	0,w
  6459  0C79  1D03               	btfss	3,2
  6460  0C7A  2C7C               	goto	u184_21
  6461  0C7B  2C7D               	goto	u184_20
  6462  0C7C                     u184_21:	
  6463  0C7C  2C86               	goto	i1l2474
  6464  0C7D                     u184_20:	
  6465  0C7D                     i1l2472:	
  6466                           
  6467                           ;main.c: 408:         {;main.c: 409:             count++;
  6468  0C7D  3001               	movlw	1
  6469  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6470  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6471  0C80  07C8               	addwf	_count,f
  6472  0C81  1803               	skipnc
  6473  0C82  0AC9               	incf	_count+1,f
  6474  0C83  3000               	movlw	0
  6475  0C84  07C9               	addwf	_count+1,f
  6476                           
  6477                           ;main.c: 410:         }
  6478  0C85  2CAD               	goto	i1l2480
  6479  0C86                     i1l2474:	
  6480  0C86  087D               	movf	conteggioVeicoli@i,w
  6481  0C87  3EA8               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6482  0C88  0084               	movwf	4
  6483  0C89  0800               	movf	0,w
  6484  0C8A  1903               	btfsc	3,2
  6485  0C8B  2C8D               	goto	u185_21
  6486  0C8C  2C8E               	goto	u185_20
  6487  0C8D                     u185_21:	
  6488  0C8D  2CAD               	goto	i1l2480
  6489  0C8E                     u185_20:	
  6490  0C8E                     i1l2476:	
  6491                           
  6492                           ;main.c: 412:         {;main.c: 413:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  6493  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  6494  0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  6495  0C90  0849               	movf	_count+1,w
  6496  0C91  00F1               	movwf	Conteggio@_count+1
  6497  0C92  0848               	movf	_count,w
  6498  0C93  00F0               	movwf	Conteggio@_count
  6499  0C94  305D               	movlw	(low (_motorcycle| 0))& (0+255)
  6500  0C95  00F9               	movwf	??_conteggioVeicoli
  6501  0C96  0879               	movf	??_conteggioVeicoli,w
  6502  0C97  00F2               	movwf	Conteggio@_motorcycle
  6503  0C98  3059               	movlw	(low (_car| 0))& (0+255)
  6504  0C99  00FA               	movwf	??_conteggioVeicoli+1
  6505  0C9A  087A               	movf	??_conteggioVeicoli+1,w
  6506  0C9B  00F3               	movwf	Conteggio@_car
  6507  0C9C  3055               	movlw	(low (_truck| 0))& (0+255)
  6508  0C9D  00FB               	movwf	??_conteggioVeicoli+2
  6509  0C9E  087B               	movf	??_conteggioVeicoli+2,w
  6510  0C9F  00F4               	movwf	Conteggio@_truck
  6511  0CA0  087D               	movf	conteggioVeicoli@i,w
  6512  0CA1  00FC               	movwf	??_conteggioVeicoli+3
  6513  0CA2  087C               	movf	??_conteggioVeicoli+3,w
  6514  0CA3  00F5               	movwf	Conteggio@index
  6515  0CA4  120A  158A  22AC  120A  158A  	fcall	_Conteggio
  6516  0CA9                     i1l2478:	
  6517                           
  6518                           ;main.c: 414:             count = 0;
  6519  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  6520  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  6521  0CAB  01C8               	clrf	_count
  6522  0CAC  01C9               	clrf	_count+1
  6523  0CAD                     i1l2480:	
  6524                           
  6525                           ;main.c: 416:     }
  6526  0CAD  3001               	movlw	1
  6527  0CAE  00F9               	movwf	??_conteggioVeicoli
  6528  0CAF  0879               	movf	??_conteggioVeicoli,w
  6529  0CB0  07FD               	addwf	conteggioVeicoli@i,f
  6530  0CB1                     i1l2482:	
  6531  0CB1  3004               	movlw	4
  6532  0CB2  027D               	subwf	conteggioVeicoli@i,w
  6533  0CB3  1C03               	skipc
  6534  0CB4  2CB6               	goto	u186_21
  6535  0CB5  2CB7               	goto	u186_20
  6536  0CB6                     u186_21:	
  6537  0CB6  2C74               	goto	i1l2470
  6538  0CB7                     u186_20:	
  6539  0CB7                     i1l306:	
  6540  0CB7  0008               	return
  6541  0CB8                     __end_of_conteggioVeicoli:	
  6542                           
  6543                           	psect	text23
  6544  0AAC                     __ptext23:	
  6545 ;; *************** function _Conteggio *****************
  6546 ;; Defined at:
  6547 ;;		line 117 in file "./CustomLib/TrafficLight.h"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  _count          2    0[COMMON] unsigned int 
  6550 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  6551 ;;		 -> motorcycle(4), 
  6552 ;;  _car            1    3[COMMON] PTR unsigned char 
  6553 ;;		 -> car(4), 
  6554 ;;  _truck          1    4[COMMON] PTR unsigned char 
  6555 ;;		 -> truck(4), 
  6556 ;;  index           1    5[COMMON] unsigned char 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6568 ;;      Params:         6       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0
  6570 ;;      Temps:          3       0       0       0       0
  6571 ;;      Totals:         9       0       0       0       0
  6572 ;;Total ram usage:        9 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_conteggioVeicoli
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           
  6582                           ;psect for function _Conteggio
  6583  0AAC                     _Conteggio:	
  6584  0AAC                     i1l2068:	
  6585                           ;incstack = 0
  6586                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  6587                           
  6588                           
  6589                           ;./CustomLib/TrafficLight.h: 117: void Conteggio(unsigned int _count, unsigned char _mot
      +                          orcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custo
      +                          mLib/TrafficLight.h: 118: {;./CustomLib/TrafficLight.h: 119:     if (_count >= 500)
  6590  0AAC  3001               	movlw	1
  6591  0AAD  0271               	subwf	Conteggio@_count+1,w
  6592  0AAE  30F4               	movlw	244
  6593  0AAF  1903               	skipnz
  6594  0AB0  0270               	subwf	Conteggio@_count,w
  6595  0AB1  1C03               	skipc
  6596  0AB2  2AB4               	goto	u127_21
  6597  0AB3  2AB5               	goto	u127_20
  6598  0AB4                     u127_21:	
  6599  0AB4  2AC5               	goto	i1l2072
  6600  0AB5                     u127_20:	
  6601  0AB5                     i1l2070:	
  6602                           
  6603                           ;./CustomLib/TrafficLight.h: 120:     {;./CustomLib/TrafficLight.h: 121:         _motorc
      +                          ycle[index]=_motorcycle[index]+1;
  6604  0AB5  0875               	movf	Conteggio@index,w
  6605  0AB6  0772               	addwf	Conteggio@_motorcycle,w
  6606  0AB7  00F6               	movwf	??_Conteggio
  6607  0AB8  0876               	movf	??_Conteggio,w
  6608  0AB9  0084               	movwf	4
  6609  0ABA  1383               	bcf	3,7	;select IRP bank0
  6610  0ABB  0800               	movf	0,w
  6611  0ABC  3E01               	addlw	1
  6612  0ABD  00F7               	movwf	??_Conteggio+1
  6613  0ABE  0875               	movf	Conteggio@index,w
  6614  0ABF  0772               	addwf	Conteggio@_motorcycle,w
  6615  0AC0  00F8               	movwf	??_Conteggio+2
  6616  0AC1  0878               	movf	??_Conteggio+2,w
  6617  0AC2  0084               	movwf	4
  6618  0AC3  0877               	movf	??_Conteggio+1,w
  6619  0AC4  0080               	movwf	0
  6620  0AC5                     i1l2072:	
  6621                           
  6622                           ;./CustomLib/TrafficLight.h: 123:     if (_count >= 1500)
  6623  0AC5  3005               	movlw	5
  6624  0AC6  0271               	subwf	Conteggio@_count+1,w
  6625  0AC7  30DC               	movlw	220
  6626  0AC8  1903               	skipnz
  6627  0AC9  0270               	subwf	Conteggio@_count,w
  6628  0ACA  1C03               	skipc
  6629  0ACB  2ACD               	goto	u128_21
  6630  0ACC  2ACE               	goto	u128_20
  6631  0ACD                     u128_21:	
  6632  0ACD  2ADE               	goto	i1l2076
  6633  0ACE                     u128_20:	
  6634  0ACE                     i1l2074:	
  6635                           
  6636                           ;./CustomLib/TrafficLight.h: 124:     {;./CustomLib/TrafficLight.h: 125:         _car[in
      +                          dex]=_car[index]+1;
  6637  0ACE  0875               	movf	Conteggio@index,w
  6638  0ACF  0773               	addwf	Conteggio@_car,w
  6639  0AD0  00F6               	movwf	??_Conteggio
  6640  0AD1  0876               	movf	??_Conteggio,w
  6641  0AD2  0084               	movwf	4
  6642  0AD3  1383               	bcf	3,7	;select IRP bank0
  6643  0AD4  0800               	movf	0,w
  6644  0AD5  3E01               	addlw	1
  6645  0AD6  00F7               	movwf	??_Conteggio+1
  6646  0AD7  0875               	movf	Conteggio@index,w
  6647  0AD8  0773               	addwf	Conteggio@_car,w
  6648  0AD9  00F8               	movwf	??_Conteggio+2
  6649  0ADA  0878               	movf	??_Conteggio+2,w
  6650  0ADB  0084               	movwf	4
  6651  0ADC  0877               	movf	??_Conteggio+1,w
  6652  0ADD  0080               	movwf	0
  6653  0ADE                     i1l2076:	
  6654                           
  6655                           ;./CustomLib/TrafficLight.h: 127:     if (_count >= 3000)
  6656  0ADE  300B               	movlw	11
  6657  0ADF  0271               	subwf	Conteggio@_count+1,w
  6658  0AE0  30B8               	movlw	184
  6659  0AE1  1903               	skipnz
  6660  0AE2  0270               	subwf	Conteggio@_count,w
  6661  0AE3  1C03               	skipc
  6662  0AE4  2AE6               	goto	u129_21
  6663  0AE5  2AE7               	goto	u129_20
  6664  0AE6                     u129_21:	
  6665  0AE6  2AF7               	goto	i1l164
  6666  0AE7                     u129_20:	
  6667  0AE7                     i1l2078:	
  6668                           
  6669                           ;./CustomLib/TrafficLight.h: 128:     {;./CustomLib/TrafficLight.h: 129:         _truck[
      +                          index]=_truck[index]+1;
  6670  0AE7  0875               	movf	Conteggio@index,w
  6671  0AE8  0774               	addwf	Conteggio@_truck,w
  6672  0AE9  00F6               	movwf	??_Conteggio
  6673  0AEA  0876               	movf	??_Conteggio,w
  6674  0AEB  0084               	movwf	4
  6675  0AEC  1383               	bcf	3,7	;select IRP bank0
  6676  0AED  0800               	movf	0,w
  6677  0AEE  3E01               	addlw	1
  6678  0AEF  00F7               	movwf	??_Conteggio+1
  6679  0AF0  0875               	movf	Conteggio@index,w
  6680  0AF1  0774               	addwf	Conteggio@_truck,w
  6681  0AF2  00F8               	movwf	??_Conteggio+2
  6682  0AF3  0878               	movf	??_Conteggio+2,w
  6683  0AF4  0084               	movwf	4
  6684  0AF5  0877               	movf	??_Conteggio+1,w
  6685  0AF6  0080               	movwf	0
  6686  0AF7                     i1l164:	
  6687  0AF7  0008               	return
  6688  0AF8                     __end_of_Conteggio:	
  6689                           
  6690                           	psect	text24
  6691  0945                     __ptext24:	
  6692 ;; *************** function _UART_Read *****************
  6693 ;; Defined at:
  6694 ;;		line 378 in file "main.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;		None
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      unsigned char 
  6701 ;; Registers used:
  6702 ;;		wreg
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6708 ;;      Params:         0       0       0       0       0
  6709 ;;      Locals:         0       0       0       0       0
  6710 ;;      Temps:          0       0       0       0       0
  6711 ;;      Totals:         0       0       0       0       0
  6712 ;;Total ram usage:        0 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_ISR
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           
  6722                           ;psect for function _UART_Read
  6723  0945                     _UART_Read:	
  6724  0945                     i1l2458:	
  6725                           ;incstack = 0
  6726                           ; Regs used in _UART_Read: [wreg]
  6727                           
  6728  0945                     i1l290:	
  6729                           ;main.c: 381:         ;
  6730                           
  6731                           
  6732                           ;main.c: 380:     while (!RCIF)
  6733  0945  1283               	bcf	3,5	;RP0=0, select bank0
  6734  0946  1303               	bcf	3,6	;RP1=0, select bank0
  6735  0947  1E8C               	btfss	12,5	;volatile
  6736  0948  294A               	goto	u183_21
  6737  0949  294B               	goto	u183_20
  6738  094A                     u183_21:	
  6739  094A  2945               	goto	i1l290
  6740  094B                     u183_20:	
  6741  094B                     i1l292:	
  6742                           
  6743                           ;main.c: 382:     RCIF = 0;
  6744  094B  128C               	bcf	12,5	;volatile
  6745  094C                     i1l2460:	
  6746                           
  6747                           ;main.c: 383:     return RCREG;
  6748  094C  081A               	movf	26,w	;volatile
  6749  094D                     i1l293:	
  6750  094D  0008               	return
  6751  094E                     __end_of_UART_Read:	
  6752  007E                     btemp	set	126	;btemp
  6753  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        10
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      75
    BANK1            80      0      75
    BANK3            96     13      27
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    DigitsArr	PTR struct .[2] size(1) Largest target is 3
		 -> digits1(BANK1[3]), digits0(BANK1[3]), 

    Semafori	PTR struct .[4] size(2) Largest target is 14
		 -> s3(BANK3[14]), s2(BANK1[14]), s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK0[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    GetDigits@_digits	PTR PTR struct . size(1) Largest target is 2
		 -> DigitsArr(BANK0[2]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 8
		 -> Semafori(BANK0[8]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 8
		 -> Semafori(BANK0[8]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 8
		 -> Semafori(BANK0[8]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->_SetDisplay
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   29131
                                             32 BANK0      8     8      0
                                              0 BANK3     13    13      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                           _init_ADC
                       _luciSemaforo
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    5066
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      42
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1568
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    6708
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3134
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     232
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         21    21      0    1071
                                              4 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     990
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     842
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  3     3      0    4000
                                             11 BANK0      3     3      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           7     3      4    1860
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    14    13      1    2124
                                             12 BANK0     14    13      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     514
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7    1834
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            9     6      3    5054
                                             20 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     931
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1666
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1690
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      42
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
     ___bmul
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _UpdateTimes
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D      1B       9       28.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BF      12        0.0%
ABS                  0      0      BF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jul 13 14:18:23 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                      ___awdiv@sign 0031                                _s0 00D7  
                              _s1 00C9                                _s2 00BB                                _s3 0190  
                              fsr 0004               ___wmul@multiplicand 0026                    _GetDigits$1199 003A  
               luciSemaforo@index 0027                       __CFG_LVP$ON 0000                               l103 0EB9  
                             l112 0F32                               l125 0769                               l109 0F0A  
                             l135 0AAB                               l152 07D7                               l312 0AFC  
                             l321 0B1F                               l241 0220                               l225 0355  
                             l330 0B9F                               l322 0B23                               l314 0B00  
                             l147 064F                               l315 0B04                               l323 0B4A  
                             l227 008E                               l158 0FFF                               l319 0B1B  
                             l167 0A2B                               l272 09C5                               l344 0E6A  
                             l440 07E6                               l280 095F                               l505 0D35  
                             l281 0962                               l266 0975                               l442 07FE  
                             l515 0DBD                               l275 0A65                               l259 04F4  
                             l269 09B9                               l606 0C52                               l278 095B  
                             l466 099F                               l298 09F6                               l593 0D20  
                    __CFG_CPD$OFF 0000                               _ISR 0BA0                               _car 0059  
                             _map 09F7                               fsr0 0004                               indf 0000  
                    ___awmod@sign 002A                      __CFG_FOSC$HS 0000                              ?_ISR 0070  
           ??_ShowDigitsOnDisplay 002B                              l4000 0DB5                              l4010 0CC4  
                            l4020 0CD5                              l4012 0CC6                              l4004 0CB8  
                            l4100 06A0                              l4030 0CED                              l4022 0CDB  
                            l4014 0CCA                              l4006 0CBB                              l4110 075F  
                            l4102 06E1                              l4032 0CFE                              l4024 0CDE  
                            l4040 0D12                              l4016 0CCF                              l4008 0CBF  
                            l4120 0504                              l4200 0A64                              l4112 0763  
                            l4104 06E5                              l4042 0D17                              l4034 0D04  
                            l4026 0CE5                              l4018 0CD3                              l4050 0BFB  
                            l4130 058A                              l4114 0501                              l4106 06EB  
                            l4210 09DD                              l4202 09C9                              l4220 09AF  
                            l4044 0D1C                              l4036 0D05                              l4028 0CE9  
                            l4060 0C0F                              l4052 0BFF                              l4140 05E9  
                            l4108 0727                              l4212 09E6                              l4204 09DC  
                            l4300 0045                              l4222 09B6                              l4038 0D0C  
                            l4070 0C27                              l4062 0C15                              l4054 0C04  
                            l4142 05ED                              l4126 0506                              l4134 05CC  
                            l4150 076D                              l4214 09EC                              l4310 0050  
                            l4302 0046                              l4224 09BD                              l4080 0C49  
                            l4072 0C31                              l4064 0C18                              l4056 0C06  
                            l4048 0BF8                              l4144 05F3                              l4128 0548  
                            l4136 05DF                              l4160 0792                              l4152 076E  
                            l4232 0B08                              l4240 0B3A                              l4216 09F0  
                            l4400 0322                              l4320 0066                              l4312 0052  
                            l4304 0048                              l4218 09A3                              l4082 0C4E  
                            l4074 0C37                              l4066 0C1F                              l4058 0C0A  
                            l4170 0F37                              l4138 05E3                              l4162 07A5  
                            l4410 033C                              l4330 0087                              l4322 0081  
                            l4314 0054                              l4306 004A                              l4076 0C3E  
                            l4068 0C23                              l4172 0F4C                              l4164 07D2  
                            l4156 0775                              l4260 0DBE                              l4092 0654  
                            l4236 0B27                              l4228 0AFB                              l4180 09F7  
                            l4420 035B                              l4404 032B                              l4332 0088  
                            l4324 0084                              l4316 0056                              l4308 004C  
                            l4078 0C44                              l4174 0F68                              l4158 0784  
                            l4270 0DE8                              l4086 0653                              l4190 096E  
                            l4430 0377                              l4422 035D                              l4406 0333  
                            l4350 0170                              l4414 0340                              l4334 0089  
                            l4326 0085                              l4318 005B                              l4176 0FC5  
                            l4168 0F36                              l4272 0DF3                              l4280 0E35  
                            l4192 0A2C                              l4184 0963                              l4440 040E  
                            l4432 037B                              l4424 0361                              l4416 0359  
                            l4408 0336                              l4360 01E3                              l4344 0095  
                            l4328 0086                              l4178 0FD8                              l4274 0DFD  
                            l4282 0E48                              l4266 0DC2                              l4194 0A34  
                            l4098 0655                              l4186 0967                              l4442 041B  
                            l4450 042F                              l4434 037D                              l4426 0363  
                            l4418 035A                              l4370 01FC                              l4346 00DE  
                            l4354 01B9                              l4338 0092                              l3900 0A69  
                            l4284 0E4E                              l4276 0E18                              l4268 0DCD  
                            l4196 0A62                              l4188 096A                              l4452 0453  
                            l4444 0423                              l4436 039A                              l4460 04DD  
                            l4428 0371                              l4380 0211                              l4372 0209  
                            l4348 0127                              l4356 01CE                              l3910 0AA7  
                            l3902 0A78                              l4286 0E54                              l4198 0A63  
                            l4470 04F8                              l4454 0461                              l4446 0424  
                            l4438 0408                              l4462 04E3                              l4390 0302  
                            l4382 0219                              l4366 01E7                              l4358 01D6  
                            ?_map 0034                              l3904 0A80                              l3920 0B4F  
                            l4720 0B2F                              l3840 0E8C                              l3832 0E6E  
                            l4472 04FC                              l4464 04E8                              l4456 0485  
                            l4448 0429                              l4392 0313                              l4384 0224  
                            l4368 01F6                              l3906 0A91                              l3922 0B6D  
                            l4722 0B42                              l3834 0E7D                              l3914 095B  
                            l4466 04EE                              l4458 04D5                              l4394 0316  
                            l4386 02E2                              l4378 020C                              l4714 01C0  
                            l4298 003F                              l3908 0A9F                              l3924 0B70  
                            l4724 0E3D                              l3940 07E0                              l3860 0EC7  
                            l3852 0E92                              l3836 0E8A                              l3916 0960  
                            l4468 04F2                              l4716 034D                              l4388 02F1  
                            l3950 098C                              l4726 0B97                              l3918 0B4E  
                            l4718 0B10                              l3942 07ED                              l3854 0EA6  
                            l3846 0E8E                              l3838 0E8B                              l4398 031D  
                            l3960 099E                              l3952 098D                              l4728 05D4  
                            l3928 0B8F                              l3944 07F4                              l3936 07D8  
                            l3880 0EE3                              l3864 0EC8                              l3856 0EAC  
                            l3954 0991                              l3970 0D39                              l3946 07FA  
                            l3938 07DC                              l3882 0EF7                              l3874 0EDF  
                            l3866 0ECE                              l3858 0EBF                              l3956 0995  
                            l3980 0D5B                              l3972 0D44                              l3964 0D21  
                            l3892 0F1E                              l3884 0EFD                              l3868 0EDB  
                            l3958 0997                              l3990 0D95                              l3982 0D68  
                            l3974 0D48                              l3966 0D24                              l3894 0F24  
                            l3886 0F10                              l3992 0D96                              l3984 0D6C  
                            l3976 0D50                              l3968 0D28                              l3896 0F31  
                            l3888 0F1D                              l3994 0D9F                              l3986 0D75  
                            l3978 0D58                              l3988 0D87                              l3996 0DA5  
                            l3998 0DAA                              u3100 0EDB                              u3101 0EDA  
                            u3120 0F0A                              u3121 0F09                              u3105 0ED7  
                            u3210 07FA                              u3130 0F10                              u3114 0EEF  
                            u3211 07F9                              u3131 0F0F                              u3115 0EED  
                            u3220 0991                              u3300 0D87                              u3221 0990  
                            u3301 0D86                              u3205 07EE                              u3125 0F06  
                            u3230 099E                              u3150 0F31                              u3231 099D  
                            u3151 0F30                              u3400 0CFE                              u3320 0DA5  
                            u3240 0D28                              u3144 0F16                              u3080 0EB9  
                            u3401 0CFD                              u3321 0DA4                              u3305 0D83  
                            u3241 0D27                              u3145 0F14                              u3081 0EB8  
                            u3065 0E80                              u3330 0DAA                              u3250 0D39  
                            u3090 0EBF                              u3074 0E9E                              u3170 095F  
                            u3331 0DA9                              u3315 0D97                              u3251 0D38  
                            u3155 0F2D                              u3091 0EBE                              u3075 0E9C  
                            u3171 095E                              u3420 0D12                              u3340 0CBF  
                            u3260 0D58                              u3180 07E0                              u3421 0D11  
                            u3405 0CFA                              u3341 0CBE                              u3165 0A86  
                            u3261 0D57                              u3181 07DF                              u3085 0EB5  
                            u3430 0D17                              u3350 0CCA                              u3510 0C44  
                            u3431 0D16                              u3415 0D06                              u3351 0CC9  
                            u3511 0C43                              u3360 0CDB                              u3520 0C49  
                            u3440 0BFF                              u3280 0D6C                              u3361 0CDA  
                            u3521 0C48                              u3505 0C38                              u3441 0BFE  
                            u3281 0D6B                              u3450 0C0A                              u3610 0F68  
                            u3530 06A0                              u3451 0C09                              u3611 0F67  
                            u3275 0D5D                              u3531 069F                              u3195 07E7  
                            u3380 0CED                              u3460 0C15                              u3620 0A43  
                            u3540 06EB                              u3381 0CEC                              u3461 0C14  
                            u3605 079A                              u3541 06EA                              u3550 0727  
                            u3630 09F6                              u3375 0CDF                              u3615 0F64  
                            u3295 0D6E                              u3551 0726                              u3535 069C  
                            u3631 09F5                              u3480 0C27                              u3560 0769  
                            u3800 0361                              u3720 008D                              u3481 0C26  
                            u3625 0A3E                              u3561 0768                              u3801 0360  
                            u3721 008C                              u3650 09BD                              u3490 0C31  
                            u3570 05E9                              u3810 0377                              u3730 01E3  
                            u3651 09BC                              u3395 0CEE                              u3491 0C30  
                            u3475 0C19                              u3571 05E8                              u3811 0376  
                            u3731 01E2                              u3580 05F3                              u3660 0DCD  
                            u3900 04F2                              u3820 037B                              u3740 0209  
                            u3645 09A6                              u3581 05F2                              u3661 0DCC  
                            u3901 04F1                              u3821 037A                              u3741 0208  
                            u3590 0774                              u3670 0DF3                              u3910 04F8  
                            u3830 039A                              u3750 021F                              u3495 0C2D  
                            u3591 0773                              u3671 0DF2                              u3911 04F7  
                            u3831 0399                              u3751 021E                              u3735 01DF  
                            u3680 0DFD                              u3920 04FC                              u3840 0408  
                            u3760 031C                              u3681 0DFC                              u3921 04FB  
                            u3841 0407                              u3761 031B                              u3745 0205  
                            u3690 0E54                              u3850 0423                              u3770 0333  
                            u3691 0E53                              u3851 0422                              u3771 0332  
                            u3860 0429                              u3780 033C                              _RCIF 0065  
                            u3861 0428                              u3781 033B                              u3870 0453  
                            u3790 0359                              u3871 0452                              u3791 0358  
                            u3880 04E3                              u3881 04E2                              u3890 04EE  
                            u3947 0972                              u3891 04ED                              u3957 09B3  
                            _TMR0 0001                              _TXIF 0064                      __CFG_WRT$OFF 0000  
                            _disp 0050                              _main 003F                              _temp 004C  
                            _time 00A0                              map@x 0034                              btemp 007E  
                __end_of_ADC_Read 09C6                     __CFG_BOREN$ON 0000                              start 0010  
                 __end_of_GetTime 0AAC                 ___bmul@multiplier 0027                             ??_ISR 0020  
       __size_of_conteggioVeicoli 0065                             ??_map 003E                   __end_of___aldiv 0DBE  
                           ?_main 0070                   __end_of___awdiv 0D21                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 0C53                   ___awdiv@divisor 002B                             _T1CON 0010  
                           i1l306 0CB7                             i1l164 0AF7                             i1l290 0945  
                           i1l354 0BEF                             i1l292 094B                             i1l293 094D  
                 ___awdiv@counter 0030                             _RCREG 001A              UpdateTimes@_semafori 0037  
                           _TMR1H 000F                             _TMR1L 000E                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _TRISE 0089  
                           _TXREG 0019                     __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A  
              __size_of_UART_Read 0009                   __end_of_display 0811                             _count 0048  
                           main@i 0046                             _truck 0055                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 0013  
                    __end_of_main 0501         __size_of_SetReceivedTimes 006E                __size_of_GetDigits 00CD  
                          ??_main 019E                 SetDefaultTimers@i 0033                 SetDefaultTimers@l 0032  
              __size_of_BuildByte 00C8                        _SetDisplay 0B4B                            _ADCON0 001F  
                          _ADCON1 009F                __size_of_Conteggio 004C                            _ADRESH 001E  
                          _ADRESL 009E                  ___awdiv@dividend 002D                            i1l2070 0AB5  
                          i1l2072 0AC5                            i1l2074 0ACE                            i1l2076 0ADE  
                          i1l2068 0AAC                            i1l2078 0AE7                            i1l2460 094C  
                          i1l2700 0BC3                            i1l2470 0C74                            i1l2710 0BD2  
                          i1l2702 0BC7                            i1l2480 0CAD                            i1l2472 0C7D  
                          i1l2464 0C53                            i1l2720 0BE5                            i1l2712 0BD6  
                          i1l2704 0BC8                            i1l2458 0945                            i1l2482 0CB1  
                          i1l2474 0C86                            i1l2466 0C73                            i1l2722 0BE6  
                          i1l2714 0BDA                            i1l2706 0BCC                            i1l2476 0C8E  
                          i1l2724 0BE7                            i1l2716 0BDB                            i1l2708 0BCD  
                          i1l2478 0CA9                            i1l2726 0BEB                            i1l2718 0BDF  
                          i1l2728 0BED                            u211_20 0BA4                            u211_21 0BA3  
                          i1l2690 0BA8                            i1l2692 0BAB                            i1l2694 0BAD  
                          i1l2686 0BA0                            i1l2696 0BB1                            u212_20 0BA8  
                          i1l2688 0BA4                            u212_21 0BA7                            i1l2698 0BB5  
                          u213_20 0BB1                            u213_21 0BB0                            u214_20 0BB5  
                          u214_21 0BB4                            u127_20 0AB5                            u215_20 0BCC  
                          u127_21 0AB4                            u215_21 0BCB                            u128_20 0ACE  
                          u216_20 0BDA                            u128_21 0ACD                            u216_21 0BD9  
                          u129_20 0AE7                            u217_20 0BE5                            _INTCON 000B  
                          u129_21 0AE6                            u217_21 0BE4                            u183_20 094B  
                          u183_21 094A                            u184_20 0C7D                            u184_21 0C7C  
                          u185_20 0C8E                            u185_21 0C8D                            u186_20 0CB7  
                          u186_21 0CB6                            _TMR0IF 005A                            _TMR1IF 0060  
                       ??_GetTime 0026                      ?_UART_TxChar 0070                 __end_of_UART_Init 0A66  
               __end_of_UART_Read 094E                            ___bmul 0989                         ??___aldiv 002C  
                 GetTime@shortInt 0029                            ___wmul 07D8                         ??___awdiv 002F  
                       ??___awmod 0028                  __end_of_init_ADC 0976                            _cycled 0051  
                ___awdiv@quotient 0032                   ___awmod@divisor 0024                   ___awmod@counter 0029  
                __end_of_sendByte 09F7                         ?_ADC_Read 0024                            saved_w 007E  
         __end_of__initialization 003B                 __end_of_GetDigits 1000                     ??_UpdateTimes 0024  
       __size_of_SetDefaultTimers 014F               ___bmul@multiplicand 0024                    __pcstackCOMMON 0070  
               __end_of_BuildByte 0F33                      __pidataBANK0 094E                  _conteggioVeicoli 0C53  
               __end_of_Conteggio 0AF8                     ?_luciSemaforo 0024                        ??_ADC_Read 0026  
          SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024  
                   GetDigits@Time 0035              _dataFromGatewayIndex 004E              _timerReadFromGateway 004D  
                      __pbssBANK0 0048                        __pbssBANK1 00A0                        __pbssBANK3 0190  
                      __pmaintext 003F                           ?___bmul 0024  ShowDigitsOnDisplay@display_index 002D  
                         ?___wmul 0024                    ??_luciSemaforo 0025               __end_of_UpdateTimes 076A  
                   sendByte@byte0 003D                     sendByte@byte1 0038                        __pintentry 0004  
                _SetReceivedTimes 076A       __end_of_ShowDigitsOnDisplay 0E6B                        __stringtab 0800  
                       ?_init_ADC 0070                           _GetTime 0A66                   BuildByte@valore 0025  
                 BuildByte@txByte 0029           GetTime@_dataFromGateway 0024                         ?_sendByte 0038  
                      _n_semafori 0811              __size_of_UART_TxChar 000B                           ___aldiv 0D21  
                 __size_of___bmul 0017                           ___awdiv 0CB8                           ___awmod 0BF8  
             __size_of_SetDisplay 0055                   __size_of___wmul 0027                 conteggioVeicoli@i 007D  
                         _digits0 00E8                           _digits1 00E5                           __ptext1 09C6  
                         __ptext2 0958                           __ptext3 0E6B                           __ptext4 09F7  
                         __ptext5 07D8                           __ptext6 0AF8                           __ptext7 0963  
                         __ptext8 0650                           __ptext9 0A2C                           _display 0806  
                    __size_of_ISR 0058                      __size_of_map 0035                  ___awmod@dividend 0026  
                ___aldiv@dividend 0028              BuildByte@sommaColumn 002F                           _umidita 004B  
                         clrloop0 093E                  GetDigits@_digits 003C              end_of_initialization 003B  
                      ??_init_ADC 0024                    main@lux_select 0044                       _UpdateTimes 0650  
                      ??_sendByte 003A                  _SetDefaultTimers 0501                         _RCSTAbits 0018  
                ___aldiv@quotient 002F                        _motorcycle 005D                         _UART_Init 0A2C  
                       _UART_Read 0945             SetReceivedTimes@index 0038                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                      SetDisplay@d1 0024  
                    SetDisplay@d2 0025                      SetDisplay@d3 0026                         _TRISCbits 0087  
               __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0CB8              __end_of_luciSemaforo 0B4B  
                      map@out_max 003C                        map@out_min 003A  SetReceivedTimes@_dataFromGateway 0037  
                       _TXSTAbits 0098                         _GetDigits 0F33                         _DigitsArr 0069  
                  __end_of___bmul 09A0                    __end_of___wmul 07FF                        ?_UART_Init 0033  
                      ?_UART_Read 0070                         _BuildByte 0E6B                         _Conteggio 0AAC  
               BuildByte@sommaRow 002E               start_initialization 0013                       __end_of_ISR 0BF8  
                    ??_SetDisplay 0028                       __end_of_map 0A2C          __end_of_SetReceivedTimes 07D8  
                      ?_GetDigits 0034                          ??___bmul 0025                    ADC_Read@canale 0027  
                        ??___wmul 0028                        init_fetch0 0976                       __pdataBANK0 0061  
              __end_of_SetDisplay 0BA0                    GetDigits@index 0034                        ?_BuildByte 0024  
                      ?_Conteggio 0070                         ___latbits 0002                     __pcstackBANK0 0020  
                   __pcstackBANK3 019E                          ?_GetTime 0024             SetDefaultTimers@verde 0026  
           SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013                 __size_of_sendByte 0031  
                        ?___aldiv 0024                          ?___awdiv 002B                          ?___awmod 0024  
                     ??_UART_Init 0035                       ??_UART_Read 0070                    BuildByte@i_337 0036  
                       __pstrings 0800                    BuildByte@y_338 0032                    sendByte@valore 0039  
                  sendByte@txByte 003E                    BuildByte@byte0 0028                    BuildByte@byte1 0024  
        __end_of_SetDefaultTimers 0650                          _ADC_Read 09A0             __size_of_luciSemaforo 0053  
                       _count_lux 004F                     UART_TxChar@ch 0024      __size_of_ShowDigitsOnDisplay 00AD  
                 ___aldiv@divisor 0024                 SetReceivedTimes@i 0039                 interrupt_function 0004  
                 ___aldiv@counter 002D                    ___wmul@product 0028        SetReceivedTimes@semaforoId 0035  
                    ?_UpdateTimes 0070                         clear_ram0 093D                          _PIE1bits 008C  
                   ??_UART_TxChar 0024                       ??_GetDigits 0037                          _GO_nDONE 00FA  
                    _luciSemaforo 0AF8                         _pressione 004A                 UART_Init@baudrate 0033  
                     ??_BuildByte 0026                         map@in_max 0038                         map@in_min 0036  
                     __stringbase 0805                         main@i_483 0042                         main@i_484 0040  
                       main@i_486 0041                       ??_Conteggio 0076                         main@i_488 0045  
               ___wmul@multiplier 0024                      GetTime@index 0028                      _RoadsSensors 00A8  
               ?_conteggioVeicoli 0070                      _secondPassed 0052                ??_conteggioVeicoli 0079  
                __size_of_GetTime 0046                          _Semafori 0061                       _readGateway 0053  
                __size_of___aldiv 009D               __end_of_UART_TxChar 0963                  __size_of___awdiv 0069  
                __size_of___awmod 005B                __end_of__stringtab 0806                         sendByte@i 003F  
                        __ptext10 0D21                          __ptext11 0DBE                          __ptext20 09A0  
                        __ptext12 0B4B                          __ptext21 0BA0                          __ptext13 076A  
                        __ptext22 0C53                          __ptext14 0A66                          __ptext23 0AAC  
                        __ptext15 0501                          __ptext24 0945                          __ptext16 0F33  
                        __ptext17 0989                          __ptext18 0BF8                          __ptext19 0CB8  
              __end_of_n_semafori 0812           SetDisplay@display_index 002A                          _init_ADC 0963  
               ?_SetReceivedTimes 002C                     __size_of_main 04C2                   _dataFromGateway 00AC  
                        _sendByte 09C6                ??_SetReceivedTimes 002D                        _INTCONbits 000B  
                        init_ram0 097A              Conteggio@_motorcycle 0072                          intlevel1 0000  
                 _readGatewayDone 0054                         stringcode 0800                       _UART_TxChar 0958  
         SetReceivedTimes@colorId 0036              __size_of_UpdateTimes 011A                        GetTime@tmp 002A  
             _ShowDigitsOnDisplay 0DBE                        _OPTION_REG 0081                   SetDisplay@value 0027  
                        stringdir 0800                          stringtab 0800                      UpdateTimes@i 0036  
                    UpdateTimes@l 0038                 ?_SetDefaultTimers 0024                      ___aldiv@sign 002E  
              ??_SetDefaultTimers 002B              ?_ShowDigitsOnDisplay 0070                        BuildByte@i 0034  
                      BuildByte@y 0030         SetDefaultTimers@_semafori 002A                   Conteggio@_count 0070  
                   Conteggio@_car 0073                   Conteggio@_truck 0074                    Conteggio@index 0075  
