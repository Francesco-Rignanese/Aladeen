

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jul 13 21:51:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199                           
   200                           	psect	idataBANK0
   201  0A86                     __pidataBANK0:	
   202                           
   203                           ;initializer for _randx
   204  0A86  3401               	retlw	1
   205  0A87  3400               	retlw	0
   206  0A88  3400               	retlw	0
   207  0A89  3400               	retlw	0
   208                           
   209                           ;initializer for _DigitsArr
   210  0A8A  34DA               	retlw	low (_digits0| 0)
   211  0A8B  34D7               	retlw	low (_digits1| 0)
   212                           
   213                           ;initializer for _Semafori
   214  0A8C  34C1               	retlw	low (_s0| 0)
   215  0A8D  34B3               	retlw	low (_s1| 0)
   216                           
   217                           	psect	strings
   218  0800                     __pstrings:	
   219  0800                     stringtab:	
   220  0800                     __stringtab:	
   221  0800                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224  0800                     stringdir:	
   225  0800  3008               	movlw	high stringdir
   226  0801  008A               	movwf	10
   227  0802  0804               	movf	4,w
   228  0803  0A84               	incf	4,f
   229  0804  0782               	addwf	2,f
   230  0805                     __stringbase:	
   231  0805  3400               	retlw	0
   232  0806                     __end_of__stringtab:	
   233  0806                     _display:	
   234  0806  343F               	retlw	63
   235  0807  3406               	retlw	6
   236  0808  345B               	retlw	91
   237  0809  344F               	retlw	79
   238  080A  3466               	retlw	102
   239  080B  346D               	retlw	109
   240  080C  347D               	retlw	125
   241  080D  3407               	retlw	7
   242  080E  347F               	retlw	127
   243  080F  346F               	retlw	111
   244  0810  3400               	retlw	0
   245  0811                     __end_of_display:	
   246  0811                     _n_semafori:	
   247  0811  3402               	retlw	2
   248  0812                     __end_of_n_semafori:	
   249  0008                     _PORTD	set	8
   250  0005                     _PORTAbits	set	5
   251  001A                     _RCREG	set	26
   252  0019                     _TXREG	set	25
   253  000B                     _INTCONbits	set	11
   254  0018                     _RCSTAbits	set	24
   255  001E                     _ADRESH	set	30
   256  001F                     _ADCON0	set	31
   257  0006                     _PORTBbits	set	6
   258  0007                     _PORTCbits	set	7
   259  000E                     _TMR1L	set	14
   260  000F                     _TMR1H	set	15
   261  0010                     _T1CON	set	16
   262  0001                     _TMR0	set	1
   263  000B                     _INTCON	set	11
   264  0060                     _TMR1IF	set	96
   265  005A                     _TMR0IF	set	90
   266  0065                     _RCIF	set	101
   267  0064                     _TXIF	set	100
   268  00FA                     _GO_nDONE	set	250
   269  008C                     _PIE1bits	set	140
   270  0099                     _SPBRG	set	153
   271  0098                     _TXSTAbits	set	152
   272  0087                     _TRISCbits	set	135
   273  009E                     _ADRESL	set	158
   274  009F                     _ADCON1	set	159
   275  0085                     _TRISA	set	133
   276  0081                     _OPTION_REG	set	129
   277  0089                     _TRISE	set	137
   278  0088                     _TRISD	set	136
   279  0087                     _TRISC	set	135
   280  0086                     _TRISB	set	134
   281                           
   282                           ; #config settings
   283  0000                     
   284                           	psect	cinit
   285  0013                     start_initialization:	
   286  0013                     __initialization:	
   287                           
   288                           ; Initialize objects allocated to BANK0
   289  0013  1383               	bcf	3,7	;select IRP bank0
   290  0014  3066               	movlw	low (__pdataBANK0+8)
   291  0015  00FD               	movwf	btemp+-1
   292  0016  300A               	movlw	high __pidataBANK0
   293  0017  00FE               	movwf	btemp
   294  0018  3086               	movlw	low __pidataBANK0
   295  0019  00FF               	movwf	btemp+1
   296  001A  305E               	movlw	low __pdataBANK0
   297  001B  0084               	movwf	4
   298  001C  120A  118A  27EE  120A  118A  	fcall	init_ram0
   299                           
   300                           ; Clear objects allocated to BANK1
   301  0021  30A0               	movlw	low __pbssBANK1
   302  0022  0084               	movwf	4
   303  0023  30DD               	movlw	low (__pbssBANK1+61)
   304  0024  120A  158A  227E  120A  118A  	fcall	clear_ram0
   305                           
   306                           ; Clear objects allocated to BANK0
   307  0029  3049               	movlw	low __pbssBANK0
   308  002A  0084               	movwf	4
   309  002B  305E               	movlw	low (__pbssBANK0+21)
   310  002C  120A  158A  227E  120A  118A  	fcall	clear_ram0
   311  0031                     end_of_initialization:	
   312                           ;End of C runtime variable initialization code
   313                           
   314  0031                     __end_of__initialization:	
   315  0031  0183               	clrf	3
   316  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   317                           
   318                           	psect	bssBANK0
   319  0049                     __pbssBANK0:	
   320  0049                     _time:	
   321  0049                     	ds	4
   322  004D                     _count:	
   323  004D                     	ds	2
   324  004F                     _pressione:	
   325  004F                     	ds	1
   326  0050                     _umidita:	
   327  0050                     	ds	1
   328  0051                     _temp:	
   329  0051                     	ds	1
   330  0052                     _timerReadFromGateway:	
   331  0052                     	ds	1
   332  0053                     _dataFromGatewayIndex:	
   333  0053                     	ds	1
   334  0054                     _count_lux:	
   335  0054                     	ds	1
   336  0055                     _disp:	
   337  0055                     	ds	1
   338  0056                     _cycled:	
   339  0056                     	ds	1
   340  0057                     _secondPassed:	
   341  0057                     	ds	1
   342  0058                     _readGateway:	
   343  0058                     	ds	1
   344  0059                     _readGatewayDone:	
   345  0059                     	ds	1
   346  005A                     _motorcycle:	
   347  005A                     	ds	4
   348                           
   349                           	psect	dataBANK0
   350  005E                     __pdataBANK0:	
   351  005E                     _randx:	
   352  005E                     	ds	4
   353  0062                     _DigitsArr:	
   354  0062                     	ds	2
   355  0064                     _Semafori:	
   356  0064                     	ds	2
   357                           
   358                           	psect	bssBANK1
   359  00A0                     __pbssBANK1:	
   360  00A0                     _RoadsSensors:	
   361  00A0                     	ds	4
   362  00A4                     _dataFromGateway:	
   363  00A4                     	ds	15
   364  00B3                     _s1:	
   365  00B3                     	ds	14
   366  00C1                     _s0:	
   367  00C1                     	ds	14
   368  00CF                     _truck:	
   369  00CF                     	ds	4
   370  00D3                     _car:	
   371  00D3                     	ds	4
   372  00D7                     _digits1:	
   373  00D7                     	ds	3
   374  00DA                     _digits0:	
   375  00DA                     	ds	3
   376                           
   377                           	psect	inittext
   378  07EA                     init_fetch0:	
   379                           ;	Called with low address in FSR and high address in W
   380                           
   381  07EA  087E               	movf	btemp,w
   382  07EB  008A               	movwf	10
   383  07EC  087F               	movf	btemp+1,w
   384  07ED  0082               	movwf	2
   385  07EE                     init_ram0:	
   386                           ;Called with:
   387                           ;	high address of idata address in btemp 
   388                           ;	low address of idata address in btemp+1 
   389                           ;	low address of data in FSR
   390                           ;	high address + 1 of data in btemp-1
   391                           
   392  07EE  120A  118A  27EA  120A  118A  	fcall	init_fetch0
   393  07F3  0080               	movwf	0
   394  07F4  0A84               	incf	4,f
   395  07F5  0804               	movf	4,w
   396  07F6  067D               	xorwf	btemp+-1,w
   397  07F7  1903               	btfsc	3,2
   398  07F8  3400               	retlw	0
   399  07F9  0AFF               	incf	btemp+1,f
   400  07FA  1903               	btfsc	3,2
   401  07FB  0AFE               	incf	btemp,f
   402  07FC  2FEE               	goto	init_ram0
   403                           
   404                           	psect	clrtext
   405  0A7E                     clear_ram0:	
   406                           ;	Called with FSR containing the base address, and
   407                           ;	W with the last address+1
   408                           
   409  0A7E  0064               	clrwdt	;clear the watchdog before getting into this loop
   410  0A7F                     clrloop0:	
   411  0A7F  0180               	clrf	0	;clear RAM location pointed to by FSR
   412  0A80  0A84               	incf	4,f	;increment pointer
   413  0A81  0604               	xorwf	4,w	;XOR with final address
   414  0A82  1903               	btfsc	3,2	;have we reached the end yet?
   415  0A83  3400               	retlw	0	;all done for this memory range, return
   416  0A84  0604               	xorwf	4,w	;XOR again to restore value
   417  0A85  2A7F               	goto	clrloop0	;do the next byte
   418                           
   419                           	psect	cstackBANK1
   420  00DD                     __pcstackBANK1:	
   421  00DD                     main@randomMoto:	
   422                           
   423                           ; 1 bytes @ 0x0
   424  00DD                     	ds	1
   425  00DE                     main@randomCar:	
   426                           
   427                           ; 1 bytes @ 0x1
   428  00DE                     	ds	1
   429  00DF                     main@randomTruck:	
   430                           
   431                           ; 1 bytes @ 0x2
   432  00DF                     	ds	1
   433  00E0                     main@i_481:	
   434                           
   435                           ; 1 bytes @ 0x3
   436  00E0                     	ds	1
   437  00E1                     main@i_483:	
   438                           
   439                           ; 1 bytes @ 0x4
   440  00E1                     	ds	1
   441  00E2                     main@i_480:	
   442                           
   443                           ; 2 bytes @ 0x5
   444  00E2                     	ds	2
   445  00E4                     main@lux_select:	
   446                           
   447                           ; 1 bytes @ 0x7
   448  00E4                     	ds	1
   449  00E5                     main@i_485:	
   450                           
   451                           ; 1 bytes @ 0x8
   452  00E5                     	ds	1
   453  00E6                     main@i:	
   454                           
   455                           ; 1 bytes @ 0x9
   456  00E6                     	ds	1
   457                           
   458                           	psect	cstackCOMMON
   459  0070                     __pcstackCOMMON:	
   460  0070                     ?_init_ADC:	
   461  0070                     ?_ShowDigitsOnDisplay:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_UpdateTimes:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_Conteggio:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_main:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_UART_TxChar:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_UART_Read:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ??_UART_Read:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_conteggioVeicoli:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_ISR:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     Conteggio@_count:	
   489                           ; 1 bytes @ 0x0
   490                           
   491                           
   492                           ; 2 bytes @ 0x0
   493  0070                     	ds	2
   494  0072                     Conteggio@_motorcycle:	
   495                           
   496                           ; 1 bytes @ 0x2
   497  0072                     	ds	1
   498  0073                     Conteggio@_car:	
   499                           
   500                           ; 1 bytes @ 0x3
   501  0073                     	ds	1
   502  0074                     Conteggio@_truck:	
   503                           
   504                           ; 1 bytes @ 0x4
   505  0074                     	ds	1
   506  0075                     Conteggio@index:	
   507                           
   508                           ; 1 bytes @ 0x5
   509  0075                     	ds	1
   510  0076                     ??_Conteggio:	
   511                           
   512                           ; 1 bytes @ 0x6
   513  0076                     	ds	3
   514  0079                     ??_conteggioVeicoli:	
   515                           
   516                           ; 1 bytes @ 0x9
   517  0079                     	ds	4
   518  007D                     conteggioVeicoli@i:	
   519                           
   520                           ; 1 bytes @ 0xD
   521  007D                     	ds	1
   522                           
   523                           	psect	cstackBANK0
   524  0020                     __pcstackBANK0:	
   525  0020                     ??_ISR:	
   526                           
   527                           ; 1 bytes @ 0x0
   528  0020                     	ds	4
   529  0024                     ??_init_ADC:	
   530  0024                     ?_luciSemaforo:	
   531                           ; 1 bytes @ 0x4
   532                           
   533  0024                     ?_BuildByte:	
   534                           ; 1 bytes @ 0x4
   535                           
   536  0024                     ??_UpdateTimes:	
   537                           ; 1 bytes @ 0x4
   538                           
   539  0024                     ?_SetDefaultTimers:	
   540                           ; 1 bytes @ 0x4
   541                           
   542  0024                     ??_UART_TxChar:	
   543                           ; 1 bytes @ 0x4
   544                           
   545  0024                     ?_SetDisplay:	
   546                           ; 1 bytes @ 0x4
   547                           
   548  0024                     ?___bmul:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0024                     ?_ADC_Read:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0024                     ?_GetTime:	
   555                           ; 2 bytes @ 0x4
   556                           
   557  0024                     ?___wmul:	
   558                           ; 2 bytes @ 0x4
   559                           
   560  0024                     ?___awmod:	
   561                           ; 2 bytes @ 0x4
   562                           
   563  0024                     ?___lmul:	
   564                           ; 2 bytes @ 0x4
   565                           
   566  0024                     ?___aldiv:	
   567                           ; 4 bytes @ 0x4
   568                           
   569  0024                     BuildByte@byte1:	
   570                           ; 4 bytes @ 0x4
   571                           
   572  0024                     GetTime@_dataFromGateway:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0024                     UART_TxChar@ch:	
   576                           ; 1 bytes @ 0x4
   577                           
   578  0024                     luciSemaforo@lux:	
   579                           ; 1 bytes @ 0x4
   580                           
   581  0024                     SetDisplay@d1:	
   582                           ; 1 bytes @ 0x4
   583                           
   584  0024                     ___bmul@multiplicand:	
   585                           ; 1 bytes @ 0x4
   586                           
   587  0024                     SetDefaultTimers@rosso:	
   588                           ; 1 bytes @ 0x4
   589                           
   590  0024                     ___wmul@multiplier:	
   591                           ; 2 bytes @ 0x4
   592                           
   593  0024                     ___awmod@divisor:	
   594                           ; 2 bytes @ 0x4
   595                           
   596  0024                     ___lmul@multiplier:	
   597                           ; 2 bytes @ 0x4
   598                           
   599  0024                     ___aldiv@divisor:	
   600                           ; 4 bytes @ 0x4
   601                           
   602                           
   603                           ; 4 bytes @ 0x4
   604  0024                     	ds	1
   605  0025                     ??_luciSemaforo:	
   606  0025                     ??___bmul:	
   607                           ; 1 bytes @ 0x5
   608                           
   609  0025                     BuildByte@valore:	
   610                           ; 1 bytes @ 0x5
   611                           
   612  0025                     SetDisplay@d2:	
   613                           ; 1 bytes @ 0x5
   614                           
   615                           
   616                           ; 1 bytes @ 0x5
   617  0025                     	ds	1
   618  0026                     ??_ADC_Read:	
   619  0026                     ??_BuildByte:	
   620                           ; 1 bytes @ 0x6
   621                           
   622  0026                     ??_GetTime:	
   623                           ; 1 bytes @ 0x6
   624                           
   625  0026                     SetDisplay@d3:	
   626                           ; 1 bytes @ 0x6
   627                           
   628  0026                     ___bmul@product:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  0026                     SetDefaultTimers@verde:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0026                     ___wmul@multiplicand:	
   635                           ; 2 bytes @ 0x6
   636                           
   637  0026                     ___awmod@dividend:	
   638                           ; 2 bytes @ 0x6
   639                           
   640                           
   641                           ; 2 bytes @ 0x6
   642  0026                     	ds	1
   643  0027                     ADC_Read@canale:	
   644  0027                     luciSemaforo@index:	
   645                           ; 1 bytes @ 0x7
   646                           
   647  0027                     SetDisplay@value:	
   648                           ; 1 bytes @ 0x7
   649                           
   650  0027                     ___bmul@multiplier:	
   651                           ; 1 bytes @ 0x7
   652                           
   653                           
   654                           ; 1 bytes @ 0x7
   655  0027                     	ds	1
   656  0028                     ??_SetDisplay:	
   657  0028                     ??___wmul:	
   658                           ; 1 bytes @ 0x8
   659                           
   660  0028                     ??___awmod:	
   661                           ; 1 bytes @ 0x8
   662                           
   663  0028                     BuildByte@byte0:	
   664                           ; 1 bytes @ 0x8
   665                           
   666  0028                     GetTime@index:	
   667                           ; 1 bytes @ 0x8
   668                           
   669  0028                     SetDefaultTimers@giallo:	
   670                           ; 1 bytes @ 0x8
   671                           
   672  0028                     ___wmul@product:	
   673                           ; 2 bytes @ 0x8
   674                           
   675  0028                     ___lmul@multiplicand:	
   676                           ; 2 bytes @ 0x8
   677                           
   678  0028                     ___aldiv@dividend:	
   679                           ; 4 bytes @ 0x8
   680                           
   681                           
   682                           ; 4 bytes @ 0x8
   683  0028                     	ds	1
   684  0029                     GetTime@shortInt:	
   685  0029                     ___awmod@counter:	
   686                           ; 1 bytes @ 0x9
   687                           
   688  0029                     BuildByte@txByte:	
   689                           ; 1 bytes @ 0x9
   690                           
   691                           
   692                           ; 5 bytes @ 0x9
   693  0029                     	ds	1
   694  002A                     SetDefaultTimers@_semafori:	
   695  002A                     SetDisplay@display_index:	
   696                           ; 1 bytes @ 0xA
   697                           
   698  002A                     ___awmod@sign:	
   699                           ; 1 bytes @ 0xA
   700                           
   701  002A                     GetTime@tmp:	
   702                           ; 1 bytes @ 0xA
   703                           
   704                           
   705                           ; 2 bytes @ 0xA
   706  002A                     	ds	1
   707  002B                     ??_ShowDigitsOnDisplay:	
   708  002B                     ??_SetDefaultTimers:	
   709                           ; 1 bytes @ 0xB
   710                           
   711  002B                     ?___awdiv:	
   712                           ; 1 bytes @ 0xB
   713                           
   714  002B                     ___awdiv@divisor:	
   715                           ; 2 bytes @ 0xB
   716                           
   717                           
   718                           ; 2 bytes @ 0xB
   719  002B                     	ds	1
   720  002C                     ?_SetReceivedTimes:	
   721  002C                     ??___lmul:	
   722                           ; 1 bytes @ 0xC
   723                           
   724  002C                     ??___aldiv:	
   725                           ; 1 bytes @ 0xC
   726                           
   727  002C                     SetReceivedTimes@_semafori:	
   728                           ; 1 bytes @ 0xC
   729                           
   730                           
   731                           ; 1 bytes @ 0xC
   732  002C                     	ds	1
   733  002D                     ??_SetReceivedTimes:	
   734  002D                     ShowDigitsOnDisplay@display_index:	
   735                           ; 1 bytes @ 0xD
   736                           
   737  002D                     ___aldiv@counter:	
   738                           ; 1 bytes @ 0xD
   739                           
   740  002D                     ___awdiv@dividend:	
   741                           ; 1 bytes @ 0xD
   742                           
   743  002D                     ___lmul@product:	
   744                           ; 2 bytes @ 0xD
   745                           
   746                           
   747                           ; 4 bytes @ 0xD
   748  002D                     	ds	1
   749  002E                     BuildByte@sommaRow:	
   750  002E                     UpdateTimes@_semafori:	
   751                           ; 1 bytes @ 0xE
   752                           
   753  002E                     SetDefaultTimers@l:	
   754                           ; 1 bytes @ 0xE
   755                           
   756  002E                     ___aldiv@sign:	
   757                           ; 1 bytes @ 0xE
   758                           
   759                           
   760                           ; 1 bytes @ 0xE
   761  002E                     	ds	1
   762  002F                     ??___awdiv:	
   763  002F                     BuildByte@sommaColumn:	
   764                           ; 1 bytes @ 0xF
   765                           
   766  002F                     UpdateTimes@i:	
   767                           ; 1 bytes @ 0xF
   768                           
   769  002F                     SetDefaultTimers@i:	
   770                           ; 1 bytes @ 0xF
   771                           
   772  002F                     ___aldiv@quotient:	
   773                           ; 1 bytes @ 0xF
   774                           
   775                           
   776                           ; 4 bytes @ 0xF
   777  002F                     	ds	1
   778  0030                     UpdateTimes@l:	
   779  0030                     ___awdiv@counter:	
   780                           ; 1 bytes @ 0x10
   781                           
   782  0030                     BuildByte@y:	
   783                           ; 1 bytes @ 0x10
   784                           
   785                           
   786                           ; 2 bytes @ 0x10
   787  0030                     	ds	1
   788  0031                     ?_rand:	
   789  0031                     SetReceivedTimes@semaforoId:	
   790                           ; 2 bytes @ 0x11
   791                           
   792  0031                     ___awdiv@sign:	
   793                           ; 1 bytes @ 0x11
   794                           
   795                           
   796                           ; 1 bytes @ 0x11
   797  0031                     	ds	1
   798  0032                     SetReceivedTimes@colorId:	
   799  0032                     BuildByte@y_342:	
   800                           ; 1 bytes @ 0x12
   801                           
   802  0032                     ___awdiv@quotient:	
   803                           ; 2 bytes @ 0x12
   804                           
   805                           
   806                           ; 2 bytes @ 0x12
   807  0032                     	ds	1
   808  0033                     ?_UART_Init:	
   809  0033                     ??_rand:	
   810                           ; 1 bytes @ 0x13
   811                           
   812  0033                     SetReceivedTimes@_dataFromGateway:	
   813                           ; 1 bytes @ 0x13
   814                           
   815  0033                     UART_Init@baudrate:	
   816                           ; 1 bytes @ 0x13
   817                           
   818                           
   819                           ; 2 bytes @ 0x13
   820  0033                     	ds	1
   821  0034                     ?_GetDigits:	
   822  0034                     ?_map:	
   823                           ; 1 bytes @ 0x14
   824                           
   825  0034                     SetReceivedTimes@index:	
   826                           ; 2 bytes @ 0x14
   827                           
   828  0034                     GetDigits@index:	
   829                           ; 1 bytes @ 0x14
   830                           
   831  0034                     BuildByte@i:	
   832                           ; 1 bytes @ 0x14
   833                           
   834  0034                     map@x:	
   835                           ; 2 bytes @ 0x14
   836                           
   837                           
   838                           ; 2 bytes @ 0x14
   839  0034                     	ds	1
   840  0035                     ??_UART_Init:	
   841  0035                     SetReceivedTimes@i:	
   842                           ; 1 bytes @ 0x15
   843                           
   844  0035                     GetDigits@Time:	
   845                           ; 1 bytes @ 0x15
   846                           
   847                           
   848                           ; 2 bytes @ 0x15
   849  0035                     	ds	1
   850  0036                     BuildByte@i_341:	
   851  0036                     map@in_min:	
   852                           ; 2 bytes @ 0x16
   853                           
   854                           
   855                           ; 2 bytes @ 0x16
   856  0036                     	ds	1
   857  0037                     ??_GetDigits:	
   858                           
   859                           ; 1 bytes @ 0x17
   860  0037                     	ds	1
   861  0038                     ?_sendByte:	
   862  0038                     sendByte@byte1:	
   863                           ; 1 bytes @ 0x18
   864                           
   865  0038                     map@in_max:	
   866                           ; 1 bytes @ 0x18
   867                           
   868                           
   869                           ; 2 bytes @ 0x18
   870  0038                     	ds	1
   871  0039                     sendByte@valore:	
   872                           
   873                           ; 1 bytes @ 0x19
   874  0039                     	ds	1
   875  003A                     ??_sendByte:	
   876  003A                     map@out_min:	
   877                           ; 1 bytes @ 0x1A
   878                           
   879  003A                     _GetDigits$1203:	
   880                           ; 2 bytes @ 0x1A
   881                           
   882                           
   883                           ; 2 bytes @ 0x1A
   884  003A                     	ds	2
   885  003C                     GetDigits@_digits:	
   886  003C                     map@out_max:	
   887                           ; 1 bytes @ 0x1C
   888                           
   889                           
   890                           ; 2 bytes @ 0x1C
   891  003C                     	ds	1
   892  003D                     sendByte@byte0:	
   893                           
   894                           ; 1 bytes @ 0x1D
   895  003D                     	ds	1
   896  003E                     ??_map:	
   897  003E                     sendByte@txByte:	
   898                           ; 1 bytes @ 0x1E
   899                           
   900                           
   901                           ; 1 bytes @ 0x1E
   902  003E                     	ds	1
   903  003F                     sendByte@i:	
   904                           
   905                           ; 1 bytes @ 0x1F
   906  003F                     	ds	1
   907  0040                     ??_main:	
   908                           
   909                           ; 1 bytes @ 0x20
   910  0040                     	ds	9
   911                           
   912                           	psect	maintext
   913  0035                     __pmaintext:	
   914 ;;
   915 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   916 ;;
   917 ;; *************** function _main *****************
   918 ;; Defined at:
   919 ;;		line 136 in file "main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  lux_select      1    7[BANK1 ] unsigned char 
   924 ;;  randomTruck     1    2[BANK1 ] unsigned char 
   925 ;;  randomCar       1    1[BANK1 ] unsigned char 
   926 ;;  randomMoto      1    0[BANK1 ] unsigned char 
   927 ;;  i               1    4[BANK1 ] unsigned char 
   928 ;;  i               1    3[BANK1 ] unsigned char 
   929 ;;  i               2    5[BANK1 ] int 
   930 ;;  i               1    9[BANK1 ] unsigned char 
   931 ;;  i               1    8[BANK1 ] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : B00/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         0       0      10       0       0
   943 ;;      Temps:          0       9       0       0       0
   944 ;;      Totals:         0       9      10       0       0
   945 ;;Total ram usage:       19 bytes
   946 ;; Hardware stack levels required when called:    5
   947 ;; This function calls:
   948 ;;		_ADC_Read
   949 ;;		_GetDigits
   950 ;;		_SetDefaultTimers
   951 ;;		_SetReceivedTimes
   952 ;;		_ShowDigitsOnDisplay
   953 ;;		_UART_Init
   954 ;;		_UpdateTimes
   955 ;;		_init_ADC
   956 ;;		_luciSemaforo
   957 ;;		_map
   958 ;;		_rand
   959 ;;		_sendByte
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _main
   967  0035                     _main:	
   968  0035                     l3511:	
   969                           ;incstack = 0
   970                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   971                           
   972                           
   973                           ;main.c: 138:     TRISB = 0x38;
   974  0035  3038               	movlw	56
   975  0036  1683               	bsf	3,5	;RP0=1, select bank1
   976  0037  1303               	bcf	3,6	;RP1=0, select bank1
   977  0038  0086               	movwf	6	;volatile
   978                           
   979                           ;main.c: 139:     TRISC = 0x80;
   980  0039  3080               	movlw	128
   981  003A  0087               	movwf	7	;volatile
   982  003B                     l3513:	
   983                           
   984                           ;main.c: 140:     TRISD = 0x00;
   985  003B  0188               	clrf	8	;volatile
   986  003C                     l3515:	
   987                           
   988                           ;main.c: 141:     TRISE = 0x01;
   989  003C  3001               	movlw	1
   990  003D  0089               	movwf	9	;volatile
   991  003E                     l3517:	
   992                           
   993                           ;main.c: 142:     INTCON = 0xE0;
   994  003E  30E0               	movlw	224
   995  003F  008B               	movwf	11	;volatile
   996  0040                     l3519:	
   997                           
   998                           ;main.c: 143:     OPTION_REG = 0x04;
   999  0040  3004               	movlw	4
  1000  0041  0081               	movwf	1	;volatile
  1001  0042                     l3521:	
  1002                           
  1003                           ;main.c: 144:     TMR0 = 6;
  1004  0042  3006               	movlw	6
  1005  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0045  0081               	movwf	1	;volatile
  1008  0046                     l3523:	
  1009                           
  1010                           ;main.c: 145:     T1CON = 0x31;
  1011  0046  3031               	movlw	49
  1012  0047  0090               	movwf	16	;volatile
  1013  0048                     l3525:	
  1014                           
  1015                           ;main.c: 147:     TMR1H = 60;
  1016  0048  303C               	movlw	60
  1017  0049  008F               	movwf	15	;volatile
  1018  004A                     l3527:	
  1019                           
  1020                           ;main.c: 148:     TMR1L = 176;
  1021  004A  30B0               	movlw	176
  1022  004B  008E               	movwf	14	;volatile
  1023  004C                     l3529:	
  1024                           
  1025                           ;main.c: 151:     init_ADC();
  1026  004C  120A  158A  22A2  120A  118A  	fcall	_init_ADC
  1027  0051                     l3531:	
  1028                           
  1029                           ;main.c: 152:     UART_Init(9600);
  1030  0051  3080               	movlw	128
  1031  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0054  00B3               	movwf	UART_Init@baudrate
  1034  0055  3025               	movlw	37
  1035  0056  00B4               	movwf	UART_Init@baudrate+1
  1036  0057  120A  158A  237F  120A  118A  	fcall	_UART_Init
  1037  005C                     l3533:	
  1038                           
  1039                           ;main.c: 153:     SetDefaultTimers(6, 4, 2, Semafori);
  1040  005C  3006               	movlw	6
  1041  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1042  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1043  005F  00A4               	movwf	SetDefaultTimers@rosso
  1044  0060  3000               	movlw	0
  1045  0061  00A5               	movwf	SetDefaultTimers@rosso+1
  1046  0062  3004               	movlw	4
  1047  0063  00A6               	movwf	SetDefaultTimers@verde
  1048  0064  3000               	movlw	0
  1049  0065  00A7               	movwf	SetDefaultTimers@verde+1
  1050  0066  3002               	movlw	2
  1051  0067  00A8               	movwf	SetDefaultTimers@giallo
  1052  0068  3000               	movlw	0
  1053  0069  00A9               	movwf	SetDefaultTimers@giallo+1
  1054  006A  3064               	movlw	(low (_Semafori| 0))& (0+255)
  1055  006B  00C0               	movwf	??_main
  1056  006C  0840               	movf	??_main,w
  1057  006D  00AA               	movwf	SetDefaultTimers@_semafori
  1058  006E  120A  118A  261B  120A  118A  	fcall	_SetDefaultTimers
  1059  0073                     l3535:	
  1060                           
  1061                           ;main.c: 155:     PORTCbits.RC0 = 0;
  1062  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0075  1007               	bcf	7,0	;volatile
  1065  0076                     l3537:	
  1066                           
  1067                           ;main.c: 156:     PORTBbits.RB7 = 0;
  1068  0076  1386               	bcf	6,7	;volatile
  1069  0077                     l3539:	
  1070                           
  1071                           ;main.c: 157:     PORTCbits.RC2 = 0;
  1072  0077  1107               	bcf	7,2	;volatile
  1073  0078                     l3541:	
  1074                           
  1075                           ;main.c: 158:     PORTBbits.RB6 = 0;
  1076  0078  1306               	bcf	6,6	;volatile
  1077  0079                     l3543:	
  1078                           
  1079                           ;main.c: 159:     PORTCbits.RC1 = 0;
  1080  0079  1087               	bcf	7,1	;volatile
  1081  007A                     l3545:	
  1082                           
  1083                           ;main.c: 160:     PORTBbits.RB1 = 0;
  1084  007A  1086               	bcf	6,1	;volatile
  1085  007B                     l3547:	
  1086                           
  1087                           ;main.c: 163:     {;main.c: 165:         if (readGateway.Bit)
  1088  007B  1C58               	btfss	_readGateway,0
  1089  007C  287E               	goto	u3031
  1090  007D  287F               	goto	u3030
  1091  007E                     u3031:	
  1092  007E  2B56               	goto	l223
  1093  007F                     u3030:	
  1094  007F  2B41               	goto	l3641
  1095  0080                     l225:	
  1096                           ;main.c: 168:             {;main.c: 169:             case 0x08:
  1097                           
  1098                           
  1099                           ;main.c: 170:                 readGatewayDone.Bit = 1;
  1100  0080  1459               	bsf	_readGatewayDone,0
  1101                           
  1102                           ;main.c: 171:                 readGateway.Bit = 0;
  1103  0081  1058               	bcf	_readGateway,0
  1104  0082                     l3551:	
  1105                           
  1106                           ;main.c: 173:                 for (unsigned char i = 0; i < 4; i++)
  1107  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0084  01E6               	clrf	main@i^(0+128)
  1110  0085                     l3557:	
  1111                           
  1112                           ;main.c: 174:                 {;main.c: 176:                     unsigned char randomMot
      +                          o = (char)rand();
  1113  0085  120A  158A  23FF  120A  118A  	fcall	_rand
  1114  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1115  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1116  008C  0831               	movf	?_rand,w
  1117  008D  00C0               	movwf	??_main
  1118  008E  0840               	movf	??_main,w
  1119  008F  1683               	bsf	3,5	;RP0=1, select bank1
  1120  0090  1303               	bcf	3,6	;RP1=0, select bank1
  1121  0091  00DD               	movwf	main@randomMoto^(0+128)
  1122                           
  1123                           ;main.c: 177:                     unsigned char randomCar = (char)rand();
  1124  0092  120A  158A  23FF  120A  118A  	fcall	_rand
  1125  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0099  0831               	movf	?_rand,w
  1128  009A  00C0               	movwf	??_main
  1129  009B  0840               	movf	??_main,w
  1130  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1131  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1132  009E  00DE               	movwf	main@randomCar^(0+128)
  1133                           
  1134                           ;main.c: 178:                     unsigned char randomTruck = (char)rand();
  1135  009F  120A  158A  23FF  120A  118A  	fcall	_rand
  1136  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00A6  0831               	movf	?_rand,w
  1139  00A7  00C0               	movwf	??_main
  1140  00A8  0840               	movf	??_main,w
  1141  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1142  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1143  00AB  00DF               	movwf	main@randomTruck^(0+128)
  1144  00AC                     l3559:	
  1145                           
  1146                           ;main.c: 179:                     if (randomMoto < 255)
  1147  00AC  0A5D               	incf	main@randomMoto^(0+128),w
  1148  00AD  1903               	btfsc	3,2
  1149  00AE  28B0               	goto	u3041
  1150  00AF  28B1               	goto	u3040
  1151  00B0                     u3041:	
  1152  00B0  28BF               	goto	l3563
  1153  00B1                     u3040:	
  1154  00B1                     l3561:	
  1155                           
  1156                           ;main.c: 180:                     {;main.c: 181:                         motorcycle[i] =
      +                           randomMoto;
  1157  00B1  085D               	movf	main@randomMoto^(0+128),w
  1158  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1159  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1160  00B4  00C0               	movwf	??_main
  1161  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1162  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1163  00B7  0866               	movf	main@i^(0+128),w
  1164  00B8  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1165  00B9  0084               	movwf	4
  1166  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1167  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1168  00BC  0840               	movf	??_main,w
  1169  00BD  1383               	bcf	3,7	;select IRP bank0
  1170  00BE  0080               	movwf	0
  1171  00BF                     l3563:	
  1172                           
  1173                           ;main.c: 183:                     if (randomCar < 255)
  1174  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1175  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1176  00C1  0A5E               	incf	main@randomCar^(0+128),w
  1177  00C2  1903               	btfsc	3,2
  1178  00C3  28C5               	goto	u3051
  1179  00C4  28C6               	goto	u3050
  1180  00C5                     u3051:	
  1181  00C5  28D4               	goto	l3567
  1182  00C6                     u3050:	
  1183  00C6                     l3565:	
  1184                           
  1185                           ;main.c: 184:                     {;main.c: 185:                         car[i] = random
      +                          Car;
  1186  00C6  085E               	movf	main@randomCar^(0+128),w
  1187  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1188  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1189  00C9  00C0               	movwf	??_main
  1190  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1191  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1192  00CC  0866               	movf	main@i^(0+128),w
  1193  00CD  3ED3               	addlw	(low (_car| 0))& (0+255)
  1194  00CE  0084               	movwf	4
  1195  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1196  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1197  00D1  0840               	movf	??_main,w
  1198  00D2  1383               	bcf	3,7	;select IRP bank1
  1199  00D3  0080               	movwf	0
  1200  00D4                     l3567:	
  1201                           
  1202                           ;main.c: 187:                     if (randomTruck < 255)
  1203  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1204  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1205  00D6  0A5F               	incf	main@randomTruck^(0+128),w
  1206  00D7  1903               	btfsc	3,2
  1207  00D8  28DA               	goto	u3061
  1208  00D9  28DB               	goto	u3060
  1209  00DA                     u3061:	
  1210  00DA  29FE               	goto	l3581
  1211  00DB                     u3060:	
  1212  00DB                     l3569:	
  1213                           
  1214                           ;main.c: 188:                     {;main.c: 189:                         truck[i] = rand
      +                          omTruck;
  1215  00DB  085F               	movf	main@randomTruck^(0+128),w
  1216  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1217  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1218  00DE  00C0               	movwf	??_main
  1219  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1220  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1221  00E1  0866               	movf	main@i^(0+128),w
  1222  00E2  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1223  00E3  0084               	movwf	4
  1224  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1225  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1226  00E6  0840               	movf	??_main,w
  1227  00E7  1383               	bcf	3,7	;select IRP bank1
  1228  00E8  0080               	movwf	0
  1229  00E9  29FE               	goto	l3581
  1230  00EA                     l3571:	
  1231                           
  1232                           ;main.c: 196:                         sendByte(0x03, 0x01, motorcycle[i]);
  1233  00EA  01B8               	clrf	sendByte@byte1
  1234  00EB  0AB8               	incf	sendByte@byte1,f
  1235  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1236  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1237  00EE  0866               	movf	main@i^(0+128),w
  1238  00EF  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1239  00F0  0084               	movwf	4
  1240  00F1  1383               	bcf	3,7	;select IRP bank0
  1241  00F2  0800               	movf	0,w
  1242  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1243  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1244  00F5  00C0               	movwf	??_main
  1245  00F6  0840               	movf	??_main,w
  1246  00F7  00B9               	movwf	sendByte@valore
  1247  00F8  3003               	movlw	3
  1248  00F9  120A  158A  2319  120A  118A  	fcall	_sendByte
  1249                           
  1250                           ;main.c: 197:                         sendByte(0x03, 0x02, car[i]);
  1251  00FE  3002               	movlw	2
  1252  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0101  00C0               	movwf	??_main
  1255  0102  0840               	movf	??_main,w
  1256  0103  00B8               	movwf	sendByte@byte1
  1257  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0106  0866               	movf	main@i^(0+128),w
  1260  0107  3ED3               	addlw	(low (_car| 0))& (0+255)
  1261  0108  0084               	movwf	4
  1262  0109  1383               	bcf	3,7	;select IRP bank1
  1263  010A  0800               	movf	0,w
  1264  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1265  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1266  010D  00C1               	movwf	??_main+1
  1267  010E  0841               	movf	??_main+1,w
  1268  010F  00B9               	movwf	sendByte@valore
  1269  0110  3003               	movlw	3
  1270  0111  120A  158A  2319  120A  118A  	fcall	_sendByte
  1271                           
  1272                           ;main.c: 198:                         sendByte(0x03, 0x03, truck[i]);
  1273  0116  3003               	movlw	3
  1274  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0119  00C0               	movwf	??_main
  1277  011A  0840               	movf	??_main,w
  1278  011B  00B8               	movwf	sendByte@byte1
  1279  011C  1683               	bsf	3,5	;RP0=1, select bank1
  1280  011D  1303               	bcf	3,6	;RP1=0, select bank1
  1281  011E  0866               	movf	main@i^(0+128),w
  1282  011F  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1283  0120  0084               	movwf	4
  1284  0121  1383               	bcf	3,7	;select IRP bank1
  1285  0122  0800               	movf	0,w
  1286  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0125  00C1               	movwf	??_main+1
  1289  0126  0841               	movf	??_main+1,w
  1290  0127  00B9               	movwf	sendByte@valore
  1291  0128  3003               	movlw	3
  1292  0129  120A  158A  2319  120A  118A  	fcall	_sendByte
  1293                           
  1294                           ;main.c: 199:                         break;
  1295  012E  2A18               	goto	l3583
  1296  012F                     l3573:	
  1297                           
  1298                           ;main.c: 201:                         sendByte(0x05, 0x01, motorcycle[i]);
  1299  012F  01B8               	clrf	sendByte@byte1
  1300  0130  0AB8               	incf	sendByte@byte1,f
  1301  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0133  0866               	movf	main@i^(0+128),w
  1304  0134  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1305  0135  0084               	movwf	4
  1306  0136  1383               	bcf	3,7	;select IRP bank0
  1307  0137  0800               	movf	0,w
  1308  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1310  013A  00C0               	movwf	??_main
  1311  013B  0840               	movf	??_main,w
  1312  013C  00B9               	movwf	sendByte@valore
  1313  013D  3005               	movlw	5
  1314  013E  120A  158A  2319  120A  118A  	fcall	_sendByte
  1315                           
  1316                           ;main.c: 202:                         sendByte(0x05, 0x02, car[i]);
  1317  0143  3002               	movlw	2
  1318  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0146  00C0               	movwf	??_main
  1321  0147  0840               	movf	??_main,w
  1322  0148  00B8               	movwf	sendByte@byte1
  1323  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1324  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1325  014B  0866               	movf	main@i^(0+128),w
  1326  014C  3ED3               	addlw	(low (_car| 0))& (0+255)
  1327  014D  0084               	movwf	4
  1328  014E  1383               	bcf	3,7	;select IRP bank1
  1329  014F  0800               	movf	0,w
  1330  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0152  00C1               	movwf	??_main+1
  1333  0153  0841               	movf	??_main+1,w
  1334  0154  00B9               	movwf	sendByte@valore
  1335  0155  3005               	movlw	5
  1336  0156  120A  158A  2319  120A  118A  	fcall	_sendByte
  1337                           
  1338                           ;main.c: 203:                         sendByte(0x05, 0x03, truck[i]);
  1339  015B  3003               	movlw	3
  1340  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1341  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1342  015E  00C0               	movwf	??_main
  1343  015F  0840               	movf	??_main,w
  1344  0160  00B8               	movwf	sendByte@byte1
  1345  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1347  0163  0866               	movf	main@i^(0+128),w
  1348  0164  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1349  0165  0084               	movwf	4
  1350  0166  1383               	bcf	3,7	;select IRP bank1
  1351  0167  0800               	movf	0,w
  1352  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1354  016A  00C1               	movwf	??_main+1
  1355  016B  0841               	movf	??_main+1,w
  1356  016C  00B9               	movwf	sendByte@valore
  1357  016D  3005               	movlw	5
  1358  016E  120A  158A  2319  120A  118A  	fcall	_sendByte
  1359                           
  1360                           ;main.c: 204:                         break;
  1361  0173  2A18               	goto	l3583
  1362  0174                     l3575:	
  1363                           
  1364                           ;main.c: 206:                         sendByte(0x07, 0x01, motorcycle[i]);
  1365  0174  01B8               	clrf	sendByte@byte1
  1366  0175  0AB8               	incf	sendByte@byte1,f
  1367  0176  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0177  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0178  0866               	movf	main@i^(0+128),w
  1370  0179  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1371  017A  0084               	movwf	4
  1372  017B  1383               	bcf	3,7	;select IRP bank0
  1373  017C  0800               	movf	0,w
  1374  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1375  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1376  017F  00C0               	movwf	??_main
  1377  0180  0840               	movf	??_main,w
  1378  0181  00B9               	movwf	sendByte@valore
  1379  0182  3007               	movlw	7
  1380  0183  120A  158A  2319  120A  118A  	fcall	_sendByte
  1381                           
  1382                           ;main.c: 207:                         sendByte(0x07, 0x02, car[i]);
  1383  0188  3002               	movlw	2
  1384  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1385  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1386  018B  00C0               	movwf	??_main
  1387  018C  0840               	movf	??_main,w
  1388  018D  00B8               	movwf	sendByte@byte1
  1389  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1390  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1391  0190  0866               	movf	main@i^(0+128),w
  1392  0191  3ED3               	addlw	(low (_car| 0))& (0+255)
  1393  0192  0084               	movwf	4
  1394  0193  1383               	bcf	3,7	;select IRP bank1
  1395  0194  0800               	movf	0,w
  1396  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0197  00C1               	movwf	??_main+1
  1399  0198  0841               	movf	??_main+1,w
  1400  0199  00B9               	movwf	sendByte@valore
  1401  019A  3007               	movlw	7
  1402  019B  120A  158A  2319  120A  118A  	fcall	_sendByte
  1403                           
  1404                           ;main.c: 208:                         sendByte(0x07, 0x03, truck[i]);
  1405  01A0  3003               	movlw	3
  1406  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1407  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1408  01A3  00C0               	movwf	??_main
  1409  01A4  0840               	movf	??_main,w
  1410  01A5  00B8               	movwf	sendByte@byte1
  1411  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1412  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1413  01A8  0866               	movf	main@i^(0+128),w
  1414  01A9  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1415  01AA  0084               	movwf	4
  1416  01AB  1383               	bcf	3,7	;select IRP bank1
  1417  01AC  0800               	movf	0,w
  1418  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1419  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1420  01AF  00C1               	movwf	??_main+1
  1421  01B0  0841               	movf	??_main+1,w
  1422  01B1  00B9               	movwf	sendByte@valore
  1423  01B2  3007               	movlw	7
  1424  01B3  120A  158A  2319  120A  118A  	fcall	_sendByte
  1425                           
  1426                           ;main.c: 209:                         break;
  1427  01B8  2A18               	goto	l3583
  1428  01B9                     l3577:	
  1429                           
  1430                           ;main.c: 211:                         sendByte(0x09, 0x01, motorcycle[i]);
  1431  01B9  01B8               	clrf	sendByte@byte1
  1432  01BA  0AB8               	incf	sendByte@byte1,f
  1433  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1434  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1435  01BD  0866               	movf	main@i^(0+128),w
  1436  01BE  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1437  01BF  0084               	movwf	4
  1438  01C0  1383               	bcf	3,7	;select IRP bank0
  1439  01C1  0800               	movf	0,w
  1440  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1441  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1442  01C4  00C0               	movwf	??_main
  1443  01C5  0840               	movf	??_main,w
  1444  01C6  00B9               	movwf	sendByte@valore
  1445  01C7  3009               	movlw	9
  1446  01C8  120A  158A  2319  120A  118A  	fcall	_sendByte
  1447                           
  1448                           ;main.c: 212:                         sendByte(0x09, 0x02, car[i]);
  1449  01CD  3002               	movlw	2
  1450  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1451  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1452  01D0  00C0               	movwf	??_main
  1453  01D1  0840               	movf	??_main,w
  1454  01D2  00B8               	movwf	sendByte@byte1
  1455  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1456  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1457  01D5  0866               	movf	main@i^(0+128),w
  1458  01D6  3ED3               	addlw	(low (_car| 0))& (0+255)
  1459  01D7  0084               	movwf	4
  1460  01D8  1383               	bcf	3,7	;select IRP bank1
  1461  01D9  0800               	movf	0,w
  1462  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1463  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1464  01DC  00C1               	movwf	??_main+1
  1465  01DD  0841               	movf	??_main+1,w
  1466  01DE  00B9               	movwf	sendByte@valore
  1467  01DF  3009               	movlw	9
  1468  01E0  120A  158A  2319  120A  118A  	fcall	_sendByte
  1469                           
  1470                           ;main.c: 213:                         sendByte(0x09, 0x03, truck[i]);
  1471  01E5  3003               	movlw	3
  1472  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1473  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1474  01E8  00C0               	movwf	??_main
  1475  01E9  0840               	movf	??_main,w
  1476  01EA  00B8               	movwf	sendByte@byte1
  1477  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1478  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1479  01ED  0866               	movf	main@i^(0+128),w
  1480  01EE  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1481  01EF  0084               	movwf	4
  1482  01F0  1383               	bcf	3,7	;select IRP bank1
  1483  01F1  0800               	movf	0,w
  1484  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1485  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1486  01F4  00C1               	movwf	??_main+1
  1487  01F5  0841               	movf	??_main+1,w
  1488  01F6  00B9               	movwf	sendByte@valore
  1489  01F7  3009               	movlw	9
  1490  01F8  120A  158A  2319  120A  118A  	fcall	_sendByte
  1491                           
  1492                           ;main.c: 214:                         break;
  1493  01FD  2A18               	goto	l3583
  1494  01FE                     l3581:	
  1495  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  1496  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  1497  0200  0866               	movf	main@i^(0+128),w
  1498  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0203  00C0               	movwf	??_main
  1501  0204  01C1               	clrf	??_main+1
  1502                           
  1503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1504                           ; Switch size 1, requested type "simple"
  1505                           ; Number of cases is 1, Range of values is 0 to 0
  1506                           ; switch strategies available:
  1507                           ; Name         Instructions Cycles
  1508                           ; simple_byte            4     3 (average)
  1509                           ; direct_byte           11     8 (fixed)
  1510                           ; jumptable            260     6 (fixed)
  1511                           ;	Chosen strategy is simple_byte
  1512  0205  0841               	movf	??_main+1,w
  1513  0206  3A00               	xorlw	0	; case 0
  1514  0207  1903               	skipnz
  1515  0208  2A0A               	goto	l3941
  1516  0209  2A18               	goto	l3583
  1517  020A                     l3941:	
  1518                           
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 4, Range of values is 0 to 3
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte           13     7 (average)
  1524                           ; direct_byte           20     8 (fixed)
  1525                           ; jumptable            260     6 (fixed)
  1526                           ;	Chosen strategy is simple_byte
  1527  020A  0840               	movf	??_main,w
  1528  020B  3A00               	xorlw	0	; case 0
  1529  020C  1903               	skipnz
  1530  020D  28EA               	goto	l3571
  1531  020E  3A01               	xorlw	1	; case 1
  1532  020F  1903               	skipnz
  1533  0210  292F               	goto	l3573
  1534  0211  3A03               	xorlw	3	; case 2
  1535  0212  1903               	skipnz
  1536  0213  2974               	goto	l3575
  1537  0214  3A01               	xorlw	1	; case 3
  1538  0215  1903               	skipnz
  1539  0216  29B9               	goto	l3577
  1540  0217  2A18               	goto	l3583
  1541  0218                     l3583:	
  1542                           
  1543                           ;main.c: 216:                 }
  1544  0218  3001               	movlw	1
  1545  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1546  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1547  021B  00C0               	movwf	??_main
  1548  021C  0840               	movf	??_main,w
  1549  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1550  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1551  021F  07E6               	addwf	main@i^(0+128),f
  1552  0220                     l3585:	
  1553  0220  3004               	movlw	4
  1554  0221  0266               	subwf	main@i^(0+128),w
  1555  0222  1C03               	skipc
  1556  0223  2A25               	goto	u3071
  1557  0224  2A26               	goto	u3070
  1558  0225                     u3071:	
  1559  0225  2885               	goto	l3557
  1560  0226                     u3070:	
  1561  0226                     l3587:	
  1562                           
  1563                           ;main.c: 218:                 for (int i = 0; i < 4; i++)
  1564  0226  01E2               	clrf	main@i_480^(0+128)
  1565  0227  01E3               	clrf	(main@i_480+1)^(0+128)
  1566  0228                     l3593:	
  1567                           
  1568                           ;main.c: 219:                 {;main.c: 220:                     motorcycle[i] = 0;
  1569  0228  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0229  1303               	bcf	3,6	;RP1=0, select bank1
  1571  022A  0862               	movf	main@i_480^(0+128),w
  1572  022B  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1573  022C  0084               	movwf	4
  1574  022D  1383               	bcf	3,7	;select IRP bank0
  1575  022E  0180               	clrf	0
  1576                           
  1577                           ;main.c: 221:                     car[i] = 0;
  1578  022F  0862               	movf	main@i_480^(0+128),w
  1579  0230  3ED3               	addlw	(low (_car| 0))& (0+255)
  1580  0231  0084               	movwf	4
  1581  0232  0180               	clrf	0
  1582                           
  1583                           ;main.c: 222:                     truck[i] = 0;
  1584  0233  0862               	movf	main@i_480^(0+128),w
  1585  0234  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1586  0235  0084               	movwf	4
  1587  0236  0180               	clrf	0
  1588  0237                     l3595:	
  1589                           
  1590                           ;main.c: 223:                 }
  1591  0237  3001               	movlw	1
  1592  0238  07E2               	addwf	main@i_480^(0+128),f
  1593  0239  1803               	skipnc
  1594  023A  0AE3               	incf	(main@i_480+1)^(0+128),f
  1595  023B  3000               	movlw	0
  1596  023C  07E3               	addwf	(main@i_480+1)^(0+128),f
  1597  023D                     l3597:	
  1598  023D  0863               	movf	(main@i_480+1)^(0+128),w
  1599  023E  3A80               	xorlw	128
  1600  023F  00FF               	movwf	btemp+1
  1601  0240  3080               	movlw	128
  1602  0241  027F               	subwf	btemp+1,w
  1603  0242  1D03               	skipz
  1604  0243  2A46               	goto	u3085
  1605  0244  3004               	movlw	4
  1606  0245  0262               	subwf	main@i_480^(0+128),w
  1607  0246                     u3085:	
  1608  0246  1C03               	skipc
  1609  0247  2A49               	goto	u3081
  1610  0248  2A4A               	goto	u3080
  1611  0249                     u3081:	
  1612  0249  2A28               	goto	l3593
  1613  024A                     u3080:	
  1614  024A                     l3599:	
  1615                           
  1616                           ;main.c: 225:                 for (unsigned char i = 0; i < 5; i++)
  1617  024A  1683               	bsf	3,5	;RP0=1, select bank1
  1618  024B  1303               	bcf	3,6	;RP1=0, select bank1
  1619  024C  01E0               	clrf	main@i_481^(0+128)
  1620  024D                     l3605:	
  1621                           
  1622                           ;main.c: 226:                 {;main.c: 227:                     dataFromGateway[i] = 0;
  1623  024D  0860               	movf	main@i_481^(0+128),w
  1624  024E  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1625  024F  0084               	movwf	4
  1626  0250  1383               	bcf	3,7	;select IRP bank1
  1627  0251  0180               	clrf	0
  1628  0252                     l3607:	
  1629                           
  1630                           ;main.c: 228:                 }
  1631  0252  3001               	movlw	1
  1632  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0255  00C0               	movwf	??_main
  1635  0256  0840               	movf	??_main,w
  1636  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1637  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1638  0259  07E0               	addwf	main@i_481^(0+128),f
  1639  025A                     l3609:	
  1640  025A  3005               	movlw	5
  1641  025B  0260               	subwf	main@i_481^(0+128),w
  1642  025C  1C03               	skipc
  1643  025D  2A5F               	goto	u3091
  1644  025E  2A60               	goto	u3090
  1645  025F                     u3091:	
  1646  025F  2A4D               	goto	l3605
  1647  0260                     u3090:	
  1648  0260  2B56               	goto	l223
  1649  0261                     l242:	
  1650                           ;main.c: 230:             case 0x0A:
  1651                           
  1652                           
  1653                           ;main.c: 231:                 readGatewayDone.Bit = 1;
  1654  0261  1459               	bsf	_readGatewayDone,0
  1655                           
  1656                           ;main.c: 232:                 readGateway.Bit = 0;
  1657  0262  1058               	bcf	_readGateway,0
  1658  0263                     l3611:	
  1659                           
  1660                           ;main.c: 234:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1661  0263  3000               	movlw	0
  1662  0264  120A  158A  22CC  120A  118A  	fcall	_ADC_Read
  1663  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1664  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1665  026B  0824               	movf	?_ADC_Read,w
  1666  026C  00C0               	movwf	??_main
  1667  026D  0825               	movf	?_ADC_Read+1,w
  1668  026E  00C1               	movwf	??_main+1
  1669  026F  0D41               	rlf	??_main+1,w
  1670  0270  0CC1               	rrf	??_main+1,f
  1671  0271  0CC0               	rrf	??_main,f
  1672  0272  0D41               	rlf	??_main+1,w
  1673  0273  0CC1               	rrf	??_main+1,f
  1674  0274  0CC0               	rrf	??_main,f
  1675  0275  0840               	movf	??_main,w
  1676  0276  00B4               	movwf	map@x
  1677  0277  0841               	movf	??_main+1,w
  1678  0278  00B5               	movwf	map@x+1
  1679  0279  3000               	movlw	0
  1680  027A  00B6               	movwf	map@in_min
  1681  027B  00B7               	movwf	map@in_min+1
  1682  027C  30FF               	movlw	255
  1683  027D  00B8               	movwf	map@in_max
  1684  027E  3000               	movlw	0
  1685  027F  00B9               	movwf	map@in_max+1
  1686  0280  30EC               	movlw	236
  1687  0281  00BA               	movwf	map@out_min
  1688  0282  30FF               	movlw	255
  1689  0283  00BB               	movwf	map@out_min+1
  1690  0284  303C               	movlw	60
  1691  0285  00BC               	movwf	map@out_max
  1692  0286  3000               	movlw	0
  1693  0287  00BD               	movwf	map@out_max+1
  1694  0288  120A  158A  234A  120A  118A  	fcall	_map
  1695  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1696  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1697  028F  0834               	movf	?_map,w
  1698  0290  00C2               	movwf	??_main+2
  1699  0291  0842               	movf	??_main+2,w
  1700  0292  00D1               	movwf	_temp
  1701                           
  1702                           ;main.c: 235:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1703  0293  3001               	movlw	1
  1704  0294  120A  158A  22CC  120A  118A  	fcall	_ADC_Read
  1705  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1706  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1707  029B  0824               	movf	?_ADC_Read,w
  1708  029C  00C0               	movwf	??_main
  1709  029D  0825               	movf	?_ADC_Read+1,w
  1710  029E  00C1               	movwf	??_main+1
  1711  029F  0D41               	rlf	??_main+1,w
  1712  02A0  0CC1               	rrf	??_main+1,f
  1713  02A1  0CC0               	rrf	??_main,f
  1714  02A2  0D41               	rlf	??_main+1,w
  1715  02A3  0CC1               	rrf	??_main+1,f
  1716  02A4  0CC0               	rrf	??_main,f
  1717  02A5  0840               	movf	??_main,w
  1718  02A6  00B4               	movwf	map@x
  1719  02A7  0841               	movf	??_main+1,w
  1720  02A8  00B5               	movwf	map@x+1
  1721  02A9  3000               	movlw	0
  1722  02AA  00B6               	movwf	map@in_min
  1723  02AB  00B7               	movwf	map@in_min+1
  1724  02AC  30FF               	movlw	255
  1725  02AD  00B8               	movwf	map@in_max
  1726  02AE  3000               	movlw	0
  1727  02AF  00B9               	movwf	map@in_max+1
  1728  02B0  3000               	movlw	0
  1729  02B1  00BA               	movwf	map@out_min
  1730  02B2  00BB               	movwf	map@out_min+1
  1731  02B3  3064               	movlw	100
  1732  02B4  00BC               	movwf	map@out_max
  1733  02B5  3000               	movlw	0
  1734  02B6  00BD               	movwf	map@out_max+1
  1735  02B7  120A  158A  234A  120A  118A  	fcall	_map
  1736  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1737  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1738  02BE  0834               	movf	?_map,w
  1739  02BF  00C2               	movwf	??_main+2
  1740  02C0  0842               	movf	??_main+2,w
  1741  02C1  00D0               	movwf	_umidita
  1742                           
  1743                           ;main.c: 236:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1744  02C2  3005               	movlw	5
  1745  02C3  120A  158A  22CC  120A  118A  	fcall	_ADC_Read
  1746  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1747  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1748  02CA  0824               	movf	?_ADC_Read,w
  1749  02CB  00C0               	movwf	??_main
  1750  02CC  0825               	movf	?_ADC_Read+1,w
  1751  02CD  00C1               	movwf	??_main+1
  1752  02CE  0D41               	rlf	??_main+1,w
  1753  02CF  0CC1               	rrf	??_main+1,f
  1754  02D0  0CC0               	rrf	??_main,f
  1755  02D1  0D41               	rlf	??_main+1,w
  1756  02D2  0CC1               	rrf	??_main+1,f
  1757  02D3  0CC0               	rrf	??_main,f
  1758  02D4  0840               	movf	??_main,w
  1759  02D5  00B4               	movwf	map@x
  1760  02D6  0841               	movf	??_main+1,w
  1761  02D7  00B5               	movwf	map@x+1
  1762  02D8  3000               	movlw	0
  1763  02D9  00B6               	movwf	map@in_min
  1764  02DA  00B7               	movwf	map@in_min+1
  1765  02DB  30FF               	movlw	255
  1766  02DC  00B8               	movwf	map@in_max
  1767  02DD  3000               	movlw	0
  1768  02DE  00B9               	movwf	map@in_max+1
  1769  02DF  3000               	movlw	0
  1770  02E0  00BA               	movwf	map@out_min
  1771  02E1  00BB               	movwf	map@out_min+1
  1772  02E2  3064               	movlw	100
  1773  02E3  00BC               	movwf	map@out_max
  1774  02E4  3000               	movlw	0
  1775  02E5  00BD               	movwf	map@out_max+1
  1776  02E6  120A  158A  234A  120A  118A  	fcall	_map
  1777  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1778  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1779  02ED  0834               	movf	?_map,w
  1780  02EE  00C2               	movwf	??_main+2
  1781  02EF  0842               	movf	??_main+2,w
  1782  02F0  00CF               	movwf	_pressione
  1783  02F1                     l3613:	
  1784                           
  1785                           ;main.c: 237:                 sendByte(0x02, 0x00, temp);
  1786  02F1  01B8               	clrf	sendByte@byte1
  1787  02F2  0851               	movf	_temp,w
  1788  02F3  00C0               	movwf	??_main
  1789  02F4  0840               	movf	??_main,w
  1790  02F5  00B9               	movwf	sendByte@valore
  1791  02F6  3002               	movlw	2
  1792  02F7  120A  158A  2319  120A  118A  	fcall	_sendByte
  1793  02FC                     l3615:	
  1794                           
  1795                           ;main.c: 238:                 sendByte(0x04, 0x00, umidita);
  1796  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1797  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1798  02FE  01B8               	clrf	sendByte@byte1
  1799  02FF  0850               	movf	_umidita,w
  1800  0300  00C0               	movwf	??_main
  1801  0301  0840               	movf	??_main,w
  1802  0302  00B9               	movwf	sendByte@valore
  1803  0303  3004               	movlw	4
  1804  0304  120A  158A  2319  120A  118A  	fcall	_sendByte
  1805  0309                     l3617:	
  1806                           
  1807                           ;main.c: 239:                 sendByte(0x06, 0x00, pressione);
  1808  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1809  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1810  030B  01B8               	clrf	sendByte@byte1
  1811  030C  084F               	movf	_pressione,w
  1812  030D  00C0               	movwf	??_main
  1813  030E  0840               	movf	??_main,w
  1814  030F  00B9               	movwf	sendByte@valore
  1815  0310  3006               	movlw	6
  1816  0311  120A  158A  2319  120A  118A  	fcall	_sendByte
  1817  0316                     l3619:	
  1818                           
  1819                           ;main.c: 241:                 for (unsigned char i = 0; i < 5; i++)
  1820  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0318  01E1               	clrf	main@i_483^(0+128)
  1823  0319                     l3621:	
  1824  0319  3005               	movlw	5
  1825  031A  0261               	subwf	main@i_483^(0+128),w
  1826  031B  1C03               	skipc
  1827  031C  2B1E               	goto	u3101
  1828  031D  2B1F               	goto	u3100
  1829  031E                     u3101:	
  1830  031E  2B20               	goto	l3625
  1831  031F                     u3100:	
  1832  031F  2B56               	goto	l223
  1833  0320                     l3625:	
  1834                           
  1835                           ;main.c: 242:                 {;main.c: 243:                     dataFromGateway[i] = 0;
  1836  0320  0861               	movf	main@i_483^(0+128),w
  1837  0321  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1838  0322  0084               	movwf	4
  1839  0323  1383               	bcf	3,7	;select IRP bank1
  1840  0324  0180               	clrf	0
  1841  0325                     l3627:	
  1842                           
  1843                           ;main.c: 244:                 }
  1844  0325  3001               	movlw	1
  1845  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0328  00C0               	movwf	??_main
  1848  0329  0840               	movf	??_main,w
  1849  032A  1683               	bsf	3,5	;RP0=1, select bank1
  1850  032B  1303               	bcf	3,6	;RP1=0, select bank1
  1851  032C  07E1               	addwf	main@i_483^(0+128),f
  1852  032D  2B19               	goto	l3621
  1853  032E                     l3631:	
  1854                           
  1855                           ;main.c: 248:                 if (timerReadFromGateway >= 4)
  1856  032E  3004               	movlw	4
  1857  032F  0252               	subwf	_timerReadFromGateway,w
  1858  0330  1C03               	skipc
  1859  0331  2B33               	goto	u3111
  1860  0332  2B34               	goto	u3110
  1861  0333                     u3111:	
  1862  0333  2B37               	goto	l3635
  1863  0334                     u3110:	
  1864  0334                     l3633:	
  1865                           
  1866                           ;main.c: 249:                 {;main.c: 250:                     readGatewayDone.Bit = 1
      +                          ;
  1867  0334  1459               	bsf	_readGatewayDone,0
  1868                           
  1869                           ;main.c: 251:                     readGatewayDone.Timeout = 1;
  1870  0335  14D9               	bsf	_readGatewayDone,1
  1871                           
  1872                           ;main.c: 252:                     readGateway.Bit = 0;
  1873  0336  1058               	bcf	_readGateway,0
  1874  0337                     l3635:	
  1875                           
  1876                           ;main.c: 255:                 if (dataFromGatewayIndex >= 15)
  1877  0337  300F               	movlw	15
  1878  0338  0253               	subwf	_dataFromGatewayIndex,w
  1879  0339  1C03               	skipc
  1880  033A  2B3C               	goto	u3121
  1881  033B  2B3D               	goto	u3120
  1882  033C                     u3121:	
  1883  033C  2B56               	goto	l223
  1884  033D                     u3120:	
  1885  033D                     l3637:	
  1886                           
  1887                           ;main.c: 256:                 {;main.c: 257:                     readGatewayDone.Bit = 1
      +                          ;
  1888  033D  1459               	bsf	_readGatewayDone,0
  1889                           
  1890                           ;main.c: 258:                     readGatewayDone.Timeout = 0;
  1891  033E  10D9               	bcf	_readGatewayDone,1
  1892                           
  1893                           ;main.c: 259:                     readGateway.Bit = 0;
  1894  033F  1058               	bcf	_readGateway,0
  1895  0340  2B56               	goto	l223
  1896  0341                     l3641:	
  1897  0341  1683               	bsf	3,5	;RP0=1, select bank1
  1898  0342  1303               	bcf	3,6	;RP1=0, select bank1
  1899  0343  0824               	movf	_dataFromGateway^(0+128),w
  1900  0344  397F               	andlw	127
  1901  0345  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0346  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0347  00C0               	movwf	??_main
  1904  0348  01C1               	clrf	??_main+1
  1905                           
  1906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1907                           ; Switch size 1, requested type "simple"
  1908                           ; Number of cases is 1, Range of values is 0 to 0
  1909                           ; switch strategies available:
  1910                           ; Name         Instructions Cycles
  1911                           ; simple_byte            4     3 (average)
  1912                           ; direct_byte           11     8 (fixed)
  1913                           ; jumptable            260     6 (fixed)
  1914                           ;	Chosen strategy is simple_byte
  1915  0349  0841               	movf	??_main+1,w
  1916  034A  3A00               	xorlw	0	; case 0
  1917  034B  1903               	skipnz
  1918  034C  2B4E               	goto	l3943
  1919  034D  2B2E               	goto	l3631
  1920  034E                     l3943:	
  1921                           
  1922                           ; Switch size 1, requested type "simple"
  1923                           ; Number of cases is 2, Range of values is 8 to 10
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte            7     4 (average)
  1927                           ; direct_byte           20    11 (fixed)
  1928                           ; jumptable            263     9 (fixed)
  1929                           ;	Chosen strategy is simple_byte
  1930  034E  0840               	movf	??_main,w
  1931  034F  3A08               	xorlw	8	; case 8
  1932  0350  1903               	skipnz
  1933  0351  2880               	goto	l225
  1934  0352  3A02               	xorlw	2	; case 10
  1935  0353  1903               	skipnz
  1936  0354  2A61               	goto	l242
  1937  0355  2B2E               	goto	l3631
  1938  0356                     l223:	
  1939                           ;main.c: 263:         }
  1940                           
  1941                           
  1942                           ;main.c: 266:         if (readGatewayDone.Bit)
  1943  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0357  1C59               	btfss	_readGatewayDone,0
  1945  0358  2B5A               	goto	u3131
  1946  0359  2B5B               	goto	u3130
  1947  035A                     u3131:	
  1948  035A  2B6F               	goto	l3655
  1949  035B                     u3130:	
  1950  035B                     l3643:	
  1951                           
  1952                           ;main.c: 267:         {;main.c: 269:             readGateway.Bit = 0;
  1953  035B  1058               	bcf	_readGateway,0
  1954  035C                     l3645:	
  1955                           
  1956                           ;main.c: 270:             dataFromGatewayIndex = 0;
  1957  035C  01D3               	clrf	_dataFromGatewayIndex
  1958  035D                     l3647:	
  1959                           
  1960                           ;main.c: 271:             readGatewayDone.Bit = 0;
  1961  035D  1059               	bcf	_readGatewayDone,0
  1962                           
  1963                           ;main.c: 272:             timerReadFromGateway = 0;
  1964  035E  01D2               	clrf	_timerReadFromGateway
  1965  035F                     l3649:	
  1966                           
  1967                           ;main.c: 275:             if (readGatewayDone.Timeout)
  1968  035F  1CD9               	btfss	_readGatewayDone,1
  1969  0360  2B62               	goto	u3141
  1970  0361  2B63               	goto	u3140
  1971  0362                     u3141:	
  1972  0362  2B65               	goto	l3653
  1973  0363                     u3140:	
  1974  0363                     l3651:	
  1975                           
  1976                           ;main.c: 276:             {;main.c: 277:                 readGatewayDone.Timeout = 0;
  1977  0363  10D9               	bcf	_readGatewayDone,1
  1978                           
  1979                           ;main.c: 278:             }
  1980  0364  2B6F               	goto	l3655
  1981  0365                     l3653:	
  1982                           
  1983                           ;main.c: 281:             {;main.c: 283:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1984  0365  3064               	movlw	(low (_Semafori| 0))& (0+255)
  1985  0366  00C0               	movwf	??_main
  1986  0367  0840               	movf	??_main,w
  1987  0368  00AC               	movwf	SetReceivedTimes@_semafori
  1988  0369  30A4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1989  036A  120A  158A  2635  120A  118A  	fcall	_SetReceivedTimes
  1990  036F                     l3655:	
  1991                           
  1992                           ;main.c: 289:         if (secondPassed.Bit && cycled.Bit)
  1993  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0371  1C57               	btfss	_secondPassed,0
  1996  0372  2B74               	goto	u3151
  1997  0373  2B75               	goto	u3150
  1998  0374                     u3151:	
  1999  0374  2C68               	goto	l3689
  2000  0375                     u3150:	
  2001  0375                     l3657:	
  2002  0375  1C56               	btfss	_cycled,0
  2003  0376  2B78               	goto	u3161
  2004  0377  2B79               	goto	u3160
  2005  0378                     u3161:	
  2006  0378  2C68               	goto	l3689
  2007  0379                     u3160:	
  2008  0379                     l3659:	
  2009                           
  2010                           ;main.c: 290:         {;main.c: 291:             for (unsigned char i = 0; i < n_semafor
      +                          i; i++)
  2011  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2012  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2013  037B  01E5               	clrf	main@i_485^(0+128)
  2014  037C                     l3661:	
  2015  037C  3002               	movlw	2
  2016  037D  0265               	subwf	main@i_485^(0+128),w
  2017  037E  1C03               	skipc
  2018  037F  2B81               	goto	u3171
  2019  0380  2B82               	goto	u3170
  2020  0381                     u3171:	
  2021  0381  2B83               	goto	l3665
  2022  0382                     u3170:	
  2023  0382  2C68               	goto	l3689
  2024  0383                     l3665:	
  2025                           
  2026                           ;main.c: 292:             {;main.c: 293:                 if ((*Semafori[i]).times[0] != 
      +                          0)
  2027  0383  0865               	movf	main@i_485^(0+128),w
  2028  0384  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2029  0385  0084               	movwf	4
  2030  0386  1383               	bcf	3,7	;select IRP bank0
  2031  0387  0800               	movf	0,w
  2032  0388  0084               	movwf	4
  2033  0389  0800               	movf	0,w
  2034  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2035  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2036  038C  00C0               	movwf	??_main
  2037  038D  0A84               	incf	4,f
  2038  038E  0800               	movf	0,w
  2039  038F  00C1               	movwf	??_main+1
  2040  0390  0840               	movf	??_main,w
  2041  0391  0441               	iorwf	??_main+1,w
  2042  0392  1903               	btfsc	3,2
  2043  0393  2B95               	goto	u3181
  2044  0394  2B96               	goto	u3180
  2045  0395                     u3181:	
  2046  0395  2C5F               	goto	l3685
  2047  0396                     u3180:	
  2048  0396                     l3667:	
  2049                           
  2050                           ;main.c: 294:                 {;main.c: 295:                     time[i]++;
  2051  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2053  0398  0865               	movf	main@i_485^(0+128),w
  2054  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2055  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2056  039B  00C0               	movwf	??_main
  2057  039C  0740               	addwf	??_main,w
  2058  039D  3E49               	addlw	(low (_time| 0))& (0+255)
  2059  039E  0084               	movwf	4
  2060  039F  3001               	movlw	1
  2061  03A0  0780               	addwf	0,f
  2062  03A1  0A84               	incf	4,f
  2063  03A2  1803               	skipnc
  2064  03A3  0A80               	incf	0,f
  2065                           
  2066                           ;main.c: 296:                     unsigned char lux_select = (*Semafori[i]).lux_select;
  2067  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2068  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  2069  03A6  0865               	movf	main@i_485^(0+128),w
  2070  03A7  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2071  03A8  0084               	movwf	4
  2072  03A9  0800               	movf	0,w
  2073  03AA  3E0C               	addlw	12
  2074  03AB  0084               	movwf	4
  2075  03AC  0800               	movf	0,w
  2076  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2077  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2078  03AF  00C0               	movwf	??_main
  2079  03B0  0840               	movf	??_main,w
  2080  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2081  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2082  03B3  00E4               	movwf	main@lux_select^(0+128)
  2083                           
  2084                           ;main.c: 298:                     if ((*Semafori[i]).times[lux_select] - time[i] < 0)
  2085  03B4  0865               	movf	main@i_485^(0+128),w
  2086  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2087  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2088  03B7  00C0               	movwf	??_main
  2089  03B8  0740               	addwf	??_main,w
  2090  03B9  3E49               	addlw	(low (_time| 0))& (0+255)
  2091  03BA  0084               	movwf	4
  2092  03BB  0800               	movf	0,w
  2093  03BC  00C1               	movwf	??_main+1
  2094  03BD  0A84               	incf	4,f
  2095  03BE  0800               	movf	0,w
  2096  03BF  00C2               	movwf	??_main+2
  2097  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2098  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2099  03C2  0865               	movf	main@i_485^(0+128),w
  2100  03C3  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2101  03C4  0084               	movwf	4
  2102  03C5  0864               	movf	main@lux_select^(0+128),w
  2103  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2104  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2105  03C8  00C3               	movwf	??_main+3
  2106  03C9  0743               	addwf	??_main+3,w
  2107  03CA  0700               	addwf	0,w
  2108  03CB  00C4               	movwf	??_main+4
  2109  03CC  0844               	movf	??_main+4,w
  2110  03CD  0084               	movwf	4
  2111  03CE  0800               	movf	0,w
  2112  03CF  00C5               	movwf	??_main+5
  2113  03D0  0A84               	incf	4,f
  2114  03D1  0800               	movf	0,w
  2115  03D2  00C6               	movwf	??_main+6
  2116  03D3  0841               	movf	??_main+1,w
  2117  03D4  0245               	subwf	??_main+5,w
  2118  03D5  00C7               	movwf	??_main+7
  2119  03D6  0842               	movf	??_main+2,w
  2120  03D7  1C03               	skipc
  2121  03D8  0A42               	incf	??_main+2,w
  2122  03D9  0246               	subwf	??_main+6,w
  2123  03DA  00C8               	movwf	??_main+8
  2124  03DB  1FC8               	btfss	??_main+8,7
  2125  03DC  2BDE               	goto	u3191
  2126  03DD  2BDF               	goto	u3190
  2127  03DE                     u3191:	
  2128  03DE  2C05               	goto	l255
  2129  03DF                     u3190:	
  2130  03DF                     l3669:	
  2131                           
  2132                           ;main.c: 299:                     {;main.c: 300:                         lux_select++;
  2133  03DF  3001               	movlw	1
  2134  03E0  00C0               	movwf	??_main
  2135  03E1  0840               	movf	??_main,w
  2136  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2137  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2138  03E4  07E4               	addwf	main@lux_select^(0+128),f
  2139  03E5                     l3671:	
  2140                           
  2141                           ;main.c: 301:                         time[i] = 1;
  2142  03E5  0865               	movf	main@i_485^(0+128),w
  2143  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2144  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2145  03E8  00C0               	movwf	??_main
  2146  03E9  0740               	addwf	??_main,w
  2147  03EA  3E49               	addlw	(low (_time| 0))& (0+255)
  2148  03EB  0084               	movwf	4
  2149  03EC  3001               	movlw	1
  2150  03ED  0080               	movwf	0
  2151  03EE  0A84               	incf	4,f
  2152  03EF  3000               	movlw	0
  2153  03F0  0080               	movwf	0
  2154  03F1                     l3673:	
  2155                           
  2156                           ;main.c: 303:                         if (lux_select >= 3)
  2157  03F1  3003               	movlw	3
  2158  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2159  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2160  03F4  0264               	subwf	main@lux_select^(0+128),w
  2161  03F5  1C03               	skipc
  2162  03F6  2BF8               	goto	u3201
  2163  03F7  2BF9               	goto	u3200
  2164  03F8                     u3201:	
  2165  03F8  2C05               	goto	l255
  2166  03F9                     u3200:	
  2167  03F9                     l3675:	
  2168                           
  2169                           ;main.c: 304:                         {;main.c: 305:                             lux_sel
      +                          ect = 0;
  2170  03F9  01E4               	clrf	main@lux_select^(0+128)
  2171  03FA                     l3677:	
  2172                           
  2173                           ;main.c: 307:                             if (i == 0)
  2174  03FA  0865               	movf	main@i_485^(0+128),w
  2175  03FB  1D03               	btfss	3,2
  2176  03FC  2BFE               	goto	u3211
  2177  03FD  2BFF               	goto	u3210
  2178  03FE                     u3211:	
  2179  03FE  2C05               	goto	l255
  2180  03FF                     u3210:	
  2181  03FF                     l3679:	
  2182                           
  2183                           ;main.c: 308:                             {;main.c: 309:                                
      +                           UpdateTimes(Semafori);
  2184  03FF  3064               	movlw	(low (_Semafori| 0))& (0+255)
  2185  0400  120A  118A  277F  120A  118A  	fcall	_UpdateTimes
  2186  0405                     l255:	
  2187                           ;main.c: 312:                     }
  2188                           
  2189                           
  2190                           ;main.c: 314:                     luciSemaforo(i, lux_select);
  2191  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2192  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2193  0407  0864               	movf	main@lux_select^(0+128),w
  2194  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2196  040A  00C0               	movwf	??_main
  2197  040B  0840               	movf	??_main,w
  2198  040C  00A4               	movwf	luciSemaforo@lux
  2199  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2200  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2201  040F  0865               	movf	main@i_485^(0+128),w
  2202  0410  120A  158A  24DA  120A  118A  	fcall	_luciSemaforo
  2203  0415                     l3681:	
  2204                           
  2205                           ;main.c: 315:                     (*Semafori[i]).lux_select = lux_select;
  2206  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2207  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2208  0417  0864               	movf	main@lux_select^(0+128),w
  2209  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2211  041A  00C0               	movwf	??_main
  2212  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2213  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2214  041D  0865               	movf	main@i_485^(0+128),w
  2215  041E  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2216  041F  0084               	movwf	4
  2217  0420  1383               	bcf	3,7	;select IRP bank0
  2218  0421  0800               	movf	0,w
  2219  0422  3E0C               	addlw	12
  2220  0423  0084               	movwf	4
  2221  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0426  0840               	movf	??_main,w
  2224  0427  0080               	movwf	0
  2225  0428                     l3683:	
  2226                           
  2227                           ;main.c: 316:                     GetDigits(DigitsArr, i, (*Semafori[i]).times[lux_selec
      +                          t] - time[i]);
  2228  0428  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0429  1303               	bcf	3,6	;RP1=0, select bank1
  2230  042A  0865               	movf	main@i_485^(0+128),w
  2231  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2232  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2233  042D  00C0               	movwf	??_main
  2234  042E  0840               	movf	??_main,w
  2235  042F  00B4               	movwf	GetDigits@index
  2236  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2237  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2238  0432  0865               	movf	main@i_485^(0+128),w
  2239  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0435  00C1               	movwf	??_main+1
  2242  0436  0741               	addwf	??_main+1,w
  2243  0437  3E49               	addlw	(low (_time| 0))& (0+255)
  2244  0438  0084               	movwf	4
  2245  0439  0800               	movf	0,w
  2246  043A  00C2               	movwf	??_main+2
  2247  043B  0A84               	incf	4,f
  2248  043C  0800               	movf	0,w
  2249  043D  00C3               	movwf	??_main+3
  2250  043E  1683               	bsf	3,5	;RP0=1, select bank1
  2251  043F  1303               	bcf	3,6	;RP1=0, select bank1
  2252  0440  0865               	movf	main@i_485^(0+128),w
  2253  0441  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2254  0442  0084               	movwf	4
  2255  0443  0864               	movf	main@lux_select^(0+128),w
  2256  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0446  00C4               	movwf	??_main+4
  2259  0447  0744               	addwf	??_main+4,w
  2260  0448  0700               	addwf	0,w
  2261  0449  00C5               	movwf	??_main+5
  2262  044A  0845               	movf	??_main+5,w
  2263  044B  0084               	movwf	4
  2264  044C  0800               	movf	0,w
  2265  044D  00C6               	movwf	??_main+6
  2266  044E  0A84               	incf	4,f
  2267  044F  0800               	movf	0,w
  2268  0450  00C7               	movwf	??_main+7
  2269  0451  0842               	movf	??_main+2,w
  2270  0452  0246               	subwf	??_main+6,w
  2271  0453  00B5               	movwf	GetDigits@Time
  2272  0454  0843               	movf	??_main+3,w
  2273  0455  1C03               	skipc
  2274  0456  0A43               	incf	??_main+3,w
  2275  0457  0247               	subwf	??_main+7,w
  2276  0458  00B6               	movwf	GetDigits@Time+1
  2277  0459  3062               	movlw	(low (_DigitsArr| 0))& (0+255)
  2278  045A  120A  118A  2486  120A  118A  	fcall	_GetDigits
  2279  045F                     l3685:	
  2280                           
  2281                           ;main.c: 318:             }
  2282  045F  3001               	movlw	1
  2283  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0462  00C0               	movwf	??_main
  2286  0463  0840               	movf	??_main,w
  2287  0464  1683               	bsf	3,5	;RP0=1, select bank1
  2288  0465  1303               	bcf	3,6	;RP1=0, select bank1
  2289  0466  07E5               	addwf	main@i_485^(0+128),f
  2290  0467  2B7C               	goto	l3661
  2291  0468                     l3689:	
  2292                           
  2293                           ;main.c: 321:         ShowDigitsOnDisplay();
  2294  0468  120A  118A  26D2  120A  118A  	fcall	_ShowDigitsOnDisplay
  2295  046D                     l3691:	
  2296                           
  2297                           ;main.c: 327:         if (secondPassed.Bit && cycled.Bit)
  2298  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2299  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2300  046F  1C57               	btfss	_secondPassed,0
  2301  0470  2C72               	goto	u3221
  2302  0471  2C73               	goto	u3220
  2303  0472                     u3221:	
  2304  0472  2C79               	goto	l258
  2305  0473                     u3220:	
  2306  0473                     l3693:	
  2307  0473  1C56               	btfss	_cycled,0
  2308  0474  2C76               	goto	u3231
  2309  0475  2C77               	goto	u3230
  2310  0476                     u3231:	
  2311  0476  2C79               	goto	l258
  2312  0477                     u3230:	
  2313  0477                     l3695:	
  2314                           
  2315                           ;main.c: 328:         {;main.c: 329:             secondPassed.Bit = 0;
  2316  0477  1057               	bcf	_secondPassed,0
  2317                           
  2318                           ;main.c: 330:             cycled.Bit = 0;
  2319  0478  1056               	bcf	_cycled,0
  2320  0479                     l258:	
  2321                           ;main.c: 331:         }
  2322                           
  2323                           
  2324                           ;main.c: 332:         if (secondPassed.Bit && !cycled.Bit)
  2325  0479  1C57               	btfss	_secondPassed,0
  2326  047A  2C7C               	goto	u3241
  2327  047B  2C7D               	goto	u3240
  2328  047C                     u3241:	
  2329  047C  287B               	goto	l3547
  2330  047D                     u3240:	
  2331  047D                     l3697:	
  2332  047D  1856               	btfsc	_cycled,0
  2333  047E  2C80               	goto	u3251
  2334  047F  2C81               	goto	u3250
  2335  0480                     u3251:	
  2336  0480  287B               	goto	l3547
  2337  0481                     u3250:	
  2338  0481                     l3699:	
  2339                           
  2340                           ;main.c: 333:         {;main.c: 334:             cycled.Bit = 1;
  2341  0481  1456               	bsf	_cycled,0
  2342  0482  287B               	goto	l3547
  2343  0483  120A  118A  2810   	ljmp	start
  2344  0486                     __end_of_main:	
  2345                           
  2346                           	psect	text1
  2347  0B19                     __ptext1:	
  2348 ;; *************** function _sendByte *****************
  2349 ;; Defined at:
  2350 ;;		line 396 in file "main.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  byte0           1    wreg     unsigned char 
  2353 ;;  byte1           1   24[BANK0 ] unsigned char 
  2354 ;;  valore          1   25[BANK0 ] unsigned char 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  byte0           1   29[BANK0 ] unsigned char 
  2357 ;;  i               1   31[BANK0 ] unsigned char 
  2358 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2359 ;;		 -> BuildByte@txByte(5), 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       2       0       0       0
  2370 ;;      Locals:         0       3       0       0       0
  2371 ;;      Temps:          0       3       0       0       0
  2372 ;;      Totals:         0       8       0       0       0
  2373 ;;Total ram usage:        8 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    4
  2376 ;; This function calls:
  2377 ;;		_BuildByte
  2378 ;;		_UART_TxChar
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function _sendByte
  2386  0B19                     _sendByte:	
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2390                           ;sendByte@byte0 stored from wreg
  2391  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0B1B  00BD               	movwf	sendByte@byte0
  2394  0B1C                     l3415:	
  2395                           
  2396                           ;main.c: 396: void sendByte(char byte0, char byte1, char valore);main.c: 397: {;main.c: 
      +                          398:     char *txByte;;main.c: 399:     txByte = BuildByte(byte0, byte1, valore);
  2397  0B1C  0838               	movf	sendByte@byte1,w
  2398  0B1D  00BA               	movwf	??_sendByte
  2399  0B1E  083A               	movf	??_sendByte,w
  2400  0B1F  00A4               	movwf	BuildByte@byte1
  2401  0B20  0839               	movf	sendByte@valore,w
  2402  0B21  00BB               	movwf	??_sendByte+1
  2403  0B22  083B               	movf	??_sendByte+1,w
  2404  0B23  00A5               	movwf	BuildByte@valore
  2405  0B24  083D               	movf	sendByte@byte0,w
  2406  0B25  120A  118A  2553  120A  158A  	fcall	_BuildByte
  2407  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0B2C  00BC               	movwf	??_sendByte+2
  2410  0B2D  083C               	movf	??_sendByte+2,w
  2411  0B2E  00BE               	movwf	sendByte@txByte
  2412  0B2F                     l3417:	
  2413                           
  2414                           ;main.c: 401:     for (unsigned char i = 0; i < 5; i++)
  2415  0B2F  01BF               	clrf	sendByte@i
  2416  0B30                     l3423:	
  2417                           
  2418                           ;main.c: 402:     {;main.c: 403:         UART_TxChar(*(txByte++));
  2419  0B30  083E               	movf	sendByte@txByte,w
  2420  0B31  0084               	movwf	4
  2421  0B32  1383               	bcf	3,7	;select IRP bank0
  2422  0B33  0800               	movf	0,w
  2423  0B34  120A  158A  2297  120A  158A  	fcall	_UART_TxChar
  2424  0B39                     l3425:	
  2425  0B39  3001               	movlw	1
  2426  0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  2428  0B3C  00BA               	movwf	??_sendByte
  2429  0B3D  083A               	movf	??_sendByte,w
  2430  0B3E  07BE               	addwf	sendByte@txByte,f
  2431  0B3F                     l3427:	
  2432                           
  2433                           ;main.c: 404:     }
  2434  0B3F  3001               	movlw	1
  2435  0B40  00BA               	movwf	??_sendByte
  2436  0B41  083A               	movf	??_sendByte,w
  2437  0B42  07BF               	addwf	sendByte@i,f
  2438  0B43                     l3429:	
  2439  0B43  3005               	movlw	5
  2440  0B44  023F               	subwf	sendByte@i,w
  2441  0B45  1C03               	skipc
  2442  0B46  2B48               	goto	u2941
  2443  0B47  2B49               	goto	u2940
  2444  0B48                     u2941:	
  2445  0B48  2B30               	goto	l3423
  2446  0B49                     u2940:	
  2447  0B49                     l297:	
  2448  0B49  0008               	return
  2449  0B4A                     __end_of_sendByte:	
  2450                           
  2451                           	psect	text2
  2452  0A97                     __ptext2:	
  2453 ;; *************** function _UART_TxChar *****************
  2454 ;; Defined at:
  2455 ;;		line 371 in file "main.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  ch              1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  ch              1    4[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         0       1       0       0       0
  2471 ;;      Temps:          0       0       0       0       0
  2472 ;;      Totals:         0       1       0       0       0
  2473 ;;Total ram usage:        1 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_sendByte
  2480 ;;		_UART_Write_Text
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _UART_TxChar
  2486  0A97                     _UART_TxChar:	
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _UART_TxChar: [wreg]
  2490                           ;UART_TxChar@ch stored from wreg
  2491  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  2492  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  2493  0A99  00A4               	movwf	UART_TxChar@ch
  2494  0A9A                     l3107:	
  2495  0A9A                     l277:	
  2496                           ;main.c: 374:         ;
  2497                           
  2498                           
  2499                           ;main.c: 373:     while (!TXIF)
  2500  0A9A  1E0C               	btfss	12,4	;volatile
  2501  0A9B  2A9D               	goto	u2431
  2502  0A9C  2A9E               	goto	u2430
  2503  0A9D                     u2431:	
  2504  0A9D  2A9A               	goto	l277
  2505  0A9E                     u2430:	
  2506  0A9E                     l279:	
  2507                           
  2508                           ;main.c: 375:     TXIF = 0;
  2509  0A9E  120C               	bcf	12,4	;volatile
  2510  0A9F                     l3109:	
  2511                           
  2512                           ;main.c: 376:     TXREG = ch;
  2513  0A9F  0824               	movf	UART_TxChar@ch,w
  2514  0AA0  0099               	movwf	25	;volatile
  2515  0AA1                     l280:	
  2516  0AA1  0008               	return
  2517  0AA2                     __end_of_UART_TxChar:	
  2518                           
  2519                           	psect	text3
  2520  0553                     __ptext3:	
  2521 ;; *************** function _BuildByte *****************
  2522 ;; Defined at:
  2523 ;;		line 2 in file "./CustomLib/Serial.h"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  byte0           1    wreg     unsigned char 
  2526 ;;  byte1           1    4[BANK0 ] unsigned char 
  2527 ;;  valore          1    5[BANK0 ] unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  byte0           1    8[BANK0 ] unsigned char 
  2530 ;;  y               2   18[BANK0 ] int 
  2531 ;;  y               2   16[BANK0 ] int 
  2532 ;;  i               2   22[BANK0 ] int 
  2533 ;;  i               2   20[BANK0 ] int 
  2534 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2535 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2536 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      PTR unsigned char 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       2       0       0       0
  2547 ;;      Locals:         0      16       0       0       0
  2548 ;;      Temps:          0       2       0       0       0
  2549 ;;      Totals:         0      20       0       0       0
  2550 ;;Total ram usage:       20 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    3
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_sendByte
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function _BuildByte
  2562  0553                     _BuildByte:	
  2563                           
  2564                           ;incstack = 0
  2565                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2566                           ;BuildByte@byte0 stored from wreg
  2567  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0555  00A8               	movwf	BuildByte@byte0
  2570  0556                     l3025:	
  2571                           
  2572                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2573  0556  0828               	movf	BuildByte@byte0,w
  2574  0557  397F               	andlw	127
  2575  0558  00A6               	movwf	??_BuildByte
  2576  0559  0826               	movf	??_BuildByte,w
  2577  055A  00A9               	movwf	BuildByte@txByte
  2578                           
  2579                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2580  055B  0824               	movf	BuildByte@byte1,w
  2581  055C  397F               	andlw	127
  2582  055D  00A6               	movwf	??_BuildByte
  2583  055E  0826               	movf	??_BuildByte,w
  2584  055F  00AA               	movwf	BuildByte@txByte+1
  2585                           
  2586                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2587  0560  0825               	movf	BuildByte@valore,w
  2588  0561  397F               	andlw	127
  2589  0562  00A6               	movwf	??_BuildByte
  2590  0563  0826               	movf	??_BuildByte,w
  2591  0564  00AB               	movwf	BuildByte@txByte+2
  2592  0565                     l3027:	
  2593                           
  2594                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2595  0565  0825               	movf	BuildByte@valore,w
  2596  0566  00A6               	movwf	??_BuildByte
  2597  0567  3007               	movlw	7
  2598  0568                     u2325:	
  2599  0568  1003               	clrc
  2600  0569  0CA6               	rrf	??_BuildByte,f
  2601  056A  3EFF               	addlw	-1
  2602  056B  1D03               	skipz
  2603  056C  2D68               	goto	u2325
  2604  056D  0826               	movf	??_BuildByte,w
  2605  056E  397F               	andlw	127
  2606  056F  00A7               	movwf	??_BuildByte+1
  2607  0570  0827               	movf	??_BuildByte+1,w
  2608  0571  00AC               	movwf	BuildByte@txByte+3
  2609  0572                     l3029:	
  2610                           
  2611                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2612  0572  01AE               	clrf	BuildByte@sommaRow
  2613  0573                     l3031:	
  2614                           
  2615                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2616  0573  01AF               	clrf	BuildByte@sommaColumn
  2617  0574                     l3033:	
  2618                           
  2619                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2620  0574  01B4               	clrf	BuildByte@i
  2621  0575  01B5               	clrf	BuildByte@i+1
  2622  0576                     l3039:	
  2623                           
  2624                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2625  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0578  01B0               	clrf	BuildByte@y
  2628  0579  01B1               	clrf	BuildByte@y+1
  2629  057A                     l3045:	
  2630                           
  2631                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2632  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2633  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2634  057C  0834               	movf	BuildByte@i,w
  2635  057D  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2636  057E  0084               	movwf	4
  2637  057F  1383               	bcf	3,7	;select IRP bank0
  2638  0580  0800               	movf	0,w
  2639  0581  00A6               	movwf	??_BuildByte
  2640  0582  0A30               	incf	BuildByte@y,w
  2641  0583  2D86               	goto	u2334
  2642  0584                     u2335:	
  2643  0584  1003               	clrc
  2644  0585  0CA6               	rrf	??_BuildByte,f
  2645  0586                     u2334:	
  2646  0586  3EFF               	addlw	-1
  2647  0587  1D03               	skipz
  2648  0588  2D84               	goto	u2335
  2649  0589  0826               	movf	??_BuildByte,w
  2650  058A  3901               	andlw	1
  2651  058B  00A7               	movwf	??_BuildByte+1
  2652  058C  0827               	movf	??_BuildByte+1,w
  2653  058D  07AE               	addwf	BuildByte@sommaRow,f
  2654  058E                     l3047:	
  2655                           
  2656                           ;./CustomLib/Serial.h: 18:         }
  2657  058E  3001               	movlw	1
  2658  058F  07B0               	addwf	BuildByte@y,f
  2659  0590  1803               	skipnc
  2660  0591  0AB1               	incf	BuildByte@y+1,f
  2661  0592  3000               	movlw	0
  2662  0593  07B1               	addwf	BuildByte@y+1,f
  2663  0594                     l3049:	
  2664  0594  0831               	movf	BuildByte@y+1,w
  2665  0595  3A80               	xorlw	128
  2666  0596  00FF               	movwf	btemp+1
  2667  0597  3080               	movlw	128
  2668  0598  027F               	subwf	btemp+1,w
  2669  0599  1D03               	skipz
  2670  059A  2D9D               	goto	u2345
  2671  059B  3008               	movlw	8
  2672  059C  0230               	subwf	BuildByte@y,w
  2673  059D                     u2345:	
  2674  059D  1C03               	skipc
  2675  059E  2DA0               	goto	u2341
  2676  059F  2DA1               	goto	u2340
  2677  05A0                     u2341:	
  2678  05A0  2D7A               	goto	l3045
  2679  05A1                     u2340:	
  2680  05A1                     l105:	
  2681                           
  2682                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2683  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2684  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2685  05A3  1C2E               	btfss	BuildByte@sommaRow,0
  2686  05A4  2DA6               	goto	u2351
  2687  05A5  2DA7               	goto	u2350
  2688  05A6                     u2351:	
  2689  05A6  2DAF               	goto	l3053
  2690  05A7                     u2350:	
  2691  05A7                     l3051:	
  2692                           
  2693                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2694  05A7  3080               	movlw	128
  2695  05A8  00A6               	movwf	??_BuildByte
  2696  05A9  0834               	movf	BuildByte@i,w
  2697  05AA  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2698  05AB  0084               	movwf	4
  2699  05AC  0826               	movf	??_BuildByte,w
  2700  05AD  1383               	bcf	3,7	;select IRP bank0
  2701  05AE  0780               	addwf	0,f
  2702  05AF                     l3053:	
  2703                           
  2704                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2705  05AF  01AE               	clrf	BuildByte@sommaRow
  2706  05B0                     l3057:	
  2707                           ;./CustomLib/Serial.h: 23:         }
  2708                           
  2709                           
  2710                           ;./CustomLib/Serial.h: 28:     }
  2711  05B0  3001               	movlw	1
  2712  05B1  07B4               	addwf	BuildByte@i,f
  2713  05B2  1803               	skipnc
  2714  05B3  0AB5               	incf	BuildByte@i+1,f
  2715  05B4  3000               	movlw	0
  2716  05B5  07B5               	addwf	BuildByte@i+1,f
  2717  05B6                     l3059:	
  2718  05B6  0835               	movf	BuildByte@i+1,w
  2719  05B7  3A80               	xorlw	128
  2720  05B8  00FF               	movwf	btemp+1
  2721  05B9  3080               	movlw	128
  2722  05BA  027F               	subwf	btemp+1,w
  2723  05BB  1D03               	skipz
  2724  05BC  2DBF               	goto	u2365
  2725  05BD  3004               	movlw	4
  2726  05BE  0234               	subwf	BuildByte@i,w
  2727  05BF                     u2365:	
  2728  05BF  1C03               	skipc
  2729  05C0  2DC2               	goto	u2361
  2730  05C1  2DC3               	goto	u2360
  2731  05C2                     u2361:	
  2732  05C2  2D76               	goto	l3039
  2733  05C3                     u2360:	
  2734  05C3                     l3061:	
  2735                           
  2736                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2737  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2738  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2739  05C5  01B6               	clrf	BuildByte@i_341
  2740  05C6  01B7               	clrf	BuildByte@i_341+1
  2741  05C7                     l3067:	
  2742                           
  2743                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2744  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  2745  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  2746  05C9  01B2               	clrf	BuildByte@y_342
  2747  05CA  01B3               	clrf	BuildByte@y_342+1
  2748  05CB                     l3073:	
  2749                           
  2750                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2751  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2752  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2753  05CD  0832               	movf	BuildByte@y_342,w
  2754  05CE  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2755  05CF  0084               	movwf	4
  2756  05D0  1383               	bcf	3,7	;select IRP bank0
  2757  05D1  0800               	movf	0,w
  2758  05D2  00A6               	movwf	??_BuildByte
  2759  05D3  0A36               	incf	BuildByte@i_341,w
  2760  05D4  2DD7               	goto	u2374
  2761  05D5                     u2375:	
  2762  05D5  1003               	clrc
  2763  05D6  0CA6               	rrf	??_BuildByte,f
  2764  05D7                     u2374:	
  2765  05D7  3EFF               	addlw	-1
  2766  05D8  1D03               	skipz
  2767  05D9  2DD5               	goto	u2375
  2768  05DA  0826               	movf	??_BuildByte,w
  2769  05DB  3901               	andlw	1
  2770  05DC  00A7               	movwf	??_BuildByte+1
  2771  05DD  0827               	movf	??_BuildByte+1,w
  2772  05DE  07AF               	addwf	BuildByte@sommaColumn,f
  2773  05DF                     l3075:	
  2774                           
  2775                           ;./CustomLib/Serial.h: 37:         }
  2776  05DF  3001               	movlw	1
  2777  05E0  07B2               	addwf	BuildByte@y_342,f
  2778  05E1  1803               	skipnc
  2779  05E2  0AB3               	incf	BuildByte@y_342+1,f
  2780  05E3  3000               	movlw	0
  2781  05E4  07B3               	addwf	BuildByte@y_342+1,f
  2782  05E5                     l3077:	
  2783  05E5  0833               	movf	BuildByte@y_342+1,w
  2784  05E6  3A80               	xorlw	128
  2785  05E7  00FF               	movwf	btemp+1
  2786  05E8  3080               	movlw	128
  2787  05E9  027F               	subwf	btemp+1,w
  2788  05EA  1D03               	skipz
  2789  05EB  2DEE               	goto	u2385
  2790  05EC  3004               	movlw	4
  2791  05ED  0232               	subwf	BuildByte@y_342,w
  2792  05EE                     u2385:	
  2793  05EE  1C03               	skipc
  2794  05EF  2DF1               	goto	u2381
  2795  05F0  2DF2               	goto	u2380
  2796  05F1                     u2381:	
  2797  05F1  2DCB               	goto	l3073
  2798  05F2                     u2380:	
  2799  05F2                     l111:	
  2800                           
  2801                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2802  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2803  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2804  05F4  1C2F               	btfss	BuildByte@sommaColumn,0
  2805  05F5  2DF7               	goto	u2391
  2806  05F6  2DF8               	goto	u2390
  2807  05F7                     u2391:	
  2808  05F7  2E05               	goto	l3081
  2809  05F8                     u2390:	
  2810  05F8                     l3079:	
  2811                           
  2812                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2813  05F8  3001               	movlw	1
  2814  05F9  00A6               	movwf	??_BuildByte
  2815  05FA  0A36               	incf	BuildByte@i_341,w
  2816  05FB  2DFE               	goto	u2404
  2817  05FC                     u2405:	
  2818  05FC  1003               	clrc
  2819  05FD  0DA6               	rlf	??_BuildByte,f
  2820  05FE                     u2404:	
  2821  05FE  3EFF               	addlw	-1
  2822  05FF  1D03               	skipz
  2823  0600  2DFC               	goto	u2405
  2824  0601  0826               	movf	??_BuildByte,w
  2825  0602  00A7               	movwf	??_BuildByte+1
  2826  0603  0827               	movf	??_BuildByte+1,w
  2827  0604  07AD               	addwf	BuildByte@txByte+4,f
  2828  0605                     l3081:	
  2829                           
  2830                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2831  0605  01AF               	clrf	BuildByte@sommaColumn
  2832  0606                     l3085:	
  2833                           ;./CustomLib/Serial.h: 42:         }
  2834                           
  2835                           
  2836                           ;./CustomLib/Serial.h: 47:     }
  2837  0606  3001               	movlw	1
  2838  0607  07B6               	addwf	BuildByte@i_341,f
  2839  0608  1803               	skipnc
  2840  0609  0AB7               	incf	BuildByte@i_341+1,f
  2841  060A  3000               	movlw	0
  2842  060B  07B7               	addwf	BuildByte@i_341+1,f
  2843  060C                     l3087:	
  2844  060C  0837               	movf	BuildByte@i_341+1,w
  2845  060D  3A80               	xorlw	128
  2846  060E  00FF               	movwf	btemp+1
  2847  060F  3080               	movlw	128
  2848  0610  027F               	subwf	btemp+1,w
  2849  0611  1D03               	skipz
  2850  0612  2E15               	goto	u2415
  2851  0613  3008               	movlw	8
  2852  0614  0236               	subwf	BuildByte@i_341,w
  2853  0615                     u2415:	
  2854  0615  1C03               	skipc
  2855  0616  2E18               	goto	u2411
  2856  0617  2E19               	goto	u2410
  2857  0618                     u2411:	
  2858  0618  2DC7               	goto	l3067
  2859  0619                     u2410:	
  2860  0619                     l3089:	
  2861                           
  2862                           ;./CustomLib/Serial.h: 49:     return txByte;
  2863  0619  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2864  061A                     l114:	
  2865  061A  0008               	return
  2866  061B                     __end_of_BuildByte:	
  2867                           
  2868                           	psect	text4
  2869  0BFF                     __ptext4:	
  2870 ;; *************** function _rand *****************
  2871 ;; Defined at:
  2872 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  2   17[BANK0 ] int 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, pclath, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2886 ;;      Params:         0       2       0       0       0
  2887 ;;      Locals:         0       0       0       0       0
  2888 ;;      Temps:          0       5       0       0       0
  2889 ;;      Totals:         0       7       0       0       0
  2890 ;;Total ram usage:        7 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    4
  2893 ;; This function calls:
  2894 ;;		___lmul
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _rand
  2902  0BFF                     _rand:	
  2903  0BFF                     l3407:	
  2904                           ;incstack = 0
  2905                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2906                           
  2907  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0C01  0861               	movf	_randx+3,w
  2910  0C02  00A7               	movwf	___lmul@multiplier+3
  2911  0C03  0860               	movf	_randx+2,w
  2912  0C04  00A6               	movwf	___lmul@multiplier+2
  2913  0C05  085F               	movf	_randx+1,w
  2914  0C06  00A5               	movwf	___lmul@multiplier+1
  2915  0C07  085E               	movf	_randx,w
  2916  0C08  00A4               	movwf	___lmul@multiplier
  2917  0C09  3041               	movlw	65
  2918  0C0A  00AB               	movwf	___lmul@multiplicand+3
  2919  0C0B  30C6               	movlw	198
  2920  0C0C  00AA               	movwf	___lmul@multiplicand+2
  2921  0C0D  304E               	movlw	78
  2922  0C0E  00A9               	movwf	___lmul@multiplicand+1
  2923  0C0F  306D               	movlw	109
  2924  0C10  00A8               	movwf	___lmul@multiplicand
  2925  0C11  120A  158A  2446  120A  158A  	fcall	___lmul
  2926  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0C18  0827               	movf	?___lmul+3,w
  2929  0C19  00E1               	movwf	_randx+3
  2930  0C1A  0826               	movf	?___lmul+2,w
  2931  0C1B  00E0               	movwf	_randx+2
  2932  0C1C  0825               	movf	?___lmul+1,w
  2933  0C1D  00DF               	movwf	_randx+1
  2934  0C1E  0824               	movf	?___lmul,w
  2935  0C1F  00DE               	movwf	_randx
  2936  0C20                     l3409:	
  2937  0C20  3039               	movlw	57
  2938  0C21  07DE               	addwf	_randx,f
  2939  0C22  3030               	movlw	48
  2940  0C23  1803               	skipnc
  2941  0C24  3031               	movlw	49
  2942  0C25  07DF               	addwf	_randx+1,f
  2943  0C26  3000               	movlw	0
  2944  0C27  1803               	skipnc
  2945  0C28  3001               	movlw	1
  2946  0C29  07E0               	addwf	_randx+2,f
  2947  0C2A  3000               	movlw	0
  2948  0C2B  1803               	skipnc
  2949  0C2C  3001               	movlw	1
  2950  0C2D  07E1               	addwf	_randx+3,f
  2951  0C2E                     l3411:	
  2952  0C2E  085E               	movf	_randx,w
  2953  0C2F  00B3               	movwf	??_rand
  2954  0C30  085F               	movf	_randx+1,w
  2955  0C31  00B4               	movwf	??_rand+1
  2956  0C32  0860               	movf	_randx+2,w
  2957  0C33  00B5               	movwf	??_rand+2
  2958  0C34  0861               	movf	_randx+3,w
  2959  0C35  00B6               	movwf	??_rand+3
  2960  0C36  3010               	movlw	16
  2961  0C37  00B7               	movwf	??_rand+4
  2962  0C38                     u2935:	
  2963  0C38  0D36               	rlf	??_rand+3,w
  2964  0C39  0CB6               	rrf	??_rand+3,f
  2965  0C3A  0CB5               	rrf	??_rand+2,f
  2966  0C3B  0CB4               	rrf	??_rand+1,f
  2967  0C3C  0CB3               	rrf	??_rand,f
  2968  0C3D                     u2930:	
  2969  0C3D  0BB7               	decfsz	??_rand+4,f
  2970  0C3E  2C38               	goto	u2935
  2971  0C3F  30FF               	movlw	255
  2972  0C40  0533               	andwf	??_rand,w
  2973  0C41  00B1               	movwf	?_rand
  2974  0C42  307F               	movlw	127
  2975  0C43  0534               	andwf	??_rand+1,w
  2976  0C44  00B2               	movwf	?_rand+1
  2977  0C45                     l889:	
  2978  0C45  0008               	return
  2979  0C46                     __end_of_rand:	
  2980                           
  2981                           	psect	text5
  2982  0C46                     __ptext5:	
  2983 ;; *************** function ___lmul *****************
  2984 ;; Defined at:
  2985 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  multiplier      4    4[BANK0 ] unsigned long 
  2988 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  product         4   13[BANK0 ] unsigned long 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  4    4[BANK0 ] unsigned long 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3000 ;;      Params:         0       8       0       0       0
  3001 ;;      Locals:         0       4       0       0       0
  3002 ;;      Temps:          0       1       0       0       0
  3003 ;;      Totals:         0      13       0       0       0
  3004 ;;Total ram usage:       13 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    3
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_rand
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function ___lmul
  3016  0C46                     ___lmul:	
  3017  0C46                     l3143:	
  3018                           ;incstack = 0
  3019                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3020                           
  3021  0C46  3000               	movlw	0
  3022  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0C49  00B0               	movwf	___lmul@product+3
  3025  0C4A  3000               	movlw	0
  3026  0C4B  00AF               	movwf	___lmul@product+2
  3027  0C4C  3000               	movlw	0
  3028  0C4D  00AE               	movwf	___lmul@product+1
  3029  0C4E  3000               	movlw	0
  3030  0C4F  00AD               	movwf	___lmul@product
  3031  0C50                     l3145:	
  3032  0C50  1C24               	btfss	___lmul@multiplier,0
  3033  0C51  2C53               	goto	u2481
  3034  0C52  2C54               	goto	u2480
  3035  0C53                     u2481:	
  3036  0C53  2C6B               	goto	l3149
  3037  0C54                     u2480:	
  3038  0C54                     l3147:	
  3039  0C54  0828               	movf	___lmul@multiplicand,w
  3040  0C55  07AD               	addwf	___lmul@product,f
  3041  0C56  0829               	movf	___lmul@multiplicand+1,w
  3042  0C57  1103               	clrz
  3043  0C58  1803               	skipnc
  3044  0C59  3E01               	addlw	1
  3045  0C5A  1903               	skipnz
  3046  0C5B  2C5D               	goto	u2491
  3047  0C5C  07AE               	addwf	___lmul@product+1,f
  3048  0C5D                     u2491:	
  3049  0C5D  082A               	movf	___lmul@multiplicand+2,w
  3050  0C5E  1103               	clrz
  3051  0C5F  1803               	skipnc
  3052  0C60  3E01               	addlw	1
  3053  0C61  1903               	skipnz
  3054  0C62  2C64               	goto	u2492
  3055  0C63  07AF               	addwf	___lmul@product+2,f
  3056  0C64                     u2492:	
  3057  0C64  082B               	movf	___lmul@multiplicand+3,w
  3058  0C65  1103               	clrz
  3059  0C66  1803               	skipnc
  3060  0C67  3E01               	addlw	1
  3061  0C68  1903               	skipnz
  3062  0C69  2C6B               	goto	u2493
  3063  0C6A  07B0               	addwf	___lmul@product+3,f
  3064  0C6B                     u2493:	
  3065  0C6B                     l3149:	
  3066  0C6B  3001               	movlw	1
  3067  0C6C  00AC               	movwf	??___lmul
  3068  0C6D                     u2505:	
  3069  0C6D  1003               	clrc
  3070  0C6E  0DA8               	rlf	___lmul@multiplicand,f
  3071  0C6F  0DA9               	rlf	___lmul@multiplicand+1,f
  3072  0C70  0DAA               	rlf	___lmul@multiplicand+2,f
  3073  0C71  0DAB               	rlf	___lmul@multiplicand+3,f
  3074  0C72  0BAC               	decfsz	??___lmul,f
  3075  0C73  2C6D               	goto	u2505
  3076  0C74                     l3151:	
  3077  0C74  3001               	movlw	1
  3078  0C75                     u2515:	
  3079  0C75  1003               	clrc
  3080  0C76  0CA7               	rrf	___lmul@multiplier+3,f
  3081  0C77  0CA6               	rrf	___lmul@multiplier+2,f
  3082  0C78  0CA5               	rrf	___lmul@multiplier+1,f
  3083  0C79  0CA4               	rrf	___lmul@multiplier,f
  3084  0C7A  3EFF               	addlw	-1
  3085  0C7B  1D03               	skipz
  3086  0C7C  2C75               	goto	u2515
  3087  0C7D  0827               	movf	___lmul@multiplier+3,w
  3088  0C7E  0426               	iorwf	___lmul@multiplier+2,w
  3089  0C7F  0425               	iorwf	___lmul@multiplier+1,w
  3090  0C80  0424               	iorwf	___lmul@multiplier,w
  3091  0C81  1D03               	skipz
  3092  0C82  2C84               	goto	u2521
  3093  0C83  2C85               	goto	u2520
  3094  0C84                     u2521:	
  3095  0C84  2C50               	goto	l3145
  3096  0C85                     u2520:	
  3097  0C85                     l3153:	
  3098  0C85  0830               	movf	___lmul@product+3,w
  3099  0C86  00A7               	movwf	?___lmul+3
  3100  0C87  082F               	movf	___lmul@product+2,w
  3101  0C88  00A6               	movwf	?___lmul+2
  3102  0C89  082E               	movf	___lmul@product+1,w
  3103  0C8A  00A5               	movwf	?___lmul+1
  3104  0C8B  082D               	movf	___lmul@product,w
  3105  0C8C  00A4               	movwf	?___lmul
  3106  0C8D                     l453:	
  3107  0C8D  0008               	return
  3108  0C8E                     __end_of___lmul:	
  3109                           
  3110                           	psect	text6
  3111  0B4A                     __ptext6:	
  3112 ;; *************** function _map *****************
  3113 ;; Defined at:
  3114 ;;		line 127 in file "./CustomLib/TrafficLight.h"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  x               2   20[BANK0 ] int 
  3117 ;;  in_min          2   22[BANK0 ] int 
  3118 ;;  in_max          2   24[BANK0 ] int 
  3119 ;;  out_min         2   26[BANK0 ] int 
  3120 ;;  out_max         2   28[BANK0 ] int 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  2   20[BANK0 ] int 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0, pclath, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3132 ;;      Params:         0      10       0       0       0
  3133 ;;      Locals:         0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0
  3135 ;;      Totals:         0      10       0       0       0
  3136 ;;Total ram usage:       10 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    4
  3139 ;; This function calls:
  3140 ;;		___awdiv
  3141 ;;		___wmul
  3142 ;; This function is called by:
  3143 ;;		_main
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           
  3148                           ;psect for function _map
  3149  0B4A                     _map:	
  3150  0B4A                     l3385:	
  3151                           ;incstack = 0
  3152                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3153                           
  3154                           
  3155                           ;./CustomLib/TrafficLight.h: 127: int map(int x, int in_min, int in_max, int out_min, in
      +                          t out_max);./CustomLib/TrafficLight.h: 128: {;./CustomLib/TrafficLight.h: 129:     retur
      +                          n (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3156  0B4A  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0B4B  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0B4C  0836               	movf	map@in_min,w
  3159  0B4D  0238               	subwf	map@in_max,w
  3160  0B4E  00AB               	movwf	___awdiv@divisor
  3161  0B4F  0837               	movf	map@in_min+1,w
  3162  0B50  1C03               	skipc
  3163  0B51  0A37               	incf	map@in_min+1,w
  3164  0B52  0239               	subwf	map@in_max+1,w
  3165  0B53  00AC               	movwf	___awdiv@divisor+1
  3166  0B54  0836               	movf	map@in_min,w
  3167  0B55  0234               	subwf	map@x,w
  3168  0B56  00A4               	movwf	___wmul@multiplier
  3169  0B57  0837               	movf	map@in_min+1,w
  3170  0B58  1C03               	skipc
  3171  0B59  0A37               	incf	map@in_min+1,w
  3172  0B5A  0235               	subwf	map@x+1,w
  3173  0B5B  00A5               	movwf	___wmul@multiplier+1
  3174  0B5C  083A               	movf	map@out_min,w
  3175  0B5D  023C               	subwf	map@out_max,w
  3176  0B5E  00A6               	movwf	___wmul@multiplicand
  3177  0B5F  083B               	movf	map@out_min+1,w
  3178  0B60  1C03               	skipc
  3179  0B61  0A3B               	incf	map@out_min+1,w
  3180  0B62  023D               	subwf	map@out_max+1,w
  3181  0B63  00A7               	movwf	___wmul@multiplicand+1
  3182  0B64  120A  158A  22F2  120A  158A  	fcall	___wmul
  3183  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0B6B  0825               	movf	?___wmul+1,w
  3186  0B6C  00AE               	movwf	___awdiv@dividend+1
  3187  0B6D  0824               	movf	?___wmul,w
  3188  0B6E  00AD               	movwf	___awdiv@dividend
  3189  0B6F  120A  158A  26FA  120A  158A  	fcall	___awdiv
  3190  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0B76  083A               	movf	map@out_min,w
  3193  0B77  072B               	addwf	?___awdiv,w
  3194  0B78  00B4               	movwf	?_map
  3195  0B79  083B               	movf	map@out_min+1,w
  3196  0B7A  1803               	skipnc
  3197  0B7B  0A3B               	incf	map@out_min+1,w
  3198  0B7C  072C               	addwf	?___awdiv+1,w
  3199  0B7D  00B5               	movwf	?_map+1
  3200  0B7E                     l169:	
  3201  0B7E  0008               	return
  3202  0B7F                     __end_of_map:	
  3203                           
  3204                           	psect	text7
  3205  0AF2                     __ptext7:	
  3206 ;; *************** function ___wmul *****************
  3207 ;; Defined at:
  3208 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3211 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  product         2    8[BANK0 ] unsigned int 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  2    4[BANK0 ] unsigned int 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3223 ;;      Params:         0       4       0       0       0
  3224 ;;      Locals:         0       2       0       0       0
  3225 ;;      Temps:          0       0       0       0       0
  3226 ;;      Totals:         0       6       0       0       0
  3227 ;;Total ram usage:        6 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    3
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_map
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           
  3238                           ;psect for function ___wmul
  3239  0AF2                     ___wmul:	
  3240  0AF2                     l3129:	
  3241                           ;incstack = 0
  3242                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3243                           
  3244  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  3245  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  3246  0AF4  01A8               	clrf	___wmul@product
  3247  0AF5  01A9               	clrf	___wmul@product+1
  3248  0AF6                     l3131:	
  3249  0AF6  1C24               	btfss	___wmul@multiplier,0
  3250  0AF7  2AF9               	goto	u2441
  3251  0AF8  2AFA               	goto	u2440
  3252  0AF9                     u2441:	
  3253  0AF9  2B00               	goto	l439
  3254  0AFA                     u2440:	
  3255  0AFA                     l3133:	
  3256  0AFA  0826               	movf	___wmul@multiplicand,w
  3257  0AFB  07A8               	addwf	___wmul@product,f
  3258  0AFC  1803               	skipnc
  3259  0AFD  0AA9               	incf	___wmul@product+1,f
  3260  0AFE  0827               	movf	___wmul@multiplicand+1,w
  3261  0AFF  07A9               	addwf	___wmul@product+1,f
  3262  0B00                     l439:	
  3263  0B00  3001               	movlw	1
  3264  0B01                     u2455:	
  3265  0B01  1003               	clrc
  3266  0B02  0DA6               	rlf	___wmul@multiplicand,f
  3267  0B03  0DA7               	rlf	___wmul@multiplicand+1,f
  3268  0B04  3EFF               	addlw	-1
  3269  0B05  1D03               	skipz
  3270  0B06  2B01               	goto	u2455
  3271  0B07                     l3135:	
  3272  0B07  3001               	movlw	1
  3273  0B08                     u2465:	
  3274  0B08  1003               	clrc
  3275  0B09  0CA5               	rrf	___wmul@multiplier+1,f
  3276  0B0A  0CA4               	rrf	___wmul@multiplier,f
  3277  0B0B  3EFF               	addlw	-1
  3278  0B0C  1D03               	skipz
  3279  0B0D  2B08               	goto	u2465
  3280  0B0E                     l3137:	
  3281  0B0E  0824               	movf	___wmul@multiplier,w
  3282  0B0F  0425               	iorwf	___wmul@multiplier+1,w
  3283  0B10  1D03               	btfss	3,2
  3284  0B11  2B13               	goto	u2471
  3285  0B12  2B14               	goto	u2470
  3286  0B13                     u2471:	
  3287  0B13  2AF6               	goto	l3131
  3288  0B14                     u2470:	
  3289  0B14                     l3139:	
  3290  0B14  0829               	movf	___wmul@product+1,w
  3291  0B15  00A5               	movwf	?___wmul+1
  3292  0B16  0828               	movf	___wmul@product,w
  3293  0B17  00A4               	movwf	?___wmul
  3294  0B18                     l441:	
  3295  0B18  0008               	return
  3296  0B19                     __end_of___wmul:	
  3297                           
  3298                           	psect	text8
  3299  0CDA                     __ptext8:	
  3300 ;; *************** function _luciSemaforo *****************
  3301 ;; Defined at:
  3302 ;;		line 428 in file "main.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  index           1    wreg     unsigned char 
  3305 ;;  lux             1    4[BANK0 ] unsigned char 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  index           1    7[BANK0 ] unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         0       1       0       0       0
  3318 ;;      Locals:         0       1       0       0       0
  3319 ;;      Temps:          0       2       0       0       0
  3320 ;;      Totals:         0       4       0       0       0
  3321 ;;Total ram usage:        4 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    3
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           
  3332                           ;psect for function _luciSemaforo
  3333  0CDA                     _luciSemaforo:	
  3334                           
  3335                           ;incstack = 0
  3336                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3337                           ;luciSemaforo@index stored from wreg
  3338  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  3340  0CDC  00A7               	movwf	luciSemaforo@index
  3341  0CDD                     l3441:	
  3342                           
  3343                           ;main.c: 428: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 429: {;m
      +                          ain.c: 430:     switch (index)
  3344  0CDD  2D1C               	goto	l3453
  3345  0CDE                     l311:	
  3346                           ;main.c: 434:         {;main.c: 435:         case 0:
  3347                           
  3348                           
  3349                           ;main.c: 436:             PORTCbits.RC1 = 0;
  3350  0CDE  1087               	bcf	7,1	;volatile
  3351                           
  3352                           ;main.c: 437:             PORTCbits.RC2 = 0;
  3353  0CDF  1107               	bcf	7,2	;volatile
  3354                           
  3355                           ;main.c: 438:             PORTCbits.RC0 = 1;
  3356  0CE0  1407               	bsf	7,0	;volatile
  3357                           
  3358                           ;main.c: 439:             break;
  3359  0CE1  2D2C               	goto	l322
  3360  0CE2                     l313:	
  3361                           ;main.c: 440:         case 1:
  3362                           
  3363                           
  3364                           ;main.c: 441:             PORTCbits.RC0 = 0;
  3365  0CE2  1007               	bcf	7,0	;volatile
  3366                           
  3367                           ;main.c: 442:             PORTCbits.RC2 = 0;
  3368  0CE3  1107               	bcf	7,2	;volatile
  3369                           
  3370                           ;main.c: 443:             PORTCbits.RC1 = 1;
  3371  0CE4  1487               	bsf	7,1	;volatile
  3372                           
  3373                           ;main.c: 444:             break;
  3374  0CE5  2D2C               	goto	l322
  3375  0CE6                     l314:	
  3376                           ;main.c: 445:         case 2:
  3377                           
  3378                           
  3379                           ;main.c: 446:             PORTCbits.RC0 = 0;
  3380  0CE6  1007               	bcf	7,0	;volatile
  3381                           
  3382                           ;main.c: 447:             PORTCbits.RC1 = 0;
  3383  0CE7  1087               	bcf	7,1	;volatile
  3384                           
  3385                           ;main.c: 448:             PORTCbits.RC2 = 1;
  3386  0CE8  1507               	bsf	7,2	;volatile
  3387                           
  3388                           ;main.c: 449:             break;
  3389  0CE9  2D2C               	goto	l322
  3390  0CEA                     l3445:	
  3391  0CEA  0824               	movf	luciSemaforo@lux,w
  3392  0CEB  00A5               	movwf	??_luciSemaforo
  3393  0CEC  01A6               	clrf	??_luciSemaforo+1
  3394                           
  3395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3396                           ; Switch size 1, requested type "simple"
  3397                           ; Number of cases is 1, Range of values is 0 to 0
  3398                           ; switch strategies available:
  3399                           ; Name         Instructions Cycles
  3400                           ; simple_byte            4     3 (average)
  3401                           ; direct_byte           11     8 (fixed)
  3402                           ; jumptable            260     6 (fixed)
  3403                           ;	Chosen strategy is simple_byte
  3404  0CED  0826               	movf	??_luciSemaforo+1,w
  3405  0CEE  3A00               	xorlw	0	; case 0
  3406  0CEF  1903               	skipnz
  3407  0CF0  2CF2               	goto	l3945
  3408  0CF1  2D2C               	goto	l322
  3409  0CF2                     l3945:	
  3410                           
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 3, Range of values is 0 to 2
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte           10     6 (average)
  3416                           ; direct_byte           17     8 (fixed)
  3417                           ; jumptable            260     6 (fixed)
  3418                           ;	Chosen strategy is simple_byte
  3419  0CF2  0825               	movf	??_luciSemaforo,w
  3420  0CF3  3A00               	xorlw	0	; case 0
  3421  0CF4  1903               	skipnz
  3422  0CF5  2CDE               	goto	l311
  3423  0CF6  3A01               	xorlw	1	; case 1
  3424  0CF7  1903               	skipnz
  3425  0CF8  2CE2               	goto	l313
  3426  0CF9  3A03               	xorlw	3	; case 2
  3427  0CFA  1903               	skipnz
  3428  0CFB  2CE6               	goto	l314
  3429  0CFC  2D2C               	goto	l322
  3430  0CFD                     l318:	
  3431                           ;main.c: 455:         {;main.c: 456:         case 0:
  3432                           
  3433                           
  3434                           ;main.c: 457:             PORTBbits.RB1 = 0;
  3435  0CFD  1086               	bcf	6,1	;volatile
  3436                           
  3437                           ;main.c: 458:             PORTBbits.RB6 = 0;
  3438  0CFE  1306               	bcf	6,6	;volatile
  3439                           
  3440                           ;main.c: 459:             PORTBbits.RB7 = 1;
  3441  0CFF  1786               	bsf	6,7	;volatile
  3442                           
  3443                           ;main.c: 460:             break;
  3444  0D00  2D2C               	goto	l322
  3445  0D01                     l320:	
  3446                           ;main.c: 461:         case 1:
  3447                           
  3448                           
  3449                           ;main.c: 462:             PORTBbits.RB7 = 0;
  3450  0D01  1386               	bcf	6,7	;volatile
  3451                           
  3452                           ;main.c: 463:             PORTBbits.RB6 = 0;
  3453  0D02  1306               	bcf	6,6	;volatile
  3454                           
  3455                           ;main.c: 464:             PORTBbits.RB1 = 1;
  3456  0D03  1486               	bsf	6,1	;volatile
  3457                           
  3458                           ;main.c: 465:             break;
  3459  0D04  2D2C               	goto	l322
  3460  0D05                     l321:	
  3461                           ;main.c: 466:         case 2:
  3462                           
  3463                           
  3464                           ;main.c: 467:             PORTBbits.RB7 = 0;
  3465  0D05  1386               	bcf	6,7	;volatile
  3466                           
  3467                           ;main.c: 468:             PORTBbits.RB1 = 0;
  3468  0D06  1086               	bcf	6,1	;volatile
  3469                           
  3470                           ;main.c: 469:             PORTBbits.RB6 = 1;
  3471  0D07  1706               	bsf	6,6	;volatile
  3472                           
  3473                           ;main.c: 470:             break;
  3474  0D08  2D2C               	goto	l322
  3475  0D09                     l3449:	
  3476  0D09  0824               	movf	luciSemaforo@lux,w
  3477  0D0A  00A5               	movwf	??_luciSemaforo
  3478  0D0B  01A6               	clrf	??_luciSemaforo+1
  3479                           
  3480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3481                           ; Switch size 1, requested type "simple"
  3482                           ; Number of cases is 1, Range of values is 0 to 0
  3483                           ; switch strategies available:
  3484                           ; Name         Instructions Cycles
  3485                           ; simple_byte            4     3 (average)
  3486                           ; direct_byte           11     8 (fixed)
  3487                           ; jumptable            260     6 (fixed)
  3488                           ;	Chosen strategy is simple_byte
  3489  0D0C  0826               	movf	??_luciSemaforo+1,w
  3490  0D0D  3A00               	xorlw	0	; case 0
  3491  0D0E  1903               	skipnz
  3492  0D0F  2D11               	goto	l3947
  3493  0D10  2D2C               	goto	l322
  3494  0D11                     l3947:	
  3495                           
  3496                           ; Switch size 1, requested type "simple"
  3497                           ; Number of cases is 3, Range of values is 0 to 2
  3498                           ; switch strategies available:
  3499                           ; Name         Instructions Cycles
  3500                           ; simple_byte           10     6 (average)
  3501                           ; direct_byte           17     8 (fixed)
  3502                           ; jumptable            260     6 (fixed)
  3503                           ;	Chosen strategy is simple_byte
  3504  0D11  0825               	movf	??_luciSemaforo,w
  3505  0D12  3A00               	xorlw	0	; case 0
  3506  0D13  1903               	skipnz
  3507  0D14  2CFD               	goto	l318
  3508  0D15  3A01               	xorlw	1	; case 1
  3509  0D16  1903               	skipnz
  3510  0D17  2D01               	goto	l320
  3511  0D18  3A03               	xorlw	3	; case 2
  3512  0D19  1903               	skipnz
  3513  0D1A  2D05               	goto	l321
  3514  0D1B  2D2C               	goto	l322
  3515  0D1C                     l3453:	
  3516  0D1C  0827               	movf	luciSemaforo@index,w
  3517  0D1D  00A5               	movwf	??_luciSemaforo
  3518  0D1E  01A6               	clrf	??_luciSemaforo+1
  3519                           
  3520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3521                           ; Switch size 1, requested type "simple"
  3522                           ; Number of cases is 1, Range of values is 0 to 0
  3523                           ; switch strategies available:
  3524                           ; Name         Instructions Cycles
  3525                           ; simple_byte            4     3 (average)
  3526                           ; direct_byte           11     8 (fixed)
  3527                           ; jumptable            260     6 (fixed)
  3528                           ;	Chosen strategy is simple_byte
  3529  0D1F  0826               	movf	??_luciSemaforo+1,w
  3530  0D20  3A00               	xorlw	0	; case 0
  3531  0D21  1903               	skipnz
  3532  0D22  2D24               	goto	l3949
  3533  0D23  2D2C               	goto	l322
  3534  0D24                     l3949:	
  3535                           
  3536                           ; Switch size 1, requested type "simple"
  3537                           ; Number of cases is 2, Range of values is 0 to 1
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte            7     4 (average)
  3541                           ; direct_byte           14     8 (fixed)
  3542                           ; jumptable            260     6 (fixed)
  3543                           ;	Chosen strategy is simple_byte
  3544  0D24  0825               	movf	??_luciSemaforo,w
  3545  0D25  3A00               	xorlw	0	; case 0
  3546  0D26  1903               	skipnz
  3547  0D27  2CEA               	goto	l3445
  3548  0D28  3A01               	xorlw	1	; case 1
  3549  0D29  1903               	skipnz
  3550  0D2A  2D09               	goto	l3449
  3551  0D2B  2D2C               	goto	l322
  3552  0D2C                     l322:	
  3553  0D2C  0008               	return
  3554  0D2D                     __end_of_luciSemaforo:	
  3555                           
  3556                           	psect	text9
  3557  0AA2                     __ptext9:	
  3558 ;; *************** function _init_ADC *****************
  3559 ;; Defined at:
  3560 ;;		line 340 in file "main.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3574 ;;      Params:         0       0       0       0       0
  3575 ;;      Locals:         0       0       0       0       0
  3576 ;;      Temps:          0       1       0       0       0
  3577 ;;      Totals:         0       1       0       0       0
  3578 ;;Total ram usage:        1 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    3
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_main
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function _init_ADC
  3590  0AA2                     _init_ADC:	
  3591  0AA2                     l3389:	
  3592                           ;incstack = 0
  3593                           ; Regs used in _init_ADC: [wreg+status,2]
  3594                           
  3595                           
  3596                           ;main.c: 342:     TRISA = 0xE3;
  3597  0AA2  30E3               	movlw	227
  3598  0AA3  1683               	bsf	3,5	;RP0=1, select bank1
  3599  0AA4  1303               	bcf	3,6	;RP1=0, select bank1
  3600  0AA5  0085               	movwf	5	;volatile
  3601  0AA6                     l3391:	
  3602                           
  3603                           ;main.c: 343:     ADCON0 = 0x00;
  3604  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  3606  0AA8  019F               	clrf	31	;volatile
  3607  0AA9                     l3393:	
  3608                           
  3609                           ;main.c: 344:     ADCON1 = 0x80;
  3610  0AA9  3080               	movlw	128
  3611  0AAA  1683               	bsf	3,5	;RP0=1, select bank1
  3612  0AAB  1303               	bcf	3,6	;RP1=0, select bank1
  3613  0AAC  009F               	movwf	31	;volatile
  3614  0AAD                     l3395:	
  3615                           
  3616                           ;main.c: 345:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3617  0AAD  3019               	movlw	25
  3618  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  3620  0AB0  00A4               	movwf	??_init_ADC
  3621  0AB1                     u3277:	
  3622  0AB1  0BA4               	decfsz	??_init_ADC,f
  3623  0AB2  2AB1               	goto	u3277
  3624  0AB3  2AB4               	nop2
  3625  0AB4                     l265:	
  3626  0AB4  0008               	return
  3627  0AB5                     __end_of_init_ADC:	
  3628                           
  3629                           	psect	text10
  3630  077F                     __ptext10:	
  3631 ;; *************** function _UpdateTimes *****************
  3632 ;; Defined at:
  3633 ;;		line 4 in file "./CustomLib/TrafficLight.h"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  _semafori       1    wreg     PTR PTR struct .
  3636 ;;		 -> Semafori(2), 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  _semafori       1   14[BANK0 ] PTR PTR struct .
  3639 ;;		 -> Semafori(2), 
  3640 ;;  i               1   15[BANK0 ] unsigned char 
  3641 ;;  l               1   16[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3651 ;;      Params:         0       0       0       0       0
  3652 ;;      Locals:         0       3       0       0       0
  3653 ;;      Temps:          0      10       0       0       0
  3654 ;;      Totals:         0      13       0       0       0
  3655 ;;Total ram usage:       13 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    3
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_main
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           
  3666                           ;psect for function _UpdateTimes
  3667  077F                     _UpdateTimes:	
  3668                           
  3669                           ;incstack = 0
  3670                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3671                           ;UpdateTimes@_semafori stored from wreg
  3672  077F  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0780  1303               	bcf	3,6	;RP1=0, select bank0
  3674  0781  00AE               	movwf	UpdateTimes@_semafori
  3675  0782                     l3293:	
  3676                           
  3677                           ;./CustomLib/TrafficLight.h: 4: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 5: {;./CustomLib/TrafficLight.h: 7:     for (unsigned char l = 0; l < n_semafo
      +                          ri; l++)
  3678  0782  01B0               	clrf	UpdateTimes@l
  3679  0783                     l3299:	
  3680                           
  3681                           ;./CustomLib/TrafficLight.h: 8:     {;./CustomLib/TrafficLight.h: 9:         for (unsign
      +                          ed char i = 0; i < 3; i++)
  3682  0783  01AF               	clrf	UpdateTimes@i
  3683  0784                     l3305:	
  3684                           
  3685                           ;./CustomLib/TrafficLight.h: 10:         {;./CustomLib/TrafficLight.h: 11:             i
      +                          f ((*(_semafori)[l]).times[i] != (*(_semafori)[l]).new_times[i])
  3686  0784  0830               	movf	UpdateTimes@l,w
  3687  0785  072E               	addwf	UpdateTimes@_semafori,w
  3688  0786  00A4               	movwf	??_UpdateTimes
  3689  0787  0824               	movf	??_UpdateTimes,w
  3690  0788  0084               	movwf	4
  3691  0789  082F               	movf	UpdateTimes@i,w
  3692  078A  00A5               	movwf	??_UpdateTimes+1
  3693  078B  0725               	addwf	??_UpdateTimes+1,w
  3694  078C  1383               	bcf	3,7	;select IRP bank0
  3695  078D  0700               	addwf	0,w
  3696  078E  00A6               	movwf	??_UpdateTimes+2
  3697  078F  0826               	movf	??_UpdateTimes+2,w
  3698  0790  3E06               	addlw	6
  3699  0791  0084               	movwf	4
  3700  0792  0800               	movf	0,w
  3701  0793  00A7               	movwf	??_UpdateTimes+3
  3702  0794  0A84               	incf	4,f
  3703  0795  0800               	movf	0,w
  3704  0796  00A8               	movwf	??_UpdateTimes+4
  3705  0797  0830               	movf	UpdateTimes@l,w
  3706  0798  072E               	addwf	UpdateTimes@_semafori,w
  3707  0799  00A9               	movwf	??_UpdateTimes+5
  3708  079A  0829               	movf	??_UpdateTimes+5,w
  3709  079B  0084               	movwf	4
  3710  079C  082F               	movf	UpdateTimes@i,w
  3711  079D  00AA               	movwf	??_UpdateTimes+6
  3712  079E  072A               	addwf	??_UpdateTimes+6,w
  3713  079F  0700               	addwf	0,w
  3714  07A0  00AB               	movwf	??_UpdateTimes+7
  3715  07A1  082B               	movf	??_UpdateTimes+7,w
  3716  07A2  0084               	movwf	4
  3717  07A3  0800               	movf	0,w
  3718  07A4  00AC               	movwf	??_UpdateTimes+8
  3719  07A5  0A84               	incf	4,f
  3720  07A6  0800               	movf	0,w
  3721  07A7  00AD               	movwf	??_UpdateTimes+9
  3722  07A8  0828               	movf	??_UpdateTimes+4,w
  3723  07A9  062D               	xorwf	??_UpdateTimes+9,w
  3724  07AA  1D03               	skipz
  3725  07AB  2FAE               	goto	u2845
  3726  07AC  0827               	movf	??_UpdateTimes+3,w
  3727  07AD  062C               	xorwf	??_UpdateTimes+8,w
  3728  07AE                     u2845:	
  3729  07AE  1903               	skipnz
  3730  07AF  2FB1               	goto	u2841
  3731  07B0  2FB2               	goto	u2840
  3732  07B1                     u2841:	
  3733  07B1  2FD5               	goto	l3309
  3734  07B2                     u2840:	
  3735  07B2                     l3307:	
  3736                           
  3737                           ;./CustomLib/TrafficLight.h: 12:             {;./CustomLib/TrafficLight.h: 13:          
      +                                 (*(_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3738  07B2  0830               	movf	UpdateTimes@l,w
  3739  07B3  072E               	addwf	UpdateTimes@_semafori,w
  3740  07B4  00A4               	movwf	??_UpdateTimes
  3741  07B5  0824               	movf	??_UpdateTimes,w
  3742  07B6  0084               	movwf	4
  3743  07B7  082F               	movf	UpdateTimes@i,w
  3744  07B8  00A5               	movwf	??_UpdateTimes+1
  3745  07B9  0725               	addwf	??_UpdateTimes+1,w
  3746  07BA  0700               	addwf	0,w
  3747  07BB  00A6               	movwf	??_UpdateTimes+2
  3748  07BC  0826               	movf	??_UpdateTimes+2,w
  3749  07BD  3E06               	addlw	6
  3750  07BE  0084               	movwf	4
  3751  07BF  0800               	movf	0,w
  3752  07C0  00A7               	movwf	??_UpdateTimes+3
  3753  07C1  0A84               	incf	4,f
  3754  07C2  0800               	movf	0,w
  3755  07C3  00A8               	movwf	??_UpdateTimes+4
  3756  07C4  0830               	movf	UpdateTimes@l,w
  3757  07C5  072E               	addwf	UpdateTimes@_semafori,w
  3758  07C6  00A9               	movwf	??_UpdateTimes+5
  3759  07C7  0829               	movf	??_UpdateTimes+5,w
  3760  07C8  0084               	movwf	4
  3761  07C9  082F               	movf	UpdateTimes@i,w
  3762  07CA  00AA               	movwf	??_UpdateTimes+6
  3763  07CB  072A               	addwf	??_UpdateTimes+6,w
  3764  07CC  0700               	addwf	0,w
  3765  07CD  00AB               	movwf	??_UpdateTimes+7
  3766  07CE  082B               	movf	??_UpdateTimes+7,w
  3767  07CF  0084               	movwf	4
  3768  07D0  0827               	movf	??_UpdateTimes+3,w
  3769  07D1  0080               	movwf	0
  3770  07D2  0A84               	incf	4,f
  3771  07D3  0828               	movf	??_UpdateTimes+4,w
  3772  07D4  0080               	movwf	0
  3773  07D5                     l3309:	
  3774                           
  3775                           ;./CustomLib/TrafficLight.h: 15:         }
  3776  07D5  3001               	movlw	1
  3777  07D6  00A4               	movwf	??_UpdateTimes
  3778  07D7  0824               	movf	??_UpdateTimes,w
  3779  07D8  07AF               	addwf	UpdateTimes@i,f
  3780  07D9                     l3311:	
  3781  07D9  3003               	movlw	3
  3782  07DA  022F               	subwf	UpdateTimes@i,w
  3783  07DB  1C03               	skipc
  3784  07DC  2FDE               	goto	u2851
  3785  07DD  2FDF               	goto	u2850
  3786  07DE                     u2851:	
  3787  07DE  2F84               	goto	l3305
  3788  07DF                     u2850:	
  3789  07DF                     l3315:	
  3790                           
  3791                           ;./CustomLib/TrafficLight.h: 21:     }
  3792  07DF  3001               	movlw	1
  3793  07E0  00A4               	movwf	??_UpdateTimes
  3794  07E1  0824               	movf	??_UpdateTimes,w
  3795  07E2  07B0               	addwf	UpdateTimes@l,f
  3796  07E3                     l3317:	
  3797  07E3  3002               	movlw	2
  3798  07E4  0230               	subwf	UpdateTimes@l,w
  3799  07E5  1C03               	skipc
  3800  07E6  2FE8               	goto	u2861
  3801  07E7  2FE9               	goto	u2860
  3802  07E8                     u2861:	
  3803  07E8  2F83               	goto	l3299
  3804  07E9                     u2860:	
  3805  07E9                     l127:	
  3806  07E9  0008               	return
  3807  07EA                     __end_of_UpdateTimes:	
  3808                           
  3809                           	psect	text11
  3810  0B7F                     __ptext11:	
  3811 ;; *************** function _UART_Init *****************
  3812 ;; Defined at:
  3813 ;;		line 359 in file "main.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  baudrate        2   19[BANK0 ] int 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, pclath, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         0       2       0       0       0
  3828 ;;      Locals:         0       0       0       0       0
  3829 ;;      Temps:          0       4       0       0       0
  3830 ;;      Totals:         0       6       0       0       0
  3831 ;;Total ram usage:        6 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:    4
  3834 ;; This function calls:
  3835 ;;		___aldiv
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           
  3842                           ;psect for function _UART_Init
  3843  0B7F                     _UART_Init:	
  3844  0B7F                     l3397:	
  3845                           ;incstack = 0
  3846                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3847                           
  3848                           
  3849                           ;main.c: 359: void UART_Init(int baudrate);main.c: 360: {;main.c: 361:     TRISCbits.TRI
      +                          SC6 = 0;
  3850  0B7F  1683               	bsf	3,5	;RP0=1, select bank1
  3851  0B80  1303               	bcf	3,6	;RP1=0, select bank1
  3852  0B81  1307               	bcf	7,6	;volatile
  3853                           
  3854                           ;main.c: 362:     TXSTAbits.TXEN = 1;
  3855  0B82  1698               	bsf	24,5	;volatile
  3856                           
  3857                           ;main.c: 363:     RCSTAbits.SPEN = 1;
  3858  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  3859  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  3860  0B85  1798               	bsf	24,7	;volatile
  3861                           
  3862                           ;main.c: 364:     RCSTAbits.CREN = 1;
  3863  0B86  1618               	bsf	24,4	;volatile
  3864  0B87                     l3399:	
  3865                           
  3866                           ;main.c: 365:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3867  0B87  0833               	movf	UART_Init@baudrate,w
  3868  0B88  00B5               	movwf	??_UART_Init
  3869  0B89  0834               	movf	UART_Init@baudrate+1,w
  3870  0B8A  00B6               	movwf	??_UART_Init+1
  3871  0B8B  3000               	movlw	0
  3872  0B8C  1BB6               	btfsc	??_UART_Init+1,7
  3873  0B8D  30FF               	movlw	255
  3874  0B8E  00B7               	movwf	??_UART_Init+2
  3875  0B8F  00B8               	movwf	??_UART_Init+3
  3876  0B90  3006               	movlw	6
  3877  0B91                     u2925:	
  3878  0B91  1003               	clrc
  3879  0B92  0DB5               	rlf	??_UART_Init,f
  3880  0B93  0DB6               	rlf	??_UART_Init+1,f
  3881  0B94  0DB7               	rlf	??_UART_Init+2,f
  3882  0B95  0DB8               	rlf	??_UART_Init+3,f
  3883  0B96                     u2920:	
  3884  0B96  3EFF               	addlw	-1
  3885  0B97  1D03               	skipz
  3886  0B98  2B91               	goto	u2925
  3887  0B99  0838               	movf	??_UART_Init+3,w
  3888  0B9A  00A7               	movwf	___aldiv@divisor+3
  3889  0B9B  0837               	movf	??_UART_Init+2,w
  3890  0B9C  00A6               	movwf	___aldiv@divisor+2
  3891  0B9D  0836               	movf	??_UART_Init+1,w
  3892  0B9E  00A5               	movwf	___aldiv@divisor+1
  3893  0B9F  0835               	movf	??_UART_Init,w
  3894  0BA0  00A4               	movwf	___aldiv@divisor
  3895  0BA1  3001               	movlw	1
  3896  0BA2  00AB               	movwf	___aldiv@dividend+3
  3897  0BA3  30E8               	movlw	232
  3898  0BA4  00AA               	movwf	___aldiv@dividend+2
  3899  0BA5  3048               	movlw	72
  3900  0BA6  00A9               	movwf	___aldiv@dividend+1
  3901  0BA7  3000               	movlw	0
  3902  0BA8  00A8               	movwf	___aldiv@dividend
  3903  0BA9  120A  158A  2763  120A  158A  	fcall	___aldiv
  3904  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0BB0  0824               	movf	?___aldiv,w
  3907  0BB1  3EFF               	addlw	255
  3908  0BB2  1683               	bsf	3,5	;RP0=1, select bank1
  3909  0BB3  1303               	bcf	3,6	;RP1=0, select bank1
  3910  0BB4  0099               	movwf	25	;volatile
  3911  0BB5                     l3401:	
  3912                           
  3913                           ;main.c: 366:     INTCONbits.GIE = 1;
  3914  0BB5  178B               	bsf	11,7	;volatile
  3915  0BB6                     l3403:	
  3916                           
  3917                           ;main.c: 367:     INTCONbits.PEIE = 1;
  3918  0BB6  170B               	bsf	11,6	;volatile
  3919  0BB7                     l3405:	
  3920                           
  3921                           ;main.c: 368:     PIE1bits.RCIE = 1;
  3922  0BB7  168C               	bsf	12,5	;volatile
  3923  0BB8                     l274:	
  3924  0BB8  0008               	return
  3925  0BB9                     __end_of_UART_Init:	
  3926                           
  3927                           	psect	text12
  3928  0F63                     __ptext12:	
  3929 ;; *************** function ___aldiv *****************
  3930 ;; Defined at:
  3931 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  divisor         4    4[BANK0 ] long 
  3934 ;;  dividend        4    8[BANK0 ] long 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  quotient        4   15[BANK0 ] long 
  3937 ;;  sign            1   14[BANK0 ] unsigned char 
  3938 ;;  counter         1   13[BANK0 ] unsigned char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  4    4[BANK0 ] long 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3948 ;;      Params:         0       8       0       0       0
  3949 ;;      Locals:         0       6       0       0       0
  3950 ;;      Temps:          0       1       0       0       0
  3951 ;;      Totals:         0      15       0       0       0
  3952 ;;Total ram usage:       15 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    3
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_UART_Init
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function ___aldiv
  3964  0F63                     ___aldiv:	
  3965  0F63                     l3171:	
  3966                           ;incstack = 0
  3967                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3968                           
  3969  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3970  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3971  0F65  01AE               	clrf	___aldiv@sign
  3972  0F66                     l3173:	
  3973  0F66  1FA7               	btfss	___aldiv@divisor+3,7
  3974  0F67  2F69               	goto	u2551
  3975  0F68  2F6A               	goto	u2550
  3976  0F69                     u2551:	
  3977  0F69  2F77               	goto	l504
  3978  0F6A                     u2550:	
  3979  0F6A                     l3175:	
  3980  0F6A  09A4               	comf	___aldiv@divisor,f
  3981  0F6B  09A5               	comf	___aldiv@divisor+1,f
  3982  0F6C  09A6               	comf	___aldiv@divisor+2,f
  3983  0F6D  09A7               	comf	___aldiv@divisor+3,f
  3984  0F6E  0AA4               	incf	___aldiv@divisor,f
  3985  0F6F  1903               	skipnz
  3986  0F70  0AA5               	incf	___aldiv@divisor+1,f
  3987  0F71  1903               	skipnz
  3988  0F72  0AA6               	incf	___aldiv@divisor+2,f
  3989  0F73  1903               	skipnz
  3990  0F74  0AA7               	incf	___aldiv@divisor+3,f
  3991  0F75  01AE               	clrf	___aldiv@sign
  3992  0F76  0AAE               	incf	___aldiv@sign,f
  3993  0F77                     l504:	
  3994  0F77  1FAB               	btfss	___aldiv@dividend+3,7
  3995  0F78  2F7A               	goto	u2561
  3996  0F79  2F7B               	goto	u2560
  3997  0F7A                     u2561:	
  3998  0F7A  2F8A               	goto	l3181
  3999  0F7B                     u2560:	
  4000  0F7B                     l3177:	
  4001  0F7B  09A8               	comf	___aldiv@dividend,f
  4002  0F7C  09A9               	comf	___aldiv@dividend+1,f
  4003  0F7D  09AA               	comf	___aldiv@dividend+2,f
  4004  0F7E  09AB               	comf	___aldiv@dividend+3,f
  4005  0F7F  0AA8               	incf	___aldiv@dividend,f
  4006  0F80  1903               	skipnz
  4007  0F81  0AA9               	incf	___aldiv@dividend+1,f
  4008  0F82  1903               	skipnz
  4009  0F83  0AAA               	incf	___aldiv@dividend+2,f
  4010  0F84  1903               	skipnz
  4011  0F85  0AAB               	incf	___aldiv@dividend+3,f
  4012  0F86                     l3179:	
  4013  0F86  3001               	movlw	1
  4014  0F87  00AC               	movwf	??___aldiv
  4015  0F88  082C               	movf	??___aldiv,w
  4016  0F89  06AE               	xorwf	___aldiv@sign,f
  4017  0F8A                     l3181:	
  4018  0F8A  3000               	movlw	0
  4019  0F8B  00B2               	movwf	___aldiv@quotient+3
  4020  0F8C  3000               	movlw	0
  4021  0F8D  00B1               	movwf	___aldiv@quotient+2
  4022  0F8E  3000               	movlw	0
  4023  0F8F  00B0               	movwf	___aldiv@quotient+1
  4024  0F90  3000               	movlw	0
  4025  0F91  00AF               	movwf	___aldiv@quotient
  4026  0F92                     l3183:	
  4027  0F92  0827               	movf	___aldiv@divisor+3,w
  4028  0F93  0426               	iorwf	___aldiv@divisor+2,w
  4029  0F94  0425               	iorwf	___aldiv@divisor+1,w
  4030  0F95  0424               	iorwf	___aldiv@divisor,w
  4031  0F96  1903               	skipnz
  4032  0F97  2F99               	goto	u2571
  4033  0F98  2F9A               	goto	u2570
  4034  0F99                     u2571:	
  4035  0F99  2FE7               	goto	l3203
  4036  0F9A                     u2570:	
  4037  0F9A                     l3185:	
  4038  0F9A  01AD               	clrf	___aldiv@counter
  4039  0F9B  0AAD               	incf	___aldiv@counter,f
  4040  0F9C  2FAA               	goto	l3189
  4041  0F9D                     l3187:	
  4042  0F9D  3001               	movlw	1
  4043  0F9E  00AC               	movwf	??___aldiv
  4044  0F9F                     u2585:	
  4045  0F9F  1003               	clrc
  4046  0FA0  0DA4               	rlf	___aldiv@divisor,f
  4047  0FA1  0DA5               	rlf	___aldiv@divisor+1,f
  4048  0FA2  0DA6               	rlf	___aldiv@divisor+2,f
  4049  0FA3  0DA7               	rlf	___aldiv@divisor+3,f
  4050  0FA4  0BAC               	decfsz	??___aldiv,f
  4051  0FA5  2F9F               	goto	u2585
  4052  0FA6  3001               	movlw	1
  4053  0FA7  00AC               	movwf	??___aldiv
  4054  0FA8  082C               	movf	??___aldiv,w
  4055  0FA9  07AD               	addwf	___aldiv@counter,f
  4056  0FAA                     l3189:	
  4057  0FAA  1FA7               	btfss	___aldiv@divisor+3,7
  4058  0FAB  2FAD               	goto	u2591
  4059  0FAC  2FAE               	goto	u2590
  4060  0FAD                     u2591:	
  4061  0FAD  2F9D               	goto	l3187
  4062  0FAE                     u2590:	
  4063  0FAE                     l3191:	
  4064  0FAE  3001               	movlw	1
  4065  0FAF  00AC               	movwf	??___aldiv
  4066  0FB0                     u2605:	
  4067  0FB0  1003               	clrc
  4068  0FB1  0DAF               	rlf	___aldiv@quotient,f
  4069  0FB2  0DB0               	rlf	___aldiv@quotient+1,f
  4070  0FB3  0DB1               	rlf	___aldiv@quotient+2,f
  4071  0FB4  0DB2               	rlf	___aldiv@quotient+3,f
  4072  0FB5  0BAC               	decfsz	??___aldiv,f
  4073  0FB6  2FB0               	goto	u2605
  4074  0FB7                     l3193:	
  4075  0FB7  0827               	movf	___aldiv@divisor+3,w
  4076  0FB8  022B               	subwf	___aldiv@dividend+3,w
  4077  0FB9  1D03               	skipz
  4078  0FBA  2FC5               	goto	u2615
  4079  0FBB  0826               	movf	___aldiv@divisor+2,w
  4080  0FBC  022A               	subwf	___aldiv@dividend+2,w
  4081  0FBD  1D03               	skipz
  4082  0FBE  2FC5               	goto	u2615
  4083  0FBF  0825               	movf	___aldiv@divisor+1,w
  4084  0FC0  0229               	subwf	___aldiv@dividend+1,w
  4085  0FC1  1D03               	skipz
  4086  0FC2  2FC5               	goto	u2615
  4087  0FC3  0824               	movf	___aldiv@divisor,w
  4088  0FC4  0228               	subwf	___aldiv@dividend,w
  4089  0FC5                     u2615:	
  4090  0FC5  1C03               	skipc
  4091  0FC6  2FC8               	goto	u2611
  4092  0FC7  2FC9               	goto	u2610
  4093  0FC8                     u2611:	
  4094  0FC8  2FD8               	goto	l3199
  4095  0FC9                     u2610:	
  4096  0FC9                     l3195:	
  4097  0FC9  0824               	movf	___aldiv@divisor,w
  4098  0FCA  02A8               	subwf	___aldiv@dividend,f
  4099  0FCB  0825               	movf	___aldiv@divisor+1,w
  4100  0FCC  1C03               	skipc
  4101  0FCD  0F25               	incfsz	___aldiv@divisor+1,w
  4102  0FCE  02A9               	subwf	___aldiv@dividend+1,f
  4103  0FCF  0826               	movf	___aldiv@divisor+2,w
  4104  0FD0  1C03               	skipc
  4105  0FD1  0F26               	incfsz	___aldiv@divisor+2,w
  4106  0FD2  02AA               	subwf	___aldiv@dividend+2,f
  4107  0FD3  0827               	movf	___aldiv@divisor+3,w
  4108  0FD4  1C03               	skipc
  4109  0FD5  0F27               	incfsz	___aldiv@divisor+3,w
  4110  0FD6  02AB               	subwf	___aldiv@dividend+3,f
  4111  0FD7                     l3197:	
  4112  0FD7  142F               	bsf	___aldiv@quotient,0
  4113  0FD8                     l3199:	
  4114  0FD8  3001               	movlw	1
  4115  0FD9                     u2625:	
  4116  0FD9  1003               	clrc
  4117  0FDA  0CA7               	rrf	___aldiv@divisor+3,f
  4118  0FDB  0CA6               	rrf	___aldiv@divisor+2,f
  4119  0FDC  0CA5               	rrf	___aldiv@divisor+1,f
  4120  0FDD  0CA4               	rrf	___aldiv@divisor,f
  4121  0FDE  3EFF               	addlw	-1
  4122  0FDF  1D03               	skipz
  4123  0FE0  2FD9               	goto	u2625
  4124  0FE1                     l3201:	
  4125  0FE1  3001               	movlw	1
  4126  0FE2  02AD               	subwf	___aldiv@counter,f
  4127  0FE3  1D03               	btfss	3,2
  4128  0FE4  2FE6               	goto	u2631
  4129  0FE5  2FE7               	goto	u2630
  4130  0FE6                     u2631:	
  4131  0FE6  2FAE               	goto	l3191
  4132  0FE7                     u2630:	
  4133  0FE7                     l3203:	
  4134  0FE7  082E               	movf	___aldiv@sign,w
  4135  0FE8  1903               	btfsc	3,2
  4136  0FE9  2FEB               	goto	u2641
  4137  0FEA  2FEC               	goto	u2640
  4138  0FEB                     u2641:	
  4139  0FEB  2FF7               	goto	l3207
  4140  0FEC                     u2640:	
  4141  0FEC                     l3205:	
  4142  0FEC  09AF               	comf	___aldiv@quotient,f
  4143  0FED  09B0               	comf	___aldiv@quotient+1,f
  4144  0FEE  09B1               	comf	___aldiv@quotient+2,f
  4145  0FEF  09B2               	comf	___aldiv@quotient+3,f
  4146  0FF0  0AAF               	incf	___aldiv@quotient,f
  4147  0FF1  1903               	skipnz
  4148  0FF2  0AB0               	incf	___aldiv@quotient+1,f
  4149  0FF3  1903               	skipnz
  4150  0FF4  0AB1               	incf	___aldiv@quotient+2,f
  4151  0FF5  1903               	skipnz
  4152  0FF6  0AB2               	incf	___aldiv@quotient+3,f
  4153  0FF7                     l3207:	
  4154  0FF7  0832               	movf	___aldiv@quotient+3,w
  4155  0FF8  00A7               	movwf	?___aldiv+3
  4156  0FF9  0831               	movf	___aldiv@quotient+2,w
  4157  0FFA  00A6               	movwf	?___aldiv+2
  4158  0FFB  0830               	movf	___aldiv@quotient+1,w
  4159  0FFC  00A5               	movwf	?___aldiv+1
  4160  0FFD  082F               	movf	___aldiv@quotient,w
  4161  0FFE  00A4               	movwf	?___aldiv
  4162  0FFF                     l514:	
  4163  0FFF  0008               	return
  4164  1000                     __end_of___aldiv:	
  4165                           
  4166                           	psect	text13
  4167  06D2                     __ptext13:	
  4168 ;; *************** function _ShowDigitsOnDisplay *****************
  4169 ;; Defined at:
  4170 ;;		line 501 in file "main.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  display_inde    1   13[BANK0 ] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         0       0       0       0       0
  4185 ;;      Locals:         0       1       0       0       0
  4186 ;;      Temps:          0       2       0       0       0
  4187 ;;      Totals:         0       3       0       0       0
  4188 ;;Total ram usage:        3 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    4
  4191 ;; This function calls:
  4192 ;;		_SetDisplay
  4193 ;;		___awmod
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _ShowDigitsOnDisplay
  4201  06D2                     _ShowDigitsOnDisplay:	
  4202  06D2                     l3473:	
  4203                           ;incstack = 0
  4204                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4205                           
  4206                           
  4207                           ;main.c: 503:     for (unsigned char display_index = 0; display_index < n_semafori; disp
      +                          lay_index++)
  4208  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  4209  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  4210  06D4  01AD               	clrf	ShowDigitsOnDisplay@display_index
  4211  06D5  2F49               	goto	l3493
  4212  06D6                     l3479:	
  4213                           
  4214                           ;main.c: 508:             if ((*DigitsArr[display_index]).centinaia > 0)
  4215  06D6  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4216  06D7  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4217  06D8  0084               	movwf	4
  4218  06D9  1383               	bcf	3,7	;select IRP bank0
  4219  06DA  0800               	movf	0,w
  4220  06DB  0084               	movwf	4
  4221  06DC  0800               	movf	0,w
  4222  06DD  1903               	btfsc	3,2
  4223  06DE  2EE0               	goto	u2971
  4224  06DF  2EE1               	goto	u2970
  4225  06E0                     u2971:	
  4226  06E0  2F5C               	goto	l3495
  4227  06E1                     u2970:	
  4228  06E1                     l3481:	
  4229                           
  4230                           ;main.c: 509:             {;main.c: 510:                 SetDisplay(display_index, 1, 0,
      +                           0, display[(*DigitsArr[display_index]).centinaia]);
  4231  06E1  01A4               	clrf	SetDisplay@d1
  4232  06E2  0AA4               	incf	SetDisplay@d1,f
  4233  06E3  01A5               	clrf	SetDisplay@d2
  4234  06E4  01A6               	clrf	SetDisplay@d3
  4235  06E5  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4236  06E6  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4237  06E7  0084               	movwf	4
  4238  06E8  0800               	movf	0,w
  4239  06E9  0084               	movwf	4
  4240  06EA  0800               	movf	0,w
  4241  06EB  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4242  06EC  0084               	movwf	4
  4243  06ED  120A  158A  2000  120A  118A  	fcall	stringdir
  4244  06F2  00AB               	movwf	??_ShowDigitsOnDisplay
  4245  06F3  082B               	movf	??_ShowDigitsOnDisplay,w
  4246  06F4  00A7               	movwf	SetDisplay@value
  4247  06F5  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4248  06F6  120A  158A  252D  120A  118A  	fcall	_SetDisplay
  4249  06FB  2F5C               	goto	l3495
  4250  06FC                     l3483:	
  4251                           
  4252                           ;main.c: 514:             if ((*DigitsArr[display_index]).decine > 0 || (*DigitsArr[disp
      +                          lay_index]).centinaia > 0)
  4253  06FC  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4254  06FD  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4255  06FE  0084               	movwf	4
  4256  06FF  1383               	bcf	3,7	;select IRP bank0
  4257  0700  0A00               	incf	0,w
  4258  0701  0084               	movwf	4
  4259  0702  0800               	movf	0,w
  4260  0703  1D03               	btfss	3,2
  4261  0704  2F06               	goto	u2981
  4262  0705  2F07               	goto	u2980
  4263  0706                     u2981:	
  4264  0706  2F11               	goto	l3487
  4265  0707                     u2980:	
  4266  0707                     l3485:	
  4267  0707  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4268  0708  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4269  0709  0084               	movwf	4
  4270  070A  0800               	movf	0,w
  4271  070B  0084               	movwf	4
  4272  070C  0800               	movf	0,w
  4273  070D  1903               	btfsc	3,2
  4274  070E  2F10               	goto	u2991
  4275  070F  2F11               	goto	u2990
  4276  0710                     u2991:	
  4277  0710  2F5C               	goto	l3495
  4278  0711                     u2990:	
  4279  0711                     l3487:	
  4280                           
  4281                           ;main.c: 515:             {;main.c: 516:                 SetDisplay(display_index, 0, 1,
      +                           0, display[(*DigitsArr[display_index]).decine]);
  4282  0711  01A4               	clrf	SetDisplay@d1
  4283  0712  01A5               	clrf	SetDisplay@d2
  4284  0713  0AA5               	incf	SetDisplay@d2,f
  4285  0714  01A6               	clrf	SetDisplay@d3
  4286  0715  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4287  0716  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4288  0717  0084               	movwf	4
  4289  0718  0A00               	incf	0,w
  4290  0719  0084               	movwf	4
  4291  071A  0800               	movf	0,w
  4292  071B  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4293  071C  0084               	movwf	4
  4294  071D  120A  158A  2000  120A  118A  	fcall	stringdir
  4295  0722  00AB               	movwf	??_ShowDigitsOnDisplay
  4296  0723  082B               	movf	??_ShowDigitsOnDisplay,w
  4297  0724  00A7               	movwf	SetDisplay@value
  4298  0725  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4299  0726  120A  158A  252D  120A  118A  	fcall	_SetDisplay
  4300  072B  2F5C               	goto	l3495
  4301  072C                     l3489:	
  4302                           
  4303                           ;main.c: 520:             SetDisplay(display_index, 0, 0, 1, display[(*DigitsArr[display
      +                          _index]).unita]);
  4304  072C  01A4               	clrf	SetDisplay@d1
  4305  072D  01A5               	clrf	SetDisplay@d2
  4306  072E  01A6               	clrf	SetDisplay@d3
  4307  072F  0AA6               	incf	SetDisplay@d3,f
  4308  0730  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4309  0731  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4310  0732  0084               	movwf	4
  4311  0733  1383               	bcf	3,7	;select IRP bank0
  4312  0734  0800               	movf	0,w
  4313  0735  3E02               	addlw	2
  4314  0736  0084               	movwf	4
  4315  0737  0800               	movf	0,w
  4316  0738  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4317  0739  0084               	movwf	4
  4318  073A  120A  158A  2000  120A  118A  	fcall	stringdir
  4319  073F  00AB               	movwf	??_ShowDigitsOnDisplay
  4320  0740  082B               	movf	??_ShowDigitsOnDisplay,w
  4321  0741  00A7               	movwf	SetDisplay@value
  4322  0742  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4323  0743  120A  158A  252D  120A  118A  	fcall	_SetDisplay
  4324                           
  4325                           ;main.c: 521:             break;
  4326  0748  2F5C               	goto	l3495
  4327  0749                     l3493:	
  4328  0749  0855               	movf	_disp,w
  4329  074A  00AB               	movwf	??_ShowDigitsOnDisplay
  4330  074B  01AC               	clrf	??_ShowDigitsOnDisplay+1
  4331                           
  4332                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4333                           ; Switch size 1, requested type "simple"
  4334                           ; Number of cases is 1, Range of values is 0 to 0
  4335                           ; switch strategies available:
  4336                           ; Name         Instructions Cycles
  4337                           ; simple_byte            4     3 (average)
  4338                           ; direct_byte           11     8 (fixed)
  4339                           ; jumptable            260     6 (fixed)
  4340                           ;	Chosen strategy is simple_byte
  4341  074C  082C               	movf	??_ShowDigitsOnDisplay+1,w
  4342  074D  3A00               	xorlw	0	; case 0
  4343  074E  1903               	skipnz
  4344  074F  2F51               	goto	l3951
  4345  0750  2F5C               	goto	l3495
  4346  0751                     l3951:	
  4347                           
  4348                           ; Switch size 1, requested type "simple"
  4349                           ; Number of cases is 3, Range of values is 0 to 2
  4350                           ; switch strategies available:
  4351                           ; Name         Instructions Cycles
  4352                           ; simple_byte           10     6 (average)
  4353                           ; direct_byte           17     8 (fixed)
  4354                           ; jumptable            260     6 (fixed)
  4355                           ;	Chosen strategy is simple_byte
  4356  0751  082B               	movf	??_ShowDigitsOnDisplay,w
  4357  0752  3A00               	xorlw	0	; case 0
  4358  0753  1903               	skipnz
  4359  0754  2ED6               	goto	l3479
  4360  0755  3A01               	xorlw	1	; case 1
  4361  0756  1903               	skipnz
  4362  0757  2EFC               	goto	l3483
  4363  0758  3A03               	xorlw	3	; case 2
  4364  0759  1903               	skipnz
  4365  075A  2F2C               	goto	l3489
  4366  075B  2F5C               	goto	l3495
  4367  075C                     l3495:	
  4368                           
  4369                           ;main.c: 523:     }
  4370  075C  3001               	movlw	1
  4371  075D  1283               	bcf	3,5	;RP0=0, select bank0
  4372  075E  1303               	bcf	3,6	;RP1=0, select bank0
  4373  075F  00AB               	movwf	??_ShowDigitsOnDisplay
  4374  0760  082B               	movf	??_ShowDigitsOnDisplay,w
  4375  0761  07AD               	addwf	ShowDigitsOnDisplay@display_index,f
  4376  0762                     l3497:	
  4377  0762  3002               	movlw	2
  4378  0763  022D               	subwf	ShowDigitsOnDisplay@display_index,w
  4379  0764  1C03               	skipc
  4380  0765  2F67               	goto	u3001
  4381  0766  2F68               	goto	u3000
  4382  0767                     u3001:	
  4383  0767  2F49               	goto	l3493
  4384  0768                     u3000:	
  4385  0768                     l3499:	
  4386                           
  4387                           ;main.c: 524:     disp = (disp + 1) % 3;
  4388  0768  3003               	movlw	3
  4389  0769  00A4               	movwf	___awmod@divisor
  4390  076A  3000               	movlw	0
  4391  076B  00A5               	movwf	___awmod@divisor+1
  4392  076C  0855               	movf	_disp,w
  4393  076D  3E01               	addlw	1
  4394  076E  00A6               	movwf	___awmod@dividend
  4395  076F  3000               	movlw	0
  4396  0770  1803               	skipnc
  4397  0771  3001               	movlw	1
  4398  0772  00A7               	movwf	___awmod@dividend+1
  4399  0773  120A  158A  25DA  120A  118A  	fcall	___awmod
  4400  0778  1283               	bcf	3,5	;RP0=0, select bank0
  4401  0779  1303               	bcf	3,6	;RP1=0, select bank0
  4402  077A  0824               	movf	?___awmod,w
  4403  077B  00AB               	movwf	??_ShowDigitsOnDisplay
  4404  077C  082B               	movf	??_ShowDigitsOnDisplay,w
  4405  077D  00D5               	movwf	_disp
  4406  077E                     l343:	
  4407  077E  0008               	return
  4408  077F                     __end_of_ShowDigitsOnDisplay:	
  4409                           
  4410                           	psect	text14
  4411  0D2D                     __ptext14:	
  4412 ;; *************** function _SetDisplay *****************
  4413 ;; Defined at:
  4414 ;;		line 476 in file "main.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  display_inde    1    wreg     unsigned char 
  4417 ;;  d1              1    4[BANK0 ] unsigned char 
  4418 ;;  d2              1    5[BANK0 ] unsigned char 
  4419 ;;  d3              1    6[BANK0 ] unsigned char 
  4420 ;;  value           1    7[BANK0 ] unsigned char 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  display_inde    1   10[BANK0 ] unsigned char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      void 
  4425 ;; Registers used:
  4426 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4432 ;;      Params:         0       4       0       0       0
  4433 ;;      Locals:         0       1       0       0       0
  4434 ;;      Temps:          0       2       0       0       0
  4435 ;;      Totals:         0       7       0       0       0
  4436 ;;Total ram usage:        7 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    3
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_ShowDigitsOnDisplay
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _SetDisplay
  4448  0D2D                     _SetDisplay:	
  4449                           
  4450                           ;incstack = 0
  4451                           ; Regs used in _SetDisplay: [wreg-fsr0h+status,2+status,0]
  4452                           ;SetDisplay@display_index stored from wreg
  4453  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  4454  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  4455  0D2F  00AA               	movwf	SetDisplay@display_index
  4456  0D30                     l3111:	
  4457                           
  4458                           ;main.c: 476: void SetDisplay(unsigned char display_index, char d1, char d2, char d3, ch
      +                          ar value);main.c: 477: {;main.c: 478:     switch (display_index)
  4459  0D30  2D71               	goto	l3121
  4460  0D31                     l3113:	
  4461                           
  4462                           ;main.c: 481:         PORTAbits.RA2 = d1;
  4463  0D31  0C24               	rrf	SetDisplay@d1,w
  4464  0D32  1C03               	skipc
  4465  0D33  1105               	bcf	5,2	;volatile
  4466  0D34  1803               	skipnc
  4467  0D35  1505               	bsf	5,2	;volatile
  4468                           
  4469                           ;main.c: 482:         PORTAbits.RA3 = d2;
  4470  0D36  0C25               	rrf	SetDisplay@d2,w
  4471  0D37  1C03               	skipc
  4472  0D38  1185               	bcf	5,3	;volatile
  4473  0D39  1803               	skipnc
  4474  0D3A  1585               	bsf	5,3	;volatile
  4475                           
  4476                           ;main.c: 483:         PORTAbits.RA4 = d3;
  4477  0D3B  0C26               	rrf	SetDisplay@d3,w
  4478  0D3C  1C03               	skipc
  4479  0D3D  1205               	bcf	5,4	;volatile
  4480  0D3E  1803               	skipnc
  4481  0D3F  1605               	bsf	5,4	;volatile
  4482                           
  4483                           ;main.c: 484:         PORTBbits.RB0 = d1;
  4484  0D40  0C24               	rrf	SetDisplay@d1,w
  4485  0D41  1C03               	skipc
  4486  0D42  1006               	bcf	6,0	;volatile
  4487  0D43  1803               	skipnc
  4488  0D44  1406               	bsf	6,0	;volatile
  4489                           
  4490                           ;main.c: 485:         PORTBbits.RB0 = d2;
  4491  0D45  0C25               	rrf	SetDisplay@d2,w
  4492  0D46  1C03               	skipc
  4493  0D47  1006               	bcf	6,0	;volatile
  4494  0D48  1803               	skipnc
  4495  0D49  1406               	bsf	6,0	;volatile
  4496                           
  4497                           ;main.c: 486:         PORTBbits.RB0 = d3;
  4498  0D4A  0C26               	rrf	SetDisplay@d3,w
  4499  0D4B  1C03               	skipc
  4500  0D4C  1006               	bcf	6,0	;volatile
  4501  0D4D  1803               	skipnc
  4502  0D4E  1406               	bsf	6,0	;volatile
  4503  0D4F                     l3115:	
  4504                           
  4505                           ;main.c: 487:         PORTD = value;
  4506  0D4F  0827               	movf	SetDisplay@value,w
  4507  0D50  0088               	movwf	8	;volatile
  4508                           
  4509                           ;main.c: 488:         break;
  4510  0D51  2D81               	goto	l329
  4511  0D52                     l3117:	
  4512                           
  4513                           ;main.c: 490:         PORTAbits.RA5 = d1;
  4514  0D52  0C24               	rrf	SetDisplay@d1,w
  4515  0D53  1C03               	skipc
  4516  0D54  1285               	bcf	5,5	;volatile
  4517  0D55  1803               	skipnc
  4518  0D56  1685               	bsf	5,5	;volatile
  4519                           
  4520                           ;main.c: 491:         PORTBbits.RB0 = d2;
  4521  0D57  0C25               	rrf	SetDisplay@d2,w
  4522  0D58  1C03               	skipc
  4523  0D59  1006               	bcf	6,0	;volatile
  4524  0D5A  1803               	skipnc
  4525  0D5B  1406               	bsf	6,0	;volatile
  4526                           
  4527                           ;main.c: 492:         PORTBbits.RB0 = d3;
  4528  0D5C  0C26               	rrf	SetDisplay@d3,w
  4529  0D5D  1C03               	skipc
  4530  0D5E  1006               	bcf	6,0	;volatile
  4531  0D5F  1803               	skipnc
  4532  0D60  1406               	bsf	6,0	;volatile
  4533                           
  4534                           ;main.c: 493:         PORTBbits.RB0 = d1;
  4535  0D61  0C24               	rrf	SetDisplay@d1,w
  4536  0D62  1C03               	skipc
  4537  0D63  1006               	bcf	6,0	;volatile
  4538  0D64  1803               	skipnc
  4539  0D65  1406               	bsf	6,0	;volatile
  4540                           
  4541                           ;main.c: 494:         PORTBbits.RB0 = d2;
  4542  0D66  0C25               	rrf	SetDisplay@d2,w
  4543  0D67  1C03               	skipc
  4544  0D68  1006               	bcf	6,0	;volatile
  4545  0D69  1803               	skipnc
  4546  0D6A  1406               	bsf	6,0	;volatile
  4547                           
  4548                           ;main.c: 495:         PORTBbits.RB0 = d3;
  4549  0D6B  0C26               	rrf	SetDisplay@d3,w
  4550  0D6C  1C03               	skipc
  4551  0D6D  1006               	bcf	6,0	;volatile
  4552  0D6E  1803               	skipnc
  4553  0D6F  1406               	bsf	6,0	;volatile
  4554                           
  4555                           ;main.c: 497:         break;
  4556  0D70  2D81               	goto	l329
  4557  0D71                     l3121:	
  4558  0D71  082A               	movf	SetDisplay@display_index,w
  4559  0D72  00A8               	movwf	??_SetDisplay
  4560  0D73  01A9               	clrf	??_SetDisplay+1
  4561                           
  4562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4563                           ; Switch size 1, requested type "simple"
  4564                           ; Number of cases is 1, Range of values is 0 to 0
  4565                           ; switch strategies available:
  4566                           ; Name         Instructions Cycles
  4567                           ; simple_byte            4     3 (average)
  4568                           ; direct_byte           11     8 (fixed)
  4569                           ; jumptable            260     6 (fixed)
  4570                           ;	Chosen strategy is simple_byte
  4571  0D74  0829               	movf	??_SetDisplay+1,w
  4572  0D75  3A00               	xorlw	0	; case 0
  4573  0D76  1903               	skipnz
  4574  0D77  2D79               	goto	l3953
  4575  0D78  2D81               	goto	l329
  4576  0D79                     l3953:	
  4577                           
  4578                           ; Switch size 1, requested type "simple"
  4579                           ; Number of cases is 2, Range of values is 0 to 1
  4580                           ; switch strategies available:
  4581                           ; Name         Instructions Cycles
  4582                           ; simple_byte            7     4 (average)
  4583                           ; direct_byte           14     8 (fixed)
  4584                           ; jumptable            260     6 (fixed)
  4585                           ;	Chosen strategy is simple_byte
  4586  0D79  0828               	movf	??_SetDisplay,w
  4587  0D7A  3A00               	xorlw	0	; case 0
  4588  0D7B  1903               	skipnz
  4589  0D7C  2D31               	goto	l3113
  4590  0D7D  3A01               	xorlw	1	; case 1
  4591  0D7E  1903               	skipnz
  4592  0D7F  2D52               	goto	l3117
  4593  0D80  2D81               	goto	l329
  4594  0D81                     l329:	
  4595  0D81  0008               	return
  4596  0D82                     __end_of_SetDisplay:	
  4597                           
  4598                           	psect	text15
  4599  0E35                     __ptext15:	
  4600 ;; *************** function _SetReceivedTimes *****************
  4601 ;; Defined at:
  4602 ;;		line 86 in file "./CustomLib/TrafficLight.h"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4605 ;;		 -> dataFromGateway(15), 
  4606 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4607 ;;		 -> Semafori(2), 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  _dataFromGat    1   19[BANK0 ] PTR unsigned char 
  4610 ;;		 -> dataFromGateway(15), 
  4611 ;;  index           1   20[BANK0 ] unsigned char 
  4612 ;;  colorId         1   18[BANK0 ] unsigned char 
  4613 ;;  semaforoId      1   17[BANK0 ] unsigned char 
  4614 ;;  i               1   21[BANK0 ] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4624 ;;      Params:         0       1       0       0       0
  4625 ;;      Locals:         0       5       0       0       0
  4626 ;;      Temps:          0       4       0       0       0
  4627 ;;      Totals:         0      10       0       0       0
  4628 ;;Total ram usage:       10 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    4
  4631 ;; This function calls:
  4632 ;;		_GetTime
  4633 ;;		___bmul
  4634 ;; This function is called by:
  4635 ;;		_main
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           
  4640                           ;psect for function _SetReceivedTimes
  4641  0E35                     _SetReceivedTimes:	
  4642                           
  4643                           ;incstack = 0
  4644                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4645                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4646  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  4647  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  4648  0E37  00B3               	movwf	SetReceivedTimes@_dataFromGateway
  4649  0E38                     l3355:	
  4650                           
  4651                           ;./CustomLib/TrafficLight.h: 86: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 87: {;./CustomLib/TrafficLight.h: 88:   
      +                            for (unsigned char i = 0; i < 3; i++)
  4652  0E38  01B5               	clrf	SetReceivedTimes@i
  4653  0E39                     l3357:	
  4654  0E39  3003               	movlw	3
  4655  0E3A  0235               	subwf	SetReceivedTimes@i,w
  4656  0E3B  1C03               	skipc
  4657  0E3C  2E3E               	goto	u2891
  4658  0E3D  2E3F               	goto	u2890
  4659  0E3E                     u2891:	
  4660  0E3E  2E40               	goto	l3361
  4661  0E3F                     u2890:	
  4662  0E3F  2E94               	goto	l154
  4663  0E40                     l3361:	
  4664                           
  4665                           ;./CustomLib/TrafficLight.h: 89:     {;./CustomLib/TrafficLight.h: 90:         unsigned 
      +                          char index = i * 5;
  4666  0E40  3005               	movlw	5
  4667  0E41  00AD               	movwf	??_SetReceivedTimes
  4668  0E42  082D               	movf	??_SetReceivedTimes,w
  4669  0E43  00A4               	movwf	___bmul@multiplicand
  4670  0E44  0835               	movf	SetReceivedTimes@i,w
  4671  0E45  120A  158A  22B5  120A  158A  	fcall	___bmul
  4672  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0E4C  00AE               	movwf	??_SetReceivedTimes+1
  4675  0E4D  082E               	movf	??_SetReceivedTimes+1,w
  4676  0E4E  00B4               	movwf	SetReceivedTimes@index
  4677  0E4F                     l3363:	
  4678                           
  4679                           ;./CustomLib/TrafficLight.h: 91:         unsigned char semaforoId = (_dataFromGateway[in
      +                          dex] >> 1) & 0x0F;
  4680  0E4F  0834               	movf	SetReceivedTimes@index,w
  4681  0E50  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4682  0E51  00AD               	movwf	??_SetReceivedTimes
  4683  0E52  082D               	movf	??_SetReceivedTimes,w
  4684  0E53  0084               	movwf	4
  4685  0E54  1383               	bcf	3,7	;select IRP bank0
  4686  0E55  0800               	movf	0,w
  4687  0E56  00AE               	movwf	??_SetReceivedTimes+1
  4688  0E57  1003               	clrc
  4689  0E58  0C2E               	rrf	??_SetReceivedTimes+1,w
  4690  0E59  390F               	andlw	15
  4691  0E5A  00AF               	movwf	??_SetReceivedTimes+2
  4692  0E5B  082F               	movf	??_SetReceivedTimes+2,w
  4693  0E5C  00B1               	movwf	SetReceivedTimes@semaforoId
  4694  0E5D                     l3365:	
  4695                           
  4696                           ;./CustomLib/TrafficLight.h: 92:         unsigned char colorId = ((_dataFromGateway[inde
      +                          x] >> 5) & 0x03) - 1;
  4697  0E5D  0834               	movf	SetReceivedTimes@index,w
  4698  0E5E  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4699  0E5F  00AD               	movwf	??_SetReceivedTimes
  4700  0E60  082D               	movf	??_SetReceivedTimes,w
  4701  0E61  0084               	movwf	4
  4702  0E62  0800               	movf	0,w
  4703  0E63  00AE               	movwf	??_SetReceivedTimes+1
  4704  0E64  3005               	movlw	5
  4705  0E65                     u2905:	
  4706  0E65  1003               	clrc
  4707  0E66  0CAE               	rrf	??_SetReceivedTimes+1,f
  4708  0E67  3EFF               	addlw	-1
  4709  0E68  1D03               	skipz
  4710  0E69  2E65               	goto	u2905
  4711  0E6A  082E               	movf	??_SetReceivedTimes+1,w
  4712  0E6B  3903               	andlw	3
  4713  0E6C  3EFF               	addlw	255
  4714  0E6D  00AF               	movwf	??_SetReceivedTimes+2
  4715  0E6E  082F               	movf	??_SetReceivedTimes+2,w
  4716  0E6F  00B2               	movwf	SetReceivedTimes@colorId
  4717  0E70                     l3367:	
  4718                           
  4719                           ;./CustomLib/TrafficLight.h: 94:         (*(_semafori)[semaforoId]).new_times[colorId] =
      +                           GetTime(index, _dataFromGateway);
  4720  0E70  0833               	movf	SetReceivedTimes@_dataFromGateway,w
  4721  0E71  00AD               	movwf	??_SetReceivedTimes
  4722  0E72  082D               	movf	??_SetReceivedTimes,w
  4723  0E73  00A4               	movwf	GetTime@_dataFromGateway
  4724  0E74  0834               	movf	SetReceivedTimes@index,w
  4725  0E75  120A  158A  23B9  120A  158A  	fcall	_GetTime
  4726  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  4727  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  4728  0E7C  0831               	movf	SetReceivedTimes@semaforoId,w
  4729  0E7D  072C               	addwf	SetReceivedTimes@_semafori,w
  4730  0E7E  00AE               	movwf	??_SetReceivedTimes+1
  4731  0E7F  082E               	movf	??_SetReceivedTimes+1,w
  4732  0E80  0084               	movwf	4
  4733  0E81  0832               	movf	SetReceivedTimes@colorId,w
  4734  0E82  00AF               	movwf	??_SetReceivedTimes+2
  4735  0E83  072F               	addwf	??_SetReceivedTimes+2,w
  4736  0E84  1383               	bcf	3,7	;select IRP bank0
  4737  0E85  0700               	addwf	0,w
  4738  0E86  00B0               	movwf	??_SetReceivedTimes+3
  4739  0E87  0830               	movf	??_SetReceivedTimes+3,w
  4740  0E88  3E06               	addlw	6
  4741  0E89  0084               	movwf	4
  4742  0E8A  0824               	movf	?_GetTime,w
  4743  0E8B  0080               	movwf	0
  4744  0E8C  0A84               	incf	4,f
  4745  0E8D  0825               	movf	?_GetTime+1,w
  4746  0E8E  0080               	movwf	0
  4747  0E8F                     l3369:	
  4748                           
  4749                           ;./CustomLib/TrafficLight.h: 95:     }
  4750  0E8F  3001               	movlw	1
  4751  0E90  00AD               	movwf	??_SetReceivedTimes
  4752  0E91  082D               	movf	??_SetReceivedTimes,w
  4753  0E92  07B5               	addwf	SetReceivedTimes@i,f
  4754  0E93  2E39               	goto	l3357
  4755  0E94                     l154:	
  4756  0E94  0008               	return
  4757  0E95                     __end_of_SetReceivedTimes:	
  4758                           
  4759                           	psect	text16
  4760  0BB9                     __ptext16:	
  4761 ;; *************** function _GetTime *****************
  4762 ;; Defined at:
  4763 ;;		line 37 in file "./CustomLib/TrafficLight.h"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  index           1    wreg     unsigned char 
  4766 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4767 ;;		 -> dataFromGateway(15), 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  index           1    8[BANK0 ] unsigned char 
  4770 ;;  tmp             2   10[BANK0 ] int 
  4771 ;;  shortInt        1    9[BANK0 ] struct .
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  2    4[BANK0 ] int 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4781 ;;      Params:         0       2       0       0       0
  4782 ;;      Locals:         0       4       0       0       0
  4783 ;;      Temps:          0       2       0       0       0
  4784 ;;      Totals:         0       8       0       0       0
  4785 ;;Total ram usage:        8 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    3
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_SetReceivedTimes
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           
  4796                           ;psect for function _GetTime
  4797  0BB9                     _GetTime:	
  4798                           
  4799                           ;incstack = 0
  4800                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4801                           ;GetTime@index stored from wreg
  4802  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  4803  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  4804  0BBB  00A8               	movwf	GetTime@index
  4805  0BBC                     l3093:	
  4806                           
  4807                           ;./CustomLib/TrafficLight.h: 37: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 38: {;./CustomLib/TrafficLight.h: 39:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 43:     } shortInt;;./CustomLib/TrafficLight.h: 45:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4808  0BBC  0828               	movf	GetTime@index,w
  4809  0BBD  0724               	addwf	GetTime@_dataFromGateway,w
  4810  0BBE  00A6               	movwf	??_GetTime
  4811  0BBF  0826               	movf	??_GetTime,w
  4812  0BC0  3E03               	addlw	3
  4813  0BC1  0084               	movwf	4
  4814  0BC2  307F               	movlw	127
  4815  0BC3  1383               	bcf	3,7	;select IRP bank0
  4816  0BC4  0500               	andwf	0,w
  4817  0BC5  00A7               	movwf	??_GetTime+1
  4818  0BC6  0829               	movf	GetTime@shortInt,w
  4819  0BC7  0627               	xorwf	??_GetTime+1,w
  4820  0BC8  3980               	andlw	-128
  4821  0BC9  0627               	xorwf	??_GetTime+1,w
  4822  0BCA  00A9               	movwf	GetTime@shortInt
  4823  0BCB                     l3095:	
  4824                           
  4825                           ;./CustomLib/TrafficLight.h: 46:     tmp = shortInt.Val;
  4826  0BCB  0829               	movf	GetTime@shortInt,w
  4827  0BCC  397F               	andlw	127
  4828  0BCD  00A6               	movwf	??_GetTime
  4829  0BCE  01A7               	clrf	??_GetTime+1
  4830  0BCF  0826               	movf	??_GetTime,w
  4831  0BD0  00AA               	movwf	GetTime@tmp
  4832  0BD1  0827               	movf	??_GetTime+1,w
  4833  0BD2  00AB               	movwf	GetTime@tmp+1
  4834  0BD3                     l3097:	
  4835                           
  4836                           ;./CustomLib/TrafficLight.h: 47:     tmp = (tmp << 7) & 0x80;
  4837  0BD3  082B               	movf	GetTime@tmp+1,w
  4838  0BD4  00A7               	movwf	??_GetTime+1
  4839  0BD5  082A               	movf	GetTime@tmp,w
  4840  0BD6  00A6               	movwf	??_GetTime
  4841  0BD7  3007               	movlw	7
  4842  0BD8  00FF               	movwf	btemp+1
  4843  0BD9                     u2425:	
  4844  0BD9  1003               	clrc
  4845  0BDA  0DA6               	rlf	??_GetTime,f
  4846  0BDB  0DA7               	rlf	??_GetTime+1,f
  4847  0BDC  0BFF               	decfsz	btemp+1,f
  4848  0BDD  2BD9               	goto	u2425
  4849  0BDE  3080               	movlw	128
  4850  0BDF  0526               	andwf	??_GetTime,w
  4851  0BE0  00AA               	movwf	GetTime@tmp
  4852  0BE1  3000               	movlw	0
  4853  0BE2  0527               	andwf	??_GetTime+1,w
  4854  0BE3  00AB               	movwf	GetTime@tmp+1
  4855  0BE4                     l3099:	
  4856                           
  4857                           ;./CustomLib/TrafficLight.h: 49:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4858  0BE4  0828               	movf	GetTime@index,w
  4859  0BE5  0724               	addwf	GetTime@_dataFromGateway,w
  4860  0BE6  00A6               	movwf	??_GetTime
  4861  0BE7  0826               	movf	??_GetTime,w
  4862  0BE8  3E02               	addlw	2
  4863  0BE9  0084               	movwf	4
  4864  0BEA  307F               	movlw	127
  4865  0BEB  0500               	andwf	0,w
  4866  0BEC  00A7               	movwf	??_GetTime+1
  4867  0BED  0829               	movf	GetTime@shortInt,w
  4868  0BEE  0627               	xorwf	??_GetTime+1,w
  4869  0BEF  3980               	andlw	-128
  4870  0BF0  0627               	xorwf	??_GetTime+1,w
  4871  0BF1  00A9               	movwf	GetTime@shortInt
  4872  0BF2                     l3101:	
  4873                           
  4874                           ;./CustomLib/TrafficLight.h: 50:     tmp = tmp | shortInt.Val;
  4875  0BF2  0829               	movf	GetTime@shortInt,w
  4876  0BF3  397F               	andlw	127
  4877  0BF4  00A6               	movwf	??_GetTime
  4878  0BF5  082A               	movf	GetTime@tmp,w
  4879  0BF6  0426               	iorwf	??_GetTime,w
  4880  0BF7  00AA               	movwf	GetTime@tmp
  4881  0BF8  082B               	movf	GetTime@tmp+1,w
  4882  0BF9  00AB               	movwf	GetTime@tmp+1
  4883  0BFA                     l3103:	
  4884                           
  4885                           ;./CustomLib/TrafficLight.h: 52:     return tmp;
  4886  0BFA  082B               	movf	GetTime@tmp+1,w
  4887  0BFB  00A5               	movwf	?_GetTime+1
  4888  0BFC  082A               	movf	GetTime@tmp,w
  4889  0BFD  00A4               	movwf	?_GetTime
  4890  0BFE                     l137:	
  4891  0BFE  0008               	return
  4892  0BFF                     __end_of_GetTime:	
  4893                           
  4894                           	psect	text17
  4895  061B                     __ptext17:	
  4896 ;; *************** function _SetDefaultTimers *****************
  4897 ;; Defined at:
  4898 ;;		line 56 in file "./CustomLib/TrafficLight.h"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  rosso           2    4[BANK0 ] int 
  4901 ;;  verde           2    6[BANK0 ] int 
  4902 ;;  giallo          2    8[BANK0 ] int 
  4903 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4904 ;;		 -> Semafori(2), 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  i               1   15[BANK0 ] unsigned char 
  4907 ;;  l               1   14[BANK0 ] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4917 ;;      Params:         0       7       0       0       0
  4918 ;;      Locals:         0       2       0       0       0
  4919 ;;      Temps:          0       3       0       0       0
  4920 ;;      Totals:         0      12       0       0       0
  4921 ;;Total ram usage:       12 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    3
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_main
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function _SetDefaultTimers
  4933  061B                     _SetDefaultTimers:	
  4934  061B                     l3319:	
  4935                           ;incstack = 0
  4936                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4937                           
  4938                           
  4939                           ;./CustomLib/TrafficLight.h: 56: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 57: {;./CustomLib/TrafficLight.h: 58: 
      +                              for (unsigned char l = 0; l < n_semafori; l++)
  4940  061B  1283               	bcf	3,5	;RP0=0, select bank0
  4941  061C  1303               	bcf	3,6	;RP1=0, select bank0
  4942  061D  01AE               	clrf	SetDefaultTimers@l
  4943  061E                     l3325:	
  4944                           
  4945                           ;./CustomLib/TrafficLight.h: 59:     {;./CustomLib/TrafficLight.h: 60:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4946  061E  01AF               	clrf	SetDefaultTimers@i
  4947  061F  2E8F               	goto	l3339
  4948  0620                     l3331:	
  4949                           
  4950                           ;./CustomLib/TrafficLight.h: 65:                 (*(_semafori)[l]).times[i] = rosso;
  4951  0620  082E               	movf	SetDefaultTimers@l,w
  4952  0621  072A               	addwf	SetDefaultTimers@_semafori,w
  4953  0622  00AB               	movwf	??_SetDefaultTimers
  4954  0623  082B               	movf	??_SetDefaultTimers,w
  4955  0624  0084               	movwf	4
  4956  0625  082F               	movf	SetDefaultTimers@i,w
  4957  0626  00AC               	movwf	??_SetDefaultTimers+1
  4958  0627  072C               	addwf	??_SetDefaultTimers+1,w
  4959  0628  1383               	bcf	3,7	;select IRP bank0
  4960  0629  0700               	addwf	0,w
  4961  062A  00AD               	movwf	??_SetDefaultTimers+2
  4962  062B  082D               	movf	??_SetDefaultTimers+2,w
  4963  062C  0084               	movwf	4
  4964  062D  0824               	movf	SetDefaultTimers@rosso,w
  4965  062E  0080               	movwf	0
  4966  062F  0A84               	incf	4,f
  4967  0630  0825               	movf	SetDefaultTimers@rosso+1,w
  4968  0631  0080               	movwf	0
  4969                           
  4970                           ;./CustomLib/TrafficLight.h: 66:                 (*(_semafori)[l]).new_times[i] = rosso;
  4971  0632  082E               	movf	SetDefaultTimers@l,w
  4972  0633  072A               	addwf	SetDefaultTimers@_semafori,w
  4973  0634  00AB               	movwf	??_SetDefaultTimers
  4974  0635  082B               	movf	??_SetDefaultTimers,w
  4975  0636  0084               	movwf	4
  4976  0637  082F               	movf	SetDefaultTimers@i,w
  4977  0638  00AC               	movwf	??_SetDefaultTimers+1
  4978  0639  072C               	addwf	??_SetDefaultTimers+1,w
  4979  063A  0700               	addwf	0,w
  4980  063B  00AD               	movwf	??_SetDefaultTimers+2
  4981  063C  082D               	movf	??_SetDefaultTimers+2,w
  4982  063D  3E06               	addlw	6
  4983  063E  0084               	movwf	4
  4984  063F  0824               	movf	SetDefaultTimers@rosso,w
  4985  0640  0080               	movwf	0
  4986  0641  0A84               	incf	4,f
  4987  0642  0825               	movf	SetDefaultTimers@rosso+1,w
  4988  0643  0080               	movwf	0
  4989                           
  4990                           ;./CustomLib/TrafficLight.h: 67:                 break;
  4991  0644  2EA2               	goto	l3341
  4992  0645                     l3333:	
  4993                           
  4994                           ;./CustomLib/TrafficLight.h: 69:                 (*(_semafori)[l]).times[i] = verde;
  4995  0645  082E               	movf	SetDefaultTimers@l,w
  4996  0646  072A               	addwf	SetDefaultTimers@_semafori,w
  4997  0647  00AB               	movwf	??_SetDefaultTimers
  4998  0648  082B               	movf	??_SetDefaultTimers,w
  4999  0649  0084               	movwf	4
  5000  064A  082F               	movf	SetDefaultTimers@i,w
  5001  064B  00AC               	movwf	??_SetDefaultTimers+1
  5002  064C  072C               	addwf	??_SetDefaultTimers+1,w
  5003  064D  1383               	bcf	3,7	;select IRP bank0
  5004  064E  0700               	addwf	0,w
  5005  064F  00AD               	movwf	??_SetDefaultTimers+2
  5006  0650  082D               	movf	??_SetDefaultTimers+2,w
  5007  0651  0084               	movwf	4
  5008  0652  0826               	movf	SetDefaultTimers@verde,w
  5009  0653  0080               	movwf	0
  5010  0654  0A84               	incf	4,f
  5011  0655  0827               	movf	SetDefaultTimers@verde+1,w
  5012  0656  0080               	movwf	0
  5013                           
  5014                           ;./CustomLib/TrafficLight.h: 70:                 (*(_semafori)[l]).new_times[i] = verde;
  5015  0657  082E               	movf	SetDefaultTimers@l,w
  5016  0658  072A               	addwf	SetDefaultTimers@_semafori,w
  5017  0659  00AB               	movwf	??_SetDefaultTimers
  5018  065A  082B               	movf	??_SetDefaultTimers,w
  5019  065B  0084               	movwf	4
  5020  065C  082F               	movf	SetDefaultTimers@i,w
  5021  065D  00AC               	movwf	??_SetDefaultTimers+1
  5022  065E  072C               	addwf	??_SetDefaultTimers+1,w
  5023  065F  0700               	addwf	0,w
  5024  0660  00AD               	movwf	??_SetDefaultTimers+2
  5025  0661  082D               	movf	??_SetDefaultTimers+2,w
  5026  0662  3E06               	addlw	6
  5027  0663  0084               	movwf	4
  5028  0664  0826               	movf	SetDefaultTimers@verde,w
  5029  0665  0080               	movwf	0
  5030  0666  0A84               	incf	4,f
  5031  0667  0827               	movf	SetDefaultTimers@verde+1,w
  5032  0668  0080               	movwf	0
  5033                           
  5034                           ;./CustomLib/TrafficLight.h: 71:                 break;
  5035  0669  2EA2               	goto	l3341
  5036  066A                     l3335:	
  5037                           
  5038                           ;./CustomLib/TrafficLight.h: 73:                 (*(_semafori)[l]).times[i] = giallo;
  5039  066A  082E               	movf	SetDefaultTimers@l,w
  5040  066B  072A               	addwf	SetDefaultTimers@_semafori,w
  5041  066C  00AB               	movwf	??_SetDefaultTimers
  5042  066D  082B               	movf	??_SetDefaultTimers,w
  5043  066E  0084               	movwf	4
  5044  066F  082F               	movf	SetDefaultTimers@i,w
  5045  0670  00AC               	movwf	??_SetDefaultTimers+1
  5046  0671  072C               	addwf	??_SetDefaultTimers+1,w
  5047  0672  1383               	bcf	3,7	;select IRP bank0
  5048  0673  0700               	addwf	0,w
  5049  0674  00AD               	movwf	??_SetDefaultTimers+2
  5050  0675  082D               	movf	??_SetDefaultTimers+2,w
  5051  0676  0084               	movwf	4
  5052  0677  0828               	movf	SetDefaultTimers@giallo,w
  5053  0678  0080               	movwf	0
  5054  0679  0A84               	incf	4,f
  5055  067A  0829               	movf	SetDefaultTimers@giallo+1,w
  5056  067B  0080               	movwf	0
  5057                           
  5058                           ;./CustomLib/TrafficLight.h: 74:                 (*(_semafori)[l]).new_times[i] = giallo
      +                          ;
  5059  067C  082E               	movf	SetDefaultTimers@l,w
  5060  067D  072A               	addwf	SetDefaultTimers@_semafori,w
  5061  067E  00AB               	movwf	??_SetDefaultTimers
  5062  067F  082B               	movf	??_SetDefaultTimers,w
  5063  0680  0084               	movwf	4
  5064  0681  082F               	movf	SetDefaultTimers@i,w
  5065  0682  00AC               	movwf	??_SetDefaultTimers+1
  5066  0683  072C               	addwf	??_SetDefaultTimers+1,w
  5067  0684  0700               	addwf	0,w
  5068  0685  00AD               	movwf	??_SetDefaultTimers+2
  5069  0686  082D               	movf	??_SetDefaultTimers+2,w
  5070  0687  3E06               	addlw	6
  5071  0688  0084               	movwf	4
  5072  0689  0828               	movf	SetDefaultTimers@giallo,w
  5073  068A  0080               	movwf	0
  5074  068B  0A84               	incf	4,f
  5075  068C  0829               	movf	SetDefaultTimers@giallo+1,w
  5076  068D  0080               	movwf	0
  5077                           
  5078                           ;./CustomLib/TrafficLight.h: 75:                 break;
  5079  068E  2EA2               	goto	l3341
  5080  068F                     l3339:	
  5081  068F  082F               	movf	SetDefaultTimers@i,w
  5082  0690  00AB               	movwf	??_SetDefaultTimers
  5083  0691  01AC               	clrf	??_SetDefaultTimers+1
  5084                           
  5085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5086                           ; Switch size 1, requested type "simple"
  5087                           ; Number of cases is 1, Range of values is 0 to 0
  5088                           ; switch strategies available:
  5089                           ; Name         Instructions Cycles
  5090                           ; simple_byte            4     3 (average)
  5091                           ; direct_byte           11     8 (fixed)
  5092                           ; jumptable            260     6 (fixed)
  5093                           ;	Chosen strategy is simple_byte
  5094  0692  082C               	movf	??_SetDefaultTimers+1,w
  5095  0693  3A00               	xorlw	0	; case 0
  5096  0694  1903               	skipnz
  5097  0695  2E97               	goto	l3955
  5098  0696  2EA2               	goto	l3341
  5099  0697                     l3955:	
  5100                           
  5101                           ; Switch size 1, requested type "simple"
  5102                           ; Number of cases is 3, Range of values is 0 to 2
  5103                           ; switch strategies available:
  5104                           ; Name         Instructions Cycles
  5105                           ; simple_byte           10     6 (average)
  5106                           ; direct_byte           17     8 (fixed)
  5107                           ; jumptable            260     6 (fixed)
  5108                           ;	Chosen strategy is simple_byte
  5109  0697  082B               	movf	??_SetDefaultTimers,w
  5110  0698  3A00               	xorlw	0	; case 0
  5111  0699  1903               	skipnz
  5112  069A  2E20               	goto	l3331
  5113  069B  3A01               	xorlw	1	; case 1
  5114  069C  1903               	skipnz
  5115  069D  2E45               	goto	l3333
  5116  069E  3A03               	xorlw	3	; case 2
  5117  069F  1903               	skipnz
  5118  06A0  2E6A               	goto	l3335
  5119  06A1  2EA2               	goto	l3341
  5120  06A2                     l3341:	
  5121                           
  5122                           ;./CustomLib/TrafficLight.h: 77:         }
  5123  06A2  3001               	movlw	1
  5124  06A3  00AB               	movwf	??_SetDefaultTimers
  5125  06A4  082B               	movf	??_SetDefaultTimers,w
  5126  06A5  07AF               	addwf	SetDefaultTimers@i,f
  5127  06A6                     l3343:	
  5128  06A6  3003               	movlw	3
  5129  06A7  022F               	subwf	SetDefaultTimers@i,w
  5130  06A8  1C03               	skipc
  5131  06A9  2EAB               	goto	u2871
  5132  06AA  2EAC               	goto	u2870
  5133  06AB                     u2871:	
  5134  06AB  2E8F               	goto	l3339
  5135  06AC                     u2870:	
  5136  06AC                     l3345:	
  5137                           
  5138                           ;./CustomLib/TrafficLight.h: 78:     }
  5139  06AC  3001               	movlw	1
  5140  06AD  00AB               	movwf	??_SetDefaultTimers
  5141  06AE  082B               	movf	??_SetDefaultTimers,w
  5142  06AF  07AE               	addwf	SetDefaultTimers@l,f
  5143  06B0                     l3347:	
  5144  06B0  3002               	movlw	2
  5145  06B1  022E               	subwf	SetDefaultTimers@l,w
  5146  06B2  1C03               	skipc
  5147  06B3  2EB5               	goto	u2881
  5148  06B4  2EB6               	goto	u2880
  5149  06B5                     u2881:	
  5150  06B5  2E1E               	goto	l3325
  5151  06B6                     u2880:	
  5152  06B6                     l3349:	
  5153                           
  5154                           ;./CustomLib/TrafficLight.h: 80:     (*(_semafori)[0]).lux_select = 0;
  5155  06B6  082A               	movf	SetDefaultTimers@_semafori,w
  5156  06B7  0084               	movwf	4
  5157  06B8  1383               	bcf	3,7	;select IRP bank0
  5158  06B9  0800               	movf	0,w
  5159  06BA  3E0C               	addlw	12
  5160  06BB  0084               	movwf	4
  5161  06BC  0180               	clrf	0
  5162                           
  5163                           ;./CustomLib/TrafficLight.h: 81:     (*(_semafori)[0]).new_lux_select = 0;
  5164  06BD  082A               	movf	SetDefaultTimers@_semafori,w
  5165  06BE  0084               	movwf	4
  5166  06BF  0800               	movf	0,w
  5167  06C0  3E0D               	addlw	13
  5168  06C1  0084               	movwf	4
  5169  06C2  0180               	clrf	0
  5170                           
  5171                           ;./CustomLib/TrafficLight.h: 82:     (*(_semafori)[1]).lux_select = 1;
  5172  06C3  0A2A               	incf	SetDefaultTimers@_semafori,w
  5173  06C4  0084               	movwf	4
  5174  06C5  0800               	movf	0,w
  5175  06C6  3E0C               	addlw	12
  5176  06C7  0084               	movwf	4
  5177  06C8  0180               	clrf	0
  5178  06C9  0A80               	incf	0,f
  5179                           
  5180                           ;./CustomLib/TrafficLight.h: 83:     (*(_semafori)[1]).new_lux_select = 1;
  5181  06CA  0A2A               	incf	SetDefaultTimers@_semafori,w
  5182  06CB  0084               	movwf	4
  5183  06CC  0800               	movf	0,w
  5184  06CD  3E0D               	addlw	13
  5185  06CE  0084               	movwf	4
  5186  06CF  0180               	clrf	0
  5187  06D0  0A80               	incf	0,f
  5188  06D1                     l149:	
  5189  06D1  0008               	return
  5190  06D2                     __end_of_SetDefaultTimers:	
  5191                           
  5192                           	psect	text18
  5193  0486                     __ptext18:	
  5194 ;; *************** function _GetDigits *****************
  5195 ;; Defined at:
  5196 ;;		line 98 in file "./CustomLib/TrafficLight.h"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  _digits         1    wreg     PTR PTR struct .
  5199 ;;		 -> DigitsArr(2), 
  5200 ;;  index           1   20[BANK0 ] unsigned char 
  5201 ;;  Time            2   21[BANK0 ] int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  _digits         1   28[BANK0 ] PTR PTR struct .
  5204 ;;		 -> DigitsArr(2), 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5214 ;;      Params:         0       3       0       0       0
  5215 ;;      Locals:         0       3       0       0       0
  5216 ;;      Temps:          0       3       0       0       0
  5217 ;;      Totals:         0       9       0       0       0
  5218 ;;Total ram usage:        9 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    4
  5221 ;; This function calls:
  5222 ;;		___awdiv
  5223 ;;		___awmod
  5224 ;;		___bmul
  5225 ;; This function is called by:
  5226 ;;		_main
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _GetDigits
  5232  0486                     _GetDigits:	
  5233                           
  5234                           ;incstack = 0
  5235                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5236                           ;GetDigits@_digits stored from wreg
  5237  0486  1283               	bcf	3,5	;RP0=0, select bank0
  5238  0487  1303               	bcf	3,6	;RP1=0, select bank0
  5239  0488  00BC               	movwf	GetDigits@_digits
  5240  0489                     l3373:	
  5241                           
  5242                           ;./CustomLib/TrafficLight.h: 98: void GetDigits(_Digits _digits, unsigned char index, in
      +                          t Time);./CustomLib/TrafficLight.h: 99: {;./CustomLib/TrafficLight.h: 100:     while (Ti
      +                          me / 1000 > 0)
  5243  0489  2C9F               	goto	l3377
  5244  048A                     l3375:	
  5245                           
  5246                           ;./CustomLib/TrafficLight.h: 101:     {;./CustomLib/TrafficLight.h: 102:         Time = 
      +                          Time / 10;
  5247  048A  300A               	movlw	10
  5248  048B  1283               	bcf	3,5	;RP0=0, select bank0
  5249  048C  1303               	bcf	3,6	;RP1=0, select bank0
  5250  048D  00AB               	movwf	___awdiv@divisor
  5251  048E  3000               	movlw	0
  5252  048F  00AC               	movwf	___awdiv@divisor+1
  5253  0490  0836               	movf	GetDigits@Time+1,w
  5254  0491  00AE               	movwf	___awdiv@dividend+1
  5255  0492  0835               	movf	GetDigits@Time,w
  5256  0493  00AD               	movwf	___awdiv@dividend
  5257  0494  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5258  0499  1283               	bcf	3,5	;RP0=0, select bank0
  5259  049A  1303               	bcf	3,6	;RP1=0, select bank0
  5260  049B  082C               	movf	?___awdiv+1,w
  5261  049C  00B6               	movwf	GetDigits@Time+1
  5262  049D  082B               	movf	?___awdiv,w
  5263  049E  00B5               	movwf	GetDigits@Time
  5264  049F                     l3377:	
  5265                           
  5266                           ;./CustomLib/TrafficLight.h: 100:     while (Time / 1000 > 0)
  5267  049F  30E8               	movlw	232
  5268  04A0  00AB               	movwf	___awdiv@divisor
  5269  04A1  3003               	movlw	3
  5270  04A2  00AC               	movwf	___awdiv@divisor+1
  5271  04A3  0836               	movf	GetDigits@Time+1,w
  5272  04A4  00AE               	movwf	___awdiv@dividend+1
  5273  04A5  0835               	movf	GetDigits@Time,w
  5274  04A6  00AD               	movwf	___awdiv@dividend
  5275  04A7  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5276  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  5277  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  5278  04AE  082C               	movf	?___awdiv+1,w
  5279  04AF  3A80               	xorlw	128
  5280  04B0  00FF               	movwf	btemp+1
  5281  04B1  3080               	movlw	128
  5282  04B2  027F               	subwf	btemp+1,w
  5283  04B3  1D03               	skipz
  5284  04B4  2CB7               	goto	u2915
  5285  04B5  3001               	movlw	1
  5286  04B6  022B               	subwf	?___awdiv,w
  5287  04B7                     u2915:	
  5288  04B7  1803               	skipnc
  5289  04B8  2CBA               	goto	u2911
  5290  04B9  2CBB               	goto	u2910
  5291  04BA                     u2911:	
  5292  04BA  2C8A               	goto	l3375
  5293  04BB                     u2910:	
  5294  04BB                     l3379:	
  5295                           
  5296                           ;./CustomLib/TrafficLight.h: 105:     (*_digits)[index].centinaia = Time / 100;
  5297  04BB  3064               	movlw	100
  5298  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  5299  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  5300  04BE  00AB               	movwf	___awdiv@divisor
  5301  04BF  3000               	movlw	0
  5302  04C0  00AC               	movwf	___awdiv@divisor+1
  5303  04C1  0836               	movf	GetDigits@Time+1,w
  5304  04C2  00AE               	movwf	___awdiv@dividend+1
  5305  04C3  0835               	movf	GetDigits@Time,w
  5306  04C4  00AD               	movwf	___awdiv@dividend
  5307  04C5  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5308  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  5309  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  5310  04CC  082B               	movf	?___awdiv,w
  5311  04CD  00B7               	movwf	??_GetDigits
  5312  04CE  083C               	movf	GetDigits@_digits,w
  5313  04CF  0084               	movwf	4
  5314  04D0  3003               	movlw	3
  5315  04D1  00B8               	movwf	??_GetDigits+1
  5316  04D2  0838               	movf	??_GetDigits+1,w
  5317  04D3  00A4               	movwf	___bmul@multiplicand
  5318  04D4  0834               	movf	GetDigits@index,w
  5319  04D5  120A  158A  22B5  120A  118A  	fcall	___bmul
  5320  04DA  1383               	bcf	3,7	;select IRP bank0
  5321  04DB  0700               	addwf	0,w
  5322  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  5323  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  5324  04DE  00B9               	movwf	??_GetDigits+2
  5325  04DF  0839               	movf	??_GetDigits+2,w
  5326  04E0  0084               	movwf	4
  5327  04E1  0837               	movf	??_GetDigits,w
  5328  04E2  0080               	movwf	0
  5329                           
  5330                           ;./CustomLib/TrafficLight.h: 106:     (*_digits)[index].decine = (Time % 100) / 10;
  5331  04E3  300A               	movlw	10
  5332  04E4  00AB               	movwf	___awdiv@divisor
  5333  04E5  3000               	movlw	0
  5334  04E6  00AC               	movwf	___awdiv@divisor+1
  5335  04E7  0836               	movf	GetDigits@Time+1,w
  5336  04E8  00A7               	movwf	___awmod@dividend+1
  5337  04E9  0835               	movf	GetDigits@Time,w
  5338  04EA  00A6               	movwf	___awmod@dividend
  5339  04EB  3064               	movlw	100
  5340  04EC  00A4               	movwf	___awmod@divisor
  5341  04ED  3000               	movlw	0
  5342  04EE  00A5               	movwf	___awmod@divisor+1
  5343  04EF  120A  158A  25DA  120A  118A  	fcall	___awmod
  5344  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  5345  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  5346  04F6  0825               	movf	?___awmod+1,w
  5347  04F7  00AE               	movwf	___awdiv@dividend+1
  5348  04F8  0824               	movf	?___awmod,w
  5349  04F9  00AD               	movwf	___awdiv@dividend
  5350  04FA  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5351  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0500  1303               	bcf	3,6	;RP1=0, select bank0
  5353  0501  082B               	movf	?___awdiv,w
  5354  0502  00B7               	movwf	??_GetDigits
  5355  0503  083C               	movf	GetDigits@_digits,w
  5356  0504  0084               	movwf	4
  5357  0505  3003               	movlw	3
  5358  0506  00B8               	movwf	??_GetDigits+1
  5359  0507  0838               	movf	??_GetDigits+1,w
  5360  0508  00A4               	movwf	___bmul@multiplicand
  5361  0509  0834               	movf	GetDigits@index,w
  5362  050A  120A  158A  22B5  120A  118A  	fcall	___bmul
  5363  050F  1383               	bcf	3,7	;select IRP bank0
  5364  0510  0700               	addwf	0,w
  5365  0511  1283               	bcf	3,5	;RP0=0, select bank0
  5366  0512  1303               	bcf	3,6	;RP1=0, select bank0
  5367  0513  00B9               	movwf	??_GetDigits+2
  5368  0514  0A39               	incf	??_GetDigits+2,w
  5369  0515  0084               	movwf	4
  5370  0516  0837               	movf	??_GetDigits,w
  5371  0517  0080               	movwf	0
  5372  0518                     l3381:	
  5373                           
  5374                           ;./CustomLib/TrafficLight.h: 107:     (*_digits)[index].unita = (Time % 100) % 10;
  5375  0518  0836               	movf	GetDigits@Time+1,w
  5376  0519  00A7               	movwf	___awmod@dividend+1
  5377  051A  0835               	movf	GetDigits@Time,w
  5378  051B  00A6               	movwf	___awmod@dividend
  5379  051C  3064               	movlw	100
  5380  051D  00A4               	movwf	___awmod@divisor
  5381  051E  3000               	movlw	0
  5382  051F  00A5               	movwf	___awmod@divisor+1
  5383  0520  120A  158A  25DA  120A  118A  	fcall	___awmod
  5384  0525  1283               	bcf	3,5	;RP0=0, select bank0
  5385  0526  1303               	bcf	3,6	;RP1=0, select bank0
  5386  0527  0825               	movf	?___awmod+1,w
  5387  0528  00BB               	movwf	_GetDigits$1203+1
  5388  0529  0824               	movf	?___awmod,w
  5389  052A  00BA               	movwf	_GetDigits$1203
  5390  052B                     l3383:	
  5391                           
  5392                           ;./CustomLib/TrafficLight.h: 107:     (*_digits)[index].unita = (Time % 100) % 10;
  5393  052B  300A               	movlw	10
  5394  052C  00A4               	movwf	___awmod@divisor
  5395  052D  3000               	movlw	0
  5396  052E  00A5               	movwf	___awmod@divisor+1
  5397  052F  083B               	movf	_GetDigits$1203+1,w
  5398  0530  00A7               	movwf	___awmod@dividend+1
  5399  0531  083A               	movf	_GetDigits$1203,w
  5400  0532  00A6               	movwf	___awmod@dividend
  5401  0533  120A  158A  25DA  120A  118A  	fcall	___awmod
  5402  0538  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0539  1303               	bcf	3,6	;RP1=0, select bank0
  5404  053A  0824               	movf	?___awmod,w
  5405  053B  00B7               	movwf	??_GetDigits
  5406  053C  083C               	movf	GetDigits@_digits,w
  5407  053D  0084               	movwf	4
  5408  053E  3003               	movlw	3
  5409  053F  00B8               	movwf	??_GetDigits+1
  5410  0540  0838               	movf	??_GetDigits+1,w
  5411  0541  00A4               	movwf	___bmul@multiplicand
  5412  0542  0834               	movf	GetDigits@index,w
  5413  0543  120A  158A  22B5  120A  118A  	fcall	___bmul
  5414  0548  1383               	bcf	3,7	;select IRP bank0
  5415  0549  0700               	addwf	0,w
  5416  054A  1283               	bcf	3,5	;RP0=0, select bank0
  5417  054B  1303               	bcf	3,6	;RP1=0, select bank0
  5418  054C  00B9               	movwf	??_GetDigits+2
  5419  054D  0839               	movf	??_GetDigits+2,w
  5420  054E  3E02               	addlw	2
  5421  054F  0084               	movwf	4
  5422  0550  0837               	movf	??_GetDigits,w
  5423  0551  0080               	movwf	0
  5424  0552                     l160:	
  5425  0552  0008               	return
  5426  0553                     __end_of_GetDigits:	
  5427                           
  5428                           	psect	text19
  5429  0AB5                     __ptext19:	
  5430 ;; *************** function ___bmul *****************
  5431 ;; Defined at:
  5432 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  multiplier      1    wreg     unsigned char 
  5435 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  multiplier      1    7[BANK0 ] unsigned char 
  5438 ;;  product         1    6[BANK0 ] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      unsigned char 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5448 ;;      Params:         0       1       0       0       0
  5449 ;;      Locals:         0       2       0       0       0
  5450 ;;      Temps:          0       1       0       0       0
  5451 ;;      Totals:         0       4       0       0       0
  5452 ;;Total ram usage:        4 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    3
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_SetReceivedTimes
  5459 ;;		_GetDigits
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           
  5464                           ;psect for function ___bmul
  5465  0AB5                     ___bmul:	
  5466                           
  5467                           ;incstack = 0
  5468                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5469                           ;___bmul@multiplier stored from wreg
  5470  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  5471  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  5472  0AB7  00A7               	movwf	___bmul@multiplier
  5473  0AB8                     l3157:	
  5474  0AB8  01A6               	clrf	___bmul@product
  5475  0AB9                     l3159:	
  5476  0AB9  1C27               	btfss	___bmul@multiplier,0
  5477  0ABA  2ABC               	goto	u2531
  5478  0ABB  2ABD               	goto	u2530
  5479  0ABC                     u2531:	
  5480  0ABC  2AC1               	goto	l3163
  5481  0ABD                     u2530:	
  5482  0ABD                     l3161:	
  5483  0ABD  0824               	movf	___bmul@multiplicand,w
  5484  0ABE  00A5               	movwf	??___bmul
  5485  0ABF  0825               	movf	??___bmul,w
  5486  0AC0  07A6               	addwf	___bmul@product,f
  5487  0AC1                     l3163:	
  5488  0AC1  1003               	clrc
  5489  0AC2  0DA4               	rlf	___bmul@multiplicand,f
  5490  0AC3                     l3165:	
  5491  0AC3  1003               	clrc
  5492  0AC4  0CA7               	rrf	___bmul@multiplier,f
  5493  0AC5  0827               	movf	___bmul@multiplier,w
  5494  0AC6  1D03               	btfss	3,2
  5495  0AC7  2AC9               	goto	u2541
  5496  0AC8  2ACA               	goto	u2540
  5497  0AC9                     u2541:	
  5498  0AC9  2AB9               	goto	l3159
  5499  0ACA                     u2540:	
  5500  0ACA                     l3167:	
  5501  0ACA  0826               	movf	___bmul@product,w
  5502  0ACB                     l465:	
  5503  0ACB  0008               	return
  5504  0ACC                     __end_of___bmul:	
  5505                           
  5506                           	psect	text20
  5507  0DDA                     __ptext20:	
  5508 ;; *************** function ___awmod *****************
  5509 ;; Defined at:
  5510 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  divisor         2    4[BANK0 ] int 
  5513 ;;  dividend        2    6[BANK0 ] int 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  sign            1   10[BANK0 ] unsigned char 
  5516 ;;  counter         1    9[BANK0 ] unsigned char 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  2    4[BANK0 ] int 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5526 ;;      Params:         0       4       0       0       0
  5527 ;;      Locals:         0       2       0       0       0
  5528 ;;      Temps:          0       1       0       0       0
  5529 ;;      Totals:         0       7       0       0       0
  5530 ;;Total ram usage:        7 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:    3
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_GetDigits
  5537 ;;		_ShowDigitsOnDisplay
  5538 ;;		_ChangeTrafficLight
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           
  5543                           ;psect for function ___awmod
  5544  0DDA                     ___awmod:	
  5545  0DDA                     l3255:	
  5546                           ;incstack = 0
  5547                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5548                           
  5549  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5550  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5551  0DDC  01AA               	clrf	___awmod@sign
  5552  0DDD                     l3257:	
  5553  0DDD  1FA7               	btfss	___awmod@dividend+1,7
  5554  0DDE  2DE0               	goto	u2751
  5555  0DDF  2DE1               	goto	u2750
  5556  0DE0                     u2751:	
  5557  0DE0  2DE8               	goto	l3263
  5558  0DE1                     u2750:	
  5559  0DE1                     l3259:	
  5560  0DE1  09A6               	comf	___awmod@dividend,f
  5561  0DE2  09A7               	comf	___awmod@dividend+1,f
  5562  0DE3  0AA6               	incf	___awmod@dividend,f
  5563  0DE4  1903               	skipnz
  5564  0DE5  0AA7               	incf	___awmod@dividend+1,f
  5565  0DE6                     l3261:	
  5566  0DE6  01AA               	clrf	___awmod@sign
  5567  0DE7  0AAA               	incf	___awmod@sign,f
  5568  0DE8                     l3263:	
  5569  0DE8  1FA5               	btfss	___awmod@divisor+1,7
  5570  0DE9  2DEB               	goto	u2761
  5571  0DEA  2DEC               	goto	u2760
  5572  0DEB                     u2761:	
  5573  0DEB  2DF1               	goto	l3267
  5574  0DEC                     u2760:	
  5575  0DEC                     l3265:	
  5576  0DEC  09A4               	comf	___awmod@divisor,f
  5577  0DED  09A5               	comf	___awmod@divisor+1,f
  5578  0DEE  0AA4               	incf	___awmod@divisor,f
  5579  0DEF  1903               	skipnz
  5580  0DF0  0AA5               	incf	___awmod@divisor+1,f
  5581  0DF1                     l3267:	
  5582  0DF1  0824               	movf	___awmod@divisor,w
  5583  0DF2  0425               	iorwf	___awmod@divisor+1,w
  5584  0DF3  1903               	btfsc	3,2
  5585  0DF4  2DF6               	goto	u2771
  5586  0DF5  2DF7               	goto	u2770
  5587  0DF6                     u2771:	
  5588  0DF6  2E26               	goto	l3285
  5589  0DF7                     u2770:	
  5590  0DF7                     l3269:	
  5591  0DF7  01A9               	clrf	___awmod@counter
  5592  0DF8  0AA9               	incf	___awmod@counter,f
  5593  0DF9  2E05               	goto	l3275
  5594  0DFA                     l3271:	
  5595  0DFA  3001               	movlw	1
  5596  0DFB                     u2785:	
  5597  0DFB  1003               	clrc
  5598  0DFC  0DA4               	rlf	___awmod@divisor,f
  5599  0DFD  0DA5               	rlf	___awmod@divisor+1,f
  5600  0DFE  3EFF               	addlw	-1
  5601  0DFF  1D03               	skipz
  5602  0E00  2DFB               	goto	u2785
  5603  0E01                     l3273:	
  5604  0E01  3001               	movlw	1
  5605  0E02  00A8               	movwf	??___awmod
  5606  0E03  0828               	movf	??___awmod,w
  5607  0E04  07A9               	addwf	___awmod@counter,f
  5608  0E05                     l3275:	
  5609  0E05  1FA5               	btfss	___awmod@divisor+1,7
  5610  0E06  2E08               	goto	u2791
  5611  0E07  2E09               	goto	u2790
  5612  0E08                     u2791:	
  5613  0E08  2DFA               	goto	l3271
  5614  0E09                     u2790:	
  5615  0E09                     l3277:	
  5616  0E09  0825               	movf	___awmod@divisor+1,w
  5617  0E0A  0227               	subwf	___awmod@dividend+1,w
  5618  0E0B  1D03               	skipz
  5619  0E0C  2E0F               	goto	u2805
  5620  0E0D  0824               	movf	___awmod@divisor,w
  5621  0E0E  0226               	subwf	___awmod@dividend,w
  5622  0E0F                     u2805:	
  5623  0E0F  1C03               	skipc
  5624  0E10  2E12               	goto	u2801
  5625  0E11  2E13               	goto	u2800
  5626  0E12                     u2801:	
  5627  0E12  2E19               	goto	l3281
  5628  0E13                     u2800:	
  5629  0E13                     l3279:	
  5630  0E13  0824               	movf	___awmod@divisor,w
  5631  0E14  02A6               	subwf	___awmod@dividend,f
  5632  0E15  0825               	movf	___awmod@divisor+1,w
  5633  0E16  1C03               	skipc
  5634  0E17  03A7               	decf	___awmod@dividend+1,f
  5635  0E18  02A7               	subwf	___awmod@dividend+1,f
  5636  0E19                     l3281:	
  5637  0E19  3001               	movlw	1
  5638  0E1A                     u2815:	
  5639  0E1A  1003               	clrc
  5640  0E1B  0CA5               	rrf	___awmod@divisor+1,f
  5641  0E1C  0CA4               	rrf	___awmod@divisor,f
  5642  0E1D  3EFF               	addlw	-1
  5643  0E1E  1D03               	skipz
  5644  0E1F  2E1A               	goto	u2815
  5645  0E20                     l3283:	
  5646  0E20  3001               	movlw	1
  5647  0E21  02A9               	subwf	___awmod@counter,f
  5648  0E22  1D03               	btfss	3,2
  5649  0E23  2E25               	goto	u2821
  5650  0E24  2E26               	goto	u2820
  5651  0E25                     u2821:	
  5652  0E25  2E09               	goto	l3277
  5653  0E26                     u2820:	
  5654  0E26                     l3285:	
  5655  0E26  082A               	movf	___awmod@sign,w
  5656  0E27  1903               	btfsc	3,2
  5657  0E28  2E2A               	goto	u2831
  5658  0E29  2E2B               	goto	u2830
  5659  0E2A                     u2831:	
  5660  0E2A  2E30               	goto	l3289
  5661  0E2B                     u2830:	
  5662  0E2B                     l3287:	
  5663  0E2B  09A6               	comf	___awmod@dividend,f
  5664  0E2C  09A7               	comf	___awmod@dividend+1,f
  5665  0E2D  0AA6               	incf	___awmod@dividend,f
  5666  0E2E  1903               	skipnz
  5667  0E2F  0AA7               	incf	___awmod@dividend+1,f
  5668  0E30                     l3289:	
  5669  0E30  0827               	movf	___awmod@dividend+1,w
  5670  0E31  00A5               	movwf	?___awmod+1
  5671  0E32  0826               	movf	___awmod@dividend,w
  5672  0E33  00A4               	movwf	?___awmod
  5673  0E34                     l605:	
  5674  0E34  0008               	return
  5675  0E35                     __end_of___awmod:	
  5676                           
  5677                           	psect	text21
  5678  0EFA                     __ptext21:	
  5679 ;; *************** function ___awdiv *****************
  5680 ;; Defined at:
  5681 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  divisor         2   11[BANK0 ] int 
  5684 ;;  dividend        2   13[BANK0 ] int 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  quotient        2   18[BANK0 ] int 
  5687 ;;  sign            1   17[BANK0 ] unsigned char 
  5688 ;;  counter         1   16[BANK0 ] unsigned char 
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  2   11[BANK0 ] int 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5698 ;;      Params:         0       4       0       0       0
  5699 ;;      Locals:         0       4       0       0       0
  5700 ;;      Temps:          0       1       0       0       0
  5701 ;;      Totals:         0       9       0       0       0
  5702 ;;Total ram usage:        9 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:    3
  5705 ;; This function calls:
  5706 ;;		Nothing
  5707 ;; This function is called by:
  5708 ;;		_GetDigits
  5709 ;;		_map
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           
  5714                           ;psect for function ___awdiv
  5715  0EFA                     ___awdiv:	
  5716  0EFA                     l3211:	
  5717                           ;incstack = 0
  5718                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5719                           
  5720  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  5721  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  5722  0EFC  01B1               	clrf	___awdiv@sign
  5723  0EFD                     l3213:	
  5724  0EFD  1FAC               	btfss	___awdiv@divisor+1,7
  5725  0EFE  2F00               	goto	u2651
  5726  0EFF  2F01               	goto	u2650
  5727  0F00                     u2651:	
  5728  0F00  2F08               	goto	l3219
  5729  0F01                     u2650:	
  5730  0F01                     l3215:	
  5731  0F01  09AB               	comf	___awdiv@divisor,f
  5732  0F02  09AC               	comf	___awdiv@divisor+1,f
  5733  0F03  0AAB               	incf	___awdiv@divisor,f
  5734  0F04  1903               	skipnz
  5735  0F05  0AAC               	incf	___awdiv@divisor+1,f
  5736  0F06                     l3217:	
  5737  0F06  01B1               	clrf	___awdiv@sign
  5738  0F07  0AB1               	incf	___awdiv@sign,f
  5739  0F08                     l3219:	
  5740  0F08  1FAE               	btfss	___awdiv@dividend+1,7
  5741  0F09  2F0B               	goto	u2661
  5742  0F0A  2F0C               	goto	u2660
  5743  0F0B                     u2661:	
  5744  0F0B  2F15               	goto	l3225
  5745  0F0C                     u2660:	
  5746  0F0C                     l3221:	
  5747  0F0C  09AD               	comf	___awdiv@dividend,f
  5748  0F0D  09AE               	comf	___awdiv@dividend+1,f
  5749  0F0E  0AAD               	incf	___awdiv@dividend,f
  5750  0F0F  1903               	skipnz
  5751  0F10  0AAE               	incf	___awdiv@dividend+1,f
  5752  0F11                     l3223:	
  5753  0F11  3001               	movlw	1
  5754  0F12  00AF               	movwf	??___awdiv
  5755  0F13  082F               	movf	??___awdiv,w
  5756  0F14  06B1               	xorwf	___awdiv@sign,f
  5757  0F15                     l3225:	
  5758  0F15  01B2               	clrf	___awdiv@quotient
  5759  0F16  01B3               	clrf	___awdiv@quotient+1
  5760  0F17                     l3227:	
  5761  0F17  082B               	movf	___awdiv@divisor,w
  5762  0F18  042C               	iorwf	___awdiv@divisor+1,w
  5763  0F19  1903               	btfsc	3,2
  5764  0F1A  2F1C               	goto	u2671
  5765  0F1B  2F1D               	goto	u2670
  5766  0F1C                     u2671:	
  5767  0F1C  2F54               	goto	l3247
  5768  0F1D                     u2670:	
  5769  0F1D                     l3229:	
  5770  0F1D  01B0               	clrf	___awdiv@counter
  5771  0F1E  0AB0               	incf	___awdiv@counter,f
  5772  0F1F  2F2B               	goto	l3235
  5773  0F20                     l3231:	
  5774  0F20  3001               	movlw	1
  5775  0F21                     u2685:	
  5776  0F21  1003               	clrc
  5777  0F22  0DAB               	rlf	___awdiv@divisor,f
  5778  0F23  0DAC               	rlf	___awdiv@divisor+1,f
  5779  0F24  3EFF               	addlw	-1
  5780  0F25  1D03               	skipz
  5781  0F26  2F21               	goto	u2685
  5782  0F27                     l3233:	
  5783  0F27  3001               	movlw	1
  5784  0F28  00AF               	movwf	??___awdiv
  5785  0F29  082F               	movf	??___awdiv,w
  5786  0F2A  07B0               	addwf	___awdiv@counter,f
  5787  0F2B                     l3235:	
  5788  0F2B  1FAC               	btfss	___awdiv@divisor+1,7
  5789  0F2C  2F2E               	goto	u2691
  5790  0F2D  2F2F               	goto	u2690
  5791  0F2E                     u2691:	
  5792  0F2E  2F20               	goto	l3231
  5793  0F2F                     u2690:	
  5794  0F2F                     l3237:	
  5795  0F2F  3001               	movlw	1
  5796  0F30                     u2705:	
  5797  0F30  1003               	clrc
  5798  0F31  0DB2               	rlf	___awdiv@quotient,f
  5799  0F32  0DB3               	rlf	___awdiv@quotient+1,f
  5800  0F33  3EFF               	addlw	-1
  5801  0F34  1D03               	skipz
  5802  0F35  2F30               	goto	u2705
  5803  0F36  082C               	movf	___awdiv@divisor+1,w
  5804  0F37  022E               	subwf	___awdiv@dividend+1,w
  5805  0F38  1D03               	skipz
  5806  0F39  2F3C               	goto	u2715
  5807  0F3A  082B               	movf	___awdiv@divisor,w
  5808  0F3B  022D               	subwf	___awdiv@dividend,w
  5809  0F3C                     u2715:	
  5810  0F3C  1C03               	skipc
  5811  0F3D  2F3F               	goto	u2711
  5812  0F3E  2F40               	goto	u2710
  5813  0F3F                     u2711:	
  5814  0F3F  2F47               	goto	l3243
  5815  0F40                     u2710:	
  5816  0F40                     l3239:	
  5817  0F40  082B               	movf	___awdiv@divisor,w
  5818  0F41  02AD               	subwf	___awdiv@dividend,f
  5819  0F42  082C               	movf	___awdiv@divisor+1,w
  5820  0F43  1C03               	skipc
  5821  0F44  03AE               	decf	___awdiv@dividend+1,f
  5822  0F45  02AE               	subwf	___awdiv@dividend+1,f
  5823  0F46                     l3241:	
  5824  0F46  1432               	bsf	___awdiv@quotient,0
  5825  0F47                     l3243:	
  5826  0F47  3001               	movlw	1
  5827  0F48                     u2725:	
  5828  0F48  1003               	clrc
  5829  0F49  0CAC               	rrf	___awdiv@divisor+1,f
  5830  0F4A  0CAB               	rrf	___awdiv@divisor,f
  5831  0F4B  3EFF               	addlw	-1
  5832  0F4C  1D03               	skipz
  5833  0F4D  2F48               	goto	u2725
  5834  0F4E                     l3245:	
  5835  0F4E  3001               	movlw	1
  5836  0F4F  02B0               	subwf	___awdiv@counter,f
  5837  0F50  1D03               	btfss	3,2
  5838  0F51  2F53               	goto	u2731
  5839  0F52  2F54               	goto	u2730
  5840  0F53                     u2731:	
  5841  0F53  2F2F               	goto	l3237
  5842  0F54                     u2730:	
  5843  0F54                     l3247:	
  5844  0F54  0831               	movf	___awdiv@sign,w
  5845  0F55  1903               	btfsc	3,2
  5846  0F56  2F58               	goto	u2741
  5847  0F57  2F59               	goto	u2740
  5848  0F58                     u2741:	
  5849  0F58  2F5E               	goto	l3251
  5850  0F59                     u2740:	
  5851  0F59                     l3249:	
  5852  0F59  09B2               	comf	___awdiv@quotient,f
  5853  0F5A  09B3               	comf	___awdiv@quotient+1,f
  5854  0F5B  0AB2               	incf	___awdiv@quotient,f
  5855  0F5C  1903               	skipnz
  5856  0F5D  0AB3               	incf	___awdiv@quotient+1,f
  5857  0F5E                     l3251:	
  5858  0F5E  0833               	movf	___awdiv@quotient+1,w
  5859  0F5F  00AC               	movwf	?___awdiv+1
  5860  0F60  0832               	movf	___awdiv@quotient,w
  5861  0F61  00AB               	movwf	?___awdiv
  5862  0F62                     l592:	
  5863  0F62  0008               	return
  5864  0F63                     __end_of___awdiv:	
  5865                           
  5866                           	psect	text22
  5867  0ACC                     __ptext22:	
  5868 ;; *************** function _ADC_Read *****************
  5869 ;; Defined at:
  5870 ;;		line 349 in file "main.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  canale          1    wreg     unsigned char 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;  canale          1    7[BANK0 ] unsigned char 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  2    4[BANK0 ] int 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5884 ;;      Params:         0       2       0       0       0
  5885 ;;      Locals:         0       1       0       0       0
  5886 ;;      Temps:          0       1       0       0       0
  5887 ;;      Totals:         0       4       0       0       0
  5888 ;;Total ram usage:        4 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    3
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_main
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           
  5899                           ;psect for function _ADC_Read
  5900  0ACC                     _ADC_Read:	
  5901                           
  5902                           ;incstack = 0
  5903                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5904                           ;ADC_Read@canale stored from wreg
  5905  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  5906  0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  5907  0ACE  00A7               	movwf	ADC_Read@canale
  5908  0ACF                     l3431:	
  5909                           
  5910                           ;main.c: 349: int ADC_Read(char canale);main.c: 350: {;main.c: 351:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5911  0ACF  0827               	movf	ADC_Read@canale,w
  5912  0AD0  00A6               	movwf	??_ADC_Read
  5913  0AD1  3002               	movlw	2
  5914  0AD2                     u2955:	
  5915  0AD2  1003               	clrc
  5916  0AD3  0DA6               	rlf	??_ADC_Read,f
  5917  0AD4  3EFF               	addlw	-1
  5918  0AD5  1D03               	skipz
  5919  0AD6  2AD2               	goto	u2955
  5920  0AD7  1003               	clrc
  5921  0AD8  0D26               	rlf	??_ADC_Read,w
  5922  0AD9  3801               	iorlw	1
  5923  0ADA  009F               	movwf	31	;volatile
  5924  0ADB                     l3433:	
  5925                           
  5926                           ;main.c: 352:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5927  0ADB  3004               	movlw	4
  5928  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  5929  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  5930  0ADE  00A6               	movwf	??_ADC_Read
  5931  0ADF                     u3287:	
  5932  0ADF  0BA6               	decfsz	??_ADC_Read,f
  5933  0AE0  2ADF               	goto	u3287
  5934  0AE1  0000               	nop
  5935  0AE2                     l3435:	
  5936                           
  5937                           ;main.c: 353:     GO_nDONE = 1;
  5938  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  5939  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  5940  0AE4  151F               	bsf	31,2	;volatile
  5941  0AE5                     l268:	
  5942                           ;main.c: 355:         ;
  5943                           
  5944                           
  5945                           ;main.c: 354:     while (GO_nDONE)
  5946  0AE5  191F               	btfsc	31,2	;volatile
  5947  0AE6  2AE8               	goto	u2961
  5948  0AE7  2AE9               	goto	u2960
  5949  0AE8                     u2961:	
  5950  0AE8  2AE5               	goto	l268
  5951  0AE9                     u2960:	
  5952  0AE9                     l3437:	
  5953                           
  5954                           ;main.c: 356:     return ADRESL + (ADRESH << 8);
  5955  0AE9  081E               	movf	30,w	;volatile
  5956  0AEA  00A5               	movwf	?_ADC_Read+1
  5957  0AEB  1683               	bsf	3,5	;RP0=1, select bank1
  5958  0AEC  1303               	bcf	3,6	;RP1=0, select bank1
  5959  0AED  081E               	movf	30,w	;volatile
  5960  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  5961  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  5962  0AF0  00A4               	movwf	?_ADC_Read
  5963  0AF1                     l271:	
  5964  0AF1  0008               	return
  5965  0AF2                     __end_of_ADC_Read:	
  5966                           
  5967                           	psect	text23
  5968  0D82                     __ptext23:	
  5969 ;; *************** function _ISR *****************
  5970 ;; Defined at:
  5971 ;;		line 527 in file "main.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5985 ;;      Params:         0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0
  5987 ;;      Temps:          0       4       0       0       0
  5988 ;;      Totals:         0       4       0       0       0
  5989 ;;Total ram usage:        4 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    2
  5992 ;; This function calls:
  5993 ;;		_UART_Read
  5994 ;;		_conteggioVeicoli
  5995 ;; This function is called by:
  5996 ;;		Interrupt level 1
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function _ISR
  6002  0D82                     _ISR:	
  6003  0D82                     i1l2761:	
  6004                           
  6005                           ;main.c: 530:     if (RCIF && readGateway.Bit == 0)
  6006  0D82  1E8C               	btfss	12,5	;volatile
  6007  0D83  2D85               	goto	u225_21
  6008  0D84  2D86               	goto	u225_20
  6009  0D85                     u225_21:	
  6010  0D85  2D8F               	goto	i1l2769
  6011  0D86                     u225_20:	
  6012  0D86                     i1l2763:	
  6013  0D86  1858               	btfsc	_readGateway,0
  6014  0D87  2D89               	goto	u226_21
  6015  0D88  2D8A               	goto	u226_20
  6016  0D89                     u226_21:	
  6017  0D89  2D8F               	goto	i1l2769
  6018  0D8A                     u226_20:	
  6019  0D8A                     i1l2765:	
  6020                           
  6021                           ;main.c: 531:     {;main.c: 532:         readGateway.Bit = 1;
  6022  0D8A  1458               	bsf	_readGateway,0
  6023                           
  6024                           ;main.c: 533:         readGatewayDone.Bit = 0;
  6025  0D8B  1059               	bcf	_readGatewayDone,0
  6026                           
  6027                           ;main.c: 534:         readGatewayDone.Timeout = 0;
  6028  0D8C  10D9               	bcf	_readGatewayDone,1
  6029  0D8D                     i1l2767:	
  6030                           
  6031                           ;main.c: 535:         dataFromGatewayIndex = 0;
  6032  0D8D  01D3               	clrf	_dataFromGatewayIndex
  6033                           
  6034                           ;main.c: 536:         timerReadFromGateway = 0;
  6035  0D8E  01D2               	clrf	_timerReadFromGateway
  6036  0D8F                     i1l2769:	
  6037                           
  6038                           ;main.c: 538:     if (RCIF && readGateway.Bit == 1)
  6039  0D8F  1E8C               	btfss	12,5	;volatile
  6040  0D90  2D92               	goto	u227_21
  6041  0D91  2D93               	goto	u227_20
  6042  0D92                     u227_21:	
  6043  0D92  2DAA               	goto	i1l2779
  6044  0D93                     u227_20:	
  6045  0D93                     i1l2771:	
  6046  0D93  1C58               	btfss	_readGateway,0
  6047  0D94  2D96               	goto	u228_21
  6048  0D95  2D97               	goto	u228_20
  6049  0D96                     u228_21:	
  6050  0D96  2DAA               	goto	i1l2779
  6051  0D97                     u228_20:	
  6052  0D97                     i1l2773:	
  6053                           
  6054                           ;main.c: 539:     {;main.c: 540:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  6055  0D97  120A  158A  228E  120A  158A  	fcall	_UART_Read
  6056  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  6057  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  6058  0D9E  00A0               	movwf	??_ISR
  6059  0D9F  0853               	movf	_dataFromGatewayIndex,w
  6060  0DA0  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  6061  0DA1  0084               	movwf	4
  6062  0DA2  0820               	movf	??_ISR,w
  6063  0DA3  1383               	bcf	3,7	;select IRP bank1
  6064  0DA4  0080               	movwf	0
  6065  0DA5                     i1l2775:	
  6066                           
  6067                           ;main.c: 541:         dataFromGatewayIndex++;
  6068  0DA5  3001               	movlw	1
  6069  0DA6  00A0               	movwf	??_ISR
  6070  0DA7  0820               	movf	??_ISR,w
  6071  0DA8  07D3               	addwf	_dataFromGatewayIndex,f
  6072  0DA9                     i1l2777:	
  6073                           
  6074                           ;main.c: 542:         timerReadFromGateway = 0;
  6075  0DA9  01D2               	clrf	_timerReadFromGateway
  6076  0DAA                     i1l2779:	
  6077                           
  6078                           ;main.c: 547:     if (TMR0IF)
  6079  0DAA  1D0B               	btfss	11,2	;volatile
  6080  0DAB  2DAD               	goto	u229_21
  6081  0DAC  2DAE               	goto	u229_20
  6082  0DAD                     u229_21:	
  6083  0DAD  2DB8               	goto	i1l2787
  6084  0DAE                     u229_20:	
  6085  0DAE                     i1l2781:	
  6086                           
  6087                           ;main.c: 548:     {;main.c: 549:         TMR0IF = 0;
  6088  0DAE  110B               	bcf	11,2	;volatile
  6089  0DAF                     i1l2783:	
  6090                           
  6091                           ;main.c: 550:         conteggioVeicoli();
  6092  0DAF  120A  158A  2695  120A  158A  	fcall	_conteggioVeicoli
  6093  0DB4                     i1l2785:	
  6094                           
  6095                           ;main.c: 551:         TMR0 = 6;
  6096  0DB4  3006               	movlw	6
  6097  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  6098  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  6099  0DB7  0081               	movwf	1	;volatile
  6100  0DB8                     i1l2787:	
  6101                           
  6102                           ;main.c: 554:     if (TMR1IF)
  6103  0DB8  1C0C               	btfss	12,0	;volatile
  6104  0DB9  2DBB               	goto	u230_21
  6105  0DBA  2DBC               	goto	u230_20
  6106  0DBB                     u230_21:	
  6107  0DBB  2DD1               	goto	i1l353
  6108  0DBC                     u230_20:	
  6109  0DBC                     i1l2789:	
  6110                           
  6111                           ;main.c: 555:     {;main.c: 556:         TMR1IF = 0;
  6112  0DBC  100C               	bcf	12,0	;volatile
  6113  0DBD                     i1l2791:	
  6114                           
  6115                           ;main.c: 557:         count_lux++;
  6116  0DBD  3001               	movlw	1
  6117  0DBE  00A0               	movwf	??_ISR
  6118  0DBF  0820               	movf	??_ISR,w
  6119  0DC0  07D4               	addwf	_count_lux,f
  6120  0DC1                     i1l2793:	
  6121                           
  6122                           ;main.c: 559:         if (count_lux >= 20)
  6123  0DC1  3014               	movlw	20
  6124  0DC2  0254               	subwf	_count_lux,w
  6125  0DC3  1C03               	skipc
  6126  0DC4  2DC6               	goto	u231_21
  6127  0DC5  2DC7               	goto	u231_20
  6128  0DC6                     u231_21:	
  6129  0DC6  2DCD               	goto	i1l2801
  6130  0DC7                     u231_20:	
  6131  0DC7                     i1l2795:	
  6132                           
  6133                           ;main.c: 560:         {;main.c: 561:             secondPassed.Bit = 1;
  6134  0DC7  1457               	bsf	_secondPassed,0
  6135  0DC8                     i1l2797:	
  6136                           
  6137                           ;main.c: 562:             count_lux = 0;
  6138  0DC8  01D4               	clrf	_count_lux
  6139  0DC9                     i1l2799:	
  6140                           
  6141                           ;main.c: 563:             timerReadFromGateway++;
  6142  0DC9  3001               	movlw	1
  6143  0DCA  00A0               	movwf	??_ISR
  6144  0DCB  0820               	movf	??_ISR,w
  6145  0DCC  07D2               	addwf	_timerReadFromGateway,f
  6146  0DCD                     i1l2801:	
  6147                           
  6148                           ;main.c: 566:         TMR1H = 60;
  6149  0DCD  303C               	movlw	60
  6150  0DCE  008F               	movwf	15	;volatile
  6151  0DCF                     i1l2803:	
  6152                           
  6153                           ;main.c: 567:         TMR1L = 176;
  6154  0DCF  30B0               	movlw	176
  6155  0DD0  008E               	movwf	14	;volatile
  6156  0DD1                     i1l353:	
  6157  0DD1  0823               	movf	??_ISR+3,w
  6158  0DD2  008A               	movwf	10
  6159  0DD3  0822               	movf	??_ISR+2,w
  6160  0DD4  0084               	movwf	4
  6161  0DD5  0E21               	swapf	(??_ISR+1)^0,w
  6162  0DD6  0083               	movwf	3
  6163  0DD7  0EFE               	swapf	btemp,f
  6164  0DD8  0E7E               	swapf	btemp,w
  6165  0DD9  0009               	retfie
  6166  0DDA                     __end_of_ISR:	
  6167                           
  6168                           	psect	intentry
  6169  0004                     __pintentry:	
  6170                           ;incstack = 0
  6171                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6172                           
  6173  0004                     interrupt_function:	
  6174  007E                     saved_w	set	btemp
  6175  0004  00FE               	movwf	btemp
  6176  0005  0E03               	swapf	3,w
  6177  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6178  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6179  0008  00A1               	movwf	??_ISR+1
  6180  0009  0804               	movf	4,w
  6181  000A  00A2               	movwf	??_ISR+2
  6182  000B  080A               	movf	10,w
  6183  000C  00A3               	movwf	??_ISR+3
  6184  000D  120A  158A  2D82   	ljmp	_ISR
  6185                           
  6186                           	psect	text24
  6187  0E95                     __ptext24:	
  6188 ;; *************** function _conteggioVeicoli *****************
  6189 ;; Defined at:
  6190 ;;		line 407 in file "main.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  i               1   13[COMMON] unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6204 ;;      Params:         0       0       0       0       0
  6205 ;;      Locals:         1       0       0       0       0
  6206 ;;      Temps:          4       0       0       0       0
  6207 ;;      Totals:         5       0       0       0       0
  6208 ;;Total ram usage:        5 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    1
  6211 ;; This function calls:
  6212 ;;		_Conteggio
  6213 ;; This function is called by:
  6214 ;;		_ISR
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           
  6219                           ;psect for function _conteggioVeicoli
  6220  0E95                     _conteggioVeicoli:	
  6221  0E95                     i1l2525:	
  6222                           ;incstack = 0
  6223                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6224                           
  6225                           
  6226                           ;main.c: 409:     RoadsSensors[0] = PORTBbits.RB3;
  6227  0E95  3000               	movlw	0
  6228  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  6229  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  6230  0E98  1986               	btfsc	6,3	;volatile
  6231  0E99  3001               	movlw	1
  6232  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  6233  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  6234  0E9C  00A0               	movwf	_RoadsSensors^(0+128)
  6235                           
  6236                           ;main.c: 410:     RoadsSensors[1] = PORTBbits.RB4;
  6237  0E9D  3000               	movlw	0
  6238  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  6239  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  6240  0EA0  1A06               	btfsc	6,4	;volatile
  6241  0EA1  3001               	movlw	1
  6242  0EA2  1683               	bsf	3,5	;RP0=1, select bank1
  6243  0EA3  1303               	bcf	3,6	;RP1=0, select bank1
  6244  0EA4  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  6245                           
  6246                           ;main.c: 411:     RoadsSensors[2] = PORTBbits.RB5;
  6247  0EA5  3000               	movlw	0
  6248  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  6249  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  6250  0EA8  1A86               	btfsc	6,5	;volatile
  6251  0EA9  3001               	movlw	1
  6252  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  6253  0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  6254  0EAC  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  6255                           
  6256                           ;main.c: 412:     RoadsSensors[3] = PORTAbits.RA5;
  6257  0EAD  3000               	movlw	0
  6258  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  6259  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  6260  0EB0  1A85               	btfsc	5,5	;volatile
  6261  0EB1  3001               	movlw	1
  6262  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  6263  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  6264  0EB4  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  6265  0EB5                     i1l2527:	
  6266                           
  6267                           ;main.c: 414:     for (unsigned char i = 0; i < 4; i++)
  6268  0EB5  01FD               	clrf	conteggioVeicoli@i
  6269  0EB6                     i1l2531:	
  6270                           
  6271                           ;main.c: 415:     {;main.c: 416:         if (!RoadsSensors[i])
  6272  0EB6  087D               	movf	conteggioVeicoli@i,w
  6273  0EB7  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6274  0EB8  0084               	movwf	4
  6275  0EB9  1383               	bcf	3,7	;select IRP bank1
  6276  0EBA  0800               	movf	0,w
  6277  0EBB  1D03               	btfss	3,2
  6278  0EBC  2EBE               	goto	u196_21
  6279  0EBD  2EBF               	goto	u196_20
  6280  0EBE                     u196_21:	
  6281  0EBE  2EC8               	goto	i1l2535
  6282  0EBF                     u196_20:	
  6283  0EBF                     i1l2533:	
  6284                           
  6285                           ;main.c: 417:         {;main.c: 418:             count++;
  6286  0EBF  3001               	movlw	1
  6287  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  6288  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  6289  0EC2  07CD               	addwf	_count,f
  6290  0EC3  1803               	skipnc
  6291  0EC4  0ACE               	incf	_count+1,f
  6292  0EC5  3000               	movlw	0
  6293  0EC6  07CE               	addwf	_count+1,f
  6294                           
  6295                           ;main.c: 419:         }
  6296  0EC7  2EEF               	goto	i1l2541
  6297  0EC8                     i1l2535:	
  6298  0EC8  087D               	movf	conteggioVeicoli@i,w
  6299  0EC9  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6300  0ECA  0084               	movwf	4
  6301  0ECB  0800               	movf	0,w
  6302  0ECC  1903               	btfsc	3,2
  6303  0ECD  2ECF               	goto	u197_21
  6304  0ECE  2ED0               	goto	u197_20
  6305  0ECF                     u197_21:	
  6306  0ECF  2EEF               	goto	i1l2541
  6307  0ED0                     u197_20:	
  6308  0ED0                     i1l2537:	
  6309                           
  6310                           ;main.c: 421:         {;main.c: 422:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  6311  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  6312  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  6313  0ED2  084E               	movf	_count+1,w
  6314  0ED3  00F1               	movwf	Conteggio@_count+1
  6315  0ED4  084D               	movf	_count,w
  6316  0ED5  00F0               	movwf	Conteggio@_count
  6317  0ED6  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  6318  0ED7  00F9               	movwf	??_conteggioVeicoli
  6319  0ED8  0879               	movf	??_conteggioVeicoli,w
  6320  0ED9  00F2               	movwf	Conteggio@_motorcycle
  6321  0EDA  30D3               	movlw	(low (_car| 0))& (0+255)
  6322  0EDB  00FA               	movwf	??_conteggioVeicoli+1
  6323  0EDC  087A               	movf	??_conteggioVeicoli+1,w
  6324  0EDD  00F3               	movwf	Conteggio@_car
  6325  0EDE  30CF               	movlw	(low (_truck| 0))& (0+255)
  6326  0EDF  00FB               	movwf	??_conteggioVeicoli+2
  6327  0EE0  087B               	movf	??_conteggioVeicoli+2,w
  6328  0EE1  00F4               	movwf	Conteggio@_truck
  6329  0EE2  087D               	movf	conteggioVeicoli@i,w
  6330  0EE3  00FC               	movwf	??_conteggioVeicoli+3
  6331  0EE4  087C               	movf	??_conteggioVeicoli+3,w
  6332  0EE5  00F5               	movwf	Conteggio@index
  6333  0EE6  120A  158A  248E  120A  158A  	fcall	_Conteggio
  6334  0EEB                     i1l2539:	
  6335                           
  6336                           ;main.c: 423:             count = 0;
  6337  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  6338  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  6339  0EED  01CD               	clrf	_count
  6340  0EEE  01CE               	clrf	_count+1
  6341  0EEF                     i1l2541:	
  6342                           
  6343                           ;main.c: 425:     }
  6344  0EEF  3001               	movlw	1
  6345  0EF0  00F9               	movwf	??_conteggioVeicoli
  6346  0EF1  0879               	movf	??_conteggioVeicoli,w
  6347  0EF2  07FD               	addwf	conteggioVeicoli@i,f
  6348  0EF3                     i1l2543:	
  6349  0EF3  3004               	movlw	4
  6350  0EF4  027D               	subwf	conteggioVeicoli@i,w
  6351  0EF5  1C03               	skipc
  6352  0EF6  2EF8               	goto	u198_21
  6353  0EF7  2EF9               	goto	u198_20
  6354  0EF8                     u198_21:	
  6355  0EF8  2EB6               	goto	i1l2531
  6356  0EF9                     u198_20:	
  6357  0EF9                     i1l305:	
  6358  0EF9  0008               	return
  6359  0EFA                     __end_of_conteggioVeicoli:	
  6360                           
  6361                           	psect	text25
  6362  0C8E                     __ptext25:	
  6363 ;; *************** function _Conteggio *****************
  6364 ;; Defined at:
  6365 ;;		line 111 in file "./CustomLib/TrafficLight.h"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  _count          2    0[COMMON] unsigned int 
  6368 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  6369 ;;		 -> motorcycle(4), 
  6370 ;;  _car            1    3[COMMON] PTR unsigned char 
  6371 ;;		 -> car(4), 
  6372 ;;  _truck          1    4[COMMON] PTR unsigned char 
  6373 ;;		 -> truck(4), 
  6374 ;;  index           1    5[COMMON] unsigned char 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      void 
  6379 ;; Registers used:
  6380 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6386 ;;      Params:         6       0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0
  6388 ;;      Temps:          3       0       0       0       0
  6389 ;;      Totals:         9       0       0       0       0
  6390 ;;Total ram usage:        9 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_conteggioVeicoli
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function _Conteggio
  6401  0C8E                     _Conteggio:	
  6402  0C8E                     i1l2109:	
  6403                           ;incstack = 0
  6404                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  6405                           
  6406                           
  6407                           ;./CustomLib/TrafficLight.h: 111: void Conteggio(unsigned int _count, unsigned char _mot
      +                          orcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custo
      +                          mLib/TrafficLight.h: 112: {;./CustomLib/TrafficLight.h: 113:     if (_count >= 500)
  6408  0C8E  3001               	movlw	1
  6409  0C8F  0271               	subwf	Conteggio@_count+1,w
  6410  0C90  30F4               	movlw	244
  6411  0C91  1903               	skipnz
  6412  0C92  0270               	subwf	Conteggio@_count,w
  6413  0C93  1C03               	skipc
  6414  0C94  2C96               	goto	u134_21
  6415  0C95  2C97               	goto	u134_20
  6416  0C96                     u134_21:	
  6417  0C96  2CA7               	goto	i1l2113
  6418  0C97                     u134_20:	
  6419  0C97                     i1l2111:	
  6420                           
  6421                           ;./CustomLib/TrafficLight.h: 114:     {;./CustomLib/TrafficLight.h: 115:         _motorc
      +                          ycle[index] = _motorcycle[index] + 1;
  6422  0C97  0875               	movf	Conteggio@index,w
  6423  0C98  0772               	addwf	Conteggio@_motorcycle,w
  6424  0C99  00F6               	movwf	??_Conteggio
  6425  0C9A  0876               	movf	??_Conteggio,w
  6426  0C9B  0084               	movwf	4
  6427  0C9C  1383               	bcf	3,7	;select IRP bank0
  6428  0C9D  0800               	movf	0,w
  6429  0C9E  3E01               	addlw	1
  6430  0C9F  00F7               	movwf	??_Conteggio+1
  6431  0CA0  0875               	movf	Conteggio@index,w
  6432  0CA1  0772               	addwf	Conteggio@_motorcycle,w
  6433  0CA2  00F8               	movwf	??_Conteggio+2
  6434  0CA3  0878               	movf	??_Conteggio+2,w
  6435  0CA4  0084               	movwf	4
  6436  0CA5  0877               	movf	??_Conteggio+1,w
  6437  0CA6  0080               	movwf	0
  6438  0CA7                     i1l2113:	
  6439                           
  6440                           ;./CustomLib/TrafficLight.h: 117:     if (_count >= 1500)
  6441  0CA7  3005               	movlw	5
  6442  0CA8  0271               	subwf	Conteggio@_count+1,w
  6443  0CA9  30DC               	movlw	220
  6444  0CAA  1903               	skipnz
  6445  0CAB  0270               	subwf	Conteggio@_count,w
  6446  0CAC  1C03               	skipc
  6447  0CAD  2CAF               	goto	u135_21
  6448  0CAE  2CB0               	goto	u135_20
  6449  0CAF                     u135_21:	
  6450  0CAF  2CC0               	goto	i1l2117
  6451  0CB0                     u135_20:	
  6452  0CB0                     i1l2115:	
  6453                           
  6454                           ;./CustomLib/TrafficLight.h: 118:     {;./CustomLib/TrafficLight.h: 119:         _car[in
      +                          dex] = _car[index] + 1;
  6455  0CB0  0875               	movf	Conteggio@index,w
  6456  0CB1  0773               	addwf	Conteggio@_car,w
  6457  0CB2  00F6               	movwf	??_Conteggio
  6458  0CB3  0876               	movf	??_Conteggio,w
  6459  0CB4  0084               	movwf	4
  6460  0CB5  1383               	bcf	3,7	;select IRP bank0
  6461  0CB6  0800               	movf	0,w
  6462  0CB7  3E01               	addlw	1
  6463  0CB8  00F7               	movwf	??_Conteggio+1
  6464  0CB9  0875               	movf	Conteggio@index,w
  6465  0CBA  0773               	addwf	Conteggio@_car,w
  6466  0CBB  00F8               	movwf	??_Conteggio+2
  6467  0CBC  0878               	movf	??_Conteggio+2,w
  6468  0CBD  0084               	movwf	4
  6469  0CBE  0877               	movf	??_Conteggio+1,w
  6470  0CBF  0080               	movwf	0
  6471  0CC0                     i1l2117:	
  6472                           
  6473                           ;./CustomLib/TrafficLight.h: 121:     if (_count >= 3000)
  6474  0CC0  300B               	movlw	11
  6475  0CC1  0271               	subwf	Conteggio@_count+1,w
  6476  0CC2  30B8               	movlw	184
  6477  0CC3  1903               	skipnz
  6478  0CC4  0270               	subwf	Conteggio@_count,w
  6479  0CC5  1C03               	skipc
  6480  0CC6  2CC8               	goto	u136_21
  6481  0CC7  2CC9               	goto	u136_20
  6482  0CC8                     u136_21:	
  6483  0CC8  2CD9               	goto	i1l166
  6484  0CC9                     u136_20:	
  6485  0CC9                     i1l2119:	
  6486                           
  6487                           ;./CustomLib/TrafficLight.h: 122:     {;./CustomLib/TrafficLight.h: 123:         _truck[
      +                          index] = _truck[index] + 1;
  6488  0CC9  0875               	movf	Conteggio@index,w
  6489  0CCA  0774               	addwf	Conteggio@_truck,w
  6490  0CCB  00F6               	movwf	??_Conteggio
  6491  0CCC  0876               	movf	??_Conteggio,w
  6492  0CCD  0084               	movwf	4
  6493  0CCE  1383               	bcf	3,7	;select IRP bank0
  6494  0CCF  0800               	movf	0,w
  6495  0CD0  3E01               	addlw	1
  6496  0CD1  00F7               	movwf	??_Conteggio+1
  6497  0CD2  0875               	movf	Conteggio@index,w
  6498  0CD3  0774               	addwf	Conteggio@_truck,w
  6499  0CD4  00F8               	movwf	??_Conteggio+2
  6500  0CD5  0878               	movf	??_Conteggio+2,w
  6501  0CD6  0084               	movwf	4
  6502  0CD7  0877               	movf	??_Conteggio+1,w
  6503  0CD8  0080               	movwf	0
  6504  0CD9                     i1l166:	
  6505  0CD9  0008               	return
  6506  0CDA                     __end_of_Conteggio:	
  6507                           
  6508                           	psect	text26
  6509  0A8E                     __ptext26:	
  6510 ;; *************** function _UART_Read *****************
  6511 ;; Defined at:
  6512 ;;		line 388 in file "main.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;		None
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  1    wreg      unsigned char 
  6519 ;; Registers used:
  6520 ;;		wreg
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6526 ;;      Params:         0       0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0
  6529 ;;      Totals:         0       0       0       0       0
  6530 ;;Total ram usage:        0 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_ISR
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           
  6540                           ;psect for function _UART_Read
  6541  0A8E                     _UART_Read:	
  6542  0A8E                     i1l2519:	
  6543                           ;incstack = 0
  6544                           ; Regs used in _UART_Read: [wreg]
  6545                           
  6546  0A8E                     i1l289:	
  6547                           ;main.c: 391:         ;
  6548                           
  6549                           
  6550                           ;main.c: 390:     while (!RCIF)
  6551  0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  6552  0A8F  1303               	bcf	3,6	;RP1=0, select bank0
  6553  0A90  1E8C               	btfss	12,5	;volatile
  6554  0A91  2A93               	goto	u195_21
  6555  0A92  2A94               	goto	u195_20
  6556  0A93                     u195_21:	
  6557  0A93  2A8E               	goto	i1l289
  6558  0A94                     u195_20:	
  6559  0A94                     i1l291:	
  6560                           
  6561                           ;main.c: 392:     RCIF = 0;
  6562  0A94  128C               	bcf	12,5	;volatile
  6563  0A95                     i1l2521:	
  6564                           
  6565                           ;main.c: 393:     return RCREG;
  6566  0A95  081A               	movf	26,w	;volatile
  6567  0A96                     i1l292:	
  6568  0A96  0008               	return
  6569  0A97                     __end_of_UART_Read:	
  6570  007E                     btemp	set	126	;btemp
  6571  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        8
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      70
    BANK1            80     10      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    DigitsArr	PTR struct .[2] size(1) Largest target is 3
		 -> digits1(BANK1[3]), digits0(BANK1[3]), 

    Semafori	PTR struct .[2] size(1) Largest target is 14
		 -> s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK1[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    GetDigits@_digits	PTR PTR struct . size(1) Largest target is 2
		 -> DigitsArr(BANK0[2]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _rand->___lmul
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->_SetDisplay
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   23461
                                             32 BANK0      9     9      0
                                              0 BANK1     10    10      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                           _init_ADC
                       _luciSemaforo
                                _map
                               _rand
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     316
                                             17 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    5528
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2616
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     183
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         13    13      0     668
                                              4 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  3     3      0    3194
                                             11 BANK0      3     3      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           7     3      4    1514
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    10     9      1    1618
                                             12 BANK0     10     9      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    12     5      7    1395
                                              4 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            9     6      3    3993
                                             20 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     721
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
     ___bmul
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _UpdateTimes
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _rand
     ___lmul
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      A      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9B      12        0.0%
ABS                  0      0      9B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jul 13 21:51:54 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                      ___awdiv@sign 0031                                _s0 00C1  
                              _s1 00B3                                fsr 0004               ___wmul@multiplicand 0026  
                  _GetDigits$1203 003A                 luciSemaforo@index 0027                       __CFG_LVP$ON 0000  
                             l111 05F2                               l105 05A1                               l114 061A  
                             l127 07E9                               l311 0CDE                               l223 0356  
                             l160 0552                               l320 0D01                               l137 0BFE  
                             l321 0D05                               l313 0CE2                               l225 0080  
                             l154 0E94                               l314 0CE6                               l322 0D2C  
                             l242 0261                               l149 06D1                               l318 0CFD  
                             l271 0AF1                               l343 077E                               l255 0405  
                             l504 0F77                               l280 0AA1                               l329 0D81  
                             l265 0AB4                               l441 0B18                               l169 0B7E  
                             l514 0FFF                               l274 0BB8                               l258 0479  
                             l268 0AE5                               l605 0E34                               l453 0C8D  
                             l277 0A9A                               l439 0B00                               l279 0A9E  
                             l465 0ACB                               l297 0B49                               l592 0F62  
                             l889 0C45                      __CFG_CPD$OFF 0000                               _ISR 0D82  
                             _car 00D3                               _map 0B4A                               fsr0 0004  
                             indf 0000                      ___awmod@sign 002A                      __CFG_FOSC$HS 0000  
                            ?_ISR 0070             ??_ShowDigitsOnDisplay 002B                              l3101 0BF2  
                            l3103 0BFA                              l3111 0D30                              l3031 0573  
                            l3113 0D31                              l3121 0D71                              l3201 0FE1  
                            l3033 0574                              l3025 0556                              l3211 0EFA  
                            l3115 0D4F                              l3203 0FE7                              l3131 0AF6  
                            l3051 05A7                              l3027 0565                              l3107 0A9A  
                            l3221 0F0C                              l3213 0EFD                              l3117 0D52  
                            l3205 0FEC                              l3133 0AFA                              l3061 05C3  
                            l3053 05AF                              l3045 057A                              l3029 0572  
                            l3109 0A9F                              l3231 0F20                              l3223 0F11  
                            l3215 0F01                              l3207 0FF7                              l3311 07D9  
                            l3135 0B07                              l3151 0C74                              l3143 0C46  
                            l3047 058E                              l3039 0576                              l3241 0F46  
                            l3233 0F27                              l3225 0F15                              l3217 0F06  
                            l3161 0ABD                              l3401 0BB5                              l3305 0784  
                            l3137 0B0E                              l3129 0AF2                              l3153 0C85  
                            l3145 0C50                              l3081 0605                              l3073 05CB  
                            l3057 05B0                              l3049 0594                              l3251 0F5E  
                            l3243 0F47                              l3235 0F2B                              l3227 0F17  
                            l3219 0F08                              l3163 0AC1                              l3331 0620  
                            l3171 0F63                              l3403 0BB6                              l3315 07DF  
                            l3307 07B2                              l3139 0B14                              l3147 0C54  
                            l3411 0C2E                              l3075 05DF                              l3067 05C7  
                            l3059 05B6                              l3245 0F4E                              l3237 0F2F  
                            l3229 0F1D                              l3261 0DE6                              l3165 0AC3  
                            l3157 0AB8                              l3333 0645                              l3341 06A2  
                            l3325 061E                              l3093 0BBC                              l3181 0F8A  
                            l3173 0F66                              l3405 0BB7                              l3317 07E3  
                            l3309 07D5                              l3149 0C6B                              l3085 0606  
                            l3077 05E5                              l3431 0ACF                              l3239 0F40  
                            l3247 0F54                              l3271 0DFA                              l3263 0DE8  
                            l3255 0DDA                              l3167 0ACA                              l3159 0AB9  
                            l3343 06A6                              l3335 066A                              l3319 061B  
                            l3095 0BCB                              l3191 0FAE                              l3183 0F92  
                            l3175 0F6A                              l3407 0BFF                              l3087 060C  
                            l3079 05F8                              l3423 0B30                              l3415 0B1C  
                            l3511 0035                              l3433 0ADB                              l3249 0F59  
                            l3281 0E19                              l3273 0E01                              l3265 0DEC  
                            l3257 0DDD                              l3345 06AC                              l3097 0BD3  
                            l3361 0E40                              l3193 0FB7                              l3185 0F9A  
                            l3177 0F7B                              l3441 0CDD                              l3409 0C20  
                            l3089 0619                              l3425 0B39                              l3417 0B2F  
                            l3521 0042                              l3513 003B                              l3435 0AE2  
                            l3283 0E20                              l3275 0E05                              l3267 0DF1  
                            l3259 0DE1                              l3347 06B0                              l3339 068F  
                            l3099 0BE4                              l3363 0E4F                              l3355 0E38  
                            l3195 0FC9                              l3187 0F9D                              l3179 0F86  
                            l3427 0B3F                              l3611 0263                              l3531 0051  
                            l3523 0046                              l3515 003C                              l3437 0AE9  
                            l3277 0E09                              l3269 0DF7                              l3285 0E26  
                            l3381 0518                              l3373 0489                              l3349 06B6  
                            l3365 0E5D                              l3357 0E39                              l3197 0FD7  
                            l3189 0FAA                              l3293 0782                              l3445 0CEA  
                            l3453 0D1C                              l3429 0B43                              l3621 0319  
                            l3613 02F1                              l3605 024D                              l3541 0078  
                            l3533 005C                              l3525 0048                              l3517 003E  
                            l3287 0E2B                              l3279 0E13                              l3383 052B  
                            l3375 048A                              l3367 0E70                              l3199 0FD8  
                            l3391 0AA6                              l3631 032E                              l3615 02FC  
                            l3607 0252                              l3551 0082                              l3543 0079  
                            l3535 0073                              l3527 004A                              l3519 0040  
                            l3289 0E30                              l3377 049F                              l3369 0E8F  
                            l3481 06E1                              l3473 06D2                              l3393 0AA9  
                            l3449 0D09                              l3385 0B4A                              l3633 0334  
                            l3625 0320                              l3617 0309                              l3609 025A  
                            l3561 00B1                              l3641 0341                              l3545 007A  
                            l3537 0076                              l3529 004C                              l3379 04BB  
                            l3483 06FC                              l3299 0783                              l3395 0AAD  
                            l3651 0363                              l3643 035B                              l3635 0337  
                            l3627 0325                              l3619 0316                              l3571 00EA  
                            l3563 00BF                              l3547 007B                              l3539 0077  
                            l3485 0707                              l3493 0749                              l3397 0B7F  
                            l3389 0AA2                              l3661 037C                              l3653 0365  
                            l3645 035C                              l3637 033D                              l3573 012F  
                            l3581 01FE                              l3565 00C6                              l3557 0085  
                            ?_map 0034                              l3487 0711                              l3495 075C  
                            l3479 06D6                              l3399 0B87                              l3671 03E5  
                            l3647 035D                              l3655 036F                              l3575 0174  
                            l3583 0218                              l3567 00D4                              l3559 00AC  
                            l3497 0762                              l3489 072C                              l3681 0415  
                            l3673 03F1                              l3665 0383                              l3657 0375  
                            l3649 035F                              l3593 0228                              l3585 0220  
                            l3577 01B9                              l3569 00DB                              l3499 0768  
                            l3691 046D                              l3683 0428                              l3675 03F9  
                            l3667 0396                              l3659 0379                              l3595 0237  
                            l3587 0226                              l3693 0473                              l3677 03FA  
                            l3669 03DF                              l3685 045F                              l3597 023D  
                            l3941 020A                              l3951 0751                              l3695 0477  
                            l3679 03FF                              l3943 034E                              l3599 024A  
                            l3953 0D79                              l3945 0CF2                              l3697 047D  
                            l3689 0468                              l3955 0697                              l3947 0D11  
                            l3699 0481                              l3949 0D24                              u3000 0768  
                            u3001 0767                              u3100 031F                              u3101 031E  
                            u3110 0334                              u3030 007F                              u3111 0333  
                            u3031 007E                              u3200 03F9                              u3120 033D  
                            u3040 00B1                              u3201 03F8                              u3121 033C  
                            u3041 00B0                              u2410 0619                              u3210 03FF  
                            u3130 035B                              u3050 00C6                              u2411 0618  
                            u3211 03FE                              u3131 035A                              u3051 00C5  
                            u2404 05FE                              u2340 05A1                              u3220 0473  
                            u3140 0363                              u3060 00DB                              u2405 05FC  
                            u2341 05A0                              u2325 0568                              u3221 0472  
                            u3141 0362                              u3061 00DA                              u2350 05A7  
                            u2334 0586                              u2430 0A9E                              u3230 0477  
                            u3150 0375                              u3070 0226                              u2415 0615  
                            u2351 05A6                              u2335 0584                              u2431 0A9D  
                            u3231 0476                              u3151 0374                              u3071 0225  
                            u2440 0AFA                              u2520 0C85                              u2360 05C3  
                            u3240 047D                              u3160 0379                              u3080 024A  
                            u2425 0BD9                              u2441 0AF9                              u2521 0C84  
                            u2505 0C6D                              u2361 05C2                              u2345 059D  
                            u3241 047C                              u3161 0378                              u3081 0249  
                            u2530 0ABD                              u2610 0FC9                              u3250 0481  
                            u3170 0382                              u3090 0260                              u2531 0ABC  
                            u2611 0FC8                              u2515 0C75                              u3251 0480  
                            u3171 0381                              u3091 025F                              u2540 0ACA  
                            u2380 05F2                              u3180 0396                              u2541 0AC9  
                            u2605 0FB0                              u2381 05F1                              u2365 05BF  
                            u3181 0395                              u3085 0246                              u2710 0F40  
                            u2630 0FE7                              u2550 0F6A                              u2470 0B14  
                            u2390 05F8                              u2374 05D7                              u3190 03DF  
                            u2711 0F3F                              u2631 0FE6                              u2615 0FC5  
                            u2551 0F69                              u2471 0B13                              u2455 0B01  
                            u2391 05F7                              u2375 05D5                              u3191 03DE  
                            u2800 0E13                              u2640 0FEC                              u2560 0F7B  
                            u2480 0C54                              u2705 0F30                              u2801 0E12  
                            u2641 0FEB                              u2625 0FD9                              u2561 0F7A  
                            u2465 0B08                              u2481 0C53                              u2385 05EE  
                            u2730 0F54                              u2650 0F01                              u2570 0F9A  
                            u2731 0F53                              u2715 0F3C                              u2651 0F00  
                            u2571 0F99                              u2491 0C5D                              u2740 0F59  
                            u2660 0F0C                              u2820 0E26                              u2492 0C64  
                            u2741 0F58                              u2725 0F48                              u2661 0F0B  
                            u2821 0E25                              u2805 0E0F                              u3277 0AB1  
                            u2493 0C6B                              u2670 0F1D                              u2830 0E2B  
                            u2750 0DE1                              u2910 04BB                              u2590 0FAE  
                            u3287 0ADF                              u2671 0F1C                              u2831 0E2A  
                            u2815 0E1A                              u2751 0DE0                              u2911 04BA  
                            u2591 0FAD                              u2760 0DEC                              u2920 0B96  
                            u2840 07B2                              u2761 0DEB                              u2905 0E65  
                            u2585 0F9F                              u2841 07B1                              u2690 0F2F  
                            u2770 0DF7                              u2850 07DF                              u2930 0C3D  
                            u2691 0F2E                              u2771 0DF6                              u2915 04B7  
                            u2851 07DE                              u2860 07E9                              u2940 0B49  
                            u2685 0F21                              u2925 0B91                              u2861 07E8  
                            u2845 07AE                              u2941 0B48                              u2790 0E09  
                            u2870 06AC                              u2791 0E08                              u2871 06AB  
                            u2935 0C38                              u2960 0AE9                              u2880 06B6  
                            u2961 0AE8                              u2785 0DFB                              u2881 06B5  
                            u2890 0E3F                              u2970 06E1                              u2955 0AD2  
                            u2891 0E3E                              u2971 06E0                              u2980 0707  
                            _RCIF 0065                              u2981 0706                              u2990 0711  
                            u2991 0710                              _TMR0 0001                              _TXIF 0064  
                    __CFG_WRT$OFF 0000                              _disp 0055                              _main 0035  
                            _rand 0BFF                              _temp 0051                              _time 0049  
                            map@x 0034                              btemp 007E                  __end_of_ADC_Read 0AF2  
                   __CFG_BOREN$ON 0000                              start 0010                   __end_of_GetTime 0BFF  
               ___bmul@multiplier 0027                             ??_ISR 0020         __size_of_conteggioVeicoli 0065  
                           ??_map 003E                   __end_of___aldiv 1000                             ?_main 0070  
                           ?_rand 0031                   __end_of___awdiv 0F63                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 0E35                   ___awdiv@divisor 002B                             _T1CON 0010  
                           i1l305 0EF9                             i1l166 0CD9                             i1l353 0DD1  
                           i1l291 0A94                             i1l292 0A96                             i1l289 0A8E  
                 ___awdiv@counter 0030                             _RCREG 001A              UpdateTimes@_semafori 002E  
                           _TMR1H 000F                             _TMR1L 000E                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _TRISE 0089  
                           _TXREG 0019               ___lmul@multiplicand 0028                     __CFG_PWRTE$ON 0000  
              __size_of_UART_Init 003A                __size_of_UART_Read 0009                   __end_of_display 0811  
                           _count 004D                             _randx 005E                             main@i 00E6  
                           _truck 00CF                             pclath 000A                             status 0003  
                           wtemp0 007E                   __initialization 0013                      __end_of_main 0486  
                    __end_of_rand 0C46         __size_of_SetReceivedTimes 0060                __size_of_GetDigits 00CD  
                          ??_main 0040                            ??_rand 0033                 SetDefaultTimers@i 002F  
               SetDefaultTimers@l 002E                __size_of_BuildByte 00C8                        _SetDisplay 0D2D  
                          _ADCON0 001F                            _ADCON1 009F                __size_of_Conteggio 004C  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 002D  
                          i1l2111 0C97                            i1l2113 0CA7                            i1l2115 0CB0  
                          i1l2117 0CC0                            i1l2109 0C8E                            i1l2119 0CC9  
                          i1l2521 0A95                            i1l2531 0EB6                            i1l2541 0EEF  
                          i1l2533 0EBF                            i1l2525 0E95                            i1l2519 0A8E  
                          i1l2543 0EF3                            i1l2535 0EC8                            i1l2527 0EB5  
                          i1l2537 0ED0                            i1l2801 0DCD                            i1l2539 0EEB  
                          i1l2803 0DCF                            i1l2761 0D82                            i1l2771 0D93  
                          i1l2763 0D86                            i1l2781 0DAE                            i1l2773 0D97  
                          i1l2765 0D8A                            i1l2791 0DBD                            i1l2783 0DAF  
                          i1l2775 0DA5                            i1l2767 0D8D                            i1l2793 0DC1  
                          i1l2785 0DB4                            i1l2777 0DA9                            i1l2769 0D8F  
                          i1l2795 0DC7                            i1l2787 0DB8                            i1l2779 0DAA  
                          i1l2797 0DC8                            i1l2789 0DBC                            i1l2799 0DC9  
                          u134_20 0C97                            u230_20 0DBC                            u134_21 0C96  
                          u230_21 0DBB                            u135_20 0CB0                            u231_20 0DC7  
                          u135_21 0CAF                            u231_21 0DC6                            u136_20 0CC9  
                          u136_21 0CC8                            u225_20 0D86                            _INTCON 000B  
                          u225_21 0D85                            u226_20 0D8A                            u226_21 0D89  
                          u227_20 0D93                            u227_21 0D92                            u228_20 0D97  
                          u228_21 0D96                            u229_20 0DAE                            u229_21 0DAD  
                          u195_20 0A94                            u195_21 0A93                            u196_20 0EBF  
                          u196_21 0EBE                            u197_20 0ED0                            u197_21 0ECF  
                          u198_20 0EF9                            u198_21 0EF8                            _TMR0IF 005A  
                          _TMR1IF 0060                         ??_GetTime 0026                      ?_UART_TxChar 0070  
                   main@randomCar 00DE                 __end_of_UART_Init 0BB9                 __end_of_UART_Read 0A97  
                          ___bmul 0AB5                            ___lmul 0C46                         ??___aldiv 002C  
                 GetTime@shortInt 0029                            ___wmul 0AF2                         ??___awdiv 002F  
                       ??___awmod 0028                  __end_of_init_ADC 0AB5                            _cycled 0056  
                ___awdiv@quotient 0032                   ___awmod@divisor 0024                   ___awmod@counter 0029  
                __end_of_sendByte 0B4A                         ?_ADC_Read 0024                            saved_w 007E  
         __end_of__initialization 0031                 __end_of_GetDigits 0553                     ??_UpdateTimes 0024  
       __size_of_SetDefaultTimers 00B7               ___bmul@multiplicand 0024                    __pcstackCOMMON 0070  
               __end_of_BuildByte 061B                      __pidataBANK0 0A86                  _conteggioVeicoli 0E95  
               __end_of_Conteggio 0CDA                     ?_luciSemaforo 0024                        ??_ADC_Read 0026  
          SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024  
                   GetDigits@Time 0035              _dataFromGatewayIndex 0053              _timerReadFromGateway 0052  
                      __pbssBANK0 0049                        __pbssBANK1 00A0                        __pmaintext 0035  
                         ?___bmul 0024  ShowDigitsOnDisplay@display_index 002D                           ?___lmul 0024  
                         ?___wmul 0024                    ??_luciSemaforo 0025               __end_of_UpdateTimes 07EA  
                   sendByte@byte0 003D                     sendByte@byte1 0038                        __pintentry 0004  
                  ___lmul@product 002D                  _SetReceivedTimes 0E35       __end_of_ShowDigitsOnDisplay 077F  
                      __stringtab 0800                         ?_init_ADC 0070                           _GetTime 0BB9  
                 BuildByte@valore 0025                   BuildByte@txByte 0029           GetTime@_dataFromGateway 0024  
                       ?_sendByte 0038                    main@randomMoto 00DD                        _n_semafori 0811  
            __size_of_UART_TxChar 000B                           ___aldiv 0F63                   __size_of___bmul 0017  
                         ___awdiv 0EFA                   __size_of___lmul 0048                           ___awmod 0DDA  
             __size_of_SetDisplay 0055                   __size_of___wmul 0027                 conteggioVeicoli@i 007D  
                         _digits0 00DA                           _digits1 00D7                           __ptext1 0B19  
                         __ptext2 0A97                           __ptext3 0553                           __ptext4 0BFF  
                         __ptext5 0C46                           __ptext6 0B4A                           __ptext7 0AF2  
                         __ptext8 0CDA                           __ptext9 0AA2                           _display 0806  
                    __size_of_ISR 0058                      __size_of_map 0035                  ___awmod@dividend 0026  
                ___aldiv@dividend 0028              BuildByte@sommaColumn 002F                           _umidita 0050  
                         clrloop0 0A7F                  GetDigits@_digits 003C              end_of_initialization 0031  
                      ??_init_ADC 0024                    main@lux_select 00E4                       _UpdateTimes 077F  
                      ??_sendByte 003A                  _SetDefaultTimers 061B                         _RCSTAbits 0018  
                ___aldiv@quotient 002F                        _motorcycle 005A                         _UART_Init 0B7F  
                       _UART_Read 0A8E             SetReceivedTimes@index 0034                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                      SetDisplay@d1 0024  
                    SetDisplay@d2 0025                      SetDisplay@d3 0026                         _TRISCbits 0087  
               __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0EFA              __end_of_luciSemaforo 0D2D  
                      map@out_max 003C                        map@out_min 003A  SetReceivedTimes@_dataFromGateway 0033  
                       _TXSTAbits 0098                         _GetDigits 0486                         _DigitsArr 0062  
                  __end_of___bmul 0ACC                    __end_of___lmul 0C8E                    __end_of___wmul 0B19  
                      ?_UART_Init 0033                        ?_UART_Read 0070                         _BuildByte 0553  
                       _Conteggio 0C8E                 BuildByte@sommaRow 002E               start_initialization 0013  
                     __end_of_ISR 0DDA                      ??_SetDisplay 0028                       __end_of_map 0B7F  
        __end_of_SetReceivedTimes 0E95                        ?_GetDigits 0034                          ??___bmul 0025  
                        ??___lmul 002C                    ADC_Read@canale 0027                          ??___wmul 0028  
                      init_fetch0 07EA                       __pdataBANK0 005E                __end_of_SetDisplay 0D82  
                  GetDigits@index 0034                        ?_BuildByte 0024                        ?_Conteggio 0070  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK1 00DD  
                        ?_GetTime 0024             SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024  
               __size_of_init_ADC 0013                 __size_of_sendByte 0031                          ?___aldiv 0024  
                        ?___awdiv 002B                          ?___awmod 0024                       ??_UART_Init 0035  
                     ??_UART_Read 0070                    BuildByte@i_341 0036                         __pstrings 0800  
                  BuildByte@y_342 0032                    sendByte@valore 0039                    sendByte@txByte 003E  
                  BuildByte@byte0 0028                    BuildByte@byte1 0024          __end_of_SetDefaultTimers 06D2  
                        _ADC_Read 0ACC             __size_of_luciSemaforo 0053                         _count_lux 0054  
                   UART_TxChar@ch 0024      __size_of_ShowDigitsOnDisplay 00AD                   ___aldiv@divisor 0024  
               SetReceivedTimes@i 0035                 interrupt_function 0004                   ___aldiv@counter 002D  
                  ___wmul@product 0028        SetReceivedTimes@semaforoId 0031                      ?_UpdateTimes 0070  
                       clear_ram0 0A7E                          _PIE1bits 008C                     ??_UART_TxChar 0024  
                     ??_GetDigits 0037                          _GO_nDONE 00FA                      _luciSemaforo 0CDA  
                       _pressione 004F                 UART_Init@baudrate 0033                       ??_BuildByte 0026  
                       map@in_max 0038                         map@in_min 0036                       __stringbase 0805  
                       main@i_480 00E2                         main@i_481 00E0                         main@i_483 00E1  
                       main@i_485 00E5                       ??_Conteggio 0076                 ___wmul@multiplier 0024  
                    GetTime@index 0028                 ___lmul@multiplier 0024                      _RoadsSensors 00A0  
               ?_conteggioVeicoli 0070                      _secondPassed 0057                ??_conteggioVeicoli 0079  
                __size_of_GetTime 0046                          _Semafori 0064                   main@randomTruck 00DF  
                     _readGateway 0058                  __size_of___aldiv 009D               __end_of_UART_TxChar 0AA2  
                __size_of___awdiv 0069                  __size_of___awmod 005B                __end_of__stringtab 0806  
                       sendByte@i 003F                          __ptext10 077F                          __ptext11 0B7F  
                        __ptext20 0DDA                          __ptext12 0F63                          __ptext21 0EFA  
                        __ptext13 06D2                          __ptext22 0ACC                          __ptext14 0D2D  
                        __ptext23 0D82                          __ptext15 0E35                          __ptext24 0E95  
                        __ptext16 0BB9                          __ptext25 0C8E                          __ptext17 061B  
                        __ptext26 0A8E                          __ptext18 0486                          __ptext19 0AB5  
              __end_of_n_semafori 0812           SetDisplay@display_index 002A                          _init_ADC 0AA2  
               ?_SetReceivedTimes 002C                     __size_of_main 0451                   _dataFromGateway 00A4  
                   __size_of_rand 0047                          _sendByte 0B19                ??_SetReceivedTimes 002D  
                      _INTCONbits 000B                          init_ram0 07EE              Conteggio@_motorcycle 0072  
                        intlevel1 0000                   _readGatewayDone 0059                         stringcode 0800  
                     _UART_TxChar 0A97           SetReceivedTimes@colorId 0032              __size_of_UpdateTimes 006B  
                      GetTime@tmp 002A               _ShowDigitsOnDisplay 06D2                        _OPTION_REG 0081  
                 SetDisplay@value 0027                          stringdir 0800                          stringtab 0800  
                    UpdateTimes@i 002F                      UpdateTimes@l 0030                 ?_SetDefaultTimers 0024  
                    ___aldiv@sign 002E                ??_SetDefaultTimers 002B              ?_ShowDigitsOnDisplay 0070  
                      BuildByte@i 0034                        BuildByte@y 0030         SetDefaultTimers@_semafori 002A  
                 Conteggio@_count 0070                     Conteggio@_car 0073                   Conteggio@_truck 0074  
                  Conteggio@index 0075  
