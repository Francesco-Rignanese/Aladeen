

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jul 12 16:31:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.10
    47                           ; Generated 31/07/2019 GMT
    48                           ; 
    49                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200                           
   201                           	psect	idataBANK0
   202  08E1                     __pidataBANK0:	
   203                           
   204                           ;initializer for _Semafori
   205  08E1  34D7               	retlw	low (_s0| 0)
   206  08E2  3400               	retlw	high (_s0| 0)
   207  08E3  34C9               	retlw	low (_s1| 0)
   208  08E4  3400               	retlw	high (_s1| 0)
   209  08E5  34BB               	retlw	low (_s2| 0)
   210  08E6  3400               	retlw	high (_s2| 0)
   211  08E7  3490               	retlw	low (_s3| (0+256))
   212  08E8  3401               	retlw	high (_s3| (0+256))
   213                           
   214                           	psect	strings
   215  0800                     __pstrings:	
   216  0800                     stringtab:	
   217  0800                     __stringtab:	
   218  0800                     stringcode:	
   219                           ;	String table - string pointers are 1 byte each
   220                           
   221  0800                     stringdir:	
   222  0800  3008               	movlw	high stringdir
   223  0801  008A               	movwf	10
   224  0802  0804               	movf	4,w
   225  0803  0A84               	incf	4,f
   226  0804  0782               	addwf	2,f
   227  0805                     __stringbase:	
   228  0805  3400               	retlw	0
   229  0806                     __end_of__stringtab:	
   230  0806                     _display:	
   231  0806  343F               	retlw	63
   232  0807  3406               	retlw	6
   233  0808  345B               	retlw	91
   234  0809  344F               	retlw	79
   235  080A  3466               	retlw	102
   236  080B  346D               	retlw	109
   237  080C  347D               	retlw	125
   238  080D  3407               	retlw	7
   239  080E  347F               	retlw	127
   240  080F  346F               	retlw	111
   241  0810  3400               	retlw	0
   242  0811                     __end_of_display:	
   243  0811                     _n_semafori:	
   244  0811  3402               	retlw	2
   245  0812                     __end_of_n_semafori:	
   246  0008                     _PORTD	set	8
   247  0005                     _PORTAbits	set	5
   248  001A                     _RCREG	set	26
   249  0019                     _TXREG	set	25
   250  000B                     _INTCONbits	set	11
   251  0018                     _RCSTAbits	set	24
   252  001E                     _ADRESH	set	30
   253  001F                     _ADCON0	set	31
   254  0006                     _PORTBbits	set	6
   255  0007                     _PORTCbits	set	7
   256  000E                     _TMR1L	set	14
   257  000F                     _TMR1H	set	15
   258  0010                     _T1CON	set	16
   259  0001                     _TMR0	set	1
   260  000B                     _INTCON	set	11
   261  0060                     _TMR1IF	set	96
   262  005A                     _TMR0IF	set	90
   263  0065                     _RCIF	set	101
   264  0064                     _TXIF	set	100
   265  00FA                     _GO_nDONE	set	250
   266  008C                     _PIE1bits	set	140
   267  0099                     _SPBRG	set	153
   268  0098                     _TXSTAbits	set	152
   269  0087                     _TRISCbits	set	135
   270  009E                     _ADRESL	set	158
   271  009F                     _ADCON1	set	159
   272  0085                     _TRISA	set	133
   273  0081                     _OPTION_REG	set	129
   274  0089                     _TRISE	set	137
   275  0088                     _TRISD	set	136
   276  0087                     _TRISC	set	135
   277  0086                     _TRISB	set	134
   278                           
   279                           ; #config settings
   280  0000                     
   281                           	psect	cinit
   282  0013                     start_initialization:	
   283  0013                     __initialization:	
   284                           
   285                           ; Initialize objects allocated to BANK0
   286  0013  1383               	bcf	3,7	;select IRP bank0
   287  0014  3068               	movlw	low (__pdataBANK0+8)
   288  0015  00FD               	movwf	btemp+-1
   289  0016  3008               	movlw	high __pidataBANK0
   290  0017  00FE               	movwf	btemp
   291  0018  30E1               	movlw	low __pidataBANK0
   292  0019  00FF               	movwf	btemp+1
   293  001A  3060               	movlw	low __pdataBANK0
   294  001B  0084               	movwf	4
   295  001C  120A  158A  2109  120A  118A  	fcall	init_ram0
   296                           
   297                           ; Clear objects allocated to BANK3
   298  0021  1783               	bsf	3,7	;select IRP bank2
   299  0022  3090               	movlw	low __pbssBANK3
   300  0023  0084               	movwf	4
   301  0024  309E               	movlw	low (__pbssBANK3+14)
   302  0025  120A  158A  20D9  120A  118A  	fcall	clear_ram0
   303                           
   304                           ; Clear objects allocated to BANK1
   305  002A  1383               	bcf	3,7	;select IRP bank0
   306  002B  30A0               	movlw	low __pbssBANK1
   307  002C  0084               	movwf	4
   308  002D  30E9               	movlw	low (__pbssBANK1+73)
   309  002E  120A  158A  20D9  120A  118A  	fcall	clear_ram0
   310                           
   311                           ; Clear objects allocated to BANK0
   312  0033  3048               	movlw	low __pbssBANK0
   313  0034  0084               	movwf	4
   314  0035  3060               	movlw	low (__pbssBANK0+24)
   315  0036  120A  158A  20D9  120A  118A  	fcall	clear_ram0
   316  003B                     end_of_initialization:	
   317                           ;End of C runtime variable initialization code
   318                           
   319  003B                     __end_of__initialization:	
   320  003B  0183               	clrf	3
   321  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   322                           
   323                           	psect	bssBANK0
   324  0048                     __pbssBANK0:	
   325  0048                     _count:	
   326  0048                     	ds	2
   327  004A                     _pressione:	
   328  004A                     	ds	1
   329  004B                     _umidita:	
   330  004B                     	ds	1
   331  004C                     _temp:	
   332  004C                     	ds	1
   333  004D                     _timerReadFromGateway:	
   334  004D                     	ds	1
   335  004E                     _dataFromGatewayIndex:	
   336  004E                     	ds	1
   337  004F                     _count_lux:	
   338  004F                     	ds	1
   339  0050                     _disp:	
   340  0050                     	ds	1
   341  0051                     _cycled:	
   342  0051                     	ds	1
   343  0052                     _secondPassed:	
   344  0052                     	ds	1
   345  0053                     _readGateway:	
   346  0053                     	ds	1
   347  0054                     _readGatewayDone:	
   348  0054                     	ds	1
   349  0055                     _car:	
   350  0055                     	ds	4
   351  0059                     _motorcycle:	
   352  0059                     	ds	4
   353  005D                     _centinaia:	
   354  005D                     	ds	1
   355  005E                     _decine:	
   356  005E                     	ds	1
   357  005F                     _unita:	
   358  005F                     	ds	1
   359                           
   360                           	psect	dataBANK0
   361  0060                     __pdataBANK0:	
   362  0060                     _Semafori:	
   363  0060                     	ds	8
   364                           
   365                           	psect	bssBANK1
   366  00A0                     __pbssBANK1:	
   367  00A0                     _time:	
   368  00A0                     	ds	8
   369  00A8                     _RoadsSensors:	
   370  00A8                     	ds	4
   371  00AC                     _dataFromGateway:	
   372  00AC                     	ds	15
   373  00BB                     _s2:	
   374  00BB                     	ds	14
   375  00C9                     _s1:	
   376  00C9                     	ds	14
   377  00D7                     _s0:	
   378  00D7                     	ds	14
   379  00E5                     _truck:	
   380  00E5                     	ds	4
   381                           
   382                           	psect	bssBANK3
   383  0190                     __pbssBANK3:	
   384  0190                     _s3:	
   385  0190                     	ds	14
   386                           
   387                           	psect	inittext
   388  0905                     init_fetch0:	
   389                           ;	Called with low address in FSR and high address in W
   390                           
   391  0905  087E               	movf	btemp,w
   392  0906  008A               	movwf	10
   393  0907  087F               	movf	btemp+1,w
   394  0908  0082               	movwf	2
   395  0909                     init_ram0:	
   396                           ;Called with:
   397                           ;	high address of idata address in btemp 
   398                           ;	low address of idata address in btemp+1 
   399                           ;	low address of data in FSR
   400                           ;	high address + 1 of data in btemp-1
   401                           
   402  0909  120A  158A  2105  120A  158A  	fcall	init_fetch0
   403  090E  0080               	movwf	0
   404  090F  0A84               	incf	4,f
   405  0910  0804               	movf	4,w
   406  0911  067D               	xorwf	btemp+-1,w
   407  0912  1903               	btfsc	3,2
   408  0913  3400               	retlw	0
   409  0914  0AFF               	incf	btemp+1,f
   410  0915  1903               	btfsc	3,2
   411  0916  0AFE               	incf	btemp,f
   412  0917  2909               	goto	init_ram0
   413                           
   414                           	psect	clrtext
   415  08D9                     clear_ram0:	
   416                           ;	Called with FSR containing the base address, and
   417                           ;	W with the last address+1
   418                           
   419  08D9  0064               	clrwdt	;clear the watchdog before getting into this loop
   420  08DA                     clrloop0:	
   421  08DA  0180               	clrf	0	;clear RAM location pointed to by FSR
   422  08DB  0A84               	incf	4,f	;increment pointer
   423  08DC  0604               	xorwf	4,w	;XOR with final address
   424  08DD  1903               	btfsc	3,2	;have we reached the end yet?
   425  08DE  3400               	retlw	0	;all done for this memory range, return
   426  08DF  0604               	xorwf	4,w	;XOR again to restore value
   427  08E0  28DA               	goto	clrloop0	;do the next byte
   428                           
   429                           	psect	cstackBANK3
   430  019E                     __pcstackBANK3:	
   431  019E                     ??_main:	
   432                           
   433                           ; 1 bytes @ 0x0
   434  019E                     	ds	13
   435                           
   436                           	psect	cstackCOMMON
   437  0070                     __pcstackCOMMON:	
   438  0070                     ?_init_ADC:	
   439  0070                     ?_ShowDigitsOnDisplay:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_bitParita:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_UpdateTimes:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_Conteggio:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_UART_TxChar:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_UART_Read:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ??_UART_Read:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_conteggioVeicoli:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_ISR:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     Conteggio@_count:	
   470                           ; 1 bytes @ 0x0
   471                           
   472                           
   473                           ; 2 bytes @ 0x0
   474  0070                     	ds	2
   475  0072                     Conteggio@_motorcycle:	
   476                           
   477                           ; 1 bytes @ 0x2
   478  0072                     	ds	1
   479  0073                     Conteggio@_car:	
   480                           
   481                           ; 1 bytes @ 0x3
   482  0073                     	ds	1
   483  0074                     Conteggio@_truck:	
   484                           
   485                           ; 1 bytes @ 0x4
   486  0074                     	ds	1
   487  0075                     Conteggio@index:	
   488                           
   489                           ; 1 bytes @ 0x5
   490  0075                     	ds	1
   491  0076                     ??_Conteggio:	
   492                           
   493                           ; 1 bytes @ 0x6
   494  0076                     	ds	3
   495  0079                     ??_conteggioVeicoli:	
   496                           
   497                           ; 1 bytes @ 0x9
   498  0079                     	ds	4
   499  007D                     conteggioVeicoli@i:	
   500                           
   501                           ; 1 bytes @ 0xD
   502  007D                     	ds	1
   503                           
   504                           	psect	cstackBANK0
   505  0020                     __pcstackBANK0:	
   506  0020                     ??_ISR:	
   507                           
   508                           ; 1 bytes @ 0x0
   509  0020                     	ds	4
   510  0024                     ??_init_ADC:	
   511  0024                     ?_luciSemaforo:	
   512                           ; 1 bytes @ 0x4
   513                           
   514  0024                     ?_BuildByte:	
   515                           ; 1 bytes @ 0x4
   516                           
   517  0024                     ?_bitChange:	
   518                           ; 1 bytes @ 0x4
   519                           
   520  0024                     ??_UpdateTimes:	
   521                           ; 1 bytes @ 0x4
   522                           
   523  0024                     ?_SetDefaultTimers:	
   524                           ; 1 bytes @ 0x4
   525                           
   526  0024                     ??_UART_TxChar:	
   527                           ; 1 bytes @ 0x4
   528                           
   529  0024                     ?_SetDisplay:	
   530                           ; 1 bytes @ 0x4
   531                           
   532  0024                     ?___bmul:	
   533                           ; 1 bytes @ 0x4
   534                           
   535  0024                     ?_ADC_Read:	
   536                           ; 1 bytes @ 0x4
   537                           
   538  0024                     ?_GetTime:	
   539                           ; 2 bytes @ 0x4
   540                           
   541  0024                     ?___wmul:	
   542                           ; 2 bytes @ 0x4
   543                           
   544  0024                     ?___awmod:	
   545                           ; 2 bytes @ 0x4
   546                           
   547  0024                     ?___aldiv:	
   548                           ; 2 bytes @ 0x4
   549                           
   550  0024                     bitChange@n:	
   551                           ; 4 bytes @ 0x4
   552                           
   553  0024                     BuildByte@byte1:	
   554                           ; 1 bytes @ 0x4
   555                           
   556  0024                     GetTime@_dataFromGateway:	
   557                           ; 1 bytes @ 0x4
   558                           
   559  0024                     UART_TxChar@ch:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0024                     SetDisplay@d2:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0024                     luciSemaforo@lux:	
   566                           ; 1 bytes @ 0x4
   567                           
   568  0024                     ___bmul@multiplicand:	
   569                           ; 1 bytes @ 0x4
   570                           
   571  0024                     SetDefaultTimers@rosso:	
   572                           ; 1 bytes @ 0x4
   573                           
   574  0024                     ___wmul@multiplier:	
   575                           ; 2 bytes @ 0x4
   576                           
   577  0024                     ___awmod@divisor:	
   578                           ; 2 bytes @ 0x4
   579                           
   580  0024                     ___aldiv@divisor:	
   581                           ; 2 bytes @ 0x4
   582                           
   583                           
   584                           ; 4 bytes @ 0x4
   585  0024                     	ds	1
   586  0025                     ??_luciSemaforo:	
   587  0025                     ??_bitChange:	
   588                           ; 1 bytes @ 0x5
   589                           
   590  0025                     ??___bmul:	
   591                           ; 1 bytes @ 0x5
   592                           
   593  0025                     BuildByte@valore:	
   594                           ; 1 bytes @ 0x5
   595                           
   596  0025                     SetDisplay@d3:	
   597                           ; 1 bytes @ 0x5
   598                           
   599                           
   600                           ; 1 bytes @ 0x5
   601  0025                     	ds	1
   602  0026                     ??_ADC_Read:	
   603  0026                     ??_BuildByte:	
   604                           ; 1 bytes @ 0x6
   605                           
   606  0026                     ??_GetTime:	
   607                           ; 1 bytes @ 0x6
   608                           
   609  0026                     SetDisplay@value:	
   610                           ; 1 bytes @ 0x6
   611                           
   612  0026                     ___bmul@product:	
   613                           ; 1 bytes @ 0x6
   614                           
   615  0026                     SetDefaultTimers@verde:	
   616                           ; 1 bytes @ 0x6
   617                           
   618  0026                     ___wmul@multiplicand:	
   619                           ; 2 bytes @ 0x6
   620                           
   621  0026                     ___awmod@dividend:	
   622                           ; 2 bytes @ 0x6
   623                           
   624                           
   625                           ; 2 bytes @ 0x6
   626  0026                     	ds	1
   627  0027                     ??_SetDisplay:	
   628  0027                     bitChange@dato:	
   629                           ; 1 bytes @ 0x7
   630                           
   631  0027                     ADC_Read@canale:	
   632                           ; 1 bytes @ 0x7
   633                           
   634  0027                     SetDisplay@d1:	
   635                           ; 1 bytes @ 0x7
   636                           
   637  0027                     luciSemaforo@index:	
   638                           ; 1 bytes @ 0x7
   639                           
   640  0027                     ___bmul@multiplier:	
   641                           ; 1 bytes @ 0x7
   642                           
   643                           
   644                           ; 1 bytes @ 0x7
   645  0027                     	ds	1
   646  0028                     ??_bitParita:	
   647  0028                     ??___wmul:	
   648                           ; 1 bytes @ 0x8
   649                           
   650  0028                     ??___awmod:	
   651                           ; 1 bytes @ 0x8
   652                           
   653  0028                     BuildByte@byte0:	
   654                           ; 1 bytes @ 0x8
   655                           
   656  0028                     GetTime@index:	
   657                           ; 1 bytes @ 0x8
   658                           
   659  0028                     SetDefaultTimers@giallo:	
   660                           ; 1 bytes @ 0x8
   661                           
   662  0028                     ___wmul@product:	
   663                           ; 2 bytes @ 0x8
   664                           
   665  0028                     ___aldiv@dividend:	
   666                           ; 2 bytes @ 0x8
   667                           
   668                           
   669                           ; 4 bytes @ 0x8
   670  0028                     	ds	1
   671  0029                     GetTime@shortInt:	
   672  0029                     ___awmod@counter:	
   673                           ; 1 bytes @ 0x9
   674                           
   675  0029                     BuildByte@txByte:	
   676                           ; 1 bytes @ 0x9
   677                           
   678                           
   679                           ; 5 bytes @ 0x9
   680  0029                     	ds	1
   681  002A                     SetDefaultTimers@_semafori:	
   682  002A                     ___awmod@sign:	
   683                           ; 1 bytes @ 0xA
   684                           
   685  002A                     GetTime@tmp:	
   686                           ; 1 bytes @ 0xA
   687                           
   688                           
   689                           ; 2 bytes @ 0xA
   690  002A                     	ds	1
   691  002B                     ??_ShowDigitsOnDisplay:	
   692  002B                     ??_SetDefaultTimers:	
   693                           ; 1 bytes @ 0xB
   694                           
   695  002B                     ?___awdiv:	
   696                           ; 1 bytes @ 0xB
   697                           
   698  002B                     ___awdiv@divisor:	
   699                           ; 2 bytes @ 0xB
   700                           
   701                           
   702                           ; 2 bytes @ 0xB
   703  002B                     	ds	1
   704  002C                     ?_SetReceivedTimes:	
   705  002C                     ??___aldiv:	
   706                           ; 1 bytes @ 0xC
   707                           
   708  002C                     bitParita@sommaRow:	
   709                           ; 1 bytes @ 0xC
   710                           
   711  002C                     SetReceivedTimes@_semafori:	
   712                           ; 1 bytes @ 0xC
   713                           
   714                           
   715                           ; 1 bytes @ 0xC
   716  002C                     	ds	1
   717  002D                     ??_SetReceivedTimes:	
   718  002D                     bitParita@sommaColumn:	
   719                           ; 1 bytes @ 0xD
   720                           
   721  002D                     ___aldiv@counter:	
   722                           ; 1 bytes @ 0xD
   723                           
   724  002D                     ___awdiv@dividend:	
   725                           ; 1 bytes @ 0xD
   726                           
   727                           
   728                           ; 2 bytes @ 0xD
   729  002D                     	ds	1
   730  002E                     bitParita@errorColumn:	
   731  002E                     BuildByte@sommaRow:	
   732                           ; 1 bytes @ 0xE
   733                           
   734  002E                     ___aldiv@sign:	
   735                           ; 1 bytes @ 0xE
   736                           
   737                           
   738                           ; 1 bytes @ 0xE
   739  002E                     	ds	1
   740  002F                     ??___awdiv:	
   741  002F                     bitParita@error:	
   742                           ; 1 bytes @ 0xF
   743                           
   744  002F                     BuildByte@sommaColumn:	
   745                           ; 1 bytes @ 0xF
   746                           
   747  002F                     ___aldiv@quotient:	
   748                           ; 1 bytes @ 0xF
   749                           
   750                           
   751                           ; 4 bytes @ 0xF
   752  002F                     	ds	1
   753  0030                     bitParita@errorRow:	
   754  0030                     ___awdiv@counter:	
   755                           ; 1 bytes @ 0x10
   756                           
   757  0030                     BuildByte@y:	
   758                           ; 1 bytes @ 0x10
   759                           
   760                           
   761                           ; 2 bytes @ 0x10
   762  0030                     	ds	1
   763  0031                     ___awdiv@sign:	
   764  0031                     bitParita@y:	
   765                           ; 1 bytes @ 0x11
   766                           
   767                           
   768                           ; 2 bytes @ 0x11
   769  0031                     	ds	1
   770  0032                     SetDefaultTimers@l:	
   771  0032                     BuildByte@y_356:	
   772                           ; 1 bytes @ 0x12
   773                           
   774  0032                     ___awdiv@quotient:	
   775                           ; 2 bytes @ 0x12
   776                           
   777                           
   778                           ; 2 bytes @ 0x12
   779  0032                     	ds	1
   780  0033                     ?_UART_Init:	
   781  0033                     SetDefaultTimers@i:	
   782                           ; 1 bytes @ 0x13
   783                           
   784  0033                     bitParita@y_344:	
   785                           ; 1 bytes @ 0x13
   786                           
   787  0033                     UART_Init@baudrate:	
   788                           ; 2 bytes @ 0x13
   789                           
   790                           
   791                           ; 2 bytes @ 0x13
   792  0033                     	ds	1
   793  0034                     ?_GetDigits:	
   794  0034                     ?_map:	
   795                           ; 1 bytes @ 0x14
   796                           
   797  0034                     GetDigits@decine:	
   798                           ; 2 bytes @ 0x14
   799                           
   800  0034                     map@x:	
   801                           ; 1 bytes @ 0x14
   802                           
   803  0034                     BuildByte@i:	
   804                           ; 2 bytes @ 0x14
   805                           
   806                           
   807                           ; 2 bytes @ 0x14
   808  0034                     	ds	1
   809  0035                     ??_UART_Init:	
   810  0035                     GetDigits@unita:	
   811                           ; 1 bytes @ 0x15
   812                           
   813  0035                     bitParita@rx:	
   814                           ; 1 bytes @ 0x15
   815                           
   816  0035                     SetReceivedTimes@semaforoId:	
   817                           ; 1 bytes @ 0x15
   818                           
   819                           
   820                           ; 1 bytes @ 0x15
   821  0035                     	ds	1
   822  0036                     UpdateTimes@i:	
   823  0036                     SetReceivedTimes@colorId:	
   824                           ; 1 bytes @ 0x16
   825                           
   826  0036                     map@in_min:	
   827                           ; 1 bytes @ 0x16
   828                           
   829  0036                     GetDigits@Time:	
   830                           ; 2 bytes @ 0x16
   831                           
   832  0036                     bitParita@i:	
   833                           ; 2 bytes @ 0x16
   834                           
   835  0036                     BuildByte@i_355:	
   836                           ; 2 bytes @ 0x16
   837                           
   838                           
   839                           ; 2 bytes @ 0x16
   840  0036                     	ds	1
   841  0037                     UpdateTimes@_semafori:	
   842  0037                     SetReceivedTimes@_dataFromGateway:	
   843                           ; 1 bytes @ 0x17
   844                           
   845                           
   846                           ; 1 bytes @ 0x17
   847  0037                     	ds	1
   848  0038                     ?_sendByte:	
   849  0038                     ??_GetDigits:	
   850                           ; 1 bytes @ 0x18
   851                           
   852  0038                     UpdateTimes@l:	
   853                           ; 1 bytes @ 0x18
   854                           
   855  0038                     SetReceivedTimes@index:	
   856                           ; 1 bytes @ 0x18
   857                           
   858  0038                     sendByte@byte1:	
   859                           ; 1 bytes @ 0x18
   860                           
   861  0038                     map@in_max:	
   862                           ; 1 bytes @ 0x18
   863                           
   864  0038                     bitParita@i_343:	
   865                           ; 2 bytes @ 0x18
   866                           
   867                           
   868                           ; 2 bytes @ 0x18
   869  0038                     	ds	1
   870  0039                     SetReceivedTimes@i:	
   871  0039                     sendByte@valore:	
   872                           ; 1 bytes @ 0x19
   873                           
   874  0039                     _GetDigits$1200:	
   875                           ; 1 bytes @ 0x19
   876                           
   877                           
   878                           ; 2 bytes @ 0x19
   879  0039                     	ds	1
   880  003A                     ??_sendByte:	
   881  003A                     map@out_min:	
   882                           ; 1 bytes @ 0x1A
   883                           
   884                           
   885                           ; 2 bytes @ 0x1A
   886  003A                     	ds	1
   887  003B                     GetDigits@centinaia:	
   888                           
   889                           ; 1 bytes @ 0x1B
   890  003B                     	ds	1
   891  003C                     map@out_max:	
   892                           
   893                           ; 2 bytes @ 0x1C
   894  003C                     	ds	1
   895  003D                     sendByte@byte0:	
   896                           
   897                           ; 1 bytes @ 0x1D
   898  003D                     	ds	1
   899  003E                     ??_map:	
   900  003E                     sendByte@txByte:	
   901                           ; 1 bytes @ 0x1E
   902                           
   903                           
   904                           ; 1 bytes @ 0x1E
   905  003E                     	ds	1
   906  003F                     sendByte@i:	
   907                           
   908                           ; 1 bytes @ 0x1F
   909  003F                     	ds	1
   910  0040                     main@i_483:	
   911                           
   912                           ; 1 bytes @ 0x20
   913  0040                     	ds	1
   914  0041                     main@i_485:	
   915                           
   916                           ; 1 bytes @ 0x21
   917  0041                     	ds	1
   918  0042                     main@i_482:	
   919                           
   920                           ; 2 bytes @ 0x22
   921  0042                     	ds	2
   922  0044                     main@lux_select:	
   923                           
   924                           ; 1 bytes @ 0x24
   925  0044                     	ds	1
   926  0045                     main@i_488:	
   927                           
   928                           ; 1 bytes @ 0x25
   929  0045                     	ds	1
   930  0046                     main@i:	
   931                           
   932                           ; 2 bytes @ 0x26
   933  0046                     	ds	2
   934                           
   935                           	psect	maintext
   936  003F                     __pmaintext:	
   937 ;;
   938 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
   939 ;;
   940 ;; *************** function _main *****************
   941 ;; Defined at:
   942 ;;		line 127 in file "main.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  lux_select      1   36[BANK0 ] unsigned char 
   947 ;;  i               1   33[BANK0 ] unsigned char 
   948 ;;  i               1   32[BANK0 ] unsigned char 
   949 ;;  i               2   34[BANK0 ] int 
   950 ;;  i               2   38[BANK0 ] int 
   951 ;;  i               1   37[BANK0 ] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : B00/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       8       0       0       0
   963 ;;      Temps:          0       0       0      13       0
   964 ;;      Totals:         0       8       0      13       0
   965 ;;Total ram usage:       21 bytes
   966 ;; Hardware stack levels required when called:    5
   967 ;; This function calls:
   968 ;;		_ADC_Read
   969 ;;		_GetDigits
   970 ;;		_SetDefaultTimers
   971 ;;		_SetReceivedTimes
   972 ;;		_ShowDigitsOnDisplay
   973 ;;		_UART_Init
   974 ;;		_UpdateTimes
   975 ;;		_bitParita
   976 ;;		_init_ADC
   977 ;;		_luciSemaforo
   978 ;;		_map
   979 ;;		_sendByte
   980 ;; This function is called by:
   981 ;;		Startup code after reset
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           
   986                           ;psect for function _main
   987  003F                     _main:	
   988  003F                     l4367:	
   989                           ;incstack = 0
   990                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   991                           
   992                           
   993                           ;main.c: 129:     TRISB = 0x38;
   994  003F  3038               	movlw	56
   995  0040  1683               	bsf	3,5	;RP0=1, select bank1
   996  0041  1303               	bcf	3,6	;RP1=0, select bank1
   997  0042  0086               	movwf	6	;volatile
   998                           
   999                           ;main.c: 130:     TRISC = 0x80;
  1000  0043  3080               	movlw	128
  1001  0044  0087               	movwf	7	;volatile
  1002  0045                     l4369:	
  1003                           
  1004                           ;main.c: 131:     TRISD = 0x00;
  1005  0045  0188               	clrf	8	;volatile
  1006  0046                     l4371:	
  1007                           
  1008                           ;main.c: 132:     TRISE = 0x01;
  1009  0046  3001               	movlw	1
  1010  0047  0089               	movwf	9	;volatile
  1011  0048                     l4373:	
  1012                           
  1013                           ;main.c: 133:     INTCON = 0xE0;
  1014  0048  30E0               	movlw	224
  1015  0049  008B               	movwf	11	;volatile
  1016  004A                     l4375:	
  1017                           
  1018                           ;main.c: 134:     OPTION_REG = 0x04;
  1019  004A  3004               	movlw	4
  1020  004B  0081               	movwf	1	;volatile
  1021  004C                     l4377:	
  1022                           
  1023                           ;main.c: 135:     TMR0 = 6;
  1024  004C  3006               	movlw	6
  1025  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1026  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1027  004F  0081               	movwf	1	;volatile
  1028  0050                     l4379:	
  1029                           
  1030                           ;main.c: 136:     T1CON = 0x31;
  1031  0050  3031               	movlw	49
  1032  0051  0090               	movwf	16	;volatile
  1033  0052                     l4381:	
  1034                           
  1035                           ;main.c: 138:     TMR1H = 60;
  1036  0052  303C               	movlw	60
  1037  0053  008F               	movwf	15	;volatile
  1038  0054                     l4383:	
  1039                           
  1040                           ;main.c: 139:     TMR1L = 176;
  1041  0054  30B0               	movlw	176
  1042  0055  008E               	movwf	14	;volatile
  1043  0056                     l4385:	
  1044                           
  1045                           ;main.c: 142:     init_ADC();
  1046  0056  120A  158A  20F2  120A  118A  	fcall	_init_ADC
  1047  005B                     l4387:	
  1048                           
  1049                           ;main.c: 143:     UART_Init(9600);
  1050  005B  3080               	movlw	128
  1051  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1052  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1053  005E  00B3               	movwf	UART_Init@baudrate
  1054  005F  3025               	movlw	37
  1055  0060  00B4               	movwf	UART_Init@baudrate+1
  1056  0061  120A  158A  2228  120A  118A  	fcall	_UART_Init
  1057  0066                     l4389:	
  1058                           
  1059                           ;main.c: 144:     SetDefaultTimers(6, 4, 2, Semafori);
  1060  0066  3006               	movlw	6
  1061  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0069  00A4               	movwf	SetDefaultTimers@rosso
  1064  006A  3000               	movlw	0
  1065  006B  00A5               	movwf	SetDefaultTimers@rosso+1
  1066  006C  3004               	movlw	4
  1067  006D  00A6               	movwf	SetDefaultTimers@verde
  1068  006E  3000               	movlw	0
  1069  006F  00A7               	movwf	SetDefaultTimers@verde+1
  1070  0070  3002               	movlw	2
  1071  0071  00A8               	movwf	SetDefaultTimers@giallo
  1072  0072  3000               	movlw	0
  1073  0073  00A9               	movwf	SetDefaultTimers@giallo+1
  1074  0074  3060               	movlw	(low (_Semafori| 0))& (0+255)
  1075  0075  1683               	bsf	3,5	;RP0=1, select bank3
  1076  0076  1703               	bsf	3,6	;RP1=1, select bank3
  1077  0077  009E               	movwf	??_main^(0+384)
  1078  0078  081E               	movf	??_main^(0+384),w
  1079  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1080  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1081  007B  00AA               	movwf	SetDefaultTimers@_semafori
  1082  007C  120A  118A  250F  120A  118A  	fcall	_SetDefaultTimers
  1083  0081                     l4391:	
  1084                           
  1085                           ;main.c: 146:     PORTCbits.RC0 = 0;
  1086  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0083  1007               	bcf	7,0	;volatile
  1089  0084                     l4393:	
  1090                           
  1091                           ;main.c: 147:     PORTBbits.RB7 = 0;
  1092  0084  1386               	bcf	6,7	;volatile
  1093  0085                     l4395:	
  1094                           
  1095                           ;main.c: 148:     PORTCbits.RC3 = 0;
  1096  0085  1187               	bcf	7,3	;volatile
  1097  0086                     l4397:	
  1098                           
  1099                           ;main.c: 149:     PORTBbits.RB6 = 0;
  1100  0086  1306               	bcf	6,6	;volatile
  1101  0087                     l4399:	
  1102                           
  1103                           ;main.c: 150:     PORTCbits.RC1 = 0;
  1104  0087  1087               	bcf	7,1	;volatile
  1105  0088                     l4401:	
  1106                           
  1107                           ;main.c: 151:     PORTBbits.RB1 = 0;
  1108  0088  1086               	bcf	6,1	;volatile
  1109  0089                     l4403:	
  1110                           
  1111                           ;main.c: 154:     {;main.c: 156:         if (readGateway.Bit)
  1112  0089  1C53               	btfss	_readGateway,0
  1113  008A  288C               	goto	u4121
  1114  008B  288D               	goto	u4120
  1115  008C                     u4121:	
  1116  008C  2B55               	goto	l236
  1117  008D                     u4120:	
  1118  008D  2B40               	goto	l4483
  1119  008E                     l238:	
  1120                           ;main.c: 159:             {;main.c: 160:             case 0x08:
  1121                           
  1122                           
  1123                           ;main.c: 161:                 readGatewayDone.Bit = 1;
  1124  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1125  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0090  1454               	bsf	_readGatewayDone,0
  1127                           
  1128                           ;main.c: 162:                 readGateway.Bit = 0;
  1129  0091  1053               	bcf	_readGateway,0
  1130  0092                     l4407:	
  1131                           
  1132                           ;main.c: 164:                 for (int i = 0; i < 4; i++)
  1133  0092  01C6               	clrf	main@i
  1134  0093  01C7               	clrf	main@i+1
  1135  0094  29B9               	goto	l4423
  1136  0095                     l4413:	
  1137                           
  1138                           ;main.c: 169:                         sendByte(0x03, 0x01, motorcycle[i]);
  1139  0095  01B8               	clrf	sendByte@byte1
  1140  0096  0AB8               	incf	sendByte@byte1,f
  1141  0097  0846               	movf	main@i,w
  1142  0098  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1143  0099  0084               	movwf	4
  1144  009A  1383               	bcf	3,7	;select IRP bank0
  1145  009B  0800               	movf	0,w
  1146  009C  1683               	bsf	3,5	;RP0=1, select bank3
  1147  009D  1703               	bsf	3,6	;RP1=1, select bank3
  1148  009E  009E               	movwf	??_main^(0+384)
  1149  009F  081E               	movf	??_main^(0+384),w
  1150  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1151  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1152  00A2  00B9               	movwf	sendByte@valore
  1153  00A3  3003               	movlw	3
  1154  00A4  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1155                           
  1156                           ;main.c: 170:                         sendByte(0x03, 0x02, car[i]);
  1157  00A9  3002               	movlw	2
  1158  00AA  1683               	bsf	3,5	;RP0=1, select bank3
  1159  00AB  1703               	bsf	3,6	;RP1=1, select bank3
  1160  00AC  009E               	movwf	??_main^(0+384)
  1161  00AD  081E               	movf	??_main^(0+384),w
  1162  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1163  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1164  00B0  00B8               	movwf	sendByte@byte1
  1165  00B1  0846               	movf	main@i,w
  1166  00B2  3E55               	addlw	(low (_car| 0))& (0+255)
  1167  00B3  0084               	movwf	4
  1168  00B4  1383               	bcf	3,7	;select IRP bank0
  1169  00B5  0800               	movf	0,w
  1170  00B6  1683               	bsf	3,5	;RP0=1, select bank3
  1171  00B7  1703               	bsf	3,6	;RP1=1, select bank3
  1172  00B8  009F               	movwf	(??_main+1)^(0+384)
  1173  00B9  081F               	movf	(??_main+1)^(0+384),w
  1174  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1175  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1176  00BC  00B9               	movwf	sendByte@valore
  1177  00BD  3003               	movlw	3
  1178  00BE  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1179                           
  1180                           ;main.c: 171:                         sendByte(0x03, 0x03, truck[i]);
  1181  00C3  3003               	movlw	3
  1182  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  1183  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  1184  00C6  009E               	movwf	??_main^(0+384)
  1185  00C7  081E               	movf	??_main^(0+384),w
  1186  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1187  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1188  00CA  00B8               	movwf	sendByte@byte1
  1189  00CB  0846               	movf	main@i,w
  1190  00CC  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1191  00CD  0084               	movwf	4
  1192  00CE  1383               	bcf	3,7	;select IRP bank1
  1193  00CF  0800               	movf	0,w
  1194  00D0  1683               	bsf	3,5	;RP0=1, select bank3
  1195  00D1  1703               	bsf	3,6	;RP1=1, select bank3
  1196  00D2  009F               	movwf	(??_main+1)^(0+384)
  1197  00D3  081F               	movf	(??_main+1)^(0+384),w
  1198  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1199  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1200  00D6  00B9               	movwf	sendByte@valore
  1201  00D7  3003               	movlw	3
  1202  00D8  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1203                           
  1204                           ;main.c: 172:                         break;
  1205  00DD  29CE               	goto	l4425
  1206  00DE                     l4415:	
  1207                           
  1208                           ;main.c: 174:                         sendByte(0x05, 0x01, motorcycle[i]);
  1209  00DE  01B8               	clrf	sendByte@byte1
  1210  00DF  0AB8               	incf	sendByte@byte1,f
  1211  00E0  0846               	movf	main@i,w
  1212  00E1  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1213  00E2  0084               	movwf	4
  1214  00E3  1383               	bcf	3,7	;select IRP bank0
  1215  00E4  0800               	movf	0,w
  1216  00E5  1683               	bsf	3,5	;RP0=1, select bank3
  1217  00E6  1703               	bsf	3,6	;RP1=1, select bank3
  1218  00E7  009E               	movwf	??_main^(0+384)
  1219  00E8  081E               	movf	??_main^(0+384),w
  1220  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1221  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1222  00EB  00B9               	movwf	sendByte@valore
  1223  00EC  3005               	movlw	5
  1224  00ED  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1225                           
  1226                           ;main.c: 175:                         sendByte(0x05, 0x02, car[i]);
  1227  00F2  3002               	movlw	2
  1228  00F3  1683               	bsf	3,5	;RP0=1, select bank3
  1229  00F4  1703               	bsf	3,6	;RP1=1, select bank3
  1230  00F5  009E               	movwf	??_main^(0+384)
  1231  00F6  081E               	movf	??_main^(0+384),w
  1232  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1233  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1234  00F9  00B8               	movwf	sendByte@byte1
  1235  00FA  0846               	movf	main@i,w
  1236  00FB  3E55               	addlw	(low (_car| 0))& (0+255)
  1237  00FC  0084               	movwf	4
  1238  00FD  1383               	bcf	3,7	;select IRP bank0
  1239  00FE  0800               	movf	0,w
  1240  00FF  1683               	bsf	3,5	;RP0=1, select bank3
  1241  0100  1703               	bsf	3,6	;RP1=1, select bank3
  1242  0101  009F               	movwf	(??_main+1)^(0+384)
  1243  0102  081F               	movf	(??_main+1)^(0+384),w
  1244  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0105  00B9               	movwf	sendByte@valore
  1247  0106  3005               	movlw	5
  1248  0107  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1249                           
  1250                           ;main.c: 176:                         sendByte(0x05, 0x03, truck[i]);
  1251  010C  3003               	movlw	3
  1252  010D  1683               	bsf	3,5	;RP0=1, select bank3
  1253  010E  1703               	bsf	3,6	;RP1=1, select bank3
  1254  010F  009E               	movwf	??_main^(0+384)
  1255  0110  081E               	movf	??_main^(0+384),w
  1256  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0113  00B8               	movwf	sendByte@byte1
  1259  0114  0846               	movf	main@i,w
  1260  0115  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1261  0116  0084               	movwf	4
  1262  0117  1383               	bcf	3,7	;select IRP bank1
  1263  0118  0800               	movf	0,w
  1264  0119  1683               	bsf	3,5	;RP0=1, select bank3
  1265  011A  1703               	bsf	3,6	;RP1=1, select bank3
  1266  011B  009F               	movwf	(??_main+1)^(0+384)
  1267  011C  081F               	movf	(??_main+1)^(0+384),w
  1268  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1269  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1270  011F  00B9               	movwf	sendByte@valore
  1271  0120  3005               	movlw	5
  1272  0121  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1273                           
  1274                           ;main.c: 177:                         break;
  1275  0126  29CE               	goto	l4425
  1276  0127                     l4417:	
  1277                           
  1278                           ;main.c: 179:                         sendByte(0x07, 0x01, motorcycle[i]);
  1279  0127  01B8               	clrf	sendByte@byte1
  1280  0128  0AB8               	incf	sendByte@byte1,f
  1281  0129  0846               	movf	main@i,w
  1282  012A  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1283  012B  0084               	movwf	4
  1284  012C  1383               	bcf	3,7	;select IRP bank0
  1285  012D  0800               	movf	0,w
  1286  012E  1683               	bsf	3,5	;RP0=1, select bank3
  1287  012F  1703               	bsf	3,6	;RP1=1, select bank3
  1288  0130  009E               	movwf	??_main^(0+384)
  1289  0131  081E               	movf	??_main^(0+384),w
  1290  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0134  00B9               	movwf	sendByte@valore
  1293  0135  3007               	movlw	7
  1294  0136  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1295                           
  1296                           ;main.c: 180:                         sendByte(0x07, 0x02, car[i]);
  1297  013B  3002               	movlw	2
  1298  013C  1683               	bsf	3,5	;RP0=1, select bank3
  1299  013D  1703               	bsf	3,6	;RP1=1, select bank3
  1300  013E  009E               	movwf	??_main^(0+384)
  1301  013F  081E               	movf	??_main^(0+384),w
  1302  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0142  00B8               	movwf	sendByte@byte1
  1305  0143  0846               	movf	main@i,w
  1306  0144  3E55               	addlw	(low (_car| 0))& (0+255)
  1307  0145  0084               	movwf	4
  1308  0146  1383               	bcf	3,7	;select IRP bank0
  1309  0147  0800               	movf	0,w
  1310  0148  1683               	bsf	3,5	;RP0=1, select bank3
  1311  0149  1703               	bsf	3,6	;RP1=1, select bank3
  1312  014A  009F               	movwf	(??_main+1)^(0+384)
  1313  014B  081F               	movf	(??_main+1)^(0+384),w
  1314  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1315  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1316  014E  00B9               	movwf	sendByte@valore
  1317  014F  3007               	movlw	7
  1318  0150  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1319                           
  1320                           ;main.c: 181:                         sendByte(0x07, 0x03, truck[i]);
  1321  0155  3003               	movlw	3
  1322  0156  1683               	bsf	3,5	;RP0=1, select bank3
  1323  0157  1703               	bsf	3,6	;RP1=1, select bank3
  1324  0158  009E               	movwf	??_main^(0+384)
  1325  0159  081E               	movf	??_main^(0+384),w
  1326  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1327  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1328  015C  00B8               	movwf	sendByte@byte1
  1329  015D  0846               	movf	main@i,w
  1330  015E  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1331  015F  0084               	movwf	4
  1332  0160  1383               	bcf	3,7	;select IRP bank1
  1333  0161  0800               	movf	0,w
  1334  0162  1683               	bsf	3,5	;RP0=1, select bank3
  1335  0163  1703               	bsf	3,6	;RP1=1, select bank3
  1336  0164  009F               	movwf	(??_main+1)^(0+384)
  1337  0165  081F               	movf	(??_main+1)^(0+384),w
  1338  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0168  00B9               	movwf	sendByte@valore
  1341  0169  3007               	movlw	7
  1342  016A  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1343                           
  1344                           ;main.c: 182:                         break;
  1345  016F  29CE               	goto	l4425
  1346  0170                     l4419:	
  1347                           
  1348                           ;main.c: 184:                         sendByte(0x09, 0x01, motorcycle[i]);
  1349  0170  01B8               	clrf	sendByte@byte1
  1350  0171  0AB8               	incf	sendByte@byte1,f
  1351  0172  0846               	movf	main@i,w
  1352  0173  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1353  0174  0084               	movwf	4
  1354  0175  1383               	bcf	3,7	;select IRP bank0
  1355  0176  0800               	movf	0,w
  1356  0177  1683               	bsf	3,5	;RP0=1, select bank3
  1357  0178  1703               	bsf	3,6	;RP1=1, select bank3
  1358  0179  009E               	movwf	??_main^(0+384)
  1359  017A  081E               	movf	??_main^(0+384),w
  1360  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1361  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1362  017D  00B9               	movwf	sendByte@valore
  1363  017E  3009               	movlw	9
  1364  017F  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1365                           
  1366                           ;main.c: 185:                         sendByte(0x09, 0x02, car[i]);
  1367  0184  3002               	movlw	2
  1368  0185  1683               	bsf	3,5	;RP0=1, select bank3
  1369  0186  1703               	bsf	3,6	;RP1=1, select bank3
  1370  0187  009E               	movwf	??_main^(0+384)
  1371  0188  081E               	movf	??_main^(0+384),w
  1372  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1373  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1374  018B  00B8               	movwf	sendByte@byte1
  1375  018C  0846               	movf	main@i,w
  1376  018D  3E55               	addlw	(low (_car| 0))& (0+255)
  1377  018E  0084               	movwf	4
  1378  018F  1383               	bcf	3,7	;select IRP bank0
  1379  0190  0800               	movf	0,w
  1380  0191  1683               	bsf	3,5	;RP0=1, select bank3
  1381  0192  1703               	bsf	3,6	;RP1=1, select bank3
  1382  0193  009F               	movwf	(??_main+1)^(0+384)
  1383  0194  081F               	movf	(??_main+1)^(0+384),w
  1384  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0197  00B9               	movwf	sendByte@valore
  1387  0198  3009               	movlw	9
  1388  0199  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1389                           
  1390                           ;main.c: 186:                         sendByte(0x09, 0x03, truck[i]);
  1391  019E  3003               	movlw	3
  1392  019F  1683               	bsf	3,5	;RP0=1, select bank3
  1393  01A0  1703               	bsf	3,6	;RP1=1, select bank3
  1394  01A1  009E               	movwf	??_main^(0+384)
  1395  01A2  081E               	movf	??_main^(0+384),w
  1396  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1397  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1398  01A5  00B8               	movwf	sendByte@byte1
  1399  01A6  0846               	movf	main@i,w
  1400  01A7  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1401  01A8  0084               	movwf	4
  1402  01A9  1383               	bcf	3,7	;select IRP bank1
  1403  01AA  0800               	movf	0,w
  1404  01AB  1683               	bsf	3,5	;RP0=1, select bank3
  1405  01AC  1703               	bsf	3,6	;RP1=1, select bank3
  1406  01AD  009F               	movwf	(??_main+1)^(0+384)
  1407  01AE  081F               	movf	(??_main+1)^(0+384),w
  1408  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1409  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1410  01B1  00B9               	movwf	sendByte@valore
  1411  01B2  3009               	movlw	9
  1412  01B3  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1413                           
  1414                           ;main.c: 187:                         break;
  1415  01B8  29CE               	goto	l4425
  1416  01B9                     l4423:	
  1417                           
  1418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1419                           ; Switch size 1, requested type "simple"
  1420                           ; Number of cases is 1, Range of values is 0 to 0
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte            4     3 (average)
  1424                           ; direct_byte           11     8 (fixed)
  1425                           ; jumptable            260     6 (fixed)
  1426                           ;	Chosen strategy is simple_byte
  1427  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1428  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1429  01BB  0847               	movf	main@i+1,w
  1430  01BC  3A00               	xorlw	0	; case 0
  1431  01BD  1903               	skipnz
  1432  01BE  29C0               	goto	l4753
  1433  01BF  29CE               	goto	l4425
  1434  01C0                     l4753:	
  1435                           
  1436                           ; Switch size 1, requested type "simple"
  1437                           ; Number of cases is 4, Range of values is 0 to 3
  1438                           ; switch strategies available:
  1439                           ; Name         Instructions Cycles
  1440                           ; simple_byte           13     7 (average)
  1441                           ; direct_byte           20     8 (fixed)
  1442                           ; jumptable            260     6 (fixed)
  1443                           ;	Chosen strategy is simple_byte
  1444  01C0  0846               	movf	main@i,w
  1445  01C1  3A00               	xorlw	0	; case 0
  1446  01C2  1903               	skipnz
  1447  01C3  2895               	goto	l4413
  1448  01C4  3A01               	xorlw	1	; case 1
  1449  01C5  1903               	skipnz
  1450  01C6  28DE               	goto	l4415
  1451  01C7  3A03               	xorlw	3	; case 2
  1452  01C8  1903               	skipnz
  1453  01C9  2927               	goto	l4417
  1454  01CA  3A01               	xorlw	1	; case 3
  1455  01CB  1903               	skipnz
  1456  01CC  2970               	goto	l4419
  1457  01CD  29CE               	goto	l4425
  1458  01CE                     l4425:	
  1459                           
  1460                           ;main.c: 189:                 }
  1461  01CE  3001               	movlw	1
  1462  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1463  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1464  01D1  07C6               	addwf	main@i,f
  1465  01D2  1803               	skipnc
  1466  01D3  0AC7               	incf	main@i+1,f
  1467  01D4  3000               	movlw	0
  1468  01D5  07C7               	addwf	main@i+1,f
  1469  01D6                     l4427:	
  1470  01D6  0847               	movf	main@i+1,w
  1471  01D7  3A80               	xorlw	128
  1472  01D8  00FF               	movwf	btemp+1
  1473  01D9  3080               	movlw	128
  1474  01DA  027F               	subwf	btemp+1,w
  1475  01DB  1D03               	skipz
  1476  01DC  29DF               	goto	u4135
  1477  01DD  3004               	movlw	4
  1478  01DE  0246               	subwf	main@i,w
  1479  01DF                     u4135:	
  1480  01DF  1C03               	skipc
  1481  01E0  29E2               	goto	u4131
  1482  01E1  29E3               	goto	u4130
  1483  01E2                     u4131:	
  1484  01E2  29B9               	goto	l4423
  1485  01E3                     u4130:	
  1486  01E3                     l4429:	
  1487                           
  1488                           ;main.c: 191:                 for (int i = 0; i < 4; i++)
  1489  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1490  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1491  01E5  01C2               	clrf	main@i_482
  1492  01E6  01C3               	clrf	main@i_482+1
  1493  01E7                     l4435:	
  1494                           
  1495                           ;main.c: 192:                 {;main.c: 193:                     motorcycle[i] = 0;
  1496  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1497  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1498  01E9  0842               	movf	main@i_482,w
  1499  01EA  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1500  01EB  0084               	movwf	4
  1501  01EC  1383               	bcf	3,7	;select IRP bank0
  1502  01ED  0180               	clrf	0
  1503                           
  1504                           ;main.c: 194:                     car[i] = 0;
  1505  01EE  0842               	movf	main@i_482,w
  1506  01EF  3E55               	addlw	(low (_car| 0))& (0+255)
  1507  01F0  0084               	movwf	4
  1508  01F1  0180               	clrf	0
  1509                           
  1510                           ;main.c: 195:                     truck[i] = 0;
  1511  01F2  0842               	movf	main@i_482,w
  1512  01F3  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1513  01F4  0084               	movwf	4
  1514  01F5  0180               	clrf	0
  1515  01F6                     l4437:	
  1516                           
  1517                           ;main.c: 196:                 }
  1518  01F6  3001               	movlw	1
  1519  01F7  07C2               	addwf	main@i_482,f
  1520  01F8  1803               	skipnc
  1521  01F9  0AC3               	incf	main@i_482+1,f
  1522  01FA  3000               	movlw	0
  1523  01FB  07C3               	addwf	main@i_482+1,f
  1524  01FC                     l4439:	
  1525  01FC  0843               	movf	main@i_482+1,w
  1526  01FD  3A80               	xorlw	128
  1527  01FE  00FF               	movwf	btemp+1
  1528  01FF  3080               	movlw	128
  1529  0200  027F               	subwf	btemp+1,w
  1530  0201  1D03               	skipz
  1531  0202  2A05               	goto	u4145
  1532  0203  3004               	movlw	4
  1533  0204  0242               	subwf	main@i_482,w
  1534  0205                     u4145:	
  1535  0205  1C03               	skipc
  1536  0206  2A08               	goto	u4141
  1537  0207  2A09               	goto	u4140
  1538  0208                     u4141:	
  1539  0208  29E7               	goto	l4435
  1540  0209                     u4140:	
  1541  0209                     l4441:	
  1542                           
  1543                           ;main.c: 198:                 for (unsigned char i = 0; i < 5; i++)
  1544  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1545  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1546  020B  01C0               	clrf	main@i_483
  1547  020C                     l4447:	
  1548                           
  1549                           ;main.c: 199:                 {;main.c: 200:                     dataFromGateway[i] = 0;
  1550  020C  0840               	movf	main@i_483,w
  1551  020D  3EAC               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1552  020E  0084               	movwf	4
  1553  020F  1383               	bcf	3,7	;select IRP bank1
  1554  0210  0180               	clrf	0
  1555  0211                     l4449:	
  1556                           
  1557                           ;main.c: 201:                 }
  1558  0211  3001               	movlw	1
  1559  0212  1683               	bsf	3,5	;RP0=1, select bank3
  1560  0213  1703               	bsf	3,6	;RP1=1, select bank3
  1561  0214  009E               	movwf	??_main^(0+384)
  1562  0215  081E               	movf	??_main^(0+384),w
  1563  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0218  07C0               	addwf	main@i_483,f
  1566  0219                     l4451:	
  1567  0219  3005               	movlw	5
  1568  021A  0240               	subwf	main@i_483,w
  1569  021B  1C03               	skipc
  1570  021C  2A1E               	goto	u4151
  1571  021D  2A1F               	goto	u4150
  1572  021E                     u4151:	
  1573  021E  2A0C               	goto	l4447
  1574  021F                     u4150:	
  1575  021F  2B55               	goto	l236
  1576  0220                     l252:	
  1577                           ;main.c: 203:             case 0x0A:
  1578                           
  1579                           
  1580                           ;main.c: 204:                 readGatewayDone.Bit = 1;
  1581  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0222  1454               	bsf	_readGatewayDone,0
  1584                           
  1585                           ;main.c: 205:                 readGateway.Bit = 0;
  1586  0223  1053               	bcf	_readGateway,0
  1587  0224                     l4453:	
  1588                           
  1589                           ;main.c: 207:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1590  0224  3000               	movlw	0
  1591  0225  120A  158A  2144  120A  118A  	fcall	_ADC_Read
  1592  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1593  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1594  022C  0824               	movf	?_ADC_Read,w
  1595  022D  1683               	bsf	3,5	;RP0=1, select bank3
  1596  022E  1703               	bsf	3,6	;RP1=1, select bank3
  1597  022F  009E               	movwf	??_main^(0+384)
  1598  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0232  0825               	movf	?_ADC_Read+1,w
  1601  0233  1683               	bsf	3,5	;RP0=1, select bank3
  1602  0234  1703               	bsf	3,6	;RP1=1, select bank3
  1603  0235  009F               	movwf	(??_main^(0+384)+1)
  1604  0236  0D1F               	rlf	(??_main^(0+384)+1),w
  1605  0237  0C9F               	rrf	(??_main^(0+384)+1),f
  1606  0238  0C9E               	rrf	??_main^(0+384),f
  1607  0239  0D1F               	rlf	(??_main^(0+384)+1),w
  1608  023A  0C9F               	rrf	(??_main^(0+384)+1),f
  1609  023B  0C9E               	rrf	??_main^(0+384),f
  1610  023C  081E               	movf	??_main^(0+384),w
  1611  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1612  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1613  023F  00B4               	movwf	map@x
  1614  0240  1683               	bsf	3,5	;RP0=1, select bank3
  1615  0241  1703               	bsf	3,6	;RP1=1, select bank3
  1616  0242  081F               	movf	(??_main+1)^(0+384),w
  1617  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0245  00B5               	movwf	map@x+1
  1620  0246  3000               	movlw	0
  1621  0247  00B6               	movwf	map@in_min
  1622  0248  00B7               	movwf	map@in_min+1
  1623  0249  30FF               	movlw	255
  1624  024A  00B8               	movwf	map@in_max
  1625  024B  3000               	movlw	0
  1626  024C  00B9               	movwf	map@in_max+1
  1627  024D  30EC               	movlw	236
  1628  024E  00BA               	movwf	map@out_min
  1629  024F  30FF               	movlw	255
  1630  0250  00BB               	movwf	map@out_min+1
  1631  0251  303C               	movlw	60
  1632  0252  00BC               	movwf	map@out_max
  1633  0253  3000               	movlw	0
  1634  0254  00BD               	movwf	map@out_max+1
  1635  0255  120A  158A  21F3  120A  118A  	fcall	_map
  1636  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1637  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1638  025C  0834               	movf	?_map,w
  1639  025D  1683               	bsf	3,5	;RP0=1, select bank3
  1640  025E  1703               	bsf	3,6	;RP1=1, select bank3
  1641  025F  00A0               	movwf	(??_main+2)^(0+384)
  1642  0260  0820               	movf	(??_main+2)^(0+384),w
  1643  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0263  00CC               	movwf	_temp
  1646                           
  1647                           ;main.c: 208:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1648  0264  3001               	movlw	1
  1649  0265  120A  158A  2144  120A  118A  	fcall	_ADC_Read
  1650  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1651  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1652  026C  0824               	movf	?_ADC_Read,w
  1653  026D  1683               	bsf	3,5	;RP0=1, select bank3
  1654  026E  1703               	bsf	3,6	;RP1=1, select bank3
  1655  026F  009E               	movwf	??_main^(0+384)
  1656  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1657  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1658  0272  0825               	movf	?_ADC_Read+1,w
  1659  0273  1683               	bsf	3,5	;RP0=1, select bank3
  1660  0274  1703               	bsf	3,6	;RP1=1, select bank3
  1661  0275  009F               	movwf	(??_main^(0+384)+1)
  1662  0276  0D1F               	rlf	(??_main^(0+384)+1),w
  1663  0277  0C9F               	rrf	(??_main^(0+384)+1),f
  1664  0278  0C9E               	rrf	??_main^(0+384),f
  1665  0279  0D1F               	rlf	(??_main^(0+384)+1),w
  1666  027A  0C9F               	rrf	(??_main^(0+384)+1),f
  1667  027B  0C9E               	rrf	??_main^(0+384),f
  1668  027C  081E               	movf	??_main^(0+384),w
  1669  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1670  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1671  027F  00B4               	movwf	map@x
  1672  0280  1683               	bsf	3,5	;RP0=1, select bank3
  1673  0281  1703               	bsf	3,6	;RP1=1, select bank3
  1674  0282  081F               	movf	(??_main+1)^(0+384),w
  1675  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0285  00B5               	movwf	map@x+1
  1678  0286  3000               	movlw	0
  1679  0287  00B6               	movwf	map@in_min
  1680  0288  00B7               	movwf	map@in_min+1
  1681  0289  30FF               	movlw	255
  1682  028A  00B8               	movwf	map@in_max
  1683  028B  3000               	movlw	0
  1684  028C  00B9               	movwf	map@in_max+1
  1685  028D  3000               	movlw	0
  1686  028E  00BA               	movwf	map@out_min
  1687  028F  00BB               	movwf	map@out_min+1
  1688  0290  3064               	movlw	100
  1689  0291  00BC               	movwf	map@out_max
  1690  0292  3000               	movlw	0
  1691  0293  00BD               	movwf	map@out_max+1
  1692  0294  120A  158A  21F3  120A  118A  	fcall	_map
  1693  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1694  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1695  029B  0834               	movf	?_map,w
  1696  029C  1683               	bsf	3,5	;RP0=1, select bank3
  1697  029D  1703               	bsf	3,6	;RP1=1, select bank3
  1698  029E  00A0               	movwf	(??_main+2)^(0+384)
  1699  029F  0820               	movf	(??_main+2)^(0+384),w
  1700  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1701  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1702  02A2  00CB               	movwf	_umidita
  1703                           
  1704                           ;main.c: 209:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1705  02A3  3005               	movlw	5
  1706  02A4  120A  158A  2144  120A  118A  	fcall	_ADC_Read
  1707  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1708  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1709  02AB  0824               	movf	?_ADC_Read,w
  1710  02AC  1683               	bsf	3,5	;RP0=1, select bank3
  1711  02AD  1703               	bsf	3,6	;RP1=1, select bank3
  1712  02AE  009E               	movwf	??_main^(0+384)
  1713  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1714  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1715  02B1  0825               	movf	?_ADC_Read+1,w
  1716  02B2  1683               	bsf	3,5	;RP0=1, select bank3
  1717  02B3  1703               	bsf	3,6	;RP1=1, select bank3
  1718  02B4  009F               	movwf	(??_main^(0+384)+1)
  1719  02B5  0D1F               	rlf	(??_main^(0+384)+1),w
  1720  02B6  0C9F               	rrf	(??_main^(0+384)+1),f
  1721  02B7  0C9E               	rrf	??_main^(0+384),f
  1722  02B8  0D1F               	rlf	(??_main^(0+384)+1),w
  1723  02B9  0C9F               	rrf	(??_main^(0+384)+1),f
  1724  02BA  0C9E               	rrf	??_main^(0+384),f
  1725  02BB  081E               	movf	??_main^(0+384),w
  1726  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1727  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1728  02BE  00B4               	movwf	map@x
  1729  02BF  1683               	bsf	3,5	;RP0=1, select bank3
  1730  02C0  1703               	bsf	3,6	;RP1=1, select bank3
  1731  02C1  081F               	movf	(??_main+1)^(0+384),w
  1732  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1733  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1734  02C4  00B5               	movwf	map@x+1
  1735  02C5  3000               	movlw	0
  1736  02C6  00B6               	movwf	map@in_min
  1737  02C7  00B7               	movwf	map@in_min+1
  1738  02C8  30FF               	movlw	255
  1739  02C9  00B8               	movwf	map@in_max
  1740  02CA  3000               	movlw	0
  1741  02CB  00B9               	movwf	map@in_max+1
  1742  02CC  3000               	movlw	0
  1743  02CD  00BA               	movwf	map@out_min
  1744  02CE  00BB               	movwf	map@out_min+1
  1745  02CF  3064               	movlw	100
  1746  02D0  00BC               	movwf	map@out_max
  1747  02D1  3000               	movlw	0
  1748  02D2  00BD               	movwf	map@out_max+1
  1749  02D3  120A  158A  21F3  120A  118A  	fcall	_map
  1750  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1751  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1752  02DA  0834               	movf	?_map,w
  1753  02DB  1683               	bsf	3,5	;RP0=1, select bank3
  1754  02DC  1703               	bsf	3,6	;RP1=1, select bank3
  1755  02DD  00A0               	movwf	(??_main+2)^(0+384)
  1756  02DE  0820               	movf	(??_main+2)^(0+384),w
  1757  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1758  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1759  02E1  00CA               	movwf	_pressione
  1760  02E2                     l4455:	
  1761                           
  1762                           ;main.c: 210:                 sendByte(0x02, 0x00, temp);
  1763  02E2  01B8               	clrf	sendByte@byte1
  1764  02E3  084C               	movf	_temp,w
  1765  02E4  1683               	bsf	3,5	;RP0=1, select bank3
  1766  02E5  1703               	bsf	3,6	;RP1=1, select bank3
  1767  02E6  009E               	movwf	??_main^(0+384)
  1768  02E7  081E               	movf	??_main^(0+384),w
  1769  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1770  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1771  02EA  00B9               	movwf	sendByte@valore
  1772  02EB  3002               	movlw	2
  1773  02EC  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1774  02F1                     l4457:	
  1775                           
  1776                           ;main.c: 211:                 sendByte(0x04, 0x00, umidita);
  1777  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1778  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1779  02F3  01B8               	clrf	sendByte@byte1
  1780  02F4  084B               	movf	_umidita,w
  1781  02F5  1683               	bsf	3,5	;RP0=1, select bank3
  1782  02F6  1703               	bsf	3,6	;RP1=1, select bank3
  1783  02F7  009E               	movwf	??_main^(0+384)
  1784  02F8  081E               	movf	??_main^(0+384),w
  1785  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1786  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1787  02FB  00B9               	movwf	sendByte@valore
  1788  02FC  3004               	movlw	4
  1789  02FD  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1790  0302                     l4459:	
  1791                           
  1792                           ;main.c: 212:                 sendByte(0x06, 0x00, pressione);
  1793  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0304  01B8               	clrf	sendByte@byte1
  1796  0305  084A               	movf	_pressione,w
  1797  0306  1683               	bsf	3,5	;RP0=1, select bank3
  1798  0307  1703               	bsf	3,6	;RP1=1, select bank3
  1799  0308  009E               	movwf	??_main^(0+384)
  1800  0309  081E               	movf	??_main^(0+384),w
  1801  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1802  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1803  030C  00B9               	movwf	sendByte@valore
  1804  030D  3006               	movlw	6
  1805  030E  120A  158A  21C2  120A  118A  	fcall	_sendByte
  1806  0313                     l4461:	
  1807                           
  1808                           ;main.c: 214:                 for (unsigned char i = 0; i < 5; i++)
  1809  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0315  01C1               	clrf	main@i_485
  1812  0316                     l4463:	
  1813  0316  3005               	movlw	5
  1814  0317  0241               	subwf	main@i_485,w
  1815  0318  1C03               	skipc
  1816  0319  2B1B               	goto	u4161
  1817  031A  2B1C               	goto	u4160
  1818  031B                     u4161:	
  1819  031B  2B1D               	goto	l4467
  1820  031C                     u4160:	
  1821  031C  2B55               	goto	l236
  1822  031D                     l4467:	
  1823                           
  1824                           ;main.c: 215:                 {;main.c: 216:                     dataFromGateway[i] = 0;
  1825  031D  0841               	movf	main@i_485,w
  1826  031E  3EAC               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1827  031F  0084               	movwf	4
  1828  0320  1383               	bcf	3,7	;select IRP bank1
  1829  0321  0180               	clrf	0
  1830  0322                     l4469:	
  1831                           
  1832                           ;main.c: 217:                 }
  1833  0322  3001               	movlw	1
  1834  0323  1683               	bsf	3,5	;RP0=1, select bank3
  1835  0324  1703               	bsf	3,6	;RP1=1, select bank3
  1836  0325  009E               	movwf	??_main^(0+384)
  1837  0326  081E               	movf	??_main^(0+384),w
  1838  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0329  07C1               	addwf	main@i_485,f
  1841  032A  2B16               	goto	l4463
  1842  032B                     l4473:	
  1843                           
  1844                           ;main.c: 221:                 if (timerReadFromGateway >= 4)
  1845  032B  3004               	movlw	4
  1846  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1847  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1848  032E  024D               	subwf	_timerReadFromGateway,w
  1849  032F  1C03               	skipc
  1850  0330  2B32               	goto	u4171
  1851  0331  2B33               	goto	u4170
  1852  0332                     u4171:	
  1853  0332  2B36               	goto	l4477
  1854  0333                     u4170:	
  1855  0333                     l4475:	
  1856                           
  1857                           ;main.c: 222:                 {;main.c: 223:                     readGatewayDone.Bit = 1
      +                          ;
  1858  0333  1454               	bsf	_readGatewayDone,0
  1859                           
  1860                           ;main.c: 224:                     readGatewayDone.Timeout = 1;
  1861  0334  14D4               	bsf	_readGatewayDone,1
  1862                           
  1863                           ;main.c: 225:                     readGateway.Bit = 0;
  1864  0335  1053               	bcf	_readGateway,0
  1865  0336                     l4477:	
  1866                           
  1867                           ;main.c: 228:                 if (dataFromGatewayIndex >= 15)
  1868  0336  300F               	movlw	15
  1869  0337  024E               	subwf	_dataFromGatewayIndex,w
  1870  0338  1C03               	skipc
  1871  0339  2B3B               	goto	u4181
  1872  033A  2B3C               	goto	u4180
  1873  033B                     u4181:	
  1874  033B  2B55               	goto	l236
  1875  033C                     u4180:	
  1876  033C                     l4479:	
  1877                           
  1878                           ;main.c: 229:                 {;main.c: 230:                     readGatewayDone.Bit = 1
      +                          ;
  1879  033C  1454               	bsf	_readGatewayDone,0
  1880                           
  1881                           ;main.c: 231:                     readGatewayDone.Timeout = 0;
  1882  033D  10D4               	bcf	_readGatewayDone,1
  1883                           
  1884                           ;main.c: 232:                     readGateway.Bit = 0;
  1885  033E  1053               	bcf	_readGateway,0
  1886  033F  2B55               	goto	l236
  1887  0340                     l4483:	
  1888  0340  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0341  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0342  082C               	movf	_dataFromGateway^(0+128),w
  1891  0343  397F               	andlw	127
  1892  0344  1683               	bsf	3,5	;RP0=1, select bank3
  1893  0345  1703               	bsf	3,6	;RP1=1, select bank3
  1894  0346  009E               	movwf	??_main^(0+384)
  1895  0347  019F               	clrf	(??_main^(0+384)+1)
  1896                           
  1897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1898                           ; Switch size 1, requested type "simple"
  1899                           ; Number of cases is 1, Range of values is 0 to 0
  1900                           ; switch strategies available:
  1901                           ; Name         Instructions Cycles
  1902                           ; simple_byte            4     3 (average)
  1903                           ; direct_byte           11     8 (fixed)
  1904                           ; jumptable            260     6 (fixed)
  1905                           ;	Chosen strategy is simple_byte
  1906  0348  081F               	movf	(??_main+1)^(0+384),w
  1907  0349  3A00               	xorlw	0	; case 0
  1908  034A  1903               	skipnz
  1909  034B  2B4D               	goto	l4755
  1910  034C  2B2B               	goto	l4473
  1911  034D                     l4755:	
  1912                           
  1913                           ; Switch size 1, requested type "simple"
  1914                           ; Number of cases is 2, Range of values is 8 to 10
  1915                           ; switch strategies available:
  1916                           ; Name         Instructions Cycles
  1917                           ; simple_byte            7     4 (average)
  1918                           ; direct_byte           20    11 (fixed)
  1919                           ; jumptable            263     9 (fixed)
  1920                           ;	Chosen strategy is simple_byte
  1921  034D  081E               	movf	??_main^(0+384),w
  1922  034E  3A08               	xorlw	8	; case 8
  1923  034F  1903               	skipnz
  1924  0350  288E               	goto	l238
  1925  0351  3A02               	xorlw	2	; case 10
  1926  0352  1903               	skipnz
  1927  0353  2A20               	goto	l252
  1928  0354  2B2B               	goto	l4473
  1929  0355                     l236:	
  1930                           ;main.c: 236:         }
  1931                           
  1932                           
  1933                           ;main.c: 239:         if (readGatewayDone.Bit)
  1934  0355  1C54               	btfss	_readGatewayDone,0
  1935  0356  2B58               	goto	u4191
  1936  0357  2B59               	goto	u4190
  1937  0358                     u4191:	
  1938  0358  2B77               	goto	l4497
  1939  0359                     u4190:	
  1940  0359                     l4485:	
  1941                           
  1942                           ;main.c: 240:         {;main.c: 242:             readGateway.Bit = 0;
  1943  0359  1053               	bcf	_readGateway,0
  1944  035A                     l4487:	
  1945                           
  1946                           ;main.c: 243:             dataFromGatewayIndex = 0;
  1947  035A  01CE               	clrf	_dataFromGatewayIndex
  1948  035B                     l4489:	
  1949                           
  1950                           ;main.c: 244:             readGatewayDone.Bit = 0;
  1951  035B  1054               	bcf	_readGatewayDone,0
  1952                           
  1953                           ;main.c: 245:             timerReadFromGateway = 0;
  1954  035C  01CD               	clrf	_timerReadFromGateway
  1955  035D                     l4491:	
  1956                           
  1957                           ;main.c: 248:             if (readGatewayDone.Timeout)
  1958  035D  1CD4               	btfss	_readGatewayDone,1
  1959  035E  2B60               	goto	u4201
  1960  035F  2B61               	goto	u4200
  1961  0360                     u4201:	
  1962  0360  2B63               	goto	l4495
  1963  0361                     u4200:	
  1964  0361                     l4493:	
  1965                           
  1966                           ;main.c: 249:             {;main.c: 250:                 readGatewayDone.Timeout = 0;
  1967  0361  10D4               	bcf	_readGatewayDone,1
  1968                           
  1969                           ;main.c: 251:             }
  1970  0362  2B77               	goto	l4497
  1971  0363                     l4495:	
  1972                           
  1973                           ;main.c: 254:             {;main.c: 255:                 bitParita(dataFromGateway);
  1974  0363  30AC               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1975  0364  120A  158A  2737  120A  118A  	fcall	_bitParita
  1976                           
  1977                           ;main.c: 256:                 SetReceivedTimes(dataFromGateway, Semafori);
  1978  0369  3060               	movlw	(low (_Semafori| 0))& (0+255)
  1979  036A  1683               	bsf	3,5	;RP0=1, select bank3
  1980  036B  1703               	bsf	3,6	;RP1=1, select bank3
  1981  036C  009E               	movwf	??_main^(0+384)
  1982  036D  081E               	movf	??_main^(0+384),w
  1983  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1984  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0370  00AC               	movwf	SetReceivedTimes@_semafori
  1986  0371  30AC               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1987  0372  120A  158A  24C8  120A  118A  	fcall	_SetReceivedTimes
  1988  0377                     l4497:	
  1989                           
  1990                           ;main.c: 262:         if (secondPassed.Bit && cycled.Bit)
  1991  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0379  1C52               	btfss	_secondPassed,0
  1994  037A  2B7C               	goto	u4211
  1995  037B  2B7D               	goto	u4210
  1996  037C                     u4211:	
  1997  037C  2CF6               	goto	l4533
  1998  037D                     u4210:	
  1999  037D                     l4499:	
  2000  037D  1C51               	btfss	_cycled,0
  2001  037E  2B80               	goto	u4221
  2002  037F  2B81               	goto	u4220
  2003  0380                     u4221:	
  2004  0380  2CF6               	goto	l4533
  2005  0381                     u4220:	
  2006  0381                     l4501:	
  2007                           
  2008                           ;main.c: 263:         {;main.c: 264:             unsigned char i = 0;
  2009  0381  01C5               	clrf	main@i_488
  2010                           
  2011                           ;main.c: 265:             while (i < n_semafori)
  2012  0382  2C93               	goto	l4527
  2013  0383                     l4503:	
  2014                           
  2015                           ;main.c: 266:             {;main.c: 267:                 if ((*Semafori[i]).times[0] != 
      +                          0)
  2016  0383  0845               	movf	main@i_488,w
  2017  0384  1683               	bsf	3,5	;RP0=1, select bank3
  2018  0385  1703               	bsf	3,6	;RP1=1, select bank3
  2019  0386  009E               	movwf	??_main^(0+384)
  2020  0387  071E               	addwf	??_main^(0+384),w
  2021  0388  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  2022  0389  0084               	movwf	4
  2023  038A  1383               	bcf	3,7	;select IRP bank0
  2024  038B  0800               	movf	0,w
  2025  038C  009F               	movwf	(??_main+1)^(0+384)
  2026  038D  0A84               	incf	4,f
  2027  038E  0800               	movf	0,w
  2028  038F  00A0               	movwf	((??_main+1)^(0+384)+1)
  2029  0390  081F               	movf	(??_main+1)^(0+384),w
  2030  0391  0084               	movwf	4
  2031  0392  1783               	bsf	3,7
  2032  0393  1C20               	btfss	(??_main+2)^(0+384),0
  2033  0394  1383               	bcf	3,7
  2034  0395  0800               	movf	0,w
  2035  0396  00A1               	movwf	(??_main+3)^(0+384)
  2036  0397  0A84               	incf	4,f
  2037  0398  0800               	movf	0,w
  2038  0399  00A2               	movwf	((??_main+3)^(0+384)+1)
  2039  039A  0821               	movf	(??_main+3)^(0+384),w
  2040  039B  0422               	iorwf	((??_main+3)^(0+384)+1),w
  2041  039C  1903               	btfsc	3,2
  2042  039D  2B9F               	goto	u4231
  2043  039E  2BA0               	goto	u4230
  2044  039F                     u4231:	
  2045  039F  2C8B               	goto	l4525
  2046  03A0                     u4230:	
  2047  03A0                     l4505:	
  2048                           
  2049                           ;main.c: 268:                 {;main.c: 269:                     time[i]++;
  2050  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2051  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2052  03A2  0845               	movf	main@i_488,w
  2053  03A3  1683               	bsf	3,5	;RP0=1, select bank3
  2054  03A4  1703               	bsf	3,6	;RP1=1, select bank3
  2055  03A5  009E               	movwf	??_main^(0+384)
  2056  03A6  071E               	addwf	??_main^(0+384),w
  2057  03A7  3EA0               	addlw	(low (_time| 0))& (0+255)
  2058  03A8  0084               	movwf	4
  2059  03A9  3001               	movlw	1
  2060  03AA  1383               	bcf	3,7	;select IRP bank1
  2061  03AB  0780               	addwf	0,f
  2062  03AC  0A84               	incf	4,f
  2063  03AD  1803               	skipnc
  2064  03AE  0A80               	incf	0,f
  2065                           
  2066                           ;main.c: 270:                     unsigned char lux_select = (*Semafori[i]).lux_select;
  2067  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2068  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2069  03B1  0845               	movf	main@i_488,w
  2070  03B2  1683               	bsf	3,5	;RP0=1, select bank3
  2071  03B3  1703               	bsf	3,6	;RP1=1, select bank3
  2072  03B4  009E               	movwf	??_main^(0+384)
  2073  03B5  071E               	addwf	??_main^(0+384),w
  2074  03B6  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  2075  03B7  0084               	movwf	4
  2076  03B8  0800               	movf	0,w
  2077  03B9  009F               	movwf	(??_main+1)^(0+384)
  2078  03BA  0A84               	incf	4,f
  2079  03BB  0800               	movf	0,w
  2080  03BC  00A0               	movwf	((??_main+1)^(0+384)+1)
  2081  03BD  081F               	movf	(??_main+1)^(0+384),w
  2082  03BE  3E0C               	addlw	12
  2083  03BF  00A1               	movwf	(??_main+3)^(0+384)
  2084  03C0  0820               	movf	(??_main+2)^(0+384),w
  2085  03C1  1803               	skipnc
  2086  03C2  3E01               	addlw	1
  2087  03C3  3E00               	addlw	0
  2088  03C4  00A2               	movwf	(??_main+4)^(0+384)
  2089  03C5  0821               	movf	(??_main+3)^(0+384),w
  2090  03C6  0084               	movwf	4
  2091  03C7  1783               	bsf	3,7
  2092  03C8  1C22               	btfss	(??_main+4)^(0+384),0
  2093  03C9  1383               	bcf	3,7
  2094  03CA  0800               	movf	0,w
  2095  03CB  00A3               	movwf	(??_main+5)^(0+384)
  2096  03CC  0823               	movf	(??_main+5)^(0+384),w
  2097  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2098  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2099  03CF  00C4               	movwf	main@lux_select
  2100                           
  2101                           ;main.c: 272:                     if ((*Semafori[i]).times[lux_select] - time[i] < 0)
  2102  03D0  0845               	movf	main@i_488,w
  2103  03D1  1683               	bsf	3,5	;RP0=1, select bank3
  2104  03D2  1703               	bsf	3,6	;RP1=1, select bank3
  2105  03D3  009E               	movwf	??_main^(0+384)
  2106  03D4  071E               	addwf	??_main^(0+384),w
  2107  03D5  3EA0               	addlw	(low (_time| 0))& (0+255)
  2108  03D6  0084               	movwf	4
  2109  03D7  1383               	bcf	3,7	;select IRP bank1
  2110  03D8  0800               	movf	0,w
  2111  03D9  009F               	movwf	(??_main+1)^(0+384)
  2112  03DA  0A84               	incf	4,f
  2113  03DB  0800               	movf	0,w
  2114  03DC  00A0               	movwf	((??_main+1)^(0+384)+1)
  2115  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2116  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2117  03DF  0845               	movf	main@i_488,w
  2118  03E0  1683               	bsf	3,5	;RP0=1, select bank3
  2119  03E1  1703               	bsf	3,6	;RP1=1, select bank3
  2120  03E2  00A1               	movwf	(??_main+3)^(0+384)
  2121  03E3  0721               	addwf	(??_main+3)^(0+384),w
  2122  03E4  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  2123  03E5  0084               	movwf	4
  2124  03E6  0800               	movf	0,w
  2125  03E7  00A2               	movwf	(??_main+4)^(0+384)
  2126  03E8  0A84               	incf	4,f
  2127  03E9  0800               	movf	0,w
  2128  03EA  00A3               	movwf	((??_main+4)^(0+384)+1)
  2129  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2130  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2131  03ED  0844               	movf	main@lux_select,w
  2132  03EE  1683               	bsf	3,5	;RP0=1, select bank3
  2133  03EF  1703               	bsf	3,6	;RP1=1, select bank3
  2134  03F0  00A4               	movwf	(??_main+6)^(0+384)
  2135  03F1  0724               	addwf	(??_main+6)^(0+384),w
  2136  03F2  0722               	addwf	(??_main+4)^(0+384),w
  2137  03F3  00A5               	movwf	(??_main+7)^(0+384)
  2138  03F4  0823               	movf	(??_main+5)^(0+384),w
  2139  03F5  1803               	skipnc
  2140  03F6  3E01               	addlw	1
  2141  03F7  00A6               	movwf	((??_main+7)^(0+384)+1)
  2142  03F8  0825               	movf	(??_main+7)^(0+384),w
  2143  03F9  0084               	movwf	4
  2144  03FA  1783               	bsf	3,7
  2145  03FB  1C26               	btfss	(??_main+8)^(0+384),0
  2146  03FC  1383               	bcf	3,7
  2147  03FD  0800               	movf	0,w
  2148  03FE  00A7               	movwf	(??_main+9)^(0+384)
  2149  03FF  0A84               	incf	4,f
  2150  0400  0800               	movf	0,w
  2151  0401  00A8               	movwf	((??_main+9)^(0+384)+1)
  2152  0402  081F               	movf	(??_main+1)^(0+384),w
  2153  0403  0227               	subwf	(??_main+9)^(0+384),w
  2154  0404  00A9               	movwf	(??_main+11)^(0+384)
  2155  0405  0820               	movf	(??_main+2)^(0+384),w
  2156  0406  1C03               	skipc
  2157  0407  0A20               	incf	(??_main+2)^(0+384),w
  2158  0408  0228               	subwf	(??_main+10)^(0+384),w
  2159  0409  00AA               	movwf	(??_main+12)^(0+384)
  2160  040A  1FAA               	btfss	(??_main+12)^(0+384),7
  2161  040B  2C0D               	goto	u4241
  2162  040C  2C0E               	goto	u4240
  2163  040D                     u4241:	
  2164  040D  2C35               	goto	l4519
  2165  040E                     u4240:	
  2166  040E                     l4507:	
  2167                           
  2168                           ;main.c: 273:                     {;main.c: 274:                         lux_select++;
  2169  040E  3001               	movlw	1
  2170  040F  009E               	movwf	??_main^(0+384)
  2171  0410  081E               	movf	??_main^(0+384),w
  2172  0411  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0412  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0413  07C4               	addwf	main@lux_select,f
  2175  0414                     l4509:	
  2176                           
  2177                           ;main.c: 275:                         time[i] = 1;
  2178  0414  0845               	movf	main@i_488,w
  2179  0415  1683               	bsf	3,5	;RP0=1, select bank3
  2180  0416  1703               	bsf	3,6	;RP1=1, select bank3
  2181  0417  009E               	movwf	??_main^(0+384)
  2182  0418  071E               	addwf	??_main^(0+384),w
  2183  0419  3EA0               	addlw	(low (_time| 0))& (0+255)
  2184  041A  0084               	movwf	4
  2185  041B  3001               	movlw	1
  2186  041C  1383               	bcf	3,7	;select IRP bank1
  2187  041D  0080               	movwf	0
  2188  041E  0A84               	incf	4,f
  2189  041F  3000               	movlw	0
  2190  0420  0080               	movwf	0
  2191  0421                     l4511:	
  2192                           
  2193                           ;main.c: 277:                         if (lux_select >= 3)
  2194  0421  3003               	movlw	3
  2195  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0424  0244               	subwf	main@lux_select,w
  2198  0425  1C03               	skipc
  2199  0426  2C28               	goto	u4251
  2200  0427  2C29               	goto	u4250
  2201  0428                     u4251:	
  2202  0428  2C35               	goto	l4519
  2203  0429                     u4250:	
  2204  0429                     l4513:	
  2205                           
  2206                           ;main.c: 278:                         {;main.c: 279:                             lux_sel
      +                          ect = 0;
  2207  0429  01C4               	clrf	main@lux_select
  2208  042A                     l4515:	
  2209                           
  2210                           ;main.c: 281:                             if (i == 0)
  2211  042A  0845               	movf	main@i_488,w
  2212  042B  1D03               	btfss	3,2
  2213  042C  2C2E               	goto	u4261
  2214  042D  2C2F               	goto	u4260
  2215  042E                     u4261:	
  2216  042E  2C35               	goto	l4519
  2217  042F                     u4260:	
  2218  042F                     l4517:	
  2219                           
  2220                           ;main.c: 282:                             {;main.c: 283:                                
      +                           UpdateTimes(Semafori);
  2221  042F  3060               	movlw	(low (_Semafori| 0))& (0+255)
  2222  0430  120A  118A  265E  120A  118A  	fcall	_UpdateTimes
  2223  0435                     l4519:	
  2224                           
  2225                           ;main.c: 288:                     if (lux_select != (*Semafori[i]).lux_select)
  2226  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0437  0845               	movf	main@i_488,w
  2229  0438  1683               	bsf	3,5	;RP0=1, select bank3
  2230  0439  1703               	bsf	3,6	;RP1=1, select bank3
  2231  043A  009E               	movwf	??_main^(0+384)
  2232  043B  071E               	addwf	??_main^(0+384),w
  2233  043C  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  2234  043D  0084               	movwf	4
  2235  043E  1383               	bcf	3,7	;select IRP bank0
  2236  043F  0800               	movf	0,w
  2237  0440  009F               	movwf	(??_main+1)^(0+384)
  2238  0441  0A84               	incf	4,f
  2239  0442  0800               	movf	0,w
  2240  0443  00A0               	movwf	((??_main+1)^(0+384)+1)
  2241  0444  081F               	movf	(??_main+1)^(0+384),w
  2242  0445  3E0C               	addlw	12
  2243  0446  00A1               	movwf	(??_main+3)^(0+384)
  2244  0447  0820               	movf	(??_main+2)^(0+384),w
  2245  0448  1803               	skipnc
  2246  0449  3E01               	addlw	1
  2247  044A  3E00               	addlw	0
  2248  044B  00A2               	movwf	(??_main+4)^(0+384)
  2249  044C  0821               	movf	(??_main+3)^(0+384),w
  2250  044D  0084               	movwf	4
  2251  044E  1783               	bsf	3,7
  2252  044F  1C22               	btfss	(??_main+4)^(0+384),0
  2253  0450  1383               	bcf	3,7
  2254  0451  0800               	movf	0,w
  2255  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2256  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2257  0454  0644               	xorwf	main@lux_select,w
  2258  0455  1903               	skipnz
  2259  0456  2C58               	goto	u4271
  2260  0457  2C59               	goto	u4270
  2261  0458                     u4271:	
  2262  0458  2C8B               	goto	l4525
  2263  0459                     u4270:	
  2264  0459                     l4521:	
  2265                           
  2266                           ;main.c: 289:                     {;main.c: 290:                         luciSemaforo(i,
      +                           lux_select);
  2267  0459  0844               	movf	main@lux_select,w
  2268  045A  1683               	bsf	3,5	;RP0=1, select bank3
  2269  045B  1703               	bsf	3,6	;RP1=1, select bank3
  2270  045C  009E               	movwf	??_main^(0+384)
  2271  045D  081E               	movf	??_main^(0+384),w
  2272  045E  1283               	bcf	3,5	;RP0=0, select bank0
  2273  045F  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0460  00A4               	movwf	luciSemaforo@lux
  2275  0461  0845               	movf	main@i_488,w
  2276  0462  120A  158A  22F4  120A  118A  	fcall	_luciSemaforo
  2277  0467                     l4523:	
  2278                           
  2279                           ;main.c: 291:                         (*Semafori[i]).lux_select = lux_select;
  2280  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0469  0844               	movf	main@lux_select,w
  2283  046A  1683               	bsf	3,5	;RP0=1, select bank3
  2284  046B  1703               	bsf	3,6	;RP1=1, select bank3
  2285  046C  009E               	movwf	??_main^(0+384)
  2286  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2287  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2288  046F  0845               	movf	main@i_488,w
  2289  0470  1683               	bsf	3,5	;RP0=1, select bank3
  2290  0471  1703               	bsf	3,6	;RP1=1, select bank3
  2291  0472  009F               	movwf	(??_main+1)^(0+384)
  2292  0473  071F               	addwf	(??_main+1)^(0+384),w
  2293  0474  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  2294  0475  0084               	movwf	4
  2295  0476  1383               	bcf	3,7	;select IRP bank0
  2296  0477  0800               	movf	0,w
  2297  0478  00A0               	movwf	(??_main+2)^(0+384)
  2298  0479  0A84               	incf	4,f
  2299  047A  0800               	movf	0,w
  2300  047B  00A1               	movwf	((??_main+2)^(0+384)+1)
  2301  047C  0820               	movf	(??_main+2)^(0+384),w
  2302  047D  3E0C               	addlw	12
  2303  047E  00A2               	movwf	(??_main+4)^(0+384)
  2304  047F  0821               	movf	(??_main+3)^(0+384),w
  2305  0480  1803               	skipnc
  2306  0481  3E01               	addlw	1
  2307  0482  3E00               	addlw	0
  2308  0483  00A3               	movwf	(??_main+5)^(0+384)
  2309  0484  0822               	movf	(??_main+4)^(0+384),w
  2310  0485  0084               	movwf	4
  2311  0486  1783               	bsf	3,7
  2312  0487  1C23               	btfss	(??_main+5)^(0+384),0
  2313  0488  1383               	bcf	3,7
  2314  0489  081E               	movf	??_main^(0+384),w
  2315  048A  0080               	movwf	0
  2316  048B                     l4525:	
  2317                           
  2318                           ;main.c: 297:                 i++;
  2319  048B  3001               	movlw	1
  2320  048C  1683               	bsf	3,5	;RP0=1, select bank3
  2321  048D  1703               	bsf	3,6	;RP1=1, select bank3
  2322  048E  009E               	movwf	??_main^(0+384)
  2323  048F  081E               	movf	??_main^(0+384),w
  2324  0490  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0491  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0492  07C5               	addwf	main@i_488,f
  2327  0493                     l4527:	
  2328  0493  3002               	movlw	2
  2329  0494  0245               	subwf	main@i_488,w
  2330  0495  1C03               	skipc
  2331  0496  2C98               	goto	u4281
  2332  0497  2C99               	goto	u4280
  2333  0498                     u4281:	
  2334  0498  2B83               	goto	l4503
  2335  0499                     u4280:	
  2336  0499                     l4529:	
  2337                           
  2338                           ;main.c: 300:             GetDigits(&centinaia, &decine, &unita, (*Semafori[0]).times[(*
      +                          Semafori[0]).lux_select] - time[0]);
  2339  0499  305E               	movlw	(low (_decine| 0))& (0+255)
  2340  049A  1683               	bsf	3,5	;RP0=1, select bank3
  2341  049B  1703               	bsf	3,6	;RP1=1, select bank3
  2342  049C  009E               	movwf	??_main^(0+384)
  2343  049D  081E               	movf	??_main^(0+384),w
  2344  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2345  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2346  04A0  00B4               	movwf	GetDigits@decine
  2347  04A1  305F               	movlw	(low (_unita| 0))& (0+255)
  2348  04A2  1683               	bsf	3,5	;RP0=1, select bank3
  2349  04A3  1703               	bsf	3,6	;RP1=1, select bank3
  2350  04A4  009F               	movwf	(??_main+1)^(0+384)
  2351  04A5  081F               	movf	(??_main+1)^(0+384),w
  2352  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2353  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2354  04A8  00B5               	movwf	GetDigits@unita
  2355  04A9  0860               	movf	_Semafori,w
  2356  04AA  3E0C               	addlw	12
  2357  04AB  1683               	bsf	3,5	;RP0=1, select bank3
  2358  04AC  1703               	bsf	3,6	;RP1=1, select bank3
  2359  04AD  00A0               	movwf	(??_main+2)^(0+384)
  2360  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2361  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2362  04B0  0861               	movf	_Semafori+1,w
  2363  04B1  1803               	skipnc
  2364  04B2  3E01               	addlw	1
  2365  04B3  3E00               	addlw	0
  2366  04B4  1683               	bsf	3,5	;RP0=1, select bank3
  2367  04B5  1703               	bsf	3,6	;RP1=1, select bank3
  2368  04B6  00A1               	movwf	(??_main+3)^(0+384)
  2369  04B7  0820               	movf	(??_main+2)^(0+384),w
  2370  04B8  0084               	movwf	4
  2371  04B9  1783               	bsf	3,7
  2372  04BA  1C21               	btfss	(??_main+3)^(0+384),0
  2373  04BB  1383               	bcf	3,7
  2374  04BC  0800               	movf	0,w
  2375  04BD  00A2               	movwf	(??_main+4)^(0+384)
  2376  04BE  0722               	addwf	(??_main+4)^(0+384),w
  2377  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2378  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2379  04C1  0760               	addwf	_Semafori,w
  2380  04C2  1683               	bsf	3,5	;RP0=1, select bank3
  2381  04C3  1703               	bsf	3,6	;RP1=1, select bank3
  2382  04C4  00A3               	movwf	(??_main+5)^(0+384)
  2383  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2384  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2385  04C7  0861               	movf	_Semafori+1,w
  2386  04C8  1803               	skipnc
  2387  04C9  3E01               	addlw	1
  2388  04CA  1683               	bsf	3,5	;RP0=1, select bank3
  2389  04CB  1703               	bsf	3,6	;RP1=1, select bank3
  2390  04CC  00A4               	movwf	((??_main+5)^(0+384)+1)
  2391  04CD  0823               	movf	(??_main+5)^(0+384),w
  2392  04CE  0084               	movwf	4
  2393  04CF  1783               	bsf	3,7
  2394  04D0  1C24               	btfss	(??_main+6)^(0+384),0
  2395  04D1  1383               	bcf	3,7
  2396  04D2  0800               	movf	0,w
  2397  04D3  00A5               	movwf	(??_main+7)^(0+384)
  2398  04D4  0A84               	incf	4,f
  2399  04D5  0800               	movf	0,w
  2400  04D6  00A6               	movwf	((??_main+7)^(0+384)+1)
  2401  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2402  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  2403  04D9  0820               	movf	_time^(0+128),w
  2404  04DA  1683               	bsf	3,5	;RP0=1, select bank3
  2405  04DB  1703               	bsf	3,6	;RP1=1, select bank3
  2406  04DC  0225               	subwf	(??_main+7)^(0+384),w
  2407  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2408  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2409  04DF  00B6               	movwf	GetDigits@Time
  2410  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  2411  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  2412  04E2  0821               	movf	(_time+1)^(0+128),w
  2413  04E3  1C03               	skipc
  2414  04E4  0A21               	incf	(_time+1)^(0+128),w
  2415  04E5  1683               	bsf	3,5	;RP0=1, select bank3
  2416  04E6  1703               	bsf	3,6	;RP1=1, select bank3
  2417  04E7  0226               	subwf	(??_main+8)^(0+384),w
  2418  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2419  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2420  04EA  00B7               	movwf	GetDigits@Time+1
  2421  04EB  305D               	movlw	(low (_centinaia| 0))& (0+255)
  2422  04EC  120A  158A  2536  120A  118A  	fcall	_GetDigits
  2423  04F1                     l4531:	
  2424                           
  2425                           ;main.c: 301:             ShowDigitsOnDisplay();
  2426  04F1  120A  118A  2778  120A  118A  	fcall	_ShowDigitsOnDisplay
  2427  04F6                     l4533:	
  2428                           
  2429                           ;main.c: 308:         if (secondPassed.Bit && cycled.Bit)
  2430  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2431  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2432  04F8  1C52               	btfss	_secondPassed,0
  2433  04F9  2CFB               	goto	u4291
  2434  04FA  2CFC               	goto	u4290
  2435  04FB                     u4291:	
  2436  04FB  2D02               	goto	l270
  2437  04FC                     u4290:	
  2438  04FC                     l4535:	
  2439  04FC  1C51               	btfss	_cycled,0
  2440  04FD  2CFF               	goto	u4301
  2441  04FE  2D00               	goto	u4300
  2442  04FF                     u4301:	
  2443  04FF  2D02               	goto	l270
  2444  0500                     u4300:	
  2445  0500                     l4537:	
  2446                           
  2447                           ;main.c: 309:         {;main.c: 310:             secondPassed.Bit = 0;
  2448  0500  1052               	bcf	_secondPassed,0
  2449                           
  2450                           ;main.c: 311:             cycled.Bit = 0;
  2451  0501  1051               	bcf	_cycled,0
  2452  0502                     l270:	
  2453                           ;main.c: 312:         }
  2454                           
  2455                           
  2456                           ;main.c: 313:         if (secondPassed.Bit && !cycled.Bit)
  2457  0502  1C52               	btfss	_secondPassed,0
  2458  0503  2D05               	goto	u4311
  2459  0504  2D06               	goto	u4310
  2460  0505                     u4311:	
  2461  0505  2889               	goto	l4403
  2462  0506                     u4310:	
  2463  0506                     l4539:	
  2464  0506  1851               	btfsc	_cycled,0
  2465  0507  2D09               	goto	u4321
  2466  0508  2D0A               	goto	u4320
  2467  0509                     u4321:	
  2468  0509  2889               	goto	l4403
  2469  050A                     u4320:	
  2470  050A                     l4541:	
  2471                           
  2472                           ;main.c: 314:         {;main.c: 315:             cycled.Bit = 1;
  2473  050A  1451               	bsf	_cycled,0
  2474  050B  2889               	goto	l4403
  2475  050C  120A  118A  2810   	ljmp	start
  2476  050F                     __end_of_main:	
  2477                           
  2478                           	psect	text1
  2479  09C2                     __ptext1:	
  2480 ;; *************** function _sendByte *****************
  2481 ;; Defined at:
  2482 ;;		line 379 in file "main.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  byte0           1    wreg     unsigned char 
  2485 ;;  byte1           1   24[BANK0 ] unsigned char 
  2486 ;;  valore          1   25[BANK0 ] unsigned char 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  byte0           1   29[BANK0 ] unsigned char 
  2489 ;;  i               1   31[BANK0 ] unsigned char 
  2490 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2491 ;;		 -> BuildByte@txByte(5), 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2501 ;;      Params:         0       2       0       0       0
  2502 ;;      Locals:         0       3       0       0       0
  2503 ;;      Temps:          0       3       0       0       0
  2504 ;;      Totals:         0       8       0       0       0
  2505 ;;Total ram usage:        8 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    4
  2508 ;; This function calls:
  2509 ;;		_BuildByte
  2510 ;;		_UART_TxChar
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _sendByte
  2518  09C2                     _sendByte:	
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2522                           ;sendByte@byte0 stored from wreg
  2523  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  2524  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  2525  09C4  00BD               	movwf	sendByte@byte0
  2526  09C5                     l4267:	
  2527                           
  2528                           ;main.c: 379: void sendByte(char byte0, char byte1, char valore);main.c: 380: {;main.c: 
      +                          381:     char *txByte;;main.c: 382:     txByte = BuildByte(byte0, byte1, valore);
  2529  09C5  0838               	movf	sendByte@byte1,w
  2530  09C6  00BA               	movwf	??_sendByte
  2531  09C7  083A               	movf	??_sendByte,w
  2532  09C8  00A4               	movwf	BuildByte@byte1
  2533  09C9  0839               	movf	sendByte@valore,w
  2534  09CA  00BB               	movwf	??_sendByte+1
  2535  09CB  083B               	movf	??_sendByte+1,w
  2536  09CC  00A5               	movwf	BuildByte@valore
  2537  09CD  083D               	movf	sendByte@byte0,w
  2538  09CE  120A  158A  266F  120A  158A  	fcall	_BuildByte
  2539  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  2540  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  2541  09D5  00BC               	movwf	??_sendByte+2
  2542  09D6  083C               	movf	??_sendByte+2,w
  2543  09D7  00BE               	movwf	sendByte@txByte
  2544  09D8                     l4269:	
  2545                           
  2546                           ;main.c: 384:     for (unsigned char i = 0; i < 5; i++)
  2547  09D8  01BF               	clrf	sendByte@i
  2548  09D9                     l4275:	
  2549                           
  2550                           ;main.c: 385:     {;main.c: 386:         UART_TxChar(*(txByte++));
  2551  09D9  083E               	movf	sendByte@txByte,w
  2552  09DA  0084               	movwf	4
  2553  09DB  1383               	bcf	3,7	;select IRP bank0
  2554  09DC  0800               	movf	0,w
  2555  09DD  120A  118A  27F4  120A  158A  	fcall	_UART_TxChar
  2556  09E2                     l4277:	
  2557  09E2  3001               	movlw	1
  2558  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  2559  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  2560  09E5  00BA               	movwf	??_sendByte
  2561  09E6  083A               	movf	??_sendByte,w
  2562  09E7  07BE               	addwf	sendByte@txByte,f
  2563  09E8                     l4279:	
  2564                           
  2565                           ;main.c: 387:     }
  2566  09E8  3001               	movlw	1
  2567  09E9  00BA               	movwf	??_sendByte
  2568  09EA  083A               	movf	??_sendByte,w
  2569  09EB  07BF               	addwf	sendByte@i,f
  2570  09EC                     l4281:	
  2571  09EC  3005               	movlw	5
  2572  09ED  023F               	subwf	sendByte@i,w
  2573  09EE  1C03               	skipc
  2574  09EF  29F1               	goto	u4031
  2575  09F0  29F2               	goto	u4030
  2576  09F1                     u4031:	
  2577  09F1  29D9               	goto	l4275
  2578  09F2                     u4030:	
  2579  09F2                     l309:	
  2580  09F2  0008               	return
  2581  09F3                     __end_of_sendByte:	
  2582                           
  2583                           	psect	text2
  2584  07F4                     __ptext2:	
  2585 ;; *************** function _UART_TxChar *****************
  2586 ;; Defined at:
  2587 ;;		line 354 in file "main.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  ch              1    wreg     unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  ch              1    4[BANK0 ] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         0       0       0       0       0
  2602 ;;      Locals:         0       1       0       0       0
  2603 ;;      Temps:          0       0       0       0       0
  2604 ;;      Totals:         0       1       0       0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    3
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_sendByte
  2612 ;;		_UART_Write_Text
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function _UART_TxChar
  2618  07F4                     _UART_TxChar:	
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in _UART_TxChar: [wreg]
  2622                           ;UART_TxChar@ch stored from wreg
  2623  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  2624  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  2625  07F6  00A4               	movwf	UART_TxChar@ch
  2626  07F7                     l3941:	
  2627  07F7                     l289:	
  2628                           ;main.c: 357:         ;
  2629                           
  2630                           
  2631                           ;main.c: 356:     while (!TXIF)
  2632  07F7  1E0C               	btfss	12,4	;volatile
  2633  07F8  2FFA               	goto	u3481
  2634  07F9  2FFB               	goto	u3480
  2635  07FA                     u3481:	
  2636  07FA  2FF7               	goto	l289
  2637  07FB                     u3480:	
  2638  07FB                     l291:	
  2639                           
  2640                           ;main.c: 358:     TXIF = 0;
  2641  07FB  120C               	bcf	12,4	;volatile
  2642  07FC                     l3943:	
  2643                           
  2644                           ;main.c: 359:     TXREG = ch;
  2645  07FC  0824               	movf	UART_TxChar@ch,w
  2646  07FD  0099               	movwf	25	;volatile
  2647  07FE                     l292:	
  2648  07FE  0008               	return
  2649  07FF                     __end_of_UART_TxChar:	
  2650                           
  2651                           	psect	text3
  2652  0E6F                     __ptext3:	
  2653 ;; *************** function _BuildByte *****************
  2654 ;; Defined at:
  2655 ;;		line 2 in file "./CustomLib/Serial.h"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  byte0           1    wreg     unsigned char 
  2658 ;;  byte1           1    4[BANK0 ] unsigned char 
  2659 ;;  valore          1    5[BANK0 ] unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  byte0           1    8[BANK0 ] unsigned char 
  2662 ;;  y               2   18[BANK0 ] int 
  2663 ;;  y               2   16[BANK0 ] int 
  2664 ;;  i               2   22[BANK0 ] int 
  2665 ;;  i               2   20[BANK0 ] int 
  2666 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2667 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2668 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      PTR unsigned char 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2678 ;;      Params:         0       2       0       0       0
  2679 ;;      Locals:         0      16       0       0       0
  2680 ;;      Temps:          0       2       0       0       0
  2681 ;;      Totals:         0      20       0       0       0
  2682 ;;Total ram usage:       20 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    3
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_sendByte
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           
  2693                           ;psect for function _BuildByte
  2694  0E6F                     _BuildByte:	
  2695                           
  2696                           ;incstack = 0
  2697                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2698                           ;BuildByte@byte0 stored from wreg
  2699  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0E71  00A8               	movwf	BuildByte@byte0
  2702  0E72                     l3859:	
  2703                           
  2704                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2705  0E72  0828               	movf	BuildByte@byte0,w
  2706  0E73  397F               	andlw	127
  2707  0E74  00A6               	movwf	??_BuildByte
  2708  0E75  0826               	movf	??_BuildByte,w
  2709  0E76  00A9               	movwf	BuildByte@txByte
  2710                           
  2711                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2712  0E77  0824               	movf	BuildByte@byte1,w
  2713  0E78  397F               	andlw	127
  2714  0E79  00A6               	movwf	??_BuildByte
  2715  0E7A  0826               	movf	??_BuildByte,w
  2716  0E7B  00AA               	movwf	BuildByte@txByte+1
  2717                           
  2718                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2719  0E7C  0825               	movf	BuildByte@valore,w
  2720  0E7D  397F               	andlw	127
  2721  0E7E  00A6               	movwf	??_BuildByte
  2722  0E7F  0826               	movf	??_BuildByte,w
  2723  0E80  00AB               	movwf	BuildByte@txByte+2
  2724  0E81                     l3861:	
  2725                           
  2726                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2727  0E81  0825               	movf	BuildByte@valore,w
  2728  0E82  00A6               	movwf	??_BuildByte
  2729  0E83  3007               	movlw	7
  2730  0E84                     u3375:	
  2731  0E84  1003               	clrc
  2732  0E85  0CA6               	rrf	??_BuildByte,f
  2733  0E86  3EFF               	addlw	-1
  2734  0E87  1D03               	skipz
  2735  0E88  2E84               	goto	u3375
  2736  0E89  0826               	movf	??_BuildByte,w
  2737  0E8A  397F               	andlw	127
  2738  0E8B  00A7               	movwf	??_BuildByte+1
  2739  0E8C  0827               	movf	??_BuildByte+1,w
  2740  0E8D  00AC               	movwf	BuildByte@txByte+3
  2741  0E8E                     l3863:	
  2742                           
  2743                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2744  0E8E  01AE               	clrf	BuildByte@sommaRow
  2745  0E8F                     l3865:	
  2746                           
  2747                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2748  0E8F  01AF               	clrf	BuildByte@sommaColumn
  2749  0E90                     l3867:	
  2750                           
  2751                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2752  0E90  01B4               	clrf	BuildByte@i
  2753  0E91  01B5               	clrf	BuildByte@i+1
  2754  0E92                     l3873:	
  2755                           
  2756                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2757  0E92  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0E93  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0E94  01B0               	clrf	BuildByte@y
  2760  0E95  01B1               	clrf	BuildByte@y+1
  2761  0E96                     l3879:	
  2762                           
  2763                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2764  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0E98  0834               	movf	BuildByte@i,w
  2767  0E99  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2768  0E9A  0084               	movwf	4
  2769  0E9B  1383               	bcf	3,7	;select IRP bank0
  2770  0E9C  0800               	movf	0,w
  2771  0E9D  00A6               	movwf	??_BuildByte
  2772  0E9E  0A30               	incf	BuildByte@y,w
  2773  0E9F  2EA2               	goto	u3384
  2774  0EA0                     u3385:	
  2775  0EA0  1003               	clrc
  2776  0EA1  0CA6               	rrf	??_BuildByte,f
  2777  0EA2                     u3384:	
  2778  0EA2  3EFF               	addlw	-1
  2779  0EA3  1D03               	skipz
  2780  0EA4  2EA0               	goto	u3385
  2781  0EA5  0826               	movf	??_BuildByte,w
  2782  0EA6  3901               	andlw	1
  2783  0EA7  00A7               	movwf	??_BuildByte+1
  2784  0EA8  0827               	movf	??_BuildByte+1,w
  2785  0EA9  07AE               	addwf	BuildByte@sommaRow,f
  2786  0EAA                     l3881:	
  2787                           
  2788                           ;./CustomLib/Serial.h: 18:         }
  2789  0EAA  3001               	movlw	1
  2790  0EAB  07B0               	addwf	BuildByte@y,f
  2791  0EAC  1803               	skipnc
  2792  0EAD  0AB1               	incf	BuildByte@y+1,f
  2793  0EAE  3000               	movlw	0
  2794  0EAF  07B1               	addwf	BuildByte@y+1,f
  2795  0EB0                     l3883:	
  2796  0EB0  0831               	movf	BuildByte@y+1,w
  2797  0EB1  3A80               	xorlw	128
  2798  0EB2  00FF               	movwf	btemp+1
  2799  0EB3  3080               	movlw	128
  2800  0EB4  027F               	subwf	btemp+1,w
  2801  0EB5  1D03               	skipz
  2802  0EB6  2EB9               	goto	u3395
  2803  0EB7  3008               	movlw	8
  2804  0EB8  0230               	subwf	BuildByte@y,w
  2805  0EB9                     u3395:	
  2806  0EB9  1C03               	skipc
  2807  0EBA  2EBC               	goto	u3391
  2808  0EBB  2EBD               	goto	u3390
  2809  0EBC                     u3391:	
  2810  0EBC  2E96               	goto	l3879
  2811  0EBD                     u3390:	
  2812  0EBD                     l123:	
  2813                           
  2814                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2815  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0EBF  1C2E               	btfss	BuildByte@sommaRow,0
  2818  0EC0  2EC2               	goto	u3401
  2819  0EC1  2EC3               	goto	u3400
  2820  0EC2                     u3401:	
  2821  0EC2  2ECB               	goto	l3887
  2822  0EC3                     u3400:	
  2823  0EC3                     l3885:	
  2824                           
  2825                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2826  0EC3  3080               	movlw	128
  2827  0EC4  00A6               	movwf	??_BuildByte
  2828  0EC5  0834               	movf	BuildByte@i,w
  2829  0EC6  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2830  0EC7  0084               	movwf	4
  2831  0EC8  0826               	movf	??_BuildByte,w
  2832  0EC9  1383               	bcf	3,7	;select IRP bank0
  2833  0ECA  0780               	addwf	0,f
  2834  0ECB                     l3887:	
  2835                           
  2836                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2837  0ECB  01AE               	clrf	BuildByte@sommaRow
  2838  0ECC                     l3891:	
  2839                           ;./CustomLib/Serial.h: 23:         }
  2840                           
  2841                           
  2842                           ;./CustomLib/Serial.h: 28:     }
  2843  0ECC  3001               	movlw	1
  2844  0ECD  07B4               	addwf	BuildByte@i,f
  2845  0ECE  1803               	skipnc
  2846  0ECF  0AB5               	incf	BuildByte@i+1,f
  2847  0ED0  3000               	movlw	0
  2848  0ED1  07B5               	addwf	BuildByte@i+1,f
  2849  0ED2                     l3893:	
  2850  0ED2  0835               	movf	BuildByte@i+1,w
  2851  0ED3  3A80               	xorlw	128
  2852  0ED4  00FF               	movwf	btemp+1
  2853  0ED5  3080               	movlw	128
  2854  0ED6  027F               	subwf	btemp+1,w
  2855  0ED7  1D03               	skipz
  2856  0ED8  2EDB               	goto	u3415
  2857  0ED9  3004               	movlw	4
  2858  0EDA  0234               	subwf	BuildByte@i,w
  2859  0EDB                     u3415:	
  2860  0EDB  1C03               	skipc
  2861  0EDC  2EDE               	goto	u3411
  2862  0EDD  2EDF               	goto	u3410
  2863  0EDE                     u3411:	
  2864  0EDE  2E92               	goto	l3873
  2865  0EDF                     u3410:	
  2866  0EDF                     l3895:	
  2867                           
  2868                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2869  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0EE1  01B6               	clrf	BuildByte@i_355
  2872  0EE2  01B7               	clrf	BuildByte@i_355+1
  2873  0EE3                     l3901:	
  2874                           
  2875                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2876  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  2877  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  2878  0EE5  01B2               	clrf	BuildByte@y_356
  2879  0EE6  01B3               	clrf	BuildByte@y_356+1
  2880  0EE7                     l3907:	
  2881                           
  2882                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2883  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  2885  0EE9  0832               	movf	BuildByte@y_356,w
  2886  0EEA  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2887  0EEB  0084               	movwf	4
  2888  0EEC  1383               	bcf	3,7	;select IRP bank0
  2889  0EED  0800               	movf	0,w
  2890  0EEE  00A6               	movwf	??_BuildByte
  2891  0EEF  0A36               	incf	BuildByte@i_355,w
  2892  0EF0  2EF3               	goto	u3424
  2893  0EF1                     u3425:	
  2894  0EF1  1003               	clrc
  2895  0EF2  0CA6               	rrf	??_BuildByte,f
  2896  0EF3                     u3424:	
  2897  0EF3  3EFF               	addlw	-1
  2898  0EF4  1D03               	skipz
  2899  0EF5  2EF1               	goto	u3425
  2900  0EF6  0826               	movf	??_BuildByte,w
  2901  0EF7  3901               	andlw	1
  2902  0EF8  00A7               	movwf	??_BuildByte+1
  2903  0EF9  0827               	movf	??_BuildByte+1,w
  2904  0EFA  07AF               	addwf	BuildByte@sommaColumn,f
  2905  0EFB                     l3909:	
  2906                           
  2907                           ;./CustomLib/Serial.h: 37:         }
  2908  0EFB  3001               	movlw	1
  2909  0EFC  07B2               	addwf	BuildByte@y_356,f
  2910  0EFD  1803               	skipnc
  2911  0EFE  0AB3               	incf	BuildByte@y_356+1,f
  2912  0EFF  3000               	movlw	0
  2913  0F00  07B3               	addwf	BuildByte@y_356+1,f
  2914  0F01                     l3911:	
  2915  0F01  0833               	movf	BuildByte@y_356+1,w
  2916  0F02  3A80               	xorlw	128
  2917  0F03  00FF               	movwf	btemp+1
  2918  0F04  3080               	movlw	128
  2919  0F05  027F               	subwf	btemp+1,w
  2920  0F06  1D03               	skipz
  2921  0F07  2F0A               	goto	u3435
  2922  0F08  3004               	movlw	4
  2923  0F09  0232               	subwf	BuildByte@y_356,w
  2924  0F0A                     u3435:	
  2925  0F0A  1C03               	skipc
  2926  0F0B  2F0D               	goto	u3431
  2927  0F0C  2F0E               	goto	u3430
  2928  0F0D                     u3431:	
  2929  0F0D  2EE7               	goto	l3907
  2930  0F0E                     u3430:	
  2931  0F0E                     l129:	
  2932                           
  2933                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2934  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0F10  1C2F               	btfss	BuildByte@sommaColumn,0
  2937  0F11  2F13               	goto	u3441
  2938  0F12  2F14               	goto	u3440
  2939  0F13                     u3441:	
  2940  0F13  2F21               	goto	l3915
  2941  0F14                     u3440:	
  2942  0F14                     l3913:	
  2943                           
  2944                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2945  0F14  3001               	movlw	1
  2946  0F15  00A6               	movwf	??_BuildByte
  2947  0F16  0A36               	incf	BuildByte@i_355,w
  2948  0F17  2F1A               	goto	u3454
  2949  0F18                     u3455:	
  2950  0F18  1003               	clrc
  2951  0F19  0DA6               	rlf	??_BuildByte,f
  2952  0F1A                     u3454:	
  2953  0F1A  3EFF               	addlw	-1
  2954  0F1B  1D03               	skipz
  2955  0F1C  2F18               	goto	u3455
  2956  0F1D  0826               	movf	??_BuildByte,w
  2957  0F1E  00A7               	movwf	??_BuildByte+1
  2958  0F1F  0827               	movf	??_BuildByte+1,w
  2959  0F20  07AD               	addwf	BuildByte@txByte+4,f
  2960  0F21                     l3915:	
  2961                           
  2962                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2963  0F21  01AF               	clrf	BuildByte@sommaColumn
  2964  0F22                     l3919:	
  2965                           ;./CustomLib/Serial.h: 42:         }
  2966                           
  2967                           
  2968                           ;./CustomLib/Serial.h: 47:     }
  2969  0F22  3001               	movlw	1
  2970  0F23  07B6               	addwf	BuildByte@i_355,f
  2971  0F24  1803               	skipnc
  2972  0F25  0AB7               	incf	BuildByte@i_355+1,f
  2973  0F26  3000               	movlw	0
  2974  0F27  07B7               	addwf	BuildByte@i_355+1,f
  2975  0F28                     l3921:	
  2976  0F28  0837               	movf	BuildByte@i_355+1,w
  2977  0F29  3A80               	xorlw	128
  2978  0F2A  00FF               	movwf	btemp+1
  2979  0F2B  3080               	movlw	128
  2980  0F2C  027F               	subwf	btemp+1,w
  2981  0F2D  1D03               	skipz
  2982  0F2E  2F31               	goto	u3465
  2983  0F2F  3008               	movlw	8
  2984  0F30  0236               	subwf	BuildByte@i_355,w
  2985  0F31                     u3465:	
  2986  0F31  1C03               	skipc
  2987  0F32  2F34               	goto	u3461
  2988  0F33  2F35               	goto	u3460
  2989  0F34                     u3461:	
  2990  0F34  2EE3               	goto	l3901
  2991  0F35                     u3460:	
  2992  0F35                     l3923:	
  2993                           
  2994                           ;./CustomLib/Serial.h: 49:     return txByte;
  2995  0F35  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2996  0F36                     l132:	
  2997  0F36  0008               	return
  2998  0F37                     __end_of_BuildByte:	
  2999                           
  3000                           	psect	text4
  3001  09F3                     __ptext4:	
  3002 ;; *************** function _map *****************
  3003 ;; Defined at:
  3004 ;;		line 1 in file "./CustomLib/Conversions.h"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  x               2   20[BANK0 ] int 
  3007 ;;  in_min          2   22[BANK0 ] int 
  3008 ;;  in_max          2   24[BANK0 ] int 
  3009 ;;  out_min         2   26[BANK0 ] int 
  3010 ;;  out_max         2   28[BANK0 ] int 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  2   20[BANK0 ] int 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0, pclath, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3022 ;;      Params:         0      10       0       0       0
  3023 ;;      Locals:         0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0
  3025 ;;      Totals:         0      10       0       0       0
  3026 ;;Total ram usage:       10 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    4
  3029 ;; This function calls:
  3030 ;;		___awdiv
  3031 ;;		___wmul
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _map
  3039  09F3                     _map:	
  3040  09F3                     l4099:	
  3041                           ;incstack = 0
  3042                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3043                           
  3044                           
  3045                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3046  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3047  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3048  09F5  0836               	movf	map@in_min,w
  3049  09F6  0238               	subwf	map@in_max,w
  3050  09F7  00AB               	movwf	___awdiv@divisor
  3051  09F8  0837               	movf	map@in_min+1,w
  3052  09F9  1C03               	skipc
  3053  09FA  0A37               	incf	map@in_min+1,w
  3054  09FB  0239               	subwf	map@in_max+1,w
  3055  09FC  00AC               	movwf	___awdiv@divisor+1
  3056  09FD  0836               	movf	map@in_min,w
  3057  09FE  0234               	subwf	map@x,w
  3058  09FF  00A4               	movwf	___wmul@multiplier
  3059  0A00  0837               	movf	map@in_min+1,w
  3060  0A01  1C03               	skipc
  3061  0A02  0A37               	incf	map@in_min+1,w
  3062  0A03  0235               	subwf	map@x+1,w
  3063  0A04  00A5               	movwf	___wmul@multiplier+1
  3064  0A05  083A               	movf	map@out_min,w
  3065  0A06  023C               	subwf	map@out_max,w
  3066  0A07  00A6               	movwf	___wmul@multiplicand
  3067  0A08  083B               	movf	map@out_min+1,w
  3068  0A09  1C03               	skipc
  3069  0A0A  0A3B               	incf	map@out_min+1,w
  3070  0A0B  023D               	subwf	map@out_max+1,w
  3071  0A0C  00A7               	movwf	___wmul@multiplicand+1
  3072  0A0D  120A  158A  216A  120A  158A  	fcall	___wmul
  3073  0A12  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0A13  1303               	bcf	3,6	;RP1=0, select bank0
  3075  0A14  0825               	movf	?___wmul+1,w
  3076  0A15  00AE               	movwf	___awdiv@dividend+1
  3077  0A16  0824               	movf	?___wmul,w
  3078  0A17  00AD               	movwf	___awdiv@dividend
  3079  0A18  120A  158A  245F  120A  158A  	fcall	___awdiv
  3080  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  3081  0A1E  1303               	bcf	3,6	;RP1=0, select bank0
  3082  0A1F  083A               	movf	map@out_min,w
  3083  0A20  072B               	addwf	?___awdiv,w
  3084  0A21  00B4               	movwf	?_map
  3085  0A22  083B               	movf	map@out_min+1,w
  3086  0A23  1803               	skipnc
  3087  0A24  0A3B               	incf	map@out_min+1,w
  3088  0A25  072C               	addwf	?___awdiv+1,w
  3089  0A26  00B5               	movwf	?_map+1
  3090  0A27                     l81:	
  3091  0A27  0008               	return
  3092  0A28                     __end_of_map:	
  3093                           
  3094                           	psect	text5
  3095  096A                     __ptext5:	
  3096 ;; *************** function ___wmul *****************
  3097 ;; Defined at:
  3098 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3101 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  product         2    8[BANK0 ] unsigned int 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2    4[BANK0 ] unsigned int 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3113 ;;      Params:         0       4       0       0       0
  3114 ;;      Locals:         0       2       0       0       0
  3115 ;;      Temps:          0       0       0       0       0
  3116 ;;      Totals:         0       6       0       0       0
  3117 ;;Total ram usage:        6 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    3
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_map
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           
  3128                           ;psect for function ___wmul
  3129  096A                     ___wmul:	
  3130  096A                     l3949:	
  3131                           ;incstack = 0
  3132                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3133                           
  3134  096A  1283               	bcf	3,5	;RP0=0, select bank0
  3135  096B  1303               	bcf	3,6	;RP1=0, select bank0
  3136  096C  01A8               	clrf	___wmul@product
  3137  096D  01A9               	clrf	___wmul@product+1
  3138  096E                     l3951:	
  3139  096E  1C24               	btfss	___wmul@multiplier,0
  3140  096F  2971               	goto	u3491
  3141  0970  2972               	goto	u3490
  3142  0971                     u3491:	
  3143  0971  2978               	goto	l445
  3144  0972                     u3490:	
  3145  0972                     l3953:	
  3146  0972  0826               	movf	___wmul@multiplicand,w
  3147  0973  07A8               	addwf	___wmul@product,f
  3148  0974  1803               	skipnc
  3149  0975  0AA9               	incf	___wmul@product+1,f
  3150  0976  0827               	movf	___wmul@multiplicand+1,w
  3151  0977  07A9               	addwf	___wmul@product+1,f
  3152  0978                     l445:	
  3153  0978  3001               	movlw	1
  3154  0979                     u3505:	
  3155  0979  1003               	clrc
  3156  097A  0DA6               	rlf	___wmul@multiplicand,f
  3157  097B  0DA7               	rlf	___wmul@multiplicand+1,f
  3158  097C  3EFF               	addlw	-1
  3159  097D  1D03               	skipz
  3160  097E  2979               	goto	u3505
  3161  097F                     l3955:	
  3162  097F  3001               	movlw	1
  3163  0980                     u3515:	
  3164  0980  1003               	clrc
  3165  0981  0CA5               	rrf	___wmul@multiplier+1,f
  3166  0982  0CA4               	rrf	___wmul@multiplier,f
  3167  0983  3EFF               	addlw	-1
  3168  0984  1D03               	skipz
  3169  0985  2980               	goto	u3515
  3170  0986                     l3957:	
  3171  0986  0824               	movf	___wmul@multiplier,w
  3172  0987  0425               	iorwf	___wmul@multiplier+1,w
  3173  0988  1D03               	btfss	3,2
  3174  0989  298B               	goto	u3521
  3175  098A  298C               	goto	u3520
  3176  098B                     u3521:	
  3177  098B  296E               	goto	l3951
  3178  098C                     u3520:	
  3179  098C                     l3959:	
  3180  098C  0829               	movf	___wmul@product+1,w
  3181  098D  00A5               	movwf	?___wmul+1
  3182  098E  0828               	movf	___wmul@product,w
  3183  098F  00A4               	movwf	?___wmul
  3184  0990                     l447:	
  3185  0990  0008               	return
  3186  0991                     __end_of___wmul:	
  3187                           
  3188                           	psect	text6
  3189  0AF4                     __ptext6:	
  3190 ;; *************** function _luciSemaforo *****************
  3191 ;; Defined at:
  3192 ;;		line 419 in file "main.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  index           1    wreg     unsigned char 
  3195 ;;  lux             1    4[BANK0 ] unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  index           1    7[BANK0 ] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       1       0       0       0
  3208 ;;      Locals:         0       1       0       0       0
  3209 ;;      Temps:          0       2       0       0       0
  3210 ;;      Totals:         0       4       0       0       0
  3211 ;;Total ram usage:        4 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    3
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _luciSemaforo
  3223  0AF4                     _luciSemaforo:	
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3227                           ;luciSemaforo@index stored from wreg
  3228  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0AF6  00A7               	movwf	luciSemaforo@index
  3231  0AF7                     l4293:	
  3232                           
  3233                           ;main.c: 419: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 420: {;m
      +                          ain.c: 421:     switch (index)
  3234  0AF7  2B36               	goto	l4305
  3235  0AF8                     l326:	
  3236                           ;main.c: 425:         {;main.c: 426:         case 0:
  3237                           
  3238                           
  3239                           ;main.c: 427:             PORTCbits.RC1 = 0;
  3240  0AF8  1087               	bcf	7,1	;volatile
  3241                           
  3242                           ;main.c: 428:             PORTCbits.RC3 = 0;
  3243  0AF9  1187               	bcf	7,3	;volatile
  3244                           
  3245                           ;main.c: 429:             PORTCbits.RC0 = 1;
  3246  0AFA  1407               	bsf	7,0	;volatile
  3247                           
  3248                           ;main.c: 430:             break;
  3249  0AFB  2B46               	goto	l337
  3250  0AFC                     l328:	
  3251                           ;main.c: 431:         case 1:
  3252                           
  3253                           
  3254                           ;main.c: 432:             PORTCbits.RC0 = 0;
  3255  0AFC  1007               	bcf	7,0	;volatile
  3256                           
  3257                           ;main.c: 433:             PORTCbits.RC3 = 0;
  3258  0AFD  1187               	bcf	7,3	;volatile
  3259                           
  3260                           ;main.c: 434:             PORTCbits.RC1 = 1;
  3261  0AFE  1487               	bsf	7,1	;volatile
  3262                           
  3263                           ;main.c: 435:             break;
  3264  0AFF  2B46               	goto	l337
  3265  0B00                     l329:	
  3266                           ;main.c: 436:         case 2:
  3267                           
  3268                           
  3269                           ;main.c: 437:             PORTCbits.RC0 = 0;
  3270  0B00  1007               	bcf	7,0	;volatile
  3271                           
  3272                           ;main.c: 438:             PORTCbits.RC1 = 0;
  3273  0B01  1087               	bcf	7,1	;volatile
  3274                           
  3275                           ;main.c: 439:             PORTCbits.RC3 = 1;
  3276  0B02  1587               	bsf	7,3	;volatile
  3277                           
  3278                           ;main.c: 440:             break;
  3279  0B03  2B46               	goto	l337
  3280  0B04                     l4297:	
  3281  0B04  0824               	movf	luciSemaforo@lux,w
  3282  0B05  00A5               	movwf	??_luciSemaforo
  3283  0B06  01A6               	clrf	??_luciSemaforo+1
  3284                           
  3285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3286                           ; Switch size 1, requested type "simple"
  3287                           ; Number of cases is 1, Range of values is 0 to 0
  3288                           ; switch strategies available:
  3289                           ; Name         Instructions Cycles
  3290                           ; simple_byte            4     3 (average)
  3291                           ; direct_byte           11     8 (fixed)
  3292                           ; jumptable            260     6 (fixed)
  3293                           ;	Chosen strategy is simple_byte
  3294  0B07  0826               	movf	??_luciSemaforo+1,w
  3295  0B08  3A00               	xorlw	0	; case 0
  3296  0B09  1903               	skipnz
  3297  0B0A  2B0C               	goto	l4757
  3298  0B0B  2B46               	goto	l337
  3299  0B0C                     l4757:	
  3300                           
  3301                           ; Switch size 1, requested type "simple"
  3302                           ; Number of cases is 3, Range of values is 0 to 2
  3303                           ; switch strategies available:
  3304                           ; Name         Instructions Cycles
  3305                           ; simple_byte           10     6 (average)
  3306                           ; direct_byte           17     8 (fixed)
  3307                           ; jumptable            260     6 (fixed)
  3308                           ;	Chosen strategy is simple_byte
  3309  0B0C  0825               	movf	??_luciSemaforo,w
  3310  0B0D  3A00               	xorlw	0	; case 0
  3311  0B0E  1903               	skipnz
  3312  0B0F  2AF8               	goto	l326
  3313  0B10  3A01               	xorlw	1	; case 1
  3314  0B11  1903               	skipnz
  3315  0B12  2AFC               	goto	l328
  3316  0B13  3A03               	xorlw	3	; case 2
  3317  0B14  1903               	skipnz
  3318  0B15  2B00               	goto	l329
  3319  0B16  2B46               	goto	l337
  3320  0B17                     l333:	
  3321                           ;main.c: 446:         {;main.c: 447:         case 0:
  3322                           
  3323                           
  3324                           ;main.c: 448:             PORTBbits.RB1 = 0;
  3325  0B17  1086               	bcf	6,1	;volatile
  3326                           
  3327                           ;main.c: 449:             PORTBbits.RB6 = 0;
  3328  0B18  1306               	bcf	6,6	;volatile
  3329                           
  3330                           ;main.c: 450:             PORTBbits.RB7 = 1;
  3331  0B19  1786               	bsf	6,7	;volatile
  3332                           
  3333                           ;main.c: 451:             break;
  3334  0B1A  2B46               	goto	l337
  3335  0B1B                     l335:	
  3336                           ;main.c: 452:         case 1:
  3337                           
  3338                           
  3339                           ;main.c: 453:             PORTBbits.RB7 = 0;
  3340  0B1B  1386               	bcf	6,7	;volatile
  3341                           
  3342                           ;main.c: 454:             PORTBbits.RB6 = 0;
  3343  0B1C  1306               	bcf	6,6	;volatile
  3344                           
  3345                           ;main.c: 455:             PORTBbits.RB1 = 1;
  3346  0B1D  1486               	bsf	6,1	;volatile
  3347                           
  3348                           ;main.c: 456:             break;
  3349  0B1E  2B46               	goto	l337
  3350  0B1F                     l336:	
  3351                           ;main.c: 457:         case 2:
  3352                           
  3353                           
  3354                           ;main.c: 458:             PORTBbits.RB7 = 0;
  3355  0B1F  1386               	bcf	6,7	;volatile
  3356                           
  3357                           ;main.c: 459:             PORTBbits.RB1 = 0;
  3358  0B20  1086               	bcf	6,1	;volatile
  3359                           
  3360                           ;main.c: 460:             PORTBbits.RB6 = 1;
  3361  0B21  1706               	bsf	6,6	;volatile
  3362                           
  3363                           ;main.c: 461:             break;
  3364  0B22  2B46               	goto	l337
  3365  0B23                     l4301:	
  3366  0B23  0824               	movf	luciSemaforo@lux,w
  3367  0B24  00A5               	movwf	??_luciSemaforo
  3368  0B25  01A6               	clrf	??_luciSemaforo+1
  3369                           
  3370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3371                           ; Switch size 1, requested type "simple"
  3372                           ; Number of cases is 1, Range of values is 0 to 0
  3373                           ; switch strategies available:
  3374                           ; Name         Instructions Cycles
  3375                           ; simple_byte            4     3 (average)
  3376                           ; direct_byte           11     8 (fixed)
  3377                           ; jumptable            260     6 (fixed)
  3378                           ;	Chosen strategy is simple_byte
  3379  0B26  0826               	movf	??_luciSemaforo+1,w
  3380  0B27  3A00               	xorlw	0	; case 0
  3381  0B28  1903               	skipnz
  3382  0B29  2B2B               	goto	l4759
  3383  0B2A  2B46               	goto	l337
  3384  0B2B                     l4759:	
  3385                           
  3386                           ; Switch size 1, requested type "simple"
  3387                           ; Number of cases is 3, Range of values is 0 to 2
  3388                           ; switch strategies available:
  3389                           ; Name         Instructions Cycles
  3390                           ; simple_byte           10     6 (average)
  3391                           ; direct_byte           17     8 (fixed)
  3392                           ; jumptable            260     6 (fixed)
  3393                           ;	Chosen strategy is simple_byte
  3394  0B2B  0825               	movf	??_luciSemaforo,w
  3395  0B2C  3A00               	xorlw	0	; case 0
  3396  0B2D  1903               	skipnz
  3397  0B2E  2B17               	goto	l333
  3398  0B2F  3A01               	xorlw	1	; case 1
  3399  0B30  1903               	skipnz
  3400  0B31  2B1B               	goto	l335
  3401  0B32  3A03               	xorlw	3	; case 2
  3402  0B33  1903               	skipnz
  3403  0B34  2B1F               	goto	l336
  3404  0B35  2B46               	goto	l337
  3405  0B36                     l4305:	
  3406  0B36  0827               	movf	luciSemaforo@index,w
  3407  0B37  00A5               	movwf	??_luciSemaforo
  3408  0B38  01A6               	clrf	??_luciSemaforo+1
  3409                           
  3410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 1, Range of values is 0 to 0
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte            4     3 (average)
  3416                           ; direct_byte           11     8 (fixed)
  3417                           ; jumptable            260     6 (fixed)
  3418                           ;	Chosen strategy is simple_byte
  3419  0B39  0826               	movf	??_luciSemaforo+1,w
  3420  0B3A  3A00               	xorlw	0	; case 0
  3421  0B3B  1903               	skipnz
  3422  0B3C  2B3E               	goto	l4761
  3423  0B3D  2B46               	goto	l337
  3424  0B3E                     l4761:	
  3425                           
  3426                           ; Switch size 1, requested type "simple"
  3427                           ; Number of cases is 2, Range of values is 0 to 1
  3428                           ; switch strategies available:
  3429                           ; Name         Instructions Cycles
  3430                           ; simple_byte            7     4 (average)
  3431                           ; direct_byte           14     8 (fixed)
  3432                           ; jumptable            260     6 (fixed)
  3433                           ;	Chosen strategy is simple_byte
  3434  0B3E  0825               	movf	??_luciSemaforo,w
  3435  0B3F  3A00               	xorlw	0	; case 0
  3436  0B40  1903               	skipnz
  3437  0B41  2B04               	goto	l4297
  3438  0B42  3A01               	xorlw	1	; case 1
  3439  0B43  1903               	skipnz
  3440  0B44  2B23               	goto	l4301
  3441  0B45  2B46               	goto	l337
  3442  0B46                     l337:	
  3443  0B46  0008               	return
  3444  0B47                     __end_of_luciSemaforo:	
  3445                           
  3446                           	psect	text7
  3447  08F2                     __ptext7:	
  3448 ;; *************** function _init_ADC *****************
  3449 ;; Defined at:
  3450 ;;		line 323 in file "main.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;		None
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         0       0       0       0       0
  3465 ;;      Locals:         0       0       0       0       0
  3466 ;;      Temps:          0       1       0       0       0
  3467 ;;      Totals:         0       1       0       0       0
  3468 ;;Total ram usage:        1 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    3
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_main
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           
  3479                           ;psect for function _init_ADC
  3480  08F2                     _init_ADC:	
  3481  08F2                     l4249:	
  3482                           ;incstack = 0
  3483                           ; Regs used in _init_ADC: [wreg+status,2]
  3484                           
  3485                           
  3486                           ;main.c: 325:     TRISA = 0xE3;
  3487  08F2  30E3               	movlw	227
  3488  08F3  1683               	bsf	3,5	;RP0=1, select bank1
  3489  08F4  1303               	bcf	3,6	;RP1=0, select bank1
  3490  08F5  0085               	movwf	5	;volatile
  3491  08F6                     l4251:	
  3492                           
  3493                           ;main.c: 326:     ADCON0 = 0x00;
  3494  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  3495  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  3496  08F8  019F               	clrf	31	;volatile
  3497  08F9                     l4253:	
  3498                           
  3499                           ;main.c: 327:     ADCON1 = 0x80;
  3500  08F9  3080               	movlw	128
  3501  08FA  1683               	bsf	3,5	;RP0=1, select bank1
  3502  08FB  1303               	bcf	3,6	;RP1=0, select bank1
  3503  08FC  009F               	movwf	31	;volatile
  3504  08FD                     l4255:	
  3505                           
  3506                           ;main.c: 328:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3507  08FD  3019               	movlw	25
  3508  08FE  1283               	bcf	3,5	;RP0=0, select bank0
  3509  08FF  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0900  00A4               	movwf	??_init_ADC
  3511  0901                     u4347:	
  3512  0901  0BA4               	decfsz	??_init_ADC,f
  3513  0902  2901               	goto	u4347
  3514  0903  2904               	nop2
  3515  0904                     l277:	
  3516  0904  0008               	return
  3517  0905                     __end_of_init_ADC:	
  3518                           
  3519                           	psect	text8
  3520  0F37                     __ptext8:	
  3521 ;; *************** function _bitParita *****************
  3522 ;; Defined at:
  3523 ;;		line 14 in file "./CustomLib/BitsFlow.h"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  rx              1    wreg     PTR unsigned char 
  3526 ;;		 -> dataFromGateway(15), 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  rx              1   21[BANK0 ] PTR unsigned char 
  3529 ;;		 -> dataFromGateway(15), 
  3530 ;;  y               2   19[BANK0 ] int 
  3531 ;;  y               2   17[BANK0 ] int 
  3532 ;;  i               2   24[BANK0 ] int 
  3533 ;;  i               2   22[BANK0 ] int 
  3534 ;;  errorRow        1   16[BANK0 ] unsigned char 
  3535 ;;  error           1   15[BANK0 ] unsigned char 
  3536 ;;  errorColumn     1   14[BANK0 ] unsigned char 
  3537 ;;  sommaColumn     1   13[BANK0 ] unsigned char 
  3538 ;;  sommaRow        1   12[BANK0 ] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0      14       0       0       0
  3550 ;;      Temps:          0       4       0       0       0
  3551 ;;      Totals:         0      18       0       0       0
  3552 ;;Total ram usage:       18 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    4
  3555 ;; This function calls:
  3556 ;;		_bitChange
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           
  3563                           ;psect for function _bitParita
  3564  0F37                     _bitParita:	
  3565                           
  3566                           ;incstack = 0
  3567                           ; Regs used in _bitParita: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3568                           ;bitParita@rx stored from wreg
  3569  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0F39  00B5               	movwf	bitParita@rx
  3572  0F3A                     l4115:	
  3573                           
  3574                           ;./CustomLib/BitsFlow.h: 14: void bitParita(char *rx);./CustomLib/BitsFlow.h: 15: {;./Cu
      +                          stomLib/BitsFlow.h: 16:     char error = 0;
  3575  0F3A  01AF               	clrf	bitParita@error
  3576                           
  3577                           ;./CustomLib/BitsFlow.h: 17:     char sommaRow = 0;
  3578  0F3B  01AC               	clrf	bitParita@sommaRow
  3579                           
  3580                           ;./CustomLib/BitsFlow.h: 18:     char errorRow = 0;
  3581  0F3C  01B0               	clrf	bitParita@errorRow
  3582                           
  3583                           ;./CustomLib/BitsFlow.h: 19:     char sommaColumn = 0;
  3584  0F3D  01AD               	clrf	bitParita@sommaColumn
  3585                           
  3586                           ;./CustomLib/BitsFlow.h: 20:     char errorColumn = 0;
  3587  0F3E  01AE               	clrf	bitParita@errorColumn
  3588                           
  3589                           ;./CustomLib/BitsFlow.h: 21:     for (int i = 0; i < 5; i++)
  3590  0F3F  01B6               	clrf	bitParita@i
  3591  0F40  01B7               	clrf	bitParita@i+1
  3592  0F41                     l4121:	
  3593                           
  3594                           ;./CustomLib/BitsFlow.h: 22:     {;./CustomLib/BitsFlow.h: 23:         for (int y = 0; y
      +                           < 8; y++)
  3595  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  3596  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  3597  0F43  01B1               	clrf	bitParita@y
  3598  0F44  01B2               	clrf	bitParita@y+1
  3599  0F45                     l4127:	
  3600                           
  3601                           ;./CustomLib/BitsFlow.h: 24:         {;./CustomLib/BitsFlow.h: 25:             sommaRow 
      +                          += (rx[i] >> y) & 1;
  3602  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0F47  0836               	movf	bitParita@i,w
  3605  0F48  0735               	addwf	bitParita@rx,w
  3606  0F49  00A8               	movwf	??_bitParita
  3607  0F4A  0828               	movf	??_bitParita,w
  3608  0F4B  0084               	movwf	4
  3609  0F4C  1383               	bcf	3,7	;select IRP bank0
  3610  0F4D  0800               	movf	0,w
  3611  0F4E  00A9               	movwf	??_bitParita+1
  3612  0F4F  0A31               	incf	bitParita@y,w
  3613  0F50  2F53               	goto	u3854
  3614  0F51                     u3855:	
  3615  0F51  1003               	clrc
  3616  0F52  0CA9               	rrf	??_bitParita+1,f
  3617  0F53                     u3854:	
  3618  0F53  3EFF               	addlw	-1
  3619  0F54  1D03               	skipz
  3620  0F55  2F51               	goto	u3855
  3621  0F56  0829               	movf	??_bitParita+1,w
  3622  0F57  3901               	andlw	1
  3623  0F58  00AA               	movwf	??_bitParita+2
  3624  0F59  082A               	movf	??_bitParita+2,w
  3625  0F5A  07AC               	addwf	bitParita@sommaRow,f
  3626  0F5B                     l4129:	
  3627                           
  3628                           ;./CustomLib/BitsFlow.h: 26:         }
  3629  0F5B  3001               	movlw	1
  3630  0F5C  07B1               	addwf	bitParita@y,f
  3631  0F5D  1803               	skipnc
  3632  0F5E  0AB2               	incf	bitParita@y+1,f
  3633  0F5F  3000               	movlw	0
  3634  0F60  07B2               	addwf	bitParita@y+1,f
  3635  0F61                     l4131:	
  3636  0F61  0832               	movf	bitParita@y+1,w
  3637  0F62  3A80               	xorlw	128
  3638  0F63  00FF               	movwf	btemp+1
  3639  0F64  3080               	movlw	128
  3640  0F65  027F               	subwf	btemp+1,w
  3641  0F66  1D03               	skipz
  3642  0F67  2F6A               	goto	u3865
  3643  0F68  3008               	movlw	8
  3644  0F69  0231               	subwf	bitParita@y,w
  3645  0F6A                     u3865:	
  3646  0F6A  1C03               	skipc
  3647  0F6B  2F6D               	goto	u3861
  3648  0F6C  2F6E               	goto	u3860
  3649  0F6D                     u3861:	
  3650  0F6D  2F45               	goto	l4127
  3651  0F6E                     u3860:	
  3652  0F6E                     l109:	
  3653                           
  3654                           ;./CustomLib/BitsFlow.h: 27:         if (sommaRow % 2 == 1)
  3655  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  3657  0F70  1C2C               	btfss	bitParita@sommaRow,0
  3658  0F71  2F73               	goto	u3871
  3659  0F72  2F74               	goto	u3870
  3660  0F73                     u3871:	
  3661  0F73  2F7A               	goto	l110
  3662  0F74                     u3870:	
  3663  0F74                     l4133:	
  3664                           
  3665                           ;./CustomLib/BitsFlow.h: 28:         {;./CustomLib/BitsFlow.h: 29:             error = 1
      +                          ;
  3666  0F74  01AF               	clrf	bitParita@error
  3667  0F75  0AAF               	incf	bitParita@error,f
  3668  0F76                     l4135:	
  3669                           
  3670                           ;./CustomLib/BitsFlow.h: 30:             errorRow = i;
  3671  0F76  0836               	movf	bitParita@i,w
  3672  0F77  00A8               	movwf	??_bitParita
  3673  0F78  0828               	movf	??_bitParita,w
  3674  0F79  00B0               	movwf	bitParita@errorRow
  3675  0F7A                     l110:	
  3676                           ;./CustomLib/BitsFlow.h: 31:         }
  3677                           
  3678                           
  3679                           ;./CustomLib/BitsFlow.h: 32:     }
  3680  0F7A  3001               	movlw	1
  3681  0F7B  07B6               	addwf	bitParita@i,f
  3682  0F7C  1803               	skipnc
  3683  0F7D  0AB7               	incf	bitParita@i+1,f
  3684  0F7E  3000               	movlw	0
  3685  0F7F  07B7               	addwf	bitParita@i+1,f
  3686  0F80                     l4137:	
  3687  0F80  0837               	movf	bitParita@i+1,w
  3688  0F81  3A80               	xorlw	128
  3689  0F82  00FF               	movwf	btemp+1
  3690  0F83  3080               	movlw	128
  3691  0F84  027F               	subwf	btemp+1,w
  3692  0F85  1D03               	skipz
  3693  0F86  2F89               	goto	u3885
  3694  0F87  3005               	movlw	5
  3695  0F88  0236               	subwf	bitParita@i,w
  3696  0F89                     u3885:	
  3697  0F89  1C03               	skipc
  3698  0F8A  2F8C               	goto	u3881
  3699  0F8B  2F8D               	goto	u3880
  3700  0F8C                     u3881:	
  3701  0F8C  2F41               	goto	l4121
  3702  0F8D                     u3880:	
  3703  0F8D                     l4139:	
  3704                           
  3705                           ;./CustomLib/BitsFlow.h: 33:     for (int i = 0; i < 8; i++)
  3706  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0F8F  01B8               	clrf	bitParita@i_343
  3709  0F90  01B9               	clrf	bitParita@i_343+1
  3710  0F91                     l4145:	
  3711                           
  3712                           ;./CustomLib/BitsFlow.h: 34:     {;./CustomLib/BitsFlow.h: 35:         for (int y = 0; y
      +                           < 4; y++)
  3713  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0F93  01B3               	clrf	bitParita@y_344
  3716  0F94  01B4               	clrf	bitParita@y_344+1
  3717  0F95                     l4151:	
  3718                           
  3719                           ;./CustomLib/BitsFlow.h: 37:         {;./CustomLib/BitsFlow.h: 38:             sommaColu
      +                          mn += (rx[y] >> i) & 1;
  3720  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0F97  0833               	movf	bitParita@y_344,w
  3723  0F98  0735               	addwf	bitParita@rx,w
  3724  0F99  00A8               	movwf	??_bitParita
  3725  0F9A  0828               	movf	??_bitParita,w
  3726  0F9B  0084               	movwf	4
  3727  0F9C  1383               	bcf	3,7	;select IRP bank0
  3728  0F9D  0800               	movf	0,w
  3729  0F9E  00A9               	movwf	??_bitParita+1
  3730  0F9F  0A38               	incf	bitParita@i_343,w
  3731  0FA0  2FA3               	goto	u3894
  3732  0FA1                     u3895:	
  3733  0FA1  1003               	clrc
  3734  0FA2  0CA9               	rrf	??_bitParita+1,f
  3735  0FA3                     u3894:	
  3736  0FA3  3EFF               	addlw	-1
  3737  0FA4  1D03               	skipz
  3738  0FA5  2FA1               	goto	u3895
  3739  0FA6  0829               	movf	??_bitParita+1,w
  3740  0FA7  3901               	andlw	1
  3741  0FA8  00AA               	movwf	??_bitParita+2
  3742  0FA9  082A               	movf	??_bitParita+2,w
  3743  0FAA  07AD               	addwf	bitParita@sommaColumn,f
  3744  0FAB                     l4153:	
  3745                           
  3746                           ;./CustomLib/BitsFlow.h: 39:         }
  3747  0FAB  3001               	movlw	1
  3748  0FAC  07B3               	addwf	bitParita@y_344,f
  3749  0FAD  1803               	skipnc
  3750  0FAE  0AB4               	incf	bitParita@y_344+1,f
  3751  0FAF  3000               	movlw	0
  3752  0FB0  07B4               	addwf	bitParita@y_344+1,f
  3753  0FB1                     l4155:	
  3754  0FB1  0834               	movf	bitParita@y_344+1,w
  3755  0FB2  3A80               	xorlw	128
  3756  0FB3  00FF               	movwf	btemp+1
  3757  0FB4  3080               	movlw	128
  3758  0FB5  027F               	subwf	btemp+1,w
  3759  0FB6  1D03               	skipz
  3760  0FB7  2FBA               	goto	u3905
  3761  0FB8  3004               	movlw	4
  3762  0FB9  0233               	subwf	bitParita@y_344,w
  3763  0FBA                     u3905:	
  3764  0FBA  1C03               	skipc
  3765  0FBB  2FBD               	goto	u3901
  3766  0FBC  2FBE               	goto	u3900
  3767  0FBD                     u3901:	
  3768  0FBD  2F95               	goto	l4151
  3769  0FBE                     u3900:	
  3770  0FBE                     l114:	
  3771                           
  3772                           ;./CustomLib/BitsFlow.h: 40:         if (sommaColumn % 2 == 1)
  3773  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0FC0  1C2D               	btfss	bitParita@sommaColumn,0
  3776  0FC1  2FC3               	goto	u3911
  3777  0FC2  2FC4               	goto	u3910
  3778  0FC3                     u3911:	
  3779  0FC3  2FCA               	goto	l115
  3780  0FC4                     u3910:	
  3781  0FC4                     l4157:	
  3782                           
  3783                           ;./CustomLib/BitsFlow.h: 41:         {;./CustomLib/BitsFlow.h: 42:             error = 1
      +                          ;
  3784  0FC4  01AF               	clrf	bitParita@error
  3785  0FC5  0AAF               	incf	bitParita@error,f
  3786  0FC6                     l4159:	
  3787                           
  3788                           ;./CustomLib/BitsFlow.h: 43:             errorColumn = i;
  3789  0FC6  0838               	movf	bitParita@i_343,w
  3790  0FC7  00A8               	movwf	??_bitParita
  3791  0FC8  0828               	movf	??_bitParita,w
  3792  0FC9  00AE               	movwf	bitParita@errorColumn
  3793  0FCA                     l115:	
  3794                           ;./CustomLib/BitsFlow.h: 44:         }
  3795                           
  3796                           
  3797                           ;./CustomLib/BitsFlow.h: 45:     }
  3798  0FCA  3001               	movlw	1
  3799  0FCB  07B8               	addwf	bitParita@i_343,f
  3800  0FCC  1803               	skipnc
  3801  0FCD  0AB9               	incf	bitParita@i_343+1,f
  3802  0FCE  3000               	movlw	0
  3803  0FCF  07B9               	addwf	bitParita@i_343+1,f
  3804  0FD0                     l4161:	
  3805  0FD0  0839               	movf	bitParita@i_343+1,w
  3806  0FD1  3A80               	xorlw	128
  3807  0FD2  00FF               	movwf	btemp+1
  3808  0FD3  3080               	movlw	128
  3809  0FD4  027F               	subwf	btemp+1,w
  3810  0FD5  1D03               	skipz
  3811  0FD6  2FD9               	goto	u3925
  3812  0FD7  3008               	movlw	8
  3813  0FD8  0238               	subwf	bitParita@i_343,w
  3814  0FD9                     u3925:	
  3815  0FD9  1C03               	skipc
  3816  0FDA  2FDC               	goto	u3921
  3817  0FDB  2FDD               	goto	u3920
  3818  0FDC                     u3921:	
  3819  0FDC  2F91               	goto	l4145
  3820  0FDD                     u3920:	
  3821  0FDD                     l4163:	
  3822                           
  3823                           ;./CustomLib/BitsFlow.h: 46:     if (error != 0)
  3824  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3826  0FDF  082F               	movf	bitParita@error,w
  3827  0FE0  1903               	btfsc	3,2
  3828  0FE1  2FE3               	goto	u3931
  3829  0FE2  2FE4               	goto	u3930
  3830  0FE3                     u3931:	
  3831  0FE3  2FFF               	goto	l117
  3832  0FE4                     u3930:	
  3833  0FE4                     l4165:	
  3834                           
  3835                           ;./CustomLib/BitsFlow.h: 47:     {;./CustomLib/BitsFlow.h: 50:         rx[errorRow] = bi
      +                          tChange(rx[errorRow], errorColumn);
  3836  0FE4  082E               	movf	bitParita@errorColumn,w
  3837  0FE5  00A8               	movwf	??_bitParita
  3838  0FE6  0828               	movf	??_bitParita,w
  3839  0FE7  00A4               	movwf	bitChange@n
  3840  0FE8  0830               	movf	bitParita@errorRow,w
  3841  0FE9  0735               	addwf	bitParita@rx,w
  3842  0FEA  00A9               	movwf	??_bitParita+1
  3843  0FEB  0829               	movf	??_bitParita+1,w
  3844  0FEC  0084               	movwf	4
  3845  0FED  1383               	bcf	3,7	;select IRP bank0
  3846  0FEE  0800               	movf	0,w
  3847  0FEF  120A  158A  2191  120A  158A  	fcall	_bitChange
  3848  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0FF6  00AA               	movwf	??_bitParita+2
  3851  0FF7  0830               	movf	bitParita@errorRow,w
  3852  0FF8  0735               	addwf	bitParita@rx,w
  3853  0FF9  00AB               	movwf	??_bitParita+3
  3854  0FFA  082B               	movf	??_bitParita+3,w
  3855  0FFB  0084               	movwf	4
  3856  0FFC  082A               	movf	??_bitParita+2,w
  3857  0FFD  1383               	bcf	3,7	;select IRP bank0
  3858  0FFE  0080               	movwf	0
  3859  0FFF                     l117:	
  3860  0FFF  0008               	return
  3861  1000                     __end_of_bitParita:	
  3862                           
  3863                           	psect	text9
  3864  0991                     __ptext9:	
  3865 ;; *************** function _bitChange *****************
  3866 ;; Defined at:
  3867 ;;		line 1 in file "./CustomLib/BitsFlow.h"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  dato            1    wreg     unsigned char 
  3870 ;;  n               1    4[BANK0 ] unsigned char 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  dato            1    7[BANK0 ] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      unsigned char 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3882 ;;      Params:         0       1       0       0       0
  3883 ;;      Locals:         0       1       0       0       0
  3884 ;;      Temps:          0       2       0       0       0
  3885 ;;      Totals:         0       4       0       0       0
  3886 ;;Total ram usage:        4 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    3
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_bitParita
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           
  3897                           ;psect for function _bitChange
  3898  0991                     _bitChange:	
  3899                           
  3900                           ;incstack = 0
  3901                           ; Regs used in _bitChange: [wreg+status,2+status,0]
  3902                           ;bitChange@dato stored from wreg
  3903  0991  1283               	bcf	3,5	;RP0=0, select bank0
  3904  0992  1303               	bcf	3,6	;RP1=0, select bank0
  3905  0993  00A7               	movwf	bitChange@dato
  3906  0994                     l3847:	
  3907                           
  3908                           ;./CustomLib/BitsFlow.h: 1: char bitChange(char dato, char n);./CustomLib/BitsFlow.h: 2:
      +                           {;./CustomLib/BitsFlow.h: 3:     if (dato & (1 << (n)))
  3909  0994  3001               	movlw	1
  3910  0995  00A5               	movwf	??_bitChange
  3911  0996  0A24               	incf	bitChange@n,w
  3912  0997  299A               	goto	u3334
  3913  0998                     u3335:	
  3914  0998  1003               	clrc
  3915  0999  0DA5               	rlf	??_bitChange,f
  3916  099A                     u3334:	
  3917  099A  3EFF               	addlw	-1
  3918  099B  1D03               	skipz
  3919  099C  2998               	goto	u3335
  3920  099D  0825               	movf	??_bitChange,w
  3921  099E  0527               	andwf	bitChange@dato,w
  3922  099F  1903               	btfsc	3,2
  3923  09A0  29A2               	goto	u3341
  3924  09A1  29A3               	goto	u3340
  3925  09A2                     u3341:	
  3926  09A2  29B2               	goto	l3855
  3927  09A3                     u3340:	
  3928  09A3                     l3849:	
  3929                           
  3930                           ;./CustomLib/BitsFlow.h: 4:     {;./CustomLib/BitsFlow.h: 5:         return dato |= (1 <
      +                          < (n));
  3931  09A3  3001               	movlw	1
  3932  09A4  00A5               	movwf	??_bitChange
  3933  09A5  0A24               	incf	bitChange@n,w
  3934  09A6  29A9               	goto	u3354
  3935  09A7                     u3355:	
  3936  09A7  1003               	clrc
  3937  09A8  0DA5               	rlf	??_bitChange,f
  3938  09A9                     u3354:	
  3939  09A9  3EFF               	addlw	-1
  3940  09AA  1D03               	skipz
  3941  09AB  29A7               	goto	u3355
  3942  09AC  0825               	movf	??_bitChange,w
  3943  09AD  00A6               	movwf	??_bitChange+1
  3944  09AE  0826               	movf	??_bitChange+1,w
  3945  09AF  04A7               	iorwf	bitChange@dato,f
  3946  09B0  0827               	movf	bitChange@dato,w
  3947  09B1  29C1               	goto	l102
  3948  09B2                     l3855:	
  3949                           
  3950                           ;./CustomLib/BitsFlow.h: 8:     {;./CustomLib/BitsFlow.h: 9:         return dato &= ~(1 
      +                          << (n));
  3951  09B2  3001               	movlw	1
  3952  09B3  00A5               	movwf	??_bitChange
  3953  09B4  0A24               	incf	bitChange@n,w
  3954  09B5  29B8               	goto	u3364
  3955  09B6                     u3365:	
  3956  09B6  1003               	clrc
  3957  09B7  0DA5               	rlf	??_bitChange,f
  3958  09B8                     u3364:	
  3959  09B8  3EFF               	addlw	-1
  3960  09B9  1D03               	skipz
  3961  09BA  29B6               	goto	u3365
  3962  09BB  0825               	movf	??_bitChange,w
  3963  09BC  3AFF               	xorlw	255
  3964  09BD  00A6               	movwf	??_bitChange+1
  3965  09BE  0826               	movf	??_bitChange+1,w
  3966  09BF  05A7               	andwf	bitChange@dato,f
  3967  09C0  0827               	movf	bitChange@dato,w
  3968  09C1                     l102:	
  3969  09C1  0008               	return
  3970  09C2                     __end_of_bitChange:	
  3971                           
  3972                           	psect	text10
  3973  065E                     __ptext10:	
  3974 ;; *************** function _UpdateTimes *****************
  3975 ;; Defined at:
  3976 ;;		line 4 in file "./CustomLib/TrafficLight.h"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  _semafori       1    wreg     PTR PTR struct .
  3979 ;;		 -> Semafori(8), 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  _semafori       1   23[BANK0 ] PTR PTR struct .
  3982 ;;		 -> Semafori(8), 
  3983 ;;  i               1   22[BANK0 ] unsigned char 
  3984 ;;  l               1   24[BANK0 ] unsigned char 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3994 ;;      Params:         0       0       0       0       0
  3995 ;;      Locals:         0       3       0       0       0
  3996 ;;      Temps:          0      18       0       0       0
  3997 ;;      Totals:         0      21       0       0       0
  3998 ;;Total ram usage:       21 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    3
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_main
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _UpdateTimes
  4010  065E                     _UpdateTimes:	
  4011                           
  4012                           ;incstack = 0
  4013                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  4014                           ;UpdateTimes@_semafori stored from wreg
  4015  065E  1283               	bcf	3,5	;RP0=0, select bank0
  4016  065F  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0660  00B7               	movwf	UpdateTimes@_semafori
  4018  0661                     l4167:	
  4019                           
  4020                           ;./CustomLib/TrafficLight.h: 4: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 5: {;./CustomLib/TrafficLight.h: 7:     for (unsigned char l = 0; l < n_semafo
      +                          ri; l++)
  4021  0661  01B8               	clrf	UpdateTimes@l
  4022  0662                     l4173:	
  4023                           
  4024                           ;./CustomLib/TrafficLight.h: 8:     {;./CustomLib/TrafficLight.h: 9:         for (unsign
      +                          ed char i = 0; i < 3; i++)
  4025  0662  01B6               	clrf	UpdateTimes@i
  4026  0663                     l4179:	
  4027                           
  4028                           ;./CustomLib/TrafficLight.h: 10:         {;./CustomLib/TrafficLight.h: 11:             i
      +                          f ((*(_semafori)[l]).times[i] != (*(_semafori)[l]).new_times[i])
  4029  0663  0838               	movf	UpdateTimes@l,w
  4030  0664  00A4               	movwf	??_UpdateTimes
  4031  0665  0724               	addwf	??_UpdateTimes,w
  4032  0666  0737               	addwf	UpdateTimes@_semafori,w
  4033  0667  00A5               	movwf	??_UpdateTimes+1
  4034  0668  0825               	movf	??_UpdateTimes+1,w
  4035  0669  0084               	movwf	4
  4036  066A  1383               	bcf	3,7	;select IRP bank0
  4037  066B  0800               	movf	0,w
  4038  066C  00A6               	movwf	??_UpdateTimes+2
  4039  066D  0A84               	incf	4,f
  4040  066E  0800               	movf	0,w
  4041  066F  00A7               	movwf	??_UpdateTimes+3
  4042  0670  0836               	movf	UpdateTimes@i,w
  4043  0671  00A8               	movwf	??_UpdateTimes+4
  4044  0672  0728               	addwf	??_UpdateTimes+4,w
  4045  0673  3E06               	addlw	6
  4046  0674  0726               	addwf	??_UpdateTimes+2,w
  4047  0675  00A9               	movwf	??_UpdateTimes+5
  4048  0676  0827               	movf	??_UpdateTimes+3,w
  4049  0677  1803               	skipnc
  4050  0678  3E01               	addlw	1
  4051  0679  00AA               	movwf	??_UpdateTimes+6
  4052  067A  0829               	movf	??_UpdateTimes+5,w
  4053  067B  0084               	movwf	4
  4054  067C  1783               	bsf	3,7
  4055  067D  1C2A               	btfss	??_UpdateTimes+6,0
  4056  067E  1383               	bcf	3,7
  4057  067F  0800               	movf	0,w
  4058  0680  00AB               	movwf	??_UpdateTimes+7
  4059  0681  0A84               	incf	4,f
  4060  0682  0800               	movf	0,w
  4061  0683  00AC               	movwf	??_UpdateTimes+8
  4062  0684  0838               	movf	UpdateTimes@l,w
  4063  0685  00AD               	movwf	??_UpdateTimes+9
  4064  0686  072D               	addwf	??_UpdateTimes+9,w
  4065  0687  0737               	addwf	UpdateTimes@_semafori,w
  4066  0688  00AE               	movwf	??_UpdateTimes+10
  4067  0689  082E               	movf	??_UpdateTimes+10,w
  4068  068A  0084               	movwf	4
  4069  068B  1383               	bcf	3,7	;select IRP bank0
  4070  068C  0800               	movf	0,w
  4071  068D  00AF               	movwf	??_UpdateTimes+11
  4072  068E  0A84               	incf	4,f
  4073  068F  0800               	movf	0,w
  4074  0690  00B0               	movwf	??_UpdateTimes+12
  4075  0691  0836               	movf	UpdateTimes@i,w
  4076  0692  00B1               	movwf	??_UpdateTimes+13
  4077  0693  0731               	addwf	??_UpdateTimes+13,w
  4078  0694  072F               	addwf	??_UpdateTimes+11,w
  4079  0695  00B2               	movwf	??_UpdateTimes+14
  4080  0696  0830               	movf	??_UpdateTimes+12,w
  4081  0697  1803               	skipnc
  4082  0698  3E01               	addlw	1
  4083  0699  00B3               	movwf	??_UpdateTimes+15
  4084  069A  0832               	movf	??_UpdateTimes+14,w
  4085  069B  0084               	movwf	4
  4086  069C  1783               	bsf	3,7
  4087  069D  1C33               	btfss	??_UpdateTimes+15,0
  4088  069E  1383               	bcf	3,7
  4089  069F  0800               	movf	0,w
  4090  06A0  00B4               	movwf	??_UpdateTimes+16
  4091  06A1  0A84               	incf	4,f
  4092  06A2  0800               	movf	0,w
  4093  06A3  00B5               	movwf	??_UpdateTimes+17
  4094  06A4  082C               	movf	??_UpdateTimes+8,w
  4095  06A5  0635               	xorwf	??_UpdateTimes+17,w
  4096  06A6  1D03               	skipz
  4097  06A7  2EAA               	goto	u3945
  4098  06A8  082B               	movf	??_UpdateTimes+7,w
  4099  06A9  0634               	xorwf	??_UpdateTimes+16,w
  4100  06AA                     u3945:	
  4101  06AA  1903               	skipnz
  4102  06AB  2EAD               	goto	u3941
  4103  06AC  2EAE               	goto	u3940
  4104  06AD                     u3941:	
  4105  06AD  2EEF               	goto	l4183
  4106  06AE                     u3940:	
  4107  06AE                     l4181:	
  4108                           
  4109                           ;./CustomLib/TrafficLight.h: 12:             {;./CustomLib/TrafficLight.h: 13:          
      +                                 (*(_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  4110  06AE  0838               	movf	UpdateTimes@l,w
  4111  06AF  00A4               	movwf	??_UpdateTimes
  4112  06B0  0724               	addwf	??_UpdateTimes,w
  4113  06B1  0737               	addwf	UpdateTimes@_semafori,w
  4114  06B2  00A5               	movwf	??_UpdateTimes+1
  4115  06B3  0825               	movf	??_UpdateTimes+1,w
  4116  06B4  0084               	movwf	4
  4117  06B5  1383               	bcf	3,7	;select IRP bank0
  4118  06B6  0800               	movf	0,w
  4119  06B7  00A6               	movwf	??_UpdateTimes+2
  4120  06B8  0A84               	incf	4,f
  4121  06B9  0800               	movf	0,w
  4122  06BA  00A7               	movwf	??_UpdateTimes+3
  4123  06BB  0836               	movf	UpdateTimes@i,w
  4124  06BC  00A8               	movwf	??_UpdateTimes+4
  4125  06BD  0728               	addwf	??_UpdateTimes+4,w
  4126  06BE  3E06               	addlw	6
  4127  06BF  0726               	addwf	??_UpdateTimes+2,w
  4128  06C0  00A9               	movwf	??_UpdateTimes+5
  4129  06C1  0827               	movf	??_UpdateTimes+3,w
  4130  06C2  1803               	skipnc
  4131  06C3  3E01               	addlw	1
  4132  06C4  00AA               	movwf	??_UpdateTimes+6
  4133  06C5  0829               	movf	??_UpdateTimes+5,w
  4134  06C6  0084               	movwf	4
  4135  06C7  1783               	bsf	3,7
  4136  06C8  1C2A               	btfss	??_UpdateTimes+6,0
  4137  06C9  1383               	bcf	3,7
  4138  06CA  0800               	movf	0,w
  4139  06CB  00AB               	movwf	??_UpdateTimes+7
  4140  06CC  0A84               	incf	4,f
  4141  06CD  0800               	movf	0,w
  4142  06CE  00AC               	movwf	??_UpdateTimes+8
  4143  06CF  0838               	movf	UpdateTimes@l,w
  4144  06D0  00AD               	movwf	??_UpdateTimes+9
  4145  06D1  072D               	addwf	??_UpdateTimes+9,w
  4146  06D2  0737               	addwf	UpdateTimes@_semafori,w
  4147  06D3  00AE               	movwf	??_UpdateTimes+10
  4148  06D4  082E               	movf	??_UpdateTimes+10,w
  4149  06D5  0084               	movwf	4
  4150  06D6  1383               	bcf	3,7	;select IRP bank0
  4151  06D7  0800               	movf	0,w
  4152  06D8  00AF               	movwf	??_UpdateTimes+11
  4153  06D9  0A84               	incf	4,f
  4154  06DA  0800               	movf	0,w
  4155  06DB  00B0               	movwf	??_UpdateTimes+12
  4156  06DC  0836               	movf	UpdateTimes@i,w
  4157  06DD  00B1               	movwf	??_UpdateTimes+13
  4158  06DE  0731               	addwf	??_UpdateTimes+13,w
  4159  06DF  072F               	addwf	??_UpdateTimes+11,w
  4160  06E0  00B2               	movwf	??_UpdateTimes+14
  4161  06E1  0830               	movf	??_UpdateTimes+12,w
  4162  06E2  1803               	skipnc
  4163  06E3  3E01               	addlw	1
  4164  06E4  00B3               	movwf	??_UpdateTimes+15
  4165  06E5  0832               	movf	??_UpdateTimes+14,w
  4166  06E6  0084               	movwf	4
  4167  06E7  1783               	bsf	3,7
  4168  06E8  1C33               	btfss	??_UpdateTimes+15,0
  4169  06E9  1383               	bcf	3,7
  4170  06EA  082B               	movf	??_UpdateTimes+7,w
  4171  06EB  0080               	movwf	0
  4172  06EC  0A84               	incf	4,f
  4173  06ED  082C               	movf	??_UpdateTimes+8,w
  4174  06EE  0080               	movwf	0
  4175  06EF                     l4183:	
  4176                           
  4177                           ;./CustomLib/TrafficLight.h: 15:         }
  4178  06EF  3001               	movlw	1
  4179  06F0  00A4               	movwf	??_UpdateTimes
  4180  06F1  0824               	movf	??_UpdateTimes,w
  4181  06F2  07B6               	addwf	UpdateTimes@i,f
  4182  06F3                     l4185:	
  4183  06F3  3003               	movlw	3
  4184  06F4  0236               	subwf	UpdateTimes@i,w
  4185  06F5  1C03               	skipc
  4186  06F6  2EF8               	goto	u3951
  4187  06F7  2EF9               	goto	u3950
  4188  06F8                     u3951:	
  4189  06F8  2E63               	goto	l4179
  4190  06F9                     u3950:	
  4191  06F9                     l4187:	
  4192                           
  4193                           ;./CustomLib/TrafficLight.h: 17:         if ((*(_semafori)[l]).lux_select != (*(_semafor
      +                          i)[l]).new_lux_select)
  4194  06F9  0838               	movf	UpdateTimes@l,w
  4195  06FA  00A4               	movwf	??_UpdateTimes
  4196  06FB  0724               	addwf	??_UpdateTimes,w
  4197  06FC  0737               	addwf	UpdateTimes@_semafori,w
  4198  06FD  00A5               	movwf	??_UpdateTimes+1
  4199  06FE  0825               	movf	??_UpdateTimes+1,w
  4200  06FF  0084               	movwf	4
  4201  0700  1383               	bcf	3,7	;select IRP bank0
  4202  0701  0800               	movf	0,w
  4203  0702  00A6               	movwf	??_UpdateTimes+2
  4204  0703  0A84               	incf	4,f
  4205  0704  0800               	movf	0,w
  4206  0705  00A7               	movwf	??_UpdateTimes+3
  4207  0706  0826               	movf	??_UpdateTimes+2,w
  4208  0707  3E0D               	addlw	13
  4209  0708  00A8               	movwf	??_UpdateTimes+4
  4210  0709  0827               	movf	??_UpdateTimes+3,w
  4211  070A  1803               	skipnc
  4212  070B  3E01               	addlw	1
  4213  070C  3E00               	addlw	0
  4214  070D  00A9               	movwf	??_UpdateTimes+5
  4215  070E  0828               	movf	??_UpdateTimes+4,w
  4216  070F  0084               	movwf	4
  4217  0710  1783               	bsf	3,7
  4218  0711  1C29               	btfss	??_UpdateTimes+5,0
  4219  0712  1383               	bcf	3,7
  4220  0713  0800               	movf	0,w
  4221  0714  00AA               	movwf	??_UpdateTimes+6
  4222  0715  0838               	movf	UpdateTimes@l,w
  4223  0716  00AB               	movwf	??_UpdateTimes+7
  4224  0717  072B               	addwf	??_UpdateTimes+7,w
  4225  0718  0737               	addwf	UpdateTimes@_semafori,w
  4226  0719  00AC               	movwf	??_UpdateTimes+8
  4227  071A  082C               	movf	??_UpdateTimes+8,w
  4228  071B  0084               	movwf	4
  4229  071C  1383               	bcf	3,7	;select IRP bank0
  4230  071D  0800               	movf	0,w
  4231  071E  00AD               	movwf	??_UpdateTimes+9
  4232  071F  0A84               	incf	4,f
  4233  0720  0800               	movf	0,w
  4234  0721  00AE               	movwf	??_UpdateTimes+10
  4235  0722  082D               	movf	??_UpdateTimes+9,w
  4236  0723  3E0C               	addlw	12
  4237  0724  00AF               	movwf	??_UpdateTimes+11
  4238  0725  082E               	movf	??_UpdateTimes+10,w
  4239  0726  1803               	skipnc
  4240  0727  3E01               	addlw	1
  4241  0728  3E00               	addlw	0
  4242  0729  00B0               	movwf	??_UpdateTimes+12
  4243  072A  082F               	movf	??_UpdateTimes+11,w
  4244  072B  0084               	movwf	4
  4245  072C  1783               	bsf	3,7
  4246  072D  1C30               	btfss	??_UpdateTimes+12,0
  4247  072E  1383               	bcf	3,7
  4248  072F  0800               	movf	0,w
  4249  0730  062A               	xorwf	??_UpdateTimes+6,w
  4250  0731  1903               	skipnz
  4251  0732  2F34               	goto	u3961
  4252  0733  2F35               	goto	u3960
  4253  0734                     u3961:	
  4254  0734  2F6D               	goto	l4191
  4255  0735                     u3960:	
  4256  0735                     l4189:	
  4257                           
  4258                           ;./CustomLib/TrafficLight.h: 18:         {;./CustomLib/TrafficLight.h: 19:             (
      +                          *(_semafori)[l]).lux_select = (*(_semafori)[l]).new_lux_select;
  4259  0735  0838               	movf	UpdateTimes@l,w
  4260  0736  00A4               	movwf	??_UpdateTimes
  4261  0737  0724               	addwf	??_UpdateTimes,w
  4262  0738  0737               	addwf	UpdateTimes@_semafori,w
  4263  0739  00A5               	movwf	??_UpdateTimes+1
  4264  073A  0825               	movf	??_UpdateTimes+1,w
  4265  073B  0084               	movwf	4
  4266  073C  1383               	bcf	3,7	;select IRP bank0
  4267  073D  0800               	movf	0,w
  4268  073E  00A6               	movwf	??_UpdateTimes+2
  4269  073F  0A84               	incf	4,f
  4270  0740  0800               	movf	0,w
  4271  0741  00A7               	movwf	??_UpdateTimes+3
  4272  0742  0826               	movf	??_UpdateTimes+2,w
  4273  0743  3E0D               	addlw	13
  4274  0744  00A8               	movwf	??_UpdateTimes+4
  4275  0745  0827               	movf	??_UpdateTimes+3,w
  4276  0746  1803               	skipnc
  4277  0747  3E01               	addlw	1
  4278  0748  3E00               	addlw	0
  4279  0749  00A9               	movwf	??_UpdateTimes+5
  4280  074A  0828               	movf	??_UpdateTimes+4,w
  4281  074B  0084               	movwf	4
  4282  074C  1783               	bsf	3,7
  4283  074D  1C29               	btfss	??_UpdateTimes+5,0
  4284  074E  1383               	bcf	3,7
  4285  074F  0800               	movf	0,w
  4286  0750  00AA               	movwf	??_UpdateTimes+6
  4287  0751  0838               	movf	UpdateTimes@l,w
  4288  0752  00AB               	movwf	??_UpdateTimes+7
  4289  0753  072B               	addwf	??_UpdateTimes+7,w
  4290  0754  0737               	addwf	UpdateTimes@_semafori,w
  4291  0755  00AC               	movwf	??_UpdateTimes+8
  4292  0756  082C               	movf	??_UpdateTimes+8,w
  4293  0757  0084               	movwf	4
  4294  0758  1383               	bcf	3,7	;select IRP bank0
  4295  0759  0800               	movf	0,w
  4296  075A  00AD               	movwf	??_UpdateTimes+9
  4297  075B  0A84               	incf	4,f
  4298  075C  0800               	movf	0,w
  4299  075D  00AE               	movwf	??_UpdateTimes+10
  4300  075E  082D               	movf	??_UpdateTimes+9,w
  4301  075F  3E0C               	addlw	12
  4302  0760  00AF               	movwf	??_UpdateTimes+11
  4303  0761  082E               	movf	??_UpdateTimes+10,w
  4304  0762  1803               	skipnc
  4305  0763  3E01               	addlw	1
  4306  0764  3E00               	addlw	0
  4307  0765  00B0               	movwf	??_UpdateTimes+12
  4308  0766  082F               	movf	??_UpdateTimes+11,w
  4309  0767  0084               	movwf	4
  4310  0768  1783               	bsf	3,7
  4311  0769  1C30               	btfss	??_UpdateTimes+12,0
  4312  076A  1383               	bcf	3,7
  4313  076B  082A               	movf	??_UpdateTimes+6,w
  4314  076C  0080               	movwf	0
  4315  076D                     l4191:	
  4316                           
  4317                           ;./CustomLib/TrafficLight.h: 21:     }
  4318  076D  3001               	movlw	1
  4319  076E  00A4               	movwf	??_UpdateTimes
  4320  076F  0824               	movf	??_UpdateTimes,w
  4321  0770  07B8               	addwf	UpdateTimes@l,f
  4322  0771                     l4193:	
  4323  0771  3002               	movlw	2
  4324  0772  0238               	subwf	UpdateTimes@l,w
  4325  0773  1C03               	skipc
  4326  0774  2F76               	goto	u3971
  4327  0775  2F77               	goto	u3970
  4328  0776                     u3971:	
  4329  0776  2E62               	goto	l4173
  4330  0777                     u3970:	
  4331  0777                     l145:	
  4332  0777  0008               	return
  4333  0778                     __end_of_UpdateTimes:	
  4334                           
  4335                           	psect	text11
  4336  0A28                     __ptext11:	
  4337 ;; *************** function _UART_Init *****************
  4338 ;; Defined at:
  4339 ;;		line 342 in file "main.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  baudrate        2   19[BANK0 ] int 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, pclath, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4353 ;;      Params:         0       2       0       0       0
  4354 ;;      Locals:         0       0       0       0       0
  4355 ;;      Temps:          0       4       0       0       0
  4356 ;;      Totals:         0       6       0       0       0
  4357 ;;Total ram usage:        6 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    4
  4360 ;; This function calls:
  4361 ;;		___aldiv
  4362 ;; This function is called by:
  4363 ;;		_main
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           
  4368                           ;psect for function _UART_Init
  4369  0A28                     _UART_Init:	
  4370  0A28                     l4257:	
  4371                           ;incstack = 0
  4372                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  4373                           
  4374                           
  4375                           ;main.c: 342: void UART_Init(int baudrate);main.c: 343: {;main.c: 344:     TRISCbits.TRI
      +                          SC6 = 0;
  4376  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  4377  0A29  1303               	bcf	3,6	;RP1=0, select bank1
  4378  0A2A  1307               	bcf	7,6	;volatile
  4379                           
  4380                           ;main.c: 345:     TXSTAbits.TXEN = 1;
  4381  0A2B  1698               	bsf	24,5	;volatile
  4382                           
  4383                           ;main.c: 346:     RCSTAbits.SPEN = 1;
  4384  0A2C  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0A2D  1303               	bcf	3,6	;RP1=0, select bank0
  4386  0A2E  1798               	bsf	24,7	;volatile
  4387                           
  4388                           ;main.c: 347:     RCSTAbits.CREN = 1;
  4389  0A2F  1618               	bsf	24,4	;volatile
  4390  0A30                     l4259:	
  4391                           
  4392                           ;main.c: 348:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  4393  0A30  0833               	movf	UART_Init@baudrate,w
  4394  0A31  00B5               	movwf	??_UART_Init
  4395  0A32  0834               	movf	UART_Init@baudrate+1,w
  4396  0A33  00B6               	movwf	??_UART_Init+1
  4397  0A34  3000               	movlw	0
  4398  0A35  1BB6               	btfsc	??_UART_Init+1,7
  4399  0A36  30FF               	movlw	255
  4400  0A37  00B7               	movwf	??_UART_Init+2
  4401  0A38  00B8               	movwf	??_UART_Init+3
  4402  0A39  3006               	movlw	6
  4403  0A3A                     u4025:	
  4404  0A3A  1003               	clrc
  4405  0A3B  0DB5               	rlf	??_UART_Init,f
  4406  0A3C  0DB6               	rlf	??_UART_Init+1,f
  4407  0A3D  0DB7               	rlf	??_UART_Init+2,f
  4408  0A3E  0DB8               	rlf	??_UART_Init+3,f
  4409  0A3F                     u4020:	
  4410  0A3F  3EFF               	addlw	-1
  4411  0A40  1D03               	skipz
  4412  0A41  2A3A               	goto	u4025
  4413  0A42  0838               	movf	??_UART_Init+3,w
  4414  0A43  00A7               	movwf	___aldiv@divisor+3
  4415  0A44  0837               	movf	??_UART_Init+2,w
  4416  0A45  00A6               	movwf	___aldiv@divisor+2
  4417  0A46  0836               	movf	??_UART_Init+1,w
  4418  0A47  00A5               	movwf	___aldiv@divisor+1
  4419  0A48  0835               	movf	??_UART_Init,w
  4420  0A49  00A4               	movwf	___aldiv@divisor
  4421  0A4A  3001               	movlw	1
  4422  0A4B  00AB               	movwf	___aldiv@dividend+3
  4423  0A4C  30E8               	movlw	232
  4424  0A4D  00AA               	movwf	___aldiv@dividend+2
  4425  0A4E  3048               	movlw	72
  4426  0A4F  00A9               	movwf	___aldiv@dividend+1
  4427  0A50  3000               	movlw	0
  4428  0A51  00A8               	movwf	___aldiv@dividend
  4429  0A52  120A  158A  25D2  120A  158A  	fcall	___aldiv
  4430  0A57  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0A58  1303               	bcf	3,6	;RP1=0, select bank0
  4432  0A59  0824               	movf	?___aldiv,w
  4433  0A5A  3EFF               	addlw	255
  4434  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  4435  0A5C  1303               	bcf	3,6	;RP1=0, select bank1
  4436  0A5D  0099               	movwf	25	;volatile
  4437  0A5E                     l4261:	
  4438                           
  4439                           ;main.c: 349:     INTCONbits.GIE = 1;
  4440  0A5E  178B               	bsf	11,7	;volatile
  4441  0A5F                     l4263:	
  4442                           
  4443                           ;main.c: 350:     INTCONbits.PEIE = 1;
  4444  0A5F  170B               	bsf	11,6	;volatile
  4445  0A60                     l4265:	
  4446                           
  4447                           ;main.c: 351:     PIE1bits.RCIE = 1;
  4448  0A60  168C               	bsf	12,5	;volatile
  4449  0A61                     l286:	
  4450  0A61  0008               	return
  4451  0A62                     __end_of_UART_Init:	
  4452                           
  4453                           	psect	text12
  4454  0DD2                     __ptext12:	
  4455 ;; *************** function ___aldiv *****************
  4456 ;; Defined at:
  4457 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  divisor         4    4[BANK0 ] long 
  4460 ;;  dividend        4    8[BANK0 ] long 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  quotient        4   15[BANK0 ] long 
  4463 ;;  sign            1   14[BANK0 ] unsigned char 
  4464 ;;  counter         1   13[BANK0 ] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  4    4[BANK0 ] long 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4474 ;;      Params:         0       8       0       0       0
  4475 ;;      Locals:         0       6       0       0       0
  4476 ;;      Temps:          0       1       0       0       0
  4477 ;;      Totals:         0      15       0       0       0
  4478 ;;Total ram usage:       15 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    3
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_UART_Init
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           
  4489                           ;psect for function ___aldiv
  4490  0DD2                     ___aldiv:	
  4491  0DD2                     l3977:	
  4492                           ;incstack = 0
  4493                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4494                           
  4495  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0DD4  01AE               	clrf	___aldiv@sign
  4498  0DD5                     l3979:	
  4499  0DD5  1FA7               	btfss	___aldiv@divisor+3,7
  4500  0DD6  2DD8               	goto	u3551
  4501  0DD7  2DD9               	goto	u3550
  4502  0DD8                     u3551:	
  4503  0DD8  2DE6               	goto	l510
  4504  0DD9                     u3550:	
  4505  0DD9                     l3981:	
  4506  0DD9  09A4               	comf	___aldiv@divisor,f
  4507  0DDA  09A5               	comf	___aldiv@divisor+1,f
  4508  0DDB  09A6               	comf	___aldiv@divisor+2,f
  4509  0DDC  09A7               	comf	___aldiv@divisor+3,f
  4510  0DDD  0AA4               	incf	___aldiv@divisor,f
  4511  0DDE  1903               	skipnz
  4512  0DDF  0AA5               	incf	___aldiv@divisor+1,f
  4513  0DE0  1903               	skipnz
  4514  0DE1  0AA6               	incf	___aldiv@divisor+2,f
  4515  0DE2  1903               	skipnz
  4516  0DE3  0AA7               	incf	___aldiv@divisor+3,f
  4517  0DE4  01AE               	clrf	___aldiv@sign
  4518  0DE5  0AAE               	incf	___aldiv@sign,f
  4519  0DE6                     l510:	
  4520  0DE6  1FAB               	btfss	___aldiv@dividend+3,7
  4521  0DE7  2DE9               	goto	u3561
  4522  0DE8  2DEA               	goto	u3560
  4523  0DE9                     u3561:	
  4524  0DE9  2DF9               	goto	l3987
  4525  0DEA                     u3560:	
  4526  0DEA                     l3983:	
  4527  0DEA  09A8               	comf	___aldiv@dividend,f
  4528  0DEB  09A9               	comf	___aldiv@dividend+1,f
  4529  0DEC  09AA               	comf	___aldiv@dividend+2,f
  4530  0DED  09AB               	comf	___aldiv@dividend+3,f
  4531  0DEE  0AA8               	incf	___aldiv@dividend,f
  4532  0DEF  1903               	skipnz
  4533  0DF0  0AA9               	incf	___aldiv@dividend+1,f
  4534  0DF1  1903               	skipnz
  4535  0DF2  0AAA               	incf	___aldiv@dividend+2,f
  4536  0DF3  1903               	skipnz
  4537  0DF4  0AAB               	incf	___aldiv@dividend+3,f
  4538  0DF5                     l3985:	
  4539  0DF5  3001               	movlw	1
  4540  0DF6  00AC               	movwf	??___aldiv
  4541  0DF7  082C               	movf	??___aldiv,w
  4542  0DF8  06AE               	xorwf	___aldiv@sign,f
  4543  0DF9                     l3987:	
  4544  0DF9  3000               	movlw	0
  4545  0DFA  00B2               	movwf	___aldiv@quotient+3
  4546  0DFB  3000               	movlw	0
  4547  0DFC  00B1               	movwf	___aldiv@quotient+2
  4548  0DFD  3000               	movlw	0
  4549  0DFE  00B0               	movwf	___aldiv@quotient+1
  4550  0DFF  3000               	movlw	0
  4551  0E00  00AF               	movwf	___aldiv@quotient
  4552  0E01                     l3989:	
  4553  0E01  0827               	movf	___aldiv@divisor+3,w
  4554  0E02  0426               	iorwf	___aldiv@divisor+2,w
  4555  0E03  0425               	iorwf	___aldiv@divisor+1,w
  4556  0E04  0424               	iorwf	___aldiv@divisor,w
  4557  0E05  1903               	skipnz
  4558  0E06  2E08               	goto	u3571
  4559  0E07  2E09               	goto	u3570
  4560  0E08                     u3571:	
  4561  0E08  2E56               	goto	l4009
  4562  0E09                     u3570:	
  4563  0E09                     l3991:	
  4564  0E09  01AD               	clrf	___aldiv@counter
  4565  0E0A  0AAD               	incf	___aldiv@counter,f
  4566  0E0B  2E19               	goto	l3995
  4567  0E0C                     l3993:	
  4568  0E0C  3001               	movlw	1
  4569  0E0D  00AC               	movwf	??___aldiv
  4570  0E0E                     u3585:	
  4571  0E0E  1003               	clrc
  4572  0E0F  0DA4               	rlf	___aldiv@divisor,f
  4573  0E10  0DA5               	rlf	___aldiv@divisor+1,f
  4574  0E11  0DA6               	rlf	___aldiv@divisor+2,f
  4575  0E12  0DA7               	rlf	___aldiv@divisor+3,f
  4576  0E13  0BAC               	decfsz	??___aldiv,f
  4577  0E14  2E0E               	goto	u3585
  4578  0E15  3001               	movlw	1
  4579  0E16  00AC               	movwf	??___aldiv
  4580  0E17  082C               	movf	??___aldiv,w
  4581  0E18  07AD               	addwf	___aldiv@counter,f
  4582  0E19                     l3995:	
  4583  0E19  1FA7               	btfss	___aldiv@divisor+3,7
  4584  0E1A  2E1C               	goto	u3591
  4585  0E1B  2E1D               	goto	u3590
  4586  0E1C                     u3591:	
  4587  0E1C  2E0C               	goto	l3993
  4588  0E1D                     u3590:	
  4589  0E1D                     l3997:	
  4590  0E1D  3001               	movlw	1
  4591  0E1E  00AC               	movwf	??___aldiv
  4592  0E1F                     u3605:	
  4593  0E1F  1003               	clrc
  4594  0E20  0DAF               	rlf	___aldiv@quotient,f
  4595  0E21  0DB0               	rlf	___aldiv@quotient+1,f
  4596  0E22  0DB1               	rlf	___aldiv@quotient+2,f
  4597  0E23  0DB2               	rlf	___aldiv@quotient+3,f
  4598  0E24  0BAC               	decfsz	??___aldiv,f
  4599  0E25  2E1F               	goto	u3605
  4600  0E26                     l3999:	
  4601  0E26  0827               	movf	___aldiv@divisor+3,w
  4602  0E27  022B               	subwf	___aldiv@dividend+3,w
  4603  0E28  1D03               	skipz
  4604  0E29  2E34               	goto	u3615
  4605  0E2A  0826               	movf	___aldiv@divisor+2,w
  4606  0E2B  022A               	subwf	___aldiv@dividend+2,w
  4607  0E2C  1D03               	skipz
  4608  0E2D  2E34               	goto	u3615
  4609  0E2E  0825               	movf	___aldiv@divisor+1,w
  4610  0E2F  0229               	subwf	___aldiv@dividend+1,w
  4611  0E30  1D03               	skipz
  4612  0E31  2E34               	goto	u3615
  4613  0E32  0824               	movf	___aldiv@divisor,w
  4614  0E33  0228               	subwf	___aldiv@dividend,w
  4615  0E34                     u3615:	
  4616  0E34  1C03               	skipc
  4617  0E35  2E37               	goto	u3611
  4618  0E36  2E38               	goto	u3610
  4619  0E37                     u3611:	
  4620  0E37  2E47               	goto	l4005
  4621  0E38                     u3610:	
  4622  0E38                     l4001:	
  4623  0E38  0824               	movf	___aldiv@divisor,w
  4624  0E39  02A8               	subwf	___aldiv@dividend,f
  4625  0E3A  0825               	movf	___aldiv@divisor+1,w
  4626  0E3B  1C03               	skipc
  4627  0E3C  0F25               	incfsz	___aldiv@divisor+1,w
  4628  0E3D  02A9               	subwf	___aldiv@dividend+1,f
  4629  0E3E  0826               	movf	___aldiv@divisor+2,w
  4630  0E3F  1C03               	skipc
  4631  0E40  0F26               	incfsz	___aldiv@divisor+2,w
  4632  0E41  02AA               	subwf	___aldiv@dividend+2,f
  4633  0E42  0827               	movf	___aldiv@divisor+3,w
  4634  0E43  1C03               	skipc
  4635  0E44  0F27               	incfsz	___aldiv@divisor+3,w
  4636  0E45  02AB               	subwf	___aldiv@dividend+3,f
  4637  0E46                     l4003:	
  4638  0E46  142F               	bsf	___aldiv@quotient,0
  4639  0E47                     l4005:	
  4640  0E47  3001               	movlw	1
  4641  0E48                     u3625:	
  4642  0E48  1003               	clrc
  4643  0E49  0CA7               	rrf	___aldiv@divisor+3,f
  4644  0E4A  0CA6               	rrf	___aldiv@divisor+2,f
  4645  0E4B  0CA5               	rrf	___aldiv@divisor+1,f
  4646  0E4C  0CA4               	rrf	___aldiv@divisor,f
  4647  0E4D  3EFF               	addlw	-1
  4648  0E4E  1D03               	skipz
  4649  0E4F  2E48               	goto	u3625
  4650  0E50                     l4007:	
  4651  0E50  3001               	movlw	1
  4652  0E51  02AD               	subwf	___aldiv@counter,f
  4653  0E52  1D03               	btfss	3,2
  4654  0E53  2E55               	goto	u3631
  4655  0E54  2E56               	goto	u3630
  4656  0E55                     u3631:	
  4657  0E55  2E1D               	goto	l3997
  4658  0E56                     u3630:	
  4659  0E56                     l4009:	
  4660  0E56  082E               	movf	___aldiv@sign,w
  4661  0E57  1903               	btfsc	3,2
  4662  0E58  2E5A               	goto	u3641
  4663  0E59  2E5B               	goto	u3640
  4664  0E5A                     u3641:	
  4665  0E5A  2E66               	goto	l4013
  4666  0E5B                     u3640:	
  4667  0E5B                     l4011:	
  4668  0E5B  09AF               	comf	___aldiv@quotient,f
  4669  0E5C  09B0               	comf	___aldiv@quotient+1,f
  4670  0E5D  09B1               	comf	___aldiv@quotient+2,f
  4671  0E5E  09B2               	comf	___aldiv@quotient+3,f
  4672  0E5F  0AAF               	incf	___aldiv@quotient,f
  4673  0E60  1903               	skipnz
  4674  0E61  0AB0               	incf	___aldiv@quotient+1,f
  4675  0E62  1903               	skipnz
  4676  0E63  0AB1               	incf	___aldiv@quotient+2,f
  4677  0E64  1903               	skipnz
  4678  0E65  0AB2               	incf	___aldiv@quotient+3,f
  4679  0E66                     l4013:	
  4680  0E66  0832               	movf	___aldiv@quotient+3,w
  4681  0E67  00A7               	movwf	?___aldiv+3
  4682  0E68  0831               	movf	___aldiv@quotient+2,w
  4683  0E69  00A6               	movwf	?___aldiv+2
  4684  0E6A  0830               	movf	___aldiv@quotient+1,w
  4685  0E6B  00A5               	movwf	?___aldiv+1
  4686  0E6C  082F               	movf	___aldiv@quotient,w
  4687  0E6D  00A4               	movwf	?___aldiv
  4688  0E6E                     l520:	
  4689  0E6E  0008               	return
  4690  0E6F                     __end_of___aldiv:	
  4691                           
  4692                           	psect	text13
  4693  0778                     __ptext13:	
  4694 ;; *************** function _ShowDigitsOnDisplay *****************
  4695 ;; Defined at:
  4696 ;;		line 467 in file "main.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4710 ;;      Params:         0       0       0       0       0
  4711 ;;      Locals:         0       0       0       0       0
  4712 ;;      Temps:          0       2       0       0       0
  4713 ;;      Totals:         0       2       0       0       0
  4714 ;;Total ram usage:        2 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    4
  4717 ;; This function calls:
  4718 ;;		_SetDisplay
  4719 ;;		___awmod
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           
  4726                           ;psect for function _ShowDigitsOnDisplay
  4727  0778                     _ShowDigitsOnDisplay:	
  4728  0778                     l4325:	
  4729                           ;incstack = 0
  4730                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4731                           
  4732                           
  4733                           ;main.c: 469:     switch (disp)
  4734  0778  2FC6               	goto	l4341
  4735  0779                     l4327:	
  4736                           
  4737                           ;main.c: 472:         if (centinaia > 0)
  4738  0779  085D               	movf	_centinaia,w
  4739  077A  1903               	btfsc	3,2
  4740  077B  2F7D               	goto	u4061
  4741  077C  2F7E               	goto	u4060
  4742  077D                     u4061:	
  4743  077D  2FDB               	goto	l4343
  4744  077E                     u4060:	
  4745  077E                     l4329:	
  4746                           
  4747                           ;main.c: 473:         {;main.c: 474:             SetDisplay(1, 0, 0, display[centinaia])
      +                          ;
  4748  077E  01A4               	clrf	SetDisplay@d2
  4749  077F  01A5               	clrf	SetDisplay@d3
  4750  0780  085D               	movf	_centinaia,w
  4751  0781  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4752  0782  0084               	movwf	4
  4753  0783  120A  158A  2000  120A  118A  	fcall	stringdir
  4754  0788  00AB               	movwf	??_ShowDigitsOnDisplay
  4755  0789  082B               	movf	??_ShowDigitsOnDisplay,w
  4756  078A  00A6               	movwf	SetDisplay@value
  4757  078B  3001               	movlw	1
  4758  078C  120A  158A  2118  120A  118A  	fcall	_SetDisplay
  4759  0791  2FDB               	goto	l4343
  4760  0792                     l4331:	
  4761                           
  4762                           ;main.c: 478:         if (decine > 0 || centinaia > 0)
  4763  0792  085E               	movf	_decine,w
  4764  0793  1D03               	btfss	3,2
  4765  0794  2F96               	goto	u4071
  4766  0795  2F97               	goto	u4070
  4767  0796                     u4071:	
  4768  0796  2F9C               	goto	l4335
  4769  0797                     u4070:	
  4770  0797                     l4333:	
  4771  0797  085D               	movf	_centinaia,w
  4772  0798  1903               	btfsc	3,2
  4773  0799  2F9B               	goto	u4081
  4774  079A  2F9C               	goto	u4080
  4775  079B                     u4081:	
  4776  079B  2FDB               	goto	l4343
  4777  079C                     u4080:	
  4778  079C                     l4335:	
  4779                           
  4780                           ;main.c: 479:         {;main.c: 480:             SetDisplay(0, 1, 0, display[decine]);
  4781  079C  01A4               	clrf	SetDisplay@d2
  4782  079D  0AA4               	incf	SetDisplay@d2,f
  4783  079E  01A5               	clrf	SetDisplay@d3
  4784  079F  085E               	movf	_decine,w
  4785  07A0  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4786  07A1  0084               	movwf	4
  4787  07A2  120A  158A  2000  120A  118A  	fcall	stringdir
  4788  07A7  00AB               	movwf	??_ShowDigitsOnDisplay
  4789  07A8  082B               	movf	??_ShowDigitsOnDisplay,w
  4790  07A9  00A6               	movwf	SetDisplay@value
  4791  07AA  3000               	movlw	0
  4792  07AB  120A  158A  2118  120A  118A  	fcall	_SetDisplay
  4793  07B0  2FDB               	goto	l4343
  4794  07B1                     l4337:	
  4795                           
  4796                           ;main.c: 484:         SetDisplay(0, 0, 1, display[unita]);
  4797  07B1  01A4               	clrf	SetDisplay@d2
  4798  07B2  01A5               	clrf	SetDisplay@d3
  4799  07B3  0AA5               	incf	SetDisplay@d3,f
  4800  07B4  085F               	movf	_unita,w
  4801  07B5  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4802  07B6  0084               	movwf	4
  4803  07B7  120A  158A  2000  120A  118A  	fcall	stringdir
  4804  07BC  00AB               	movwf	??_ShowDigitsOnDisplay
  4805  07BD  082B               	movf	??_ShowDigitsOnDisplay,w
  4806  07BE  00A6               	movwf	SetDisplay@value
  4807  07BF  3000               	movlw	0
  4808  07C0  120A  158A  2118  120A  118A  	fcall	_SetDisplay
  4809                           
  4810                           ;main.c: 485:         break;
  4811  07C5  2FDB               	goto	l4343
  4812  07C6                     l4341:	
  4813  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  4814  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  4815  07C8  0850               	movf	_disp,w
  4816  07C9  00AB               	movwf	??_ShowDigitsOnDisplay
  4817  07CA  01AC               	clrf	??_ShowDigitsOnDisplay+1
  4818                           
  4819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4820                           ; Switch size 1, requested type "simple"
  4821                           ; Number of cases is 1, Range of values is 0 to 0
  4822                           ; switch strategies available:
  4823                           ; Name         Instructions Cycles
  4824                           ; simple_byte            4     3 (average)
  4825                           ; direct_byte           11     8 (fixed)
  4826                           ; jumptable            260     6 (fixed)
  4827                           ;	Chosen strategy is simple_byte
  4828  07CB  082C               	movf	??_ShowDigitsOnDisplay+1,w
  4829  07CC  3A00               	xorlw	0	; case 0
  4830  07CD  1903               	skipnz
  4831  07CE  2FD0               	goto	l4763
  4832  07CF  2FDB               	goto	l4343
  4833  07D0                     l4763:	
  4834                           
  4835                           ; Switch size 1, requested type "simple"
  4836                           ; Number of cases is 3, Range of values is 0 to 2
  4837                           ; switch strategies available:
  4838                           ; Name         Instructions Cycles
  4839                           ; simple_byte           10     6 (average)
  4840                           ; direct_byte           17     8 (fixed)
  4841                           ; jumptable            260     6 (fixed)
  4842                           ;	Chosen strategy is simple_byte
  4843  07D0  082B               	movf	??_ShowDigitsOnDisplay,w
  4844  07D1  3A00               	xorlw	0	; case 0
  4845  07D2  1903               	skipnz
  4846  07D3  2F79               	goto	l4327
  4847  07D4  3A01               	xorlw	1	; case 1
  4848  07D5  1903               	skipnz
  4849  07D6  2F92               	goto	l4331
  4850  07D7  3A03               	xorlw	3	; case 2
  4851  07D8  1903               	skipnz
  4852  07D9  2FB1               	goto	l4337
  4853  07DA  2FDB               	goto	l4343
  4854  07DB                     l4343:	
  4855                           
  4856                           ;main.c: 487:     disp = (disp + 1) % 3;
  4857  07DB  3003               	movlw	3
  4858  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  4859  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  4860  07DE  00A4               	movwf	___awmod@divisor
  4861  07DF  3000               	movlw	0
  4862  07E0  00A5               	movwf	___awmod@divisor+1
  4863  07E1  0850               	movf	_disp,w
  4864  07E2  3E01               	addlw	1
  4865  07E3  00A6               	movwf	___awmod@dividend
  4866  07E4  3000               	movlw	0
  4867  07E5  1803               	skipnc
  4868  07E6  3001               	movlw	1
  4869  07E7  00A7               	movwf	___awmod@dividend+1
  4870  07E8  120A  158A  239F  120A  118A  	fcall	___awmod
  4871  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  4872  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  4873  07EF  0824               	movf	?___awmod,w
  4874  07F0  00AB               	movwf	??_ShowDigitsOnDisplay
  4875  07F1  082B               	movf	??_ShowDigitsOnDisplay,w
  4876  07F2  00D0               	movwf	_disp
  4877  07F3                     l349:	
  4878  07F3  0008               	return
  4879  07F4                     __end_of_ShowDigitsOnDisplay:	
  4880                           
  4881                           	psect	text14
  4882  0918                     __ptext14:	
  4883 ;; *************** function _SetDisplay *****************
  4884 ;; Defined at:
  4885 ;;		line 390 in file "main.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  d1              1    wreg     unsigned char 
  4888 ;;  d2              1    4[BANK0 ] unsigned char 
  4889 ;;  d3              1    5[BANK0 ] unsigned char 
  4890 ;;  value           1    6[BANK0 ] unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  d1              1    7[BANK0 ] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4902 ;;      Params:         0       3       0       0       0
  4903 ;;      Locals:         0       1       0       0       0
  4904 ;;      Temps:          0       0       0       0       0
  4905 ;;      Totals:         0       4       0       0       0
  4906 ;;Total ram usage:        4 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    3
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_ShowDigitsOnDisplay
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function _SetDisplay
  4918  0918                     _SetDisplay:	
  4919                           
  4920                           ;incstack = 0
  4921                           ; Regs used in _SetDisplay: [wreg+status,0]
  4922                           ;SetDisplay@d1 stored from wreg
  4923  0918  1283               	bcf	3,5	;RP0=0, select bank0
  4924  0919  1303               	bcf	3,6	;RP1=0, select bank0
  4925  091A  00A7               	movwf	SetDisplay@d1
  4926  091B                     l3945:	
  4927                           
  4928                           ;main.c: 390: void SetDisplay(char d1, char d2, char d3, char value);main.c: 391: {;main
      +                          .c: 392:     PORTAbits.RA2 = d1;
  4929  091B  0C27               	rrf	SetDisplay@d1,w
  4930  091C  1C03               	skipc
  4931  091D  1105               	bcf	5,2	;volatile
  4932  091E  1803               	skipnc
  4933  091F  1505               	bsf	5,2	;volatile
  4934                           
  4935                           ;main.c: 393:     PORTAbits.RA3 = d2;
  4936  0920  0C24               	rrf	SetDisplay@d2,w
  4937  0921  1C03               	skipc
  4938  0922  1185               	bcf	5,3	;volatile
  4939  0923  1803               	skipnc
  4940  0924  1585               	bsf	5,3	;volatile
  4941                           
  4942                           ;main.c: 394:     PORTAbits.RA4 = d3;
  4943  0925  0C25               	rrf	SetDisplay@d3,w
  4944  0926  1C03               	skipc
  4945  0927  1205               	bcf	5,4	;volatile
  4946  0928  1803               	skipnc
  4947  0929  1605               	bsf	5,4	;volatile
  4948  092A                     l3947:	
  4949                           
  4950                           ;main.c: 395:     PORTD = value;
  4951  092A  0826               	movf	SetDisplay@value,w
  4952  092B  0088               	movwf	8	;volatile
  4953  092C                     l312:	
  4954  092C  0008               	return
  4955  092D                     __end_of_SetDisplay:	
  4956                           
  4957                           	psect	text15
  4958  0CC8                     __ptext15:	
  4959 ;; *************** function _SetReceivedTimes *****************
  4960 ;; Defined at:
  4961 ;;		line 86 in file "./CustomLib/TrafficLight.h"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4964 ;;		 -> dataFromGateway(15), 
  4965 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4966 ;;		 -> Semafori(8), 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  _dataFromGat    1   23[BANK0 ] PTR unsigned char 
  4969 ;;		 -> dataFromGateway(15), 
  4970 ;;  index           1   24[BANK0 ] unsigned char 
  4971 ;;  colorId         1   22[BANK0 ] unsigned char 
  4972 ;;  semaforoId      1   21[BANK0 ] unsigned char 
  4973 ;;  i               1   25[BANK0 ] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4983 ;;      Params:         0       1       0       0       0
  4984 ;;      Locals:         0       5       0       0       0
  4985 ;;      Temps:          0       8       0       0       0
  4986 ;;      Totals:         0      14       0       0       0
  4987 ;;Total ram usage:       14 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    4
  4990 ;; This function calls:
  4991 ;;		_GetTime
  4992 ;;		___bmul
  4993 ;; This function is called by:
  4994 ;;		_main
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           
  4999                           ;psect for function _SetReceivedTimes
  5000  0CC8                     _SetReceivedTimes:	
  5001                           
  5002                           ;incstack = 0
  5003                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5004                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  5005  0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  5006  0CC9  1303               	bcf	3,6	;RP1=0, select bank0
  5007  0CCA  00B7               	movwf	SetReceivedTimes@_dataFromGateway
  5008  0CCB                     l4231:	
  5009                           
  5010                           ;./CustomLib/TrafficLight.h: 86: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 87: {;./CustomLib/TrafficLight.h: 88:   
      +                            for (unsigned char i = 0; i < 3; i++)
  5011  0CCB  01B9               	clrf	SetReceivedTimes@i
  5012  0CCC                     l4233:	
  5013  0CCC  3003               	movlw	3
  5014  0CCD  0239               	subwf	SetReceivedTimes@i,w
  5015  0CCE  1C03               	skipc
  5016  0CCF  2CD1               	goto	u4001
  5017  0CD0  2CD2               	goto	u4000
  5018  0CD1                     u4001:	
  5019  0CD1  2CD3               	goto	l4237
  5020  0CD2                     u4000:	
  5021  0CD2  2D35               	goto	l172
  5022  0CD3                     l4237:	
  5023                           
  5024                           ;./CustomLib/TrafficLight.h: 89:     {;./CustomLib/TrafficLight.h: 90:         unsigned 
      +                          char index = i * 5;
  5025  0CD3  3005               	movlw	5
  5026  0CD4  00AD               	movwf	??_SetReceivedTimes
  5027  0CD5  082D               	movf	??_SetReceivedTimes,w
  5028  0CD6  00A4               	movwf	___bmul@multiplicand
  5029  0CD7  0839               	movf	SetReceivedTimes@i,w
  5030  0CD8  120A  158A  212D  120A  158A  	fcall	___bmul
  5031  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  5032  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  5033  0CDF  00AE               	movwf	??_SetReceivedTimes+1
  5034  0CE0  082E               	movf	??_SetReceivedTimes+1,w
  5035  0CE1  00B8               	movwf	SetReceivedTimes@index
  5036  0CE2                     l4239:	
  5037                           
  5038                           ;./CustomLib/TrafficLight.h: 91:         unsigned char semaforoId = (_dataFromGateway[in
      +                          dex] >> 1) & 0x0F;
  5039  0CE2  0838               	movf	SetReceivedTimes@index,w
  5040  0CE3  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  5041  0CE4  00AD               	movwf	??_SetReceivedTimes
  5042  0CE5  082D               	movf	??_SetReceivedTimes,w
  5043  0CE6  0084               	movwf	4
  5044  0CE7  1383               	bcf	3,7	;select IRP bank0
  5045  0CE8  0800               	movf	0,w
  5046  0CE9  00AE               	movwf	??_SetReceivedTimes+1
  5047  0CEA  1003               	clrc
  5048  0CEB  0C2E               	rrf	??_SetReceivedTimes+1,w
  5049  0CEC  390F               	andlw	15
  5050  0CED  00AF               	movwf	??_SetReceivedTimes+2
  5051  0CEE  082F               	movf	??_SetReceivedTimes+2,w
  5052  0CEF  00B5               	movwf	SetReceivedTimes@semaforoId
  5053  0CF0                     l4241:	
  5054                           
  5055                           ;./CustomLib/TrafficLight.h: 92:         unsigned char colorId = ((_dataFromGateway[inde
      +                          x] >> 5) & 0x03) - 1;
  5056  0CF0  0838               	movf	SetReceivedTimes@index,w
  5057  0CF1  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  5058  0CF2  00AD               	movwf	??_SetReceivedTimes
  5059  0CF3  082D               	movf	??_SetReceivedTimes,w
  5060  0CF4  0084               	movwf	4
  5061  0CF5  0800               	movf	0,w
  5062  0CF6  00AE               	movwf	??_SetReceivedTimes+1
  5063  0CF7  3005               	movlw	5
  5064  0CF8                     u4015:	
  5065  0CF8  1003               	clrc
  5066  0CF9  0CAE               	rrf	??_SetReceivedTimes+1,f
  5067  0CFA  3EFF               	addlw	-1
  5068  0CFB  1D03               	skipz
  5069  0CFC  2CF8               	goto	u4015
  5070  0CFD  082E               	movf	??_SetReceivedTimes+1,w
  5071  0CFE  3903               	andlw	3
  5072  0CFF  3EFF               	addlw	255
  5073  0D00  00AF               	movwf	??_SetReceivedTimes+2
  5074  0D01  082F               	movf	??_SetReceivedTimes+2,w
  5075  0D02  00B6               	movwf	SetReceivedTimes@colorId
  5076  0D03                     l4243:	
  5077                           
  5078                           ;./CustomLib/TrafficLight.h: 94:         (*(_semafori)[semaforoId]).new_times[colorId] =
      +                           GetTime(index, _dataFromGateway);
  5079  0D03  0837               	movf	SetReceivedTimes@_dataFromGateway,w
  5080  0D04  00AD               	movwf	??_SetReceivedTimes
  5081  0D05  082D               	movf	??_SetReceivedTimes,w
  5082  0D06  00A4               	movwf	GetTime@_dataFromGateway
  5083  0D07  0838               	movf	SetReceivedTimes@index,w
  5084  0D08  120A  158A  2262  120A  158A  	fcall	_GetTime
  5085  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0D0F  0835               	movf	SetReceivedTimes@semaforoId,w
  5088  0D10  00AE               	movwf	??_SetReceivedTimes+1
  5089  0D11  072E               	addwf	??_SetReceivedTimes+1,w
  5090  0D12  072C               	addwf	SetReceivedTimes@_semafori,w
  5091  0D13  00AF               	movwf	??_SetReceivedTimes+2
  5092  0D14  082F               	movf	??_SetReceivedTimes+2,w
  5093  0D15  0084               	movwf	4
  5094  0D16  1383               	bcf	3,7	;select IRP bank0
  5095  0D17  0800               	movf	0,w
  5096  0D18  00B0               	movwf	??_SetReceivedTimes+3
  5097  0D19  0A84               	incf	4,f
  5098  0D1A  0800               	movf	0,w
  5099  0D1B  00B1               	movwf	??_SetReceivedTimes+4
  5100  0D1C  0836               	movf	SetReceivedTimes@colorId,w
  5101  0D1D  00B2               	movwf	??_SetReceivedTimes+5
  5102  0D1E  0732               	addwf	??_SetReceivedTimes+5,w
  5103  0D1F  3E06               	addlw	6
  5104  0D20  0730               	addwf	??_SetReceivedTimes+3,w
  5105  0D21  00B3               	movwf	??_SetReceivedTimes+6
  5106  0D22  0831               	movf	??_SetReceivedTimes+4,w
  5107  0D23  1803               	skipnc
  5108  0D24  3E01               	addlw	1
  5109  0D25  00B4               	movwf	??_SetReceivedTimes+7
  5110  0D26  0833               	movf	??_SetReceivedTimes+6,w
  5111  0D27  0084               	movwf	4
  5112  0D28  1783               	bsf	3,7
  5113  0D29  1C34               	btfss	??_SetReceivedTimes+7,0
  5114  0D2A  1383               	bcf	3,7
  5115  0D2B  0824               	movf	?_GetTime,w
  5116  0D2C  0080               	movwf	0
  5117  0D2D  0A84               	incf	4,f
  5118  0D2E  0825               	movf	?_GetTime+1,w
  5119  0D2F  0080               	movwf	0
  5120  0D30                     l4245:	
  5121                           
  5122                           ;./CustomLib/TrafficLight.h: 95:     }
  5123  0D30  3001               	movlw	1
  5124  0D31  00AD               	movwf	??_SetReceivedTimes
  5125  0D32  082D               	movf	??_SetReceivedTimes,w
  5126  0D33  07B9               	addwf	SetReceivedTimes@i,f
  5127  0D34  2CCC               	goto	l4233
  5128  0D35                     l172:	
  5129  0D35  0008               	return
  5130  0D36                     __end_of_SetReceivedTimes:	
  5131                           
  5132                           	psect	text16
  5133  092D                     __ptext16:	
  5134 ;; *************** function ___bmul *****************
  5135 ;; Defined at:
  5136 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  multiplier      1    wreg     unsigned char 
  5139 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  multiplier      1    7[BANK0 ] unsigned char 
  5142 ;;  product         1    6[BANK0 ] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      unsigned char 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5152 ;;      Params:         0       1       0       0       0
  5153 ;;      Locals:         0       2       0       0       0
  5154 ;;      Temps:          0       1       0       0       0
  5155 ;;      Totals:         0       4       0       0       0
  5156 ;;Total ram usage:        4 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    3
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_SetReceivedTimes
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           
  5167                           ;psect for function ___bmul
  5168  092D                     ___bmul:	
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5172                           ;___bmul@multiplier stored from wreg
  5173  092D  1283               	bcf	3,5	;RP0=0, select bank0
  5174  092E  1303               	bcf	3,6	;RP1=0, select bank0
  5175  092F  00A7               	movwf	___bmul@multiplier
  5176  0930                     l3963:	
  5177  0930  01A6               	clrf	___bmul@product
  5178  0931                     l3965:	
  5179  0931  1C27               	btfss	___bmul@multiplier,0
  5180  0932  2934               	goto	u3531
  5181  0933  2935               	goto	u3530
  5182  0934                     u3531:	
  5183  0934  2939               	goto	l3969
  5184  0935                     u3530:	
  5185  0935                     l3967:	
  5186  0935  0824               	movf	___bmul@multiplicand,w
  5187  0936  00A5               	movwf	??___bmul
  5188  0937  0825               	movf	??___bmul,w
  5189  0938  07A6               	addwf	___bmul@product,f
  5190  0939                     l3969:	
  5191  0939  1003               	clrc
  5192  093A  0DA4               	rlf	___bmul@multiplicand,f
  5193  093B                     l3971:	
  5194  093B  1003               	clrc
  5195  093C  0CA7               	rrf	___bmul@multiplier,f
  5196  093D  0827               	movf	___bmul@multiplier,w
  5197  093E  1D03               	btfss	3,2
  5198  093F  2941               	goto	u3541
  5199  0940  2942               	goto	u3540
  5200  0941                     u3541:	
  5201  0941  2931               	goto	l3965
  5202  0942                     u3540:	
  5203  0942                     l3973:	
  5204  0942  0826               	movf	___bmul@product,w
  5205  0943                     l471:	
  5206  0943  0008               	return
  5207  0944                     __end_of___bmul:	
  5208                           
  5209                           	psect	text17
  5210  0A62                     __ptext17:	
  5211 ;; *************** function _GetTime *****************
  5212 ;; Defined at:
  5213 ;;		line 37 in file "./CustomLib/TrafficLight.h"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  index           1    wreg     unsigned char 
  5216 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  5217 ;;		 -> dataFromGateway(15), 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  index           1    8[BANK0 ] unsigned char 
  5220 ;;  tmp             2   10[BANK0 ] int 
  5221 ;;  shortInt        1    9[BANK0 ] struct .
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  2    4[BANK0 ] int 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5231 ;;      Params:         0       2       0       0       0
  5232 ;;      Locals:         0       4       0       0       0
  5233 ;;      Temps:          0       2       0       0       0
  5234 ;;      Totals:         0       8       0       0       0
  5235 ;;Total ram usage:        8 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    3
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_SetReceivedTimes
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           
  5246                           ;psect for function _GetTime
  5247  0A62                     _GetTime:	
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  5251                           ;GetTime@index stored from wreg
  5252  0A62  1283               	bcf	3,5	;RP0=0, select bank0
  5253  0A63  1303               	bcf	3,6	;RP1=0, select bank0
  5254  0A64  00A8               	movwf	GetTime@index
  5255  0A65                     l3927:	
  5256                           
  5257                           ;./CustomLib/TrafficLight.h: 37: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 38: {;./CustomLib/TrafficLight.h: 39:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 43:     } shortInt;;./CustomLib/TrafficLight.h: 45:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  5258  0A65  0828               	movf	GetTime@index,w
  5259  0A66  0724               	addwf	GetTime@_dataFromGateway,w
  5260  0A67  00A6               	movwf	??_GetTime
  5261  0A68  0826               	movf	??_GetTime,w
  5262  0A69  3E03               	addlw	3
  5263  0A6A  0084               	movwf	4
  5264  0A6B  307F               	movlw	127
  5265  0A6C  1383               	bcf	3,7	;select IRP bank0
  5266  0A6D  0500               	andwf	0,w
  5267  0A6E  00A7               	movwf	??_GetTime+1
  5268  0A6F  0829               	movf	GetTime@shortInt,w
  5269  0A70  0627               	xorwf	??_GetTime+1,w
  5270  0A71  3980               	andlw	-128
  5271  0A72  0627               	xorwf	??_GetTime+1,w
  5272  0A73  00A9               	movwf	GetTime@shortInt
  5273  0A74                     l3929:	
  5274                           
  5275                           ;./CustomLib/TrafficLight.h: 46:     tmp = shortInt.Val;
  5276  0A74  0829               	movf	GetTime@shortInt,w
  5277  0A75  397F               	andlw	127
  5278  0A76  00A6               	movwf	??_GetTime
  5279  0A77  01A7               	clrf	??_GetTime+1
  5280  0A78  0826               	movf	??_GetTime,w
  5281  0A79  00AA               	movwf	GetTime@tmp
  5282  0A7A  0827               	movf	??_GetTime+1,w
  5283  0A7B  00AB               	movwf	GetTime@tmp+1
  5284  0A7C                     l3931:	
  5285                           
  5286                           ;./CustomLib/TrafficLight.h: 47:     tmp = (tmp << 7) & 0x80;
  5287  0A7C  082B               	movf	GetTime@tmp+1,w
  5288  0A7D  00A7               	movwf	??_GetTime+1
  5289  0A7E  082A               	movf	GetTime@tmp,w
  5290  0A7F  00A6               	movwf	??_GetTime
  5291  0A80  3007               	movlw	7
  5292  0A81  00FF               	movwf	btemp+1
  5293  0A82                     u3475:	
  5294  0A82  1003               	clrc
  5295  0A83  0DA6               	rlf	??_GetTime,f
  5296  0A84  0DA7               	rlf	??_GetTime+1,f
  5297  0A85  0BFF               	decfsz	btemp+1,f
  5298  0A86  2A82               	goto	u3475
  5299  0A87  3080               	movlw	128
  5300  0A88  0526               	andwf	??_GetTime,w
  5301  0A89  00AA               	movwf	GetTime@tmp
  5302  0A8A  3000               	movlw	0
  5303  0A8B  0527               	andwf	??_GetTime+1,w
  5304  0A8C  00AB               	movwf	GetTime@tmp+1
  5305  0A8D                     l3933:	
  5306                           
  5307                           ;./CustomLib/TrafficLight.h: 49:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  5308  0A8D  0828               	movf	GetTime@index,w
  5309  0A8E  0724               	addwf	GetTime@_dataFromGateway,w
  5310  0A8F  00A6               	movwf	??_GetTime
  5311  0A90  0826               	movf	??_GetTime,w
  5312  0A91  3E02               	addlw	2
  5313  0A92  0084               	movwf	4
  5314  0A93  307F               	movlw	127
  5315  0A94  0500               	andwf	0,w
  5316  0A95  00A7               	movwf	??_GetTime+1
  5317  0A96  0829               	movf	GetTime@shortInt,w
  5318  0A97  0627               	xorwf	??_GetTime+1,w
  5319  0A98  3980               	andlw	-128
  5320  0A99  0627               	xorwf	??_GetTime+1,w
  5321  0A9A  00A9               	movwf	GetTime@shortInt
  5322  0A9B                     l3935:	
  5323                           
  5324                           ;./CustomLib/TrafficLight.h: 50:     tmp = tmp | shortInt.Val;
  5325  0A9B  0829               	movf	GetTime@shortInt,w
  5326  0A9C  397F               	andlw	127
  5327  0A9D  00A6               	movwf	??_GetTime
  5328  0A9E  082A               	movf	GetTime@tmp,w
  5329  0A9F  0426               	iorwf	??_GetTime,w
  5330  0AA0  00AA               	movwf	GetTime@tmp
  5331  0AA1  082B               	movf	GetTime@tmp+1,w
  5332  0AA2  00AB               	movwf	GetTime@tmp+1
  5333  0AA3                     l3937:	
  5334                           
  5335                           ;./CustomLib/TrafficLight.h: 52:     return tmp;
  5336  0AA3  082B               	movf	GetTime@tmp+1,w
  5337  0AA4  00A5               	movwf	?_GetTime+1
  5338  0AA5  082A               	movf	GetTime@tmp,w
  5339  0AA6  00A4               	movwf	?_GetTime
  5340  0AA7                     l155:	
  5341  0AA7  0008               	return
  5342  0AA8                     __end_of_GetTime:	
  5343                           
  5344                           	psect	text18
  5345  050F                     __ptext18:	
  5346 ;; *************** function _SetDefaultTimers *****************
  5347 ;; Defined at:
  5348 ;;		line 56 in file "./CustomLib/TrafficLight.h"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  rosso           2    4[BANK0 ] int 
  5351 ;;  verde           2    6[BANK0 ] int 
  5352 ;;  giallo          2    8[BANK0 ] int 
  5353 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  5354 ;;		 -> Semafori(8), 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  i               1   19[BANK0 ] unsigned char 
  5357 ;;  l               1   18[BANK0 ] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5367 ;;      Params:         0       7       0       0       0
  5368 ;;      Locals:         0       2       0       0       0
  5369 ;;      Temps:          0       7       0       0       0
  5370 ;;      Totals:         0      16       0       0       0
  5371 ;;Total ram usage:       16 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    3
  5374 ;; This function calls:
  5375 ;;		Nothing
  5376 ;; This function is called by:
  5377 ;;		_main
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           
  5382                           ;psect for function _SetDefaultTimers
  5383  050F                     _SetDefaultTimers:	
  5384  050F                     l4195:	
  5385                           ;incstack = 0
  5386                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  5387                           
  5388                           
  5389                           ;./CustomLib/TrafficLight.h: 56: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 57: {;./CustomLib/TrafficLight.h: 58: 
      +                              for (unsigned char l = 0; l < n_semafori; l++)
  5390  050F  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0510  1303               	bcf	3,6	;RP1=0, select bank0
  5392  0511  01B2               	clrf	SetDefaultTimers@l
  5393  0512                     l4201:	
  5394                           
  5395                           ;./CustomLib/TrafficLight.h: 59:     {;./CustomLib/TrafficLight.h: 60:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  5396  0512  01B3               	clrf	SetDefaultTimers@i
  5397  0513  2DDA               	goto	l4215
  5398  0514                     l4207:	
  5399                           
  5400                           ;./CustomLib/TrafficLight.h: 65:                 (*(_semafori)[l]).times[i] = rosso;
  5401  0514  0832               	movf	SetDefaultTimers@l,w
  5402  0515  00AB               	movwf	??_SetDefaultTimers
  5403  0516  072B               	addwf	??_SetDefaultTimers,w
  5404  0517  072A               	addwf	SetDefaultTimers@_semafori,w
  5405  0518  00AC               	movwf	??_SetDefaultTimers+1
  5406  0519  082C               	movf	??_SetDefaultTimers+1,w
  5407  051A  0084               	movwf	4
  5408  051B  1383               	bcf	3,7	;select IRP bank0
  5409  051C  0800               	movf	0,w
  5410  051D  00AD               	movwf	??_SetDefaultTimers+2
  5411  051E  0A84               	incf	4,f
  5412  051F  0800               	movf	0,w
  5413  0520  00AE               	movwf	??_SetDefaultTimers+3
  5414  0521  0833               	movf	SetDefaultTimers@i,w
  5415  0522  00AF               	movwf	??_SetDefaultTimers+4
  5416  0523  072F               	addwf	??_SetDefaultTimers+4,w
  5417  0524  072D               	addwf	??_SetDefaultTimers+2,w
  5418  0525  00B0               	movwf	??_SetDefaultTimers+5
  5419  0526  082E               	movf	??_SetDefaultTimers+3,w
  5420  0527  1803               	skipnc
  5421  0528  3E01               	addlw	1
  5422  0529  00B1               	movwf	??_SetDefaultTimers+6
  5423  052A  0830               	movf	??_SetDefaultTimers+5,w
  5424  052B  0084               	movwf	4
  5425  052C  1783               	bsf	3,7
  5426  052D  1C31               	btfss	??_SetDefaultTimers+6,0
  5427  052E  1383               	bcf	3,7
  5428  052F  0824               	movf	SetDefaultTimers@rosso,w
  5429  0530  0080               	movwf	0
  5430  0531  0A84               	incf	4,f
  5431  0532  0825               	movf	SetDefaultTimers@rosso+1,w
  5432  0533  0080               	movwf	0
  5433                           
  5434                           ;./CustomLib/TrafficLight.h: 66:                 (*(_semafori)[l]).new_times[i] = rosso;
  5435  0534  0832               	movf	SetDefaultTimers@l,w
  5436  0535  00AB               	movwf	??_SetDefaultTimers
  5437  0536  072B               	addwf	??_SetDefaultTimers,w
  5438  0537  072A               	addwf	SetDefaultTimers@_semafori,w
  5439  0538  00AC               	movwf	??_SetDefaultTimers+1
  5440  0539  082C               	movf	??_SetDefaultTimers+1,w
  5441  053A  0084               	movwf	4
  5442  053B  1383               	bcf	3,7	;select IRP bank0
  5443  053C  0800               	movf	0,w
  5444  053D  00AD               	movwf	??_SetDefaultTimers+2
  5445  053E  0A84               	incf	4,f
  5446  053F  0800               	movf	0,w
  5447  0540  00AE               	movwf	??_SetDefaultTimers+3
  5448  0541  0833               	movf	SetDefaultTimers@i,w
  5449  0542  00AF               	movwf	??_SetDefaultTimers+4
  5450  0543  072F               	addwf	??_SetDefaultTimers+4,w
  5451  0544  3E06               	addlw	6
  5452  0545  072D               	addwf	??_SetDefaultTimers+2,w
  5453  0546  00B0               	movwf	??_SetDefaultTimers+5
  5454  0547  082E               	movf	??_SetDefaultTimers+3,w
  5455  0548  1803               	skipnc
  5456  0549  3E01               	addlw	1
  5457  054A  00B1               	movwf	??_SetDefaultTimers+6
  5458  054B  0830               	movf	??_SetDefaultTimers+5,w
  5459  054C  0084               	movwf	4
  5460  054D  1783               	bsf	3,7
  5461  054E  1C31               	btfss	??_SetDefaultTimers+6,0
  5462  054F  1383               	bcf	3,7
  5463  0550  0824               	movf	SetDefaultTimers@rosso,w
  5464  0551  0080               	movwf	0
  5465  0552  0A84               	incf	4,f
  5466  0553  0825               	movf	SetDefaultTimers@rosso+1,w
  5467  0554  0080               	movwf	0
  5468                           
  5469                           ;./CustomLib/TrafficLight.h: 67:                 break;
  5470  0555  2DED               	goto	l4217
  5471  0556                     l4209:	
  5472                           
  5473                           ;./CustomLib/TrafficLight.h: 69:                 (*(_semafori)[l]).times[i] = verde;
  5474  0556  0832               	movf	SetDefaultTimers@l,w
  5475  0557  00AB               	movwf	??_SetDefaultTimers
  5476  0558  072B               	addwf	??_SetDefaultTimers,w
  5477  0559  072A               	addwf	SetDefaultTimers@_semafori,w
  5478  055A  00AC               	movwf	??_SetDefaultTimers+1
  5479  055B  082C               	movf	??_SetDefaultTimers+1,w
  5480  055C  0084               	movwf	4
  5481  055D  1383               	bcf	3,7	;select IRP bank0
  5482  055E  0800               	movf	0,w
  5483  055F  00AD               	movwf	??_SetDefaultTimers+2
  5484  0560  0A84               	incf	4,f
  5485  0561  0800               	movf	0,w
  5486  0562  00AE               	movwf	??_SetDefaultTimers+3
  5487  0563  0833               	movf	SetDefaultTimers@i,w
  5488  0564  00AF               	movwf	??_SetDefaultTimers+4
  5489  0565  072F               	addwf	??_SetDefaultTimers+4,w
  5490  0566  072D               	addwf	??_SetDefaultTimers+2,w
  5491  0567  00B0               	movwf	??_SetDefaultTimers+5
  5492  0568  082E               	movf	??_SetDefaultTimers+3,w
  5493  0569  1803               	skipnc
  5494  056A  3E01               	addlw	1
  5495  056B  00B1               	movwf	??_SetDefaultTimers+6
  5496  056C  0830               	movf	??_SetDefaultTimers+5,w
  5497  056D  0084               	movwf	4
  5498  056E  1783               	bsf	3,7
  5499  056F  1C31               	btfss	??_SetDefaultTimers+6,0
  5500  0570  1383               	bcf	3,7
  5501  0571  0826               	movf	SetDefaultTimers@verde,w
  5502  0572  0080               	movwf	0
  5503  0573  0A84               	incf	4,f
  5504  0574  0827               	movf	SetDefaultTimers@verde+1,w
  5505  0575  0080               	movwf	0
  5506                           
  5507                           ;./CustomLib/TrafficLight.h: 70:                 (*(_semafori)[l]).new_times[i] = verde;
  5508  0576  0832               	movf	SetDefaultTimers@l,w
  5509  0577  00AB               	movwf	??_SetDefaultTimers
  5510  0578  072B               	addwf	??_SetDefaultTimers,w
  5511  0579  072A               	addwf	SetDefaultTimers@_semafori,w
  5512  057A  00AC               	movwf	??_SetDefaultTimers+1
  5513  057B  082C               	movf	??_SetDefaultTimers+1,w
  5514  057C  0084               	movwf	4
  5515  057D  1383               	bcf	3,7	;select IRP bank0
  5516  057E  0800               	movf	0,w
  5517  057F  00AD               	movwf	??_SetDefaultTimers+2
  5518  0580  0A84               	incf	4,f
  5519  0581  0800               	movf	0,w
  5520  0582  00AE               	movwf	??_SetDefaultTimers+3
  5521  0583  0833               	movf	SetDefaultTimers@i,w
  5522  0584  00AF               	movwf	??_SetDefaultTimers+4
  5523  0585  072F               	addwf	??_SetDefaultTimers+4,w
  5524  0586  3E06               	addlw	6
  5525  0587  072D               	addwf	??_SetDefaultTimers+2,w
  5526  0588  00B0               	movwf	??_SetDefaultTimers+5
  5527  0589  082E               	movf	??_SetDefaultTimers+3,w
  5528  058A  1803               	skipnc
  5529  058B  3E01               	addlw	1
  5530  058C  00B1               	movwf	??_SetDefaultTimers+6
  5531  058D  0830               	movf	??_SetDefaultTimers+5,w
  5532  058E  0084               	movwf	4
  5533  058F  1783               	bsf	3,7
  5534  0590  1C31               	btfss	??_SetDefaultTimers+6,0
  5535  0591  1383               	bcf	3,7
  5536  0592  0826               	movf	SetDefaultTimers@verde,w
  5537  0593  0080               	movwf	0
  5538  0594  0A84               	incf	4,f
  5539  0595  0827               	movf	SetDefaultTimers@verde+1,w
  5540  0596  0080               	movwf	0
  5541                           
  5542                           ;./CustomLib/TrafficLight.h: 71:                 break;
  5543  0597  2DED               	goto	l4217
  5544  0598                     l4211:	
  5545                           
  5546                           ;./CustomLib/TrafficLight.h: 73:                 (*(_semafori)[l]).times[i] = giallo;
  5547  0598  0832               	movf	SetDefaultTimers@l,w
  5548  0599  00AB               	movwf	??_SetDefaultTimers
  5549  059A  072B               	addwf	??_SetDefaultTimers,w
  5550  059B  072A               	addwf	SetDefaultTimers@_semafori,w
  5551  059C  00AC               	movwf	??_SetDefaultTimers+1
  5552  059D  082C               	movf	??_SetDefaultTimers+1,w
  5553  059E  0084               	movwf	4
  5554  059F  1383               	bcf	3,7	;select IRP bank0
  5555  05A0  0800               	movf	0,w
  5556  05A1  00AD               	movwf	??_SetDefaultTimers+2
  5557  05A2  0A84               	incf	4,f
  5558  05A3  0800               	movf	0,w
  5559  05A4  00AE               	movwf	??_SetDefaultTimers+3
  5560  05A5  0833               	movf	SetDefaultTimers@i,w
  5561  05A6  00AF               	movwf	??_SetDefaultTimers+4
  5562  05A7  072F               	addwf	??_SetDefaultTimers+4,w
  5563  05A8  072D               	addwf	??_SetDefaultTimers+2,w
  5564  05A9  00B0               	movwf	??_SetDefaultTimers+5
  5565  05AA  082E               	movf	??_SetDefaultTimers+3,w
  5566  05AB  1803               	skipnc
  5567  05AC  3E01               	addlw	1
  5568  05AD  00B1               	movwf	??_SetDefaultTimers+6
  5569  05AE  0830               	movf	??_SetDefaultTimers+5,w
  5570  05AF  0084               	movwf	4
  5571  05B0  1783               	bsf	3,7
  5572  05B1  1C31               	btfss	??_SetDefaultTimers+6,0
  5573  05B2  1383               	bcf	3,7
  5574  05B3  0828               	movf	SetDefaultTimers@giallo,w
  5575  05B4  0080               	movwf	0
  5576  05B5  0A84               	incf	4,f
  5577  05B6  0829               	movf	SetDefaultTimers@giallo+1,w
  5578  05B7  0080               	movwf	0
  5579                           
  5580                           ;./CustomLib/TrafficLight.h: 74:                 (*(_semafori)[l]).new_times[i] = giallo
      +                          ;
  5581  05B8  0832               	movf	SetDefaultTimers@l,w
  5582  05B9  00AB               	movwf	??_SetDefaultTimers
  5583  05BA  072B               	addwf	??_SetDefaultTimers,w
  5584  05BB  072A               	addwf	SetDefaultTimers@_semafori,w
  5585  05BC  00AC               	movwf	??_SetDefaultTimers+1
  5586  05BD  082C               	movf	??_SetDefaultTimers+1,w
  5587  05BE  0084               	movwf	4
  5588  05BF  1383               	bcf	3,7	;select IRP bank0
  5589  05C0  0800               	movf	0,w
  5590  05C1  00AD               	movwf	??_SetDefaultTimers+2
  5591  05C2  0A84               	incf	4,f
  5592  05C3  0800               	movf	0,w
  5593  05C4  00AE               	movwf	??_SetDefaultTimers+3
  5594  05C5  0833               	movf	SetDefaultTimers@i,w
  5595  05C6  00AF               	movwf	??_SetDefaultTimers+4
  5596  05C7  072F               	addwf	??_SetDefaultTimers+4,w
  5597  05C8  3E06               	addlw	6
  5598  05C9  072D               	addwf	??_SetDefaultTimers+2,w
  5599  05CA  00B0               	movwf	??_SetDefaultTimers+5
  5600  05CB  082E               	movf	??_SetDefaultTimers+3,w
  5601  05CC  1803               	skipnc
  5602  05CD  3E01               	addlw	1
  5603  05CE  00B1               	movwf	??_SetDefaultTimers+6
  5604  05CF  0830               	movf	??_SetDefaultTimers+5,w
  5605  05D0  0084               	movwf	4
  5606  05D1  1783               	bsf	3,7
  5607  05D2  1C31               	btfss	??_SetDefaultTimers+6,0
  5608  05D3  1383               	bcf	3,7
  5609  05D4  0828               	movf	SetDefaultTimers@giallo,w
  5610  05D5  0080               	movwf	0
  5611  05D6  0A84               	incf	4,f
  5612  05D7  0829               	movf	SetDefaultTimers@giallo+1,w
  5613  05D8  0080               	movwf	0
  5614                           
  5615                           ;./CustomLib/TrafficLight.h: 75:                 break;
  5616  05D9  2DED               	goto	l4217
  5617  05DA                     l4215:	
  5618  05DA  0833               	movf	SetDefaultTimers@i,w
  5619  05DB  00AB               	movwf	??_SetDefaultTimers
  5620  05DC  01AC               	clrf	??_SetDefaultTimers+1
  5621                           
  5622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5623                           ; Switch size 1, requested type "simple"
  5624                           ; Number of cases is 1, Range of values is 0 to 0
  5625                           ; switch strategies available:
  5626                           ; Name         Instructions Cycles
  5627                           ; simple_byte            4     3 (average)
  5628                           ; direct_byte           11     8 (fixed)
  5629                           ; jumptable            260     6 (fixed)
  5630                           ;	Chosen strategy is simple_byte
  5631  05DD  082C               	movf	??_SetDefaultTimers+1,w
  5632  05DE  3A00               	xorlw	0	; case 0
  5633  05DF  1903               	skipnz
  5634  05E0  2DE2               	goto	l4765
  5635  05E1  2DED               	goto	l4217
  5636  05E2                     l4765:	
  5637                           
  5638                           ; Switch size 1, requested type "simple"
  5639                           ; Number of cases is 3, Range of values is 0 to 2
  5640                           ; switch strategies available:
  5641                           ; Name         Instructions Cycles
  5642                           ; simple_byte           10     6 (average)
  5643                           ; direct_byte           17     8 (fixed)
  5644                           ; jumptable            260     6 (fixed)
  5645                           ;	Chosen strategy is simple_byte
  5646  05E2  082B               	movf	??_SetDefaultTimers,w
  5647  05E3  3A00               	xorlw	0	; case 0
  5648  05E4  1903               	skipnz
  5649  05E5  2D14               	goto	l4207
  5650  05E6  3A01               	xorlw	1	; case 1
  5651  05E7  1903               	skipnz
  5652  05E8  2D56               	goto	l4209
  5653  05E9  3A03               	xorlw	3	; case 2
  5654  05EA  1903               	skipnz
  5655  05EB  2D98               	goto	l4211
  5656  05EC  2DED               	goto	l4217
  5657  05ED                     l4217:	
  5658                           
  5659                           ;./CustomLib/TrafficLight.h: 77:         }
  5660  05ED  3001               	movlw	1
  5661  05EE  00AB               	movwf	??_SetDefaultTimers
  5662  05EF  082B               	movf	??_SetDefaultTimers,w
  5663  05F0  07B3               	addwf	SetDefaultTimers@i,f
  5664  05F1                     l4219:	
  5665  05F1  3003               	movlw	3
  5666  05F2  0233               	subwf	SetDefaultTimers@i,w
  5667  05F3  1C03               	skipc
  5668  05F4  2DF6               	goto	u3981
  5669  05F5  2DF7               	goto	u3980
  5670  05F6                     u3981:	
  5671  05F6  2DDA               	goto	l4215
  5672  05F7                     u3980:	
  5673  05F7                     l4221:	
  5674                           
  5675                           ;./CustomLib/TrafficLight.h: 78:     }
  5676  05F7  3001               	movlw	1
  5677  05F8  00AB               	movwf	??_SetDefaultTimers
  5678  05F9  082B               	movf	??_SetDefaultTimers,w
  5679  05FA  07B2               	addwf	SetDefaultTimers@l,f
  5680  05FB                     l4223:	
  5681  05FB  3002               	movlw	2
  5682  05FC  0232               	subwf	SetDefaultTimers@l,w
  5683  05FD  1C03               	skipc
  5684  05FE  2E00               	goto	u3991
  5685  05FF  2E01               	goto	u3990
  5686  0600                     u3991:	
  5687  0600  2D12               	goto	l4201
  5688  0601                     u3990:	
  5689  0601                     l4225:	
  5690                           
  5691                           ;./CustomLib/TrafficLight.h: 80:     (*(_semafori)[0]).lux_select = 0;
  5692  0601  082A               	movf	SetDefaultTimers@_semafori,w
  5693  0602  0084               	movwf	4
  5694  0603  1383               	bcf	3,7	;select IRP bank0
  5695  0604  0800               	movf	0,w
  5696  0605  00AB               	movwf	??_SetDefaultTimers
  5697  0606  0A84               	incf	4,f
  5698  0607  0800               	movf	0,w
  5699  0608  00AC               	movwf	??_SetDefaultTimers+1
  5700  0609  082B               	movf	??_SetDefaultTimers,w
  5701  060A  3E0C               	addlw	12
  5702  060B  00AD               	movwf	??_SetDefaultTimers+2
  5703  060C  082C               	movf	??_SetDefaultTimers+1,w
  5704  060D  1803               	skipnc
  5705  060E  3E01               	addlw	1
  5706  060F  3E00               	addlw	0
  5707  0610  00AE               	movwf	??_SetDefaultTimers+3
  5708  0611  082D               	movf	??_SetDefaultTimers+2,w
  5709  0612  0084               	movwf	4
  5710  0613  1783               	bsf	3,7
  5711  0614  1C2E               	btfss	??_SetDefaultTimers+3,0
  5712  0615  1383               	bcf	3,7
  5713  0616  0180               	clrf	0
  5714                           
  5715                           ;./CustomLib/TrafficLight.h: 81:     (*(_semafori)[0]).new_lux_select = 0;
  5716  0617  082A               	movf	SetDefaultTimers@_semafori,w
  5717  0618  0084               	movwf	4
  5718  0619  1383               	bcf	3,7	;select IRP bank0
  5719  061A  0800               	movf	0,w
  5720  061B  00AB               	movwf	??_SetDefaultTimers
  5721  061C  0A84               	incf	4,f
  5722  061D  0800               	movf	0,w
  5723  061E  00AC               	movwf	??_SetDefaultTimers+1
  5724  061F  082B               	movf	??_SetDefaultTimers,w
  5725  0620  3E0D               	addlw	13
  5726  0621  00AD               	movwf	??_SetDefaultTimers+2
  5727  0622  082C               	movf	??_SetDefaultTimers+1,w
  5728  0623  1803               	skipnc
  5729  0624  3E01               	addlw	1
  5730  0625  3E00               	addlw	0
  5731  0626  00AE               	movwf	??_SetDefaultTimers+3
  5732  0627  082D               	movf	??_SetDefaultTimers+2,w
  5733  0628  0084               	movwf	4
  5734  0629  1783               	bsf	3,7
  5735  062A  1C2E               	btfss	??_SetDefaultTimers+3,0
  5736  062B  1383               	bcf	3,7
  5737  062C  0180               	clrf	0
  5738                           
  5739                           ;./CustomLib/TrafficLight.h: 82:     (*(_semafori)[1]).lux_select = 1;
  5740  062D  082A               	movf	SetDefaultTimers@_semafori,w
  5741  062E  3E02               	addlw	2
  5742  062F  0084               	movwf	4
  5743  0630  1383               	bcf	3,7	;select IRP bank0
  5744  0631  0800               	movf	0,w
  5745  0632  00AB               	movwf	??_SetDefaultTimers
  5746  0633  0A84               	incf	4,f
  5747  0634  0800               	movf	0,w
  5748  0635  00AC               	movwf	??_SetDefaultTimers+1
  5749  0636  082B               	movf	??_SetDefaultTimers,w
  5750  0637  3E0C               	addlw	12
  5751  0638  00AD               	movwf	??_SetDefaultTimers+2
  5752  0639  082C               	movf	??_SetDefaultTimers+1,w
  5753  063A  1803               	skipnc
  5754  063B  3E01               	addlw	1
  5755  063C  3E00               	addlw	0
  5756  063D  00AE               	movwf	??_SetDefaultTimers+3
  5757  063E  082D               	movf	??_SetDefaultTimers+2,w
  5758  063F  0084               	movwf	4
  5759  0640  1783               	bsf	3,7
  5760  0641  1C2E               	btfss	??_SetDefaultTimers+3,0
  5761  0642  1383               	bcf	3,7
  5762  0643  0180               	clrf	0
  5763  0644  0A80               	incf	0,f
  5764                           
  5765                           ;./CustomLib/TrafficLight.h: 83:     (*(_semafori)[1]).new_lux_select = 1;
  5766  0645  082A               	movf	SetDefaultTimers@_semafori,w
  5767  0646  3E02               	addlw	2
  5768  0647  0084               	movwf	4
  5769  0648  1383               	bcf	3,7	;select IRP bank0
  5770  0649  0800               	movf	0,w
  5771  064A  00AB               	movwf	??_SetDefaultTimers
  5772  064B  0A84               	incf	4,f
  5773  064C  0800               	movf	0,w
  5774  064D  00AC               	movwf	??_SetDefaultTimers+1
  5775  064E  082B               	movf	??_SetDefaultTimers,w
  5776  064F  3E0D               	addlw	13
  5777  0650  00AD               	movwf	??_SetDefaultTimers+2
  5778  0651  082C               	movf	??_SetDefaultTimers+1,w
  5779  0652  1803               	skipnc
  5780  0653  3E01               	addlw	1
  5781  0654  3E00               	addlw	0
  5782  0655  00AE               	movwf	??_SetDefaultTimers+3
  5783  0656  082D               	movf	??_SetDefaultTimers+2,w
  5784  0657  0084               	movwf	4
  5785  0658  1783               	bsf	3,7
  5786  0659  1C2E               	btfss	??_SetDefaultTimers+3,0
  5787  065A  1383               	bcf	3,7
  5788  065B  0180               	clrf	0
  5789  065C  0A80               	incf	0,f
  5790  065D                     l167:	
  5791  065D  0008               	return
  5792  065E                     __end_of_SetDefaultTimers:	
  5793                           
  5794                           	psect	text19
  5795  0D36                     __ptext19:	
  5796 ;; *************** function _GetDigits *****************
  5797 ;; Defined at:
  5798 ;;		line 28 in file "./CustomLib/Conversions.h"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  centinaia       1    wreg     PTR unsigned char 
  5801 ;;		 -> centinaia(1), 
  5802 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  5803 ;;		 -> decine(1), 
  5804 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  5805 ;;		 -> unita(1), 
  5806 ;;  Time            2   22[BANK0 ] int 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  5809 ;;		 -> centinaia(1), 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5819 ;;      Params:         0       4       0       0       0
  5820 ;;      Locals:         0       3       0       0       0
  5821 ;;      Temps:          0       1       0       0       0
  5822 ;;      Totals:         0       8       0       0       0
  5823 ;;Total ram usage:        8 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    4
  5826 ;; This function calls:
  5827 ;;		___awdiv
  5828 ;;		___awmod
  5829 ;; This function is called by:
  5830 ;;		_main
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           
  5835                           ;psect for function _GetDigits
  5836  0D36                     _GetDigits:	
  5837                           
  5838                           ;incstack = 0
  5839                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5840                           ;GetDigits@centinaia stored from wreg
  5841  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  5842  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  5843  0D38  00BB               	movwf	GetDigits@centinaia
  5844  0D39                     l4103:	
  5845                           
  5846                           ;./CustomLib/Conversions.h: 28: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 29: {;./CustomLib/Con
      +                          versions.h: 30:     while (Time / 1000 > 0)
  5847  0D39  2D4F               	goto	l4107
  5848  0D3A                     l4105:	
  5849                           
  5850                           ;./CustomLib/Conversions.h: 31:     {;./CustomLib/Conversions.h: 32:         Time = Time
      +                           / 10;
  5851  0D3A  300A               	movlw	10
  5852  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  5853  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  5854  0D3D  00AB               	movwf	___awdiv@divisor
  5855  0D3E  3000               	movlw	0
  5856  0D3F  00AC               	movwf	___awdiv@divisor+1
  5857  0D40  0837               	movf	GetDigits@Time+1,w
  5858  0D41  00AE               	movwf	___awdiv@dividend+1
  5859  0D42  0836               	movf	GetDigits@Time,w
  5860  0D43  00AD               	movwf	___awdiv@dividend
  5861  0D44  120A  158A  245F  120A  158A  	fcall	___awdiv
  5862  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  5863  0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  5864  0D4B  082C               	movf	?___awdiv+1,w
  5865  0D4C  00B7               	movwf	GetDigits@Time+1
  5866  0D4D  082B               	movf	?___awdiv,w
  5867  0D4E  00B6               	movwf	GetDigits@Time
  5868  0D4F                     l4107:	
  5869                           
  5870                           ;./CustomLib/Conversions.h: 30:     while (Time / 1000 > 0)
  5871  0D4F  30E8               	movlw	232
  5872  0D50  00AB               	movwf	___awdiv@divisor
  5873  0D51  3003               	movlw	3
  5874  0D52  00AC               	movwf	___awdiv@divisor+1
  5875  0D53  0837               	movf	GetDigits@Time+1,w
  5876  0D54  00AE               	movwf	___awdiv@dividend+1
  5877  0D55  0836               	movf	GetDigits@Time,w
  5878  0D56  00AD               	movwf	___awdiv@dividend
  5879  0D57  120A  158A  245F  120A  158A  	fcall	___awdiv
  5880  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  5881  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  5882  0D5E  082C               	movf	?___awdiv+1,w
  5883  0D5F  3A80               	xorlw	128
  5884  0D60  00FF               	movwf	btemp+1
  5885  0D61  3080               	movlw	128
  5886  0D62  027F               	subwf	btemp+1,w
  5887  0D63  1D03               	skipz
  5888  0D64  2D67               	goto	u3845
  5889  0D65  3001               	movlw	1
  5890  0D66  022B               	subwf	?___awdiv,w
  5891  0D67                     u3845:	
  5892  0D67  1803               	skipnc
  5893  0D68  2D6A               	goto	u3841
  5894  0D69  2D6B               	goto	u3840
  5895  0D6A                     u3841:	
  5896  0D6A  2D3A               	goto	l4105
  5897  0D6B                     u3840:	
  5898  0D6B                     l4109:	
  5899                           
  5900                           ;./CustomLib/Conversions.h: 35:     *centinaia = Time / 100;
  5901  0D6B  3064               	movlw	100
  5902  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  5903  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  5904  0D6E  00AB               	movwf	___awdiv@divisor
  5905  0D6F  3000               	movlw	0
  5906  0D70  00AC               	movwf	___awdiv@divisor+1
  5907  0D71  0837               	movf	GetDigits@Time+1,w
  5908  0D72  00AE               	movwf	___awdiv@dividend+1
  5909  0D73  0836               	movf	GetDigits@Time,w
  5910  0D74  00AD               	movwf	___awdiv@dividend
  5911  0D75  120A  158A  245F  120A  158A  	fcall	___awdiv
  5912  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  5913  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  5914  0D7C  082B               	movf	?___awdiv,w
  5915  0D7D  00B8               	movwf	??_GetDigits
  5916  0D7E  083B               	movf	GetDigits@centinaia,w
  5917  0D7F  0084               	movwf	4
  5918  0D80  0838               	movf	??_GetDigits,w
  5919  0D81  1383               	bcf	3,7	;select IRP bank0
  5920  0D82  0080               	movwf	0
  5921                           
  5922                           ;./CustomLib/Conversions.h: 36:     *decine = (Time % 100) / 10;
  5923  0D83  300A               	movlw	10
  5924  0D84  00AB               	movwf	___awdiv@divisor
  5925  0D85  3000               	movlw	0
  5926  0D86  00AC               	movwf	___awdiv@divisor+1
  5927  0D87  0837               	movf	GetDigits@Time+1,w
  5928  0D88  00A7               	movwf	___awmod@dividend+1
  5929  0D89  0836               	movf	GetDigits@Time,w
  5930  0D8A  00A6               	movwf	___awmod@dividend
  5931  0D8B  3064               	movlw	100
  5932  0D8C  00A4               	movwf	___awmod@divisor
  5933  0D8D  3000               	movlw	0
  5934  0D8E  00A5               	movwf	___awmod@divisor+1
  5935  0D8F  120A  158A  239F  120A  158A  	fcall	___awmod
  5936  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  5937  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  5938  0D96  0825               	movf	?___awmod+1,w
  5939  0D97  00AE               	movwf	___awdiv@dividend+1
  5940  0D98  0824               	movf	?___awmod,w
  5941  0D99  00AD               	movwf	___awdiv@dividend
  5942  0D9A  120A  158A  245F  120A  158A  	fcall	___awdiv
  5943  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  5945  0DA1  082B               	movf	?___awdiv,w
  5946  0DA2  00B8               	movwf	??_GetDigits
  5947  0DA3  0834               	movf	GetDigits@decine,w
  5948  0DA4  0084               	movwf	4
  5949  0DA5  0838               	movf	??_GetDigits,w
  5950  0DA6  1383               	bcf	3,7	;select IRP bank0
  5951  0DA7  0080               	movwf	0
  5952  0DA8                     l4111:	
  5953                           
  5954                           ;./CustomLib/Conversions.h: 37:     *unita = (Time % 100) % 10;
  5955  0DA8  0837               	movf	GetDigits@Time+1,w
  5956  0DA9  00A7               	movwf	___awmod@dividend+1
  5957  0DAA  0836               	movf	GetDigits@Time,w
  5958  0DAB  00A6               	movwf	___awmod@dividend
  5959  0DAC  3064               	movlw	100
  5960  0DAD  00A4               	movwf	___awmod@divisor
  5961  0DAE  3000               	movlw	0
  5962  0DAF  00A5               	movwf	___awmod@divisor+1
  5963  0DB0  120A  158A  239F  120A  158A  	fcall	___awmod
  5964  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  5965  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  5966  0DB7  0825               	movf	?___awmod+1,w
  5967  0DB8  00BA               	movwf	_GetDigits$1200+1
  5968  0DB9  0824               	movf	?___awmod,w
  5969  0DBA  00B9               	movwf	_GetDigits$1200
  5970  0DBB                     l4113:	
  5971                           
  5972                           ;./CustomLib/Conversions.h: 37:     *unita = (Time % 100) % 10;
  5973  0DBB  300A               	movlw	10
  5974  0DBC  00A4               	movwf	___awmod@divisor
  5975  0DBD  3000               	movlw	0
  5976  0DBE  00A5               	movwf	___awmod@divisor+1
  5977  0DBF  083A               	movf	_GetDigits$1200+1,w
  5978  0DC0  00A7               	movwf	___awmod@dividend+1
  5979  0DC1  0839               	movf	_GetDigits$1200,w
  5980  0DC2  00A6               	movwf	___awmod@dividend
  5981  0DC3  120A  158A  239F  120A  158A  	fcall	___awmod
  5982  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  5983  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  5984  0DCA  0824               	movf	?___awmod,w
  5985  0DCB  00B8               	movwf	??_GetDigits
  5986  0DCC  0835               	movf	GetDigits@unita,w
  5987  0DCD  0084               	movwf	4
  5988  0DCE  0838               	movf	??_GetDigits,w
  5989  0DCF  1383               	bcf	3,7	;select IRP bank0
  5990  0DD0  0080               	movwf	0
  5991  0DD1                     l98:	
  5992  0DD1  0008               	return
  5993  0DD2                     __end_of_GetDigits:	
  5994                           
  5995                           	psect	text20
  5996  0B9F                     __ptext20:	
  5997 ;; *************** function ___awmod *****************
  5998 ;; Defined at:
  5999 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  divisor         2    4[BANK0 ] int 
  6002 ;;  dividend        2    6[BANK0 ] int 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  sign            1   10[BANK0 ] unsigned char 
  6005 ;;  counter         1    9[BANK0 ] unsigned char 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  2    4[BANK0 ] int 
  6008 ;; Registers used:
  6009 ;;		wreg, status,2, status,0
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6015 ;;      Params:         0       4       0       0       0
  6016 ;;      Locals:         0       2       0       0       0
  6017 ;;      Temps:          0       1       0       0       0
  6018 ;;      Totals:         0       7       0       0       0
  6019 ;;Total ram usage:        7 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    3
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_GetDigits
  6026 ;;		_ShowDigitsOnDisplay
  6027 ;;		_intToString
  6028 ;;		_ChangeTrafficLight
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           
  6033                           ;psect for function ___awmod
  6034  0B9F                     ___awmod:	
  6035  0B9F                     l4061:	
  6036                           ;incstack = 0
  6037                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6038                           
  6039  0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  6040  0BA0  1303               	bcf	3,6	;RP1=0, select bank0
  6041  0BA1  01AA               	clrf	___awmod@sign
  6042  0BA2                     l4063:	
  6043  0BA2  1FA7               	btfss	___awmod@dividend+1,7
  6044  0BA3  2BA5               	goto	u3751
  6045  0BA4  2BA6               	goto	u3750
  6046  0BA5                     u3751:	
  6047  0BA5  2BAD               	goto	l4069
  6048  0BA6                     u3750:	
  6049  0BA6                     l4065:	
  6050  0BA6  09A6               	comf	___awmod@dividend,f
  6051  0BA7  09A7               	comf	___awmod@dividend+1,f
  6052  0BA8  0AA6               	incf	___awmod@dividend,f
  6053  0BA9  1903               	skipnz
  6054  0BAA  0AA7               	incf	___awmod@dividend+1,f
  6055  0BAB                     l4067:	
  6056  0BAB  01AA               	clrf	___awmod@sign
  6057  0BAC  0AAA               	incf	___awmod@sign,f
  6058  0BAD                     l4069:	
  6059  0BAD  1FA5               	btfss	___awmod@divisor+1,7
  6060  0BAE  2BB0               	goto	u3761
  6061  0BAF  2BB1               	goto	u3760
  6062  0BB0                     u3761:	
  6063  0BB0  2BB6               	goto	l4073
  6064  0BB1                     u3760:	
  6065  0BB1                     l4071:	
  6066  0BB1  09A4               	comf	___awmod@divisor,f
  6067  0BB2  09A5               	comf	___awmod@divisor+1,f
  6068  0BB3  0AA4               	incf	___awmod@divisor,f
  6069  0BB4  1903               	skipnz
  6070  0BB5  0AA5               	incf	___awmod@divisor+1,f
  6071  0BB6                     l4073:	
  6072  0BB6  0824               	movf	___awmod@divisor,w
  6073  0BB7  0425               	iorwf	___awmod@divisor+1,w
  6074  0BB8  1903               	btfsc	3,2
  6075  0BB9  2BBB               	goto	u3771
  6076  0BBA  2BBC               	goto	u3770
  6077  0BBB                     u3771:	
  6078  0BBB  2BEB               	goto	l4091
  6079  0BBC                     u3770:	
  6080  0BBC                     l4075:	
  6081  0BBC  01A9               	clrf	___awmod@counter
  6082  0BBD  0AA9               	incf	___awmod@counter,f
  6083  0BBE  2BCA               	goto	l4081
  6084  0BBF                     l4077:	
  6085  0BBF  3001               	movlw	1
  6086  0BC0                     u3785:	
  6087  0BC0  1003               	clrc
  6088  0BC1  0DA4               	rlf	___awmod@divisor,f
  6089  0BC2  0DA5               	rlf	___awmod@divisor+1,f
  6090  0BC3  3EFF               	addlw	-1
  6091  0BC4  1D03               	skipz
  6092  0BC5  2BC0               	goto	u3785
  6093  0BC6                     l4079:	
  6094  0BC6  3001               	movlw	1
  6095  0BC7  00A8               	movwf	??___awmod
  6096  0BC8  0828               	movf	??___awmod,w
  6097  0BC9  07A9               	addwf	___awmod@counter,f
  6098  0BCA                     l4081:	
  6099  0BCA  1FA5               	btfss	___awmod@divisor+1,7
  6100  0BCB  2BCD               	goto	u3791
  6101  0BCC  2BCE               	goto	u3790
  6102  0BCD                     u3791:	
  6103  0BCD  2BBF               	goto	l4077
  6104  0BCE                     u3790:	
  6105  0BCE                     l4083:	
  6106  0BCE  0825               	movf	___awmod@divisor+1,w
  6107  0BCF  0227               	subwf	___awmod@dividend+1,w
  6108  0BD0  1D03               	skipz
  6109  0BD1  2BD4               	goto	u3805
  6110  0BD2  0824               	movf	___awmod@divisor,w
  6111  0BD3  0226               	subwf	___awmod@dividend,w
  6112  0BD4                     u3805:	
  6113  0BD4  1C03               	skipc
  6114  0BD5  2BD7               	goto	u3801
  6115  0BD6  2BD8               	goto	u3800
  6116  0BD7                     u3801:	
  6117  0BD7  2BDE               	goto	l4087
  6118  0BD8                     u3800:	
  6119  0BD8                     l4085:	
  6120  0BD8  0824               	movf	___awmod@divisor,w
  6121  0BD9  02A6               	subwf	___awmod@dividend,f
  6122  0BDA  0825               	movf	___awmod@divisor+1,w
  6123  0BDB  1C03               	skipc
  6124  0BDC  03A7               	decf	___awmod@dividend+1,f
  6125  0BDD  02A7               	subwf	___awmod@dividend+1,f
  6126  0BDE                     l4087:	
  6127  0BDE  3001               	movlw	1
  6128  0BDF                     u3815:	
  6129  0BDF  1003               	clrc
  6130  0BE0  0CA5               	rrf	___awmod@divisor+1,f
  6131  0BE1  0CA4               	rrf	___awmod@divisor,f
  6132  0BE2  3EFF               	addlw	-1
  6133  0BE3  1D03               	skipz
  6134  0BE4  2BDF               	goto	u3815
  6135  0BE5                     l4089:	
  6136  0BE5  3001               	movlw	1
  6137  0BE6  02A9               	subwf	___awmod@counter,f
  6138  0BE7  1D03               	btfss	3,2
  6139  0BE8  2BEA               	goto	u3821
  6140  0BE9  2BEB               	goto	u3820
  6141  0BEA                     u3821:	
  6142  0BEA  2BCE               	goto	l4083
  6143  0BEB                     u3820:	
  6144  0BEB                     l4091:	
  6145  0BEB  082A               	movf	___awmod@sign,w
  6146  0BEC  1903               	btfsc	3,2
  6147  0BED  2BEF               	goto	u3831
  6148  0BEE  2BF0               	goto	u3830
  6149  0BEF                     u3831:	
  6150  0BEF  2BF5               	goto	l4095
  6151  0BF0                     u3830:	
  6152  0BF0                     l4093:	
  6153  0BF0  09A6               	comf	___awmod@dividend,f
  6154  0BF1  09A7               	comf	___awmod@dividend+1,f
  6155  0BF2  0AA6               	incf	___awmod@dividend,f
  6156  0BF3  1903               	skipnz
  6157  0BF4  0AA7               	incf	___awmod@dividend+1,f
  6158  0BF5                     l4095:	
  6159  0BF5  0827               	movf	___awmod@dividend+1,w
  6160  0BF6  00A5               	movwf	?___awmod+1
  6161  0BF7  0826               	movf	___awmod@dividend,w
  6162  0BF8  00A4               	movwf	?___awmod
  6163  0BF9                     l611:	
  6164  0BF9  0008               	return
  6165  0BFA                     __end_of___awmod:	
  6166                           
  6167                           	psect	text21
  6168  0C5F                     __ptext21:	
  6169 ;; *************** function ___awdiv *****************
  6170 ;; Defined at:
  6171 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  divisor         2   11[BANK0 ] int 
  6174 ;;  dividend        2   13[BANK0 ] int 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  quotient        2   18[BANK0 ] int 
  6177 ;;  sign            1   17[BANK0 ] unsigned char 
  6178 ;;  counter         1   16[BANK0 ] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  2   11[BANK0 ] int 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2, status,0
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6188 ;;      Params:         0       4       0       0       0
  6189 ;;      Locals:         0       4       0       0       0
  6190 ;;      Temps:          0       1       0       0       0
  6191 ;;      Totals:         0       9       0       0       0
  6192 ;;Total ram usage:        9 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    3
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_map
  6199 ;;		_GetDigits
  6200 ;;		_intToString
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           
  6205                           ;psect for function ___awdiv
  6206  0C5F                     ___awdiv:	
  6207  0C5F                     l4017:	
  6208                           ;incstack = 0
  6209                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6210                           
  6211  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0C61  01B1               	clrf	___awdiv@sign
  6214  0C62                     l4019:	
  6215  0C62  1FAC               	btfss	___awdiv@divisor+1,7
  6216  0C63  2C65               	goto	u3651
  6217  0C64  2C66               	goto	u3650
  6218  0C65                     u3651:	
  6219  0C65  2C6D               	goto	l4025
  6220  0C66                     u3650:	
  6221  0C66                     l4021:	
  6222  0C66  09AB               	comf	___awdiv@divisor,f
  6223  0C67  09AC               	comf	___awdiv@divisor+1,f
  6224  0C68  0AAB               	incf	___awdiv@divisor,f
  6225  0C69  1903               	skipnz
  6226  0C6A  0AAC               	incf	___awdiv@divisor+1,f
  6227  0C6B                     l4023:	
  6228  0C6B  01B1               	clrf	___awdiv@sign
  6229  0C6C  0AB1               	incf	___awdiv@sign,f
  6230  0C6D                     l4025:	
  6231  0C6D  1FAE               	btfss	___awdiv@dividend+1,7
  6232  0C6E  2C70               	goto	u3661
  6233  0C6F  2C71               	goto	u3660
  6234  0C70                     u3661:	
  6235  0C70  2C7A               	goto	l4031
  6236  0C71                     u3660:	
  6237  0C71                     l4027:	
  6238  0C71  09AD               	comf	___awdiv@dividend,f
  6239  0C72  09AE               	comf	___awdiv@dividend+1,f
  6240  0C73  0AAD               	incf	___awdiv@dividend,f
  6241  0C74  1903               	skipnz
  6242  0C75  0AAE               	incf	___awdiv@dividend+1,f
  6243  0C76                     l4029:	
  6244  0C76  3001               	movlw	1
  6245  0C77  00AF               	movwf	??___awdiv
  6246  0C78  082F               	movf	??___awdiv,w
  6247  0C79  06B1               	xorwf	___awdiv@sign,f
  6248  0C7A                     l4031:	
  6249  0C7A  01B2               	clrf	___awdiv@quotient
  6250  0C7B  01B3               	clrf	___awdiv@quotient+1
  6251  0C7C                     l4033:	
  6252  0C7C  082B               	movf	___awdiv@divisor,w
  6253  0C7D  042C               	iorwf	___awdiv@divisor+1,w
  6254  0C7E  1903               	btfsc	3,2
  6255  0C7F  2C81               	goto	u3671
  6256  0C80  2C82               	goto	u3670
  6257  0C81                     u3671:	
  6258  0C81  2CB9               	goto	l4053
  6259  0C82                     u3670:	
  6260  0C82                     l4035:	
  6261  0C82  01B0               	clrf	___awdiv@counter
  6262  0C83  0AB0               	incf	___awdiv@counter,f
  6263  0C84  2C90               	goto	l4041
  6264  0C85                     l4037:	
  6265  0C85  3001               	movlw	1
  6266  0C86                     u3685:	
  6267  0C86  1003               	clrc
  6268  0C87  0DAB               	rlf	___awdiv@divisor,f
  6269  0C88  0DAC               	rlf	___awdiv@divisor+1,f
  6270  0C89  3EFF               	addlw	-1
  6271  0C8A  1D03               	skipz
  6272  0C8B  2C86               	goto	u3685
  6273  0C8C                     l4039:	
  6274  0C8C  3001               	movlw	1
  6275  0C8D  00AF               	movwf	??___awdiv
  6276  0C8E  082F               	movf	??___awdiv,w
  6277  0C8F  07B0               	addwf	___awdiv@counter,f
  6278  0C90                     l4041:	
  6279  0C90  1FAC               	btfss	___awdiv@divisor+1,7
  6280  0C91  2C93               	goto	u3691
  6281  0C92  2C94               	goto	u3690
  6282  0C93                     u3691:	
  6283  0C93  2C85               	goto	l4037
  6284  0C94                     u3690:	
  6285  0C94                     l4043:	
  6286  0C94  3001               	movlw	1
  6287  0C95                     u3705:	
  6288  0C95  1003               	clrc
  6289  0C96  0DB2               	rlf	___awdiv@quotient,f
  6290  0C97  0DB3               	rlf	___awdiv@quotient+1,f
  6291  0C98  3EFF               	addlw	-1
  6292  0C99  1D03               	skipz
  6293  0C9A  2C95               	goto	u3705
  6294  0C9B  082C               	movf	___awdiv@divisor+1,w
  6295  0C9C  022E               	subwf	___awdiv@dividend+1,w
  6296  0C9D  1D03               	skipz
  6297  0C9E  2CA1               	goto	u3715
  6298  0C9F  082B               	movf	___awdiv@divisor,w
  6299  0CA0  022D               	subwf	___awdiv@dividend,w
  6300  0CA1                     u3715:	
  6301  0CA1  1C03               	skipc
  6302  0CA2  2CA4               	goto	u3711
  6303  0CA3  2CA5               	goto	u3710
  6304  0CA4                     u3711:	
  6305  0CA4  2CAC               	goto	l4049
  6306  0CA5                     u3710:	
  6307  0CA5                     l4045:	
  6308  0CA5  082B               	movf	___awdiv@divisor,w
  6309  0CA6  02AD               	subwf	___awdiv@dividend,f
  6310  0CA7  082C               	movf	___awdiv@divisor+1,w
  6311  0CA8  1C03               	skipc
  6312  0CA9  03AE               	decf	___awdiv@dividend+1,f
  6313  0CAA  02AE               	subwf	___awdiv@dividend+1,f
  6314  0CAB                     l4047:	
  6315  0CAB  1432               	bsf	___awdiv@quotient,0
  6316  0CAC                     l4049:	
  6317  0CAC  3001               	movlw	1
  6318  0CAD                     u3725:	
  6319  0CAD  1003               	clrc
  6320  0CAE  0CAC               	rrf	___awdiv@divisor+1,f
  6321  0CAF  0CAB               	rrf	___awdiv@divisor,f
  6322  0CB0  3EFF               	addlw	-1
  6323  0CB1  1D03               	skipz
  6324  0CB2  2CAD               	goto	u3725
  6325  0CB3                     l4051:	
  6326  0CB3  3001               	movlw	1
  6327  0CB4  02B0               	subwf	___awdiv@counter,f
  6328  0CB5  1D03               	btfss	3,2
  6329  0CB6  2CB8               	goto	u3731
  6330  0CB7  2CB9               	goto	u3730
  6331  0CB8                     u3731:	
  6332  0CB8  2C94               	goto	l4043
  6333  0CB9                     u3730:	
  6334  0CB9                     l4053:	
  6335  0CB9  0831               	movf	___awdiv@sign,w
  6336  0CBA  1903               	btfsc	3,2
  6337  0CBB  2CBD               	goto	u3741
  6338  0CBC  2CBE               	goto	u3740
  6339  0CBD                     u3741:	
  6340  0CBD  2CC3               	goto	l4057
  6341  0CBE                     u3740:	
  6342  0CBE                     l4055:	
  6343  0CBE  09B2               	comf	___awdiv@quotient,f
  6344  0CBF  09B3               	comf	___awdiv@quotient+1,f
  6345  0CC0  0AB2               	incf	___awdiv@quotient,f
  6346  0CC1  1903               	skipnz
  6347  0CC2  0AB3               	incf	___awdiv@quotient+1,f
  6348  0CC3                     l4057:	
  6349  0CC3  0833               	movf	___awdiv@quotient+1,w
  6350  0CC4  00AC               	movwf	?___awdiv+1
  6351  0CC5  0832               	movf	___awdiv@quotient,w
  6352  0CC6  00AB               	movwf	?___awdiv
  6353  0CC7                     l598:	
  6354  0CC7  0008               	return
  6355  0CC8                     __end_of___awdiv:	
  6356                           
  6357                           	psect	text22
  6358  0944                     __ptext22:	
  6359 ;; *************** function _ADC_Read *****************
  6360 ;; Defined at:
  6361 ;;		line 332 in file "main.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  canale          1    wreg     unsigned char 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  canale          1    7[BANK0 ] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  2    4[BANK0 ] int 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6375 ;;      Params:         0       2       0       0       0
  6376 ;;      Locals:         0       1       0       0       0
  6377 ;;      Temps:          0       1       0       0       0
  6378 ;;      Totals:         0       4       0       0       0
  6379 ;;Total ram usage:        4 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    3
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           
  6390                           ;psect for function _ADC_Read
  6391  0944                     _ADC_Read:	
  6392                           
  6393                           ;incstack = 0
  6394                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  6395                           ;ADC_Read@canale stored from wreg
  6396  0944  1283               	bcf	3,5	;RP0=0, select bank0
  6397  0945  1303               	bcf	3,6	;RP1=0, select bank0
  6398  0946  00A7               	movwf	ADC_Read@canale
  6399  0947                     l4283:	
  6400                           
  6401                           ;main.c: 332: int ADC_Read(char canale);main.c: 333: {;main.c: 334:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  6402  0947  0827               	movf	ADC_Read@canale,w
  6403  0948  00A6               	movwf	??_ADC_Read
  6404  0949  3002               	movlw	2
  6405  094A                     u4045:	
  6406  094A  1003               	clrc
  6407  094B  0DA6               	rlf	??_ADC_Read,f
  6408  094C  3EFF               	addlw	-1
  6409  094D  1D03               	skipz
  6410  094E  294A               	goto	u4045
  6411  094F  1003               	clrc
  6412  0950  0D26               	rlf	??_ADC_Read,w
  6413  0951  3801               	iorlw	1
  6414  0952  009F               	movwf	31	;volatile
  6415  0953                     l4285:	
  6416                           
  6417                           ;main.c: 335:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  6418  0953  3004               	movlw	4
  6419  0954  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0955  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0956  00A6               	movwf	??_ADC_Read
  6422  0957                     u4357:	
  6423  0957  0BA6               	decfsz	??_ADC_Read,f
  6424  0958  2957               	goto	u4357
  6425  0959  0000               	nop
  6426  095A                     l4287:	
  6427                           
  6428                           ;main.c: 336:     GO_nDONE = 1;
  6429  095A  1283               	bcf	3,5	;RP0=0, select bank0
  6430  095B  1303               	bcf	3,6	;RP1=0, select bank0
  6431  095C  151F               	bsf	31,2	;volatile
  6432  095D                     l280:	
  6433                           ;main.c: 338:         ;
  6434                           
  6435                           
  6436                           ;main.c: 337:     while (GO_nDONE)
  6437  095D  191F               	btfsc	31,2	;volatile
  6438  095E  2960               	goto	u4051
  6439  095F  2961               	goto	u4050
  6440  0960                     u4051:	
  6441  0960  295D               	goto	l280
  6442  0961                     u4050:	
  6443  0961                     l4289:	
  6444                           
  6445                           ;main.c: 339:     return ADRESL + (ADRESH << 8);
  6446  0961  081E               	movf	30,w	;volatile
  6447  0962  00A5               	movwf	?_ADC_Read+1
  6448  0963  1683               	bsf	3,5	;RP0=1, select bank1
  6449  0964  1303               	bcf	3,6	;RP1=0, select bank1
  6450  0965  081E               	movf	30,w	;volatile
  6451  0966  1283               	bcf	3,5	;RP0=0, select bank0
  6452  0967  1303               	bcf	3,6	;RP1=0, select bank0
  6453  0968  00A4               	movwf	?_ADC_Read
  6454  0969                     l283:	
  6455  0969  0008               	return
  6456  096A                     __end_of_ADC_Read:	
  6457                           
  6458                           	psect	text23
  6459  0B47                     __ptext23:	
  6460 ;; *************** function _ISR *****************
  6461 ;; Defined at:
  6462 ;;		line 490 in file "main.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;		None
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      void 
  6469 ;; Registers used:
  6470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6476 ;;      Params:         0       0       0       0       0
  6477 ;;      Locals:         0       0       0       0       0
  6478 ;;      Temps:          0       4       0       0       0
  6479 ;;      Totals:         0       4       0       0       0
  6480 ;;Total ram usage:        4 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:    2
  6483 ;; This function calls:
  6484 ;;		_UART_Read
  6485 ;;		_conteggioVeicoli
  6486 ;; This function is called by:
  6487 ;;		Interrupt level 1
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           
  6492                           ;psect for function _ISR
  6493  0B47                     _ISR:	
  6494  0B47                     i1l2707:	
  6495                           
  6496                           ;main.c: 493:     if (RCIF && readGateway.Bit == 0)
  6497  0B47  1E8C               	btfss	12,5	;volatile
  6498  0B48  2B4A               	goto	u225_21
  6499  0B49  2B4B               	goto	u225_20
  6500  0B4A                     u225_21:	
  6501  0B4A  2B54               	goto	i1l2715
  6502  0B4B                     u225_20:	
  6503  0B4B                     i1l2709:	
  6504  0B4B  1853               	btfsc	_readGateway,0
  6505  0B4C  2B4E               	goto	u226_21
  6506  0B4D  2B4F               	goto	u226_20
  6507  0B4E                     u226_21:	
  6508  0B4E  2B54               	goto	i1l2715
  6509  0B4F                     u226_20:	
  6510  0B4F                     i1l2711:	
  6511                           
  6512                           ;main.c: 494:     {;main.c: 495:         readGateway.Bit = 1;
  6513  0B4F  1453               	bsf	_readGateway,0
  6514                           
  6515                           ;main.c: 496:         readGatewayDone.Bit = 0;
  6516  0B50  1054               	bcf	_readGatewayDone,0
  6517                           
  6518                           ;main.c: 497:         readGatewayDone.Timeout = 0;
  6519  0B51  10D4               	bcf	_readGatewayDone,1
  6520  0B52                     i1l2713:	
  6521                           
  6522                           ;main.c: 498:         dataFromGatewayIndex = 0;
  6523  0B52  01CE               	clrf	_dataFromGatewayIndex
  6524                           
  6525                           ;main.c: 499:         timerReadFromGateway = 0;
  6526  0B53  01CD               	clrf	_timerReadFromGateway
  6527  0B54                     i1l2715:	
  6528                           
  6529                           ;main.c: 501:     if (RCIF && readGateway.Bit == 1)
  6530  0B54  1E8C               	btfss	12,5	;volatile
  6531  0B55  2B57               	goto	u227_21
  6532  0B56  2B58               	goto	u227_20
  6533  0B57                     u227_21:	
  6534  0B57  2B6F               	goto	i1l2725
  6535  0B58                     u227_20:	
  6536  0B58                     i1l2717:	
  6537  0B58  1C53               	btfss	_readGateway,0
  6538  0B59  2B5B               	goto	u228_21
  6539  0B5A  2B5C               	goto	u228_20
  6540  0B5B                     u228_21:	
  6541  0B5B  2B6F               	goto	i1l2725
  6542  0B5C                     u228_20:	
  6543  0B5C                     i1l2719:	
  6544                           
  6545                           ;main.c: 502:     {;main.c: 503:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  6546  0B5C  120A  158A  20E9  120A  158A  	fcall	_UART_Read
  6547  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6548  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6549  0B63  00A0               	movwf	??_ISR
  6550  0B64  084E               	movf	_dataFromGatewayIndex,w
  6551  0B65  3EAC               	addlw	(low (_dataFromGateway| 0))& (0+255)
  6552  0B66  0084               	movwf	4
  6553  0B67  0820               	movf	??_ISR,w
  6554  0B68  1383               	bcf	3,7	;select IRP bank1
  6555  0B69  0080               	movwf	0
  6556  0B6A                     i1l2721:	
  6557                           
  6558                           ;main.c: 504:         dataFromGatewayIndex++;
  6559  0B6A  3001               	movlw	1
  6560  0B6B  00A0               	movwf	??_ISR
  6561  0B6C  0820               	movf	??_ISR,w
  6562  0B6D  07CE               	addwf	_dataFromGatewayIndex,f
  6563  0B6E                     i1l2723:	
  6564                           
  6565                           ;main.c: 505:         timerReadFromGateway = 0;
  6566  0B6E  01CD               	clrf	_timerReadFromGateway
  6567  0B6F                     i1l2725:	
  6568                           
  6569                           ;main.c: 510:     if (TMR0IF)
  6570  0B6F  1D0B               	btfss	11,2	;volatile
  6571  0B70  2B72               	goto	u229_21
  6572  0B71  2B73               	goto	u229_20
  6573  0B72                     u229_21:	
  6574  0B72  2B7D               	goto	i1l2733
  6575  0B73                     u229_20:	
  6576  0B73                     i1l2727:	
  6577                           
  6578                           ;main.c: 511:     {;main.c: 512:         TMR0IF = 0;
  6579  0B73  110B               	bcf	11,2	;volatile
  6580  0B74                     i1l2729:	
  6581                           
  6582                           ;main.c: 513:         conteggioVeicoli();
  6583  0B74  120A  158A  23FA  120A  158A  	fcall	_conteggioVeicoli
  6584  0B79                     i1l2731:	
  6585                           
  6586                           ;main.c: 514:         TMR0 = 6;
  6587  0B79  3006               	movlw	6
  6588  0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  6589  0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  6590  0B7C  0081               	movwf	1	;volatile
  6591  0B7D                     i1l2733:	
  6592                           
  6593                           ;main.c: 517:     if (TMR1IF)
  6594  0B7D  1C0C               	btfss	12,0	;volatile
  6595  0B7E  2B80               	goto	u230_21
  6596  0B7F  2B81               	goto	u230_20
  6597  0B80                     u230_21:	
  6598  0B80  2B96               	goto	i1l359
  6599  0B81                     u230_20:	
  6600  0B81                     i1l2735:	
  6601                           
  6602                           ;main.c: 518:     {;main.c: 519:         TMR1IF = 0;
  6603  0B81  100C               	bcf	12,0	;volatile
  6604  0B82                     i1l2737:	
  6605                           
  6606                           ;main.c: 520:         count_lux++;
  6607  0B82  3001               	movlw	1
  6608  0B83  00A0               	movwf	??_ISR
  6609  0B84  0820               	movf	??_ISR,w
  6610  0B85  07CF               	addwf	_count_lux,f
  6611  0B86                     i1l2739:	
  6612                           
  6613                           ;main.c: 522:         if (count_lux >= 20)
  6614  0B86  3014               	movlw	20
  6615  0B87  024F               	subwf	_count_lux,w
  6616  0B88  1C03               	skipc
  6617  0B89  2B8B               	goto	u231_21
  6618  0B8A  2B8C               	goto	u231_20
  6619  0B8B                     u231_21:	
  6620  0B8B  2B92               	goto	i1l2747
  6621  0B8C                     u231_20:	
  6622  0B8C                     i1l2741:	
  6623                           
  6624                           ;main.c: 523:         {;main.c: 524:             secondPassed.Bit = 1;
  6625  0B8C  1452               	bsf	_secondPassed,0
  6626  0B8D                     i1l2743:	
  6627                           
  6628                           ;main.c: 525:             count_lux = 0;
  6629  0B8D  01CF               	clrf	_count_lux
  6630  0B8E                     i1l2745:	
  6631                           
  6632                           ;main.c: 526:             timerReadFromGateway++;
  6633  0B8E  3001               	movlw	1
  6634  0B8F  00A0               	movwf	??_ISR
  6635  0B90  0820               	movf	??_ISR,w
  6636  0B91  07CD               	addwf	_timerReadFromGateway,f
  6637  0B92                     i1l2747:	
  6638                           
  6639                           ;main.c: 529:         TMR1H = 60;
  6640  0B92  303C               	movlw	60
  6641  0B93  008F               	movwf	15	;volatile
  6642  0B94                     i1l2749:	
  6643                           
  6644                           ;main.c: 530:         TMR1L = 176;
  6645  0B94  30B0               	movlw	176
  6646  0B95  008E               	movwf	14	;volatile
  6647  0B96                     i1l359:	
  6648  0B96  0823               	movf	??_ISR+3,w
  6649  0B97  008A               	movwf	10
  6650  0B98  0822               	movf	??_ISR+2,w
  6651  0B99  0084               	movwf	4
  6652  0B9A  0E21               	swapf	(??_ISR+1)^0,w
  6653  0B9B  0083               	movwf	3
  6654  0B9C  0EFE               	swapf	btemp,f
  6655  0B9D  0E7E               	swapf	btemp,w
  6656  0B9E  0009               	retfie
  6657  0B9F                     __end_of_ISR:	
  6658                           
  6659                           	psect	intentry
  6660  0004                     __pintentry:	
  6661                           ;incstack = 0
  6662                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6663                           
  6664  0004                     interrupt_function:	
  6665  007E                     saved_w	set	btemp
  6666  0004  00FE               	movwf	btemp
  6667  0005  0E03               	swapf	3,w
  6668  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6669  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6670  0008  00A1               	movwf	??_ISR+1
  6671  0009  0804               	movf	4,w
  6672  000A  00A2               	movwf	??_ISR+2
  6673  000B  080A               	movf	10,w
  6674  000C  00A3               	movwf	??_ISR+3
  6675  000D  120A  158A  2B47   	ljmp	_ISR
  6676                           
  6677                           	psect	text24
  6678  0BFA                     __ptext24:	
  6679 ;; *************** function _conteggioVeicoli *****************
  6680 ;; Defined at:
  6681 ;;		line 398 in file "main.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  i               1   13[COMMON] unsigned char 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6695 ;;      Params:         0       0       0       0       0
  6696 ;;      Locals:         1       0       0       0       0
  6697 ;;      Temps:          4       0       0       0       0
  6698 ;;      Totals:         5       0       0       0       0
  6699 ;;Total ram usage:        5 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    1
  6702 ;; This function calls:
  6703 ;;		_Conteggio
  6704 ;; This function is called by:
  6705 ;;		_ISR
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           
  6710                           ;psect for function _conteggioVeicoli
  6711  0BFA                     _conteggioVeicoli:	
  6712  0BFA                     i1l2473:	
  6713                           ;incstack = 0
  6714                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6715                           
  6716                           
  6717                           ;main.c: 400:     RoadsSensors[0] = PORTBbits.RB3;
  6718  0BFA  3000               	movlw	0
  6719  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  6720  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  6721  0BFD  1986               	btfsc	6,3	;volatile
  6722  0BFE  3001               	movlw	1
  6723  0BFF  1683               	bsf	3,5	;RP0=1, select bank1
  6724  0C00  1303               	bcf	3,6	;RP1=0, select bank1
  6725  0C01  00A8               	movwf	_RoadsSensors^(0+128)
  6726                           
  6727                           ;main.c: 401:     RoadsSensors[1] = PORTBbits.RB4;
  6728  0C02  3000               	movlw	0
  6729  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  6730  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  6731  0C05  1A06               	btfsc	6,4	;volatile
  6732  0C06  3001               	movlw	1
  6733  0C07  1683               	bsf	3,5	;RP0=1, select bank1
  6734  0C08  1303               	bcf	3,6	;RP1=0, select bank1
  6735  0C09  00A9               	movwf	(_RoadsSensors^(0+128)+1)
  6736                           
  6737                           ;main.c: 402:     RoadsSensors[2] = PORTBbits.RB5;
  6738  0C0A  3000               	movlw	0
  6739  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  6740  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  6741  0C0D  1A86               	btfsc	6,5	;volatile
  6742  0C0E  3001               	movlw	1
  6743  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  6744  0C10  1303               	bcf	3,6	;RP1=0, select bank1
  6745  0C11  00AA               	movwf	(_RoadsSensors^(0+128)+2)
  6746                           
  6747                           ;main.c: 403:     RoadsSensors[3] = PORTAbits.RA5;
  6748  0C12  3000               	movlw	0
  6749  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  6750  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  6751  0C15  1A85               	btfsc	5,5	;volatile
  6752  0C16  3001               	movlw	1
  6753  0C17  1683               	bsf	3,5	;RP0=1, select bank1
  6754  0C18  1303               	bcf	3,6	;RP1=0, select bank1
  6755  0C19  00AB               	movwf	(_RoadsSensors^(0+128)+3)
  6756  0C1A                     i1l2475:	
  6757                           
  6758                           ;main.c: 405:     for (unsigned char i = 0; i < 4; i++)
  6759  0C1A  01FD               	clrf	conteggioVeicoli@i
  6760  0C1B                     i1l2479:	
  6761                           
  6762                           ;main.c: 406:     {;main.c: 407:         if (!RoadsSensors[i])
  6763  0C1B  087D               	movf	conteggioVeicoli@i,w
  6764  0C1C  3EA8               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6765  0C1D  0084               	movwf	4
  6766  0C1E  1383               	bcf	3,7	;select IRP bank1
  6767  0C1F  0800               	movf	0,w
  6768  0C20  1D03               	btfss	3,2
  6769  0C21  2C23               	goto	u197_21
  6770  0C22  2C24               	goto	u197_20
  6771  0C23                     u197_21:	
  6772  0C23  2C2D               	goto	i1l2483
  6773  0C24                     u197_20:	
  6774  0C24                     i1l2481:	
  6775                           
  6776                           ;main.c: 408:         {;main.c: 409:             count++;
  6777  0C24  3001               	movlw	1
  6778  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  6779  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  6780  0C27  07C8               	addwf	_count,f
  6781  0C28  1803               	skipnc
  6782  0C29  0AC9               	incf	_count+1,f
  6783  0C2A  3000               	movlw	0
  6784  0C2B  07C9               	addwf	_count+1,f
  6785                           
  6786                           ;main.c: 410:         }
  6787  0C2C  2C54               	goto	i1l2489
  6788  0C2D                     i1l2483:	
  6789  0C2D  087D               	movf	conteggioVeicoli@i,w
  6790  0C2E  3EA8               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6791  0C2F  0084               	movwf	4
  6792  0C30  0800               	movf	0,w
  6793  0C31  1903               	btfsc	3,2
  6794  0C32  2C34               	goto	u198_21
  6795  0C33  2C35               	goto	u198_20
  6796  0C34                     u198_21:	
  6797  0C34  2C54               	goto	i1l2489
  6798  0C35                     u198_20:	
  6799  0C35                     i1l2485:	
  6800                           
  6801                           ;main.c: 412:         {;main.c: 413:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  6802  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  6803  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  6804  0C37  0849               	movf	_count+1,w
  6805  0C38  00F1               	movwf	Conteggio@_count+1
  6806  0C39  0848               	movf	_count,w
  6807  0C3A  00F0               	movwf	Conteggio@_count
  6808  0C3B  3059               	movlw	(low (_motorcycle| 0))& (0+255)
  6809  0C3C  00F9               	movwf	??_conteggioVeicoli
  6810  0C3D  0879               	movf	??_conteggioVeicoli,w
  6811  0C3E  00F2               	movwf	Conteggio@_motorcycle
  6812  0C3F  3055               	movlw	(low (_car| 0))& (0+255)
  6813  0C40  00FA               	movwf	??_conteggioVeicoli+1
  6814  0C41  087A               	movf	??_conteggioVeicoli+1,w
  6815  0C42  00F3               	movwf	Conteggio@_car
  6816  0C43  30E5               	movlw	(low (_truck| 0))& (0+255)
  6817  0C44  00FB               	movwf	??_conteggioVeicoli+2
  6818  0C45  087B               	movf	??_conteggioVeicoli+2,w
  6819  0C46  00F4               	movwf	Conteggio@_truck
  6820  0C47  087D               	movf	conteggioVeicoli@i,w
  6821  0C48  00FC               	movwf	??_conteggioVeicoli+3
  6822  0C49  087C               	movf	??_conteggioVeicoli+3,w
  6823  0C4A  00F5               	movwf	Conteggio@index
  6824  0C4B  120A  158A  22A8  120A  158A  	fcall	_Conteggio
  6825  0C50                     i1l2487:	
  6826                           
  6827                           ;main.c: 414:             count = 0;
  6828  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  6829  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  6830  0C52  01C8               	clrf	_count
  6831  0C53  01C9               	clrf	_count+1
  6832  0C54                     i1l2489:	
  6833                           
  6834                           ;main.c: 416:     }
  6835  0C54  3001               	movlw	1
  6836  0C55  00F9               	movwf	??_conteggioVeicoli
  6837  0C56  0879               	movf	??_conteggioVeicoli,w
  6838  0C57  07FD               	addwf	conteggioVeicoli@i,f
  6839  0C58                     i1l2491:	
  6840  0C58  3004               	movlw	4
  6841  0C59  027D               	subwf	conteggioVeicoli@i,w
  6842  0C5A  1C03               	skipc
  6843  0C5B  2C5D               	goto	u199_21
  6844  0C5C  2C5E               	goto	u199_20
  6845  0C5D                     u199_21:	
  6846  0C5D  2C1B               	goto	i1l2479
  6847  0C5E                     u199_20:	
  6848  0C5E                     i1l320:	
  6849  0C5E  0008               	return
  6850  0C5F                     __end_of_conteggioVeicoli:	
  6851                           
  6852                           	psect	text25
  6853  0AA8                     __ptext25:	
  6854 ;; *************** function _Conteggio *****************
  6855 ;; Defined at:
  6856 ;;		line 99 in file "./CustomLib/TrafficLight.h"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  _count          2    0[COMMON] unsigned int 
  6859 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  6860 ;;		 -> motorcycle(4), 
  6861 ;;  _car            1    3[COMMON] PTR unsigned char 
  6862 ;;		 -> car(4), 
  6863 ;;  _truck          1    4[COMMON] PTR unsigned char 
  6864 ;;		 -> truck(4), 
  6865 ;;  index           1    5[COMMON] unsigned char 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1    wreg      void 
  6870 ;; Registers used:
  6871 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6877 ;;      Params:         6       0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0
  6879 ;;      Temps:          3       0       0       0       0
  6880 ;;      Totals:         9       0       0       0       0
  6881 ;;Total ram usage:        9 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_conteggioVeicoli
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           
  6891                           ;psect for function _Conteggio
  6892  0AA8                     _Conteggio:	
  6893  0AA8                     i1l2047:	
  6894                           ;incstack = 0
  6895                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  6896                           
  6897                           
  6898                           ;./CustomLib/TrafficLight.h: 99: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 100: {;./CustomLib/TrafficLight.h: 101:     if (_count >= 500)
  6899  0AA8  3001               	movlw	1
  6900  0AA9  0271               	subwf	Conteggio@_count+1,w
  6901  0AAA  30F4               	movlw	244
  6902  0AAB  1903               	skipnz
  6903  0AAC  0270               	subwf	Conteggio@_count,w
  6904  0AAD  1C03               	skipc
  6905  0AAE  2AB0               	goto	u132_21
  6906  0AAF  2AB1               	goto	u132_20
  6907  0AB0                     u132_21:	
  6908  0AB0  2AC1               	goto	i1l2051
  6909  0AB1                     u132_20:	
  6910  0AB1                     i1l2049:	
  6911                           
  6912                           ;./CustomLib/TrafficLight.h: 102:     {;./CustomLib/TrafficLight.h: 103:         _motorc
      +                          ycle[index] = _motorcycle[index] + 1;
  6913  0AB1  0875               	movf	Conteggio@index,w
  6914  0AB2  0772               	addwf	Conteggio@_motorcycle,w
  6915  0AB3  00F6               	movwf	??_Conteggio
  6916  0AB4  0876               	movf	??_Conteggio,w
  6917  0AB5  0084               	movwf	4
  6918  0AB6  1383               	bcf	3,7	;select IRP bank0
  6919  0AB7  0800               	movf	0,w
  6920  0AB8  3E01               	addlw	1
  6921  0AB9  00F7               	movwf	??_Conteggio+1
  6922  0ABA  0875               	movf	Conteggio@index,w
  6923  0ABB  0772               	addwf	Conteggio@_motorcycle,w
  6924  0ABC  00F8               	movwf	??_Conteggio+2
  6925  0ABD  0878               	movf	??_Conteggio+2,w
  6926  0ABE  0084               	movwf	4
  6927  0ABF  0877               	movf	??_Conteggio+1,w
  6928  0AC0  0080               	movwf	0
  6929  0AC1                     i1l2051:	
  6930                           
  6931                           ;./CustomLib/TrafficLight.h: 105:     if (_count >= 1500)
  6932  0AC1  3005               	movlw	5
  6933  0AC2  0271               	subwf	Conteggio@_count+1,w
  6934  0AC3  30DC               	movlw	220
  6935  0AC4  1903               	skipnz
  6936  0AC5  0270               	subwf	Conteggio@_count,w
  6937  0AC6  1C03               	skipc
  6938  0AC7  2AC9               	goto	u133_21
  6939  0AC8  2ACA               	goto	u133_20
  6940  0AC9                     u133_21:	
  6941  0AC9  2ADA               	goto	i1l2055
  6942  0ACA                     u133_20:	
  6943  0ACA                     i1l2053:	
  6944                           
  6945                           ;./CustomLib/TrafficLight.h: 106:     {;./CustomLib/TrafficLight.h: 107:         _car[in
      +                          dex] = _car[index] + 1;
  6946  0ACA  0875               	movf	Conteggio@index,w
  6947  0ACB  0773               	addwf	Conteggio@_car,w
  6948  0ACC  00F6               	movwf	??_Conteggio
  6949  0ACD  0876               	movf	??_Conteggio,w
  6950  0ACE  0084               	movwf	4
  6951  0ACF  1383               	bcf	3,7	;select IRP bank0
  6952  0AD0  0800               	movf	0,w
  6953  0AD1  3E01               	addlw	1
  6954  0AD2  00F7               	movwf	??_Conteggio+1
  6955  0AD3  0875               	movf	Conteggio@index,w
  6956  0AD4  0773               	addwf	Conteggio@_car,w
  6957  0AD5  00F8               	movwf	??_Conteggio+2
  6958  0AD6  0878               	movf	??_Conteggio+2,w
  6959  0AD7  0084               	movwf	4
  6960  0AD8  0877               	movf	??_Conteggio+1,w
  6961  0AD9  0080               	movwf	0
  6962  0ADA                     i1l2055:	
  6963                           
  6964                           ;./CustomLib/TrafficLight.h: 109:     if (_count >= 3000)
  6965  0ADA  300B               	movlw	11
  6966  0ADB  0271               	subwf	Conteggio@_count+1,w
  6967  0ADC  30B8               	movlw	184
  6968  0ADD  1903               	skipnz
  6969  0ADE  0270               	subwf	Conteggio@_count,w
  6970  0ADF  1C03               	skipc
  6971  0AE0  2AE2               	goto	u134_21
  6972  0AE1  2AE3               	goto	u134_20
  6973  0AE2                     u134_21:	
  6974  0AE2  2AF3               	goto	i1l178
  6975  0AE3                     u134_20:	
  6976  0AE3                     i1l2057:	
  6977                           
  6978                           ;./CustomLib/TrafficLight.h: 110:     {;./CustomLib/TrafficLight.h: 111:         _truck[
      +                          index] = _truck[index] + 1;
  6979  0AE3  0875               	movf	Conteggio@index,w
  6980  0AE4  0774               	addwf	Conteggio@_truck,w
  6981  0AE5  00F6               	movwf	??_Conteggio
  6982  0AE6  0876               	movf	??_Conteggio,w
  6983  0AE7  0084               	movwf	4
  6984  0AE8  1383               	bcf	3,7	;select IRP bank0
  6985  0AE9  0800               	movf	0,w
  6986  0AEA  3E01               	addlw	1
  6987  0AEB  00F7               	movwf	??_Conteggio+1
  6988  0AEC  0875               	movf	Conteggio@index,w
  6989  0AED  0774               	addwf	Conteggio@_truck,w
  6990  0AEE  00F8               	movwf	??_Conteggio+2
  6991  0AEF  0878               	movf	??_Conteggio+2,w
  6992  0AF0  0084               	movwf	4
  6993  0AF1  0877               	movf	??_Conteggio+1,w
  6994  0AF2  0080               	movwf	0
  6995  0AF3                     i1l178:	
  6996  0AF3  0008               	return
  6997  0AF4                     __end_of_Conteggio:	
  6998                           
  6999                           	psect	text26
  7000  08E9                     __ptext26:	
  7001 ;; *************** function _UART_Read *****************
  7002 ;; Defined at:
  7003 ;;		line 371 in file "main.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      unsigned char 
  7010 ;; Registers used:
  7011 ;;		wreg
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7017 ;;      Params:         0       0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0
  7020 ;;      Totals:         0       0       0       0       0
  7021 ;;Total ram usage:        0 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_ISR
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           
  7031                           ;psect for function _UART_Read
  7032  08E9                     _UART_Read:	
  7033  08E9                     i1l2467:	
  7034                           ;incstack = 0
  7035                           ; Regs used in _UART_Read: [wreg]
  7036                           
  7037  08E9                     i1l301:	
  7038                           ;main.c: 374:         ;
  7039                           
  7040                           
  7041                           ;main.c: 373:     while (!RCIF)
  7042  08E9  1283               	bcf	3,5	;RP0=0, select bank0
  7043  08EA  1303               	bcf	3,6	;RP1=0, select bank0
  7044  08EB  1E8C               	btfss	12,5	;volatile
  7045  08EC  28EE               	goto	u196_21
  7046  08ED  28EF               	goto	u196_20
  7047  08EE                     u196_21:	
  7048  08EE  28E9               	goto	i1l301
  7049  08EF                     u196_20:	
  7050  08EF                     i1l303:	
  7051                           
  7052                           ;main.c: 375:     RCIF = 0;
  7053  08EF  128C               	bcf	12,5	;volatile
  7054  08F0                     i1l2469:	
  7055                           
  7056                           ;main.c: 376:     return RCREG;
  7057  08F0  081A               	movf	26,w	;volatile
  7058  08F1                     i1l304:	
  7059  08F1  0008               	return
  7060  08F2                     __end_of_UART_Read:	
  7061  007E                     btemp	set	126	;btemp
  7062  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        8
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      72
    BANK1            80      0      73
    BANK3            96     13      27
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[4] size(2) Largest target is 14
		 -> s3(BANK3[14]), s2(BANK1[14]), s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 8
		 -> Semafori(BANK0[8]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 8
		 -> Semafori(BANK0[8]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 8
		 -> Semafori(BANK0[8]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    bitParita@rx	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _bitParita->_bitChange
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   27829
                                             32 BANK0      8     8      0
                                              0 BANK3     13    13      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                          _bitParita
                           _init_ADC
                       _luciSemaforo
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    5066
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      42
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1568
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    5720
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1934
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     232
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _bitParita                                           18    18      0    1519
                                              8 BANK0     18    18      0
                          _bitChange
 ---------------------------------------------------------------------------------
 (2) _bitChange                                            4     3      1     358
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         21    21      0    1071
                                              4 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     990
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     842
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  2     2      0    3000
                                             11 BANK0      2     2      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           4     1      3    1122
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    14    13      1    1986
                                             12 BANK0     14    13      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     793
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     514
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7    1834
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    4527
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1878
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1902
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      42
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _UpdateTimes
   _bitParita
     _bitChange
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D      1B       9       28.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      49       7       91.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BA      12        0.0%
ABS                  0      0      BA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jul 12 16:31:56 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                                l81 0A27                                l98 0DD1  
                    ___awdiv@sign 0031                                _s0 00D7                                _s1 00C9  
                              _s2 00BB                                _s3 0190                                fsr 0004  
             ___wmul@multiplicand 0026                    _GetDigits$1200 0039                 luciSemaforo@index 0027  
                     __CFG_LVP$ON 0000                               l102 09C1                               l110 0F7A  
                             l114 0FBE                               l115 0FCA                               l123 0EBD  
                             l132 0F36                               l117 0FFF                               l109 0F6E  
                             l312 092C                               l145 0777                               l129 0F0E  
                             l155 0AA7                               l172 0D35                               l252 0220  
                             l236 0355                               l333 0B17                               l309 09F2  
                             l510 0DE6                               l326 0AF8                               l270 0502  
                             l238 008E                               l167 065D                               l335 0B1B  
                             l280 095D                               l520 0E6E                               l336 0B1F  
                             l328 0AFC                               l329 0B00                               l337 0B46  
                             l283 0969                               l611 0BF9                               l291 07FB  
                             l292 07FE                               l349 07F3                               l277 0904  
                             l445 0978                               l286 0A61                               l471 0943  
                             l447 0990                               l289 07F7                               l598 0CC7  
                    __CFG_CPD$OFF 0000                               _ISR 0B47                               _car 0055  
                             _map 09F3                               fsr0 0004                               indf 0000  
                    ___awmod@sign 002A                      __CFG_FOSC$HS 0000                              ?_ISR 0070  
           ??_ShowDigitsOnDisplay 002B                              l4001 0E38                              l4011 0E5B  
                            l4003 0E46                              l4021 0C66                              l4013 0E66  
                            l4005 0E47                              l4031 0C7A                              l4023 0C6B  
                            l4111 0DA8                              l4103 0D39                              l4007 0E50  
                            l4041 0C90                              l4033 0C7C                              l4025 0C6D  
                            l4017 0C5F                              l4113 0DBB                              l4105 0D3A  
                            l4201 0512                              l4009 0E56                              l4121 0F41  
                            l4051 0CB3                              l4043 0C94                              l4035 0C82  
                            l4027 0C71                              l4019 0C62                              l4107 0D4F  
                            l4211 0598                              l4131 0F61                              l4115 0F3A  
                            l4045 0CA5                              l4037 0C85                              l4053 0CB9  
                            l4029 0C76                              l4061 0B9F                              l4109 0D6B  
                            l4221 05F7                              l4133 0F74                              l4301 0B23  
                            l4055 0CBE                              l4047 0CAB                              l4039 0C8C  
                            l4071 0BB1                              l4063 0BA2                              l4223 05FB  
                            l4207 0514                              l4215 05DA                              l4231 0CCB  
                            l4151 0F95                              l4135 0F76                              l4127 0F45  
                            l4057 0CC3                              l4049 0CAC                              l4081 0BCA  
                            l4073 0BB6                              l4065 0BA6                              l4225 0601  
                            l4209 0556                              l4217 05ED                              l4241 0CF0  
                            l4233 0CCC                              l4161 0FD0                              l4153 0FAB  
                            l4145 0F91                              l4137 0F80                              l4129 0F5B  
                            l4305 0B36                              l4401 0088                              l4083 0BCE  
                            l4075 0BBC                              l4091 0BEB                              l4067 0BAB  
                            l4219 05F1                              l4243 0D03                              l4331 0792  
                            l4163 0FDD                              l4155 0FB1                              l4139 0F8D  
                            l4251 08F6                              l4403 0089                              l4093 0BF0  
                            l4085 0BD8                              l4077 0BBF                              l4069 0BAD  
                            l4245 0D30                              l4237 0CD3                              l4333 0797  
                            l4341 07C6                              l4325 0778                              l4261 0A5E  
                            l4181 06AE                              l4173 0662                              l4165 0FE4  
                            l4157 0FC4                              l4253 08F9                              l4501 0381  
                            l4413 0095                              l4095 0BF5                              l4087 0BDE  
                            l4079 0BC6                              l4239 0CE2                              l4335 079C  
                            l4343 07DB                              l4327 0779                              l4263 0A5F  
                            l4191 076D                              l4183 06EF                              l4167 0661  
                            l4159 0FC6                              l4255 08FD                              l4511 0421  
                            l4503 0383                              l4415 00DE                              l4423 01B9  
                            l4407 0092                              l4089 0BE5                              l4337 07B1  
                            l4329 077E                              l4265 0A60                              l4257 0A28  
                            l4193 0771                              l4185 06F3                              l4249 08F2  
                            l4281 09EC                              l4521 0459                              l4513 0429  
                            l4505 03A0                              l4441 0209                              l4417 0127  
                            l4425 01CE                              l4283 0947                              l4195 050F  
                            l4259 0A30                              l4187 06F9                              l4179 0663  
                            l4099 09F3                              l4275 09D9                              l4267 09C5  
                            l4531 04F1                              l4523 0467                              l4515 042A  
                            l4507 040E                              l4451 0219                              l4435 01E7  
                            l4427 01D6                              l4419 0170                              l4371 0046  
                            l4285 0953                              l4189 0735                              l4293 0AF7  
                            l3901 0EE3                              l4277 09E2                              l4269 09D8  
                            l4541 050A                              l4517 042F                              l4509 0414  
                            l4525 048B                              l4533 04F6                              l4461 0313  
                            l4453 0224                              l4437 01F6                              l4429 01E3  
                            l4381 0052                              l4373 0048                              ?_map 0034  
                            l4287 095A                              l3911 0F01                              l4279 09E8  
                            l4535 04FC                              l4519 0435                              l4527 0493  
                            l4463 0316                              l4455 02E2                              l4447 020C  
                            l4439 01FC                              l4391 0081                              l4383 0054  
                            l4375 004A                              l4367 003F                              l4289 0961  
                            l4297 0B04                              l3921 0F28                              l3913 0F14  
                            l4537 0500                              l4529 0499                              l4473 032B  
                            l4457 02F1                              l4449 0211                              l4393 0084  
                            l4385 0056                              l4377 004C                              l4369 0045  
                            l3931 0A7C                              l3923 0F35                              l3915 0F21  
                            l3907 0EE7                              l4539 0506                              l4491 035D  
                            l4475 0333                              l4467 031D                              l4459 0302  
                            l4483 0340                              l4395 0085                              l4387 005B  
                            l4379 0050                              l3933 0A8D                              l3909 0EFB  
                            l3861 0E81                              l3941 07F7                              l4493 0361  
                            l4485 0359                              l4477 0336                              l4469 0322  
                            l4397 0086                              l4389 0066                              l3935 0A9B  
                            l3927 0A65                              l3855 09B2                              l3847 0994  
                            l3951 096E                              l3919 0F22                              l3863 0E8E  
                            l3943 07FC                              l4495 0363                              l4487 035A  
                            l4479 033C                              l4399 0087                              l3937 0AA3  
                            l3929 0A74                              l3945 091B                              l3849 09A3  
                            l4761 0B3E                              l3953 0972                              l3881 0EAA  
                            l3873 0E92                              l3865 0E8F                              l4489 035B  
                            l4497 0377                              l4753 01C0                              l3971 093B  
                            l3963 0930                              l3947 092A                              l4763 07D0  
                            l3955 097F                              l3891 0ECC                              l3883 0EB0  
                            l3867 0E90                              l3859 0E72                              l4499 037D  
                            l4755 034D                              l4765 05E2                              l3973 0942  
                            l3965 0931                              l3981 0DD9                              l4757 0B0C  
                            l3957 0986                              l3949 096A                              l3893 0ED2  
                            l3885 0EC3                              l3967 0935                              l3991 0E09  
                            l3983 0DEA                              l4759 0B2B                              l3959 098C  
                            l3895 0EDF                              l3887 0ECB                              l3879 0E96  
                            l3969 0939                              l3993 0E0C                              l3985 0DF5  
                            l3977 0DD2                              l3995 0E19                              l3987 0DF9  
                            l3979 0DD5                              l3997 0E1D                              l3989 0E01  
                            l3999 0E26                              u4000 0CD2                              u4001 0CD1  
                            u4020 0A3F                              u4030 09F2                              u4015 0CF8  
                            u4031 09F1                              u3400 0EC3                              u4200 0361  
                            u4120 008D                              u4025 0A3A                              u3401 0EC2  
                            u4201 0360                              u4121 008C                              u4050 0961  
                            u3410 0EDF                              u4210 037D                              u4130 01E3  
                            u4051 0960                              u3411 0EDE                              u4211 037C  
                            u4131 01E2                              u4060 077E                              u3340 09A3  
                            u4300 0500                              u4220 0381                              u4140 0209  
                            u4045 094A                              u4061 077D                              u3341 09A2  
                            u4301 04FF                              u4221 0380                              u4141 0208  
                            u4070 0797                              u3334 099A                              u3430 0F0E  
                            u4310 0506                              u4230 03A0                              u4150 021F  
                            u4071 0796                              u3335 0998                              u3431 0F0D  
                            u3415 0EDB                              u4311 0505                              u4231 039F  
                            u4151 021E                              u4135 01DF                              u4080 079C  
                            u3520 098C                              u3440 0F14                              u3424 0EF3  
                            u4320 050A                              u4240 040E                              u4160 031C  
                            u4081 079B                              u3521 098B                              u3505 0979  
                            u3441 0F13                              u3425 0EF1                              u4321 0509  
                            u4241 040D                              u4161 031B                              u4145 0205  
                            u3530 0935                              u3610 0E38                              u3354 09A9  
                            u4250 0429                              u4170 0333                              u3531 0934  
                            u3611 0E37                              u3355 09A7                              u3515 0980  
                            u3435 0F0A                              u4251 0428                              u4171 0332  
                            u3540 0942                              u3364 09B8                              u3460 0F35  
                            u4260 042F                              u4180 033C                              u3541 0941  
                            u3605 0E1F                              u3365 09B6                              u3461 0F34  
                            u4261 042E                              u4181 033B                              u3710 0CA5  
                            u3630 0E56                              u3550 0DD9                              u3454 0F1A  
                            u3390 0EBD                              u4270 0459                              u4190 0359  
                            u3711 0CA4                              u3631 0E55                              u3615 0E34  
                            u3551 0DD8                              u3455 0F18                              u3391 0EBC  
                            u3375 0E84                              u4271 0458                              u4191 0358  
                            u3800 0BD8                              u3640 0E5B                              u3560 0DEA  
                            u3384 0EA2                              u3480 07FB                              u4280 0499  
                            u3705 0C95                              u3801 0BD7                              u3641 0E5A  
                            u3625 0E48                              u3561 0DE9                              u3465 0F31  
                            u3385 0EA0                              u3481 07FA                              u4281 0498  
                            u3730 0CB9                              u3650 0C66                              u3570 0E09  
                            u3490 0972                              u4290 04FC                              u3731 0CB8  
                            u3715 0CA1                              u3651 0C65                              u3475 0A82  
                            u3571 0E08                              u4347 0901                              u3491 0971  
                            u3395 0EB9                              u4291 04FB                              u3740 0CBE  
                            u3660 0C71                              u3820 0BEB                              u3900 0FBE  
                            u4357 0957                              u3741 0CBD                              u3725 0CAD  
                            u3661 0C70                              u3821 0BEA                              u3805 0BD4  
                            u3901 0FBD                              u3670 0C82                              u3830 0BF0  
                            u3750 0BA6                              u3590 0E1D                              u3910 0FC4  
                            u3671 0C81                              u3831 0BEF                              u3815 0BDF  
                            u3751 0BA5                              u3591 0E1C                              u3911 0FC3  
                            u3760 0BB1                              u3840 0D6B                              u3920 0FDD  
                            u3761 0BB0                              u3841 0D6A                              u3585 0E0E  
                            u3921 0FDC                              u3905 0FBA                              u3690 0C94  
                            u3770 0BBC                              u3930 0FE4                              u3691 0C93  
                            u3771 0BBB                              u3931 0FE3                              u3940 06AE  
                            u3860 0F6E                              _RCIF 0065                              u3685 0C86  
                            u3845 0D67                              u3941 06AD                              u3925 0FD9  
                            u3861 0F6D                              u3790 0BCE                              u3950 06F9  
                            u3870 0F74                              u3854 0F53                              u3791 0BCD  
                            u3951 06F8                              u3871 0F73                              u3855 0F51  
                            u3960 0735                              u3880 0F8D                              u3785 0BC0  
                            u3961 0734                              u3945 06AA                              u3881 0F8C  
                            u3865 0F6A                              u3970 0777                              u3971 0776  
                            u3980 05F7                              u3981 05F6                              u3885 0F89  
                            u3990 0601                              u3894 0FA3                              u3991 0600  
                            u3895 0FA1                              _TMR0 0001                              _TXIF 0064  
                    __CFG_WRT$OFF 0000                              _disp 0050                              _main 003F  
                            _temp 004C                              _time 00A0                              map@x 0034  
                            btemp 007E                  __end_of_ADC_Read 096A                     __CFG_BOREN$ON 0000  
                            start 0010                   __end_of_GetTime 0AA8                 ___bmul@multiplier 0027  
                           ??_ISR 0020         __size_of_conteggioVeicoli 0065                             ??_map 003E  
                 __end_of___aldiv 0E6F                             ?_main 0070                   __end_of___awdiv 0CC8  
                   __CFG_WDTE$OFF 0000                   __end_of___awmod 0BFA                   ___awdiv@divisor 002B  
                           _T1CON 0010              bitParita@errorColumn 002E                             i1l301 08E9  
                           i1l303 08EF                             i1l304 08F1                             i1l320 0C5E  
                           i1l178 0AF3                             i1l359 0B96                   ___awdiv@counter 0030  
                           _RCREG 001A              UpdateTimes@_semafori 0037                             _TMR1H 000F  
                           _TMR1L 000E                             _SPBRG 0099                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                             _TRISE 0089                             _TXREG 0019  
                   __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A                __size_of_UART_Read 0009  
                 __end_of_display 0811                             _count 0048                             _unita 005F  
                           main@i 0046                             _truck 00E5                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 0013  
                    __end_of_main 050F         __size_of_SetReceivedTimes 006E                __size_of_GetDigits 009C  
                          ??_main 019E                 SetDefaultTimers@i 0033                 SetDefaultTimers@l 0032  
              __size_of_BuildByte 00C8                        _SetDisplay 0918                     bitChange@dato 0027  
                          _ADCON0 001F                            _ADCON1 009F                __size_of_Conteggio 004C  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 002D  
                          i1l2051 0AC1                            i1l2053 0ACA                            i1l2055 0ADA  
                          i1l2047 0AA8                            i1l2057 0AE3                            i1l2049 0AB1  
                          i1l2711 0B4F                            i1l2481 0C24                            i1l2473 0BFA  
                          i1l2721 0B6A                            i1l2713 0B52                            i1l2467 08E9  
                          i1l2491 0C58                            i1l2483 0C2D                            i1l2475 0C1A  
                          i1l2731 0B79                            i1l2723 0B6E                            i1l2715 0B54  
                          i1l2707 0B47                            i1l2469 08F0                            i1l2485 0C35  
                          i1l2741 0B8C                            i1l2733 0B7D                            i1l2717 0B58  
                          i1l2725 0B6F                            i1l2709 0B4B                            i1l2487 0C50  
                          i1l2479 0C1B                            i1l2743 0B8D                            i1l2735 0B81  
                          i1l2727 0B73                            i1l2719 0B5C                            i1l2489 0C54  
                          i1l2745 0B8E                            i1l2737 0B82                            i1l2729 0B74  
                          i1l2747 0B92                            i1l2739 0B86                            i1l2749 0B94  
                          u132_20 0AB1                            u132_21 0AB0                            u133_20 0ACA  
                          u133_21 0AC9                            u134_20 0AE3                            u230_20 0B81  
                          u134_21 0AE2                            u230_21 0B80                            u231_20 0B8C  
                          u231_21 0B8B                            u225_20 0B4B                            _INTCON 000B  
                          u225_21 0B4A                            u226_20 0B4F                            u226_21 0B4E  
                          u227_20 0B58                            u227_21 0B57                            u228_20 0B5C  
                          u228_21 0B5B                            u229_20 0B73                            u229_21 0B72  
                          u196_20 08EF                            u196_21 08EE                            u197_20 0C24  
                          u197_21 0C23                            u198_20 0C35                            u198_21 0C34  
                          u199_20 0C5E                            u199_21 0C5D                            _TMR0IF 005A  
                          _TMR1IF 0060                         ??_GetTime 0026                      ?_UART_TxChar 0070  
               __end_of_UART_Init 0A62                 __end_of_UART_Read 08F2                            ___bmul 092D  
                       ??___aldiv 002C                   GetTime@shortInt 0029                            ___wmul 096A  
                       ??___awdiv 002F                            _decine 005E                         ??___awmod 0028  
                __end_of_init_ADC 0905                            _cycled 0051                  ___awdiv@quotient 0032  
                 ___awmod@divisor 0024                   ___awmod@counter 0029                  __end_of_sendByte 09F3  
                 GetDigits@decine 0034                         ?_ADC_Read 0024                            saved_w 007E  
         __end_of__initialization 003B                 __end_of_GetDigits 0DD2                     ??_UpdateTimes 0024  
            bitParita@sommaColumn 002D         __size_of_SetDefaultTimers 014F               ___bmul@multiplicand 0024  
                  __pcstackCOMMON 0070                 __end_of_BuildByte 0F37                      __pidataBANK0 08E1  
              __size_of_bitChange 0031                  _conteggioVeicoli 0BFA                 __end_of_Conteggio 0AF4  
                   ?_luciSemaforo 0024                __size_of_bitParita 00C9                        ??_ADC_Read 0026  
          SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024  
                   GetDigits@Time 0036              _dataFromGatewayIndex 004E              _timerReadFromGateway 004D  
                      __pbssBANK0 0048                        __pbssBANK1 00A0                        __pbssBANK3 0190  
                      __pmaintext 003F                           ?___bmul 0024                           ?___wmul 0024  
                  ??_luciSemaforo 0025               __end_of_UpdateTimes 0778                     sendByte@byte0 003D  
                   sendByte@byte1 0038                        __pintentry 0004                  _SetReceivedTimes 0CC8  
     __end_of_ShowDigitsOnDisplay 07F4                 __end_of_bitChange 09C2                        __stringtab 0800  
               __end_of_bitParita 1000                         ?_init_ADC 0070                           _GetTime 0A62  
                 BuildByte@valore 0025                   BuildByte@txByte 0029           GetTime@_dataFromGateway 0024  
                       ?_sendByte 0038                        bitChange@n 0024                        _n_semafori 0811  
            __size_of_UART_TxChar 000B                           ___aldiv 0DD2                   __size_of___bmul 0017  
                         ___awdiv 0C5F                           ___awmod 0B9F               __size_of_SetDisplay 0015  
                 __size_of___wmul 0027                 conteggioVeicoli@i 007D                           __ptext1 09C2  
                         __ptext2 07F4                           __ptext3 0E6F                           __ptext4 09F3  
                         __ptext5 096A                           __ptext6 0AF4                           __ptext7 08F2  
                         __ptext8 0F37                           __ptext9 0991                           _display 0806  
                    __size_of_ISR 0058                        bitParita@i 0036                        bitParita@y 0031  
                    __size_of_map 0035                  ___awmod@dividend 0026                  ___aldiv@dividend 0028  
            BuildByte@sommaColumn 002F                           _umidita 004B                           clrloop0 08DA  
            end_of_initialization 003B                        ??_init_ADC 0024                    main@lux_select 0044  
                     _UpdateTimes 065E                        ??_sendByte 003A                  _SetDefaultTimers 050F  
                       _RCSTAbits 0018                  ___aldiv@quotient 002F                        _motorcycle 0059  
                       _UART_Init 0A28                         _UART_Read 08E9             SetReceivedTimes@index 0038  
                       _PORTAbits 0005                         _PORTBbits 0006                         _PORTCbits 0007  
                    SetDisplay@d1 0027                      SetDisplay@d2 0024                      SetDisplay@d3 0025  
                       _TRISCbits 0087                 __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0C5F  
            __end_of_luciSemaforo 0B47                        map@out_max 003C                 bitParita@errorRow 0030  
                      map@out_min 003A  SetReceivedTimes@_dataFromGateway 0037                         _TXSTAbits 0098  
                       _GetDigits 0D36                 bitParita@sommaRow 002C                    __end_of___bmul 0944  
                  __end_of___wmul 0991                        ?_UART_Init 0033                        ?_UART_Read 0070  
                       _BuildByte 0E6F                         _Conteggio 0AA8                 BuildByte@sommaRow 002E  
             start_initialization 0013                       __end_of_ISR 0B9F                      ??_SetDisplay 0027  
                     __end_of_map 0A28          __end_of_SetReceivedTimes 0D36                        ?_GetDigits 0034  
                        ??___bmul 0025                    ADC_Read@canale 0027                          ??___wmul 0028  
                      init_fetch0 0905                       __pdataBANK0 0060                __end_of_SetDisplay 092D  
                      ?_BuildByte 0024                    GetDigits@unita 0035                        ?_Conteggio 0070  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK3 019E  
                        ?_GetTime 0024                         _bitChange 0991             SetDefaultTimers@verde 0026  
           SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013                         _bitParita 0F37  
                       _centinaia 005D                 __size_of_sendByte 0031                          ?___aldiv 0024  
                        ?___awdiv 002B                          ?___awmod 0024                       ??_UART_Init 0035  
                     ??_UART_Read 0070                    BuildByte@i_355 0036                         __pstrings 0800  
                  BuildByte@y_356 0032                    sendByte@valore 0039                    sendByte@txByte 003E  
                  BuildByte@byte0 0028                    BuildByte@byte1 0024          __end_of_SetDefaultTimers 065E  
                        _ADC_Read 0944             __size_of_luciSemaforo 0053                         _count_lux 004F  
                   UART_TxChar@ch 0024      __size_of_ShowDigitsOnDisplay 007C                   ___aldiv@divisor 0024  
               SetReceivedTimes@i 0039                 interrupt_function 0004                   ___aldiv@counter 002D  
                      ?_bitChange 0024                    ___wmul@product 0028        SetReceivedTimes@semaforoId 0035  
                    ?_UpdateTimes 0070                         clear_ram0 08D9                          _PIE1bits 008C  
                   ??_UART_TxChar 0024                        ?_bitParita 0070                       ??_GetDigits 0038  
                        _GO_nDONE 00FA                      _luciSemaforo 0AF4                         _pressione 004A  
               UART_Init@baudrate 0033                       ??_BuildByte 0026                         map@in_max 0038  
                       map@in_min 0036                       __stringbase 0805                         main@i_482 0042  
                       main@i_483 0040                         main@i_485 0041                       ??_Conteggio 0076  
                       main@i_488 0045                 ___wmul@multiplier 0024                      GetTime@index 0028  
                    _RoadsSensors 00A8                 ?_conteggioVeicoli 0070                      _secondPassed 0052  
              ??_conteggioVeicoli 0079                  __size_of_GetTime 0046                          _Semafori 0060  
              GetDigits@centinaia 003B                    bitParita@i_343 0038                       _readGateway 0053  
                  bitParita@y_344 0033                  __size_of___aldiv 009D               __end_of_UART_TxChar 07FF  
                __size_of___awdiv 0069                  __size_of___awmod 005B                    bitParita@error 002F  
              __end_of__stringtab 0806                         sendByte@i 003F                          __ptext10 065E  
                        __ptext11 0A28                          __ptext20 0B9F                          __ptext12 0DD2  
                        __ptext21 0C5F                          __ptext13 0778                          __ptext22 0944  
                        __ptext14 0918                          __ptext23 0B47                          __ptext15 0CC8  
                        __ptext24 0BFA                          __ptext16 092D                          __ptext25 0AA8  
                        __ptext17 0A62                          __ptext26 08E9                          __ptext18 050F  
                        __ptext19 0D36                __end_of_n_semafori 0812                          _init_ADC 08F2  
                     bitParita@rx 0035                       ??_bitChange 0025                 ?_SetReceivedTimes 002C  
                   __size_of_main 04D0                   _dataFromGateway 00AC                       ??_bitParita 0028  
                        _sendByte 09C2                ??_SetReceivedTimes 002D                        _INTCONbits 000B  
                        init_ram0 0909              Conteggio@_motorcycle 0072                          intlevel1 0000  
                 _readGatewayDone 0054                         stringcode 0800                       _UART_TxChar 07F4  
         SetReceivedTimes@colorId 0036              __size_of_UpdateTimes 011A                        GetTime@tmp 002A  
             _ShowDigitsOnDisplay 0778                        _OPTION_REG 0081                   SetDisplay@value 0026  
                        stringdir 0800                          stringtab 0800                      UpdateTimes@i 0036  
                    UpdateTimes@l 0038                 ?_SetDefaultTimers 0024                      ___aldiv@sign 002E  
              ??_SetDefaultTimers 002B              ?_ShowDigitsOnDisplay 0070                        BuildByte@i 0034  
                      BuildByte@y 0030         SetDefaultTimers@_semafori 002A                   Conteggio@_count 0070  
                   Conteggio@_car 0073                   Conteggio@_truck 0074                    Conteggio@index 0075  
