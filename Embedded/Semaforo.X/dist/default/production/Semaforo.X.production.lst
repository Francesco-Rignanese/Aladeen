

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jul 13 22:24:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199                           
   200                           	psect	idataBANK0
   201  0A7E                     __pidataBANK0:	
   202                           
   203                           ;initializer for _randx
   204  0A7E  3401               	retlw	1
   205  0A7F  3400               	retlw	0
   206  0A80  3400               	retlw	0
   207  0A81  3400               	retlw	0
   208                           
   209                           ;initializer for _DigitsArr
   210  0A82  34DA               	retlw	low (_digits0| 0)
   211  0A83  34D7               	retlw	low (_digits1| 0)
   212                           
   213                           ;initializer for _Semafori
   214  0A84  34C1               	retlw	low (_s0| 0)
   215  0A85  34B3               	retlw	low (_s1| 0)
   216                           
   217                           	psect	strings
   218  0800                     __pstrings:	
   219  0800                     stringtab:	
   220  0800                     __stringtab:	
   221  0800                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224  0800                     stringdir:	
   225  0800  3008               	movlw	high stringdir
   226  0801  008A               	movwf	10
   227  0802  0804               	movf	4,w
   228  0803  0A84               	incf	4,f
   229  0804  0782               	addwf	2,f
   230  0805                     __stringbase:	
   231  0805  3400               	retlw	0
   232  0806                     __end_of__stringtab:	
   233  0806                     _display:	
   234  0806  343F               	retlw	63
   235  0807  3406               	retlw	6
   236  0808  345B               	retlw	91
   237  0809  344F               	retlw	79
   238  080A  3466               	retlw	102
   239  080B  346D               	retlw	109
   240  080C  347D               	retlw	125
   241  080D  3407               	retlw	7
   242  080E  347F               	retlw	127
   243  080F  346F               	retlw	111
   244  0810  3400               	retlw	0
   245  0811                     __end_of_display:	
   246  0811                     _n_semafori:	
   247  0811  3402               	retlw	2
   248  0812                     __end_of_n_semafori:	
   249  0008                     _PORTD	set	8
   250  0005                     _PORTAbits	set	5
   251  001A                     _RCREG	set	26
   252  0019                     _TXREG	set	25
   253  000B                     _INTCONbits	set	11
   254  0018                     _RCSTAbits	set	24
   255  001E                     _ADRESH	set	30
   256  001F                     _ADCON0	set	31
   257  0006                     _PORTBbits	set	6
   258  0007                     _PORTCbits	set	7
   259  000E                     _TMR1L	set	14
   260  000F                     _TMR1H	set	15
   261  0010                     _T1CON	set	16
   262  0001                     _TMR0	set	1
   263  000B                     _INTCON	set	11
   264  0060                     _TMR1IF	set	96
   265  005A                     _TMR0IF	set	90
   266  0065                     _RCIF	set	101
   267  0064                     _TXIF	set	100
   268  00FA                     _GO_nDONE	set	250
   269  008C                     _PIE1bits	set	140
   270  0099                     _SPBRG	set	153
   271  0098                     _TXSTAbits	set	152
   272  0087                     _TRISCbits	set	135
   273  009E                     _ADRESL	set	158
   274  009F                     _ADCON1	set	159
   275  0085                     _TRISA	set	133
   276  0081                     _OPTION_REG	set	129
   277  0089                     _TRISE	set	137
   278  0088                     _TRISD	set	136
   279  0087                     _TRISC	set	135
   280  0086                     _TRISB	set	134
   281                           
   282                           ; #config settings
   283  0000                     
   284                           	psect	cinit
   285  0013                     start_initialization:	
   286  0013                     __initialization:	
   287                           
   288                           ; Initialize objects allocated to BANK0
   289  0013  1383               	bcf	3,7	;select IRP bank0
   290  0014  3066               	movlw	low (__pdataBANK0+8)
   291  0015  00FD               	movwf	btemp+-1
   292  0016  300A               	movlw	high __pidataBANK0
   293  0017  00FE               	movwf	btemp
   294  0018  307E               	movlw	low __pidataBANK0
   295  0019  00FF               	movwf	btemp+1
   296  001A  305E               	movlw	low __pdataBANK0
   297  001B  0084               	movwf	4
   298  001C  120A  158A  22A6  120A  118A  	fcall	init_ram0
   299                           
   300                           ; Clear objects allocated to BANK1
   301  0021  30A0               	movlw	low __pbssBANK1
   302  0022  0084               	movwf	4
   303  0023  30DD               	movlw	low (__pbssBANK1+61)
   304  0024  120A  158A  2276  120A  118A  	fcall	clear_ram0
   305                           
   306                           ; Clear objects allocated to BANK0
   307  0029  3049               	movlw	low __pbssBANK0
   308  002A  0084               	movwf	4
   309  002B  305E               	movlw	low (__pbssBANK0+21)
   310  002C  120A  158A  2276  120A  118A  	fcall	clear_ram0
   311  0031                     end_of_initialization:	
   312                           ;End of C runtime variable initialization code
   313                           
   314  0031                     __end_of__initialization:	
   315  0031  0183               	clrf	3
   316  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   317                           
   318                           	psect	bssBANK0
   319  0049                     __pbssBANK0:	
   320  0049                     _time:	
   321  0049                     	ds	4
   322  004D                     _count:	
   323  004D                     	ds	2
   324  004F                     _pressione:	
   325  004F                     	ds	1
   326  0050                     _umidita:	
   327  0050                     	ds	1
   328  0051                     _temp:	
   329  0051                     	ds	1
   330  0052                     _timerReadFromGateway:	
   331  0052                     	ds	1
   332  0053                     _dataFromGatewayIndex:	
   333  0053                     	ds	1
   334  0054                     _count_lux:	
   335  0054                     	ds	1
   336  0055                     _disp:	
   337  0055                     	ds	1
   338  0056                     _cycled:	
   339  0056                     	ds	1
   340  0057                     _secondPassed:	
   341  0057                     	ds	1
   342  0058                     _readGateway:	
   343  0058                     	ds	1
   344  0059                     _readGatewayDone:	
   345  0059                     	ds	1
   346  005A                     _motorcycle:	
   347  005A                     	ds	4
   348                           
   349                           	psect	dataBANK0
   350  005E                     __pdataBANK0:	
   351  005E                     _randx:	
   352  005E                     	ds	4
   353  0062                     _DigitsArr:	
   354  0062                     	ds	2
   355  0064                     _Semafori:	
   356  0064                     	ds	2
   357                           
   358                           	psect	bssBANK1
   359  00A0                     __pbssBANK1:	
   360  00A0                     _RoadsSensors:	
   361  00A0                     	ds	4
   362  00A4                     _dataFromGateway:	
   363  00A4                     	ds	15
   364  00B3                     _s1:	
   365  00B3                     	ds	14
   366  00C1                     _s0:	
   367  00C1                     	ds	14
   368  00CF                     _truck:	
   369  00CF                     	ds	4
   370  00D3                     _car:	
   371  00D3                     	ds	4
   372  00D7                     _digits1:	
   373  00D7                     	ds	3
   374  00DA                     _digits0:	
   375  00DA                     	ds	3
   376                           
   377                           	psect	inittext
   378  0AA2                     init_fetch0:	
   379                           ;	Called with low address in FSR and high address in W
   380                           
   381  0AA2  087E               	movf	btemp,w
   382  0AA3  008A               	movwf	10
   383  0AA4  087F               	movf	btemp+1,w
   384  0AA5  0082               	movwf	2
   385  0AA6                     init_ram0:	
   386                           ;Called with:
   387                           ;	high address of idata address in btemp 
   388                           ;	low address of idata address in btemp+1 
   389                           ;	low address of data in FSR
   390                           ;	high address + 1 of data in btemp-1
   391                           
   392  0AA6  120A  158A  22A2  120A  158A  	fcall	init_fetch0
   393  0AAB  0080               	movwf	0
   394  0AAC  0A84               	incf	4,f
   395  0AAD  0804               	movf	4,w
   396  0AAE  067D               	xorwf	btemp+-1,w
   397  0AAF  1903               	btfsc	3,2
   398  0AB0  3400               	retlw	0
   399  0AB1  0AFF               	incf	btemp+1,f
   400  0AB2  1903               	btfsc	3,2
   401  0AB3  0AFE               	incf	btemp,f
   402  0AB4  2AA6               	goto	init_ram0
   403                           
   404                           	psect	clrtext
   405  0A76                     clear_ram0:	
   406                           ;	Called with FSR containing the base address, and
   407                           ;	W with the last address+1
   408                           
   409  0A76  0064               	clrwdt	;clear the watchdog before getting into this loop
   410  0A77                     clrloop0:	
   411  0A77  0180               	clrf	0	;clear RAM location pointed to by FSR
   412  0A78  0A84               	incf	4,f	;increment pointer
   413  0A79  0604               	xorwf	4,w	;XOR with final address
   414  0A7A  1903               	btfsc	3,2	;have we reached the end yet?
   415  0A7B  3400               	retlw	0	;all done for this memory range, return
   416  0A7C  0604               	xorwf	4,w	;XOR again to restore value
   417  0A7D  2A77               	goto	clrloop0	;do the next byte
   418                           
   419                           	psect	cstackBANK1
   420  00DD                     __pcstackBANK1:	
   421  00DD                     main@randomMoto:	
   422                           
   423                           ; 1 bytes @ 0x0
   424  00DD                     	ds	1
   425  00DE                     main@randomCar:	
   426                           
   427                           ; 1 bytes @ 0x1
   428  00DE                     	ds	1
   429  00DF                     main@randomTruck:	
   430                           
   431                           ; 1 bytes @ 0x2
   432  00DF                     	ds	1
   433  00E0                     main@i_481:	
   434                           
   435                           ; 1 bytes @ 0x3
   436  00E0                     	ds	1
   437  00E1                     main@i_483:	
   438                           
   439                           ; 1 bytes @ 0x4
   440  00E1                     	ds	1
   441  00E2                     main@i_480:	
   442                           
   443                           ; 2 bytes @ 0x5
   444  00E2                     	ds	2
   445  00E4                     main@lux_select:	
   446                           
   447                           ; 1 bytes @ 0x7
   448  00E4                     	ds	1
   449  00E5                     main@i_485:	
   450                           
   451                           ; 1 bytes @ 0x8
   452  00E5                     	ds	1
   453  00E6                     main@i:	
   454                           
   455                           ; 1 bytes @ 0x9
   456  00E6                     	ds	1
   457                           
   458                           	psect	cstackCOMMON
   459  0070                     __pcstackCOMMON:	
   460  0070                     ?_init_ADC:	
   461  0070                     ?_ShowDigitsOnDisplay:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_UpdateTimes:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_Conteggio:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_main:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_UART_TxChar:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_UART_Read:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ??_UART_Read:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_conteggioVeicoli:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_ISR:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     Conteggio@_count:	
   489                           ; 1 bytes @ 0x0
   490                           
   491                           
   492                           ; 2 bytes @ 0x0
   493  0070                     	ds	2
   494  0072                     Conteggio@_motorcycle:	
   495                           
   496                           ; 1 bytes @ 0x2
   497  0072                     	ds	1
   498  0073                     Conteggio@_car:	
   499                           
   500                           ; 1 bytes @ 0x3
   501  0073                     	ds	1
   502  0074                     Conteggio@_truck:	
   503                           
   504                           ; 1 bytes @ 0x4
   505  0074                     	ds	1
   506  0075                     Conteggio@index:	
   507                           
   508                           ; 1 bytes @ 0x5
   509  0075                     	ds	1
   510  0076                     ??_Conteggio:	
   511                           
   512                           ; 1 bytes @ 0x6
   513  0076                     	ds	3
   514  0079                     ??_conteggioVeicoli:	
   515                           
   516                           ; 1 bytes @ 0x9
   517  0079                     	ds	4
   518  007D                     conteggioVeicoli@i:	
   519                           
   520                           ; 1 bytes @ 0xD
   521  007D                     	ds	1
   522                           
   523                           	psect	cstackBANK0
   524  0020                     __pcstackBANK0:	
   525  0020                     ??_ISR:	
   526                           
   527                           ; 1 bytes @ 0x0
   528  0020                     	ds	4
   529  0024                     ??_init_ADC:	
   530  0024                     ?_luciSemaforo:	
   531                           ; 1 bytes @ 0x4
   532                           
   533  0024                     ?_BuildByte:	
   534                           ; 1 bytes @ 0x4
   535                           
   536  0024                     ??_UpdateTimes:	
   537                           ; 1 bytes @ 0x4
   538                           
   539  0024                     ?_SetDefaultTimers:	
   540                           ; 1 bytes @ 0x4
   541                           
   542  0024                     ??_UART_TxChar:	
   543                           ; 1 bytes @ 0x4
   544                           
   545  0024                     ?_SetDisplay:	
   546                           ; 1 bytes @ 0x4
   547                           
   548  0024                     ?___bmul:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0024                     ?_ADC_Read:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0024                     ?_GetTime:	
   555                           ; 2 bytes @ 0x4
   556                           
   557  0024                     ?___wmul:	
   558                           ; 2 bytes @ 0x4
   559                           
   560  0024                     ?___awmod:	
   561                           ; 2 bytes @ 0x4
   562                           
   563  0024                     ?___lmul:	
   564                           ; 2 bytes @ 0x4
   565                           
   566  0024                     ?___aldiv:	
   567                           ; 4 bytes @ 0x4
   568                           
   569  0024                     BuildByte@byte1:	
   570                           ; 4 bytes @ 0x4
   571                           
   572  0024                     GetTime@_dataFromGateway:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0024                     UART_TxChar@ch:	
   576                           ; 1 bytes @ 0x4
   577                           
   578  0024                     luciSemaforo@lux:	
   579                           ; 1 bytes @ 0x4
   580                           
   581  0024                     SetDisplay@d1:	
   582                           ; 1 bytes @ 0x4
   583                           
   584  0024                     ___bmul@multiplicand:	
   585                           ; 1 bytes @ 0x4
   586                           
   587  0024                     SetDefaultTimers@rosso:	
   588                           ; 1 bytes @ 0x4
   589                           
   590  0024                     ___wmul@multiplier:	
   591                           ; 2 bytes @ 0x4
   592                           
   593  0024                     ___awmod@divisor:	
   594                           ; 2 bytes @ 0x4
   595                           
   596  0024                     ___lmul@multiplier:	
   597                           ; 2 bytes @ 0x4
   598                           
   599  0024                     ___aldiv@divisor:	
   600                           ; 4 bytes @ 0x4
   601                           
   602                           
   603                           ; 4 bytes @ 0x4
   604  0024                     	ds	1
   605  0025                     ??_luciSemaforo:	
   606  0025                     ??___bmul:	
   607                           ; 1 bytes @ 0x5
   608                           
   609  0025                     BuildByte@valore:	
   610                           ; 1 bytes @ 0x5
   611                           
   612  0025                     SetDisplay@d2:	
   613                           ; 1 bytes @ 0x5
   614                           
   615                           
   616                           ; 1 bytes @ 0x5
   617  0025                     	ds	1
   618  0026                     ??_ADC_Read:	
   619  0026                     ??_BuildByte:	
   620                           ; 1 bytes @ 0x6
   621                           
   622  0026                     ??_GetTime:	
   623                           ; 1 bytes @ 0x6
   624                           
   625  0026                     SetDisplay@d3:	
   626                           ; 1 bytes @ 0x6
   627                           
   628  0026                     ___bmul@product:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  0026                     SetDefaultTimers@verde:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0026                     ___wmul@multiplicand:	
   635                           ; 2 bytes @ 0x6
   636                           
   637  0026                     ___awmod@dividend:	
   638                           ; 2 bytes @ 0x6
   639                           
   640                           
   641                           ; 2 bytes @ 0x6
   642  0026                     	ds	1
   643  0027                     ADC_Read@canale:	
   644  0027                     luciSemaforo@index:	
   645                           ; 1 bytes @ 0x7
   646                           
   647  0027                     SetDisplay@value:	
   648                           ; 1 bytes @ 0x7
   649                           
   650  0027                     ___bmul@multiplier:	
   651                           ; 1 bytes @ 0x7
   652                           
   653                           
   654                           ; 1 bytes @ 0x7
   655  0027                     	ds	1
   656  0028                     ??_SetDisplay:	
   657  0028                     ??___wmul:	
   658                           ; 1 bytes @ 0x8
   659                           
   660  0028                     ??___awmod:	
   661                           ; 1 bytes @ 0x8
   662                           
   663  0028                     BuildByte@byte0:	
   664                           ; 1 bytes @ 0x8
   665                           
   666  0028                     GetTime@index:	
   667                           ; 1 bytes @ 0x8
   668                           
   669  0028                     SetDefaultTimers@giallo:	
   670                           ; 1 bytes @ 0x8
   671                           
   672  0028                     ___wmul@product:	
   673                           ; 2 bytes @ 0x8
   674                           
   675  0028                     ___lmul@multiplicand:	
   676                           ; 2 bytes @ 0x8
   677                           
   678  0028                     ___aldiv@dividend:	
   679                           ; 4 bytes @ 0x8
   680                           
   681                           
   682                           ; 4 bytes @ 0x8
   683  0028                     	ds	1
   684  0029                     GetTime@shortInt:	
   685  0029                     ___awmod@counter:	
   686                           ; 1 bytes @ 0x9
   687                           
   688  0029                     BuildByte@txByte:	
   689                           ; 1 bytes @ 0x9
   690                           
   691                           
   692                           ; 5 bytes @ 0x9
   693  0029                     	ds	1
   694  002A                     SetDefaultTimers@_semafori:	
   695  002A                     SetDisplay@display_index:	
   696                           ; 1 bytes @ 0xA
   697                           
   698  002A                     ___awmod@sign:	
   699                           ; 1 bytes @ 0xA
   700                           
   701  002A                     GetTime@tmp:	
   702                           ; 1 bytes @ 0xA
   703                           
   704                           
   705                           ; 2 bytes @ 0xA
   706  002A                     	ds	1
   707  002B                     ??_ShowDigitsOnDisplay:	
   708  002B                     ??_SetDefaultTimers:	
   709                           ; 1 bytes @ 0xB
   710                           
   711  002B                     ?___awdiv:	
   712                           ; 1 bytes @ 0xB
   713                           
   714  002B                     ___awdiv@divisor:	
   715                           ; 2 bytes @ 0xB
   716                           
   717                           
   718                           ; 2 bytes @ 0xB
   719  002B                     	ds	1
   720  002C                     ?_SetReceivedTimes:	
   721  002C                     ??___lmul:	
   722                           ; 1 bytes @ 0xC
   723                           
   724  002C                     ??___aldiv:	
   725                           ; 1 bytes @ 0xC
   726                           
   727  002C                     SetReceivedTimes@_semafori:	
   728                           ; 1 bytes @ 0xC
   729                           
   730                           
   731                           ; 1 bytes @ 0xC
   732  002C                     	ds	1
   733  002D                     ??_SetReceivedTimes:	
   734  002D                     ShowDigitsOnDisplay@display_index:	
   735                           ; 1 bytes @ 0xD
   736                           
   737  002D                     ___aldiv@counter:	
   738                           ; 1 bytes @ 0xD
   739                           
   740  002D                     ___awdiv@dividend:	
   741                           ; 1 bytes @ 0xD
   742                           
   743  002D                     ___lmul@product:	
   744                           ; 2 bytes @ 0xD
   745                           
   746                           
   747                           ; 4 bytes @ 0xD
   748  002D                     	ds	1
   749  002E                     BuildByte@sommaRow:	
   750  002E                     UpdateTimes@_semafori:	
   751                           ; 1 bytes @ 0xE
   752                           
   753  002E                     SetDefaultTimers@l:	
   754                           ; 1 bytes @ 0xE
   755                           
   756  002E                     ___aldiv@sign:	
   757                           ; 1 bytes @ 0xE
   758                           
   759                           
   760                           ; 1 bytes @ 0xE
   761  002E                     	ds	1
   762  002F                     ??___awdiv:	
   763  002F                     BuildByte@sommaColumn:	
   764                           ; 1 bytes @ 0xF
   765                           
   766  002F                     UpdateTimes@i:	
   767                           ; 1 bytes @ 0xF
   768                           
   769  002F                     SetDefaultTimers@i:	
   770                           ; 1 bytes @ 0xF
   771                           
   772  002F                     ___aldiv@quotient:	
   773                           ; 1 bytes @ 0xF
   774                           
   775                           
   776                           ; 4 bytes @ 0xF
   777  002F                     	ds	1
   778  0030                     UpdateTimes@l:	
   779  0030                     ___awdiv@counter:	
   780                           ; 1 bytes @ 0x10
   781                           
   782  0030                     BuildByte@y:	
   783                           ; 1 bytes @ 0x10
   784                           
   785                           
   786                           ; 2 bytes @ 0x10
   787  0030                     	ds	1
   788  0031                     ?_rand:	
   789  0031                     SetReceivedTimes@semaforoId:	
   790                           ; 2 bytes @ 0x11
   791                           
   792  0031                     ___awdiv@sign:	
   793                           ; 1 bytes @ 0x11
   794                           
   795                           
   796                           ; 1 bytes @ 0x11
   797  0031                     	ds	1
   798  0032                     SetReceivedTimes@colorId:	
   799  0032                     BuildByte@y_342:	
   800                           ; 1 bytes @ 0x12
   801                           
   802  0032                     ___awdiv@quotient:	
   803                           ; 2 bytes @ 0x12
   804                           
   805                           
   806                           ; 2 bytes @ 0x12
   807  0032                     	ds	1
   808  0033                     ?_UART_Init:	
   809  0033                     ??_rand:	
   810                           ; 1 bytes @ 0x13
   811                           
   812  0033                     SetReceivedTimes@_dataFromGateway:	
   813                           ; 1 bytes @ 0x13
   814                           
   815  0033                     UART_Init@baudrate:	
   816                           ; 1 bytes @ 0x13
   817                           
   818                           
   819                           ; 2 bytes @ 0x13
   820  0033                     	ds	1
   821  0034                     ?_GetDigits:	
   822  0034                     ?_map:	
   823                           ; 1 bytes @ 0x14
   824                           
   825  0034                     SetReceivedTimes@index:	
   826                           ; 2 bytes @ 0x14
   827                           
   828  0034                     GetDigits@index:	
   829                           ; 1 bytes @ 0x14
   830                           
   831  0034                     BuildByte@i:	
   832                           ; 1 bytes @ 0x14
   833                           
   834  0034                     map@x:	
   835                           ; 2 bytes @ 0x14
   836                           
   837                           
   838                           ; 2 bytes @ 0x14
   839  0034                     	ds	1
   840  0035                     ??_UART_Init:	
   841  0035                     SetReceivedTimes@i:	
   842                           ; 1 bytes @ 0x15
   843                           
   844  0035                     GetDigits@Time:	
   845                           ; 1 bytes @ 0x15
   846                           
   847                           
   848                           ; 2 bytes @ 0x15
   849  0035                     	ds	1
   850  0036                     BuildByte@i_341:	
   851  0036                     map@in_min:	
   852                           ; 2 bytes @ 0x16
   853                           
   854                           
   855                           ; 2 bytes @ 0x16
   856  0036                     	ds	1
   857  0037                     ??_GetDigits:	
   858                           
   859                           ; 1 bytes @ 0x17
   860  0037                     	ds	1
   861  0038                     ?_sendByte:	
   862  0038                     sendByte@byte1:	
   863                           ; 1 bytes @ 0x18
   864                           
   865  0038                     map@in_max:	
   866                           ; 1 bytes @ 0x18
   867                           
   868                           
   869                           ; 2 bytes @ 0x18
   870  0038                     	ds	1
   871  0039                     sendByte@valore:	
   872                           
   873                           ; 1 bytes @ 0x19
   874  0039                     	ds	1
   875  003A                     ??_sendByte:	
   876  003A                     map@out_min:	
   877                           ; 1 bytes @ 0x1A
   878                           
   879  003A                     _GetDigits$1203:	
   880                           ; 2 bytes @ 0x1A
   881                           
   882                           
   883                           ; 2 bytes @ 0x1A
   884  003A                     	ds	2
   885  003C                     GetDigits@_digits:	
   886  003C                     map@out_max:	
   887                           ; 1 bytes @ 0x1C
   888                           
   889                           
   890                           ; 2 bytes @ 0x1C
   891  003C                     	ds	1
   892  003D                     sendByte@byte0:	
   893                           
   894                           ; 1 bytes @ 0x1D
   895  003D                     	ds	1
   896  003E                     ??_map:	
   897  003E                     sendByte@txByte:	
   898                           ; 1 bytes @ 0x1E
   899                           
   900                           
   901                           ; 1 bytes @ 0x1E
   902  003E                     	ds	1
   903  003F                     sendByte@i:	
   904                           
   905                           ; 1 bytes @ 0x1F
   906  003F                     	ds	1
   907  0040                     ??_main:	
   908                           
   909                           ; 1 bytes @ 0x20
   910  0040                     	ds	9
   911                           
   912                           	psect	maintext
   913  0035                     __pmaintext:	
   914 ;;
   915 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   916 ;;
   917 ;; *************** function _main *****************
   918 ;; Defined at:
   919 ;;		line 136 in file "main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  lux_select      1    7[BANK1 ] unsigned char 
   924 ;;  randomTruck     1    2[BANK1 ] unsigned char 
   925 ;;  randomCar       1    1[BANK1 ] unsigned char 
   926 ;;  randomMoto      1    0[BANK1 ] unsigned char 
   927 ;;  i               1    4[BANK1 ] unsigned char 
   928 ;;  i               1    3[BANK1 ] unsigned char 
   929 ;;  i               2    5[BANK1 ] int 
   930 ;;  i               1    9[BANK1 ] unsigned char 
   931 ;;  i               1    8[BANK1 ] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : B00/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         0       0      10       0       0
   943 ;;      Temps:          0       9       0       0       0
   944 ;;      Totals:         0       9      10       0       0
   945 ;;Total ram usage:       19 bytes
   946 ;; Hardware stack levels required when called:    5
   947 ;; This function calls:
   948 ;;		_ADC_Read
   949 ;;		_GetDigits
   950 ;;		_SetDefaultTimers
   951 ;;		_SetReceivedTimes
   952 ;;		_ShowDigitsOnDisplay
   953 ;;		_UART_Init
   954 ;;		_UpdateTimes
   955 ;;		_init_ADC
   956 ;;		_luciSemaforo
   957 ;;		_map
   958 ;;		_rand
   959 ;;		_sendByte
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _main
   967  0035                     _main:	
   968  0035                     l3519:	
   969                           ;incstack = 0
   970                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   971                           
   972                           
   973                           ;main.c: 138:     TRISB = 0x38;
   974  0035  3038               	movlw	56
   975  0036  1683               	bsf	3,5	;RP0=1, select bank1
   976  0037  1303               	bcf	3,6	;RP1=0, select bank1
   977  0038  0086               	movwf	6	;volatile
   978                           
   979                           ;main.c: 139:     TRISC = 0x80;
   980  0039  3080               	movlw	128
   981  003A  0087               	movwf	7	;volatile
   982  003B                     l3521:	
   983                           
   984                           ;main.c: 140:     TRISD = 0x00;
   985  003B  0188               	clrf	8	;volatile
   986  003C                     l3523:	
   987                           
   988                           ;main.c: 141:     TRISE = 0x01;
   989  003C  3001               	movlw	1
   990  003D  0089               	movwf	9	;volatile
   991  003E                     l3525:	
   992                           
   993                           ;main.c: 142:     INTCON = 0xE0;
   994  003E  30E0               	movlw	224
   995  003F  008B               	movwf	11	;volatile
   996  0040                     l3527:	
   997                           
   998                           ;main.c: 143:     OPTION_REG = 0x04;
   999  0040  3004               	movlw	4
  1000  0041  0081               	movwf	1	;volatile
  1001  0042                     l3529:	
  1002                           
  1003                           ;main.c: 144:     TMR0 = 6;
  1004  0042  3006               	movlw	6
  1005  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0045  0081               	movwf	1	;volatile
  1008  0046                     l3531:	
  1009                           
  1010                           ;main.c: 145:     T1CON = 0x31;
  1011  0046  3031               	movlw	49
  1012  0047  0090               	movwf	16	;volatile
  1013  0048                     l3533:	
  1014                           
  1015                           ;main.c: 147:     TMR1H = 60;
  1016  0048  303C               	movlw	60
  1017  0049  008F               	movwf	15	;volatile
  1018  004A                     l3535:	
  1019                           
  1020                           ;main.c: 148:     TMR1L = 176;
  1021  004A  30B0               	movlw	176
  1022  004B  008E               	movwf	14	;volatile
  1023  004C                     l3537:	
  1024                           
  1025                           ;main.c: 151:     init_ADC();
  1026  004C  120A  158A  228F  120A  118A  	fcall	_init_ADC
  1027  0051                     l3539:	
  1028                           
  1029                           ;main.c: 152:     UART_Init(9600);
  1030  0051  3080               	movlw	128
  1031  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0054  00B3               	movwf	UART_Init@baudrate
  1034  0055  3025               	movlw	37
  1035  0056  00B4               	movwf	UART_Init@baudrate+1
  1036  0057  120A  158A  237F  120A  118A  	fcall	_UART_Init
  1037  005C                     l3541:	
  1038                           
  1039                           ;main.c: 153:     SetDefaultTimers(6, 4, 2, Semafori);
  1040  005C  3006               	movlw	6
  1041  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1042  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1043  005F  00A4               	movwf	SetDefaultTimers@rosso
  1044  0060  3000               	movlw	0
  1045  0061  00A5               	movwf	SetDefaultTimers@rosso+1
  1046  0062  3004               	movlw	4
  1047  0063  00A6               	movwf	SetDefaultTimers@verde
  1048  0064  3000               	movlw	0
  1049  0065  00A7               	movwf	SetDefaultTimers@verde+1
  1050  0066  3002               	movlw	2
  1051  0067  00A8               	movwf	SetDefaultTimers@giallo
  1052  0068  3000               	movlw	0
  1053  0069  00A9               	movwf	SetDefaultTimers@giallo+1
  1054  006A  3064               	movlw	(low (_Semafori| 0))& (0+255)
  1055  006B  00C0               	movwf	??_main
  1056  006C  0840               	movf	??_main,w
  1057  006D  00AA               	movwf	SetDefaultTimers@_semafori
  1058  006E  120A  118A  2625  120A  118A  	fcall	_SetDefaultTimers
  1059  0073                     l3543:	
  1060                           
  1061                           ;main.c: 155:     PORTCbits.RC0 = 0;
  1062  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0075  1007               	bcf	7,0	;volatile
  1065  0076                     l3545:	
  1066                           
  1067                           ;main.c: 156:     PORTBbits.RB7 = 0;
  1068  0076  1386               	bcf	6,7	;volatile
  1069  0077                     l3547:	
  1070                           
  1071                           ;main.c: 157:     PORTCbits.RC2 = 0;
  1072  0077  1107               	bcf	7,2	;volatile
  1073  0078                     l3549:	
  1074                           
  1075                           ;main.c: 158:     PORTBbits.RB6 = 0;
  1076  0078  1306               	bcf	6,6	;volatile
  1077  0079                     l3551:	
  1078                           
  1079                           ;main.c: 159:     PORTCbits.RC1 = 0;
  1080  0079  1087               	bcf	7,1	;volatile
  1081  007A                     l3553:	
  1082                           
  1083                           ;main.c: 160:     PORTBbits.RB1 = 0;
  1084  007A  1086               	bcf	6,1	;volatile
  1085  007B                     l3555:	
  1086                           
  1087                           ;main.c: 163:     {;main.c: 165:         if (readGateway.Bit)
  1088  007B  1C58               	btfss	_readGateway,0
  1089  007C  287E               	goto	u3031
  1090  007D  287F               	goto	u3030
  1091  007E                     u3031:	
  1092  007E  2B56               	goto	l223
  1093  007F                     u3030:	
  1094  007F  2B41               	goto	l3649
  1095  0080                     l225:	
  1096                           ;main.c: 168:             {;main.c: 169:             case 0x08:
  1097                           
  1098                           
  1099                           ;main.c: 170:                 readGatewayDone.Bit = 1;
  1100  0080  1459               	bsf	_readGatewayDone,0
  1101                           
  1102                           ;main.c: 171:                 readGateway.Bit = 0;
  1103  0081  1058               	bcf	_readGateway,0
  1104  0082                     l3559:	
  1105                           
  1106                           ;main.c: 173:                 for (unsigned char i = 0; i < 4; i++)
  1107  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0084  01E6               	clrf	main@i^(0+128)
  1110  0085                     l3565:	
  1111                           
  1112                           ;main.c: 174:                 {;main.c: 176:                     unsigned char randomMot
      +                          o = (char)rand();
  1113  0085  120A  158A  23FF  120A  118A  	fcall	_rand
  1114  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1115  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1116  008C  0831               	movf	?_rand,w
  1117  008D  00C0               	movwf	??_main
  1118  008E  0840               	movf	??_main,w
  1119  008F  1683               	bsf	3,5	;RP0=1, select bank1
  1120  0090  1303               	bcf	3,6	;RP1=0, select bank1
  1121  0091  00DD               	movwf	main@randomMoto^(0+128)
  1122                           
  1123                           ;main.c: 177:                     unsigned char randomCar = (char)rand();
  1124  0092  120A  158A  23FF  120A  118A  	fcall	_rand
  1125  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0099  0831               	movf	?_rand,w
  1128  009A  00C0               	movwf	??_main
  1129  009B  0840               	movf	??_main,w
  1130  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1131  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1132  009E  00DE               	movwf	main@randomCar^(0+128)
  1133                           
  1134                           ;main.c: 178:                     unsigned char randomTruck = (char)rand();
  1135  009F  120A  158A  23FF  120A  118A  	fcall	_rand
  1136  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00A6  0831               	movf	?_rand,w
  1139  00A7  00C0               	movwf	??_main
  1140  00A8  0840               	movf	??_main,w
  1141  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1142  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1143  00AB  00DF               	movwf	main@randomTruck^(0+128)
  1144  00AC                     l3567:	
  1145                           
  1146                           ;main.c: 179:                     if (randomMoto < 255)
  1147  00AC  0A5D               	incf	main@randomMoto^(0+128),w
  1148  00AD  1903               	btfsc	3,2
  1149  00AE  28B0               	goto	u3041
  1150  00AF  28B1               	goto	u3040
  1151  00B0                     u3041:	
  1152  00B0  28BF               	goto	l3571
  1153  00B1                     u3040:	
  1154  00B1                     l3569:	
  1155                           
  1156                           ;main.c: 180:                     {;main.c: 181:                         motorcycle[i] =
      +                           randomMoto;
  1157  00B1  085D               	movf	main@randomMoto^(0+128),w
  1158  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1159  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1160  00B4  00C0               	movwf	??_main
  1161  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1162  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1163  00B7  0866               	movf	main@i^(0+128),w
  1164  00B8  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1165  00B9  0084               	movwf	4
  1166  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1167  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1168  00BC  0840               	movf	??_main,w
  1169  00BD  1383               	bcf	3,7	;select IRP bank0
  1170  00BE  0080               	movwf	0
  1171  00BF                     l3571:	
  1172                           
  1173                           ;main.c: 183:                     if (randomCar < 255)
  1174  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1175  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1176  00C1  0A5E               	incf	main@randomCar^(0+128),w
  1177  00C2  1903               	btfsc	3,2
  1178  00C3  28C5               	goto	u3051
  1179  00C4  28C6               	goto	u3050
  1180  00C5                     u3051:	
  1181  00C5  28D4               	goto	l3575
  1182  00C6                     u3050:	
  1183  00C6                     l3573:	
  1184                           
  1185                           ;main.c: 184:                     {;main.c: 185:                         car[i] = random
      +                          Car;
  1186  00C6  085E               	movf	main@randomCar^(0+128),w
  1187  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1188  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1189  00C9  00C0               	movwf	??_main
  1190  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1191  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1192  00CC  0866               	movf	main@i^(0+128),w
  1193  00CD  3ED3               	addlw	(low (_car| 0))& (0+255)
  1194  00CE  0084               	movwf	4
  1195  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1196  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1197  00D1  0840               	movf	??_main,w
  1198  00D2  1383               	bcf	3,7	;select IRP bank1
  1199  00D3  0080               	movwf	0
  1200  00D4                     l3575:	
  1201                           
  1202                           ;main.c: 187:                     if (randomTruck < 255)
  1203  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1204  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1205  00D6  0A5F               	incf	main@randomTruck^(0+128),w
  1206  00D7  1903               	btfsc	3,2
  1207  00D8  28DA               	goto	u3061
  1208  00D9  28DB               	goto	u3060
  1209  00DA                     u3061:	
  1210  00DA  29FE               	goto	l3589
  1211  00DB                     u3060:	
  1212  00DB                     l3577:	
  1213                           
  1214                           ;main.c: 188:                     {;main.c: 189:                         truck[i] = rand
      +                          omTruck;
  1215  00DB  085F               	movf	main@randomTruck^(0+128),w
  1216  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1217  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1218  00DE  00C0               	movwf	??_main
  1219  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1220  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1221  00E1  0866               	movf	main@i^(0+128),w
  1222  00E2  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1223  00E3  0084               	movwf	4
  1224  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1225  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1226  00E6  0840               	movf	??_main,w
  1227  00E7  1383               	bcf	3,7	;select IRP bank1
  1228  00E8  0080               	movwf	0
  1229  00E9  29FE               	goto	l3589
  1230  00EA                     l3579:	
  1231                           
  1232                           ;main.c: 196:                         sendByte(0x03, 0x01, motorcycle[i]);
  1233  00EA  01B8               	clrf	sendByte@byte1
  1234  00EB  0AB8               	incf	sendByte@byte1,f
  1235  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1236  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1237  00EE  0866               	movf	main@i^(0+128),w
  1238  00EF  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1239  00F0  0084               	movwf	4
  1240  00F1  1383               	bcf	3,7	;select IRP bank0
  1241  00F2  0800               	movf	0,w
  1242  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1243  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1244  00F5  00C0               	movwf	??_main
  1245  00F6  0840               	movf	??_main,w
  1246  00F7  00B9               	movwf	sendByte@valore
  1247  00F8  3003               	movlw	3
  1248  00F9  120A  158A  2319  120A  118A  	fcall	_sendByte
  1249                           
  1250                           ;main.c: 197:                         sendByte(0x03, 0x02, car[i]);
  1251  00FE  3002               	movlw	2
  1252  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0101  00C0               	movwf	??_main
  1255  0102  0840               	movf	??_main,w
  1256  0103  00B8               	movwf	sendByte@byte1
  1257  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0106  0866               	movf	main@i^(0+128),w
  1260  0107  3ED3               	addlw	(low (_car| 0))& (0+255)
  1261  0108  0084               	movwf	4
  1262  0109  1383               	bcf	3,7	;select IRP bank1
  1263  010A  0800               	movf	0,w
  1264  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1265  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1266  010D  00C1               	movwf	??_main+1
  1267  010E  0841               	movf	??_main+1,w
  1268  010F  00B9               	movwf	sendByte@valore
  1269  0110  3003               	movlw	3
  1270  0111  120A  158A  2319  120A  118A  	fcall	_sendByte
  1271                           
  1272                           ;main.c: 198:                         sendByte(0x03, 0x03, truck[i]);
  1273  0116  3003               	movlw	3
  1274  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0119  00C0               	movwf	??_main
  1277  011A  0840               	movf	??_main,w
  1278  011B  00B8               	movwf	sendByte@byte1
  1279  011C  1683               	bsf	3,5	;RP0=1, select bank1
  1280  011D  1303               	bcf	3,6	;RP1=0, select bank1
  1281  011E  0866               	movf	main@i^(0+128),w
  1282  011F  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1283  0120  0084               	movwf	4
  1284  0121  1383               	bcf	3,7	;select IRP bank1
  1285  0122  0800               	movf	0,w
  1286  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0125  00C1               	movwf	??_main+1
  1289  0126  0841               	movf	??_main+1,w
  1290  0127  00B9               	movwf	sendByte@valore
  1291  0128  3003               	movlw	3
  1292  0129  120A  158A  2319  120A  118A  	fcall	_sendByte
  1293                           
  1294                           ;main.c: 199:                         break;
  1295  012E  2A18               	goto	l3591
  1296  012F                     l3581:	
  1297                           
  1298                           ;main.c: 201:                         sendByte(0x05, 0x01, motorcycle[i]);
  1299  012F  01B8               	clrf	sendByte@byte1
  1300  0130  0AB8               	incf	sendByte@byte1,f
  1301  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0133  0866               	movf	main@i^(0+128),w
  1304  0134  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1305  0135  0084               	movwf	4
  1306  0136  1383               	bcf	3,7	;select IRP bank0
  1307  0137  0800               	movf	0,w
  1308  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1310  013A  00C0               	movwf	??_main
  1311  013B  0840               	movf	??_main,w
  1312  013C  00B9               	movwf	sendByte@valore
  1313  013D  3005               	movlw	5
  1314  013E  120A  158A  2319  120A  118A  	fcall	_sendByte
  1315                           
  1316                           ;main.c: 202:                         sendByte(0x05, 0x02, car[i]);
  1317  0143  3002               	movlw	2
  1318  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0146  00C0               	movwf	??_main
  1321  0147  0840               	movf	??_main,w
  1322  0148  00B8               	movwf	sendByte@byte1
  1323  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1324  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1325  014B  0866               	movf	main@i^(0+128),w
  1326  014C  3ED3               	addlw	(low (_car| 0))& (0+255)
  1327  014D  0084               	movwf	4
  1328  014E  1383               	bcf	3,7	;select IRP bank1
  1329  014F  0800               	movf	0,w
  1330  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0152  00C1               	movwf	??_main+1
  1333  0153  0841               	movf	??_main+1,w
  1334  0154  00B9               	movwf	sendByte@valore
  1335  0155  3005               	movlw	5
  1336  0156  120A  158A  2319  120A  118A  	fcall	_sendByte
  1337                           
  1338                           ;main.c: 203:                         sendByte(0x05, 0x03, truck[i]);
  1339  015B  3003               	movlw	3
  1340  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1341  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1342  015E  00C0               	movwf	??_main
  1343  015F  0840               	movf	??_main,w
  1344  0160  00B8               	movwf	sendByte@byte1
  1345  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1347  0163  0866               	movf	main@i^(0+128),w
  1348  0164  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1349  0165  0084               	movwf	4
  1350  0166  1383               	bcf	3,7	;select IRP bank1
  1351  0167  0800               	movf	0,w
  1352  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1354  016A  00C1               	movwf	??_main+1
  1355  016B  0841               	movf	??_main+1,w
  1356  016C  00B9               	movwf	sendByte@valore
  1357  016D  3005               	movlw	5
  1358  016E  120A  158A  2319  120A  118A  	fcall	_sendByte
  1359                           
  1360                           ;main.c: 204:                         break;
  1361  0173  2A18               	goto	l3591
  1362  0174                     l3583:	
  1363                           
  1364                           ;main.c: 206:                         sendByte(0x07, 0x01, motorcycle[i]);
  1365  0174  01B8               	clrf	sendByte@byte1
  1366  0175  0AB8               	incf	sendByte@byte1,f
  1367  0176  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0177  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0178  0866               	movf	main@i^(0+128),w
  1370  0179  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1371  017A  0084               	movwf	4
  1372  017B  1383               	bcf	3,7	;select IRP bank0
  1373  017C  0800               	movf	0,w
  1374  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1375  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1376  017F  00C0               	movwf	??_main
  1377  0180  0840               	movf	??_main,w
  1378  0181  00B9               	movwf	sendByte@valore
  1379  0182  3007               	movlw	7
  1380  0183  120A  158A  2319  120A  118A  	fcall	_sendByte
  1381                           
  1382                           ;main.c: 207:                         sendByte(0x07, 0x02, car[i]);
  1383  0188  3002               	movlw	2
  1384  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1385  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1386  018B  00C0               	movwf	??_main
  1387  018C  0840               	movf	??_main,w
  1388  018D  00B8               	movwf	sendByte@byte1
  1389  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1390  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1391  0190  0866               	movf	main@i^(0+128),w
  1392  0191  3ED3               	addlw	(low (_car| 0))& (0+255)
  1393  0192  0084               	movwf	4
  1394  0193  1383               	bcf	3,7	;select IRP bank1
  1395  0194  0800               	movf	0,w
  1396  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0197  00C1               	movwf	??_main+1
  1399  0198  0841               	movf	??_main+1,w
  1400  0199  00B9               	movwf	sendByte@valore
  1401  019A  3007               	movlw	7
  1402  019B  120A  158A  2319  120A  118A  	fcall	_sendByte
  1403                           
  1404                           ;main.c: 208:                         sendByte(0x07, 0x03, truck[i]);
  1405  01A0  3003               	movlw	3
  1406  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1407  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1408  01A3  00C0               	movwf	??_main
  1409  01A4  0840               	movf	??_main,w
  1410  01A5  00B8               	movwf	sendByte@byte1
  1411  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1412  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1413  01A8  0866               	movf	main@i^(0+128),w
  1414  01A9  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1415  01AA  0084               	movwf	4
  1416  01AB  1383               	bcf	3,7	;select IRP bank1
  1417  01AC  0800               	movf	0,w
  1418  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1419  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1420  01AF  00C1               	movwf	??_main+1
  1421  01B0  0841               	movf	??_main+1,w
  1422  01B1  00B9               	movwf	sendByte@valore
  1423  01B2  3007               	movlw	7
  1424  01B3  120A  158A  2319  120A  118A  	fcall	_sendByte
  1425                           
  1426                           ;main.c: 209:                         break;
  1427  01B8  2A18               	goto	l3591
  1428  01B9                     l3585:	
  1429                           
  1430                           ;main.c: 211:                         sendByte(0x09, 0x01, motorcycle[i]);
  1431  01B9  01B8               	clrf	sendByte@byte1
  1432  01BA  0AB8               	incf	sendByte@byte1,f
  1433  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1434  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1435  01BD  0866               	movf	main@i^(0+128),w
  1436  01BE  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1437  01BF  0084               	movwf	4
  1438  01C0  1383               	bcf	3,7	;select IRP bank0
  1439  01C1  0800               	movf	0,w
  1440  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1441  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1442  01C4  00C0               	movwf	??_main
  1443  01C5  0840               	movf	??_main,w
  1444  01C6  00B9               	movwf	sendByte@valore
  1445  01C7  3009               	movlw	9
  1446  01C8  120A  158A  2319  120A  118A  	fcall	_sendByte
  1447                           
  1448                           ;main.c: 212:                         sendByte(0x09, 0x02, car[i]);
  1449  01CD  3002               	movlw	2
  1450  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1451  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1452  01D0  00C0               	movwf	??_main
  1453  01D1  0840               	movf	??_main,w
  1454  01D2  00B8               	movwf	sendByte@byte1
  1455  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1456  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1457  01D5  0866               	movf	main@i^(0+128),w
  1458  01D6  3ED3               	addlw	(low (_car| 0))& (0+255)
  1459  01D7  0084               	movwf	4
  1460  01D8  1383               	bcf	3,7	;select IRP bank1
  1461  01D9  0800               	movf	0,w
  1462  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1463  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1464  01DC  00C1               	movwf	??_main+1
  1465  01DD  0841               	movf	??_main+1,w
  1466  01DE  00B9               	movwf	sendByte@valore
  1467  01DF  3009               	movlw	9
  1468  01E0  120A  158A  2319  120A  118A  	fcall	_sendByte
  1469                           
  1470                           ;main.c: 213:                         sendByte(0x09, 0x03, truck[i]);
  1471  01E5  3003               	movlw	3
  1472  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1473  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1474  01E8  00C0               	movwf	??_main
  1475  01E9  0840               	movf	??_main,w
  1476  01EA  00B8               	movwf	sendByte@byte1
  1477  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1478  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1479  01ED  0866               	movf	main@i^(0+128),w
  1480  01EE  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1481  01EF  0084               	movwf	4
  1482  01F0  1383               	bcf	3,7	;select IRP bank1
  1483  01F1  0800               	movf	0,w
  1484  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1485  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1486  01F4  00C1               	movwf	??_main+1
  1487  01F5  0841               	movf	??_main+1,w
  1488  01F6  00B9               	movwf	sendByte@valore
  1489  01F7  3009               	movlw	9
  1490  01F8  120A  158A  2319  120A  118A  	fcall	_sendByte
  1491                           
  1492                           ;main.c: 214:                         break;
  1493  01FD  2A18               	goto	l3591
  1494  01FE                     l3589:	
  1495  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  1496  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  1497  0200  0866               	movf	main@i^(0+128),w
  1498  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0203  00C0               	movwf	??_main
  1501  0204  01C1               	clrf	??_main+1
  1502                           
  1503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1504                           ; Switch size 1, requested type "simple"
  1505                           ; Number of cases is 1, Range of values is 0 to 0
  1506                           ; switch strategies available:
  1507                           ; Name         Instructions Cycles
  1508                           ; simple_byte            4     3 (average)
  1509                           ; direct_byte           11     8 (fixed)
  1510                           ; jumptable            260     6 (fixed)
  1511                           ;	Chosen strategy is simple_byte
  1512  0205  0841               	movf	??_main+1,w
  1513  0206  3A00               	xorlw	0	; case 0
  1514  0207  1903               	skipnz
  1515  0208  2A0A               	goto	l3953
  1516  0209  2A18               	goto	l3591
  1517  020A                     l3953:	
  1518                           
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 4, Range of values is 0 to 3
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte           13     7 (average)
  1524                           ; direct_byte           20     8 (fixed)
  1525                           ; jumptable            260     6 (fixed)
  1526                           ;	Chosen strategy is simple_byte
  1527  020A  0840               	movf	??_main,w
  1528  020B  3A00               	xorlw	0	; case 0
  1529  020C  1903               	skipnz
  1530  020D  28EA               	goto	l3579
  1531  020E  3A01               	xorlw	1	; case 1
  1532  020F  1903               	skipnz
  1533  0210  292F               	goto	l3581
  1534  0211  3A03               	xorlw	3	; case 2
  1535  0212  1903               	skipnz
  1536  0213  2974               	goto	l3583
  1537  0214  3A01               	xorlw	1	; case 3
  1538  0215  1903               	skipnz
  1539  0216  29B9               	goto	l3585
  1540  0217  2A18               	goto	l3591
  1541  0218                     l3591:	
  1542                           
  1543                           ;main.c: 216:                 }
  1544  0218  3001               	movlw	1
  1545  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1546  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1547  021B  00C0               	movwf	??_main
  1548  021C  0840               	movf	??_main,w
  1549  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1550  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1551  021F  07E6               	addwf	main@i^(0+128),f
  1552  0220                     l3593:	
  1553  0220  3004               	movlw	4
  1554  0221  0266               	subwf	main@i^(0+128),w
  1555  0222  1C03               	skipc
  1556  0223  2A25               	goto	u3071
  1557  0224  2A26               	goto	u3070
  1558  0225                     u3071:	
  1559  0225  2885               	goto	l3565
  1560  0226                     u3070:	
  1561  0226                     l3595:	
  1562                           
  1563                           ;main.c: 218:                 for (int i = 0; i < 4; i++)
  1564  0226  01E2               	clrf	main@i_480^(0+128)
  1565  0227  01E3               	clrf	(main@i_480+1)^(0+128)
  1566  0228                     l3601:	
  1567                           
  1568                           ;main.c: 219:                 {;main.c: 220:                     motorcycle[i] = 0;
  1569  0228  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0229  1303               	bcf	3,6	;RP1=0, select bank1
  1571  022A  0862               	movf	main@i_480^(0+128),w
  1572  022B  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1573  022C  0084               	movwf	4
  1574  022D  1383               	bcf	3,7	;select IRP bank0
  1575  022E  0180               	clrf	0
  1576                           
  1577                           ;main.c: 221:                     car[i] = 0;
  1578  022F  0862               	movf	main@i_480^(0+128),w
  1579  0230  3ED3               	addlw	(low (_car| 0))& (0+255)
  1580  0231  0084               	movwf	4
  1581  0232  0180               	clrf	0
  1582                           
  1583                           ;main.c: 222:                     truck[i] = 0;
  1584  0233  0862               	movf	main@i_480^(0+128),w
  1585  0234  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1586  0235  0084               	movwf	4
  1587  0236  0180               	clrf	0
  1588  0237                     l3603:	
  1589                           
  1590                           ;main.c: 223:                 }
  1591  0237  3001               	movlw	1
  1592  0238  07E2               	addwf	main@i_480^(0+128),f
  1593  0239  1803               	skipnc
  1594  023A  0AE3               	incf	(main@i_480+1)^(0+128),f
  1595  023B  3000               	movlw	0
  1596  023C  07E3               	addwf	(main@i_480+1)^(0+128),f
  1597  023D                     l3605:	
  1598  023D  0863               	movf	(main@i_480+1)^(0+128),w
  1599  023E  3A80               	xorlw	128
  1600  023F  00FF               	movwf	btemp+1
  1601  0240  3080               	movlw	128
  1602  0241  027F               	subwf	btemp+1,w
  1603  0242  1D03               	skipz
  1604  0243  2A46               	goto	u3085
  1605  0244  3004               	movlw	4
  1606  0245  0262               	subwf	main@i_480^(0+128),w
  1607  0246                     u3085:	
  1608  0246  1C03               	skipc
  1609  0247  2A49               	goto	u3081
  1610  0248  2A4A               	goto	u3080
  1611  0249                     u3081:	
  1612  0249  2A28               	goto	l3601
  1613  024A                     u3080:	
  1614  024A                     l3607:	
  1615                           
  1616                           ;main.c: 225:                 for (unsigned char i = 0; i < 5; i++)
  1617  024A  1683               	bsf	3,5	;RP0=1, select bank1
  1618  024B  1303               	bcf	3,6	;RP1=0, select bank1
  1619  024C  01E0               	clrf	main@i_481^(0+128)
  1620  024D                     l3613:	
  1621                           
  1622                           ;main.c: 226:                 {;main.c: 227:                     dataFromGateway[i] = 0;
  1623  024D  0860               	movf	main@i_481^(0+128),w
  1624  024E  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1625  024F  0084               	movwf	4
  1626  0250  1383               	bcf	3,7	;select IRP bank1
  1627  0251  0180               	clrf	0
  1628  0252                     l3615:	
  1629                           
  1630                           ;main.c: 228:                 }
  1631  0252  3001               	movlw	1
  1632  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0255  00C0               	movwf	??_main
  1635  0256  0840               	movf	??_main,w
  1636  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1637  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1638  0259  07E0               	addwf	main@i_481^(0+128),f
  1639  025A                     l3617:	
  1640  025A  3005               	movlw	5
  1641  025B  0260               	subwf	main@i_481^(0+128),w
  1642  025C  1C03               	skipc
  1643  025D  2A5F               	goto	u3091
  1644  025E  2A60               	goto	u3090
  1645  025F                     u3091:	
  1646  025F  2A4D               	goto	l3613
  1647  0260                     u3090:	
  1648  0260  2B56               	goto	l223
  1649  0261                     l242:	
  1650                           ;main.c: 230:             case 0x0A:
  1651                           
  1652                           
  1653                           ;main.c: 231:                 readGatewayDone.Bit = 1;
  1654  0261  1459               	bsf	_readGatewayDone,0
  1655                           
  1656                           ;main.c: 232:                 readGateway.Bit = 0;
  1657  0262  1058               	bcf	_readGateway,0
  1658  0263                     l3619:	
  1659                           
  1660                           ;main.c: 234:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1661  0263  3000               	movlw	0
  1662  0264  120A  158A  22CC  120A  118A  	fcall	_ADC_Read
  1663  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1664  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1665  026B  0824               	movf	?_ADC_Read,w
  1666  026C  00C0               	movwf	??_main
  1667  026D  0825               	movf	?_ADC_Read+1,w
  1668  026E  00C1               	movwf	??_main+1
  1669  026F  0D41               	rlf	??_main+1,w
  1670  0270  0CC1               	rrf	??_main+1,f
  1671  0271  0CC0               	rrf	??_main,f
  1672  0272  0D41               	rlf	??_main+1,w
  1673  0273  0CC1               	rrf	??_main+1,f
  1674  0274  0CC0               	rrf	??_main,f
  1675  0275  0840               	movf	??_main,w
  1676  0276  00B4               	movwf	map@x
  1677  0277  0841               	movf	??_main+1,w
  1678  0278  00B5               	movwf	map@x+1
  1679  0279  3000               	movlw	0
  1680  027A  00B6               	movwf	map@in_min
  1681  027B  00B7               	movwf	map@in_min+1
  1682  027C  30FF               	movlw	255
  1683  027D  00B8               	movwf	map@in_max
  1684  027E  3000               	movlw	0
  1685  027F  00B9               	movwf	map@in_max+1
  1686  0280  30EC               	movlw	236
  1687  0281  00BA               	movwf	map@out_min
  1688  0282  30FF               	movlw	255
  1689  0283  00BB               	movwf	map@out_min+1
  1690  0284  303C               	movlw	60
  1691  0285  00BC               	movwf	map@out_max
  1692  0286  3000               	movlw	0
  1693  0287  00BD               	movwf	map@out_max+1
  1694  0288  120A  158A  234A  120A  118A  	fcall	_map
  1695  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1696  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1697  028F  0834               	movf	?_map,w
  1698  0290  00C2               	movwf	??_main+2
  1699  0291  0842               	movf	??_main+2,w
  1700  0292  00D1               	movwf	_temp
  1701                           
  1702                           ;main.c: 235:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1703  0293  3001               	movlw	1
  1704  0294  120A  158A  22CC  120A  118A  	fcall	_ADC_Read
  1705  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1706  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1707  029B  0824               	movf	?_ADC_Read,w
  1708  029C  00C0               	movwf	??_main
  1709  029D  0825               	movf	?_ADC_Read+1,w
  1710  029E  00C1               	movwf	??_main+1
  1711  029F  0D41               	rlf	??_main+1,w
  1712  02A0  0CC1               	rrf	??_main+1,f
  1713  02A1  0CC0               	rrf	??_main,f
  1714  02A2  0D41               	rlf	??_main+1,w
  1715  02A3  0CC1               	rrf	??_main+1,f
  1716  02A4  0CC0               	rrf	??_main,f
  1717  02A5  0840               	movf	??_main,w
  1718  02A6  00B4               	movwf	map@x
  1719  02A7  0841               	movf	??_main+1,w
  1720  02A8  00B5               	movwf	map@x+1
  1721  02A9  3000               	movlw	0
  1722  02AA  00B6               	movwf	map@in_min
  1723  02AB  00B7               	movwf	map@in_min+1
  1724  02AC  30FF               	movlw	255
  1725  02AD  00B8               	movwf	map@in_max
  1726  02AE  3000               	movlw	0
  1727  02AF  00B9               	movwf	map@in_max+1
  1728  02B0  3000               	movlw	0
  1729  02B1  00BA               	movwf	map@out_min
  1730  02B2  00BB               	movwf	map@out_min+1
  1731  02B3  3064               	movlw	100
  1732  02B4  00BC               	movwf	map@out_max
  1733  02B5  3000               	movlw	0
  1734  02B6  00BD               	movwf	map@out_max+1
  1735  02B7  120A  158A  234A  120A  118A  	fcall	_map
  1736  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1737  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1738  02BE  0834               	movf	?_map,w
  1739  02BF  00C2               	movwf	??_main+2
  1740  02C0  0842               	movf	??_main+2,w
  1741  02C1  00D0               	movwf	_umidita
  1742                           
  1743                           ;main.c: 236:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1744  02C2  3005               	movlw	5
  1745  02C3  120A  158A  22CC  120A  118A  	fcall	_ADC_Read
  1746  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1747  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1748  02CA  0824               	movf	?_ADC_Read,w
  1749  02CB  00C0               	movwf	??_main
  1750  02CC  0825               	movf	?_ADC_Read+1,w
  1751  02CD  00C1               	movwf	??_main+1
  1752  02CE  0D41               	rlf	??_main+1,w
  1753  02CF  0CC1               	rrf	??_main+1,f
  1754  02D0  0CC0               	rrf	??_main,f
  1755  02D1  0D41               	rlf	??_main+1,w
  1756  02D2  0CC1               	rrf	??_main+1,f
  1757  02D3  0CC0               	rrf	??_main,f
  1758  02D4  0840               	movf	??_main,w
  1759  02D5  00B4               	movwf	map@x
  1760  02D6  0841               	movf	??_main+1,w
  1761  02D7  00B5               	movwf	map@x+1
  1762  02D8  3000               	movlw	0
  1763  02D9  00B6               	movwf	map@in_min
  1764  02DA  00B7               	movwf	map@in_min+1
  1765  02DB  30FF               	movlw	255
  1766  02DC  00B8               	movwf	map@in_max
  1767  02DD  3000               	movlw	0
  1768  02DE  00B9               	movwf	map@in_max+1
  1769  02DF  3000               	movlw	0
  1770  02E0  00BA               	movwf	map@out_min
  1771  02E1  00BB               	movwf	map@out_min+1
  1772  02E2  3064               	movlw	100
  1773  02E3  00BC               	movwf	map@out_max
  1774  02E4  3000               	movlw	0
  1775  02E5  00BD               	movwf	map@out_max+1
  1776  02E6  120A  158A  234A  120A  118A  	fcall	_map
  1777  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1778  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1779  02ED  0834               	movf	?_map,w
  1780  02EE  00C2               	movwf	??_main+2
  1781  02EF  0842               	movf	??_main+2,w
  1782  02F0  00CF               	movwf	_pressione
  1783  02F1                     l3621:	
  1784                           
  1785                           ;main.c: 237:                 sendByte(0x02, 0x00, temp);
  1786  02F1  01B8               	clrf	sendByte@byte1
  1787  02F2  0851               	movf	_temp,w
  1788  02F3  00C0               	movwf	??_main
  1789  02F4  0840               	movf	??_main,w
  1790  02F5  00B9               	movwf	sendByte@valore
  1791  02F6  3002               	movlw	2
  1792  02F7  120A  158A  2319  120A  118A  	fcall	_sendByte
  1793  02FC                     l3623:	
  1794                           
  1795                           ;main.c: 238:                 sendByte(0x04, 0x00, umidita);
  1796  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1797  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1798  02FE  01B8               	clrf	sendByte@byte1
  1799  02FF  0850               	movf	_umidita,w
  1800  0300  00C0               	movwf	??_main
  1801  0301  0840               	movf	??_main,w
  1802  0302  00B9               	movwf	sendByte@valore
  1803  0303  3004               	movlw	4
  1804  0304  120A  158A  2319  120A  118A  	fcall	_sendByte
  1805  0309                     l3625:	
  1806                           
  1807                           ;main.c: 239:                 sendByte(0x06, 0x00, pressione);
  1808  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1809  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1810  030B  01B8               	clrf	sendByte@byte1
  1811  030C  084F               	movf	_pressione,w
  1812  030D  00C0               	movwf	??_main
  1813  030E  0840               	movf	??_main,w
  1814  030F  00B9               	movwf	sendByte@valore
  1815  0310  3006               	movlw	6
  1816  0311  120A  158A  2319  120A  118A  	fcall	_sendByte
  1817  0316                     l3627:	
  1818                           
  1819                           ;main.c: 241:                 for (unsigned char i = 0; i < 5; i++)
  1820  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0318  01E1               	clrf	main@i_483^(0+128)
  1823  0319                     l3629:	
  1824  0319  3005               	movlw	5
  1825  031A  0261               	subwf	main@i_483^(0+128),w
  1826  031B  1C03               	skipc
  1827  031C  2B1E               	goto	u3101
  1828  031D  2B1F               	goto	u3100
  1829  031E                     u3101:	
  1830  031E  2B20               	goto	l3633
  1831  031F                     u3100:	
  1832  031F  2B56               	goto	l223
  1833  0320                     l3633:	
  1834                           
  1835                           ;main.c: 242:                 {;main.c: 243:                     dataFromGateway[i] = 0;
  1836  0320  0861               	movf	main@i_483^(0+128),w
  1837  0321  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1838  0322  0084               	movwf	4
  1839  0323  1383               	bcf	3,7	;select IRP bank1
  1840  0324  0180               	clrf	0
  1841  0325                     l3635:	
  1842                           
  1843                           ;main.c: 244:                 }
  1844  0325  3001               	movlw	1
  1845  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0328  00C0               	movwf	??_main
  1848  0329  0840               	movf	??_main,w
  1849  032A  1683               	bsf	3,5	;RP0=1, select bank1
  1850  032B  1303               	bcf	3,6	;RP1=0, select bank1
  1851  032C  07E1               	addwf	main@i_483^(0+128),f
  1852  032D  2B19               	goto	l3629
  1853  032E                     l3639:	
  1854                           
  1855                           ;main.c: 248:                 if (timerReadFromGateway >= 4)
  1856  032E  3004               	movlw	4
  1857  032F  0252               	subwf	_timerReadFromGateway,w
  1858  0330  1C03               	skipc
  1859  0331  2B33               	goto	u3111
  1860  0332  2B34               	goto	u3110
  1861  0333                     u3111:	
  1862  0333  2B37               	goto	l3643
  1863  0334                     u3110:	
  1864  0334                     l3641:	
  1865                           
  1866                           ;main.c: 249:                 {;main.c: 250:                     readGatewayDone.Bit = 1
      +                          ;
  1867  0334  1459               	bsf	_readGatewayDone,0
  1868                           
  1869                           ;main.c: 251:                     readGatewayDone.Timeout = 1;
  1870  0335  14D9               	bsf	_readGatewayDone,1
  1871                           
  1872                           ;main.c: 252:                     readGateway.Bit = 0;
  1873  0336  1058               	bcf	_readGateway,0
  1874  0337                     l3643:	
  1875                           
  1876                           ;main.c: 255:                 if (dataFromGatewayIndex >= 15)
  1877  0337  300F               	movlw	15
  1878  0338  0253               	subwf	_dataFromGatewayIndex,w
  1879  0339  1C03               	skipc
  1880  033A  2B3C               	goto	u3121
  1881  033B  2B3D               	goto	u3120
  1882  033C                     u3121:	
  1883  033C  2B56               	goto	l223
  1884  033D                     u3120:	
  1885  033D                     l3645:	
  1886                           
  1887                           ;main.c: 256:                 {;main.c: 257:                     readGatewayDone.Bit = 1
      +                          ;
  1888  033D  1459               	bsf	_readGatewayDone,0
  1889                           
  1890                           ;main.c: 258:                     readGatewayDone.Timeout = 0;
  1891  033E  10D9               	bcf	_readGatewayDone,1
  1892                           
  1893                           ;main.c: 259:                     readGateway.Bit = 0;
  1894  033F  1058               	bcf	_readGateway,0
  1895  0340  2B56               	goto	l223
  1896  0341                     l3649:	
  1897  0341  1683               	bsf	3,5	;RP0=1, select bank1
  1898  0342  1303               	bcf	3,6	;RP1=0, select bank1
  1899  0343  0824               	movf	_dataFromGateway^(0+128),w
  1900  0344  397F               	andlw	127
  1901  0345  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0346  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0347  00C0               	movwf	??_main
  1904  0348  01C1               	clrf	??_main+1
  1905                           
  1906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1907                           ; Switch size 1, requested type "simple"
  1908                           ; Number of cases is 1, Range of values is 0 to 0
  1909                           ; switch strategies available:
  1910                           ; Name         Instructions Cycles
  1911                           ; simple_byte            4     3 (average)
  1912                           ; direct_byte           11     8 (fixed)
  1913                           ; jumptable            260     6 (fixed)
  1914                           ;	Chosen strategy is simple_byte
  1915  0349  0841               	movf	??_main+1,w
  1916  034A  3A00               	xorlw	0	; case 0
  1917  034B  1903               	skipnz
  1918  034C  2B4E               	goto	l3955
  1919  034D  2B2E               	goto	l3639
  1920  034E                     l3955:	
  1921                           
  1922                           ; Switch size 1, requested type "simple"
  1923                           ; Number of cases is 2, Range of values is 8 to 10
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte            7     4 (average)
  1927                           ; direct_byte           20    11 (fixed)
  1928                           ; jumptable            263     9 (fixed)
  1929                           ;	Chosen strategy is simple_byte
  1930  034E  0840               	movf	??_main,w
  1931  034F  3A08               	xorlw	8	; case 8
  1932  0350  1903               	skipnz
  1933  0351  2880               	goto	l225
  1934  0352  3A02               	xorlw	2	; case 10
  1935  0353  1903               	skipnz
  1936  0354  2A61               	goto	l242
  1937  0355  2B2E               	goto	l3639
  1938  0356                     l223:	
  1939                           ;main.c: 263:         }
  1940                           
  1941                           
  1942                           ;main.c: 266:         if (readGatewayDone.Bit)
  1943  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0357  1C59               	btfss	_readGatewayDone,0
  1945  0358  2B5A               	goto	u3131
  1946  0359  2B5B               	goto	u3130
  1947  035A                     u3131:	
  1948  035A  2B6F               	goto	l3663
  1949  035B                     u3130:	
  1950  035B                     l3651:	
  1951                           
  1952                           ;main.c: 267:         {;main.c: 269:             readGateway.Bit = 0;
  1953  035B  1058               	bcf	_readGateway,0
  1954  035C                     l3653:	
  1955                           
  1956                           ;main.c: 270:             dataFromGatewayIndex = 0;
  1957  035C  01D3               	clrf	_dataFromGatewayIndex
  1958  035D                     l3655:	
  1959                           
  1960                           ;main.c: 271:             readGatewayDone.Bit = 0;
  1961  035D  1059               	bcf	_readGatewayDone,0
  1962                           
  1963                           ;main.c: 272:             timerReadFromGateway = 0;
  1964  035E  01D2               	clrf	_timerReadFromGateway
  1965  035F                     l3657:	
  1966                           
  1967                           ;main.c: 275:             if (readGatewayDone.Timeout)
  1968  035F  1CD9               	btfss	_readGatewayDone,1
  1969  0360  2B62               	goto	u3141
  1970  0361  2B63               	goto	u3140
  1971  0362                     u3141:	
  1972  0362  2B65               	goto	l3661
  1973  0363                     u3140:	
  1974  0363                     l3659:	
  1975                           
  1976                           ;main.c: 276:             {;main.c: 277:                 readGatewayDone.Timeout = 0;
  1977  0363  10D9               	bcf	_readGatewayDone,1
  1978                           
  1979                           ;main.c: 278:             }
  1980  0364  2B6F               	goto	l3663
  1981  0365                     l3661:	
  1982                           
  1983                           ;main.c: 281:             {;main.c: 283:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1984  0365  3064               	movlw	(low (_Semafori| 0))& (0+255)
  1985  0366  00C0               	movwf	??_main
  1986  0367  0840               	movf	??_main,w
  1987  0368  00AC               	movwf	SetReceivedTimes@_semafori
  1988  0369  30A4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1989  036A  120A  158A  2635  120A  118A  	fcall	_SetReceivedTimes
  1990  036F                     l3663:	
  1991                           
  1992                           ;main.c: 289:         if (secondPassed.Bit && cycled.Bit)
  1993  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0371  1C57               	btfss	_secondPassed,0
  1996  0372  2B74               	goto	u3151
  1997  0373  2B75               	goto	u3150
  1998  0374                     u3151:	
  1999  0374  2C72               	goto	l3701
  2000  0375                     u3150:	
  2001  0375                     l3665:	
  2002  0375  1C56               	btfss	_cycled,0
  2003  0376  2B78               	goto	u3161
  2004  0377  2B79               	goto	u3160
  2005  0378                     u3161:	
  2006  0378  2C72               	goto	l3701
  2007  0379                     u3160:	
  2008  0379                     l3667:	
  2009                           
  2010                           ;main.c: 290:         {;main.c: 291:             for (unsigned char i = 0; i < n_semafor
      +                          i; i++)
  2011  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2012  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2013  037B  01E5               	clrf	main@i_485^(0+128)
  2014  037C                     l3669:	
  2015  037C  3002               	movlw	2
  2016  037D  0265               	subwf	main@i_485^(0+128),w
  2017  037E  1C03               	skipc
  2018  037F  2B81               	goto	u3171
  2019  0380  2B82               	goto	u3170
  2020  0381                     u3171:	
  2021  0381  2B83               	goto	l3673
  2022  0382                     u3170:	
  2023  0382  2C72               	goto	l3701
  2024  0383                     l3673:	
  2025                           
  2026                           ;main.c: 292:             {;main.c: 293:                 if ((*Semafori[i]).times[0] != 
      +                          0)
  2027  0383  0865               	movf	main@i_485^(0+128),w
  2028  0384  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2029  0385  0084               	movwf	4
  2030  0386  1383               	bcf	3,7	;select IRP bank0
  2031  0387  0800               	movf	0,w
  2032  0388  0084               	movwf	4
  2033  0389  0800               	movf	0,w
  2034  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2035  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2036  038C  00C0               	movwf	??_main
  2037  038D  0A84               	incf	4,f
  2038  038E  0800               	movf	0,w
  2039  038F  00C1               	movwf	??_main+1
  2040  0390  0840               	movf	??_main,w
  2041  0391  0441               	iorwf	??_main+1,w
  2042  0392  1903               	btfsc	3,2
  2043  0393  2B95               	goto	u3181
  2044  0394  2B96               	goto	u3180
  2045  0395                     u3181:	
  2046  0395  2C69               	goto	l3697
  2047  0396                     u3180:	
  2048  0396                     l3675:	
  2049                           
  2050                           ;main.c: 294:                 {;main.c: 295:                     time[i]++;
  2051  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2053  0398  0865               	movf	main@i_485^(0+128),w
  2054  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2055  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2056  039B  00C0               	movwf	??_main
  2057  039C  0740               	addwf	??_main,w
  2058  039D  3E49               	addlw	(low (_time| 0))& (0+255)
  2059  039E  0084               	movwf	4
  2060  039F  3001               	movlw	1
  2061  03A0  0780               	addwf	0,f
  2062  03A1  0A84               	incf	4,f
  2063  03A2  1803               	skipnc
  2064  03A3  0A80               	incf	0,f
  2065                           
  2066                           ;main.c: 296:                     unsigned char lux_select = (*Semafori[i]).lux_select;
  2067  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2068  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  2069  03A6  0865               	movf	main@i_485^(0+128),w
  2070  03A7  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2071  03A8  0084               	movwf	4
  2072  03A9  0800               	movf	0,w
  2073  03AA  3E0C               	addlw	12
  2074  03AB  0084               	movwf	4
  2075  03AC  0800               	movf	0,w
  2076  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2077  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2078  03AF  00C0               	movwf	??_main
  2079  03B0  0840               	movf	??_main,w
  2080  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2081  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2082  03B3  00E4               	movwf	main@lux_select^(0+128)
  2083                           
  2084                           ;main.c: 298:                     if ((*Semafori[i]).times[lux_select] - time[i] < 0)
  2085  03B4  0865               	movf	main@i_485^(0+128),w
  2086  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2087  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2088  03B7  00C0               	movwf	??_main
  2089  03B8  0740               	addwf	??_main,w
  2090  03B9  3E49               	addlw	(low (_time| 0))& (0+255)
  2091  03BA  0084               	movwf	4
  2092  03BB  0800               	movf	0,w
  2093  03BC  00C1               	movwf	??_main+1
  2094  03BD  0A84               	incf	4,f
  2095  03BE  0800               	movf	0,w
  2096  03BF  00C2               	movwf	??_main+2
  2097  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2098  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2099  03C2  0865               	movf	main@i_485^(0+128),w
  2100  03C3  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2101  03C4  0084               	movwf	4
  2102  03C5  0864               	movf	main@lux_select^(0+128),w
  2103  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2104  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2105  03C8  00C3               	movwf	??_main+3
  2106  03C9  0743               	addwf	??_main+3,w
  2107  03CA  0700               	addwf	0,w
  2108  03CB  00C4               	movwf	??_main+4
  2109  03CC  0844               	movf	??_main+4,w
  2110  03CD  0084               	movwf	4
  2111  03CE  0800               	movf	0,w
  2112  03CF  00C5               	movwf	??_main+5
  2113  03D0  0A84               	incf	4,f
  2114  03D1  0800               	movf	0,w
  2115  03D2  00C6               	movwf	??_main+6
  2116  03D3  0841               	movf	??_main+1,w
  2117  03D4  0245               	subwf	??_main+5,w
  2118  03D5  00C7               	movwf	??_main+7
  2119  03D6  0842               	movf	??_main+2,w
  2120  03D7  1C03               	skipc
  2121  03D8  0A42               	incf	??_main+2,w
  2122  03D9  0246               	subwf	??_main+6,w
  2123  03DA  00C8               	movwf	??_main+8
  2124  03DB  1FC8               	btfss	??_main+8,7
  2125  03DC  2BDE               	goto	u3191
  2126  03DD  2BDF               	goto	u3190
  2127  03DE                     u3191:	
  2128  03DE  2C0F               	goto	l255
  2129  03DF                     u3190:	
  2130  03DF                     l3677:	
  2131                           
  2132                           ;main.c: 299:                     {;main.c: 300:                         lux_select++;
  2133  03DF  3001               	movlw	1
  2134  03E0  00C0               	movwf	??_main
  2135  03E1  0840               	movf	??_main,w
  2136  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2137  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2138  03E4  07E4               	addwf	main@lux_select^(0+128),f
  2139  03E5                     l3679:	
  2140                           
  2141                           ;main.c: 301:                         time[i] = 1;
  2142  03E5  0865               	movf	main@i_485^(0+128),w
  2143  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2144  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2145  03E8  00C0               	movwf	??_main
  2146  03E9  0740               	addwf	??_main,w
  2147  03EA  3E49               	addlw	(low (_time| 0))& (0+255)
  2148  03EB  0084               	movwf	4
  2149  03EC  3001               	movlw	1
  2150  03ED  0080               	movwf	0
  2151  03EE  0A84               	incf	4,f
  2152  03EF  3000               	movlw	0
  2153  03F0  0080               	movwf	0
  2154  03F1                     l3681:	
  2155                           
  2156                           ;main.c: 303:                         if (lux_select >= 3)
  2157  03F1  3003               	movlw	3
  2158  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2159  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2160  03F4  0264               	subwf	main@lux_select^(0+128),w
  2161  03F5  1C03               	skipc
  2162  03F6  2BF8               	goto	u3201
  2163  03F7  2BF9               	goto	u3200
  2164  03F8                     u3201:	
  2165  03F8  2C0F               	goto	l255
  2166  03F9                     u3200:	
  2167  03F9                     l3683:	
  2168                           
  2169                           ;main.c: 304:                         {;main.c: 305:                             lux_sel
      +                          ect = 0;
  2170  03F9  01E4               	clrf	main@lux_select^(0+128)
  2171  03FA                     l3685:	
  2172                           
  2173                           ;main.c: 307:                             if (i == 0)
  2174  03FA  0865               	movf	main@i_485^(0+128),w
  2175  03FB  1D03               	btfss	3,2
  2176  03FC  2BFE               	goto	u3211
  2177  03FD  2BFF               	goto	u3210
  2178  03FE                     u3211:	
  2179  03FE  2C0F               	goto	l255
  2180  03FF                     u3210:	
  2181  03FF                     l3687:	
  2182                           
  2183                           ;main.c: 308:                             {;main.c: 309:                                
      +                           UpdateTimes(Semafori);
  2184  03FF  3064               	movlw	(low (_Semafori| 0))& (0+255)
  2185  0400  120A  118A  2789  120A  118A  	fcall	_UpdateTimes
  2186  0405                     l3689:	
  2187                           
  2188                           ;main.c: 311:                                 time[0]=1;
  2189  0405  3001               	movlw	1
  2190  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0408  00C9               	movwf	_time
  2193  0409  3000               	movlw	0
  2194  040A  00CA               	movwf	_time+1
  2195  040B                     l3691:	
  2196                           
  2197                           ;main.c: 312:                                 time[1]=1;
  2198  040B  3001               	movlw	1
  2199  040C  00CB               	movwf	_time+2
  2200  040D  3000               	movlw	0
  2201  040E  00CC               	movwf	_time+3
  2202  040F                     l255:	
  2203                           ;main.c: 315:                     }
  2204                           
  2205                           
  2206                           ;main.c: 317:                     luciSemaforo(i, lux_select);
  2207  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2208  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2209  0411  0864               	movf	main@lux_select^(0+128),w
  2210  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0414  00C0               	movwf	??_main
  2213  0415  0840               	movf	??_main,w
  2214  0416  00A4               	movwf	luciSemaforo@lux
  2215  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2216  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2217  0419  0865               	movf	main@i_485^(0+128),w
  2218  041A  120A  158A  24DA  120A  118A  	fcall	_luciSemaforo
  2219  041F                     l3693:	
  2220                           
  2221                           ;main.c: 318:                     (*Semafori[i]).lux_select = lux_select;
  2222  041F  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0420  1303               	bcf	3,6	;RP1=0, select bank1
  2224  0421  0864               	movf	main@lux_select^(0+128),w
  2225  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0424  00C0               	movwf	??_main
  2228  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0427  0865               	movf	main@i_485^(0+128),w
  2231  0428  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2232  0429  0084               	movwf	4
  2233  042A  1383               	bcf	3,7	;select IRP bank0
  2234  042B  0800               	movf	0,w
  2235  042C  3E0C               	addlw	12
  2236  042D  0084               	movwf	4
  2237  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2238  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0430  0840               	movf	??_main,w
  2240  0431  0080               	movwf	0
  2241  0432                     l3695:	
  2242                           
  2243                           ;main.c: 319:                     GetDigits(DigitsArr, i, (*Semafori[i]).times[lux_selec
      +                          t] - time[i]);
  2244  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2246  0434  0865               	movf	main@i_485^(0+128),w
  2247  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0437  00C0               	movwf	??_main
  2250  0438  0840               	movf	??_main,w
  2251  0439  00B4               	movwf	GetDigits@index
  2252  043A  1683               	bsf	3,5	;RP0=1, select bank1
  2253  043B  1303               	bcf	3,6	;RP1=0, select bank1
  2254  043C  0865               	movf	main@i_485^(0+128),w
  2255  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2256  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2257  043F  00C1               	movwf	??_main+1
  2258  0440  0741               	addwf	??_main+1,w
  2259  0441  3E49               	addlw	(low (_time| 0))& (0+255)
  2260  0442  0084               	movwf	4
  2261  0443  0800               	movf	0,w
  2262  0444  00C2               	movwf	??_main+2
  2263  0445  0A84               	incf	4,f
  2264  0446  0800               	movf	0,w
  2265  0447  00C3               	movwf	??_main+3
  2266  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2268  044A  0865               	movf	main@i_485^(0+128),w
  2269  044B  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2270  044C  0084               	movwf	4
  2271  044D  0864               	movf	main@lux_select^(0+128),w
  2272  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2273  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0450  00C4               	movwf	??_main+4
  2275  0451  0744               	addwf	??_main+4,w
  2276  0452  0700               	addwf	0,w
  2277  0453  00C5               	movwf	??_main+5
  2278  0454  0845               	movf	??_main+5,w
  2279  0455  0084               	movwf	4
  2280  0456  0800               	movf	0,w
  2281  0457  00C6               	movwf	??_main+6
  2282  0458  0A84               	incf	4,f
  2283  0459  0800               	movf	0,w
  2284  045A  00C7               	movwf	??_main+7
  2285  045B  0842               	movf	??_main+2,w
  2286  045C  0246               	subwf	??_main+6,w
  2287  045D  00B5               	movwf	GetDigits@Time
  2288  045E  0843               	movf	??_main+3,w
  2289  045F  1C03               	skipc
  2290  0460  0A43               	incf	??_main+3,w
  2291  0461  0247               	subwf	??_main+7,w
  2292  0462  00B6               	movwf	GetDigits@Time+1
  2293  0463  3062               	movlw	(low (_DigitsArr| 0))& (0+255)
  2294  0464  120A  118A  2490  120A  118A  	fcall	_GetDigits
  2295  0469                     l3697:	
  2296                           
  2297                           ;main.c: 321:             }
  2298  0469  3001               	movlw	1
  2299  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2300  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2301  046C  00C0               	movwf	??_main
  2302  046D  0840               	movf	??_main,w
  2303  046E  1683               	bsf	3,5	;RP0=1, select bank1
  2304  046F  1303               	bcf	3,6	;RP1=0, select bank1
  2305  0470  07E5               	addwf	main@i_485^(0+128),f
  2306  0471  2B7C               	goto	l3669
  2307  0472                     l3701:	
  2308                           
  2309                           ;main.c: 324:         ShowDigitsOnDisplay();
  2310  0472  120A  118A  26DC  120A  118A  	fcall	_ShowDigitsOnDisplay
  2311  0477                     l3703:	
  2312                           
  2313                           ;main.c: 330:         if (secondPassed.Bit && cycled.Bit)
  2314  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2316  0479  1C57               	btfss	_secondPassed,0
  2317  047A  2C7C               	goto	u3221
  2318  047B  2C7D               	goto	u3220
  2319  047C                     u3221:	
  2320  047C  2C83               	goto	l258
  2321  047D                     u3220:	
  2322  047D                     l3705:	
  2323  047D  1C56               	btfss	_cycled,0
  2324  047E  2C80               	goto	u3231
  2325  047F  2C81               	goto	u3230
  2326  0480                     u3231:	
  2327  0480  2C83               	goto	l258
  2328  0481                     u3230:	
  2329  0481                     l3707:	
  2330                           
  2331                           ;main.c: 331:         {;main.c: 332:             secondPassed.Bit = 0;
  2332  0481  1057               	bcf	_secondPassed,0
  2333                           
  2334                           ;main.c: 333:             cycled.Bit = 0;
  2335  0482  1056               	bcf	_cycled,0
  2336  0483                     l258:	
  2337                           ;main.c: 334:         }
  2338                           
  2339                           
  2340                           ;main.c: 335:         if (secondPassed.Bit && !cycled.Bit)
  2341  0483  1C57               	btfss	_secondPassed,0
  2342  0484  2C86               	goto	u3241
  2343  0485  2C87               	goto	u3240
  2344  0486                     u3241:	
  2345  0486  287B               	goto	l3555
  2346  0487                     u3240:	
  2347  0487                     l3709:	
  2348  0487  1856               	btfsc	_cycled,0
  2349  0488  2C8A               	goto	u3251
  2350  0489  2C8B               	goto	u3250
  2351  048A                     u3251:	
  2352  048A  287B               	goto	l3555
  2353  048B                     u3250:	
  2354  048B                     l3711:	
  2355                           
  2356                           ;main.c: 336:         {;main.c: 337:             cycled.Bit = 1;
  2357  048B  1456               	bsf	_cycled,0
  2358  048C  287B               	goto	l3555
  2359  048D  120A  118A  2810   	ljmp	start
  2360  0490                     __end_of_main:	
  2361                           
  2362                           	psect	text1
  2363  0B19                     __ptext1:	
  2364 ;; *************** function _sendByte *****************
  2365 ;; Defined at:
  2366 ;;		line 399 in file "main.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  byte0           1    wreg     unsigned char 
  2369 ;;  byte1           1   24[BANK0 ] unsigned char 
  2370 ;;  valore          1   25[BANK0 ] unsigned char 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  byte0           1   29[BANK0 ] unsigned char 
  2373 ;;  i               1   31[BANK0 ] unsigned char 
  2374 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2375 ;;		 -> BuildByte@txByte(5), 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       2       0       0       0
  2386 ;;      Locals:         0       3       0       0       0
  2387 ;;      Temps:          0       3       0       0       0
  2388 ;;      Totals:         0       8       0       0       0
  2389 ;;Total ram usage:        8 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    4
  2392 ;; This function calls:
  2393 ;;		_BuildByte
  2394 ;;		_UART_TxChar
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _sendByte
  2402  0B19                     _sendByte:	
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2406                           ;sendByte@byte0 stored from wreg
  2407  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0B1B  00BD               	movwf	sendByte@byte0
  2410  0B1C                     l3423:	
  2411                           
  2412                           ;main.c: 399: void sendByte(char byte0, char byte1, char valore);main.c: 400: {;main.c: 
      +                          401:     char *txByte;;main.c: 402:     txByte = BuildByte(byte0, byte1, valore);
  2413  0B1C  0838               	movf	sendByte@byte1,w
  2414  0B1D  00BA               	movwf	??_sendByte
  2415  0B1E  083A               	movf	??_sendByte,w
  2416  0B1F  00A4               	movwf	BuildByte@byte1
  2417  0B20  0839               	movf	sendByte@valore,w
  2418  0B21  00BB               	movwf	??_sendByte+1
  2419  0B22  083B               	movf	??_sendByte+1,w
  2420  0B23  00A5               	movwf	BuildByte@valore
  2421  0B24  083D               	movf	sendByte@byte0,w
  2422  0B25  120A  118A  255D  120A  158A  	fcall	_BuildByte
  2423  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0B2C  00BC               	movwf	??_sendByte+2
  2426  0B2D  083C               	movf	??_sendByte+2,w
  2427  0B2E  00BE               	movwf	sendByte@txByte
  2428  0B2F                     l3425:	
  2429                           
  2430                           ;main.c: 404:     for (unsigned char i = 0; i < 5; i++)
  2431  0B2F  01BF               	clrf	sendByte@i
  2432  0B30                     l3431:	
  2433                           
  2434                           ;main.c: 405:     {;main.c: 406:         UART_TxChar(*(txByte++));
  2435  0B30  083E               	movf	sendByte@txByte,w
  2436  0B31  0084               	movwf	4
  2437  0B32  1383               	bcf	3,7	;select IRP bank0
  2438  0B33  0800               	movf	0,w
  2439  0B34  120A  118A  27F4  120A  158A  	fcall	_UART_TxChar
  2440  0B39                     l3433:	
  2441  0B39  3001               	movlw	1
  2442  0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0B3C  00BA               	movwf	??_sendByte
  2445  0B3D  083A               	movf	??_sendByte,w
  2446  0B3E  07BE               	addwf	sendByte@txByte,f
  2447  0B3F                     l3435:	
  2448                           
  2449                           ;main.c: 407:     }
  2450  0B3F  3001               	movlw	1
  2451  0B40  00BA               	movwf	??_sendByte
  2452  0B41  083A               	movf	??_sendByte,w
  2453  0B42  07BF               	addwf	sendByte@i,f
  2454  0B43                     l3437:	
  2455  0B43  3005               	movlw	5
  2456  0B44  023F               	subwf	sendByte@i,w
  2457  0B45  1C03               	skipc
  2458  0B46  2B48               	goto	u2941
  2459  0B47  2B49               	goto	u2940
  2460  0B48                     u2941:	
  2461  0B48  2B30               	goto	l3431
  2462  0B49                     u2940:	
  2463  0B49                     l297:	
  2464  0B49  0008               	return
  2465  0B4A                     __end_of_sendByte:	
  2466                           
  2467                           	psect	text2
  2468  07F4                     __ptext2:	
  2469 ;; *************** function _UART_TxChar *****************
  2470 ;; Defined at:
  2471 ;;		line 374 in file "main.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  ch              1    wreg     unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  ch              1    4[BANK0 ] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         0       1       0       0       0
  2487 ;;      Temps:          0       0       0       0       0
  2488 ;;      Totals:         0       1       0       0       0
  2489 ;;Total ram usage:        1 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    3
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_sendByte
  2496 ;;		_UART_Write_Text
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           
  2501                           ;psect for function _UART_TxChar
  2502  07F4                     _UART_TxChar:	
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _UART_TxChar: [wreg]
  2506                           ;UART_TxChar@ch stored from wreg
  2507  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  2508  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  2509  07F6  00A4               	movwf	UART_TxChar@ch
  2510  07F7                     l3115:	
  2511  07F7                     l277:	
  2512                           ;main.c: 377:         ;
  2513                           
  2514                           
  2515                           ;main.c: 376:     while (!TXIF)
  2516  07F7  1E0C               	btfss	12,4	;volatile
  2517  07F8  2FFA               	goto	u2431
  2518  07F9  2FFB               	goto	u2430
  2519  07FA                     u2431:	
  2520  07FA  2FF7               	goto	l277
  2521  07FB                     u2430:	
  2522  07FB                     l279:	
  2523                           
  2524                           ;main.c: 378:     TXIF = 0;
  2525  07FB  120C               	bcf	12,4	;volatile
  2526  07FC                     l3117:	
  2527                           
  2528                           ;main.c: 379:     TXREG = ch;
  2529  07FC  0824               	movf	UART_TxChar@ch,w
  2530  07FD  0099               	movwf	25	;volatile
  2531  07FE                     l280:	
  2532  07FE  0008               	return
  2533  07FF                     __end_of_UART_TxChar:	
  2534                           
  2535                           	psect	text3
  2536  055D                     __ptext3:	
  2537 ;; *************** function _BuildByte *****************
  2538 ;; Defined at:
  2539 ;;		line 2 in file "./CustomLib/Serial.h"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  byte0           1    wreg     unsigned char 
  2542 ;;  byte1           1    4[BANK0 ] unsigned char 
  2543 ;;  valore          1    5[BANK0 ] unsigned char 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  byte0           1    8[BANK0 ] unsigned char 
  2546 ;;  y               2   18[BANK0 ] int 
  2547 ;;  y               2   16[BANK0 ] int 
  2548 ;;  i               2   22[BANK0 ] int 
  2549 ;;  i               2   20[BANK0 ] int 
  2550 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2551 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2552 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      PTR unsigned char 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         0       2       0       0       0
  2563 ;;      Locals:         0      16       0       0       0
  2564 ;;      Temps:          0       2       0       0       0
  2565 ;;      Totals:         0      20       0       0       0
  2566 ;;Total ram usage:       20 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    3
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_sendByte
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function _BuildByte
  2578  055D                     _BuildByte:	
  2579                           
  2580                           ;incstack = 0
  2581                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2582                           ;BuildByte@byte0 stored from wreg
  2583  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2584  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2585  055F  00A8               	movwf	BuildByte@byte0
  2586  0560                     l3033:	
  2587                           
  2588                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2589  0560  0828               	movf	BuildByte@byte0,w
  2590  0561  397F               	andlw	127
  2591  0562  00A6               	movwf	??_BuildByte
  2592  0563  0826               	movf	??_BuildByte,w
  2593  0564  00A9               	movwf	BuildByte@txByte
  2594                           
  2595                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2596  0565  0824               	movf	BuildByte@byte1,w
  2597  0566  397F               	andlw	127
  2598  0567  00A6               	movwf	??_BuildByte
  2599  0568  0826               	movf	??_BuildByte,w
  2600  0569  00AA               	movwf	BuildByte@txByte+1
  2601                           
  2602                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2603  056A  0825               	movf	BuildByte@valore,w
  2604  056B  397F               	andlw	127
  2605  056C  00A6               	movwf	??_BuildByte
  2606  056D  0826               	movf	??_BuildByte,w
  2607  056E  00AB               	movwf	BuildByte@txByte+2
  2608  056F                     l3035:	
  2609                           
  2610                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2611  056F  0825               	movf	BuildByte@valore,w
  2612  0570  00A6               	movwf	??_BuildByte
  2613  0571  3007               	movlw	7
  2614  0572                     u2325:	
  2615  0572  1003               	clrc
  2616  0573  0CA6               	rrf	??_BuildByte,f
  2617  0574  3EFF               	addlw	-1
  2618  0575  1D03               	skipz
  2619  0576  2D72               	goto	u2325
  2620  0577  0826               	movf	??_BuildByte,w
  2621  0578  397F               	andlw	127
  2622  0579  00A7               	movwf	??_BuildByte+1
  2623  057A  0827               	movf	??_BuildByte+1,w
  2624  057B  00AC               	movwf	BuildByte@txByte+3
  2625  057C                     l3037:	
  2626                           
  2627                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2628  057C  01AE               	clrf	BuildByte@sommaRow
  2629  057D                     l3039:	
  2630                           
  2631                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2632  057D  01AF               	clrf	BuildByte@sommaColumn
  2633  057E                     l3041:	
  2634                           
  2635                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2636  057E  01B4               	clrf	BuildByte@i
  2637  057F  01B5               	clrf	BuildByte@i+1
  2638  0580                     l3047:	
  2639                           
  2640                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2641  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2642  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2643  0582  01B0               	clrf	BuildByte@y
  2644  0583  01B1               	clrf	BuildByte@y+1
  2645  0584                     l3053:	
  2646                           
  2647                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2648  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0586  0834               	movf	BuildByte@i,w
  2651  0587  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2652  0588  0084               	movwf	4
  2653  0589  1383               	bcf	3,7	;select IRP bank0
  2654  058A  0800               	movf	0,w
  2655  058B  00A6               	movwf	??_BuildByte
  2656  058C  0A30               	incf	BuildByte@y,w
  2657  058D  2D90               	goto	u2334
  2658  058E                     u2335:	
  2659  058E  1003               	clrc
  2660  058F  0CA6               	rrf	??_BuildByte,f
  2661  0590                     u2334:	
  2662  0590  3EFF               	addlw	-1
  2663  0591  1D03               	skipz
  2664  0592  2D8E               	goto	u2335
  2665  0593  0826               	movf	??_BuildByte,w
  2666  0594  3901               	andlw	1
  2667  0595  00A7               	movwf	??_BuildByte+1
  2668  0596  0827               	movf	??_BuildByte+1,w
  2669  0597  07AE               	addwf	BuildByte@sommaRow,f
  2670  0598                     l3055:	
  2671                           
  2672                           ;./CustomLib/Serial.h: 18:         }
  2673  0598  3001               	movlw	1
  2674  0599  07B0               	addwf	BuildByte@y,f
  2675  059A  1803               	skipnc
  2676  059B  0AB1               	incf	BuildByte@y+1,f
  2677  059C  3000               	movlw	0
  2678  059D  07B1               	addwf	BuildByte@y+1,f
  2679  059E                     l3057:	
  2680  059E  0831               	movf	BuildByte@y+1,w
  2681  059F  3A80               	xorlw	128
  2682  05A0  00FF               	movwf	btemp+1
  2683  05A1  3080               	movlw	128
  2684  05A2  027F               	subwf	btemp+1,w
  2685  05A3  1D03               	skipz
  2686  05A4  2DA7               	goto	u2345
  2687  05A5  3008               	movlw	8
  2688  05A6  0230               	subwf	BuildByte@y,w
  2689  05A7                     u2345:	
  2690  05A7  1C03               	skipc
  2691  05A8  2DAA               	goto	u2341
  2692  05A9  2DAB               	goto	u2340
  2693  05AA                     u2341:	
  2694  05AA  2D84               	goto	l3053
  2695  05AB                     u2340:	
  2696  05AB                     l105:	
  2697                           
  2698                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2699  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2700  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2701  05AD  1C2E               	btfss	BuildByte@sommaRow,0
  2702  05AE  2DB0               	goto	u2351
  2703  05AF  2DB1               	goto	u2350
  2704  05B0                     u2351:	
  2705  05B0  2DB9               	goto	l3061
  2706  05B1                     u2350:	
  2707  05B1                     l3059:	
  2708                           
  2709                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2710  05B1  3080               	movlw	128
  2711  05B2  00A6               	movwf	??_BuildByte
  2712  05B3  0834               	movf	BuildByte@i,w
  2713  05B4  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2714  05B5  0084               	movwf	4
  2715  05B6  0826               	movf	??_BuildByte,w
  2716  05B7  1383               	bcf	3,7	;select IRP bank0
  2717  05B8  0780               	addwf	0,f
  2718  05B9                     l3061:	
  2719                           
  2720                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2721  05B9  01AE               	clrf	BuildByte@sommaRow
  2722  05BA                     l3065:	
  2723                           ;./CustomLib/Serial.h: 23:         }
  2724                           
  2725                           
  2726                           ;./CustomLib/Serial.h: 28:     }
  2727  05BA  3001               	movlw	1
  2728  05BB  07B4               	addwf	BuildByte@i,f
  2729  05BC  1803               	skipnc
  2730  05BD  0AB5               	incf	BuildByte@i+1,f
  2731  05BE  3000               	movlw	0
  2732  05BF  07B5               	addwf	BuildByte@i+1,f
  2733  05C0                     l3067:	
  2734  05C0  0835               	movf	BuildByte@i+1,w
  2735  05C1  3A80               	xorlw	128
  2736  05C2  00FF               	movwf	btemp+1
  2737  05C3  3080               	movlw	128
  2738  05C4  027F               	subwf	btemp+1,w
  2739  05C5  1D03               	skipz
  2740  05C6  2DC9               	goto	u2365
  2741  05C7  3004               	movlw	4
  2742  05C8  0234               	subwf	BuildByte@i,w
  2743  05C9                     u2365:	
  2744  05C9  1C03               	skipc
  2745  05CA  2DCC               	goto	u2361
  2746  05CB  2DCD               	goto	u2360
  2747  05CC                     u2361:	
  2748  05CC  2D80               	goto	l3047
  2749  05CD                     u2360:	
  2750  05CD                     l3069:	
  2751                           
  2752                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2753  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2754  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2755  05CF  01B6               	clrf	BuildByte@i_341
  2756  05D0  01B7               	clrf	BuildByte@i_341+1
  2757  05D1                     l3075:	
  2758                           
  2759                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2760  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2761  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2762  05D3  01B2               	clrf	BuildByte@y_342
  2763  05D4  01B3               	clrf	BuildByte@y_342+1
  2764  05D5                     l3081:	
  2765                           
  2766                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2767  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  2768  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  2769  05D7  0832               	movf	BuildByte@y_342,w
  2770  05D8  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2771  05D9  0084               	movwf	4
  2772  05DA  1383               	bcf	3,7	;select IRP bank0
  2773  05DB  0800               	movf	0,w
  2774  05DC  00A6               	movwf	??_BuildByte
  2775  05DD  0A36               	incf	BuildByte@i_341,w
  2776  05DE  2DE1               	goto	u2374
  2777  05DF                     u2375:	
  2778  05DF  1003               	clrc
  2779  05E0  0CA6               	rrf	??_BuildByte,f
  2780  05E1                     u2374:	
  2781  05E1  3EFF               	addlw	-1
  2782  05E2  1D03               	skipz
  2783  05E3  2DDF               	goto	u2375
  2784  05E4  0826               	movf	??_BuildByte,w
  2785  05E5  3901               	andlw	1
  2786  05E6  00A7               	movwf	??_BuildByte+1
  2787  05E7  0827               	movf	??_BuildByte+1,w
  2788  05E8  07AF               	addwf	BuildByte@sommaColumn,f
  2789  05E9                     l3083:	
  2790                           
  2791                           ;./CustomLib/Serial.h: 37:         }
  2792  05E9  3001               	movlw	1
  2793  05EA  07B2               	addwf	BuildByte@y_342,f
  2794  05EB  1803               	skipnc
  2795  05EC  0AB3               	incf	BuildByte@y_342+1,f
  2796  05ED  3000               	movlw	0
  2797  05EE  07B3               	addwf	BuildByte@y_342+1,f
  2798  05EF                     l3085:	
  2799  05EF  0833               	movf	BuildByte@y_342+1,w
  2800  05F0  3A80               	xorlw	128
  2801  05F1  00FF               	movwf	btemp+1
  2802  05F2  3080               	movlw	128
  2803  05F3  027F               	subwf	btemp+1,w
  2804  05F4  1D03               	skipz
  2805  05F5  2DF8               	goto	u2385
  2806  05F6  3004               	movlw	4
  2807  05F7  0232               	subwf	BuildByte@y_342,w
  2808  05F8                     u2385:	
  2809  05F8  1C03               	skipc
  2810  05F9  2DFB               	goto	u2381
  2811  05FA  2DFC               	goto	u2380
  2812  05FB                     u2381:	
  2813  05FB  2DD5               	goto	l3081
  2814  05FC                     u2380:	
  2815  05FC                     l111:	
  2816                           
  2817                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2818  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2819  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2820  05FE  1C2F               	btfss	BuildByte@sommaColumn,0
  2821  05FF  2E01               	goto	u2391
  2822  0600  2E02               	goto	u2390
  2823  0601                     u2391:	
  2824  0601  2E0F               	goto	l3089
  2825  0602                     u2390:	
  2826  0602                     l3087:	
  2827                           
  2828                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2829  0602  3001               	movlw	1
  2830  0603  00A6               	movwf	??_BuildByte
  2831  0604  0A36               	incf	BuildByte@i_341,w
  2832  0605  2E08               	goto	u2404
  2833  0606                     u2405:	
  2834  0606  1003               	clrc
  2835  0607  0DA6               	rlf	??_BuildByte,f
  2836  0608                     u2404:	
  2837  0608  3EFF               	addlw	-1
  2838  0609  1D03               	skipz
  2839  060A  2E06               	goto	u2405
  2840  060B  0826               	movf	??_BuildByte,w
  2841  060C  00A7               	movwf	??_BuildByte+1
  2842  060D  0827               	movf	??_BuildByte+1,w
  2843  060E  07AD               	addwf	BuildByte@txByte+4,f
  2844  060F                     l3089:	
  2845                           
  2846                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2847  060F  01AF               	clrf	BuildByte@sommaColumn
  2848  0610                     l3093:	
  2849                           ;./CustomLib/Serial.h: 42:         }
  2850                           
  2851                           
  2852                           ;./CustomLib/Serial.h: 47:     }
  2853  0610  3001               	movlw	1
  2854  0611  07B6               	addwf	BuildByte@i_341,f
  2855  0612  1803               	skipnc
  2856  0613  0AB7               	incf	BuildByte@i_341+1,f
  2857  0614  3000               	movlw	0
  2858  0615  07B7               	addwf	BuildByte@i_341+1,f
  2859  0616                     l3095:	
  2860  0616  0837               	movf	BuildByte@i_341+1,w
  2861  0617  3A80               	xorlw	128
  2862  0618  00FF               	movwf	btemp+1
  2863  0619  3080               	movlw	128
  2864  061A  027F               	subwf	btemp+1,w
  2865  061B  1D03               	skipz
  2866  061C  2E1F               	goto	u2415
  2867  061D  3008               	movlw	8
  2868  061E  0236               	subwf	BuildByte@i_341,w
  2869  061F                     u2415:	
  2870  061F  1C03               	skipc
  2871  0620  2E22               	goto	u2411
  2872  0621  2E23               	goto	u2410
  2873  0622                     u2411:	
  2874  0622  2DD1               	goto	l3075
  2875  0623                     u2410:	
  2876  0623                     l3097:	
  2877                           
  2878                           ;./CustomLib/Serial.h: 49:     return txByte;
  2879  0623  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2880  0624                     l114:	
  2881  0624  0008               	return
  2882  0625                     __end_of_BuildByte:	
  2883                           
  2884                           	psect	text4
  2885  0BFF                     __ptext4:	
  2886 ;; *************** function _rand *****************
  2887 ;; Defined at:
  2888 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2   17[BANK0 ] int 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0, pclath, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       2       0       0       0
  2903 ;;      Locals:         0       0       0       0       0
  2904 ;;      Temps:          0       5       0       0       0
  2905 ;;      Totals:         0       7       0       0       0
  2906 ;;Total ram usage:        7 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    4
  2909 ;; This function calls:
  2910 ;;		___lmul
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function _rand
  2918  0BFF                     _rand:	
  2919  0BFF                     l3415:	
  2920                           ;incstack = 0
  2921                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2922                           
  2923  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0C01  0861               	movf	_randx+3,w
  2926  0C02  00A7               	movwf	___lmul@multiplier+3
  2927  0C03  0860               	movf	_randx+2,w
  2928  0C04  00A6               	movwf	___lmul@multiplier+2
  2929  0C05  085F               	movf	_randx+1,w
  2930  0C06  00A5               	movwf	___lmul@multiplier+1
  2931  0C07  085E               	movf	_randx,w
  2932  0C08  00A4               	movwf	___lmul@multiplier
  2933  0C09  3041               	movlw	65
  2934  0C0A  00AB               	movwf	___lmul@multiplicand+3
  2935  0C0B  30C6               	movlw	198
  2936  0C0C  00AA               	movwf	___lmul@multiplicand+2
  2937  0C0D  304E               	movlw	78
  2938  0C0E  00A9               	movwf	___lmul@multiplicand+1
  2939  0C0F  306D               	movlw	109
  2940  0C10  00A8               	movwf	___lmul@multiplicand
  2941  0C11  120A  158A  2446  120A  158A  	fcall	___lmul
  2942  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0C18  0827               	movf	?___lmul+3,w
  2945  0C19  00E1               	movwf	_randx+3
  2946  0C1A  0826               	movf	?___lmul+2,w
  2947  0C1B  00E0               	movwf	_randx+2
  2948  0C1C  0825               	movf	?___lmul+1,w
  2949  0C1D  00DF               	movwf	_randx+1
  2950  0C1E  0824               	movf	?___lmul,w
  2951  0C1F  00DE               	movwf	_randx
  2952  0C20                     l3417:	
  2953  0C20  3039               	movlw	57
  2954  0C21  07DE               	addwf	_randx,f
  2955  0C22  3030               	movlw	48
  2956  0C23  1803               	skipnc
  2957  0C24  3031               	movlw	49
  2958  0C25  07DF               	addwf	_randx+1,f
  2959  0C26  3000               	movlw	0
  2960  0C27  1803               	skipnc
  2961  0C28  3001               	movlw	1
  2962  0C29  07E0               	addwf	_randx+2,f
  2963  0C2A  3000               	movlw	0
  2964  0C2B  1803               	skipnc
  2965  0C2C  3001               	movlw	1
  2966  0C2D  07E1               	addwf	_randx+3,f
  2967  0C2E                     l3419:	
  2968  0C2E  085E               	movf	_randx,w
  2969  0C2F  00B3               	movwf	??_rand
  2970  0C30  085F               	movf	_randx+1,w
  2971  0C31  00B4               	movwf	??_rand+1
  2972  0C32  0860               	movf	_randx+2,w
  2973  0C33  00B5               	movwf	??_rand+2
  2974  0C34  0861               	movf	_randx+3,w
  2975  0C35  00B6               	movwf	??_rand+3
  2976  0C36  3010               	movlw	16
  2977  0C37  00B7               	movwf	??_rand+4
  2978  0C38                     u2935:	
  2979  0C38  0D36               	rlf	??_rand+3,w
  2980  0C39  0CB6               	rrf	??_rand+3,f
  2981  0C3A  0CB5               	rrf	??_rand+2,f
  2982  0C3B  0CB4               	rrf	??_rand+1,f
  2983  0C3C  0CB3               	rrf	??_rand,f
  2984  0C3D                     u2930:	
  2985  0C3D  0BB7               	decfsz	??_rand+4,f
  2986  0C3E  2C38               	goto	u2935
  2987  0C3F  30FF               	movlw	255
  2988  0C40  0533               	andwf	??_rand,w
  2989  0C41  00B1               	movwf	?_rand
  2990  0C42  307F               	movlw	127
  2991  0C43  0534               	andwf	??_rand+1,w
  2992  0C44  00B2               	movwf	?_rand+1
  2993  0C45                     l889:	
  2994  0C45  0008               	return
  2995  0C46                     __end_of_rand:	
  2996                           
  2997                           	psect	text5
  2998  0C46                     __ptext5:	
  2999 ;; *************** function ___lmul *****************
  3000 ;; Defined at:
  3001 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  multiplier      4    4[BANK0 ] unsigned long 
  3004 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  product         4   13[BANK0 ] unsigned long 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  4    4[BANK0 ] unsigned long 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         0       8       0       0       0
  3017 ;;      Locals:         0       4       0       0       0
  3018 ;;      Temps:          0       1       0       0       0
  3019 ;;      Totals:         0      13       0       0       0
  3020 ;;Total ram usage:       13 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    3
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_rand
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function ___lmul
  3032  0C46                     ___lmul:	
  3033  0C46                     l3151:	
  3034                           ;incstack = 0
  3035                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3036                           
  3037  0C46  3000               	movlw	0
  3038  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0C49  00B0               	movwf	___lmul@product+3
  3041  0C4A  3000               	movlw	0
  3042  0C4B  00AF               	movwf	___lmul@product+2
  3043  0C4C  3000               	movlw	0
  3044  0C4D  00AE               	movwf	___lmul@product+1
  3045  0C4E  3000               	movlw	0
  3046  0C4F  00AD               	movwf	___lmul@product
  3047  0C50                     l3153:	
  3048  0C50  1C24               	btfss	___lmul@multiplier,0
  3049  0C51  2C53               	goto	u2481
  3050  0C52  2C54               	goto	u2480
  3051  0C53                     u2481:	
  3052  0C53  2C6B               	goto	l3157
  3053  0C54                     u2480:	
  3054  0C54                     l3155:	
  3055  0C54  0828               	movf	___lmul@multiplicand,w
  3056  0C55  07AD               	addwf	___lmul@product,f
  3057  0C56  0829               	movf	___lmul@multiplicand+1,w
  3058  0C57  1103               	clrz
  3059  0C58  1803               	skipnc
  3060  0C59  3E01               	addlw	1
  3061  0C5A  1903               	skipnz
  3062  0C5B  2C5D               	goto	u2491
  3063  0C5C  07AE               	addwf	___lmul@product+1,f
  3064  0C5D                     u2491:	
  3065  0C5D  082A               	movf	___lmul@multiplicand+2,w
  3066  0C5E  1103               	clrz
  3067  0C5F  1803               	skipnc
  3068  0C60  3E01               	addlw	1
  3069  0C61  1903               	skipnz
  3070  0C62  2C64               	goto	u2492
  3071  0C63  07AF               	addwf	___lmul@product+2,f
  3072  0C64                     u2492:	
  3073  0C64  082B               	movf	___lmul@multiplicand+3,w
  3074  0C65  1103               	clrz
  3075  0C66  1803               	skipnc
  3076  0C67  3E01               	addlw	1
  3077  0C68  1903               	skipnz
  3078  0C69  2C6B               	goto	u2493
  3079  0C6A  07B0               	addwf	___lmul@product+3,f
  3080  0C6B                     u2493:	
  3081  0C6B                     l3157:	
  3082  0C6B  3001               	movlw	1
  3083  0C6C  00AC               	movwf	??___lmul
  3084  0C6D                     u2505:	
  3085  0C6D  1003               	clrc
  3086  0C6E  0DA8               	rlf	___lmul@multiplicand,f
  3087  0C6F  0DA9               	rlf	___lmul@multiplicand+1,f
  3088  0C70  0DAA               	rlf	___lmul@multiplicand+2,f
  3089  0C71  0DAB               	rlf	___lmul@multiplicand+3,f
  3090  0C72  0BAC               	decfsz	??___lmul,f
  3091  0C73  2C6D               	goto	u2505
  3092  0C74                     l3159:	
  3093  0C74  3001               	movlw	1
  3094  0C75                     u2515:	
  3095  0C75  1003               	clrc
  3096  0C76  0CA7               	rrf	___lmul@multiplier+3,f
  3097  0C77  0CA6               	rrf	___lmul@multiplier+2,f
  3098  0C78  0CA5               	rrf	___lmul@multiplier+1,f
  3099  0C79  0CA4               	rrf	___lmul@multiplier,f
  3100  0C7A  3EFF               	addlw	-1
  3101  0C7B  1D03               	skipz
  3102  0C7C  2C75               	goto	u2515
  3103  0C7D  0827               	movf	___lmul@multiplier+3,w
  3104  0C7E  0426               	iorwf	___lmul@multiplier+2,w
  3105  0C7F  0425               	iorwf	___lmul@multiplier+1,w
  3106  0C80  0424               	iorwf	___lmul@multiplier,w
  3107  0C81  1D03               	skipz
  3108  0C82  2C84               	goto	u2521
  3109  0C83  2C85               	goto	u2520
  3110  0C84                     u2521:	
  3111  0C84  2C50               	goto	l3153
  3112  0C85                     u2520:	
  3113  0C85                     l3161:	
  3114  0C85  0830               	movf	___lmul@product+3,w
  3115  0C86  00A7               	movwf	?___lmul+3
  3116  0C87  082F               	movf	___lmul@product+2,w
  3117  0C88  00A6               	movwf	?___lmul+2
  3118  0C89  082E               	movf	___lmul@product+1,w
  3119  0C8A  00A5               	movwf	?___lmul+1
  3120  0C8B  082D               	movf	___lmul@product,w
  3121  0C8C  00A4               	movwf	?___lmul
  3122  0C8D                     l453:	
  3123  0C8D  0008               	return
  3124  0C8E                     __end_of___lmul:	
  3125                           
  3126                           	psect	text6
  3127  0B4A                     __ptext6:	
  3128 ;; *************** function _map *****************
  3129 ;; Defined at:
  3130 ;;		line 127 in file "./CustomLib/TrafficLight.h"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  x               2   20[BANK0 ] int 
  3133 ;;  in_min          2   22[BANK0 ] int 
  3134 ;;  in_max          2   24[BANK0 ] int 
  3135 ;;  out_min         2   26[BANK0 ] int 
  3136 ;;  out_max         2   28[BANK0 ] int 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  2   20[BANK0 ] int 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, pclath, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3148 ;;      Params:         0      10       0       0       0
  3149 ;;      Locals:         0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0
  3151 ;;      Totals:         0      10       0       0       0
  3152 ;;Total ram usage:       10 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    4
  3155 ;; This function calls:
  3156 ;;		___awdiv
  3157 ;;		___wmul
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function _map
  3165  0B4A                     _map:	
  3166  0B4A                     l3393:	
  3167                           ;incstack = 0
  3168                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3169                           
  3170                           
  3171                           ;./CustomLib/TrafficLight.h: 127: int map(int x, int in_min, int in_max, int out_min, in
      +                          t out_max);./CustomLib/TrafficLight.h: 128: {;./CustomLib/TrafficLight.h: 129:     retur
      +                          n (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3172  0B4A  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0B4B  1303               	bcf	3,6	;RP1=0, select bank0
  3174  0B4C  0836               	movf	map@in_min,w
  3175  0B4D  0238               	subwf	map@in_max,w
  3176  0B4E  00AB               	movwf	___awdiv@divisor
  3177  0B4F  0837               	movf	map@in_min+1,w
  3178  0B50  1C03               	skipc
  3179  0B51  0A37               	incf	map@in_min+1,w
  3180  0B52  0239               	subwf	map@in_max+1,w
  3181  0B53  00AC               	movwf	___awdiv@divisor+1
  3182  0B54  0836               	movf	map@in_min,w
  3183  0B55  0234               	subwf	map@x,w
  3184  0B56  00A4               	movwf	___wmul@multiplier
  3185  0B57  0837               	movf	map@in_min+1,w
  3186  0B58  1C03               	skipc
  3187  0B59  0A37               	incf	map@in_min+1,w
  3188  0B5A  0235               	subwf	map@x+1,w
  3189  0B5B  00A5               	movwf	___wmul@multiplier+1
  3190  0B5C  083A               	movf	map@out_min,w
  3191  0B5D  023C               	subwf	map@out_max,w
  3192  0B5E  00A6               	movwf	___wmul@multiplicand
  3193  0B5F  083B               	movf	map@out_min+1,w
  3194  0B60  1C03               	skipc
  3195  0B61  0A3B               	incf	map@out_min+1,w
  3196  0B62  023D               	subwf	map@out_max+1,w
  3197  0B63  00A7               	movwf	___wmul@multiplicand+1
  3198  0B64  120A  158A  22F2  120A  158A  	fcall	___wmul
  3199  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  3201  0B6B  0825               	movf	?___wmul+1,w
  3202  0B6C  00AE               	movwf	___awdiv@dividend+1
  3203  0B6D  0824               	movf	?___wmul,w
  3204  0B6E  00AD               	movwf	___awdiv@dividend
  3205  0B6F  120A  158A  26FA  120A  158A  	fcall	___awdiv
  3206  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0B76  083A               	movf	map@out_min,w
  3209  0B77  072B               	addwf	?___awdiv,w
  3210  0B78  00B4               	movwf	?_map
  3211  0B79  083B               	movf	map@out_min+1,w
  3212  0B7A  1803               	skipnc
  3213  0B7B  0A3B               	incf	map@out_min+1,w
  3214  0B7C  072C               	addwf	?___awdiv+1,w
  3215  0B7D  00B5               	movwf	?_map+1
  3216  0B7E                     l169:	
  3217  0B7E  0008               	return
  3218  0B7F                     __end_of_map:	
  3219                           
  3220                           	psect	text7
  3221  0AF2                     __ptext7:	
  3222 ;; *************** function ___wmul *****************
  3223 ;; Defined at:
  3224 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3227 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  product         2    8[BANK0 ] unsigned int 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  2    4[BANK0 ] unsigned int 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3239 ;;      Params:         0       4       0       0       0
  3240 ;;      Locals:         0       2       0       0       0
  3241 ;;      Temps:          0       0       0       0       0
  3242 ;;      Totals:         0       6       0       0       0
  3243 ;;Total ram usage:        6 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    3
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_map
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           
  3254                           ;psect for function ___wmul
  3255  0AF2                     ___wmul:	
  3256  0AF2                     l3137:	
  3257                           ;incstack = 0
  3258                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3259                           
  3260  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0AF4  01A8               	clrf	___wmul@product
  3263  0AF5  01A9               	clrf	___wmul@product+1
  3264  0AF6                     l3139:	
  3265  0AF6  1C24               	btfss	___wmul@multiplier,0
  3266  0AF7  2AF9               	goto	u2441
  3267  0AF8  2AFA               	goto	u2440
  3268  0AF9                     u2441:	
  3269  0AF9  2B00               	goto	l439
  3270  0AFA                     u2440:	
  3271  0AFA                     l3141:	
  3272  0AFA  0826               	movf	___wmul@multiplicand,w
  3273  0AFB  07A8               	addwf	___wmul@product,f
  3274  0AFC  1803               	skipnc
  3275  0AFD  0AA9               	incf	___wmul@product+1,f
  3276  0AFE  0827               	movf	___wmul@multiplicand+1,w
  3277  0AFF  07A9               	addwf	___wmul@product+1,f
  3278  0B00                     l439:	
  3279  0B00  3001               	movlw	1
  3280  0B01                     u2455:	
  3281  0B01  1003               	clrc
  3282  0B02  0DA6               	rlf	___wmul@multiplicand,f
  3283  0B03  0DA7               	rlf	___wmul@multiplicand+1,f
  3284  0B04  3EFF               	addlw	-1
  3285  0B05  1D03               	skipz
  3286  0B06  2B01               	goto	u2455
  3287  0B07                     l3143:	
  3288  0B07  3001               	movlw	1
  3289  0B08                     u2465:	
  3290  0B08  1003               	clrc
  3291  0B09  0CA5               	rrf	___wmul@multiplier+1,f
  3292  0B0A  0CA4               	rrf	___wmul@multiplier,f
  3293  0B0B  3EFF               	addlw	-1
  3294  0B0C  1D03               	skipz
  3295  0B0D  2B08               	goto	u2465
  3296  0B0E                     l3145:	
  3297  0B0E  0824               	movf	___wmul@multiplier,w
  3298  0B0F  0425               	iorwf	___wmul@multiplier+1,w
  3299  0B10  1D03               	btfss	3,2
  3300  0B11  2B13               	goto	u2471
  3301  0B12  2B14               	goto	u2470
  3302  0B13                     u2471:	
  3303  0B13  2AF6               	goto	l3139
  3304  0B14                     u2470:	
  3305  0B14                     l3147:	
  3306  0B14  0829               	movf	___wmul@product+1,w
  3307  0B15  00A5               	movwf	?___wmul+1
  3308  0B16  0828               	movf	___wmul@product,w
  3309  0B17  00A4               	movwf	?___wmul
  3310  0B18                     l441:	
  3311  0B18  0008               	return
  3312  0B19                     __end_of___wmul:	
  3313                           
  3314                           	psect	text8
  3315  0CDA                     __ptext8:	
  3316 ;; *************** function _luciSemaforo *****************
  3317 ;; Defined at:
  3318 ;;		line 431 in file "main.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  index           1    wreg     unsigned char 
  3321 ;;  lux             1    4[BANK0 ] unsigned char 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  index           1    7[BANK0 ] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3333 ;;      Params:         0       1       0       0       0
  3334 ;;      Locals:         0       1       0       0       0
  3335 ;;      Temps:          0       2       0       0       0
  3336 ;;      Totals:         0       4       0       0       0
  3337 ;;Total ram usage:        4 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    3
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _luciSemaforo
  3349  0CDA                     _luciSemaforo:	
  3350                           
  3351                           ;incstack = 0
  3352                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3353                           ;luciSemaforo@index stored from wreg
  3354  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0CDC  00A7               	movwf	luciSemaforo@index
  3357  0CDD                     l3449:	
  3358                           
  3359                           ;main.c: 431: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 432: {;m
      +                          ain.c: 433:     switch (index)
  3360  0CDD  2D1C               	goto	l3461
  3361  0CDE                     l311:	
  3362                           ;main.c: 437:         {;main.c: 438:         case 0:
  3363                           
  3364                           
  3365                           ;main.c: 439:             PORTCbits.RC1 = 0;
  3366  0CDE  1087               	bcf	7,1	;volatile
  3367                           
  3368                           ;main.c: 440:             PORTCbits.RC2 = 0;
  3369  0CDF  1107               	bcf	7,2	;volatile
  3370                           
  3371                           ;main.c: 441:             PORTCbits.RC0 = 1;
  3372  0CE0  1407               	bsf	7,0	;volatile
  3373                           
  3374                           ;main.c: 442:             break;
  3375  0CE1  2D2C               	goto	l322
  3376  0CE2                     l313:	
  3377                           ;main.c: 443:         case 1:
  3378                           
  3379                           
  3380                           ;main.c: 444:             PORTCbits.RC0 = 0;
  3381  0CE2  1007               	bcf	7,0	;volatile
  3382                           
  3383                           ;main.c: 445:             PORTCbits.RC2 = 0;
  3384  0CE3  1107               	bcf	7,2	;volatile
  3385                           
  3386                           ;main.c: 446:             PORTCbits.RC1 = 1;
  3387  0CE4  1487               	bsf	7,1	;volatile
  3388                           
  3389                           ;main.c: 447:             break;
  3390  0CE5  2D2C               	goto	l322
  3391  0CE6                     l314:	
  3392                           ;main.c: 448:         case 2:
  3393                           
  3394                           
  3395                           ;main.c: 449:             PORTCbits.RC0 = 0;
  3396  0CE6  1007               	bcf	7,0	;volatile
  3397                           
  3398                           ;main.c: 450:             PORTCbits.RC1 = 0;
  3399  0CE7  1087               	bcf	7,1	;volatile
  3400                           
  3401                           ;main.c: 451:             PORTCbits.RC2 = 1;
  3402  0CE8  1507               	bsf	7,2	;volatile
  3403                           
  3404                           ;main.c: 452:             break;
  3405  0CE9  2D2C               	goto	l322
  3406  0CEA                     l3453:	
  3407  0CEA  0824               	movf	luciSemaforo@lux,w
  3408  0CEB  00A5               	movwf	??_luciSemaforo
  3409  0CEC  01A6               	clrf	??_luciSemaforo+1
  3410                           
  3411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3412                           ; Switch size 1, requested type "simple"
  3413                           ; Number of cases is 1, Range of values is 0 to 0
  3414                           ; switch strategies available:
  3415                           ; Name         Instructions Cycles
  3416                           ; simple_byte            4     3 (average)
  3417                           ; direct_byte           11     8 (fixed)
  3418                           ; jumptable            260     6 (fixed)
  3419                           ;	Chosen strategy is simple_byte
  3420  0CED  0826               	movf	??_luciSemaforo+1,w
  3421  0CEE  3A00               	xorlw	0	; case 0
  3422  0CEF  1903               	skipnz
  3423  0CF0  2CF2               	goto	l3957
  3424  0CF1  2D2C               	goto	l322
  3425  0CF2                     l3957:	
  3426                           
  3427                           ; Switch size 1, requested type "simple"
  3428                           ; Number of cases is 3, Range of values is 0 to 2
  3429                           ; switch strategies available:
  3430                           ; Name         Instructions Cycles
  3431                           ; simple_byte           10     6 (average)
  3432                           ; direct_byte           17     8 (fixed)
  3433                           ; jumptable            260     6 (fixed)
  3434                           ;	Chosen strategy is simple_byte
  3435  0CF2  0825               	movf	??_luciSemaforo,w
  3436  0CF3  3A00               	xorlw	0	; case 0
  3437  0CF4  1903               	skipnz
  3438  0CF5  2CDE               	goto	l311
  3439  0CF6  3A01               	xorlw	1	; case 1
  3440  0CF7  1903               	skipnz
  3441  0CF8  2CE2               	goto	l313
  3442  0CF9  3A03               	xorlw	3	; case 2
  3443  0CFA  1903               	skipnz
  3444  0CFB  2CE6               	goto	l314
  3445  0CFC  2D2C               	goto	l322
  3446  0CFD                     l318:	
  3447                           ;main.c: 458:         {;main.c: 459:         case 0:
  3448                           
  3449                           
  3450                           ;main.c: 460:             PORTBbits.RB1 = 0;
  3451  0CFD  1086               	bcf	6,1	;volatile
  3452                           
  3453                           ;main.c: 461:             PORTBbits.RB6 = 0;
  3454  0CFE  1306               	bcf	6,6	;volatile
  3455                           
  3456                           ;main.c: 462:             PORTBbits.RB7 = 1;
  3457  0CFF  1786               	bsf	6,7	;volatile
  3458                           
  3459                           ;main.c: 463:             break;
  3460  0D00  2D2C               	goto	l322
  3461  0D01                     l320:	
  3462                           ;main.c: 464:         case 1:
  3463                           
  3464                           
  3465                           ;main.c: 465:             PORTBbits.RB7 = 0;
  3466  0D01  1386               	bcf	6,7	;volatile
  3467                           
  3468                           ;main.c: 466:             PORTBbits.RB6 = 0;
  3469  0D02  1306               	bcf	6,6	;volatile
  3470                           
  3471                           ;main.c: 467:             PORTBbits.RB1 = 1;
  3472  0D03  1486               	bsf	6,1	;volatile
  3473                           
  3474                           ;main.c: 468:             break;
  3475  0D04  2D2C               	goto	l322
  3476  0D05                     l321:	
  3477                           ;main.c: 469:         case 2:
  3478                           
  3479                           
  3480                           ;main.c: 470:             PORTBbits.RB7 = 0;
  3481  0D05  1386               	bcf	6,7	;volatile
  3482                           
  3483                           ;main.c: 471:             PORTBbits.RB1 = 0;
  3484  0D06  1086               	bcf	6,1	;volatile
  3485                           
  3486                           ;main.c: 472:             PORTBbits.RB6 = 1;
  3487  0D07  1706               	bsf	6,6	;volatile
  3488                           
  3489                           ;main.c: 473:             break;
  3490  0D08  2D2C               	goto	l322
  3491  0D09                     l3457:	
  3492  0D09  0824               	movf	luciSemaforo@lux,w
  3493  0D0A  00A5               	movwf	??_luciSemaforo
  3494  0D0B  01A6               	clrf	??_luciSemaforo+1
  3495                           
  3496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3497                           ; Switch size 1, requested type "simple"
  3498                           ; Number of cases is 1, Range of values is 0 to 0
  3499                           ; switch strategies available:
  3500                           ; Name         Instructions Cycles
  3501                           ; simple_byte            4     3 (average)
  3502                           ; direct_byte           11     8 (fixed)
  3503                           ; jumptable            260     6 (fixed)
  3504                           ;	Chosen strategy is simple_byte
  3505  0D0C  0826               	movf	??_luciSemaforo+1,w
  3506  0D0D  3A00               	xorlw	0	; case 0
  3507  0D0E  1903               	skipnz
  3508  0D0F  2D11               	goto	l3959
  3509  0D10  2D2C               	goto	l322
  3510  0D11                     l3959:	
  3511                           
  3512                           ; Switch size 1, requested type "simple"
  3513                           ; Number of cases is 3, Range of values is 0 to 2
  3514                           ; switch strategies available:
  3515                           ; Name         Instructions Cycles
  3516                           ; simple_byte           10     6 (average)
  3517                           ; direct_byte           17     8 (fixed)
  3518                           ; jumptable            260     6 (fixed)
  3519                           ;	Chosen strategy is simple_byte
  3520  0D11  0825               	movf	??_luciSemaforo,w
  3521  0D12  3A00               	xorlw	0	; case 0
  3522  0D13  1903               	skipnz
  3523  0D14  2CFD               	goto	l318
  3524  0D15  3A01               	xorlw	1	; case 1
  3525  0D16  1903               	skipnz
  3526  0D17  2D01               	goto	l320
  3527  0D18  3A03               	xorlw	3	; case 2
  3528  0D19  1903               	skipnz
  3529  0D1A  2D05               	goto	l321
  3530  0D1B  2D2C               	goto	l322
  3531  0D1C                     l3461:	
  3532  0D1C  0827               	movf	luciSemaforo@index,w
  3533  0D1D  00A5               	movwf	??_luciSemaforo
  3534  0D1E  01A6               	clrf	??_luciSemaforo+1
  3535                           
  3536                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3537                           ; Switch size 1, requested type "simple"
  3538                           ; Number of cases is 1, Range of values is 0 to 0
  3539                           ; switch strategies available:
  3540                           ; Name         Instructions Cycles
  3541                           ; simple_byte            4     3 (average)
  3542                           ; direct_byte           11     8 (fixed)
  3543                           ; jumptable            260     6 (fixed)
  3544                           ;	Chosen strategy is simple_byte
  3545  0D1F  0826               	movf	??_luciSemaforo+1,w
  3546  0D20  3A00               	xorlw	0	; case 0
  3547  0D21  1903               	skipnz
  3548  0D22  2D24               	goto	l3961
  3549  0D23  2D2C               	goto	l322
  3550  0D24                     l3961:	
  3551                           
  3552                           ; Switch size 1, requested type "simple"
  3553                           ; Number of cases is 2, Range of values is 0 to 1
  3554                           ; switch strategies available:
  3555                           ; Name         Instructions Cycles
  3556                           ; simple_byte            7     4 (average)
  3557                           ; direct_byte           14     8 (fixed)
  3558                           ; jumptable            260     6 (fixed)
  3559                           ;	Chosen strategy is simple_byte
  3560  0D24  0825               	movf	??_luciSemaforo,w
  3561  0D25  3A00               	xorlw	0	; case 0
  3562  0D26  1903               	skipnz
  3563  0D27  2CEA               	goto	l3453
  3564  0D28  3A01               	xorlw	1	; case 1
  3565  0D29  1903               	skipnz
  3566  0D2A  2D09               	goto	l3457
  3567  0D2B  2D2C               	goto	l322
  3568  0D2C                     l322:	
  3569  0D2C  0008               	return
  3570  0D2D                     __end_of_luciSemaforo:	
  3571                           
  3572                           	psect	text9
  3573  0A8F                     __ptext9:	
  3574 ;; *************** function _init_ADC *****************
  3575 ;; Defined at:
  3576 ;;		line 343 in file "main.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0
  3592 ;;      Temps:          0       1       0       0       0
  3593 ;;      Totals:         0       1       0       0       0
  3594 ;;Total ram usage:        1 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:    3
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_main
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _init_ADC
  3606  0A8F                     _init_ADC:	
  3607  0A8F                     l3397:	
  3608                           ;incstack = 0
  3609                           ; Regs used in _init_ADC: [wreg+status,2]
  3610                           
  3611                           
  3612                           ;main.c: 345:     TRISA = 0xE3;
  3613  0A8F  30E3               	movlw	227
  3614  0A90  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0A91  1303               	bcf	3,6	;RP1=0, select bank1
  3616  0A92  0085               	movwf	5	;volatile
  3617  0A93                     l3399:	
  3618                           
  3619                           ;main.c: 346:     ADCON0 = 0x00;
  3620  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  3621  0A94  1303               	bcf	3,6	;RP1=0, select bank0
  3622  0A95  019F               	clrf	31	;volatile
  3623  0A96                     l3401:	
  3624                           
  3625                           ;main.c: 347:     ADCON1 = 0x80;
  3626  0A96  3080               	movlw	128
  3627  0A97  1683               	bsf	3,5	;RP0=1, select bank1
  3628  0A98  1303               	bcf	3,6	;RP1=0, select bank1
  3629  0A99  009F               	movwf	31	;volatile
  3630  0A9A                     l3403:	
  3631                           
  3632                           ;main.c: 348:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3633  0A9A  3019               	movlw	25
  3634  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0A9D  00A4               	movwf	??_init_ADC
  3637  0A9E                     u3277:	
  3638  0A9E  0BA4               	decfsz	??_init_ADC,f
  3639  0A9F  2A9E               	goto	u3277
  3640  0AA0  2AA1               	nop2
  3641  0AA1                     l265:	
  3642  0AA1  0008               	return
  3643  0AA2                     __end_of_init_ADC:	
  3644                           
  3645                           	psect	text10
  3646  0789                     __ptext10:	
  3647 ;; *************** function _UpdateTimes *****************
  3648 ;; Defined at:
  3649 ;;		line 4 in file "./CustomLib/TrafficLight.h"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  _semafori       1    wreg     PTR PTR struct .
  3652 ;;		 -> Semafori(2), 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  _semafori       1   14[BANK0 ] PTR PTR struct .
  3655 ;;		 -> Semafori(2), 
  3656 ;;  i               1   15[BANK0 ] unsigned char 
  3657 ;;  l               1   16[BANK0 ] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       0       0       0       0
  3668 ;;      Locals:         0       3       0       0       0
  3669 ;;      Temps:          0      10       0       0       0
  3670 ;;      Totals:         0      13       0       0       0
  3671 ;;Total ram usage:       13 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    3
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_main
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function _UpdateTimes
  3683  0789                     _UpdateTimes:	
  3684                           
  3685                           ;incstack = 0
  3686                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3687                           ;UpdateTimes@_semafori stored from wreg
  3688  0789  1283               	bcf	3,5	;RP0=0, select bank0
  3689  078A  1303               	bcf	3,6	;RP1=0, select bank0
  3690  078B  00AE               	movwf	UpdateTimes@_semafori
  3691  078C                     l3301:	
  3692                           
  3693                           ;./CustomLib/TrafficLight.h: 4: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 5: {;./CustomLib/TrafficLight.h: 7:     for (unsigned char l = 0; l < n_semafo
      +                          ri; l++)
  3694  078C  01B0               	clrf	UpdateTimes@l
  3695  078D                     l3307:	
  3696                           
  3697                           ;./CustomLib/TrafficLight.h: 8:     {;./CustomLib/TrafficLight.h: 9:         for (unsign
      +                          ed char i = 0; i < 3; i++)
  3698  078D  01AF               	clrf	UpdateTimes@i
  3699  078E                     l3313:	
  3700                           
  3701                           ;./CustomLib/TrafficLight.h: 10:         {;./CustomLib/TrafficLight.h: 11:             i
      +                          f ((*(_semafori)[l]).times[i] != (*(_semafori)[l]).new_times[i])
  3702  078E  0830               	movf	UpdateTimes@l,w
  3703  078F  072E               	addwf	UpdateTimes@_semafori,w
  3704  0790  00A4               	movwf	??_UpdateTimes
  3705  0791  0824               	movf	??_UpdateTimes,w
  3706  0792  0084               	movwf	4
  3707  0793  082F               	movf	UpdateTimes@i,w
  3708  0794  00A5               	movwf	??_UpdateTimes+1
  3709  0795  0725               	addwf	??_UpdateTimes+1,w
  3710  0796  1383               	bcf	3,7	;select IRP bank0
  3711  0797  0700               	addwf	0,w
  3712  0798  00A6               	movwf	??_UpdateTimes+2
  3713  0799  0826               	movf	??_UpdateTimes+2,w
  3714  079A  3E06               	addlw	6
  3715  079B  0084               	movwf	4
  3716  079C  0800               	movf	0,w
  3717  079D  00A7               	movwf	??_UpdateTimes+3
  3718  079E  0A84               	incf	4,f
  3719  079F  0800               	movf	0,w
  3720  07A0  00A8               	movwf	??_UpdateTimes+4
  3721  07A1  0830               	movf	UpdateTimes@l,w
  3722  07A2  072E               	addwf	UpdateTimes@_semafori,w
  3723  07A3  00A9               	movwf	??_UpdateTimes+5
  3724  07A4  0829               	movf	??_UpdateTimes+5,w
  3725  07A5  0084               	movwf	4
  3726  07A6  082F               	movf	UpdateTimes@i,w
  3727  07A7  00AA               	movwf	??_UpdateTimes+6
  3728  07A8  072A               	addwf	??_UpdateTimes+6,w
  3729  07A9  0700               	addwf	0,w
  3730  07AA  00AB               	movwf	??_UpdateTimes+7
  3731  07AB  082B               	movf	??_UpdateTimes+7,w
  3732  07AC  0084               	movwf	4
  3733  07AD  0800               	movf	0,w
  3734  07AE  00AC               	movwf	??_UpdateTimes+8
  3735  07AF  0A84               	incf	4,f
  3736  07B0  0800               	movf	0,w
  3737  07B1  00AD               	movwf	??_UpdateTimes+9
  3738  07B2  0828               	movf	??_UpdateTimes+4,w
  3739  07B3  062D               	xorwf	??_UpdateTimes+9,w
  3740  07B4  1D03               	skipz
  3741  07B5  2FB8               	goto	u2845
  3742  07B6  0827               	movf	??_UpdateTimes+3,w
  3743  07B7  062C               	xorwf	??_UpdateTimes+8,w
  3744  07B8                     u2845:	
  3745  07B8  1903               	skipnz
  3746  07B9  2FBB               	goto	u2841
  3747  07BA  2FBC               	goto	u2840
  3748  07BB                     u2841:	
  3749  07BB  2FDF               	goto	l3317
  3750  07BC                     u2840:	
  3751  07BC                     l3315:	
  3752                           
  3753                           ;./CustomLib/TrafficLight.h: 12:             {;./CustomLib/TrafficLight.h: 13:          
      +                                 (*(_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3754  07BC  0830               	movf	UpdateTimes@l,w
  3755  07BD  072E               	addwf	UpdateTimes@_semafori,w
  3756  07BE  00A4               	movwf	??_UpdateTimes
  3757  07BF  0824               	movf	??_UpdateTimes,w
  3758  07C0  0084               	movwf	4
  3759  07C1  082F               	movf	UpdateTimes@i,w
  3760  07C2  00A5               	movwf	??_UpdateTimes+1
  3761  07C3  0725               	addwf	??_UpdateTimes+1,w
  3762  07C4  0700               	addwf	0,w
  3763  07C5  00A6               	movwf	??_UpdateTimes+2
  3764  07C6  0826               	movf	??_UpdateTimes+2,w
  3765  07C7  3E06               	addlw	6
  3766  07C8  0084               	movwf	4
  3767  07C9  0800               	movf	0,w
  3768  07CA  00A7               	movwf	??_UpdateTimes+3
  3769  07CB  0A84               	incf	4,f
  3770  07CC  0800               	movf	0,w
  3771  07CD  00A8               	movwf	??_UpdateTimes+4
  3772  07CE  0830               	movf	UpdateTimes@l,w
  3773  07CF  072E               	addwf	UpdateTimes@_semafori,w
  3774  07D0  00A9               	movwf	??_UpdateTimes+5
  3775  07D1  0829               	movf	??_UpdateTimes+5,w
  3776  07D2  0084               	movwf	4
  3777  07D3  082F               	movf	UpdateTimes@i,w
  3778  07D4  00AA               	movwf	??_UpdateTimes+6
  3779  07D5  072A               	addwf	??_UpdateTimes+6,w
  3780  07D6  0700               	addwf	0,w
  3781  07D7  00AB               	movwf	??_UpdateTimes+7
  3782  07D8  082B               	movf	??_UpdateTimes+7,w
  3783  07D9  0084               	movwf	4
  3784  07DA  0827               	movf	??_UpdateTimes+3,w
  3785  07DB  0080               	movwf	0
  3786  07DC  0A84               	incf	4,f
  3787  07DD  0828               	movf	??_UpdateTimes+4,w
  3788  07DE  0080               	movwf	0
  3789  07DF                     l3317:	
  3790                           
  3791                           ;./CustomLib/TrafficLight.h: 15:         }
  3792  07DF  3001               	movlw	1
  3793  07E0  00A4               	movwf	??_UpdateTimes
  3794  07E1  0824               	movf	??_UpdateTimes,w
  3795  07E2  07AF               	addwf	UpdateTimes@i,f
  3796  07E3                     l3319:	
  3797  07E3  3003               	movlw	3
  3798  07E4  022F               	subwf	UpdateTimes@i,w
  3799  07E5  1C03               	skipc
  3800  07E6  2FE8               	goto	u2851
  3801  07E7  2FE9               	goto	u2850
  3802  07E8                     u2851:	
  3803  07E8  2F8E               	goto	l3313
  3804  07E9                     u2850:	
  3805  07E9                     l3323:	
  3806                           
  3807                           ;./CustomLib/TrafficLight.h: 21:     }
  3808  07E9  3001               	movlw	1
  3809  07EA  00A4               	movwf	??_UpdateTimes
  3810  07EB  0824               	movf	??_UpdateTimes,w
  3811  07EC  07B0               	addwf	UpdateTimes@l,f
  3812  07ED                     l3325:	
  3813  07ED  3002               	movlw	2
  3814  07EE  0230               	subwf	UpdateTimes@l,w
  3815  07EF  1C03               	skipc
  3816  07F0  2FF2               	goto	u2861
  3817  07F1  2FF3               	goto	u2860
  3818  07F2                     u2861:	
  3819  07F2  2F8D               	goto	l3307
  3820  07F3                     u2860:	
  3821  07F3                     l127:	
  3822  07F3  0008               	return
  3823  07F4                     __end_of_UpdateTimes:	
  3824                           
  3825                           	psect	text11
  3826  0B7F                     __ptext11:	
  3827 ;; *************** function _UART_Init *****************
  3828 ;; Defined at:
  3829 ;;		line 362 in file "main.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  baudrate        2   19[BANK0 ] int 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, pclath, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       2       0       0       0
  3844 ;;      Locals:         0       0       0       0       0
  3845 ;;      Temps:          0       4       0       0       0
  3846 ;;      Totals:         0       6       0       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    4
  3850 ;; This function calls:
  3851 ;;		___aldiv
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function _UART_Init
  3859  0B7F                     _UART_Init:	
  3860  0B7F                     l3405:	
  3861                           ;incstack = 0
  3862                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3863                           
  3864                           
  3865                           ;main.c: 362: void UART_Init(int baudrate);main.c: 363: {;main.c: 364:     TRISCbits.TRI
      +                          SC6 = 0;
  3866  0B7F  1683               	bsf	3,5	;RP0=1, select bank1
  3867  0B80  1303               	bcf	3,6	;RP1=0, select bank1
  3868  0B81  1307               	bcf	7,6	;volatile
  3869                           
  3870                           ;main.c: 365:     TXSTAbits.TXEN = 1;
  3871  0B82  1698               	bsf	24,5	;volatile
  3872                           
  3873                           ;main.c: 366:     RCSTAbits.SPEN = 1;
  3874  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  3876  0B85  1798               	bsf	24,7	;volatile
  3877                           
  3878                           ;main.c: 367:     RCSTAbits.CREN = 1;
  3879  0B86  1618               	bsf	24,4	;volatile
  3880  0B87                     l3407:	
  3881                           
  3882                           ;main.c: 368:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3883  0B87  0833               	movf	UART_Init@baudrate,w
  3884  0B88  00B5               	movwf	??_UART_Init
  3885  0B89  0834               	movf	UART_Init@baudrate+1,w
  3886  0B8A  00B6               	movwf	??_UART_Init+1
  3887  0B8B  3000               	movlw	0
  3888  0B8C  1BB6               	btfsc	??_UART_Init+1,7
  3889  0B8D  30FF               	movlw	255
  3890  0B8E  00B7               	movwf	??_UART_Init+2
  3891  0B8F  00B8               	movwf	??_UART_Init+3
  3892  0B90  3006               	movlw	6
  3893  0B91                     u2925:	
  3894  0B91  1003               	clrc
  3895  0B92  0DB5               	rlf	??_UART_Init,f
  3896  0B93  0DB6               	rlf	??_UART_Init+1,f
  3897  0B94  0DB7               	rlf	??_UART_Init+2,f
  3898  0B95  0DB8               	rlf	??_UART_Init+3,f
  3899  0B96                     u2920:	
  3900  0B96  3EFF               	addlw	-1
  3901  0B97  1D03               	skipz
  3902  0B98  2B91               	goto	u2925
  3903  0B99  0838               	movf	??_UART_Init+3,w
  3904  0B9A  00A7               	movwf	___aldiv@divisor+3
  3905  0B9B  0837               	movf	??_UART_Init+2,w
  3906  0B9C  00A6               	movwf	___aldiv@divisor+2
  3907  0B9D  0836               	movf	??_UART_Init+1,w
  3908  0B9E  00A5               	movwf	___aldiv@divisor+1
  3909  0B9F  0835               	movf	??_UART_Init,w
  3910  0BA0  00A4               	movwf	___aldiv@divisor
  3911  0BA1  3001               	movlw	1
  3912  0BA2  00AB               	movwf	___aldiv@dividend+3
  3913  0BA3  30E8               	movlw	232
  3914  0BA4  00AA               	movwf	___aldiv@dividend+2
  3915  0BA5  3048               	movlw	72
  3916  0BA6  00A9               	movwf	___aldiv@dividend+1
  3917  0BA7  3000               	movlw	0
  3918  0BA8  00A8               	movwf	___aldiv@dividend
  3919  0BA9  120A  158A  2763  120A  158A  	fcall	___aldiv
  3920  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3921  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3922  0BB0  0824               	movf	?___aldiv,w
  3923  0BB1  3EFF               	addlw	255
  3924  0BB2  1683               	bsf	3,5	;RP0=1, select bank1
  3925  0BB3  1303               	bcf	3,6	;RP1=0, select bank1
  3926  0BB4  0099               	movwf	25	;volatile
  3927  0BB5                     l3409:	
  3928                           
  3929                           ;main.c: 369:     INTCONbits.GIE = 1;
  3930  0BB5  178B               	bsf	11,7	;volatile
  3931  0BB6                     l3411:	
  3932                           
  3933                           ;main.c: 370:     INTCONbits.PEIE = 1;
  3934  0BB6  170B               	bsf	11,6	;volatile
  3935  0BB7                     l3413:	
  3936                           
  3937                           ;main.c: 371:     PIE1bits.RCIE = 1;
  3938  0BB7  168C               	bsf	12,5	;volatile
  3939  0BB8                     l274:	
  3940  0BB8  0008               	return
  3941  0BB9                     __end_of_UART_Init:	
  3942                           
  3943                           	psect	text12
  3944  0F63                     __ptext12:	
  3945 ;; *************** function ___aldiv *****************
  3946 ;; Defined at:
  3947 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  divisor         4    4[BANK0 ] long 
  3950 ;;  dividend        4    8[BANK0 ] long 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  quotient        4   15[BANK0 ] long 
  3953 ;;  sign            1   14[BANK0 ] unsigned char 
  3954 ;;  counter         1   13[BANK0 ] unsigned char 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  4    4[BANK0 ] long 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3964 ;;      Params:         0       8       0       0       0
  3965 ;;      Locals:         0       6       0       0       0
  3966 ;;      Temps:          0       1       0       0       0
  3967 ;;      Totals:         0      15       0       0       0
  3968 ;;Total ram usage:       15 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    3
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_UART_Init
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function ___aldiv
  3980  0F63                     ___aldiv:	
  3981  0F63                     l3179:	
  3982                           ;incstack = 0
  3983                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3984                           
  3985  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0F65  01AE               	clrf	___aldiv@sign
  3988  0F66                     l3181:	
  3989  0F66  1FA7               	btfss	___aldiv@divisor+3,7
  3990  0F67  2F69               	goto	u2551
  3991  0F68  2F6A               	goto	u2550
  3992  0F69                     u2551:	
  3993  0F69  2F77               	goto	l504
  3994  0F6A                     u2550:	
  3995  0F6A                     l3183:	
  3996  0F6A  09A4               	comf	___aldiv@divisor,f
  3997  0F6B  09A5               	comf	___aldiv@divisor+1,f
  3998  0F6C  09A6               	comf	___aldiv@divisor+2,f
  3999  0F6D  09A7               	comf	___aldiv@divisor+3,f
  4000  0F6E  0AA4               	incf	___aldiv@divisor,f
  4001  0F6F  1903               	skipnz
  4002  0F70  0AA5               	incf	___aldiv@divisor+1,f
  4003  0F71  1903               	skipnz
  4004  0F72  0AA6               	incf	___aldiv@divisor+2,f
  4005  0F73  1903               	skipnz
  4006  0F74  0AA7               	incf	___aldiv@divisor+3,f
  4007  0F75  01AE               	clrf	___aldiv@sign
  4008  0F76  0AAE               	incf	___aldiv@sign,f
  4009  0F77                     l504:	
  4010  0F77  1FAB               	btfss	___aldiv@dividend+3,7
  4011  0F78  2F7A               	goto	u2561
  4012  0F79  2F7B               	goto	u2560
  4013  0F7A                     u2561:	
  4014  0F7A  2F8A               	goto	l3189
  4015  0F7B                     u2560:	
  4016  0F7B                     l3185:	
  4017  0F7B  09A8               	comf	___aldiv@dividend,f
  4018  0F7C  09A9               	comf	___aldiv@dividend+1,f
  4019  0F7D  09AA               	comf	___aldiv@dividend+2,f
  4020  0F7E  09AB               	comf	___aldiv@dividend+3,f
  4021  0F7F  0AA8               	incf	___aldiv@dividend,f
  4022  0F80  1903               	skipnz
  4023  0F81  0AA9               	incf	___aldiv@dividend+1,f
  4024  0F82  1903               	skipnz
  4025  0F83  0AAA               	incf	___aldiv@dividend+2,f
  4026  0F84  1903               	skipnz
  4027  0F85  0AAB               	incf	___aldiv@dividend+3,f
  4028  0F86                     l3187:	
  4029  0F86  3001               	movlw	1
  4030  0F87  00AC               	movwf	??___aldiv
  4031  0F88  082C               	movf	??___aldiv,w
  4032  0F89  06AE               	xorwf	___aldiv@sign,f
  4033  0F8A                     l3189:	
  4034  0F8A  3000               	movlw	0
  4035  0F8B  00B2               	movwf	___aldiv@quotient+3
  4036  0F8C  3000               	movlw	0
  4037  0F8D  00B1               	movwf	___aldiv@quotient+2
  4038  0F8E  3000               	movlw	0
  4039  0F8F  00B0               	movwf	___aldiv@quotient+1
  4040  0F90  3000               	movlw	0
  4041  0F91  00AF               	movwf	___aldiv@quotient
  4042  0F92                     l3191:	
  4043  0F92  0827               	movf	___aldiv@divisor+3,w
  4044  0F93  0426               	iorwf	___aldiv@divisor+2,w
  4045  0F94  0425               	iorwf	___aldiv@divisor+1,w
  4046  0F95  0424               	iorwf	___aldiv@divisor,w
  4047  0F96  1903               	skipnz
  4048  0F97  2F99               	goto	u2571
  4049  0F98  2F9A               	goto	u2570
  4050  0F99                     u2571:	
  4051  0F99  2FE7               	goto	l3211
  4052  0F9A                     u2570:	
  4053  0F9A                     l3193:	
  4054  0F9A  01AD               	clrf	___aldiv@counter
  4055  0F9B  0AAD               	incf	___aldiv@counter,f
  4056  0F9C  2FAA               	goto	l3197
  4057  0F9D                     l3195:	
  4058  0F9D  3001               	movlw	1
  4059  0F9E  00AC               	movwf	??___aldiv
  4060  0F9F                     u2585:	
  4061  0F9F  1003               	clrc
  4062  0FA0  0DA4               	rlf	___aldiv@divisor,f
  4063  0FA1  0DA5               	rlf	___aldiv@divisor+1,f
  4064  0FA2  0DA6               	rlf	___aldiv@divisor+2,f
  4065  0FA3  0DA7               	rlf	___aldiv@divisor+3,f
  4066  0FA4  0BAC               	decfsz	??___aldiv,f
  4067  0FA5  2F9F               	goto	u2585
  4068  0FA6  3001               	movlw	1
  4069  0FA7  00AC               	movwf	??___aldiv
  4070  0FA8  082C               	movf	??___aldiv,w
  4071  0FA9  07AD               	addwf	___aldiv@counter,f
  4072  0FAA                     l3197:	
  4073  0FAA  1FA7               	btfss	___aldiv@divisor+3,7
  4074  0FAB  2FAD               	goto	u2591
  4075  0FAC  2FAE               	goto	u2590
  4076  0FAD                     u2591:	
  4077  0FAD  2F9D               	goto	l3195
  4078  0FAE                     u2590:	
  4079  0FAE                     l3199:	
  4080  0FAE  3001               	movlw	1
  4081  0FAF  00AC               	movwf	??___aldiv
  4082  0FB0                     u2605:	
  4083  0FB0  1003               	clrc
  4084  0FB1  0DAF               	rlf	___aldiv@quotient,f
  4085  0FB2  0DB0               	rlf	___aldiv@quotient+1,f
  4086  0FB3  0DB1               	rlf	___aldiv@quotient+2,f
  4087  0FB4  0DB2               	rlf	___aldiv@quotient+3,f
  4088  0FB5  0BAC               	decfsz	??___aldiv,f
  4089  0FB6  2FB0               	goto	u2605
  4090  0FB7                     l3201:	
  4091  0FB7  0827               	movf	___aldiv@divisor+3,w
  4092  0FB8  022B               	subwf	___aldiv@dividend+3,w
  4093  0FB9  1D03               	skipz
  4094  0FBA  2FC5               	goto	u2615
  4095  0FBB  0826               	movf	___aldiv@divisor+2,w
  4096  0FBC  022A               	subwf	___aldiv@dividend+2,w
  4097  0FBD  1D03               	skipz
  4098  0FBE  2FC5               	goto	u2615
  4099  0FBF  0825               	movf	___aldiv@divisor+1,w
  4100  0FC0  0229               	subwf	___aldiv@dividend+1,w
  4101  0FC1  1D03               	skipz
  4102  0FC2  2FC5               	goto	u2615
  4103  0FC3  0824               	movf	___aldiv@divisor,w
  4104  0FC4  0228               	subwf	___aldiv@dividend,w
  4105  0FC5                     u2615:	
  4106  0FC5  1C03               	skipc
  4107  0FC6  2FC8               	goto	u2611
  4108  0FC7  2FC9               	goto	u2610
  4109  0FC8                     u2611:	
  4110  0FC8  2FD8               	goto	l3207
  4111  0FC9                     u2610:	
  4112  0FC9                     l3203:	
  4113  0FC9  0824               	movf	___aldiv@divisor,w
  4114  0FCA  02A8               	subwf	___aldiv@dividend,f
  4115  0FCB  0825               	movf	___aldiv@divisor+1,w
  4116  0FCC  1C03               	skipc
  4117  0FCD  0F25               	incfsz	___aldiv@divisor+1,w
  4118  0FCE  02A9               	subwf	___aldiv@dividend+1,f
  4119  0FCF  0826               	movf	___aldiv@divisor+2,w
  4120  0FD0  1C03               	skipc
  4121  0FD1  0F26               	incfsz	___aldiv@divisor+2,w
  4122  0FD2  02AA               	subwf	___aldiv@dividend+2,f
  4123  0FD3  0827               	movf	___aldiv@divisor+3,w
  4124  0FD4  1C03               	skipc
  4125  0FD5  0F27               	incfsz	___aldiv@divisor+3,w
  4126  0FD6  02AB               	subwf	___aldiv@dividend+3,f
  4127  0FD7                     l3205:	
  4128  0FD7  142F               	bsf	___aldiv@quotient,0
  4129  0FD8                     l3207:	
  4130  0FD8  3001               	movlw	1
  4131  0FD9                     u2625:	
  4132  0FD9  1003               	clrc
  4133  0FDA  0CA7               	rrf	___aldiv@divisor+3,f
  4134  0FDB  0CA6               	rrf	___aldiv@divisor+2,f
  4135  0FDC  0CA5               	rrf	___aldiv@divisor+1,f
  4136  0FDD  0CA4               	rrf	___aldiv@divisor,f
  4137  0FDE  3EFF               	addlw	-1
  4138  0FDF  1D03               	skipz
  4139  0FE0  2FD9               	goto	u2625
  4140  0FE1                     l3209:	
  4141  0FE1  3001               	movlw	1
  4142  0FE2  02AD               	subwf	___aldiv@counter,f
  4143  0FE3  1D03               	btfss	3,2
  4144  0FE4  2FE6               	goto	u2631
  4145  0FE5  2FE7               	goto	u2630
  4146  0FE6                     u2631:	
  4147  0FE6  2FAE               	goto	l3199
  4148  0FE7                     u2630:	
  4149  0FE7                     l3211:	
  4150  0FE7  082E               	movf	___aldiv@sign,w
  4151  0FE8  1903               	btfsc	3,2
  4152  0FE9  2FEB               	goto	u2641
  4153  0FEA  2FEC               	goto	u2640
  4154  0FEB                     u2641:	
  4155  0FEB  2FF7               	goto	l3215
  4156  0FEC                     u2640:	
  4157  0FEC                     l3213:	
  4158  0FEC  09AF               	comf	___aldiv@quotient,f
  4159  0FED  09B0               	comf	___aldiv@quotient+1,f
  4160  0FEE  09B1               	comf	___aldiv@quotient+2,f
  4161  0FEF  09B2               	comf	___aldiv@quotient+3,f
  4162  0FF0  0AAF               	incf	___aldiv@quotient,f
  4163  0FF1  1903               	skipnz
  4164  0FF2  0AB0               	incf	___aldiv@quotient+1,f
  4165  0FF3  1903               	skipnz
  4166  0FF4  0AB1               	incf	___aldiv@quotient+2,f
  4167  0FF5  1903               	skipnz
  4168  0FF6  0AB2               	incf	___aldiv@quotient+3,f
  4169  0FF7                     l3215:	
  4170  0FF7  0832               	movf	___aldiv@quotient+3,w
  4171  0FF8  00A7               	movwf	?___aldiv+3
  4172  0FF9  0831               	movf	___aldiv@quotient+2,w
  4173  0FFA  00A6               	movwf	?___aldiv+2
  4174  0FFB  0830               	movf	___aldiv@quotient+1,w
  4175  0FFC  00A5               	movwf	?___aldiv+1
  4176  0FFD  082F               	movf	___aldiv@quotient,w
  4177  0FFE  00A4               	movwf	?___aldiv
  4178  0FFF                     l514:	
  4179  0FFF  0008               	return
  4180  1000                     __end_of___aldiv:	
  4181                           
  4182                           	psect	text13
  4183  06DC                     __ptext13:	
  4184 ;; *************** function _ShowDigitsOnDisplay *****************
  4185 ;; Defined at:
  4186 ;;		line 504 in file "main.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  display_inde    1   13[BANK0 ] unsigned char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4200 ;;      Params:         0       0       0       0       0
  4201 ;;      Locals:         0       1       0       0       0
  4202 ;;      Temps:          0       2       0       0       0
  4203 ;;      Totals:         0       3       0       0       0
  4204 ;;Total ram usage:        3 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    4
  4207 ;; This function calls:
  4208 ;;		_SetDisplay
  4209 ;;		___awmod
  4210 ;; This function is called by:
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _ShowDigitsOnDisplay
  4217  06DC                     _ShowDigitsOnDisplay:	
  4218  06DC                     l3481:	
  4219                           ;incstack = 0
  4220                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4221                           
  4222                           
  4223                           ;main.c: 506:     for (unsigned char display_index = 0; display_index < n_semafori; disp
      +                          lay_index++)
  4224  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  4225  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  4226  06DE  01AD               	clrf	ShowDigitsOnDisplay@display_index
  4227  06DF  2F53               	goto	l3501
  4228  06E0                     l3487:	
  4229                           
  4230                           ;main.c: 511:             if ((*DigitsArr[display_index]).centinaia > 0)
  4231  06E0  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4232  06E1  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4233  06E2  0084               	movwf	4
  4234  06E3  1383               	bcf	3,7	;select IRP bank0
  4235  06E4  0800               	movf	0,w
  4236  06E5  0084               	movwf	4
  4237  06E6  0800               	movf	0,w
  4238  06E7  1903               	btfsc	3,2
  4239  06E8  2EEA               	goto	u2971
  4240  06E9  2EEB               	goto	u2970
  4241  06EA                     u2971:	
  4242  06EA  2F66               	goto	l3503
  4243  06EB                     u2970:	
  4244  06EB                     l3489:	
  4245                           
  4246                           ;main.c: 512:             {;main.c: 513:                 SetDisplay(display_index, 1, 0,
      +                           0, display[(*DigitsArr[display_index]).centinaia]);
  4247  06EB  01A4               	clrf	SetDisplay@d1
  4248  06EC  0AA4               	incf	SetDisplay@d1,f
  4249  06ED  01A5               	clrf	SetDisplay@d2
  4250  06EE  01A6               	clrf	SetDisplay@d3
  4251  06EF  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4252  06F0  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4253  06F1  0084               	movwf	4
  4254  06F2  0800               	movf	0,w
  4255  06F3  0084               	movwf	4
  4256  06F4  0800               	movf	0,w
  4257  06F5  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4258  06F6  0084               	movwf	4
  4259  06F7  120A  158A  2000  120A  118A  	fcall	stringdir
  4260  06FC  00AB               	movwf	??_ShowDigitsOnDisplay
  4261  06FD  082B               	movf	??_ShowDigitsOnDisplay,w
  4262  06FE  00A7               	movwf	SetDisplay@value
  4263  06FF  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4264  0700  120A  158A  252D  120A  118A  	fcall	_SetDisplay
  4265  0705  2F66               	goto	l3503
  4266  0706                     l3491:	
  4267                           
  4268                           ;main.c: 517:             if ((*DigitsArr[display_index]).decine > 0 || (*DigitsArr[disp
      +                          lay_index]).centinaia > 0)
  4269  0706  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4270  0707  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4271  0708  0084               	movwf	4
  4272  0709  1383               	bcf	3,7	;select IRP bank0
  4273  070A  0A00               	incf	0,w
  4274  070B  0084               	movwf	4
  4275  070C  0800               	movf	0,w
  4276  070D  1D03               	btfss	3,2
  4277  070E  2F10               	goto	u2981
  4278  070F  2F11               	goto	u2980
  4279  0710                     u2981:	
  4280  0710  2F1B               	goto	l3495
  4281  0711                     u2980:	
  4282  0711                     l3493:	
  4283  0711  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4284  0712  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4285  0713  0084               	movwf	4
  4286  0714  0800               	movf	0,w
  4287  0715  0084               	movwf	4
  4288  0716  0800               	movf	0,w
  4289  0717  1903               	btfsc	3,2
  4290  0718  2F1A               	goto	u2991
  4291  0719  2F1B               	goto	u2990
  4292  071A                     u2991:	
  4293  071A  2F66               	goto	l3503
  4294  071B                     u2990:	
  4295  071B                     l3495:	
  4296                           
  4297                           ;main.c: 518:             {;main.c: 519:                 SetDisplay(display_index, 0, 1,
      +                           0, display[(*DigitsArr[display_index]).decine]);
  4298  071B  01A4               	clrf	SetDisplay@d1
  4299  071C  01A5               	clrf	SetDisplay@d2
  4300  071D  0AA5               	incf	SetDisplay@d2,f
  4301  071E  01A6               	clrf	SetDisplay@d3
  4302  071F  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4303  0720  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4304  0721  0084               	movwf	4
  4305  0722  0A00               	incf	0,w
  4306  0723  0084               	movwf	4
  4307  0724  0800               	movf	0,w
  4308  0725  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4309  0726  0084               	movwf	4
  4310  0727  120A  158A  2000  120A  118A  	fcall	stringdir
  4311  072C  00AB               	movwf	??_ShowDigitsOnDisplay
  4312  072D  082B               	movf	??_ShowDigitsOnDisplay,w
  4313  072E  00A7               	movwf	SetDisplay@value
  4314  072F  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4315  0730  120A  158A  252D  120A  118A  	fcall	_SetDisplay
  4316  0735  2F66               	goto	l3503
  4317  0736                     l3497:	
  4318                           
  4319                           ;main.c: 523:             SetDisplay(display_index, 0, 0, 1, display[(*DigitsArr[display
      +                          _index]).unita]);
  4320  0736  01A4               	clrf	SetDisplay@d1
  4321  0737  01A5               	clrf	SetDisplay@d2
  4322  0738  01A6               	clrf	SetDisplay@d3
  4323  0739  0AA6               	incf	SetDisplay@d3,f
  4324  073A  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4325  073B  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4326  073C  0084               	movwf	4
  4327  073D  1383               	bcf	3,7	;select IRP bank0
  4328  073E  0800               	movf	0,w
  4329  073F  3E02               	addlw	2
  4330  0740  0084               	movwf	4
  4331  0741  0800               	movf	0,w
  4332  0742  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4333  0743  0084               	movwf	4
  4334  0744  120A  158A  2000  120A  118A  	fcall	stringdir
  4335  0749  00AB               	movwf	??_ShowDigitsOnDisplay
  4336  074A  082B               	movf	??_ShowDigitsOnDisplay,w
  4337  074B  00A7               	movwf	SetDisplay@value
  4338  074C  082D               	movf	ShowDigitsOnDisplay@display_index,w
  4339  074D  120A  158A  252D  120A  118A  	fcall	_SetDisplay
  4340                           
  4341                           ;main.c: 524:             break;
  4342  0752  2F66               	goto	l3503
  4343  0753                     l3501:	
  4344  0753  0855               	movf	_disp,w
  4345  0754  00AB               	movwf	??_ShowDigitsOnDisplay
  4346  0755  01AC               	clrf	??_ShowDigitsOnDisplay+1
  4347                           
  4348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4349                           ; Switch size 1, requested type "simple"
  4350                           ; Number of cases is 1, Range of values is 0 to 0
  4351                           ; switch strategies available:
  4352                           ; Name         Instructions Cycles
  4353                           ; simple_byte            4     3 (average)
  4354                           ; direct_byte           11     8 (fixed)
  4355                           ; jumptable            260     6 (fixed)
  4356                           ;	Chosen strategy is simple_byte
  4357  0756  082C               	movf	??_ShowDigitsOnDisplay+1,w
  4358  0757  3A00               	xorlw	0	; case 0
  4359  0758  1903               	skipnz
  4360  0759  2F5B               	goto	l3963
  4361  075A  2F66               	goto	l3503
  4362  075B                     l3963:	
  4363                           
  4364                           ; Switch size 1, requested type "simple"
  4365                           ; Number of cases is 3, Range of values is 0 to 2
  4366                           ; switch strategies available:
  4367                           ; Name         Instructions Cycles
  4368                           ; simple_byte           10     6 (average)
  4369                           ; direct_byte           17     8 (fixed)
  4370                           ; jumptable            260     6 (fixed)
  4371                           ;	Chosen strategy is simple_byte
  4372  075B  082B               	movf	??_ShowDigitsOnDisplay,w
  4373  075C  3A00               	xorlw	0	; case 0
  4374  075D  1903               	skipnz
  4375  075E  2EE0               	goto	l3487
  4376  075F  3A01               	xorlw	1	; case 1
  4377  0760  1903               	skipnz
  4378  0761  2F06               	goto	l3491
  4379  0762  3A03               	xorlw	3	; case 2
  4380  0763  1903               	skipnz
  4381  0764  2F36               	goto	l3497
  4382  0765  2F66               	goto	l3503
  4383  0766                     l3503:	
  4384                           
  4385                           ;main.c: 526:     }
  4386  0766  3001               	movlw	1
  4387  0767  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0768  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0769  00AB               	movwf	??_ShowDigitsOnDisplay
  4390  076A  082B               	movf	??_ShowDigitsOnDisplay,w
  4391  076B  07AD               	addwf	ShowDigitsOnDisplay@display_index,f
  4392  076C                     l3505:	
  4393  076C  3002               	movlw	2
  4394  076D  022D               	subwf	ShowDigitsOnDisplay@display_index,w
  4395  076E  1C03               	skipc
  4396  076F  2F71               	goto	u3001
  4397  0770  2F72               	goto	u3000
  4398  0771                     u3001:	
  4399  0771  2F53               	goto	l3501
  4400  0772                     u3000:	
  4401  0772                     l3507:	
  4402                           
  4403                           ;main.c: 527:     disp = (disp + 1) % 3;
  4404  0772  3003               	movlw	3
  4405  0773  00A4               	movwf	___awmod@divisor
  4406  0774  3000               	movlw	0
  4407  0775  00A5               	movwf	___awmod@divisor+1
  4408  0776  0855               	movf	_disp,w
  4409  0777  3E01               	addlw	1
  4410  0778  00A6               	movwf	___awmod@dividend
  4411  0779  3000               	movlw	0
  4412  077A  1803               	skipnc
  4413  077B  3001               	movlw	1
  4414  077C  00A7               	movwf	___awmod@dividend+1
  4415  077D  120A  158A  25DA  120A  118A  	fcall	___awmod
  4416  0782  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0783  1303               	bcf	3,6	;RP1=0, select bank0
  4418  0784  0824               	movf	?___awmod,w
  4419  0785  00AB               	movwf	??_ShowDigitsOnDisplay
  4420  0786  082B               	movf	??_ShowDigitsOnDisplay,w
  4421  0787  00D5               	movwf	_disp
  4422  0788                     l343:	
  4423  0788  0008               	return
  4424  0789                     __end_of_ShowDigitsOnDisplay:	
  4425                           
  4426                           	psect	text14
  4427  0D2D                     __ptext14:	
  4428 ;; *************** function _SetDisplay *****************
  4429 ;; Defined at:
  4430 ;;		line 479 in file "main.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  display_inde    1    wreg     unsigned char 
  4433 ;;  d1              1    4[BANK0 ] unsigned char 
  4434 ;;  d2              1    5[BANK0 ] unsigned char 
  4435 ;;  d3              1    6[BANK0 ] unsigned char 
  4436 ;;  value           1    7[BANK0 ] unsigned char 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  display_inde    1   10[BANK0 ] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         0       4       0       0       0
  4449 ;;      Locals:         0       1       0       0       0
  4450 ;;      Temps:          0       2       0       0       0
  4451 ;;      Totals:         0       7       0       0       0
  4452 ;;Total ram usage:        7 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    3
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_ShowDigitsOnDisplay
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function _SetDisplay
  4464  0D2D                     _SetDisplay:	
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in _SetDisplay: [wreg-fsr0h+status,2+status,0]
  4468                           ;SetDisplay@display_index stored from wreg
  4469  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0D2F  00AA               	movwf	SetDisplay@display_index
  4472  0D30                     l3119:	
  4473                           
  4474                           ;main.c: 479: void SetDisplay(unsigned char display_index, char d1, char d2, char d3, ch
      +                          ar value);main.c: 480: {;main.c: 481:     switch (display_index)
  4475  0D30  2D71               	goto	l3129
  4476  0D31                     l3121:	
  4477                           
  4478                           ;main.c: 484:         PORTAbits.RA2 = d1;
  4479  0D31  0C24               	rrf	SetDisplay@d1,w
  4480  0D32  1C03               	skipc
  4481  0D33  1105               	bcf	5,2	;volatile
  4482  0D34  1803               	skipnc
  4483  0D35  1505               	bsf	5,2	;volatile
  4484                           
  4485                           ;main.c: 485:         PORTAbits.RA3 = d2;
  4486  0D36  0C25               	rrf	SetDisplay@d2,w
  4487  0D37  1C03               	skipc
  4488  0D38  1185               	bcf	5,3	;volatile
  4489  0D39  1803               	skipnc
  4490  0D3A  1585               	bsf	5,3	;volatile
  4491                           
  4492                           ;main.c: 486:         PORTAbits.RA4 = d3;
  4493  0D3B  0C26               	rrf	SetDisplay@d3,w
  4494  0D3C  1C03               	skipc
  4495  0D3D  1205               	bcf	5,4	;volatile
  4496  0D3E  1803               	skipnc
  4497  0D3F  1605               	bsf	5,4	;volatile
  4498                           
  4499                           ;main.c: 487:         PORTBbits.RB0 = d1;
  4500  0D40  0C24               	rrf	SetDisplay@d1,w
  4501  0D41  1C03               	skipc
  4502  0D42  1006               	bcf	6,0	;volatile
  4503  0D43  1803               	skipnc
  4504  0D44  1406               	bsf	6,0	;volatile
  4505                           
  4506                           ;main.c: 488:         PORTBbits.RB0 = d2;
  4507  0D45  0C25               	rrf	SetDisplay@d2,w
  4508  0D46  1C03               	skipc
  4509  0D47  1006               	bcf	6,0	;volatile
  4510  0D48  1803               	skipnc
  4511  0D49  1406               	bsf	6,0	;volatile
  4512                           
  4513                           ;main.c: 489:         PORTBbits.RB0 = d3;
  4514  0D4A  0C26               	rrf	SetDisplay@d3,w
  4515  0D4B  1C03               	skipc
  4516  0D4C  1006               	bcf	6,0	;volatile
  4517  0D4D  1803               	skipnc
  4518  0D4E  1406               	bsf	6,0	;volatile
  4519  0D4F                     l3123:	
  4520                           
  4521                           ;main.c: 490:         PORTD = value;
  4522  0D4F  0827               	movf	SetDisplay@value,w
  4523  0D50  0088               	movwf	8	;volatile
  4524                           
  4525                           ;main.c: 491:         break;
  4526  0D51  2D81               	goto	l329
  4527  0D52                     l3125:	
  4528                           
  4529                           ;main.c: 493:         PORTAbits.RA5 = d1;
  4530  0D52  0C24               	rrf	SetDisplay@d1,w
  4531  0D53  1C03               	skipc
  4532  0D54  1285               	bcf	5,5	;volatile
  4533  0D55  1803               	skipnc
  4534  0D56  1685               	bsf	5,5	;volatile
  4535                           
  4536                           ;main.c: 494:         PORTBbits.RB0 = d2;
  4537  0D57  0C25               	rrf	SetDisplay@d2,w
  4538  0D58  1C03               	skipc
  4539  0D59  1006               	bcf	6,0	;volatile
  4540  0D5A  1803               	skipnc
  4541  0D5B  1406               	bsf	6,0	;volatile
  4542                           
  4543                           ;main.c: 495:         PORTBbits.RB0 = d3;
  4544  0D5C  0C26               	rrf	SetDisplay@d3,w
  4545  0D5D  1C03               	skipc
  4546  0D5E  1006               	bcf	6,0	;volatile
  4547  0D5F  1803               	skipnc
  4548  0D60  1406               	bsf	6,0	;volatile
  4549                           
  4550                           ;main.c: 496:         PORTBbits.RB0 = d1;
  4551  0D61  0C24               	rrf	SetDisplay@d1,w
  4552  0D62  1C03               	skipc
  4553  0D63  1006               	bcf	6,0	;volatile
  4554  0D64  1803               	skipnc
  4555  0D65  1406               	bsf	6,0	;volatile
  4556                           
  4557                           ;main.c: 497:         PORTBbits.RB0 = d2;
  4558  0D66  0C25               	rrf	SetDisplay@d2,w
  4559  0D67  1C03               	skipc
  4560  0D68  1006               	bcf	6,0	;volatile
  4561  0D69  1803               	skipnc
  4562  0D6A  1406               	bsf	6,0	;volatile
  4563                           
  4564                           ;main.c: 498:         PORTBbits.RB0 = d3;
  4565  0D6B  0C26               	rrf	SetDisplay@d3,w
  4566  0D6C  1C03               	skipc
  4567  0D6D  1006               	bcf	6,0	;volatile
  4568  0D6E  1803               	skipnc
  4569  0D6F  1406               	bsf	6,0	;volatile
  4570                           
  4571                           ;main.c: 500:         break;
  4572  0D70  2D81               	goto	l329
  4573  0D71                     l3129:	
  4574  0D71  082A               	movf	SetDisplay@display_index,w
  4575  0D72  00A8               	movwf	??_SetDisplay
  4576  0D73  01A9               	clrf	??_SetDisplay+1
  4577                           
  4578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4579                           ; Switch size 1, requested type "simple"
  4580                           ; Number of cases is 1, Range of values is 0 to 0
  4581                           ; switch strategies available:
  4582                           ; Name         Instructions Cycles
  4583                           ; simple_byte            4     3 (average)
  4584                           ; direct_byte           11     8 (fixed)
  4585                           ; jumptable            260     6 (fixed)
  4586                           ;	Chosen strategy is simple_byte
  4587  0D74  0829               	movf	??_SetDisplay+1,w
  4588  0D75  3A00               	xorlw	0	; case 0
  4589  0D76  1903               	skipnz
  4590  0D77  2D79               	goto	l3965
  4591  0D78  2D81               	goto	l329
  4592  0D79                     l3965:	
  4593                           
  4594                           ; Switch size 1, requested type "simple"
  4595                           ; Number of cases is 2, Range of values is 0 to 1
  4596                           ; switch strategies available:
  4597                           ; Name         Instructions Cycles
  4598                           ; simple_byte            7     4 (average)
  4599                           ; direct_byte           14     8 (fixed)
  4600                           ; jumptable            260     6 (fixed)
  4601                           ;	Chosen strategy is simple_byte
  4602  0D79  0828               	movf	??_SetDisplay,w
  4603  0D7A  3A00               	xorlw	0	; case 0
  4604  0D7B  1903               	skipnz
  4605  0D7C  2D31               	goto	l3121
  4606  0D7D  3A01               	xorlw	1	; case 1
  4607  0D7E  1903               	skipnz
  4608  0D7F  2D52               	goto	l3125
  4609  0D80  2D81               	goto	l329
  4610  0D81                     l329:	
  4611  0D81  0008               	return
  4612  0D82                     __end_of_SetDisplay:	
  4613                           
  4614                           	psect	text15
  4615  0E35                     __ptext15:	
  4616 ;; *************** function _SetReceivedTimes *****************
  4617 ;; Defined at:
  4618 ;;		line 86 in file "./CustomLib/TrafficLight.h"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4621 ;;		 -> dataFromGateway(15), 
  4622 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4623 ;;		 -> Semafori(2), 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  _dataFromGat    1   19[BANK0 ] PTR unsigned char 
  4626 ;;		 -> dataFromGateway(15), 
  4627 ;;  index           1   20[BANK0 ] unsigned char 
  4628 ;;  colorId         1   18[BANK0 ] unsigned char 
  4629 ;;  semaforoId      1   17[BANK0 ] unsigned char 
  4630 ;;  i               1   21[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         0       1       0       0       0
  4641 ;;      Locals:         0       5       0       0       0
  4642 ;;      Temps:          0       4       0       0       0
  4643 ;;      Totals:         0      10       0       0       0
  4644 ;;Total ram usage:       10 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    4
  4647 ;; This function calls:
  4648 ;;		_GetTime
  4649 ;;		___bmul
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           
  4656                           ;psect for function _SetReceivedTimes
  4657  0E35                     _SetReceivedTimes:	
  4658                           
  4659                           ;incstack = 0
  4660                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4661                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4662  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  4663  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  4664  0E37  00B3               	movwf	SetReceivedTimes@_dataFromGateway
  4665  0E38                     l3363:	
  4666                           
  4667                           ;./CustomLib/TrafficLight.h: 86: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 87: {;./CustomLib/TrafficLight.h: 88:   
      +                            for (unsigned char i = 0; i < 3; i++)
  4668  0E38  01B5               	clrf	SetReceivedTimes@i
  4669  0E39                     l3365:	
  4670  0E39  3003               	movlw	3
  4671  0E3A  0235               	subwf	SetReceivedTimes@i,w
  4672  0E3B  1C03               	skipc
  4673  0E3C  2E3E               	goto	u2891
  4674  0E3D  2E3F               	goto	u2890
  4675  0E3E                     u2891:	
  4676  0E3E  2E40               	goto	l3369
  4677  0E3F                     u2890:	
  4678  0E3F  2E94               	goto	l154
  4679  0E40                     l3369:	
  4680                           
  4681                           ;./CustomLib/TrafficLight.h: 89:     {;./CustomLib/TrafficLight.h: 90:         unsigned 
      +                          char index = i * 5;
  4682  0E40  3005               	movlw	5
  4683  0E41  00AD               	movwf	??_SetReceivedTimes
  4684  0E42  082D               	movf	??_SetReceivedTimes,w
  4685  0E43  00A4               	movwf	___bmul@multiplicand
  4686  0E44  0835               	movf	SetReceivedTimes@i,w
  4687  0E45  120A  158A  22B5  120A  158A  	fcall	___bmul
  4688  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4689  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4690  0E4C  00AE               	movwf	??_SetReceivedTimes+1
  4691  0E4D  082E               	movf	??_SetReceivedTimes+1,w
  4692  0E4E  00B4               	movwf	SetReceivedTimes@index
  4693  0E4F                     l3371:	
  4694                           
  4695                           ;./CustomLib/TrafficLight.h: 91:         unsigned char semaforoId = (_dataFromGateway[in
      +                          dex] >> 1) & 0x0F;
  4696  0E4F  0834               	movf	SetReceivedTimes@index,w
  4697  0E50  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4698  0E51  00AD               	movwf	??_SetReceivedTimes
  4699  0E52  082D               	movf	??_SetReceivedTimes,w
  4700  0E53  0084               	movwf	4
  4701  0E54  1383               	bcf	3,7	;select IRP bank0
  4702  0E55  0800               	movf	0,w
  4703  0E56  00AE               	movwf	??_SetReceivedTimes+1
  4704  0E57  1003               	clrc
  4705  0E58  0C2E               	rrf	??_SetReceivedTimes+1,w
  4706  0E59  390F               	andlw	15
  4707  0E5A  00AF               	movwf	??_SetReceivedTimes+2
  4708  0E5B  082F               	movf	??_SetReceivedTimes+2,w
  4709  0E5C  00B1               	movwf	SetReceivedTimes@semaforoId
  4710  0E5D                     l3373:	
  4711                           
  4712                           ;./CustomLib/TrafficLight.h: 92:         unsigned char colorId = ((_dataFromGateway[inde
      +                          x] >> 5) & 0x03) - 1;
  4713  0E5D  0834               	movf	SetReceivedTimes@index,w
  4714  0E5E  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4715  0E5F  00AD               	movwf	??_SetReceivedTimes
  4716  0E60  082D               	movf	??_SetReceivedTimes,w
  4717  0E61  0084               	movwf	4
  4718  0E62  0800               	movf	0,w
  4719  0E63  00AE               	movwf	??_SetReceivedTimes+1
  4720  0E64  3005               	movlw	5
  4721  0E65                     u2905:	
  4722  0E65  1003               	clrc
  4723  0E66  0CAE               	rrf	??_SetReceivedTimes+1,f
  4724  0E67  3EFF               	addlw	-1
  4725  0E68  1D03               	skipz
  4726  0E69  2E65               	goto	u2905
  4727  0E6A  082E               	movf	??_SetReceivedTimes+1,w
  4728  0E6B  3903               	andlw	3
  4729  0E6C  3EFF               	addlw	255
  4730  0E6D  00AF               	movwf	??_SetReceivedTimes+2
  4731  0E6E  082F               	movf	??_SetReceivedTimes+2,w
  4732  0E6F  00B2               	movwf	SetReceivedTimes@colorId
  4733  0E70                     l3375:	
  4734                           
  4735                           ;./CustomLib/TrafficLight.h: 94:         (*(_semafori)[semaforoId]).new_times[colorId] =
      +                           GetTime(index, _dataFromGateway);
  4736  0E70  0833               	movf	SetReceivedTimes@_dataFromGateway,w
  4737  0E71  00AD               	movwf	??_SetReceivedTimes
  4738  0E72  082D               	movf	??_SetReceivedTimes,w
  4739  0E73  00A4               	movwf	GetTime@_dataFromGateway
  4740  0E74  0834               	movf	SetReceivedTimes@index,w
  4741  0E75  120A  158A  23B9  120A  158A  	fcall	_GetTime
  4742  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  4743  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  4744  0E7C  0831               	movf	SetReceivedTimes@semaforoId,w
  4745  0E7D  072C               	addwf	SetReceivedTimes@_semafori,w
  4746  0E7E  00AE               	movwf	??_SetReceivedTimes+1
  4747  0E7F  082E               	movf	??_SetReceivedTimes+1,w
  4748  0E80  0084               	movwf	4
  4749  0E81  0832               	movf	SetReceivedTimes@colorId,w
  4750  0E82  00AF               	movwf	??_SetReceivedTimes+2
  4751  0E83  072F               	addwf	??_SetReceivedTimes+2,w
  4752  0E84  1383               	bcf	3,7	;select IRP bank0
  4753  0E85  0700               	addwf	0,w
  4754  0E86  00B0               	movwf	??_SetReceivedTimes+3
  4755  0E87  0830               	movf	??_SetReceivedTimes+3,w
  4756  0E88  3E06               	addlw	6
  4757  0E89  0084               	movwf	4
  4758  0E8A  0824               	movf	?_GetTime,w
  4759  0E8B  0080               	movwf	0
  4760  0E8C  0A84               	incf	4,f
  4761  0E8D  0825               	movf	?_GetTime+1,w
  4762  0E8E  0080               	movwf	0
  4763  0E8F                     l3377:	
  4764                           
  4765                           ;./CustomLib/TrafficLight.h: 95:     }
  4766  0E8F  3001               	movlw	1
  4767  0E90  00AD               	movwf	??_SetReceivedTimes
  4768  0E91  082D               	movf	??_SetReceivedTimes,w
  4769  0E92  07B5               	addwf	SetReceivedTimes@i,f
  4770  0E93  2E39               	goto	l3365
  4771  0E94                     l154:	
  4772  0E94  0008               	return
  4773  0E95                     __end_of_SetReceivedTimes:	
  4774                           
  4775                           	psect	text16
  4776  0BB9                     __ptext16:	
  4777 ;; *************** function _GetTime *****************
  4778 ;; Defined at:
  4779 ;;		line 37 in file "./CustomLib/TrafficLight.h"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  index           1    wreg     unsigned char 
  4782 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4783 ;;		 -> dataFromGateway(15), 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  index           1    8[BANK0 ] unsigned char 
  4786 ;;  tmp             2   10[BANK0 ] int 
  4787 ;;  shortInt        1    9[BANK0 ] struct .
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  2    4[BANK0 ] int 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4797 ;;      Params:         0       2       0       0       0
  4798 ;;      Locals:         0       4       0       0       0
  4799 ;;      Temps:          0       2       0       0       0
  4800 ;;      Totals:         0       8       0       0       0
  4801 ;;Total ram usage:        8 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    3
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_SetReceivedTimes
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _GetTime
  4813  0BB9                     _GetTime:	
  4814                           
  4815                           ;incstack = 0
  4816                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4817                           ;GetTime@index stored from wreg
  4818  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  4819  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  4820  0BBB  00A8               	movwf	GetTime@index
  4821  0BBC                     l3101:	
  4822                           
  4823                           ;./CustomLib/TrafficLight.h: 37: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 38: {;./CustomLib/TrafficLight.h: 39:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 43:     } shortInt;;./CustomLib/TrafficLight.h: 45:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4824  0BBC  0828               	movf	GetTime@index,w
  4825  0BBD  0724               	addwf	GetTime@_dataFromGateway,w
  4826  0BBE  00A6               	movwf	??_GetTime
  4827  0BBF  0826               	movf	??_GetTime,w
  4828  0BC0  3E03               	addlw	3
  4829  0BC1  0084               	movwf	4
  4830  0BC2  307F               	movlw	127
  4831  0BC3  1383               	bcf	3,7	;select IRP bank0
  4832  0BC4  0500               	andwf	0,w
  4833  0BC5  00A7               	movwf	??_GetTime+1
  4834  0BC6  0829               	movf	GetTime@shortInt,w
  4835  0BC7  0627               	xorwf	??_GetTime+1,w
  4836  0BC8  3980               	andlw	-128
  4837  0BC9  0627               	xorwf	??_GetTime+1,w
  4838  0BCA  00A9               	movwf	GetTime@shortInt
  4839  0BCB                     l3103:	
  4840                           
  4841                           ;./CustomLib/TrafficLight.h: 46:     tmp = shortInt.Val;
  4842  0BCB  0829               	movf	GetTime@shortInt,w
  4843  0BCC  397F               	andlw	127
  4844  0BCD  00A6               	movwf	??_GetTime
  4845  0BCE  01A7               	clrf	??_GetTime+1
  4846  0BCF  0826               	movf	??_GetTime,w
  4847  0BD0  00AA               	movwf	GetTime@tmp
  4848  0BD1  0827               	movf	??_GetTime+1,w
  4849  0BD2  00AB               	movwf	GetTime@tmp+1
  4850  0BD3                     l3105:	
  4851                           
  4852                           ;./CustomLib/TrafficLight.h: 47:     tmp = (tmp << 7) & 0x80;
  4853  0BD3  082B               	movf	GetTime@tmp+1,w
  4854  0BD4  00A7               	movwf	??_GetTime+1
  4855  0BD5  082A               	movf	GetTime@tmp,w
  4856  0BD6  00A6               	movwf	??_GetTime
  4857  0BD7  3007               	movlw	7
  4858  0BD8  00FF               	movwf	btemp+1
  4859  0BD9                     u2425:	
  4860  0BD9  1003               	clrc
  4861  0BDA  0DA6               	rlf	??_GetTime,f
  4862  0BDB  0DA7               	rlf	??_GetTime+1,f
  4863  0BDC  0BFF               	decfsz	btemp+1,f
  4864  0BDD  2BD9               	goto	u2425
  4865  0BDE  3080               	movlw	128
  4866  0BDF  0526               	andwf	??_GetTime,w
  4867  0BE0  00AA               	movwf	GetTime@tmp
  4868  0BE1  3000               	movlw	0
  4869  0BE2  0527               	andwf	??_GetTime+1,w
  4870  0BE3  00AB               	movwf	GetTime@tmp+1
  4871  0BE4                     l3107:	
  4872                           
  4873                           ;./CustomLib/TrafficLight.h: 49:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4874  0BE4  0828               	movf	GetTime@index,w
  4875  0BE5  0724               	addwf	GetTime@_dataFromGateway,w
  4876  0BE6  00A6               	movwf	??_GetTime
  4877  0BE7  0826               	movf	??_GetTime,w
  4878  0BE8  3E02               	addlw	2
  4879  0BE9  0084               	movwf	4
  4880  0BEA  307F               	movlw	127
  4881  0BEB  0500               	andwf	0,w
  4882  0BEC  00A7               	movwf	??_GetTime+1
  4883  0BED  0829               	movf	GetTime@shortInt,w
  4884  0BEE  0627               	xorwf	??_GetTime+1,w
  4885  0BEF  3980               	andlw	-128
  4886  0BF0  0627               	xorwf	??_GetTime+1,w
  4887  0BF1  00A9               	movwf	GetTime@shortInt
  4888  0BF2                     l3109:	
  4889                           
  4890                           ;./CustomLib/TrafficLight.h: 50:     tmp = tmp | shortInt.Val;
  4891  0BF2  0829               	movf	GetTime@shortInt,w
  4892  0BF3  397F               	andlw	127
  4893  0BF4  00A6               	movwf	??_GetTime
  4894  0BF5  082A               	movf	GetTime@tmp,w
  4895  0BF6  0426               	iorwf	??_GetTime,w
  4896  0BF7  00AA               	movwf	GetTime@tmp
  4897  0BF8  082B               	movf	GetTime@tmp+1,w
  4898  0BF9  00AB               	movwf	GetTime@tmp+1
  4899  0BFA                     l3111:	
  4900                           
  4901                           ;./CustomLib/TrafficLight.h: 52:     return tmp;
  4902  0BFA  082B               	movf	GetTime@tmp+1,w
  4903  0BFB  00A5               	movwf	?_GetTime+1
  4904  0BFC  082A               	movf	GetTime@tmp,w
  4905  0BFD  00A4               	movwf	?_GetTime
  4906  0BFE                     l137:	
  4907  0BFE  0008               	return
  4908  0BFF                     __end_of_GetTime:	
  4909                           
  4910                           	psect	text17
  4911  0625                     __ptext17:	
  4912 ;; *************** function _SetDefaultTimers *****************
  4913 ;; Defined at:
  4914 ;;		line 56 in file "./CustomLib/TrafficLight.h"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  rosso           2    4[BANK0 ] int 
  4917 ;;  verde           2    6[BANK0 ] int 
  4918 ;;  giallo          2    8[BANK0 ] int 
  4919 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4920 ;;		 -> Semafori(2), 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  i               1   15[BANK0 ] unsigned char 
  4923 ;;  l               1   14[BANK0 ] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4933 ;;      Params:         0       7       0       0       0
  4934 ;;      Locals:         0       2       0       0       0
  4935 ;;      Temps:          0       3       0       0       0
  4936 ;;      Totals:         0      12       0       0       0
  4937 ;;Total ram usage:       12 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    3
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		_main
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           
  4948                           ;psect for function _SetDefaultTimers
  4949  0625                     _SetDefaultTimers:	
  4950  0625                     l3327:	
  4951                           ;incstack = 0
  4952                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4953                           
  4954                           
  4955                           ;./CustomLib/TrafficLight.h: 56: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 57: {;./CustomLib/TrafficLight.h: 58: 
      +                              for (unsigned char l = 0; l < n_semafori; l++)
  4956  0625  1283               	bcf	3,5	;RP0=0, select bank0
  4957  0626  1303               	bcf	3,6	;RP1=0, select bank0
  4958  0627  01AE               	clrf	SetDefaultTimers@l
  4959  0628                     l3333:	
  4960                           
  4961                           ;./CustomLib/TrafficLight.h: 59:     {;./CustomLib/TrafficLight.h: 60:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4962  0628  01AF               	clrf	SetDefaultTimers@i
  4963  0629  2E99               	goto	l3347
  4964  062A                     l3339:	
  4965                           
  4966                           ;./CustomLib/TrafficLight.h: 65:                 (*(_semafori)[l]).times[i] = rosso;
  4967  062A  082E               	movf	SetDefaultTimers@l,w
  4968  062B  072A               	addwf	SetDefaultTimers@_semafori,w
  4969  062C  00AB               	movwf	??_SetDefaultTimers
  4970  062D  082B               	movf	??_SetDefaultTimers,w
  4971  062E  0084               	movwf	4
  4972  062F  082F               	movf	SetDefaultTimers@i,w
  4973  0630  00AC               	movwf	??_SetDefaultTimers+1
  4974  0631  072C               	addwf	??_SetDefaultTimers+1,w
  4975  0632  1383               	bcf	3,7	;select IRP bank0
  4976  0633  0700               	addwf	0,w
  4977  0634  00AD               	movwf	??_SetDefaultTimers+2
  4978  0635  082D               	movf	??_SetDefaultTimers+2,w
  4979  0636  0084               	movwf	4
  4980  0637  0824               	movf	SetDefaultTimers@rosso,w
  4981  0638  0080               	movwf	0
  4982  0639  0A84               	incf	4,f
  4983  063A  0825               	movf	SetDefaultTimers@rosso+1,w
  4984  063B  0080               	movwf	0
  4985                           
  4986                           ;./CustomLib/TrafficLight.h: 66:                 (*(_semafori)[l]).new_times[i] = rosso;
  4987  063C  082E               	movf	SetDefaultTimers@l,w
  4988  063D  072A               	addwf	SetDefaultTimers@_semafori,w
  4989  063E  00AB               	movwf	??_SetDefaultTimers
  4990  063F  082B               	movf	??_SetDefaultTimers,w
  4991  0640  0084               	movwf	4
  4992  0641  082F               	movf	SetDefaultTimers@i,w
  4993  0642  00AC               	movwf	??_SetDefaultTimers+1
  4994  0643  072C               	addwf	??_SetDefaultTimers+1,w
  4995  0644  0700               	addwf	0,w
  4996  0645  00AD               	movwf	??_SetDefaultTimers+2
  4997  0646  082D               	movf	??_SetDefaultTimers+2,w
  4998  0647  3E06               	addlw	6
  4999  0648  0084               	movwf	4
  5000  0649  0824               	movf	SetDefaultTimers@rosso,w
  5001  064A  0080               	movwf	0
  5002  064B  0A84               	incf	4,f
  5003  064C  0825               	movf	SetDefaultTimers@rosso+1,w
  5004  064D  0080               	movwf	0
  5005                           
  5006                           ;./CustomLib/TrafficLight.h: 67:                 break;
  5007  064E  2EAC               	goto	l3349
  5008  064F                     l3341:	
  5009                           
  5010                           ;./CustomLib/TrafficLight.h: 69:                 (*(_semafori)[l]).times[i] = verde;
  5011  064F  082E               	movf	SetDefaultTimers@l,w
  5012  0650  072A               	addwf	SetDefaultTimers@_semafori,w
  5013  0651  00AB               	movwf	??_SetDefaultTimers
  5014  0652  082B               	movf	??_SetDefaultTimers,w
  5015  0653  0084               	movwf	4
  5016  0654  082F               	movf	SetDefaultTimers@i,w
  5017  0655  00AC               	movwf	??_SetDefaultTimers+1
  5018  0656  072C               	addwf	??_SetDefaultTimers+1,w
  5019  0657  1383               	bcf	3,7	;select IRP bank0
  5020  0658  0700               	addwf	0,w
  5021  0659  00AD               	movwf	??_SetDefaultTimers+2
  5022  065A  082D               	movf	??_SetDefaultTimers+2,w
  5023  065B  0084               	movwf	4
  5024  065C  0826               	movf	SetDefaultTimers@verde,w
  5025  065D  0080               	movwf	0
  5026  065E  0A84               	incf	4,f
  5027  065F  0827               	movf	SetDefaultTimers@verde+1,w
  5028  0660  0080               	movwf	0
  5029                           
  5030                           ;./CustomLib/TrafficLight.h: 70:                 (*(_semafori)[l]).new_times[i] = verde;
  5031  0661  082E               	movf	SetDefaultTimers@l,w
  5032  0662  072A               	addwf	SetDefaultTimers@_semafori,w
  5033  0663  00AB               	movwf	??_SetDefaultTimers
  5034  0664  082B               	movf	??_SetDefaultTimers,w
  5035  0665  0084               	movwf	4
  5036  0666  082F               	movf	SetDefaultTimers@i,w
  5037  0667  00AC               	movwf	??_SetDefaultTimers+1
  5038  0668  072C               	addwf	??_SetDefaultTimers+1,w
  5039  0669  0700               	addwf	0,w
  5040  066A  00AD               	movwf	??_SetDefaultTimers+2
  5041  066B  082D               	movf	??_SetDefaultTimers+2,w
  5042  066C  3E06               	addlw	6
  5043  066D  0084               	movwf	4
  5044  066E  0826               	movf	SetDefaultTimers@verde,w
  5045  066F  0080               	movwf	0
  5046  0670  0A84               	incf	4,f
  5047  0671  0827               	movf	SetDefaultTimers@verde+1,w
  5048  0672  0080               	movwf	0
  5049                           
  5050                           ;./CustomLib/TrafficLight.h: 71:                 break;
  5051  0673  2EAC               	goto	l3349
  5052  0674                     l3343:	
  5053                           
  5054                           ;./CustomLib/TrafficLight.h: 73:                 (*(_semafori)[l]).times[i] = giallo;
  5055  0674  082E               	movf	SetDefaultTimers@l,w
  5056  0675  072A               	addwf	SetDefaultTimers@_semafori,w
  5057  0676  00AB               	movwf	??_SetDefaultTimers
  5058  0677  082B               	movf	??_SetDefaultTimers,w
  5059  0678  0084               	movwf	4
  5060  0679  082F               	movf	SetDefaultTimers@i,w
  5061  067A  00AC               	movwf	??_SetDefaultTimers+1
  5062  067B  072C               	addwf	??_SetDefaultTimers+1,w
  5063  067C  1383               	bcf	3,7	;select IRP bank0
  5064  067D  0700               	addwf	0,w
  5065  067E  00AD               	movwf	??_SetDefaultTimers+2
  5066  067F  082D               	movf	??_SetDefaultTimers+2,w
  5067  0680  0084               	movwf	4
  5068  0681  0828               	movf	SetDefaultTimers@giallo,w
  5069  0682  0080               	movwf	0
  5070  0683  0A84               	incf	4,f
  5071  0684  0829               	movf	SetDefaultTimers@giallo+1,w
  5072  0685  0080               	movwf	0
  5073                           
  5074                           ;./CustomLib/TrafficLight.h: 74:                 (*(_semafori)[l]).new_times[i] = giallo
      +                          ;
  5075  0686  082E               	movf	SetDefaultTimers@l,w
  5076  0687  072A               	addwf	SetDefaultTimers@_semafori,w
  5077  0688  00AB               	movwf	??_SetDefaultTimers
  5078  0689  082B               	movf	??_SetDefaultTimers,w
  5079  068A  0084               	movwf	4
  5080  068B  082F               	movf	SetDefaultTimers@i,w
  5081  068C  00AC               	movwf	??_SetDefaultTimers+1
  5082  068D  072C               	addwf	??_SetDefaultTimers+1,w
  5083  068E  0700               	addwf	0,w
  5084  068F  00AD               	movwf	??_SetDefaultTimers+2
  5085  0690  082D               	movf	??_SetDefaultTimers+2,w
  5086  0691  3E06               	addlw	6
  5087  0692  0084               	movwf	4
  5088  0693  0828               	movf	SetDefaultTimers@giallo,w
  5089  0694  0080               	movwf	0
  5090  0695  0A84               	incf	4,f
  5091  0696  0829               	movf	SetDefaultTimers@giallo+1,w
  5092  0697  0080               	movwf	0
  5093                           
  5094                           ;./CustomLib/TrafficLight.h: 75:                 break;
  5095  0698  2EAC               	goto	l3349
  5096  0699                     l3347:	
  5097  0699  082F               	movf	SetDefaultTimers@i,w
  5098  069A  00AB               	movwf	??_SetDefaultTimers
  5099  069B  01AC               	clrf	??_SetDefaultTimers+1
  5100                           
  5101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5102                           ; Switch size 1, requested type "simple"
  5103                           ; Number of cases is 1, Range of values is 0 to 0
  5104                           ; switch strategies available:
  5105                           ; Name         Instructions Cycles
  5106                           ; simple_byte            4     3 (average)
  5107                           ; direct_byte           11     8 (fixed)
  5108                           ; jumptable            260     6 (fixed)
  5109                           ;	Chosen strategy is simple_byte
  5110  069C  082C               	movf	??_SetDefaultTimers+1,w
  5111  069D  3A00               	xorlw	0	; case 0
  5112  069E  1903               	skipnz
  5113  069F  2EA1               	goto	l3967
  5114  06A0  2EAC               	goto	l3349
  5115  06A1                     l3967:	
  5116                           
  5117                           ; Switch size 1, requested type "simple"
  5118                           ; Number of cases is 3, Range of values is 0 to 2
  5119                           ; switch strategies available:
  5120                           ; Name         Instructions Cycles
  5121                           ; simple_byte           10     6 (average)
  5122                           ; direct_byte           17     8 (fixed)
  5123                           ; jumptable            260     6 (fixed)
  5124                           ;	Chosen strategy is simple_byte
  5125  06A1  082B               	movf	??_SetDefaultTimers,w
  5126  06A2  3A00               	xorlw	0	; case 0
  5127  06A3  1903               	skipnz
  5128  06A4  2E2A               	goto	l3339
  5129  06A5  3A01               	xorlw	1	; case 1
  5130  06A6  1903               	skipnz
  5131  06A7  2E4F               	goto	l3341
  5132  06A8  3A03               	xorlw	3	; case 2
  5133  06A9  1903               	skipnz
  5134  06AA  2E74               	goto	l3343
  5135  06AB  2EAC               	goto	l3349
  5136  06AC                     l3349:	
  5137                           
  5138                           ;./CustomLib/TrafficLight.h: 77:         }
  5139  06AC  3001               	movlw	1
  5140  06AD  00AB               	movwf	??_SetDefaultTimers
  5141  06AE  082B               	movf	??_SetDefaultTimers,w
  5142  06AF  07AF               	addwf	SetDefaultTimers@i,f
  5143  06B0                     l3351:	
  5144  06B0  3003               	movlw	3
  5145  06B1  022F               	subwf	SetDefaultTimers@i,w
  5146  06B2  1C03               	skipc
  5147  06B3  2EB5               	goto	u2871
  5148  06B4  2EB6               	goto	u2870
  5149  06B5                     u2871:	
  5150  06B5  2E99               	goto	l3347
  5151  06B6                     u2870:	
  5152  06B6                     l3353:	
  5153                           
  5154                           ;./CustomLib/TrafficLight.h: 78:     }
  5155  06B6  3001               	movlw	1
  5156  06B7  00AB               	movwf	??_SetDefaultTimers
  5157  06B8  082B               	movf	??_SetDefaultTimers,w
  5158  06B9  07AE               	addwf	SetDefaultTimers@l,f
  5159  06BA                     l3355:	
  5160  06BA  3002               	movlw	2
  5161  06BB  022E               	subwf	SetDefaultTimers@l,w
  5162  06BC  1C03               	skipc
  5163  06BD  2EBF               	goto	u2881
  5164  06BE  2EC0               	goto	u2880
  5165  06BF                     u2881:	
  5166  06BF  2E28               	goto	l3333
  5167  06C0                     u2880:	
  5168  06C0                     l3357:	
  5169                           
  5170                           ;./CustomLib/TrafficLight.h: 80:     (*(_semafori)[0]).lux_select = 0;
  5171  06C0  082A               	movf	SetDefaultTimers@_semafori,w
  5172  06C1  0084               	movwf	4
  5173  06C2  1383               	bcf	3,7	;select IRP bank0
  5174  06C3  0800               	movf	0,w
  5175  06C4  3E0C               	addlw	12
  5176  06C5  0084               	movwf	4
  5177  06C6  0180               	clrf	0
  5178                           
  5179                           ;./CustomLib/TrafficLight.h: 81:     (*(_semafori)[0]).new_lux_select = 0;
  5180  06C7  082A               	movf	SetDefaultTimers@_semafori,w
  5181  06C8  0084               	movwf	4
  5182  06C9  0800               	movf	0,w
  5183  06CA  3E0D               	addlw	13
  5184  06CB  0084               	movwf	4
  5185  06CC  0180               	clrf	0
  5186                           
  5187                           ;./CustomLib/TrafficLight.h: 82:     (*(_semafori)[1]).lux_select = 1;
  5188  06CD  0A2A               	incf	SetDefaultTimers@_semafori,w
  5189  06CE  0084               	movwf	4
  5190  06CF  0800               	movf	0,w
  5191  06D0  3E0C               	addlw	12
  5192  06D1  0084               	movwf	4
  5193  06D2  0180               	clrf	0
  5194  06D3  0A80               	incf	0,f
  5195                           
  5196                           ;./CustomLib/TrafficLight.h: 83:     (*(_semafori)[1]).new_lux_select = 1;
  5197  06D4  0A2A               	incf	SetDefaultTimers@_semafori,w
  5198  06D5  0084               	movwf	4
  5199  06D6  0800               	movf	0,w
  5200  06D7  3E0D               	addlw	13
  5201  06D8  0084               	movwf	4
  5202  06D9  0180               	clrf	0
  5203  06DA  0A80               	incf	0,f
  5204  06DB                     l149:	
  5205  06DB  0008               	return
  5206  06DC                     __end_of_SetDefaultTimers:	
  5207                           
  5208                           	psect	text18
  5209  0490                     __ptext18:	
  5210 ;; *************** function _GetDigits *****************
  5211 ;; Defined at:
  5212 ;;		line 98 in file "./CustomLib/TrafficLight.h"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  _digits         1    wreg     PTR PTR struct .
  5215 ;;		 -> DigitsArr(2), 
  5216 ;;  index           1   20[BANK0 ] unsigned char 
  5217 ;;  Time            2   21[BANK0 ] int 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  _digits         1   28[BANK0 ] PTR PTR struct .
  5220 ;;		 -> DigitsArr(2), 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5230 ;;      Params:         0       3       0       0       0
  5231 ;;      Locals:         0       3       0       0       0
  5232 ;;      Temps:          0       3       0       0       0
  5233 ;;      Totals:         0       9       0       0       0
  5234 ;;Total ram usage:        9 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    4
  5237 ;; This function calls:
  5238 ;;		___awdiv
  5239 ;;		___awmod
  5240 ;;		___bmul
  5241 ;; This function is called by:
  5242 ;;		_main
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           
  5247                           ;psect for function _GetDigits
  5248  0490                     _GetDigits:	
  5249                           
  5250                           ;incstack = 0
  5251                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5252                           ;GetDigits@_digits stored from wreg
  5253  0490  1283               	bcf	3,5	;RP0=0, select bank0
  5254  0491  1303               	bcf	3,6	;RP1=0, select bank0
  5255  0492  00BC               	movwf	GetDigits@_digits
  5256  0493                     l3381:	
  5257                           
  5258                           ;./CustomLib/TrafficLight.h: 98: void GetDigits(_Digits _digits, unsigned char index, in
      +                          t Time);./CustomLib/TrafficLight.h: 99: {;./CustomLib/TrafficLight.h: 100:     while (Ti
      +                          me / 1000 > 0)
  5259  0493  2CA9               	goto	l3385
  5260  0494                     l3383:	
  5261                           
  5262                           ;./CustomLib/TrafficLight.h: 101:     {;./CustomLib/TrafficLight.h: 102:         Time = 
      +                          Time / 10;
  5263  0494  300A               	movlw	10
  5264  0495  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0496  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0497  00AB               	movwf	___awdiv@divisor
  5267  0498  3000               	movlw	0
  5268  0499  00AC               	movwf	___awdiv@divisor+1
  5269  049A  0836               	movf	GetDigits@Time+1,w
  5270  049B  00AE               	movwf	___awdiv@dividend+1
  5271  049C  0835               	movf	GetDigits@Time,w
  5272  049D  00AD               	movwf	___awdiv@dividend
  5273  049E  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5274  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  5275  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  5276  04A5  082C               	movf	?___awdiv+1,w
  5277  04A6  00B6               	movwf	GetDigits@Time+1
  5278  04A7  082B               	movf	?___awdiv,w
  5279  04A8  00B5               	movwf	GetDigits@Time
  5280  04A9                     l3385:	
  5281                           
  5282                           ;./CustomLib/TrafficLight.h: 100:     while (Time / 1000 > 0)
  5283  04A9  30E8               	movlw	232
  5284  04AA  00AB               	movwf	___awdiv@divisor
  5285  04AB  3003               	movlw	3
  5286  04AC  00AC               	movwf	___awdiv@divisor+1
  5287  04AD  0836               	movf	GetDigits@Time+1,w
  5288  04AE  00AE               	movwf	___awdiv@dividend+1
  5289  04AF  0835               	movf	GetDigits@Time,w
  5290  04B0  00AD               	movwf	___awdiv@dividend
  5291  04B1  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5292  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  5293  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  5294  04B8  082C               	movf	?___awdiv+1,w
  5295  04B9  3A80               	xorlw	128
  5296  04BA  00FF               	movwf	btemp+1
  5297  04BB  3080               	movlw	128
  5298  04BC  027F               	subwf	btemp+1,w
  5299  04BD  1D03               	skipz
  5300  04BE  2CC1               	goto	u2915
  5301  04BF  3001               	movlw	1
  5302  04C0  022B               	subwf	?___awdiv,w
  5303  04C1                     u2915:	
  5304  04C1  1803               	skipnc
  5305  04C2  2CC4               	goto	u2911
  5306  04C3  2CC5               	goto	u2910
  5307  04C4                     u2911:	
  5308  04C4  2C94               	goto	l3383
  5309  04C5                     u2910:	
  5310  04C5                     l3387:	
  5311                           
  5312                           ;./CustomLib/TrafficLight.h: 105:     (*_digits)[index].centinaia = Time / 100;
  5313  04C5  3064               	movlw	100
  5314  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  5315  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  5316  04C8  00AB               	movwf	___awdiv@divisor
  5317  04C9  3000               	movlw	0
  5318  04CA  00AC               	movwf	___awdiv@divisor+1
  5319  04CB  0836               	movf	GetDigits@Time+1,w
  5320  04CC  00AE               	movwf	___awdiv@dividend+1
  5321  04CD  0835               	movf	GetDigits@Time,w
  5322  04CE  00AD               	movwf	___awdiv@dividend
  5323  04CF  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5324  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  5325  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  5326  04D6  082B               	movf	?___awdiv,w
  5327  04D7  00B7               	movwf	??_GetDigits
  5328  04D8  083C               	movf	GetDigits@_digits,w
  5329  04D9  0084               	movwf	4
  5330  04DA  3003               	movlw	3
  5331  04DB  00B8               	movwf	??_GetDigits+1
  5332  04DC  0838               	movf	??_GetDigits+1,w
  5333  04DD  00A4               	movwf	___bmul@multiplicand
  5334  04DE  0834               	movf	GetDigits@index,w
  5335  04DF  120A  158A  22B5  120A  118A  	fcall	___bmul
  5336  04E4  1383               	bcf	3,7	;select IRP bank0
  5337  04E5  0700               	addwf	0,w
  5338  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  5339  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  5340  04E8  00B9               	movwf	??_GetDigits+2
  5341  04E9  0839               	movf	??_GetDigits+2,w
  5342  04EA  0084               	movwf	4
  5343  04EB  0837               	movf	??_GetDigits,w
  5344  04EC  0080               	movwf	0
  5345                           
  5346                           ;./CustomLib/TrafficLight.h: 106:     (*_digits)[index].decine = (Time % 100) / 10;
  5347  04ED  300A               	movlw	10
  5348  04EE  00AB               	movwf	___awdiv@divisor
  5349  04EF  3000               	movlw	0
  5350  04F0  00AC               	movwf	___awdiv@divisor+1
  5351  04F1  0836               	movf	GetDigits@Time+1,w
  5352  04F2  00A7               	movwf	___awmod@dividend+1
  5353  04F3  0835               	movf	GetDigits@Time,w
  5354  04F4  00A6               	movwf	___awmod@dividend
  5355  04F5  3064               	movlw	100
  5356  04F6  00A4               	movwf	___awmod@divisor
  5357  04F7  3000               	movlw	0
  5358  04F8  00A5               	movwf	___awmod@divisor+1
  5359  04F9  120A  158A  25DA  120A  118A  	fcall	___awmod
  5360  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  5361  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  5362  0500  0825               	movf	?___awmod+1,w
  5363  0501  00AE               	movwf	___awdiv@dividend+1
  5364  0502  0824               	movf	?___awmod,w
  5365  0503  00AD               	movwf	___awdiv@dividend
  5366  0504  120A  158A  26FA  120A  118A  	fcall	___awdiv
  5367  0509  1283               	bcf	3,5	;RP0=0, select bank0
  5368  050A  1303               	bcf	3,6	;RP1=0, select bank0
  5369  050B  082B               	movf	?___awdiv,w
  5370  050C  00B7               	movwf	??_GetDigits
  5371  050D  083C               	movf	GetDigits@_digits,w
  5372  050E  0084               	movwf	4
  5373  050F  3003               	movlw	3
  5374  0510  00B8               	movwf	??_GetDigits+1
  5375  0511  0838               	movf	??_GetDigits+1,w
  5376  0512  00A4               	movwf	___bmul@multiplicand
  5377  0513  0834               	movf	GetDigits@index,w
  5378  0514  120A  158A  22B5  120A  118A  	fcall	___bmul
  5379  0519  1383               	bcf	3,7	;select IRP bank0
  5380  051A  0700               	addwf	0,w
  5381  051B  1283               	bcf	3,5	;RP0=0, select bank0
  5382  051C  1303               	bcf	3,6	;RP1=0, select bank0
  5383  051D  00B9               	movwf	??_GetDigits+2
  5384  051E  0A39               	incf	??_GetDigits+2,w
  5385  051F  0084               	movwf	4
  5386  0520  0837               	movf	??_GetDigits,w
  5387  0521  0080               	movwf	0
  5388  0522                     l3389:	
  5389                           
  5390                           ;./CustomLib/TrafficLight.h: 107:     (*_digits)[index].unita = (Time % 100) % 10;
  5391  0522  0836               	movf	GetDigits@Time+1,w
  5392  0523  00A7               	movwf	___awmod@dividend+1
  5393  0524  0835               	movf	GetDigits@Time,w
  5394  0525  00A6               	movwf	___awmod@dividend
  5395  0526  3064               	movlw	100
  5396  0527  00A4               	movwf	___awmod@divisor
  5397  0528  3000               	movlw	0
  5398  0529  00A5               	movwf	___awmod@divisor+1
  5399  052A  120A  158A  25DA  120A  118A  	fcall	___awmod
  5400  052F  1283               	bcf	3,5	;RP0=0, select bank0
  5401  0530  1303               	bcf	3,6	;RP1=0, select bank0
  5402  0531  0825               	movf	?___awmod+1,w
  5403  0532  00BB               	movwf	_GetDigits$1203+1
  5404  0533  0824               	movf	?___awmod,w
  5405  0534  00BA               	movwf	_GetDigits$1203
  5406  0535                     l3391:	
  5407                           
  5408                           ;./CustomLib/TrafficLight.h: 107:     (*_digits)[index].unita = (Time % 100) % 10;
  5409  0535  300A               	movlw	10
  5410  0536  00A4               	movwf	___awmod@divisor
  5411  0537  3000               	movlw	0
  5412  0538  00A5               	movwf	___awmod@divisor+1
  5413  0539  083B               	movf	_GetDigits$1203+1,w
  5414  053A  00A7               	movwf	___awmod@dividend+1
  5415  053B  083A               	movf	_GetDigits$1203,w
  5416  053C  00A6               	movwf	___awmod@dividend
  5417  053D  120A  158A  25DA  120A  118A  	fcall	___awmod
  5418  0542  1283               	bcf	3,5	;RP0=0, select bank0
  5419  0543  1303               	bcf	3,6	;RP1=0, select bank0
  5420  0544  0824               	movf	?___awmod,w
  5421  0545  00B7               	movwf	??_GetDigits
  5422  0546  083C               	movf	GetDigits@_digits,w
  5423  0547  0084               	movwf	4
  5424  0548  3003               	movlw	3
  5425  0549  00B8               	movwf	??_GetDigits+1
  5426  054A  0838               	movf	??_GetDigits+1,w
  5427  054B  00A4               	movwf	___bmul@multiplicand
  5428  054C  0834               	movf	GetDigits@index,w
  5429  054D  120A  158A  22B5  120A  118A  	fcall	___bmul
  5430  0552  1383               	bcf	3,7	;select IRP bank0
  5431  0553  0700               	addwf	0,w
  5432  0554  1283               	bcf	3,5	;RP0=0, select bank0
  5433  0555  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0556  00B9               	movwf	??_GetDigits+2
  5435  0557  0839               	movf	??_GetDigits+2,w
  5436  0558  3E02               	addlw	2
  5437  0559  0084               	movwf	4
  5438  055A  0837               	movf	??_GetDigits,w
  5439  055B  0080               	movwf	0
  5440  055C                     l160:	
  5441  055C  0008               	return
  5442  055D                     __end_of_GetDigits:	
  5443                           
  5444                           	psect	text19
  5445  0AB5                     __ptext19:	
  5446 ;; *************** function ___bmul *****************
  5447 ;; Defined at:
  5448 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  multiplier      1    wreg     unsigned char 
  5451 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  multiplier      1    7[BANK0 ] unsigned char 
  5454 ;;  product         1    6[BANK0 ] unsigned char 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      unsigned char 
  5457 ;; Registers used:
  5458 ;;		wreg, status,2, status,0
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5464 ;;      Params:         0       1       0       0       0
  5465 ;;      Locals:         0       2       0       0       0
  5466 ;;      Temps:          0       1       0       0       0
  5467 ;;      Totals:         0       4       0       0       0
  5468 ;;Total ram usage:        4 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    3
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_SetReceivedTimes
  5475 ;;		_GetDigits
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           
  5480                           ;psect for function ___bmul
  5481  0AB5                     ___bmul:	
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5485                           ;___bmul@multiplier stored from wreg
  5486  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  5487  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  5488  0AB7  00A7               	movwf	___bmul@multiplier
  5489  0AB8                     l3165:	
  5490  0AB8  01A6               	clrf	___bmul@product
  5491  0AB9                     l3167:	
  5492  0AB9  1C27               	btfss	___bmul@multiplier,0
  5493  0ABA  2ABC               	goto	u2531
  5494  0ABB  2ABD               	goto	u2530
  5495  0ABC                     u2531:	
  5496  0ABC  2AC1               	goto	l3171
  5497  0ABD                     u2530:	
  5498  0ABD                     l3169:	
  5499  0ABD  0824               	movf	___bmul@multiplicand,w
  5500  0ABE  00A5               	movwf	??___bmul
  5501  0ABF  0825               	movf	??___bmul,w
  5502  0AC0  07A6               	addwf	___bmul@product,f
  5503  0AC1                     l3171:	
  5504  0AC1  1003               	clrc
  5505  0AC2  0DA4               	rlf	___bmul@multiplicand,f
  5506  0AC3                     l3173:	
  5507  0AC3  1003               	clrc
  5508  0AC4  0CA7               	rrf	___bmul@multiplier,f
  5509  0AC5  0827               	movf	___bmul@multiplier,w
  5510  0AC6  1D03               	btfss	3,2
  5511  0AC7  2AC9               	goto	u2541
  5512  0AC8  2ACA               	goto	u2540
  5513  0AC9                     u2541:	
  5514  0AC9  2AB9               	goto	l3167
  5515  0ACA                     u2540:	
  5516  0ACA                     l3175:	
  5517  0ACA  0826               	movf	___bmul@product,w
  5518  0ACB                     l465:	
  5519  0ACB  0008               	return
  5520  0ACC                     __end_of___bmul:	
  5521                           
  5522                           	psect	text20
  5523  0DDA                     __ptext20:	
  5524 ;; *************** function ___awmod *****************
  5525 ;; Defined at:
  5526 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  divisor         2    4[BANK0 ] int 
  5529 ;;  dividend        2    6[BANK0 ] int 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  sign            1   10[BANK0 ] unsigned char 
  5532 ;;  counter         1    9[BANK0 ] unsigned char 
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  2    4[BANK0 ] int 
  5535 ;; Registers used:
  5536 ;;		wreg, status,2, status,0
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5542 ;;      Params:         0       4       0       0       0
  5543 ;;      Locals:         0       2       0       0       0
  5544 ;;      Temps:          0       1       0       0       0
  5545 ;;      Totals:         0       7       0       0       0
  5546 ;;Total ram usage:        7 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:    3
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_GetDigits
  5553 ;;		_ShowDigitsOnDisplay
  5554 ;;		_ChangeTrafficLight
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function ___awmod
  5560  0DDA                     ___awmod:	
  5561  0DDA                     l3263:	
  5562                           ;incstack = 0
  5563                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5564                           
  5565  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5566  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5567  0DDC  01AA               	clrf	___awmod@sign
  5568  0DDD                     l3265:	
  5569  0DDD  1FA7               	btfss	___awmod@dividend+1,7
  5570  0DDE  2DE0               	goto	u2751
  5571  0DDF  2DE1               	goto	u2750
  5572  0DE0                     u2751:	
  5573  0DE0  2DE8               	goto	l3271
  5574  0DE1                     u2750:	
  5575  0DE1                     l3267:	
  5576  0DE1  09A6               	comf	___awmod@dividend,f
  5577  0DE2  09A7               	comf	___awmod@dividend+1,f
  5578  0DE3  0AA6               	incf	___awmod@dividend,f
  5579  0DE4  1903               	skipnz
  5580  0DE5  0AA7               	incf	___awmod@dividend+1,f
  5581  0DE6                     l3269:	
  5582  0DE6  01AA               	clrf	___awmod@sign
  5583  0DE7  0AAA               	incf	___awmod@sign,f
  5584  0DE8                     l3271:	
  5585  0DE8  1FA5               	btfss	___awmod@divisor+1,7
  5586  0DE9  2DEB               	goto	u2761
  5587  0DEA  2DEC               	goto	u2760
  5588  0DEB                     u2761:	
  5589  0DEB  2DF1               	goto	l3275
  5590  0DEC                     u2760:	
  5591  0DEC                     l3273:	
  5592  0DEC  09A4               	comf	___awmod@divisor,f
  5593  0DED  09A5               	comf	___awmod@divisor+1,f
  5594  0DEE  0AA4               	incf	___awmod@divisor,f
  5595  0DEF  1903               	skipnz
  5596  0DF0  0AA5               	incf	___awmod@divisor+1,f
  5597  0DF1                     l3275:	
  5598  0DF1  0824               	movf	___awmod@divisor,w
  5599  0DF2  0425               	iorwf	___awmod@divisor+1,w
  5600  0DF3  1903               	btfsc	3,2
  5601  0DF4  2DF6               	goto	u2771
  5602  0DF5  2DF7               	goto	u2770
  5603  0DF6                     u2771:	
  5604  0DF6  2E26               	goto	l3293
  5605  0DF7                     u2770:	
  5606  0DF7                     l3277:	
  5607  0DF7  01A9               	clrf	___awmod@counter
  5608  0DF8  0AA9               	incf	___awmod@counter,f
  5609  0DF9  2E05               	goto	l3283
  5610  0DFA                     l3279:	
  5611  0DFA  3001               	movlw	1
  5612  0DFB                     u2785:	
  5613  0DFB  1003               	clrc
  5614  0DFC  0DA4               	rlf	___awmod@divisor,f
  5615  0DFD  0DA5               	rlf	___awmod@divisor+1,f
  5616  0DFE  3EFF               	addlw	-1
  5617  0DFF  1D03               	skipz
  5618  0E00  2DFB               	goto	u2785
  5619  0E01                     l3281:	
  5620  0E01  3001               	movlw	1
  5621  0E02  00A8               	movwf	??___awmod
  5622  0E03  0828               	movf	??___awmod,w
  5623  0E04  07A9               	addwf	___awmod@counter,f
  5624  0E05                     l3283:	
  5625  0E05  1FA5               	btfss	___awmod@divisor+1,7
  5626  0E06  2E08               	goto	u2791
  5627  0E07  2E09               	goto	u2790
  5628  0E08                     u2791:	
  5629  0E08  2DFA               	goto	l3279
  5630  0E09                     u2790:	
  5631  0E09                     l3285:	
  5632  0E09  0825               	movf	___awmod@divisor+1,w
  5633  0E0A  0227               	subwf	___awmod@dividend+1,w
  5634  0E0B  1D03               	skipz
  5635  0E0C  2E0F               	goto	u2805
  5636  0E0D  0824               	movf	___awmod@divisor,w
  5637  0E0E  0226               	subwf	___awmod@dividend,w
  5638  0E0F                     u2805:	
  5639  0E0F  1C03               	skipc
  5640  0E10  2E12               	goto	u2801
  5641  0E11  2E13               	goto	u2800
  5642  0E12                     u2801:	
  5643  0E12  2E19               	goto	l3289
  5644  0E13                     u2800:	
  5645  0E13                     l3287:	
  5646  0E13  0824               	movf	___awmod@divisor,w
  5647  0E14  02A6               	subwf	___awmod@dividend,f
  5648  0E15  0825               	movf	___awmod@divisor+1,w
  5649  0E16  1C03               	skipc
  5650  0E17  03A7               	decf	___awmod@dividend+1,f
  5651  0E18  02A7               	subwf	___awmod@dividend+1,f
  5652  0E19                     l3289:	
  5653  0E19  3001               	movlw	1
  5654  0E1A                     u2815:	
  5655  0E1A  1003               	clrc
  5656  0E1B  0CA5               	rrf	___awmod@divisor+1,f
  5657  0E1C  0CA4               	rrf	___awmod@divisor,f
  5658  0E1D  3EFF               	addlw	-1
  5659  0E1E  1D03               	skipz
  5660  0E1F  2E1A               	goto	u2815
  5661  0E20                     l3291:	
  5662  0E20  3001               	movlw	1
  5663  0E21  02A9               	subwf	___awmod@counter,f
  5664  0E22  1D03               	btfss	3,2
  5665  0E23  2E25               	goto	u2821
  5666  0E24  2E26               	goto	u2820
  5667  0E25                     u2821:	
  5668  0E25  2E09               	goto	l3285
  5669  0E26                     u2820:	
  5670  0E26                     l3293:	
  5671  0E26  082A               	movf	___awmod@sign,w
  5672  0E27  1903               	btfsc	3,2
  5673  0E28  2E2A               	goto	u2831
  5674  0E29  2E2B               	goto	u2830
  5675  0E2A                     u2831:	
  5676  0E2A  2E30               	goto	l3297
  5677  0E2B                     u2830:	
  5678  0E2B                     l3295:	
  5679  0E2B  09A6               	comf	___awmod@dividend,f
  5680  0E2C  09A7               	comf	___awmod@dividend+1,f
  5681  0E2D  0AA6               	incf	___awmod@dividend,f
  5682  0E2E  1903               	skipnz
  5683  0E2F  0AA7               	incf	___awmod@dividend+1,f
  5684  0E30                     l3297:	
  5685  0E30  0827               	movf	___awmod@dividend+1,w
  5686  0E31  00A5               	movwf	?___awmod+1
  5687  0E32  0826               	movf	___awmod@dividend,w
  5688  0E33  00A4               	movwf	?___awmod
  5689  0E34                     l605:	
  5690  0E34  0008               	return
  5691  0E35                     __end_of___awmod:	
  5692                           
  5693                           	psect	text21
  5694  0EFA                     __ptext21:	
  5695 ;; *************** function ___awdiv *****************
  5696 ;; Defined at:
  5697 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  divisor         2   11[BANK0 ] int 
  5700 ;;  dividend        2   13[BANK0 ] int 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  quotient        2   18[BANK0 ] int 
  5703 ;;  sign            1   17[BANK0 ] unsigned char 
  5704 ;;  counter         1   16[BANK0 ] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  2   11[BANK0 ] int 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5714 ;;      Params:         0       4       0       0       0
  5715 ;;      Locals:         0       4       0       0       0
  5716 ;;      Temps:          0       1       0       0       0
  5717 ;;      Totals:         0       9       0       0       0
  5718 ;;Total ram usage:        9 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    3
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_GetDigits
  5725 ;;		_map
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function ___awdiv
  5731  0EFA                     ___awdiv:	
  5732  0EFA                     l3219:	
  5733                           ;incstack = 0
  5734                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5735                           
  5736  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  5737  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  5738  0EFC  01B1               	clrf	___awdiv@sign
  5739  0EFD                     l3221:	
  5740  0EFD  1FAC               	btfss	___awdiv@divisor+1,7
  5741  0EFE  2F00               	goto	u2651
  5742  0EFF  2F01               	goto	u2650
  5743  0F00                     u2651:	
  5744  0F00  2F08               	goto	l3227
  5745  0F01                     u2650:	
  5746  0F01                     l3223:	
  5747  0F01  09AB               	comf	___awdiv@divisor,f
  5748  0F02  09AC               	comf	___awdiv@divisor+1,f
  5749  0F03  0AAB               	incf	___awdiv@divisor,f
  5750  0F04  1903               	skipnz
  5751  0F05  0AAC               	incf	___awdiv@divisor+1,f
  5752  0F06                     l3225:	
  5753  0F06  01B1               	clrf	___awdiv@sign
  5754  0F07  0AB1               	incf	___awdiv@sign,f
  5755  0F08                     l3227:	
  5756  0F08  1FAE               	btfss	___awdiv@dividend+1,7
  5757  0F09  2F0B               	goto	u2661
  5758  0F0A  2F0C               	goto	u2660
  5759  0F0B                     u2661:	
  5760  0F0B  2F15               	goto	l3233
  5761  0F0C                     u2660:	
  5762  0F0C                     l3229:	
  5763  0F0C  09AD               	comf	___awdiv@dividend,f
  5764  0F0D  09AE               	comf	___awdiv@dividend+1,f
  5765  0F0E  0AAD               	incf	___awdiv@dividend,f
  5766  0F0F  1903               	skipnz
  5767  0F10  0AAE               	incf	___awdiv@dividend+1,f
  5768  0F11                     l3231:	
  5769  0F11  3001               	movlw	1
  5770  0F12  00AF               	movwf	??___awdiv
  5771  0F13  082F               	movf	??___awdiv,w
  5772  0F14  06B1               	xorwf	___awdiv@sign,f
  5773  0F15                     l3233:	
  5774  0F15  01B2               	clrf	___awdiv@quotient
  5775  0F16  01B3               	clrf	___awdiv@quotient+1
  5776  0F17                     l3235:	
  5777  0F17  082B               	movf	___awdiv@divisor,w
  5778  0F18  042C               	iorwf	___awdiv@divisor+1,w
  5779  0F19  1903               	btfsc	3,2
  5780  0F1A  2F1C               	goto	u2671
  5781  0F1B  2F1D               	goto	u2670
  5782  0F1C                     u2671:	
  5783  0F1C  2F54               	goto	l3255
  5784  0F1D                     u2670:	
  5785  0F1D                     l3237:	
  5786  0F1D  01B0               	clrf	___awdiv@counter
  5787  0F1E  0AB0               	incf	___awdiv@counter,f
  5788  0F1F  2F2B               	goto	l3243
  5789  0F20                     l3239:	
  5790  0F20  3001               	movlw	1
  5791  0F21                     u2685:	
  5792  0F21  1003               	clrc
  5793  0F22  0DAB               	rlf	___awdiv@divisor,f
  5794  0F23  0DAC               	rlf	___awdiv@divisor+1,f
  5795  0F24  3EFF               	addlw	-1
  5796  0F25  1D03               	skipz
  5797  0F26  2F21               	goto	u2685
  5798  0F27                     l3241:	
  5799  0F27  3001               	movlw	1
  5800  0F28  00AF               	movwf	??___awdiv
  5801  0F29  082F               	movf	??___awdiv,w
  5802  0F2A  07B0               	addwf	___awdiv@counter,f
  5803  0F2B                     l3243:	
  5804  0F2B  1FAC               	btfss	___awdiv@divisor+1,7
  5805  0F2C  2F2E               	goto	u2691
  5806  0F2D  2F2F               	goto	u2690
  5807  0F2E                     u2691:	
  5808  0F2E  2F20               	goto	l3239
  5809  0F2F                     u2690:	
  5810  0F2F                     l3245:	
  5811  0F2F  3001               	movlw	1
  5812  0F30                     u2705:	
  5813  0F30  1003               	clrc
  5814  0F31  0DB2               	rlf	___awdiv@quotient,f
  5815  0F32  0DB3               	rlf	___awdiv@quotient+1,f
  5816  0F33  3EFF               	addlw	-1
  5817  0F34  1D03               	skipz
  5818  0F35  2F30               	goto	u2705
  5819  0F36  082C               	movf	___awdiv@divisor+1,w
  5820  0F37  022E               	subwf	___awdiv@dividend+1,w
  5821  0F38  1D03               	skipz
  5822  0F39  2F3C               	goto	u2715
  5823  0F3A  082B               	movf	___awdiv@divisor,w
  5824  0F3B  022D               	subwf	___awdiv@dividend,w
  5825  0F3C                     u2715:	
  5826  0F3C  1C03               	skipc
  5827  0F3D  2F3F               	goto	u2711
  5828  0F3E  2F40               	goto	u2710
  5829  0F3F                     u2711:	
  5830  0F3F  2F47               	goto	l3251
  5831  0F40                     u2710:	
  5832  0F40                     l3247:	
  5833  0F40  082B               	movf	___awdiv@divisor,w
  5834  0F41  02AD               	subwf	___awdiv@dividend,f
  5835  0F42  082C               	movf	___awdiv@divisor+1,w
  5836  0F43  1C03               	skipc
  5837  0F44  03AE               	decf	___awdiv@dividend+1,f
  5838  0F45  02AE               	subwf	___awdiv@dividend+1,f
  5839  0F46                     l3249:	
  5840  0F46  1432               	bsf	___awdiv@quotient,0
  5841  0F47                     l3251:	
  5842  0F47  3001               	movlw	1
  5843  0F48                     u2725:	
  5844  0F48  1003               	clrc
  5845  0F49  0CAC               	rrf	___awdiv@divisor+1,f
  5846  0F4A  0CAB               	rrf	___awdiv@divisor,f
  5847  0F4B  3EFF               	addlw	-1
  5848  0F4C  1D03               	skipz
  5849  0F4D  2F48               	goto	u2725
  5850  0F4E                     l3253:	
  5851  0F4E  3001               	movlw	1
  5852  0F4F  02B0               	subwf	___awdiv@counter,f
  5853  0F50  1D03               	btfss	3,2
  5854  0F51  2F53               	goto	u2731
  5855  0F52  2F54               	goto	u2730
  5856  0F53                     u2731:	
  5857  0F53  2F2F               	goto	l3245
  5858  0F54                     u2730:	
  5859  0F54                     l3255:	
  5860  0F54  0831               	movf	___awdiv@sign,w
  5861  0F55  1903               	btfsc	3,2
  5862  0F56  2F58               	goto	u2741
  5863  0F57  2F59               	goto	u2740
  5864  0F58                     u2741:	
  5865  0F58  2F5E               	goto	l3259
  5866  0F59                     u2740:	
  5867  0F59                     l3257:	
  5868  0F59  09B2               	comf	___awdiv@quotient,f
  5869  0F5A  09B3               	comf	___awdiv@quotient+1,f
  5870  0F5B  0AB2               	incf	___awdiv@quotient,f
  5871  0F5C  1903               	skipnz
  5872  0F5D  0AB3               	incf	___awdiv@quotient+1,f
  5873  0F5E                     l3259:	
  5874  0F5E  0833               	movf	___awdiv@quotient+1,w
  5875  0F5F  00AC               	movwf	?___awdiv+1
  5876  0F60  0832               	movf	___awdiv@quotient,w
  5877  0F61  00AB               	movwf	?___awdiv
  5878  0F62                     l592:	
  5879  0F62  0008               	return
  5880  0F63                     __end_of___awdiv:	
  5881                           
  5882                           	psect	text22
  5883  0ACC                     __ptext22:	
  5884 ;; *************** function _ADC_Read *****************
  5885 ;; Defined at:
  5886 ;;		line 352 in file "main.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  canale          1    wreg     unsigned char 
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;  canale          1    7[BANK0 ] unsigned char 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  2    4[BANK0 ] int 
  5893 ;; Registers used:
  5894 ;;		wreg, status,2, status,0
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5900 ;;      Params:         0       2       0       0       0
  5901 ;;      Locals:         0       1       0       0       0
  5902 ;;      Temps:          0       1       0       0       0
  5903 ;;      Totals:         0       4       0       0       0
  5904 ;;Total ram usage:        4 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    3
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_main
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           
  5915                           ;psect for function _ADC_Read
  5916  0ACC                     _ADC_Read:	
  5917                           
  5918                           ;incstack = 0
  5919                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5920                           ;ADC_Read@canale stored from wreg
  5921  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  5922  0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  5923  0ACE  00A7               	movwf	ADC_Read@canale
  5924  0ACF                     l3439:	
  5925                           
  5926                           ;main.c: 352: int ADC_Read(char canale);main.c: 353: {;main.c: 354:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5927  0ACF  0827               	movf	ADC_Read@canale,w
  5928  0AD0  00A6               	movwf	??_ADC_Read
  5929  0AD1  3002               	movlw	2
  5930  0AD2                     u2955:	
  5931  0AD2  1003               	clrc
  5932  0AD3  0DA6               	rlf	??_ADC_Read,f
  5933  0AD4  3EFF               	addlw	-1
  5934  0AD5  1D03               	skipz
  5935  0AD6  2AD2               	goto	u2955
  5936  0AD7  1003               	clrc
  5937  0AD8  0D26               	rlf	??_ADC_Read,w
  5938  0AD9  3801               	iorlw	1
  5939  0ADA  009F               	movwf	31	;volatile
  5940  0ADB                     l3441:	
  5941                           
  5942                           ;main.c: 355:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5943  0ADB  3004               	movlw	4
  5944  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  5945  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  5946  0ADE  00A6               	movwf	??_ADC_Read
  5947  0ADF                     u3287:	
  5948  0ADF  0BA6               	decfsz	??_ADC_Read,f
  5949  0AE0  2ADF               	goto	u3287
  5950  0AE1  0000               	nop
  5951  0AE2                     l3443:	
  5952                           
  5953                           ;main.c: 356:     GO_nDONE = 1;
  5954  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  5955  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  5956  0AE4  151F               	bsf	31,2	;volatile
  5957  0AE5                     l268:	
  5958                           ;main.c: 358:         ;
  5959                           
  5960                           
  5961                           ;main.c: 357:     while (GO_nDONE)
  5962  0AE5  191F               	btfsc	31,2	;volatile
  5963  0AE6  2AE8               	goto	u2961
  5964  0AE7  2AE9               	goto	u2960
  5965  0AE8                     u2961:	
  5966  0AE8  2AE5               	goto	l268
  5967  0AE9                     u2960:	
  5968  0AE9                     l3445:	
  5969                           
  5970                           ;main.c: 359:     return ADRESL + (ADRESH << 8);
  5971  0AE9  081E               	movf	30,w	;volatile
  5972  0AEA  00A5               	movwf	?_ADC_Read+1
  5973  0AEB  1683               	bsf	3,5	;RP0=1, select bank1
  5974  0AEC  1303               	bcf	3,6	;RP1=0, select bank1
  5975  0AED  081E               	movf	30,w	;volatile
  5976  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  5977  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  5978  0AF0  00A4               	movwf	?_ADC_Read
  5979  0AF1                     l271:	
  5980  0AF1  0008               	return
  5981  0AF2                     __end_of_ADC_Read:	
  5982                           
  5983                           	psect	text23
  5984  0D82                     __ptext23:	
  5985 ;; *************** function _ISR *****************
  5986 ;; Defined at:
  5987 ;;		line 530 in file "main.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;		None
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6001 ;;      Params:         0       0       0       0       0
  6002 ;;      Locals:         0       0       0       0       0
  6003 ;;      Temps:          0       4       0       0       0
  6004 ;;      Totals:         0       4       0       0       0
  6005 ;;Total ram usage:        4 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; Hardware stack levels required when called:    2
  6008 ;; This function calls:
  6009 ;;		_UART_Read
  6010 ;;		_conteggioVeicoli
  6011 ;; This function is called by:
  6012 ;;		Interrupt level 1
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           
  6017                           ;psect for function _ISR
  6018  0D82                     _ISR:	
  6019  0D82                     i1l2769:	
  6020                           
  6021                           ;main.c: 533:     if (RCIF && readGateway.Bit == 0)
  6022  0D82  1E8C               	btfss	12,5	;volatile
  6023  0D83  2D85               	goto	u225_21
  6024  0D84  2D86               	goto	u225_20
  6025  0D85                     u225_21:	
  6026  0D85  2D8F               	goto	i1l2777
  6027  0D86                     u225_20:	
  6028  0D86                     i1l2771:	
  6029  0D86  1858               	btfsc	_readGateway,0
  6030  0D87  2D89               	goto	u226_21
  6031  0D88  2D8A               	goto	u226_20
  6032  0D89                     u226_21:	
  6033  0D89  2D8F               	goto	i1l2777
  6034  0D8A                     u226_20:	
  6035  0D8A                     i1l2773:	
  6036                           
  6037                           ;main.c: 534:     {;main.c: 535:         readGateway.Bit = 1;
  6038  0D8A  1458               	bsf	_readGateway,0
  6039                           
  6040                           ;main.c: 536:         readGatewayDone.Bit = 0;
  6041  0D8B  1059               	bcf	_readGatewayDone,0
  6042                           
  6043                           ;main.c: 537:         readGatewayDone.Timeout = 0;
  6044  0D8C  10D9               	bcf	_readGatewayDone,1
  6045  0D8D                     i1l2775:	
  6046                           
  6047                           ;main.c: 538:         dataFromGatewayIndex = 0;
  6048  0D8D  01D3               	clrf	_dataFromGatewayIndex
  6049                           
  6050                           ;main.c: 539:         timerReadFromGateway = 0;
  6051  0D8E  01D2               	clrf	_timerReadFromGateway
  6052  0D8F                     i1l2777:	
  6053                           
  6054                           ;main.c: 541:     if (RCIF && readGateway.Bit == 1)
  6055  0D8F  1E8C               	btfss	12,5	;volatile
  6056  0D90  2D92               	goto	u227_21
  6057  0D91  2D93               	goto	u227_20
  6058  0D92                     u227_21:	
  6059  0D92  2DAA               	goto	i1l2787
  6060  0D93                     u227_20:	
  6061  0D93                     i1l2779:	
  6062  0D93  1C58               	btfss	_readGateway,0
  6063  0D94  2D96               	goto	u228_21
  6064  0D95  2D97               	goto	u228_20
  6065  0D96                     u228_21:	
  6066  0D96  2DAA               	goto	i1l2787
  6067  0D97                     u228_20:	
  6068  0D97                     i1l2781:	
  6069                           
  6070                           ;main.c: 542:     {;main.c: 543:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  6071  0D97  120A  158A  2286  120A  158A  	fcall	_UART_Read
  6072  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  6073  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  6074  0D9E  00A0               	movwf	??_ISR
  6075  0D9F  0853               	movf	_dataFromGatewayIndex,w
  6076  0DA0  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  6077  0DA1  0084               	movwf	4
  6078  0DA2  0820               	movf	??_ISR,w
  6079  0DA3  1383               	bcf	3,7	;select IRP bank1
  6080  0DA4  0080               	movwf	0
  6081  0DA5                     i1l2783:	
  6082                           
  6083                           ;main.c: 544:         dataFromGatewayIndex++;
  6084  0DA5  3001               	movlw	1
  6085  0DA6  00A0               	movwf	??_ISR
  6086  0DA7  0820               	movf	??_ISR,w
  6087  0DA8  07D3               	addwf	_dataFromGatewayIndex,f
  6088  0DA9                     i1l2785:	
  6089                           
  6090                           ;main.c: 545:         timerReadFromGateway = 0;
  6091  0DA9  01D2               	clrf	_timerReadFromGateway
  6092  0DAA                     i1l2787:	
  6093                           
  6094                           ;main.c: 550:     if (TMR0IF)
  6095  0DAA  1D0B               	btfss	11,2	;volatile
  6096  0DAB  2DAD               	goto	u229_21
  6097  0DAC  2DAE               	goto	u229_20
  6098  0DAD                     u229_21:	
  6099  0DAD  2DB8               	goto	i1l2795
  6100  0DAE                     u229_20:	
  6101  0DAE                     i1l2789:	
  6102                           
  6103                           ;main.c: 551:     {;main.c: 552:         TMR0IF = 0;
  6104  0DAE  110B               	bcf	11,2	;volatile
  6105  0DAF                     i1l2791:	
  6106                           
  6107                           ;main.c: 553:         conteggioVeicoli();
  6108  0DAF  120A  158A  2695  120A  158A  	fcall	_conteggioVeicoli
  6109  0DB4                     i1l2793:	
  6110                           
  6111                           ;main.c: 554:         TMR0 = 6;
  6112  0DB4  3006               	movlw	6
  6113  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  6114  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  6115  0DB7  0081               	movwf	1	;volatile
  6116  0DB8                     i1l2795:	
  6117                           
  6118                           ;main.c: 557:     if (TMR1IF)
  6119  0DB8  1C0C               	btfss	12,0	;volatile
  6120  0DB9  2DBB               	goto	u230_21
  6121  0DBA  2DBC               	goto	u230_20
  6122  0DBB                     u230_21:	
  6123  0DBB  2DD1               	goto	i1l353
  6124  0DBC                     u230_20:	
  6125  0DBC                     i1l2797:	
  6126                           
  6127                           ;main.c: 558:     {;main.c: 559:         TMR1IF = 0;
  6128  0DBC  100C               	bcf	12,0	;volatile
  6129  0DBD                     i1l2799:	
  6130                           
  6131                           ;main.c: 560:         count_lux++;
  6132  0DBD  3001               	movlw	1
  6133  0DBE  00A0               	movwf	??_ISR
  6134  0DBF  0820               	movf	??_ISR,w
  6135  0DC0  07D4               	addwf	_count_lux,f
  6136  0DC1                     i1l2801:	
  6137                           
  6138                           ;main.c: 562:         if (count_lux >= 20)
  6139  0DC1  3014               	movlw	20
  6140  0DC2  0254               	subwf	_count_lux,w
  6141  0DC3  1C03               	skipc
  6142  0DC4  2DC6               	goto	u231_21
  6143  0DC5  2DC7               	goto	u231_20
  6144  0DC6                     u231_21:	
  6145  0DC6  2DCD               	goto	i1l2809
  6146  0DC7                     u231_20:	
  6147  0DC7                     i1l2803:	
  6148                           
  6149                           ;main.c: 563:         {;main.c: 564:             secondPassed.Bit = 1;
  6150  0DC7  1457               	bsf	_secondPassed,0
  6151  0DC8                     i1l2805:	
  6152                           
  6153                           ;main.c: 565:             count_lux = 0;
  6154  0DC8  01D4               	clrf	_count_lux
  6155  0DC9                     i1l2807:	
  6156                           
  6157                           ;main.c: 566:             timerReadFromGateway++;
  6158  0DC9  3001               	movlw	1
  6159  0DCA  00A0               	movwf	??_ISR
  6160  0DCB  0820               	movf	??_ISR,w
  6161  0DCC  07D2               	addwf	_timerReadFromGateway,f
  6162  0DCD                     i1l2809:	
  6163                           
  6164                           ;main.c: 569:         TMR1H = 60;
  6165  0DCD  303C               	movlw	60
  6166  0DCE  008F               	movwf	15	;volatile
  6167  0DCF                     i1l2811:	
  6168                           
  6169                           ;main.c: 570:         TMR1L = 176;
  6170  0DCF  30B0               	movlw	176
  6171  0DD0  008E               	movwf	14	;volatile
  6172  0DD1                     i1l353:	
  6173  0DD1  0823               	movf	??_ISR+3,w
  6174  0DD2  008A               	movwf	10
  6175  0DD3  0822               	movf	??_ISR+2,w
  6176  0DD4  0084               	movwf	4
  6177  0DD5  0E21               	swapf	(??_ISR+1)^0,w
  6178  0DD6  0083               	movwf	3
  6179  0DD7  0EFE               	swapf	btemp,f
  6180  0DD8  0E7E               	swapf	btemp,w
  6181  0DD9  0009               	retfie
  6182  0DDA                     __end_of_ISR:	
  6183                           
  6184                           	psect	intentry
  6185  0004                     __pintentry:	
  6186                           ;incstack = 0
  6187                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6188                           
  6189  0004                     interrupt_function:	
  6190  007E                     saved_w	set	btemp
  6191  0004  00FE               	movwf	btemp
  6192  0005  0E03               	swapf	3,w
  6193  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6194  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6195  0008  00A1               	movwf	??_ISR+1
  6196  0009  0804               	movf	4,w
  6197  000A  00A2               	movwf	??_ISR+2
  6198  000B  080A               	movf	10,w
  6199  000C  00A3               	movwf	??_ISR+3
  6200  000D  120A  158A  2D82   	ljmp	_ISR
  6201                           
  6202                           	psect	text24
  6203  0E95                     __ptext24:	
  6204 ;; *************** function _conteggioVeicoli *****************
  6205 ;; Defined at:
  6206 ;;		line 410 in file "main.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  i               1   13[COMMON] unsigned char 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6220 ;;      Params:         0       0       0       0       0
  6221 ;;      Locals:         1       0       0       0       0
  6222 ;;      Temps:          4       0       0       0       0
  6223 ;;      Totals:         5       0       0       0       0
  6224 ;;Total ram usage:        5 bytes
  6225 ;; Hardware stack levels used:    1
  6226 ;; Hardware stack levels required when called:    1
  6227 ;; This function calls:
  6228 ;;		_Conteggio
  6229 ;; This function is called by:
  6230 ;;		_ISR
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           
  6235                           ;psect for function _conteggioVeicoli
  6236  0E95                     _conteggioVeicoli:	
  6237  0E95                     i1l2529:	
  6238                           ;incstack = 0
  6239                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6240                           
  6241                           
  6242                           ;main.c: 412:     RoadsSensors[0] = PORTBbits.RB3;
  6243  0E95  3000               	movlw	0
  6244  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  6245  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  6246  0E98  1986               	btfsc	6,3	;volatile
  6247  0E99  3001               	movlw	1
  6248  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  6249  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  6250  0E9C  00A0               	movwf	_RoadsSensors^(0+128)
  6251                           
  6252                           ;main.c: 413:     RoadsSensors[1] = PORTBbits.RB4;
  6253  0E9D  3000               	movlw	0
  6254  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  6255  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  6256  0EA0  1A06               	btfsc	6,4	;volatile
  6257  0EA1  3001               	movlw	1
  6258  0EA2  1683               	bsf	3,5	;RP0=1, select bank1
  6259  0EA3  1303               	bcf	3,6	;RP1=0, select bank1
  6260  0EA4  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  6261                           
  6262                           ;main.c: 414:     RoadsSensors[2] = PORTBbits.RB5;
  6263  0EA5  3000               	movlw	0
  6264  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  6265  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  6266  0EA8  1A86               	btfsc	6,5	;volatile
  6267  0EA9  3001               	movlw	1
  6268  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  6269  0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  6270  0EAC  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  6271                           
  6272                           ;main.c: 415:     RoadsSensors[3] = PORTAbits.RA5;
  6273  0EAD  3000               	movlw	0
  6274  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  6275  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  6276  0EB0  1A85               	btfsc	5,5	;volatile
  6277  0EB1  3001               	movlw	1
  6278  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  6279  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  6280  0EB4  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  6281  0EB5                     i1l2531:	
  6282                           
  6283                           ;main.c: 417:     for (unsigned char i = 0; i < 4; i++)
  6284  0EB5  01FD               	clrf	conteggioVeicoli@i
  6285  0EB6                     i1l2535:	
  6286                           
  6287                           ;main.c: 418:     {;main.c: 419:         if (!RoadsSensors[i])
  6288  0EB6  087D               	movf	conteggioVeicoli@i,w
  6289  0EB7  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6290  0EB8  0084               	movwf	4
  6291  0EB9  1383               	bcf	3,7	;select IRP bank1
  6292  0EBA  0800               	movf	0,w
  6293  0EBB  1D03               	btfss	3,2
  6294  0EBC  2EBE               	goto	u196_21
  6295  0EBD  2EBF               	goto	u196_20
  6296  0EBE                     u196_21:	
  6297  0EBE  2EC8               	goto	i1l2539
  6298  0EBF                     u196_20:	
  6299  0EBF                     i1l2537:	
  6300                           
  6301                           ;main.c: 420:         {;main.c: 421:             count++;
  6302  0EBF  3001               	movlw	1
  6303  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  6304  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  6305  0EC2  07CD               	addwf	_count,f
  6306  0EC3  1803               	skipnc
  6307  0EC4  0ACE               	incf	_count+1,f
  6308  0EC5  3000               	movlw	0
  6309  0EC6  07CE               	addwf	_count+1,f
  6310                           
  6311                           ;main.c: 422:         }
  6312  0EC7  2EEF               	goto	i1l2545
  6313  0EC8                     i1l2539:	
  6314  0EC8  087D               	movf	conteggioVeicoli@i,w
  6315  0EC9  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6316  0ECA  0084               	movwf	4
  6317  0ECB  0800               	movf	0,w
  6318  0ECC  1903               	btfsc	3,2
  6319  0ECD  2ECF               	goto	u197_21
  6320  0ECE  2ED0               	goto	u197_20
  6321  0ECF                     u197_21:	
  6322  0ECF  2EEF               	goto	i1l2545
  6323  0ED0                     u197_20:	
  6324  0ED0                     i1l2541:	
  6325                           
  6326                           ;main.c: 424:         {;main.c: 425:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  6327  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  6328  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  6329  0ED2  084E               	movf	_count+1,w
  6330  0ED3  00F1               	movwf	Conteggio@_count+1
  6331  0ED4  084D               	movf	_count,w
  6332  0ED5  00F0               	movwf	Conteggio@_count
  6333  0ED6  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  6334  0ED7  00F9               	movwf	??_conteggioVeicoli
  6335  0ED8  0879               	movf	??_conteggioVeicoli,w
  6336  0ED9  00F2               	movwf	Conteggio@_motorcycle
  6337  0EDA  30D3               	movlw	(low (_car| 0))& (0+255)
  6338  0EDB  00FA               	movwf	??_conteggioVeicoli+1
  6339  0EDC  087A               	movf	??_conteggioVeicoli+1,w
  6340  0EDD  00F3               	movwf	Conteggio@_car
  6341  0EDE  30CF               	movlw	(low (_truck| 0))& (0+255)
  6342  0EDF  00FB               	movwf	??_conteggioVeicoli+2
  6343  0EE0  087B               	movf	??_conteggioVeicoli+2,w
  6344  0EE1  00F4               	movwf	Conteggio@_truck
  6345  0EE2  087D               	movf	conteggioVeicoli@i,w
  6346  0EE3  00FC               	movwf	??_conteggioVeicoli+3
  6347  0EE4  087C               	movf	??_conteggioVeicoli+3,w
  6348  0EE5  00F5               	movwf	Conteggio@index
  6349  0EE6  120A  158A  248E  120A  158A  	fcall	_Conteggio
  6350  0EEB                     i1l2543:	
  6351                           
  6352                           ;main.c: 426:             count = 0;
  6353  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  6354  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  6355  0EED  01CD               	clrf	_count
  6356  0EEE  01CE               	clrf	_count+1
  6357  0EEF                     i1l2545:	
  6358                           
  6359                           ;main.c: 428:     }
  6360  0EEF  3001               	movlw	1
  6361  0EF0  00F9               	movwf	??_conteggioVeicoli
  6362  0EF1  0879               	movf	??_conteggioVeicoli,w
  6363  0EF2  07FD               	addwf	conteggioVeicoli@i,f
  6364  0EF3                     i1l2547:	
  6365  0EF3  3004               	movlw	4
  6366  0EF4  027D               	subwf	conteggioVeicoli@i,w
  6367  0EF5  1C03               	skipc
  6368  0EF6  2EF8               	goto	u198_21
  6369  0EF7  2EF9               	goto	u198_20
  6370  0EF8                     u198_21:	
  6371  0EF8  2EB6               	goto	i1l2535
  6372  0EF9                     u198_20:	
  6373  0EF9                     i1l305:	
  6374  0EF9  0008               	return
  6375  0EFA                     __end_of_conteggioVeicoli:	
  6376                           
  6377                           	psect	text25
  6378  0C8E                     __ptext25:	
  6379 ;; *************** function _Conteggio *****************
  6380 ;; Defined at:
  6381 ;;		line 111 in file "./CustomLib/TrafficLight.h"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  _count          2    0[COMMON] unsigned int 
  6384 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  6385 ;;		 -> motorcycle(4), 
  6386 ;;  _car            1    3[COMMON] PTR unsigned char 
  6387 ;;		 -> car(4), 
  6388 ;;  _truck          1    4[COMMON] PTR unsigned char 
  6389 ;;		 -> truck(4), 
  6390 ;;  index           1    5[COMMON] unsigned char 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6402 ;;      Params:         6       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0
  6404 ;;      Temps:          3       0       0       0       0
  6405 ;;      Totals:         9       0       0       0       0
  6406 ;;Total ram usage:        9 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_conteggioVeicoli
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           
  6416                           ;psect for function _Conteggio
  6417  0C8E                     _Conteggio:	
  6418  0C8E                     i1l2113:	
  6419                           ;incstack = 0
  6420                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  6421                           
  6422                           
  6423                           ;./CustomLib/TrafficLight.h: 111: void Conteggio(unsigned int _count, unsigned char _mot
      +                          orcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custo
      +                          mLib/TrafficLight.h: 112: {;./CustomLib/TrafficLight.h: 113:     if (_count >= 500)
  6424  0C8E  3001               	movlw	1
  6425  0C8F  0271               	subwf	Conteggio@_count+1,w
  6426  0C90  30F4               	movlw	244
  6427  0C91  1903               	skipnz
  6428  0C92  0270               	subwf	Conteggio@_count,w
  6429  0C93  1C03               	skipc
  6430  0C94  2C96               	goto	u134_21
  6431  0C95  2C97               	goto	u134_20
  6432  0C96                     u134_21:	
  6433  0C96  2CA7               	goto	i1l2117
  6434  0C97                     u134_20:	
  6435  0C97                     i1l2115:	
  6436                           
  6437                           ;./CustomLib/TrafficLight.h: 114:     {;./CustomLib/TrafficLight.h: 115:         _motorc
      +                          ycle[index] = _motorcycle[index] + 1;
  6438  0C97  0875               	movf	Conteggio@index,w
  6439  0C98  0772               	addwf	Conteggio@_motorcycle,w
  6440  0C99  00F6               	movwf	??_Conteggio
  6441  0C9A  0876               	movf	??_Conteggio,w
  6442  0C9B  0084               	movwf	4
  6443  0C9C  1383               	bcf	3,7	;select IRP bank0
  6444  0C9D  0800               	movf	0,w
  6445  0C9E  3E01               	addlw	1
  6446  0C9F  00F7               	movwf	??_Conteggio+1
  6447  0CA0  0875               	movf	Conteggio@index,w
  6448  0CA1  0772               	addwf	Conteggio@_motorcycle,w
  6449  0CA2  00F8               	movwf	??_Conteggio+2
  6450  0CA3  0878               	movf	??_Conteggio+2,w
  6451  0CA4  0084               	movwf	4
  6452  0CA5  0877               	movf	??_Conteggio+1,w
  6453  0CA6  0080               	movwf	0
  6454  0CA7                     i1l2117:	
  6455                           
  6456                           ;./CustomLib/TrafficLight.h: 117:     if (_count >= 1500)
  6457  0CA7  3005               	movlw	5
  6458  0CA8  0271               	subwf	Conteggio@_count+1,w
  6459  0CA9  30DC               	movlw	220
  6460  0CAA  1903               	skipnz
  6461  0CAB  0270               	subwf	Conteggio@_count,w
  6462  0CAC  1C03               	skipc
  6463  0CAD  2CAF               	goto	u135_21
  6464  0CAE  2CB0               	goto	u135_20
  6465  0CAF                     u135_21:	
  6466  0CAF  2CC0               	goto	i1l2121
  6467  0CB0                     u135_20:	
  6468  0CB0                     i1l2119:	
  6469                           
  6470                           ;./CustomLib/TrafficLight.h: 118:     {;./CustomLib/TrafficLight.h: 119:         _car[in
      +                          dex] = _car[index] + 1;
  6471  0CB0  0875               	movf	Conteggio@index,w
  6472  0CB1  0773               	addwf	Conteggio@_car,w
  6473  0CB2  00F6               	movwf	??_Conteggio
  6474  0CB3  0876               	movf	??_Conteggio,w
  6475  0CB4  0084               	movwf	4
  6476  0CB5  1383               	bcf	3,7	;select IRP bank0
  6477  0CB6  0800               	movf	0,w
  6478  0CB7  3E01               	addlw	1
  6479  0CB8  00F7               	movwf	??_Conteggio+1
  6480  0CB9  0875               	movf	Conteggio@index,w
  6481  0CBA  0773               	addwf	Conteggio@_car,w
  6482  0CBB  00F8               	movwf	??_Conteggio+2
  6483  0CBC  0878               	movf	??_Conteggio+2,w
  6484  0CBD  0084               	movwf	4
  6485  0CBE  0877               	movf	??_Conteggio+1,w
  6486  0CBF  0080               	movwf	0
  6487  0CC0                     i1l2121:	
  6488                           
  6489                           ;./CustomLib/TrafficLight.h: 121:     if (_count >= 3000)
  6490  0CC0  300B               	movlw	11
  6491  0CC1  0271               	subwf	Conteggio@_count+1,w
  6492  0CC2  30B8               	movlw	184
  6493  0CC3  1903               	skipnz
  6494  0CC4  0270               	subwf	Conteggio@_count,w
  6495  0CC5  1C03               	skipc
  6496  0CC6  2CC8               	goto	u136_21
  6497  0CC7  2CC9               	goto	u136_20
  6498  0CC8                     u136_21:	
  6499  0CC8  2CD9               	goto	i1l166
  6500  0CC9                     u136_20:	
  6501  0CC9                     i1l2123:	
  6502                           
  6503                           ;./CustomLib/TrafficLight.h: 122:     {;./CustomLib/TrafficLight.h: 123:         _truck[
      +                          index] = _truck[index] + 1;
  6504  0CC9  0875               	movf	Conteggio@index,w
  6505  0CCA  0774               	addwf	Conteggio@_truck,w
  6506  0CCB  00F6               	movwf	??_Conteggio
  6507  0CCC  0876               	movf	??_Conteggio,w
  6508  0CCD  0084               	movwf	4
  6509  0CCE  1383               	bcf	3,7	;select IRP bank0
  6510  0CCF  0800               	movf	0,w
  6511  0CD0  3E01               	addlw	1
  6512  0CD1  00F7               	movwf	??_Conteggio+1
  6513  0CD2  0875               	movf	Conteggio@index,w
  6514  0CD3  0774               	addwf	Conteggio@_truck,w
  6515  0CD4  00F8               	movwf	??_Conteggio+2
  6516  0CD5  0878               	movf	??_Conteggio+2,w
  6517  0CD6  0084               	movwf	4
  6518  0CD7  0877               	movf	??_Conteggio+1,w
  6519  0CD8  0080               	movwf	0
  6520  0CD9                     i1l166:	
  6521  0CD9  0008               	return
  6522  0CDA                     __end_of_Conteggio:	
  6523                           
  6524                           	psect	text26
  6525  0A86                     __ptext26:	
  6526 ;; *************** function _UART_Read *****************
  6527 ;; Defined at:
  6528 ;;		line 391 in file "main.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;		None
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;		None
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      unsigned char 
  6535 ;; Registers used:
  6536 ;;		wreg
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6542 ;;      Params:         0       0       0       0       0
  6543 ;;      Locals:         0       0       0       0       0
  6544 ;;      Temps:          0       0       0       0       0
  6545 ;;      Totals:         0       0       0       0       0
  6546 ;;Total ram usage:        0 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_ISR
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           
  6556                           ;psect for function _UART_Read
  6557  0A86                     _UART_Read:	
  6558  0A86                     i1l2523:	
  6559                           ;incstack = 0
  6560                           ; Regs used in _UART_Read: [wreg]
  6561                           
  6562  0A86                     i1l289:	
  6563                           ;main.c: 394:         ;
  6564                           
  6565                           
  6566                           ;main.c: 393:     while (!RCIF)
  6567  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  6568  0A87  1303               	bcf	3,6	;RP1=0, select bank0
  6569  0A88  1E8C               	btfss	12,5	;volatile
  6570  0A89  2A8B               	goto	u195_21
  6571  0A8A  2A8C               	goto	u195_20
  6572  0A8B                     u195_21:	
  6573  0A8B  2A86               	goto	i1l289
  6574  0A8C                     u195_20:	
  6575  0A8C                     i1l291:	
  6576                           
  6577                           ;main.c: 395:     RCIF = 0;
  6578  0A8C  128C               	bcf	12,5	;volatile
  6579  0A8D                     i1l2525:	
  6580                           
  6581                           ;main.c: 396:     return RCREG;
  6582  0A8D  081A               	movf	26,w	;volatile
  6583  0A8E                     i1l292:	
  6584  0A8E  0008               	return
  6585  0A8F                     __end_of_UART_Read:	
  6586  007E                     btemp	set	126	;btemp
  6587  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        8
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      70
    BANK1            80     10      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    DigitsArr	PTR struct .[2] size(1) Largest target is 3
		 -> digits1(BANK1[3]), digits0(BANK1[3]), 

    Semafori	PTR struct .[2] size(1) Largest target is 14
		 -> s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK1[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    GetDigits@_digits	PTR PTR struct . size(1) Largest target is 2
		 -> DigitsArr(BANK0[2]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _rand->___lmul
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->_SetDisplay
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   23461
                                             32 BANK0      9     9      0
                                              0 BANK1     10    10      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                           _init_ADC
                       _luciSemaforo
                                _map
                               _rand
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     316
                                             17 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    5528
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2616
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     183
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         13    13      0     668
                                              4 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  3     3      0    3194
                                             11 BANK0      3     3      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           7     3      4    1514
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    10     9      1    1618
                                             12 BANK0     10     9      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    12     5      7    1395
                                              4 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            9     6      3    3993
                                             20 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     721
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
     ___bmul
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _UpdateTimes
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _rand
     ___lmul
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      A      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9B      12        0.0%
ABS                  0      0      9B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jul 13 22:24:51 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                      ___awdiv@sign 0031                                _s0 00C1  
                              _s1 00B3                                fsr 0004               ___wmul@multiplicand 0026  
                  _GetDigits$1203 003A                 luciSemaforo@index 0027                       __CFG_LVP$ON 0000  
                             l111 05FC                               l105 05AB                               l114 0624  
                             l127 07F3                               l311 0CDE                               l223 0356  
                             l160 055C                               l320 0D01                               l137 0BFE  
                             l321 0D05                               l313 0CE2                               l225 0080  
                             l154 0E94                               l314 0CE6                               l322 0D2C  
                             l242 0261                               l149 06DB                               l318 0CFD  
                             l271 0AF1                               l343 0788                               l255 040F  
                             l504 0F77                               l280 07FE                               l329 0D81  
                             l265 0AA1                               l441 0B18                               l169 0B7E  
                             l514 0FFF                               l274 0BB8                               l258 0483  
                             l268 0AE5                               l605 0E34                               l453 0C8D  
                             l277 07F7                               l439 0B00                               l279 07FB  
                             l465 0ACB                               l297 0B49                               l592 0F62  
                             l889 0C45                      __CFG_CPD$OFF 0000                               _ISR 0D82  
                             _car 00D3                               _map 0B4A                               fsr0 0004  
                             indf 0000                      ___awmod@sign 002A                      __CFG_FOSC$HS 0000  
                            ?_ISR 0070             ??_ShowDigitsOnDisplay 002B                              l3101 0BBC  
                            l3111 0BFA                              l3103 0BCB                              l3105 0BD3  
                            l3121 0D31                              l3201 0FB7                              l3041 057E  
                            l3033 0560                              l3107 0BE4                              l3123 0D4F  
                            l3203 0FC9                              l3211 0FE7                              l3035 056F  
                            l3115 07F7                              l3221 0EFD                              l3109 0BF2  
                            l3125 0D52                              l3213 0FEC                              l3205 0FD7  
                            l3301 078C                              l3141 0AFA                              l3061 05B9  
                            l3053 0584                              l3037 057C                              l3117 07FC  
                            l3231 0F11                              l3223 0F01                              l3119 0D30  
                            l3215 0FF7                              l3207 0FD8                              l3143 0B07  
                            l3151 0C46                              l3055 0598                              l3047 0580  
                            l3039 057D                              l3241 0F27                              l3233 0F15  
                            l3225 0F06                              l3129 0D71                              l3209 0FE1  
                            l3313 078E                              l3401 0A96                              l3145 0B0E  
                            l3137 0AF2                              l3161 0C85                              l3153 0C50  
                            l3081 05D5                              l3065 05BA                              l3057 059E  
                            l3251 0F47                              l3243 0F2B                              l3235 0F17  
                            l3227 0F08                              l3219 0EFA                              l3171 0AC1  
                            l3411 0BB6                              l3323 07E9                              l3315 07BC  
                            l3307 078D                              l3403 0A9A                              l3147 0B14  
                            l3139 0AF6                              l3155 0C54                              l3083 05E9  
                            l3075 05D1                              l3067 05C0                              l3059 05B1  
                            l3253 0F4E                              l3245 0F2F                              l3237 0F1D  
                            l3229 0F0C                              l3173 0AC3                              l3165 0AB8  
                            l3341 064F                              l3333 0628                              l3501 0753  
                            l3181 0F66                              l3413 0BB7                              l3405 0B7F  
                            l3325 07ED                              l3317 07DF                              l3157 0C6B  
                            l3093 0610                              l3085 05EF                              l3069 05CD  
                            l3247 0F40                              l3239 0F20                              l3255 0F54  
                            l3271 0DE8                              l3263 0DDA                              l3175 0ACA  
                            l3167 0AB9                              l3351 06B0                              l3343 0674  
                            l3327 0625                              l3503 0766                              l3191 0F92  
                            l3183 0F6A                              l3407 0B87                              l3319 07E3  
                            l3159 0C74                              l3415 0BFF                              l3095 0616  
                            l3087 0602                              l3431 0B30                              l3423 0B1C  
                            l3441 0ADB                              l3257 0F59                              l3249 0F46  
                            l3281 0E01                              l3273 0DEC                              l3265 0DDD  
                            l3169 0ABD                              l3353 06B6                              l3505 076C  
                            l3193 0F9A                              l3185 0F7B                              l3409 0BB5  
                            l3417 0C20                              l3097 0623                              l3089 060F  
                            l3433 0B39                              l3425 0B2F                              l3601 0228  
                            l3521 003B                              l3443 0AE2                              l3259 0F5E  
                            l3291 0E20                              l3283 0E05                              l3275 0DF1  
                            l3267 0DE1                              l3355 06BA                              l3339 062A  
                            l3347 0699                              l3371 0E4F                              l3363 0E38  
                            l3507 0772                              l3195 0F9D                              l3187 0F86  
                            l3179 0F63                              l3419 0C2E                              l3435 0B3F  
                            l3603 0237                              l3531 0046                              l3523 003C  
                            l3445 0AE9                              l3285 0E09                              l3277 0DF7  
                            l3293 0E26                              l3269 0DE6                              l3381 0493  
                            l3357 06C0                              l3349 06AC                              l3373 0E5D  
                            l3365 0E39                              l3197 0FAA                              l3189 0F8A  
                            l3453 0CEA                              l3461 0D1C                              l3437 0B43  
                            l3701 0472                              l3621 02F1                              l3613 024D  
                            l3605 023D                              l3541 005C                              l3533 0048  
                            l3525 003E                              l3439 0ACF                              l3295 0E2B  
                            l3287 0E13                              l3279 0DFA                              l3391 0535  
                            l3383 0494                              l3375 0E70                              l3199 0FAE  
                            l3711 048B                              l3703 0477                              l3623 02FC  
                            l3615 0252                              l3607 024A                              l3551 0079  
                            l3543 0073                              l3535 004A                              l3527 0040  
                            l3519 0035                              l3297 0E30                              l3289 0E19  
                            l3385 04A9                              l3377 0E8F                              l3369 0E40  
                            l3481 06DC                              l3457 0D09                              l3449 0CDD  
                            l3393 0B4A                              l3705 047D                              l3641 0334  
                            l3633 0320                              l3625 0309                              l3617 025A  
                            l3553 007A                              l3545 0076                              l3537 004C  
                            l3529 0042                              l3387 04C5                              l3491 0706  
                            l3707 0481                              l3651 035B                              l3643 0337  
                            l3635 0325                              l3627 0316                              l3619 0263  
                            l3571 00BF                              l3555 007B                              l3547 0077  
                            l3539 0051                              l3389 0522                              l3493 0711  
                            l3397 0A8F                              l3709 0487                              l3661 0365  
                            l3653 035C                              l3645 033D                              l3629 0319  
                            l3581 012F                              l3573 00C6                              l3565 0085  
                            l3549 0078                              ?_map 0034                              l3495 071B  
                            l3487 06E0                              l3399 0A93                              l3655 035D  
                            l3663 036F                              l3639 032E                              l3583 0174  
                            l3591 0218                              l3575 00D4                              l3567 00AC  
                            l3559 0082                              l3497 0736                              l3489 06EB  
                            l3681 03F1                              l3673 0383                              l3665 0375  
                            l3657 035F                              l3593 0220                              l3585 01B9  
                            l3577 00DB                              l3569 00B1                              l3649 0341  
                            l3691 040B                              l3683 03F9                              l3675 0396  
                            l3667 0379                              l3659 0363                              l3595 0226  
                            l3579 00EA                              l3693 041F                              l3685 03FA  
                            l3677 03DF                              l3669 037C                              l3589 01FE  
                            l3695 0432                              l3687 03FF                              l3679 03E5  
                            l3961 0D24                              l3689 0405                              l3697 0469  
                            l3953 020A                              l3963 075B                              l3955 034E  
                            l3965 0D79                              l3957 0CF2                              l3967 06A1  
                            l3959 0D11                              u3000 0772                              u3001 0771  
                            u3100 031F                              u3101 031E                              u3110 0334  
                            u3030 007F                              u3111 0333                              u3031 007E  
                            u3200 03F9                              u3120 033D                              u3040 00B1  
                            u3201 03F8                              u3121 033C                              u3041 00B0  
                            u2410 0623                              u3210 03FF                              u3130 035B  
                            u3050 00C6                              u2411 0622                              u3211 03FE  
                            u3131 035A                              u3051 00C5                              u2404 0608  
                            u2340 05AB                              u3220 047D                              u3140 0363  
                            u3060 00DB                              u2405 0606                              u2341 05AA  
                            u2325 0572                              u3221 047C                              u3141 0362  
                            u3061 00DA                              u2350 05B1                              u2334 0590  
                            u2430 07FB                              u3230 0481                              u3150 0375  
                            u3070 0226                              u2415 061F                              u2351 05B0  
                            u2335 058E                              u2431 07FA                              u3231 0480  
                            u3151 0374                              u3071 0225                              u2440 0AFA  
                            u2520 0C85                              u2360 05CD                              u3240 0487  
                            u3160 0379                              u3080 024A                              u2425 0BD9  
                            u2441 0AF9                              u2521 0C84                              u2505 0C6D  
                            u2361 05CC                              u2345 05A7                              u3241 0486  
                            u3161 0378                              u3081 0249                              u2530 0ABD  
                            u2610 0FC9                              u3250 048B                              u3170 0382  
                            u3090 0260                              u2531 0ABC                              u2611 0FC8  
                            u2515 0C75                              u3251 048A                              u3171 0381  
                            u3091 025F                              u2540 0ACA                              u2380 05FC  
                            u3180 0396                              u2541 0AC9                              u2605 0FB0  
                            u2381 05FB                              u2365 05C9                              u3181 0395  
                            u3085 0246                              u2710 0F40                              u2630 0FE7  
                            u2550 0F6A                              u2470 0B14                              u2390 0602  
                            u2374 05E1                              u3190 03DF                              u2711 0F3F  
                            u2631 0FE6                              u2615 0FC5                              u2551 0F69  
                            u2471 0B13                              u2455 0B01                              u2391 0601  
                            u2375 05DF                              u3191 03DE                              u2800 0E13  
                            u2640 0FEC                              u2560 0F7B                              u2480 0C54  
                            u2705 0F30                              u2801 0E12                              u2641 0FEB  
                            u2625 0FD9                              u2561 0F7A                              u2465 0B08  
                            u2481 0C53                              u2385 05F8                              u2730 0F54  
                            u2650 0F01                              u2570 0F9A                              u2731 0F53  
                            u2715 0F3C                              u2651 0F00                              u2571 0F99  
                            u2491 0C5D                              u2740 0F59                              u2660 0F0C  
                            u2820 0E26                              u2492 0C64                              u2741 0F58  
                            u2725 0F48                              u2661 0F0B                              u2821 0E25  
                            u2805 0E0F                              u3277 0A9E                              u2493 0C6B  
                            u2670 0F1D                              u2830 0E2B                              u2750 0DE1  
                            u2910 04C5                              u2590 0FAE                              u3287 0ADF  
                            u2671 0F1C                              u2831 0E2A                              u2815 0E1A  
                            u2751 0DE0                              u2911 04C4                              u2591 0FAD  
                            u2760 0DEC                              u2920 0B96                              u2840 07BC  
                            u2761 0DEB                              u2905 0E65                              u2585 0F9F  
                            u2841 07BB                              u2690 0F2F                              u2770 0DF7  
                            u2850 07E9                              u2930 0C3D                              u2691 0F2E  
                            u2771 0DF6                              u2915 04C1                              u2851 07E8  
                            u2860 07F3                              u2940 0B49                              u2685 0F21  
                            u2925 0B91                              u2861 07F2                              u2845 07B8  
                            u2941 0B48                              u2790 0E09                              u2870 06B6  
                            u2791 0E08                              u2871 06B5                              u2935 0C38  
                            u2960 0AE9                              u2880 06C0                              u2961 0AE8  
                            u2785 0DFB                              u2881 06BF                              u2890 0E3F  
                            u2970 06EB                              u2955 0AD2                              u2891 0E3E  
                            u2971 06EA                              u2980 0711                              _RCIF 0065  
                            u2981 0710                              u2990 071B                              u2991 071A  
                            _TMR0 0001                              _TXIF 0064                      __CFG_WRT$OFF 0000  
                            _disp 0055                              _main 0035                              _rand 0BFF  
                            _temp 0051                              _time 0049                              map@x 0034  
                            btemp 007E                  __end_of_ADC_Read 0AF2                     __CFG_BOREN$ON 0000  
                            start 0010                   __end_of_GetTime 0BFF                 ___bmul@multiplier 0027  
                           ??_ISR 0020         __size_of_conteggioVeicoli 0065                             ??_map 003E  
                 __end_of___aldiv 1000                             ?_main 0070                             ?_rand 0031  
                 __end_of___awdiv 0F63                     __CFG_WDTE$OFF 0000                   __end_of___awmod 0E35  
                 ___awdiv@divisor 002B                             _T1CON 0010                             i1l305 0EF9  
                           i1l166 0CD9                             i1l353 0DD1                             i1l291 0A8C  
                           i1l292 0A8E                             i1l289 0A86                   ___awdiv@counter 0030  
                           _RCREG 001A              UpdateTimes@_semafori 002E                             _TMR1H 000F  
                           _TMR1L 000E                             _SPBRG 0099                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                             _TRISE 0089                             _TXREG 0019  
             ___lmul@multiplicand 0028                     __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A  
              __size_of_UART_Read 0009                   __end_of_display 0811                             _count 004D  
                           _randx 005E                             main@i 00E6                             _truck 00CF  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 0013                      __end_of_main 0490                      __end_of_rand 0C46  
       __size_of_SetReceivedTimes 0060                __size_of_GetDigits 00CD                            ??_main 0040  
                          ??_rand 0033                 SetDefaultTimers@i 002F                 SetDefaultTimers@l 002E  
              __size_of_BuildByte 00C8                        _SetDisplay 0D2D                            _ADCON0 001F  
                          _ADCON1 009F                __size_of_Conteggio 004C                            _ADRESH 001E  
                          _ADRESL 009E                  ___awdiv@dividend 002D                            i1l2121 0CC0  
                          i1l2113 0C8E                            i1l2123 0CC9                            i1l2115 0C97  
                          i1l2117 0CA7                            i1l2119 0CB0                            i1l2523 0A86  
                          i1l2531 0EB5                            i1l2525 0A8D                            i1l2541 0ED0  
                          i1l2543 0EEB                            i1l2535 0EB6                            i1l2545 0EEF  
                          i1l2537 0EBF                            i1l2529 0E95                            i1l2801 0DC1  
                          i1l2547 0EF3                            i1l2539 0EC8                            i1l2811 0DCF  
                          i1l2803 0DC7                            i1l2805 0DC8                            i1l2807 0DC9  
                          i1l2809 0DCD                            i1l2771 0D86                            i1l2781 0D97  
                          i1l2773 0D8A                            i1l2791 0DAF                            i1l2783 0DA5  
                          i1l2775 0D8D                            i1l2793 0DB4                            i1l2785 0DA9  
                          i1l2777 0D8F                            i1l2769 0D82                            i1l2795 0DB8  
                          i1l2779 0D93                            i1l2787 0DAA                            i1l2797 0DBC  
                          i1l2789 0DAE                            i1l2799 0DBD                            u134_20 0C97  
                          u230_20 0DBC                            u134_21 0C96                            u230_21 0DBB  
                          u135_20 0CB0                            u231_20 0DC7                            u135_21 0CAF  
                          u231_21 0DC6                            u136_20 0CC9                            u136_21 0CC8  
                          u225_20 0D86                            _INTCON 000B                            u225_21 0D85  
                          u226_20 0D8A                            u226_21 0D89                            u227_20 0D93  
                          u227_21 0D92                            u228_20 0D97                            u228_21 0D96  
                          u229_20 0DAE                            u229_21 0DAD                            u195_20 0A8C  
                          u195_21 0A8B                            u196_20 0EBF                            u196_21 0EBE  
                          u197_20 0ED0                            u197_21 0ECF                            u198_20 0EF9  
                          u198_21 0EF8                            _TMR0IF 005A                            _TMR1IF 0060  
                       ??_GetTime 0026                      ?_UART_TxChar 0070                     main@randomCar 00DE  
               __end_of_UART_Init 0BB9                 __end_of_UART_Read 0A8F                            ___bmul 0AB5  
                          ___lmul 0C46                         ??___aldiv 002C                   GetTime@shortInt 0029  
                          ___wmul 0AF2                         ??___awdiv 002F                         ??___awmod 0028  
                __end_of_init_ADC 0AA2                            _cycled 0056                  ___awdiv@quotient 0032  
                 ___awmod@divisor 0024                   ___awmod@counter 0029                  __end_of_sendByte 0B4A  
                       ?_ADC_Read 0024                            saved_w 007E           __end_of__initialization 0031  
               __end_of_GetDigits 055D                     ??_UpdateTimes 0024         __size_of_SetDefaultTimers 00B7  
             ___bmul@multiplicand 0024                    __pcstackCOMMON 0070                 __end_of_BuildByte 0625  
                    __pidataBANK0 0A7E                  _conteggioVeicoli 0E95                 __end_of_Conteggio 0CDA  
                   ?_luciSemaforo 0024                        ??_ADC_Read 0026            SetDefaultTimers@giallo 0028  
       SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024                     GetDigits@Time 0035  
            _dataFromGatewayIndex 0053              _timerReadFromGateway 0052                        __pbssBANK0 0049  
                      __pbssBANK1 00A0                        __pmaintext 0035                           ?___bmul 0024  
ShowDigitsOnDisplay@display_index 002D                           ?___lmul 0024                           ?___wmul 0024  
                  ??_luciSemaforo 0025               __end_of_UpdateTimes 07F4                     sendByte@byte0 003D  
                   sendByte@byte1 0038                        __pintentry 0004                    ___lmul@product 002D  
                _SetReceivedTimes 0E35       __end_of_ShowDigitsOnDisplay 0789                        __stringtab 0800  
                       ?_init_ADC 0070                           _GetTime 0BB9                   BuildByte@valore 0025  
                 BuildByte@txByte 0029           GetTime@_dataFromGateway 0024                         ?_sendByte 0038  
                  main@randomMoto 00DD                        _n_semafori 0811              __size_of_UART_TxChar 000B  
                         ___aldiv 0F63                   __size_of___bmul 0017                           ___awdiv 0EFA  
                 __size_of___lmul 0048                           ___awmod 0DDA               __size_of_SetDisplay 0055  
                 __size_of___wmul 0027                 conteggioVeicoli@i 007D                           _digits0 00DA  
                         _digits1 00D7                           __ptext1 0B19                           __ptext2 07F4  
                         __ptext3 055D                           __ptext4 0BFF                           __ptext5 0C46  
                         __ptext6 0B4A                           __ptext7 0AF2                           __ptext8 0CDA  
                         __ptext9 0A8F                           _display 0806                      __size_of_ISR 0058  
                    __size_of_map 0035                  ___awmod@dividend 0026                  ___aldiv@dividend 0028  
            BuildByte@sommaColumn 002F                           _umidita 0050                           clrloop0 0A77  
                GetDigits@_digits 003C              end_of_initialization 0031                        ??_init_ADC 0024  
                  main@lux_select 00E4                       _UpdateTimes 0789                        ??_sendByte 003A  
                _SetDefaultTimers 0625                         _RCSTAbits 0018                  ___aldiv@quotient 002F  
                      _motorcycle 005A                         _UART_Init 0B7F                         _UART_Read 0A86  
           SetReceivedTimes@index 0034                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTCbits 0007                      SetDisplay@d1 0024                      SetDisplay@d2 0025  
                    SetDisplay@d3 0026                         _TRISCbits 0087                 __size_of_ADC_Read 0026  
        __end_of_conteggioVeicoli 0EFA              __end_of_luciSemaforo 0D2D                        map@out_max 003C  
                      map@out_min 003A  SetReceivedTimes@_dataFromGateway 0033                         _TXSTAbits 0098  
                       _GetDigits 0490                         _DigitsArr 0062                    __end_of___bmul 0ACC  
                  __end_of___lmul 0C8E                    __end_of___wmul 0B19                        ?_UART_Init 0033  
                      ?_UART_Read 0070                         _BuildByte 055D                         _Conteggio 0C8E  
               BuildByte@sommaRow 002E               start_initialization 0013                       __end_of_ISR 0DDA  
                    ??_SetDisplay 0028                       __end_of_map 0B7F          __end_of_SetReceivedTimes 0E95  
                      ?_GetDigits 0034                          ??___bmul 0025                          ??___lmul 002C  
                  ADC_Read@canale 0027                          ??___wmul 0028                        init_fetch0 0AA2  
                     __pdataBANK0 005E                __end_of_SetDisplay 0D82                    GetDigits@index 0034  
                      ?_BuildByte 0024                        ?_Conteggio 0070                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00DD                          ?_GetTime 0024  
           SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013  
               __size_of_sendByte 0031                          ?___aldiv 0024                          ?___awdiv 002B  
                        ?___awmod 0024                       ??_UART_Init 0035                       ??_UART_Read 0070  
                  BuildByte@i_341 0036                         __pstrings 0800                    BuildByte@y_342 0032  
                  sendByte@valore 0039                    sendByte@txByte 003E                    BuildByte@byte0 0028  
                  BuildByte@byte1 0024          __end_of_SetDefaultTimers 06DC                          _ADC_Read 0ACC  
           __size_of_luciSemaforo 0053                         _count_lux 0054                     UART_TxChar@ch 0024  
    __size_of_ShowDigitsOnDisplay 00AD                   ___aldiv@divisor 0024                 SetReceivedTimes@i 0035  
               interrupt_function 0004                   ___aldiv@counter 002D                    ___wmul@product 0028  
      SetReceivedTimes@semaforoId 0031                      ?_UpdateTimes 0070                         clear_ram0 0A76  
                        _PIE1bits 008C                     ??_UART_TxChar 0024                       ??_GetDigits 0037  
                        _GO_nDONE 00FA                      _luciSemaforo 0CDA                         _pressione 004F  
               UART_Init@baudrate 0033                       ??_BuildByte 0026                         map@in_max 0038  
                       map@in_min 0036                       __stringbase 0805                         main@i_480 00E2  
                       main@i_481 00E0                         main@i_483 00E1                         main@i_485 00E5  
                     ??_Conteggio 0076                 ___wmul@multiplier 0024                      GetTime@index 0028  
               ___lmul@multiplier 0024                      _RoadsSensors 00A0                 ?_conteggioVeicoli 0070  
                    _secondPassed 0057                ??_conteggioVeicoli 0079                  __size_of_GetTime 0046  
                        _Semafori 0064                   main@randomTruck 00DF                       _readGateway 0058  
                __size_of___aldiv 009D               __end_of_UART_TxChar 07FF                  __size_of___awdiv 0069  
                __size_of___awmod 005B                __end_of__stringtab 0806                         sendByte@i 003F  
                        __ptext10 0789                          __ptext11 0B7F                          __ptext20 0DDA  
                        __ptext12 0F63                          __ptext21 0EFA                          __ptext13 06DC  
                        __ptext22 0ACC                          __ptext14 0D2D                          __ptext23 0D82  
                        __ptext15 0E35                          __ptext24 0E95                          __ptext16 0BB9  
                        __ptext25 0C8E                          __ptext17 0625                          __ptext26 0A86  
                        __ptext18 0490                          __ptext19 0AB5                __end_of_n_semafori 0812  
         SetDisplay@display_index 002A                          _init_ADC 0A8F                 ?_SetReceivedTimes 002C  
                   __size_of_main 045B                   _dataFromGateway 00A4                     __size_of_rand 0047  
                        _sendByte 0B19                ??_SetReceivedTimes 002D                        _INTCONbits 000B  
                        init_ram0 0AA6              Conteggio@_motorcycle 0072                          intlevel1 0000  
                 _readGatewayDone 0059                         stringcode 0800                       _UART_TxChar 07F4  
         SetReceivedTimes@colorId 0032              __size_of_UpdateTimes 006B                        GetTime@tmp 002A  
             _ShowDigitsOnDisplay 06DC                        _OPTION_REG 0081                   SetDisplay@value 0027  
                        stringdir 0800                          stringtab 0800                      UpdateTimes@i 002F  
                    UpdateTimes@l 0030                 ?_SetDefaultTimers 0024                      ___aldiv@sign 002E  
              ??_SetDefaultTimers 002B              ?_ShowDigitsOnDisplay 0070                        BuildByte@i 0034  
                      BuildByte@y 0030         SetDefaultTimers@_semafori 002A                   Conteggio@_count 0070  
                   Conteggio@_car 0073                   Conteggio@_truck 0074                    Conteggio@index 0075  
