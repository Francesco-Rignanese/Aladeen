

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jul 13 16:14:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196                           
   197                           	psect	idataBANK0
   198  0B73                     __pidataBANK0:	
   199                           
   200                           ;initializer for _DigitsArr
   201  0B73  34D6               	retlw	low (_digits0| 0)
   202  0B74  34D3               	retlw	low (_digits1| 0)
   203                           
   204                           ;initializer for _Semafori
   205  0B75  34C1               	retlw	low (_s0| 0)
   206  0B76  34B3               	retlw	low (_s1| 0)
   207                           
   208                           	psect	strings
   209  0800                     __pstrings:	
   210  0800                     stringtab:	
   211  0800                     __stringtab:	
   212  0800                     stringcode:	
   213                           ;	String table - string pointers are 1 byte each
   214                           
   215  0800                     stringdir:	
   216  0800  3008               	movlw	high stringdir
   217  0801  008A               	movwf	10
   218  0802  0804               	movf	4,w
   219  0803  0A84               	incf	4,f
   220  0804  0782               	addwf	2,f
   221  0805                     __stringbase:	
   222  0805  3400               	retlw	0
   223  0806                     __end_of__stringtab:	
   224  0806                     _display:	
   225  0806  343F               	retlw	63
   226  0807  3406               	retlw	6
   227  0808  345B               	retlw	91
   228  0809  344F               	retlw	79
   229  080A  3466               	retlw	102
   230  080B  346D               	retlw	109
   231  080C  347D               	retlw	125
   232  080D  3407               	retlw	7
   233  080E  347F               	retlw	127
   234  080F  346F               	retlw	111
   235  0810  3400               	retlw	0
   236  0811                     __end_of_display:	
   237  0811                     _n_semafori:	
   238  0811  3402               	retlw	2
   239  0812                     __end_of_n_semafori:	
   240  0008                     _PORTD	set	8
   241  0005                     _PORTAbits	set	5
   242  001A                     _RCREG	set	26
   243  0019                     _TXREG	set	25
   244  000B                     _INTCONbits	set	11
   245  0018                     _RCSTAbits	set	24
   246  001E                     _ADRESH	set	30
   247  001F                     _ADCON0	set	31
   248  0006                     _PORTBbits	set	6
   249  0007                     _PORTCbits	set	7
   250  000E                     _TMR1L	set	14
   251  000F                     _TMR1H	set	15
   252  0010                     _T1CON	set	16
   253  0001                     _TMR0	set	1
   254  000B                     _INTCON	set	11
   255  0060                     _TMR1IF	set	96
   256  005A                     _TMR0IF	set	90
   257  0065                     _RCIF	set	101
   258  0064                     _TXIF	set	100
   259  00FA                     _GO_nDONE	set	250
   260  008C                     _PIE1bits	set	140
   261  0099                     _SPBRG	set	153
   262  0098                     _TXSTAbits	set	152
   263  0087                     _TRISCbits	set	135
   264  009E                     _ADRESL	set	158
   265  009F                     _ADCON1	set	159
   266  0085                     _TRISA	set	133
   267  0081                     _OPTION_REG	set	129
   268  0089                     _TRISE	set	137
   269  0088                     _TRISD	set	136
   270  0087                     _TRISC	set	135
   271  0086                     _TRISB	set	134
   272                           
   273                           ; #config settings
   274  0000                     
   275                           	psect	cinit
   276  0013                     start_initialization:	
   277  0013                     __initialization:	
   278                           
   279                           ; Initialize objects allocated to BANK0
   280  0013  120A  158A  2373  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   281  0018  00E2               	movwf	__pdataBANK0& (0+127)
   282  0019  120A  158A  2374  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   283  001E  00E3               	movwf	(__pdataBANK0+1)& (0+127)
   284  001F  120A  158A  2375  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   285  0024  00E4               	movwf	(__pdataBANK0+2)& (0+127)
   286  0025  120A  158A  2376  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   287  002A  00E5               	movwf	(__pdataBANK0+3)& (0+127)
   288                           
   289                           ; Clear objects allocated to BANK1
   290  002B  1383               	bcf	3,7	;select IRP bank0
   291  002C  30A0               	movlw	low __pbssBANK1
   292  002D  0084               	movwf	4
   293  002E  30D9               	movlw	low (__pbssBANK1+57)
   294  002F  120A  158A  2377  120A  118A  	fcall	clear_ram0
   295                           
   296                           ; Clear objects allocated to BANK0
   297  0034  3049               	movlw	low __pbssBANK0
   298  0035  0084               	movwf	4
   299  0036  3062               	movlw	low (__pbssBANK0+25)
   300  0037  120A  158A  2377  120A  118A  	fcall	clear_ram0
   301  003C                     end_of_initialization:	
   302                           ;End of C runtime variable initialization code
   303                           
   304  003C                     __end_of__initialization:	
   305  003C  0183               	clrf	3
   306  003D  120A  118A  2840   	ljmp	_main	;jump to C main() function
   307                           
   308                           	psect	bssBANK0
   309  0049                     __pbssBANK0:	
   310  0049                     _time:	
   311  0049                     	ds	4
   312  004D                     _count:	
   313  004D                     	ds	2
   314  004F                     _pressione:	
   315  004F                     	ds	1
   316  0050                     _umidita:	
   317  0050                     	ds	1
   318  0051                     _temp:	
   319  0051                     	ds	1
   320  0052                     _timerReadFromGateway:	
   321  0052                     	ds	1
   322  0053                     _dataFromGatewayIndex:	
   323  0053                     	ds	1
   324  0054                     _count_lux:	
   325  0054                     	ds	1
   326  0055                     _disp:	
   327  0055                     	ds	1
   328  0056                     _cycled:	
   329  0056                     	ds	1
   330  0057                     _secondPassed:	
   331  0057                     	ds	1
   332  0058                     _readGateway:	
   333  0058                     	ds	1
   334  0059                     _readGatewayDone:	
   335  0059                     	ds	1
   336  005A                     _car:	
   337  005A                     	ds	4
   338  005E                     _motorcycle:	
   339  005E                     	ds	4
   340                           
   341                           	psect	dataBANK0
   342  0062                     __pdataBANK0:	
   343  0062                     _DigitsArr:	
   344  0062                     	ds	2
   345  0064                     _Semafori:	
   346  0064                     	ds	2
   347                           
   348                           	psect	bssBANK1
   349  00A0                     __pbssBANK1:	
   350  00A0                     _RoadsSensors:	
   351  00A0                     	ds	4
   352  00A4                     _dataFromGateway:	
   353  00A4                     	ds	15
   354  00B3                     _s1:	
   355  00B3                     	ds	14
   356  00C1                     _s0:	
   357  00C1                     	ds	14
   358  00CF                     _truck:	
   359  00CF                     	ds	4
   360  00D3                     _digits1:	
   361  00D3                     	ds	3
   362  00D6                     _digits0:	
   363  00D6                     	ds	3
   364                           
   365                           	psect	clrtext
   366  0B77                     clear_ram0:	
   367                           ;	Called with FSR containing the base address, and
   368                           ;	W with the last address+1
   369                           
   370  0B77  0064               	clrwdt	;clear the watchdog before getting into this loop
   371  0B78                     clrloop0:	
   372  0B78  0180               	clrf	0	;clear RAM location pointed to by FSR
   373  0B79  0A84               	incf	4,f	;increment pointer
   374  0B7A  0604               	xorwf	4,w	;XOR with final address
   375  0B7B  1903               	btfsc	3,2	;have we reached the end yet?
   376  0B7C  3400               	retlw	0	;all done for this memory range, return
   377  0B7D  0604               	xorwf	4,w	;XOR again to restore value
   378  0B7E  2B78               	goto	clrloop0	;do the next byte
   379                           
   380                           	psect	cstackBANK1
   381  00D9                     __pcstackBANK1:	
   382  00D9                     main@i_474:	
   383                           
   384                           ; 1 bytes @ 0x0
   385  00D9                     	ds	1
   386  00DA                     main@i_476:	
   387                           
   388                           ; 1 bytes @ 0x1
   389  00DA                     	ds	1
   390  00DB                     main@i_473:	
   391                           
   392                           ; 2 bytes @ 0x2
   393  00DB                     	ds	2
   394  00DD                     main@lux_select:	
   395                           
   396                           ; 1 bytes @ 0x4
   397  00DD                     	ds	1
   398  00DE                     main@i_478:	
   399                           
   400                           ; 1 bytes @ 0x5
   401  00DE                     	ds	1
   402  00DF                     main@i:	
   403                           
   404                           ; 2 bytes @ 0x6
   405  00DF                     	ds	2
   406                           
   407                           	psect	cstackCOMMON
   408  0070                     __pcstackCOMMON:	
   409  0070                     ?_init_ADC:	
   410  0070                     ?_ShowDigitsOnDisplay:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_UpdateTimes:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_Conteggio:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_UART_TxChar:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_UART_Read:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_UART_Read:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_conteggioVeicoli:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_ISR:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     Conteggio@_count:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 2 bytes @ 0x0
   442  0070                     	ds	2
   443  0072                     Conteggio@_motorcycle:	
   444                           
   445                           ; 1 bytes @ 0x2
   446  0072                     	ds	1
   447  0073                     Conteggio@_car:	
   448                           
   449                           ; 1 bytes @ 0x3
   450  0073                     	ds	1
   451  0074                     Conteggio@_truck:	
   452                           
   453                           ; 1 bytes @ 0x4
   454  0074                     	ds	1
   455  0075                     Conteggio@index:	
   456                           
   457                           ; 1 bytes @ 0x5
   458  0075                     	ds	1
   459  0076                     ??_Conteggio:	
   460                           
   461                           ; 1 bytes @ 0x6
   462  0076                     	ds	3
   463  0079                     ??_conteggioVeicoli:	
   464                           
   465                           ; 1 bytes @ 0x9
   466  0079                     	ds	4
   467  007D                     conteggioVeicoli@i:	
   468                           
   469                           ; 1 bytes @ 0xD
   470  007D                     	ds	1
   471                           
   472                           	psect	cstackBANK0
   473  0020                     __pcstackBANK0:	
   474  0020                     ??_ISR:	
   475                           
   476                           ; 1 bytes @ 0x0
   477  0020                     	ds	4
   478  0024                     ??_init_ADC:	
   479  0024                     ?_luciSemaforo:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0024                     ?_BuildByte:	
   483                           ; 1 bytes @ 0x4
   484                           
   485  0024                     ??_UpdateTimes:	
   486                           ; 1 bytes @ 0x4
   487                           
   488  0024                     ?_SetDefaultTimers:	
   489                           ; 1 bytes @ 0x4
   490                           
   491  0024                     ??_UART_TxChar:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0024                     ?_SetDisplay:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0024                     ?___bmul:	
   498                           ; 1 bytes @ 0x4
   499                           
   500  0024                     ?_ADC_Read:	
   501                           ; 1 bytes @ 0x4
   502                           
   503  0024                     ?_GetTime:	
   504                           ; 2 bytes @ 0x4
   505                           
   506  0024                     ?___wmul:	
   507                           ; 2 bytes @ 0x4
   508                           
   509  0024                     ?___awmod:	
   510                           ; 2 bytes @ 0x4
   511                           
   512  0024                     ?___aldiv:	
   513                           ; 2 bytes @ 0x4
   514                           
   515  0024                     BuildByte@byte1:	
   516                           ; 4 bytes @ 0x4
   517                           
   518  0024                     GetTime@_dataFromGateway:	
   519                           ; 1 bytes @ 0x4
   520                           
   521  0024                     UART_TxChar@ch:	
   522                           ; 1 bytes @ 0x4
   523                           
   524  0024                     luciSemaforo@lux:	
   525                           ; 1 bytes @ 0x4
   526                           
   527  0024                     SetDisplay@d1:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  0024                     ___bmul@multiplicand:	
   531                           ; 1 bytes @ 0x4
   532                           
   533  0024                     SetDefaultTimers@rosso:	
   534                           ; 1 bytes @ 0x4
   535                           
   536  0024                     ___wmul@multiplier:	
   537                           ; 2 bytes @ 0x4
   538                           
   539  0024                     ___awmod@divisor:	
   540                           ; 2 bytes @ 0x4
   541                           
   542  0024                     ___aldiv@divisor:	
   543                           ; 2 bytes @ 0x4
   544                           
   545                           
   546                           ; 4 bytes @ 0x4
   547  0024                     	ds	1
   548  0025                     ??_luciSemaforo:	
   549  0025                     ??___bmul:	
   550                           ; 1 bytes @ 0x5
   551                           
   552  0025                     BuildByte@valore:	
   553                           ; 1 bytes @ 0x5
   554                           
   555  0025                     SetDisplay@d2:	
   556                           ; 1 bytes @ 0x5
   557                           
   558                           
   559                           ; 1 bytes @ 0x5
   560  0025                     	ds	1
   561  0026                     ??_ADC_Read:	
   562  0026                     ??_BuildByte:	
   563                           ; 1 bytes @ 0x6
   564                           
   565  0026                     ??_GetTime:	
   566                           ; 1 bytes @ 0x6
   567                           
   568  0026                     SetDisplay@d3:	
   569                           ; 1 bytes @ 0x6
   570                           
   571  0026                     ___bmul@product:	
   572                           ; 1 bytes @ 0x6
   573                           
   574  0026                     SetDefaultTimers@verde:	
   575                           ; 1 bytes @ 0x6
   576                           
   577  0026                     ___wmul@multiplicand:	
   578                           ; 2 bytes @ 0x6
   579                           
   580  0026                     ___awmod@dividend:	
   581                           ; 2 bytes @ 0x6
   582                           
   583                           
   584                           ; 2 bytes @ 0x6
   585  0026                     	ds	1
   586  0027                     ADC_Read@canale:	
   587  0027                     luciSemaforo@index:	
   588                           ; 1 bytes @ 0x7
   589                           
   590  0027                     SetDisplay@value:	
   591                           ; 1 bytes @ 0x7
   592                           
   593  0027                     ___bmul@multiplier:	
   594                           ; 1 bytes @ 0x7
   595                           
   596                           
   597                           ; 1 bytes @ 0x7
   598  0027                     	ds	1
   599  0028                     ??_SetDisplay:	
   600  0028                     ??___wmul:	
   601                           ; 1 bytes @ 0x8
   602                           
   603  0028                     ??___awmod:	
   604                           ; 1 bytes @ 0x8
   605                           
   606  0028                     BuildByte@byte0:	
   607                           ; 1 bytes @ 0x8
   608                           
   609  0028                     GetTime@index:	
   610                           ; 1 bytes @ 0x8
   611                           
   612  0028                     SetDefaultTimers@giallo:	
   613                           ; 1 bytes @ 0x8
   614                           
   615  0028                     ___wmul@product:	
   616                           ; 2 bytes @ 0x8
   617                           
   618  0028                     ___aldiv@dividend:	
   619                           ; 2 bytes @ 0x8
   620                           
   621                           
   622                           ; 4 bytes @ 0x8
   623  0028                     	ds	1
   624  0029                     GetTime@shortInt:	
   625  0029                     ___awmod@counter:	
   626                           ; 1 bytes @ 0x9
   627                           
   628  0029                     BuildByte@txByte:	
   629                           ; 1 bytes @ 0x9
   630                           
   631                           
   632                           ; 5 bytes @ 0x9
   633  0029                     	ds	1
   634  002A                     SetDefaultTimers@_semafori:	
   635  002A                     SetDisplay@display_index:	
   636                           ; 1 bytes @ 0xA
   637                           
   638  002A                     ___awmod@sign:	
   639                           ; 1 bytes @ 0xA
   640                           
   641  002A                     GetTime@tmp:	
   642                           ; 1 bytes @ 0xA
   643                           
   644                           
   645                           ; 2 bytes @ 0xA
   646  002A                     	ds	1
   647  002B                     ??_ShowDigitsOnDisplay:	
   648  002B                     ??_SetDefaultTimers:	
   649                           ; 1 bytes @ 0xB
   650                           
   651  002B                     ?___awdiv:	
   652                           ; 1 bytes @ 0xB
   653                           
   654  002B                     ___awdiv@divisor:	
   655                           ; 2 bytes @ 0xB
   656                           
   657                           
   658                           ; 2 bytes @ 0xB
   659  002B                     	ds	1
   660  002C                     ?_SetReceivedTimes:	
   661  002C                     ??___aldiv:	
   662                           ; 1 bytes @ 0xC
   663                           
   664  002C                     SetReceivedTimes@_semafori:	
   665                           ; 1 bytes @ 0xC
   666                           
   667                           
   668                           ; 1 bytes @ 0xC
   669  002C                     	ds	1
   670  002D                     ??_SetReceivedTimes:	
   671  002D                     ShowDigitsOnDisplay@display_index:	
   672                           ; 1 bytes @ 0xD
   673                           
   674  002D                     ___aldiv@counter:	
   675                           ; 1 bytes @ 0xD
   676                           
   677  002D                     ___awdiv@dividend:	
   678                           ; 1 bytes @ 0xD
   679                           
   680                           
   681                           ; 2 bytes @ 0xD
   682  002D                     	ds	1
   683  002E                     BuildByte@sommaRow:	
   684  002E                     UpdateTimes@_semafori:	
   685                           ; 1 bytes @ 0xE
   686                           
   687  002E                     SetDefaultTimers@l:	
   688                           ; 1 bytes @ 0xE
   689                           
   690  002E                     ___aldiv@sign:	
   691                           ; 1 bytes @ 0xE
   692                           
   693                           
   694                           ; 1 bytes @ 0xE
   695  002E                     	ds	1
   696  002F                     ??___awdiv:	
   697  002F                     BuildByte@sommaColumn:	
   698                           ; 1 bytes @ 0xF
   699                           
   700  002F                     UpdateTimes@i:	
   701                           ; 1 bytes @ 0xF
   702                           
   703  002F                     SetDefaultTimers@i:	
   704                           ; 1 bytes @ 0xF
   705                           
   706  002F                     ___aldiv@quotient:	
   707                           ; 1 bytes @ 0xF
   708                           
   709                           
   710                           ; 4 bytes @ 0xF
   711  002F                     	ds	1
   712  0030                     UpdateTimes@l:	
   713  0030                     ___awdiv@counter:	
   714                           ; 1 bytes @ 0x10
   715                           
   716  0030                     BuildByte@y:	
   717                           ; 1 bytes @ 0x10
   718                           
   719                           
   720                           ; 2 bytes @ 0x10
   721  0030                     	ds	1
   722  0031                     SetReceivedTimes@semaforoId:	
   723  0031                     ___awdiv@sign:	
   724                           ; 1 bytes @ 0x11
   725                           
   726                           
   727                           ; 1 bytes @ 0x11
   728  0031                     	ds	1
   729  0032                     SetReceivedTimes@colorId:	
   730  0032                     BuildByte@y_338:	
   731                           ; 1 bytes @ 0x12
   732                           
   733  0032                     ___awdiv@quotient:	
   734                           ; 2 bytes @ 0x12
   735                           
   736                           
   737                           ; 2 bytes @ 0x12
   738  0032                     	ds	1
   739  0033                     ?_UART_Init:	
   740  0033                     SetReceivedTimes@_dataFromGateway:	
   741                           ; 1 bytes @ 0x13
   742                           
   743  0033                     UART_Init@baudrate:	
   744                           ; 1 bytes @ 0x13
   745                           
   746                           
   747                           ; 2 bytes @ 0x13
   748  0033                     	ds	1
   749  0034                     ?_GetDigits:	
   750  0034                     ?_map:	
   751                           ; 1 bytes @ 0x14
   752                           
   753  0034                     SetReceivedTimes@index:	
   754                           ; 2 bytes @ 0x14
   755                           
   756  0034                     GetDigits@index:	
   757                           ; 1 bytes @ 0x14
   758                           
   759  0034                     BuildByte@i:	
   760                           ; 1 bytes @ 0x14
   761                           
   762  0034                     map@x:	
   763                           ; 2 bytes @ 0x14
   764                           
   765                           
   766                           ; 2 bytes @ 0x14
   767  0034                     	ds	1
   768  0035                     ??_UART_Init:	
   769  0035                     SetReceivedTimes@i:	
   770                           ; 1 bytes @ 0x15
   771                           
   772  0035                     GetDigits@Time:	
   773                           ; 1 bytes @ 0x15
   774                           
   775                           
   776                           ; 2 bytes @ 0x15
   777  0035                     	ds	1
   778  0036                     BuildByte@i_337:	
   779  0036                     map@in_min:	
   780                           ; 2 bytes @ 0x16
   781                           
   782                           
   783                           ; 2 bytes @ 0x16
   784  0036                     	ds	1
   785  0037                     ??_GetDigits:	
   786                           
   787                           ; 1 bytes @ 0x17
   788  0037                     	ds	1
   789  0038                     ?_sendByte:	
   790  0038                     sendByte@byte1:	
   791                           ; 1 bytes @ 0x18
   792                           
   793  0038                     map@in_max:	
   794                           ; 1 bytes @ 0x18
   795                           
   796                           
   797                           ; 2 bytes @ 0x18
   798  0038                     	ds	1
   799  0039                     sendByte@valore:	
   800                           
   801                           ; 1 bytes @ 0x19
   802  0039                     	ds	1
   803  003A                     ??_sendByte:	
   804  003A                     map@out_min:	
   805                           ; 1 bytes @ 0x1A
   806                           
   807  003A                     _GetDigits$1189:	
   808                           ; 2 bytes @ 0x1A
   809                           
   810                           
   811                           ; 2 bytes @ 0x1A
   812  003A                     	ds	2
   813  003C                     GetDigits@_digits:	
   814  003C                     map@out_max:	
   815                           ; 1 bytes @ 0x1C
   816                           
   817                           
   818                           ; 2 bytes @ 0x1C
   819  003C                     	ds	1
   820  003D                     sendByte@byte0:	
   821                           
   822                           ; 1 bytes @ 0x1D
   823  003D                     	ds	1
   824  003E                     ??_map:	
   825  003E                     sendByte@txByte:	
   826                           ; 1 bytes @ 0x1E
   827                           
   828                           
   829                           ; 1 bytes @ 0x1E
   830  003E                     	ds	1
   831  003F                     sendByte@i:	
   832                           
   833                           ; 1 bytes @ 0x1F
   834  003F                     	ds	1
   835  0040                     ??_main:	
   836                           
   837                           ; 1 bytes @ 0x20
   838  0040                     	ds	9
   839                           
   840                           	psect	maintext
   841  0040                     __pmaintext:	
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   844 ;;
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 136 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  lux_select      1    4[BANK1 ] unsigned char 
   852 ;;  i               1    1[BANK1 ] unsigned char 
   853 ;;  i               1    0[BANK1 ] unsigned char 
   854 ;;  i               2    2[BANK1 ] int 
   855 ;;  i               2    6[BANK1 ] int 
   856 ;;  i               1    5[BANK1 ] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : B00/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   866 ;;      Params:         0       0       0       0       0
   867 ;;      Locals:         0       0       8       0       0
   868 ;;      Temps:          0       9       0       0       0
   869 ;;      Totals:         0       9       8       0       0
   870 ;;Total ram usage:       17 bytes
   871 ;; Hardware stack levels required when called:    5
   872 ;; This function calls:
   873 ;;		_ADC_Read
   874 ;;		_GetDigits
   875 ;;		_SetDefaultTimers
   876 ;;		_SetReceivedTimes
   877 ;;		_ShowDigitsOnDisplay
   878 ;;		_UART_Init
   879 ;;		_UpdateTimes
   880 ;;		_init_ADC
   881 ;;		_luciSemaforo
   882 ;;		_map
   883 ;;		_sendByte
   884 ;; This function is called by:
   885 ;;		Startup code after reset
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _main
   891  0040                     _main:	
   892  0040                     l3404:	
   893                           ;incstack = 0
   894                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   895                           
   896                           
   897                           ;main.c: 138:     TRISB = 0x38;
   898  0040  3038               	movlw	56
   899  0041  1683               	bsf	3,5	;RP0=1, select bank1
   900  0042  1303               	bcf	3,6	;RP1=0, select bank1
   901  0043  0086               	movwf	6	;volatile
   902                           
   903                           ;main.c: 139:     TRISC = 0x80;
   904  0044  3080               	movlw	128
   905  0045  0087               	movwf	7	;volatile
   906  0046                     l3406:	
   907                           
   908                           ;main.c: 140:     TRISD = 0x00;
   909  0046  0188               	clrf	8	;volatile
   910  0047                     l3408:	
   911                           
   912                           ;main.c: 141:     TRISE = 0x01;
   913  0047  3001               	movlw	1
   914  0048  0089               	movwf	9	;volatile
   915  0049                     l3410:	
   916                           
   917                           ;main.c: 142:     INTCON = 0xE0;
   918  0049  30E0               	movlw	224
   919  004A  008B               	movwf	11	;volatile
   920  004B                     l3412:	
   921                           
   922                           ;main.c: 143:     OPTION_REG = 0x04;
   923  004B  3004               	movlw	4
   924  004C  0081               	movwf	1	;volatile
   925  004D                     l3414:	
   926                           
   927                           ;main.c: 144:     TMR0 = 6;
   928  004D  3006               	movlw	6
   929  004E  1283               	bcf	3,5	;RP0=0, select bank0
   930  004F  1303               	bcf	3,6	;RP1=0, select bank0
   931  0050  0081               	movwf	1	;volatile
   932  0051                     l3416:	
   933                           
   934                           ;main.c: 145:     T1CON = 0x31;
   935  0051  3031               	movlw	49
   936  0052  0090               	movwf	16	;volatile
   937  0053                     l3418:	
   938                           
   939                           ;main.c: 147:     TMR1H = 60;
   940  0053  303C               	movlw	60
   941  0054  008F               	movwf	15	;volatile
   942  0055                     l3420:	
   943                           
   944                           ;main.c: 148:     TMR1L = 176;
   945  0055  30B0               	movlw	176
   946  0056  008E               	movwf	14	;volatile
   947  0057                     l3422:	
   948                           
   949                           ;main.c: 151:     init_ADC();
   950  0057  120A  158A  238A  120A  118A  	fcall	_init_ADC
   951  005C                     l3424:	
   952                           
   953                           ;main.c: 152:     UART_Init(9600);
   954  005C  3080               	movlw	128
   955  005D  1283               	bcf	3,5	;RP0=0, select bank0
   956  005E  1303               	bcf	3,6	;RP1=0, select bank0
   957  005F  00B3               	movwf	UART_Init@baudrate
   958  0060  3025               	movlw	37
   959  0061  00B4               	movwf	UART_Init@baudrate+1
   960  0062  120A  158A  2440  120A  118A  	fcall	_UART_Init
   961  0067                     l3426:	
   962                           
   963                           ;main.c: 153:     SetDefaultTimers(6, 4, 2, Semafori);
   964  0067  3006               	movlw	6
   965  0068  1283               	bcf	3,5	;RP0=0, select bank0
   966  0069  1303               	bcf	3,6	;RP1=0, select bank0
   967  006A  00A4               	movwf	SetDefaultTimers@rosso
   968  006B  3000               	movlw	0
   969  006C  00A5               	movwf	SetDefaultTimers@rosso+1
   970  006D  3004               	movlw	4
   971  006E  00A6               	movwf	SetDefaultTimers@verde
   972  006F  3000               	movlw	0
   973  0070  00A7               	movwf	SetDefaultTimers@verde+1
   974  0071  3002               	movlw	2
   975  0072  00A8               	movwf	SetDefaultTimers@giallo
   976  0073  3000               	movlw	0
   977  0074  00A9               	movwf	SetDefaultTimers@giallo+1
   978  0075  3064               	movlw	(low (_Semafori| 0))& (0+255)
   979  0076  00C0               	movwf	??_main
   980  0077  0840               	movf	??_main,w
   981  0078  00AA               	movwf	SetDefaultTimers@_semafori
   982  0079  120A  118A  25CF  120A  118A  	fcall	_SetDefaultTimers
   983  007E                     l3428:	
   984                           
   985                           ;main.c: 155:     PORTCbits.RC0 = 0;
   986  007E  1283               	bcf	3,5	;RP0=0, select bank0
   987  007F  1303               	bcf	3,6	;RP1=0, select bank0
   988  0080  1007               	bcf	7,0	;volatile
   989  0081                     l3430:	
   990                           
   991                           ;main.c: 156:     PORTBbits.RB7 = 0;
   992  0081  1386               	bcf	6,7	;volatile
   993  0082                     l3432:	
   994                           
   995                           ;main.c: 157:     PORTCbits.RC2 = 0;
   996  0082  1107               	bcf	7,2	;volatile
   997  0083                     l3434:	
   998                           
   999                           ;main.c: 158:     PORTBbits.RB6 = 0;
  1000  0083  1306               	bcf	6,6	;volatile
  1001  0084                     l3436:	
  1002                           
  1003                           ;main.c: 159:     PORTCbits.RC1 = 0;
  1004  0084  1087               	bcf	7,1	;volatile
  1005  0085                     l3438:	
  1006                           
  1007                           ;main.c: 160:     PORTBbits.RB1 = 0;
  1008  0085  1086               	bcf	6,1	;volatile
  1009  0086                     l3440:	
  1010                           
  1011                           ;main.c: 163:     {;main.c: 165:         if (readGateway.Bit)
  1012  0086  1C58               	btfss	_readGateway,0
  1013  0087  2889               	goto	u2791
  1014  0088  288A               	goto	u2790
  1015  0089                     u2791:	
  1016  0089  2B0A               	goto	l221
  1017  008A                     u2790:	
  1018  008A  2AF5               	goto	l3520
  1019  008B                     l223:	
  1020                           ;main.c: 168:             {;main.c: 169:             case 0x08:
  1021                           
  1022                           
  1023                           ;main.c: 170:                 readGatewayDone.Bit = 1;
  1024  008B  1459               	bsf	_readGatewayDone,0
  1025                           
  1026                           ;main.c: 171:                 readGateway.Bit = 0;
  1027  008C  1058               	bcf	_readGateway,0
  1028  008D                     l3444:	
  1029                           
  1030                           ;main.c: 173:                 for (int i = 0; i < 4; i++)
  1031  008D  1683               	bsf	3,5	;RP0=1, select bank1
  1032  008E  1303               	bcf	3,6	;RP1=0, select bank1
  1033  008F  01DF               	clrf	main@i^(0+128)
  1034  0090  01E0               	clrf	(main@i+1)^(0+128)
  1035  0091  29AE               	goto	l3460
  1036  0092                     l3450:	
  1037                           
  1038                           ;main.c: 178:                         sendByte(0x03, 0x01, motorcycle[i]);
  1039  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0094  01B8               	clrf	sendByte@byte1
  1042  0095  0AB8               	incf	sendByte@byte1,f
  1043  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1044  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1045  0098  085F               	movf	main@i^(0+128),w
  1046  0099  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1047  009A  0084               	movwf	4
  1048  009B  1383               	bcf	3,7	;select IRP bank0
  1049  009C  0800               	movf	0,w
  1050  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1051  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1052  009F  00C0               	movwf	??_main
  1053  00A0  0840               	movf	??_main,w
  1054  00A1  00B9               	movwf	sendByte@valore
  1055  00A2  3003               	movlw	3
  1056  00A3  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1057                           
  1058                           ;main.c: 179:                         sendByte(0x03, 0x02, car[i]);
  1059  00A8  3002               	movlw	2
  1060  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1061  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1062  00AB  00C0               	movwf	??_main
  1063  00AC  0840               	movf	??_main,w
  1064  00AD  00B8               	movwf	sendByte@byte1
  1065  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1066  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1067  00B0  085F               	movf	main@i^(0+128),w
  1068  00B1  3E5A               	addlw	(low (_car| 0))& (0+255)
  1069  00B2  0084               	movwf	4
  1070  00B3  1383               	bcf	3,7	;select IRP bank0
  1071  00B4  0800               	movf	0,w
  1072  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1073  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1074  00B7  00C1               	movwf	??_main+1
  1075  00B8  0841               	movf	??_main+1,w
  1076  00B9  00B9               	movwf	sendByte@valore
  1077  00BA  3003               	movlw	3
  1078  00BB  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1079                           
  1080                           ;main.c: 180:                         sendByte(0x03, 0x03, truck[i]);
  1081  00C0  3003               	movlw	3
  1082  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1083  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1084  00C3  00C0               	movwf	??_main
  1085  00C4  0840               	movf	??_main,w
  1086  00C5  00B8               	movwf	sendByte@byte1
  1087  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1088  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1089  00C8  085F               	movf	main@i^(0+128),w
  1090  00C9  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1091  00CA  0084               	movwf	4
  1092  00CB  1383               	bcf	3,7	;select IRP bank1
  1093  00CC  0800               	movf	0,w
  1094  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1095  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1096  00CF  00C1               	movwf	??_main+1
  1097  00D0  0841               	movf	??_main+1,w
  1098  00D1  00B9               	movwf	sendByte@valore
  1099  00D2  3003               	movlw	3
  1100  00D3  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1101                           
  1102                           ;main.c: 181:                         break;
  1103  00D8  29C3               	goto	l3462
  1104  00D9                     l3452:	
  1105                           
  1106                           ;main.c: 183:                         sendByte(0x05, 0x01, motorcycle[i]);
  1107  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1108  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1109  00DB  01B8               	clrf	sendByte@byte1
  1110  00DC  0AB8               	incf	sendByte@byte1,f
  1111  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  1112  00DE  1303               	bcf	3,6	;RP1=0, select bank1
  1113  00DF  085F               	movf	main@i^(0+128),w
  1114  00E0  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1115  00E1  0084               	movwf	4
  1116  00E2  1383               	bcf	3,7	;select IRP bank0
  1117  00E3  0800               	movf	0,w
  1118  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1119  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1120  00E6  00C0               	movwf	??_main
  1121  00E7  0840               	movf	??_main,w
  1122  00E8  00B9               	movwf	sendByte@valore
  1123  00E9  3005               	movlw	5
  1124  00EA  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1125                           
  1126                           ;main.c: 184:                         sendByte(0x05, 0x02, car[i]);
  1127  00EF  3002               	movlw	2
  1128  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1129  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1130  00F2  00C0               	movwf	??_main
  1131  00F3  0840               	movf	??_main,w
  1132  00F4  00B8               	movwf	sendByte@byte1
  1133  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1134  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1135  00F7  085F               	movf	main@i^(0+128),w
  1136  00F8  3E5A               	addlw	(low (_car| 0))& (0+255)
  1137  00F9  0084               	movwf	4
  1138  00FA  1383               	bcf	3,7	;select IRP bank0
  1139  00FB  0800               	movf	0,w
  1140  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1141  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1142  00FE  00C1               	movwf	??_main+1
  1143  00FF  0841               	movf	??_main+1,w
  1144  0100  00B9               	movwf	sendByte@valore
  1145  0101  3005               	movlw	5
  1146  0102  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1147                           
  1148                           ;main.c: 185:                         sendByte(0x05, 0x03, truck[i]);
  1149  0107  3003               	movlw	3
  1150  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1152  010A  00C0               	movwf	??_main
  1153  010B  0840               	movf	??_main,w
  1154  010C  00B8               	movwf	sendByte@byte1
  1155  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1156  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1157  010F  085F               	movf	main@i^(0+128),w
  1158  0110  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1159  0111  0084               	movwf	4
  1160  0112  1383               	bcf	3,7	;select IRP bank1
  1161  0113  0800               	movf	0,w
  1162  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0116  00C1               	movwf	??_main+1
  1165  0117  0841               	movf	??_main+1,w
  1166  0118  00B9               	movwf	sendByte@valore
  1167  0119  3005               	movlw	5
  1168  011A  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1169                           
  1170                           ;main.c: 186:                         break;
  1171  011F  29C3               	goto	l3462
  1172  0120                     l3454:	
  1173                           
  1174                           ;main.c: 188:                         sendByte(0x07, 0x01, motorcycle[i]);
  1175  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0122  01B8               	clrf	sendByte@byte1
  1178  0123  0AB8               	incf	sendByte@byte1,f
  1179  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1180  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1181  0126  085F               	movf	main@i^(0+128),w
  1182  0127  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1183  0128  0084               	movwf	4
  1184  0129  1383               	bcf	3,7	;select IRP bank0
  1185  012A  0800               	movf	0,w
  1186  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1187  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1188  012D  00C0               	movwf	??_main
  1189  012E  0840               	movf	??_main,w
  1190  012F  00B9               	movwf	sendByte@valore
  1191  0130  3007               	movlw	7
  1192  0131  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1193                           
  1194                           ;main.c: 189:                         sendByte(0x07, 0x02, car[i]);
  1195  0136  3002               	movlw	2
  1196  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0139  00C0               	movwf	??_main
  1199  013A  0840               	movf	??_main,w
  1200  013B  00B8               	movwf	sendByte@byte1
  1201  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1202  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1203  013E  085F               	movf	main@i^(0+128),w
  1204  013F  3E5A               	addlw	(low (_car| 0))& (0+255)
  1205  0140  0084               	movwf	4
  1206  0141  1383               	bcf	3,7	;select IRP bank0
  1207  0142  0800               	movf	0,w
  1208  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0145  00C1               	movwf	??_main+1
  1211  0146  0841               	movf	??_main+1,w
  1212  0147  00B9               	movwf	sendByte@valore
  1213  0148  3007               	movlw	7
  1214  0149  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1215                           
  1216                           ;main.c: 190:                         sendByte(0x07, 0x03, truck[i]);
  1217  014E  3003               	movlw	3
  1218  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0151  00C0               	movwf	??_main
  1221  0152  0840               	movf	??_main,w
  1222  0153  00B8               	movwf	sendByte@byte1
  1223  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1224  0155  1303               	bcf	3,6	;RP1=0, select bank1
  1225  0156  085F               	movf	main@i^(0+128),w
  1226  0157  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1227  0158  0084               	movwf	4
  1228  0159  1383               	bcf	3,7	;select IRP bank1
  1229  015A  0800               	movf	0,w
  1230  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1231  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1232  015D  00C1               	movwf	??_main+1
  1233  015E  0841               	movf	??_main+1,w
  1234  015F  00B9               	movwf	sendByte@valore
  1235  0160  3007               	movlw	7
  1236  0161  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1237                           
  1238                           ;main.c: 191:                         break;
  1239  0166  29C3               	goto	l3462
  1240  0167                     l3456:	
  1241                           
  1242                           ;main.c: 193:                         sendByte(0x09, 0x01, motorcycle[i]);
  1243  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0169  01B8               	clrf	sendByte@byte1
  1246  016A  0AB8               	incf	sendByte@byte1,f
  1247  016B  1683               	bsf	3,5	;RP0=1, select bank1
  1248  016C  1303               	bcf	3,6	;RP1=0, select bank1
  1249  016D  085F               	movf	main@i^(0+128),w
  1250  016E  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1251  016F  0084               	movwf	4
  1252  0170  1383               	bcf	3,7	;select IRP bank0
  1253  0171  0800               	movf	0,w
  1254  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0174  00C0               	movwf	??_main
  1257  0175  0840               	movf	??_main,w
  1258  0176  00B9               	movwf	sendByte@valore
  1259  0177  3009               	movlw	9
  1260  0178  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1261                           
  1262                           ;main.c: 194:                         sendByte(0x09, 0x02, car[i]);
  1263  017D  3002               	movlw	2
  1264  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1265  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0180  00C0               	movwf	??_main
  1267  0181  0840               	movf	??_main,w
  1268  0182  00B8               	movwf	sendByte@byte1
  1269  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0185  085F               	movf	main@i^(0+128),w
  1272  0186  3E5A               	addlw	(low (_car| 0))& (0+255)
  1273  0187  0084               	movwf	4
  1274  0188  1383               	bcf	3,7	;select IRP bank0
  1275  0189  0800               	movf	0,w
  1276  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1277  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1278  018C  00C1               	movwf	??_main+1
  1279  018D  0841               	movf	??_main+1,w
  1280  018E  00B9               	movwf	sendByte@valore
  1281  018F  3009               	movlw	9
  1282  0190  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1283                           
  1284                           ;main.c: 195:                         sendByte(0x09, 0x03, truck[i]);
  1285  0195  3003               	movlw	3
  1286  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0198  00C0               	movwf	??_main
  1289  0199  0840               	movf	??_main,w
  1290  019A  00B8               	movwf	sendByte@byte1
  1291  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1292  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1293  019D  085F               	movf	main@i^(0+128),w
  1294  019E  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1295  019F  0084               	movwf	4
  1296  01A0  1383               	bcf	3,7	;select IRP bank1
  1297  01A1  0800               	movf	0,w
  1298  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1299  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1300  01A4  00C1               	movwf	??_main+1
  1301  01A5  0841               	movf	??_main+1,w
  1302  01A6  00B9               	movwf	sendByte@valore
  1303  01A7  3009               	movlw	9
  1304  01A8  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1305                           
  1306                           ;main.c: 196:                         break;
  1307  01AD  29C3               	goto	l3462
  1308  01AE                     l3460:	
  1309                           
  1310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1311                           ; Switch size 1, requested type "simple"
  1312                           ; Number of cases is 1, Range of values is 0 to 0
  1313                           ; switch strategies available:
  1314                           ; Name         Instructions Cycles
  1315                           ; simple_byte            4     3 (average)
  1316                           ; direct_byte           11     8 (fixed)
  1317                           ; jumptable            260     6 (fixed)
  1318                           ;	Chosen strategy is simple_byte
  1319  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  1320  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  1321  01B0  0860               	movf	(main@i+1)^(0+128),w
  1322  01B1  3A00               	xorlw	0	; case 0
  1323  01B2  1903               	skipnz
  1324  01B3  29B5               	goto	l3820
  1325  01B4  29C3               	goto	l3462
  1326  01B5                     l3820:	
  1327                           
  1328                           ; Switch size 1, requested type "simple"
  1329                           ; Number of cases is 4, Range of values is 0 to 3
  1330                           ; switch strategies available:
  1331                           ; Name         Instructions Cycles
  1332                           ; simple_byte           13     7 (average)
  1333                           ; direct_byte           20     8 (fixed)
  1334                           ; jumptable            260     6 (fixed)
  1335                           ;	Chosen strategy is simple_byte
  1336  01B5  085F               	movf	main@i^(0+128),w
  1337  01B6  3A00               	xorlw	0	; case 0
  1338  01B7  1903               	skipnz
  1339  01B8  2892               	goto	l3450
  1340  01B9  3A01               	xorlw	1	; case 1
  1341  01BA  1903               	skipnz
  1342  01BB  28D9               	goto	l3452
  1343  01BC  3A03               	xorlw	3	; case 2
  1344  01BD  1903               	skipnz
  1345  01BE  2920               	goto	l3454
  1346  01BF  3A01               	xorlw	1	; case 3
  1347  01C0  1903               	skipnz
  1348  01C1  2967               	goto	l3456
  1349  01C2  29C3               	goto	l3462
  1350  01C3                     l3462:	
  1351                           
  1352                           ;main.c: 198:                 }
  1353  01C3  3001               	movlw	1
  1354  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  1355  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  1356  01C6  07DF               	addwf	main@i^(0+128),f
  1357  01C7  1803               	skipnc
  1358  01C8  0AE0               	incf	(main@i+1)^(0+128),f
  1359  01C9  3000               	movlw	0
  1360  01CA  07E0               	addwf	(main@i+1)^(0+128),f
  1361  01CB                     l3464:	
  1362  01CB  0860               	movf	(main@i+1)^(0+128),w
  1363  01CC  3A80               	xorlw	128
  1364  01CD  00FF               	movwf	btemp+1
  1365  01CE  3080               	movlw	128
  1366  01CF  027F               	subwf	btemp+1,w
  1367  01D0  1D03               	skipz
  1368  01D1  29D4               	goto	u2805
  1369  01D2  3004               	movlw	4
  1370  01D3  025F               	subwf	main@i^(0+128),w
  1371  01D4                     u2805:	
  1372  01D4  1C03               	skipc
  1373  01D5  29D7               	goto	u2801
  1374  01D6  29D8               	goto	u2800
  1375  01D7                     u2801:	
  1376  01D7  29AE               	goto	l3460
  1377  01D8                     u2800:	
  1378  01D8                     l3466:	
  1379                           
  1380                           ;main.c: 200:                 for (int i = 0; i < 4; i++)
  1381  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1382  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1383  01DA  01DB               	clrf	main@i_473^(0+128)
  1384  01DB  01DC               	clrf	(main@i_473+1)^(0+128)
  1385  01DC                     l3472:	
  1386                           
  1387                           ;main.c: 201:                 {;main.c: 202:                     motorcycle[i] = 0;
  1388  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  1389  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  1390  01DE  085B               	movf	main@i_473^(0+128),w
  1391  01DF  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1392  01E0  0084               	movwf	4
  1393  01E1  1383               	bcf	3,7	;select IRP bank0
  1394  01E2  0180               	clrf	0
  1395                           
  1396                           ;main.c: 203:                     car[i] = 0;
  1397  01E3  085B               	movf	main@i_473^(0+128),w
  1398  01E4  3E5A               	addlw	(low (_car| 0))& (0+255)
  1399  01E5  0084               	movwf	4
  1400  01E6  0180               	clrf	0
  1401                           
  1402                           ;main.c: 204:                     truck[i] = 0;
  1403  01E7  085B               	movf	main@i_473^(0+128),w
  1404  01E8  3ECF               	addlw	(low (_truck| 0))& (0+255)
  1405  01E9  0084               	movwf	4
  1406  01EA  0180               	clrf	0
  1407  01EB                     l3474:	
  1408                           
  1409                           ;main.c: 205:                 }
  1410  01EB  3001               	movlw	1
  1411  01EC  07DB               	addwf	main@i_473^(0+128),f
  1412  01ED  1803               	skipnc
  1413  01EE  0ADC               	incf	(main@i_473+1)^(0+128),f
  1414  01EF  3000               	movlw	0
  1415  01F0  07DC               	addwf	(main@i_473+1)^(0+128),f
  1416  01F1                     l3476:	
  1417  01F1  085C               	movf	(main@i_473+1)^(0+128),w
  1418  01F2  3A80               	xorlw	128
  1419  01F3  00FF               	movwf	btemp+1
  1420  01F4  3080               	movlw	128
  1421  01F5  027F               	subwf	btemp+1,w
  1422  01F6  1D03               	skipz
  1423  01F7  29FA               	goto	u2815
  1424  01F8  3004               	movlw	4
  1425  01F9  025B               	subwf	main@i_473^(0+128),w
  1426  01FA                     u2815:	
  1427  01FA  1C03               	skipc
  1428  01FB  29FD               	goto	u2811
  1429  01FC  29FE               	goto	u2810
  1430  01FD                     u2811:	
  1431  01FD  29DC               	goto	l3472
  1432  01FE                     u2810:	
  1433  01FE                     l3478:	
  1434                           
  1435                           ;main.c: 207:                 for (unsigned char i = 0; i < 5; i++)
  1436  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  1437  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0200  01D9               	clrf	main@i_474^(0+128)
  1439  0201                     l3484:	
  1440                           
  1441                           ;main.c: 208:                 {;main.c: 209:                     dataFromGateway[i] = 0;
  1442  0201  0859               	movf	main@i_474^(0+128),w
  1443  0202  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1444  0203  0084               	movwf	4
  1445  0204  1383               	bcf	3,7	;select IRP bank1
  1446  0205  0180               	clrf	0
  1447  0206                     l3486:	
  1448                           
  1449                           ;main.c: 210:                 }
  1450  0206  3001               	movlw	1
  1451  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1452  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1453  0209  00C0               	movwf	??_main
  1454  020A  0840               	movf	??_main,w
  1455  020B  1683               	bsf	3,5	;RP0=1, select bank1
  1456  020C  1303               	bcf	3,6	;RP1=0, select bank1
  1457  020D  07D9               	addwf	main@i_474^(0+128),f
  1458  020E                     l3488:	
  1459  020E  3005               	movlw	5
  1460  020F  0259               	subwf	main@i_474^(0+128),w
  1461  0210  1C03               	skipc
  1462  0211  2A13               	goto	u2821
  1463  0212  2A14               	goto	u2820
  1464  0213                     u2821:	
  1465  0213  2A01               	goto	l3484
  1466  0214                     u2820:	
  1467  0214  2B0A               	goto	l221
  1468  0215                     l237:	
  1469                           ;main.c: 212:             case 0x0A:
  1470                           
  1471                           
  1472                           ;main.c: 213:                 readGatewayDone.Bit = 1;
  1473  0215  1459               	bsf	_readGatewayDone,0
  1474                           
  1475                           ;main.c: 214:                 readGateway.Bit = 0;
  1476  0216  1058               	bcf	_readGateway,0
  1477  0217                     l3490:	
  1478                           
  1479                           ;main.c: 216:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1480  0217  3000               	movlw	0
  1481  0218  120A  158A  23B4  120A  118A  	fcall	_ADC_Read
  1482  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1483  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1484  021F  0824               	movf	?_ADC_Read,w
  1485  0220  00C0               	movwf	??_main
  1486  0221  0825               	movf	?_ADC_Read+1,w
  1487  0222  00C1               	movwf	??_main+1
  1488  0223  0D41               	rlf	??_main+1,w
  1489  0224  0CC1               	rrf	??_main+1,f
  1490  0225  0CC0               	rrf	??_main,f
  1491  0226  0D41               	rlf	??_main+1,w
  1492  0227  0CC1               	rrf	??_main+1,f
  1493  0228  0CC0               	rrf	??_main,f
  1494  0229  0840               	movf	??_main,w
  1495  022A  00B4               	movwf	map@x
  1496  022B  0841               	movf	??_main+1,w
  1497  022C  00B5               	movwf	map@x+1
  1498  022D  3000               	movlw	0
  1499  022E  00B6               	movwf	map@in_min
  1500  022F  00B7               	movwf	map@in_min+1
  1501  0230  30FF               	movlw	255
  1502  0231  00B8               	movwf	map@in_max
  1503  0232  3000               	movlw	0
  1504  0233  00B9               	movwf	map@in_max+1
  1505  0234  30EC               	movlw	236
  1506  0235  00BA               	movwf	map@out_min
  1507  0236  30FF               	movlw	255
  1508  0237  00BB               	movwf	map@out_min+1
  1509  0238  303C               	movlw	60
  1510  0239  00BC               	movwf	map@out_max
  1511  023A  3000               	movlw	0
  1512  023B  00BD               	movwf	map@out_max+1
  1513  023C  120A  158A  240B  120A  118A  	fcall	_map
  1514  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0243  0834               	movf	?_map,w
  1517  0244  00C2               	movwf	??_main+2
  1518  0245  0842               	movf	??_main+2,w
  1519  0246  00D1               	movwf	_temp
  1520                           
  1521                           ;main.c: 217:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1522  0247  3001               	movlw	1
  1523  0248  120A  158A  23B4  120A  118A  	fcall	_ADC_Read
  1524  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1525  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1526  024F  0824               	movf	?_ADC_Read,w
  1527  0250  00C0               	movwf	??_main
  1528  0251  0825               	movf	?_ADC_Read+1,w
  1529  0252  00C1               	movwf	??_main+1
  1530  0253  0D41               	rlf	??_main+1,w
  1531  0254  0CC1               	rrf	??_main+1,f
  1532  0255  0CC0               	rrf	??_main,f
  1533  0256  0D41               	rlf	??_main+1,w
  1534  0257  0CC1               	rrf	??_main+1,f
  1535  0258  0CC0               	rrf	??_main,f
  1536  0259  0840               	movf	??_main,w
  1537  025A  00B4               	movwf	map@x
  1538  025B  0841               	movf	??_main+1,w
  1539  025C  00B5               	movwf	map@x+1
  1540  025D  3000               	movlw	0
  1541  025E  00B6               	movwf	map@in_min
  1542  025F  00B7               	movwf	map@in_min+1
  1543  0260  30FF               	movlw	255
  1544  0261  00B8               	movwf	map@in_max
  1545  0262  3000               	movlw	0
  1546  0263  00B9               	movwf	map@in_max+1
  1547  0264  3000               	movlw	0
  1548  0265  00BA               	movwf	map@out_min
  1549  0266  00BB               	movwf	map@out_min+1
  1550  0267  3064               	movlw	100
  1551  0268  00BC               	movwf	map@out_max
  1552  0269  3000               	movlw	0
  1553  026A  00BD               	movwf	map@out_max+1
  1554  026B  120A  158A  240B  120A  118A  	fcall	_map
  1555  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0272  0834               	movf	?_map,w
  1558  0273  00C2               	movwf	??_main+2
  1559  0274  0842               	movf	??_main+2,w
  1560  0275  00D0               	movwf	_umidita
  1561                           
  1562                           ;main.c: 218:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1563  0276  3005               	movlw	5
  1564  0277  120A  158A  23B4  120A  118A  	fcall	_ADC_Read
  1565  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1566  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1567  027E  0824               	movf	?_ADC_Read,w
  1568  027F  00C0               	movwf	??_main
  1569  0280  0825               	movf	?_ADC_Read+1,w
  1570  0281  00C1               	movwf	??_main+1
  1571  0282  0D41               	rlf	??_main+1,w
  1572  0283  0CC1               	rrf	??_main+1,f
  1573  0284  0CC0               	rrf	??_main,f
  1574  0285  0D41               	rlf	??_main+1,w
  1575  0286  0CC1               	rrf	??_main+1,f
  1576  0287  0CC0               	rrf	??_main,f
  1577  0288  0840               	movf	??_main,w
  1578  0289  00B4               	movwf	map@x
  1579  028A  0841               	movf	??_main+1,w
  1580  028B  00B5               	movwf	map@x+1
  1581  028C  3000               	movlw	0
  1582  028D  00B6               	movwf	map@in_min
  1583  028E  00B7               	movwf	map@in_min+1
  1584  028F  30FF               	movlw	255
  1585  0290  00B8               	movwf	map@in_max
  1586  0291  3000               	movlw	0
  1587  0292  00B9               	movwf	map@in_max+1
  1588  0293  3000               	movlw	0
  1589  0294  00BA               	movwf	map@out_min
  1590  0295  00BB               	movwf	map@out_min+1
  1591  0296  3064               	movlw	100
  1592  0297  00BC               	movwf	map@out_max
  1593  0298  3000               	movlw	0
  1594  0299  00BD               	movwf	map@out_max+1
  1595  029A  120A  158A  240B  120A  118A  	fcall	_map
  1596  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1597  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1598  02A1  0834               	movf	?_map,w
  1599  02A2  00C2               	movwf	??_main+2
  1600  02A3  0842               	movf	??_main+2,w
  1601  02A4  00CF               	movwf	_pressione
  1602  02A5                     l3492:	
  1603                           
  1604                           ;main.c: 219:                 sendByte(0x02, 0x00, temp);
  1605  02A5  01B8               	clrf	sendByte@byte1
  1606  02A6  0851               	movf	_temp,w
  1607  02A7  00C0               	movwf	??_main
  1608  02A8  0840               	movf	??_main,w
  1609  02A9  00B9               	movwf	sendByte@valore
  1610  02AA  3002               	movlw	2
  1611  02AB  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1612  02B0                     l3494:	
  1613                           
  1614                           ;main.c: 220:                 sendByte(0x04, 0x00, umidita);
  1615  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1616  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1617  02B2  01B8               	clrf	sendByte@byte1
  1618  02B3  0850               	movf	_umidita,w
  1619  02B4  00C0               	movwf	??_main
  1620  02B5  0840               	movf	??_main,w
  1621  02B6  00B9               	movwf	sendByte@valore
  1622  02B7  3004               	movlw	4
  1623  02B8  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1624  02BD                     l3496:	
  1625                           
  1626                           ;main.c: 221:                 sendByte(0x06, 0x00, pressione);
  1627  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1628  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1629  02BF  01B8               	clrf	sendByte@byte1
  1630  02C0  084F               	movf	_pressione,w
  1631  02C1  00C0               	movwf	??_main
  1632  02C2  0840               	movf	??_main,w
  1633  02C3  00B9               	movwf	sendByte@valore
  1634  02C4  3006               	movlw	6
  1635  02C5  120A  158A  23DA  120A  118A  	fcall	_sendByte
  1636  02CA                     l3498:	
  1637                           
  1638                           ;main.c: 223:                 for (unsigned char i = 0; i < 5; i++)
  1639  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1640  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1641  02CC  01DA               	clrf	main@i_476^(0+128)
  1642  02CD                     l3500:	
  1643  02CD  3005               	movlw	5
  1644  02CE  025A               	subwf	main@i_476^(0+128),w
  1645  02CF  1C03               	skipc
  1646  02D0  2AD2               	goto	u2831
  1647  02D1  2AD3               	goto	u2830
  1648  02D2                     u2831:	
  1649  02D2  2AD4               	goto	l3504
  1650  02D3                     u2830:	
  1651  02D3  2B0A               	goto	l221
  1652  02D4                     l3504:	
  1653                           
  1654                           ;main.c: 224:                 {;main.c: 225:                     dataFromGateway[i] = 0;
  1655  02D4  085A               	movf	main@i_476^(0+128),w
  1656  02D5  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1657  02D6  0084               	movwf	4
  1658  02D7  1383               	bcf	3,7	;select IRP bank1
  1659  02D8  0180               	clrf	0
  1660  02D9                     l3506:	
  1661                           
  1662                           ;main.c: 226:                 }
  1663  02D9  3001               	movlw	1
  1664  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1665  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1666  02DC  00C0               	movwf	??_main
  1667  02DD  0840               	movf	??_main,w
  1668  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  1669  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  1670  02E0  07DA               	addwf	main@i_476^(0+128),f
  1671  02E1  2ACD               	goto	l3500
  1672  02E2                     l3510:	
  1673                           
  1674                           ;main.c: 230:                 if (timerReadFromGateway >= 4)
  1675  02E2  3004               	movlw	4
  1676  02E3  0252               	subwf	_timerReadFromGateway,w
  1677  02E4  1C03               	skipc
  1678  02E5  2AE7               	goto	u2841
  1679  02E6  2AE8               	goto	u2840
  1680  02E7                     u2841:	
  1681  02E7  2AEB               	goto	l3514
  1682  02E8                     u2840:	
  1683  02E8                     l3512:	
  1684                           
  1685                           ;main.c: 231:                 {;main.c: 232:                     readGatewayDone.Bit = 1
      +                          ;
  1686  02E8  1459               	bsf	_readGatewayDone,0
  1687                           
  1688                           ;main.c: 233:                     readGatewayDone.Timeout = 1;
  1689  02E9  14D9               	bsf	_readGatewayDone,1
  1690                           
  1691                           ;main.c: 234:                     readGateway.Bit = 0;
  1692  02EA  1058               	bcf	_readGateway,0
  1693  02EB                     l3514:	
  1694                           
  1695                           ;main.c: 237:                 if (dataFromGatewayIndex >= 15)
  1696  02EB  300F               	movlw	15
  1697  02EC  0253               	subwf	_dataFromGatewayIndex,w
  1698  02ED  1C03               	skipc
  1699  02EE  2AF0               	goto	u2851
  1700  02EF  2AF1               	goto	u2850
  1701  02F0                     u2851:	
  1702  02F0  2B0A               	goto	l221
  1703  02F1                     u2850:	
  1704  02F1                     l3516:	
  1705                           
  1706                           ;main.c: 238:                 {;main.c: 239:                     readGatewayDone.Bit = 1
      +                          ;
  1707  02F1  1459               	bsf	_readGatewayDone,0
  1708                           
  1709                           ;main.c: 240:                     readGatewayDone.Timeout = 0;
  1710  02F2  10D9               	bcf	_readGatewayDone,1
  1711                           
  1712                           ;main.c: 241:                     readGateway.Bit = 0;
  1713  02F3  1058               	bcf	_readGateway,0
  1714  02F4  2B0A               	goto	l221
  1715  02F5                     l3520:	
  1716  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  1717  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  1718  02F7  0824               	movf	_dataFromGateway^(0+128),w
  1719  02F8  397F               	andlw	127
  1720  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1721  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1722  02FB  00C0               	movwf	??_main
  1723  02FC  01C1               	clrf	??_main+1
  1724                           
  1725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1726                           ; Switch size 1, requested type "simple"
  1727                           ; Number of cases is 1, Range of values is 0 to 0
  1728                           ; switch strategies available:
  1729                           ; Name         Instructions Cycles
  1730                           ; simple_byte            4     3 (average)
  1731                           ; direct_byte           11     8 (fixed)
  1732                           ; jumptable            260     6 (fixed)
  1733                           ;	Chosen strategy is simple_byte
  1734  02FD  0841               	movf	??_main+1,w
  1735  02FE  3A00               	xorlw	0	; case 0
  1736  02FF  1903               	skipnz
  1737  0300  2B02               	goto	l3822
  1738  0301  2AE2               	goto	l3510
  1739  0302                     l3822:	
  1740                           
  1741                           ; Switch size 1, requested type "simple"
  1742                           ; Number of cases is 2, Range of values is 8 to 10
  1743                           ; switch strategies available:
  1744                           ; Name         Instructions Cycles
  1745                           ; simple_byte            7     4 (average)
  1746                           ; direct_byte           20    11 (fixed)
  1747                           ; jumptable            263     9 (fixed)
  1748                           ;	Chosen strategy is simple_byte
  1749  0302  0840               	movf	??_main,w
  1750  0303  3A08               	xorlw	8	; case 8
  1751  0304  1903               	skipnz
  1752  0305  288B               	goto	l223
  1753  0306  3A02               	xorlw	2	; case 10
  1754  0307  1903               	skipnz
  1755  0308  2A15               	goto	l237
  1756  0309  2AE2               	goto	l3510
  1757  030A                     l221:	
  1758                           ;main.c: 245:         }
  1759                           
  1760                           
  1761                           ;main.c: 248:         if (readGatewayDone.Bit)
  1762  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1763  030B  1C59               	btfss	_readGatewayDone,0
  1764  030C  2B0E               	goto	u2861
  1765  030D  2B0F               	goto	u2860
  1766  030E                     u2861:	
  1767  030E  2B23               	goto	l3534
  1768  030F                     u2860:	
  1769  030F                     l3522:	
  1770                           
  1771                           ;main.c: 249:         {;main.c: 251:             readGateway.Bit = 0;
  1772  030F  1058               	bcf	_readGateway,0
  1773  0310                     l3524:	
  1774                           
  1775                           ;main.c: 252:             dataFromGatewayIndex = 0;
  1776  0310  01D3               	clrf	_dataFromGatewayIndex
  1777  0311                     l3526:	
  1778                           
  1779                           ;main.c: 253:             readGatewayDone.Bit = 0;
  1780  0311  1059               	bcf	_readGatewayDone,0
  1781                           
  1782                           ;main.c: 254:             timerReadFromGateway = 0;
  1783  0312  01D2               	clrf	_timerReadFromGateway
  1784  0313                     l3528:	
  1785                           
  1786                           ;main.c: 257:             if (readGatewayDone.Timeout)
  1787  0313  1CD9               	btfss	_readGatewayDone,1
  1788  0314  2B16               	goto	u2871
  1789  0315  2B17               	goto	u2870
  1790  0316                     u2871:	
  1791  0316  2B19               	goto	l3532
  1792  0317                     u2870:	
  1793  0317                     l3530:	
  1794                           
  1795                           ;main.c: 258:             {;main.c: 259:                 readGatewayDone.Timeout = 0;
  1796  0317  10D9               	bcf	_readGatewayDone,1
  1797                           
  1798                           ;main.c: 260:             }
  1799  0318  2B23               	goto	l3534
  1800  0319                     l3532:	
  1801                           
  1802                           ;main.c: 263:             {;main.c: 265:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1803  0319  3064               	movlw	(low (_Semafori| 0))& (0+255)
  1804  031A  00C0               	movwf	??_main
  1805  031B  0840               	movf	??_main,w
  1806  031C  00AC               	movwf	SetReceivedTimes@_semafori
  1807  031D  30A4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1808  031E  120A  158A  2667  120A  118A  	fcall	_SetReceivedTimes
  1809  0323                     l3534:	
  1810                           
  1811                           ;main.c: 271:         if (secondPassed.Bit && cycled.Bit)
  1812  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0325  1C57               	btfss	_secondPassed,0
  1815  0326  2B28               	goto	u2881
  1816  0327  2B29               	goto	u2880
  1817  0328                     u2881:	
  1818  0328  2C1C               	goto	l3568
  1819  0329                     u2880:	
  1820  0329                     l3536:	
  1821  0329  1C56               	btfss	_cycled,0
  1822  032A  2B2C               	goto	u2891
  1823  032B  2B2D               	goto	u2890
  1824  032C                     u2891:	
  1825  032C  2C1C               	goto	l3568
  1826  032D                     u2890:	
  1827  032D                     l3538:	
  1828                           
  1829                           ;main.c: 272:         {;main.c: 273:             for (unsigned char i = 0; i < n_semafor
      +                          i; i++)
  1830  032D  1683               	bsf	3,5	;RP0=1, select bank1
  1831  032E  1303               	bcf	3,6	;RP1=0, select bank1
  1832  032F  01DE               	clrf	main@i_478^(0+128)
  1833  0330                     l3540:	
  1834  0330  3002               	movlw	2
  1835  0331  025E               	subwf	main@i_478^(0+128),w
  1836  0332  1C03               	skipc
  1837  0333  2B35               	goto	u2901
  1838  0334  2B36               	goto	u2900
  1839  0335                     u2901:	
  1840  0335  2B37               	goto	l3544
  1841  0336                     u2900:	
  1842  0336  2C1C               	goto	l3568
  1843  0337                     l3544:	
  1844                           
  1845                           ;main.c: 274:             {;main.c: 275:                 if ((*Semafori[i]).times[0] != 
      +                          0)
  1846  0337  085E               	movf	main@i_478^(0+128),w
  1847  0338  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  1848  0339  0084               	movwf	4
  1849  033A  1383               	bcf	3,7	;select IRP bank0
  1850  033B  0800               	movf	0,w
  1851  033C  0084               	movwf	4
  1852  033D  0800               	movf	0,w
  1853  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1854  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0340  00C0               	movwf	??_main
  1856  0341  0A84               	incf	4,f
  1857  0342  0800               	movf	0,w
  1858  0343  00C1               	movwf	??_main+1
  1859  0344  0840               	movf	??_main,w
  1860  0345  0441               	iorwf	??_main+1,w
  1861  0346  1903               	btfsc	3,2
  1862  0347  2B49               	goto	u2911
  1863  0348  2B4A               	goto	u2910
  1864  0349                     u2911:	
  1865  0349  2C13               	goto	l3564
  1866  034A                     u2910:	
  1867  034A                     l3546:	
  1868                           
  1869                           ;main.c: 276:                 {;main.c: 277:                     time[i]++;
  1870  034A  1683               	bsf	3,5	;RP0=1, select bank1
  1871  034B  1303               	bcf	3,6	;RP1=0, select bank1
  1872  034C  085E               	movf	main@i_478^(0+128),w
  1873  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1874  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1875  034F  00C0               	movwf	??_main
  1876  0350  0740               	addwf	??_main,w
  1877  0351  3E49               	addlw	(low (_time| 0))& (0+255)
  1878  0352  0084               	movwf	4
  1879  0353  3001               	movlw	1
  1880  0354  0780               	addwf	0,f
  1881  0355  0A84               	incf	4,f
  1882  0356  1803               	skipnc
  1883  0357  0A80               	incf	0,f
  1884                           
  1885                           ;main.c: 278:                     unsigned char lux_select = (*Semafori[i]).lux_select;
  1886  0358  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0359  1303               	bcf	3,6	;RP1=0, select bank1
  1888  035A  085E               	movf	main@i_478^(0+128),w
  1889  035B  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  1890  035C  0084               	movwf	4
  1891  035D  0800               	movf	0,w
  1892  035E  3E0C               	addlw	12
  1893  035F  0084               	movwf	4
  1894  0360  0800               	movf	0,w
  1895  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0363  00C0               	movwf	??_main
  1898  0364  0840               	movf	??_main,w
  1899  0365  1683               	bsf	3,5	;RP0=1, select bank1
  1900  0366  1303               	bcf	3,6	;RP1=0, select bank1
  1901  0367  00DD               	movwf	main@lux_select^(0+128)
  1902                           
  1903                           ;main.c: 280:                     if ((*Semafori[i]).times[lux_select] - time[i] < 0)
  1904  0368  085E               	movf	main@i_478^(0+128),w
  1905  0369  1283               	bcf	3,5	;RP0=0, select bank0
  1906  036A  1303               	bcf	3,6	;RP1=0, select bank0
  1907  036B  00C0               	movwf	??_main
  1908  036C  0740               	addwf	??_main,w
  1909  036D  3E49               	addlw	(low (_time| 0))& (0+255)
  1910  036E  0084               	movwf	4
  1911  036F  0800               	movf	0,w
  1912  0370  00C1               	movwf	??_main+1
  1913  0371  0A84               	incf	4,f
  1914  0372  0800               	movf	0,w
  1915  0373  00C2               	movwf	??_main+2
  1916  0374  1683               	bsf	3,5	;RP0=1, select bank1
  1917  0375  1303               	bcf	3,6	;RP1=0, select bank1
  1918  0376  085E               	movf	main@i_478^(0+128),w
  1919  0377  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  1920  0378  0084               	movwf	4
  1921  0379  085D               	movf	main@lux_select^(0+128),w
  1922  037A  1283               	bcf	3,5	;RP0=0, select bank0
  1923  037B  1303               	bcf	3,6	;RP1=0, select bank0
  1924  037C  00C3               	movwf	??_main+3
  1925  037D  0743               	addwf	??_main+3,w
  1926  037E  0700               	addwf	0,w
  1927  037F  00C4               	movwf	??_main+4
  1928  0380  0844               	movf	??_main+4,w
  1929  0381  0084               	movwf	4
  1930  0382  0800               	movf	0,w
  1931  0383  00C5               	movwf	??_main+5
  1932  0384  0A84               	incf	4,f
  1933  0385  0800               	movf	0,w
  1934  0386  00C6               	movwf	??_main+6
  1935  0387  0841               	movf	??_main+1,w
  1936  0388  0245               	subwf	??_main+5,w
  1937  0389  00C7               	movwf	??_main+7
  1938  038A  0842               	movf	??_main+2,w
  1939  038B  1C03               	skipc
  1940  038C  0A42               	incf	??_main+2,w
  1941  038D  0246               	subwf	??_main+6,w
  1942  038E  00C8               	movwf	??_main+8
  1943  038F  1FC8               	btfss	??_main+8,7
  1944  0390  2B92               	goto	u2921
  1945  0391  2B93               	goto	u2920
  1946  0392                     u2921:	
  1947  0392  2BB9               	goto	l250
  1948  0393                     u2920:	
  1949  0393                     l3548:	
  1950                           
  1951                           ;main.c: 281:                     {;main.c: 282:                         lux_select++;
  1952  0393  3001               	movlw	1
  1953  0394  00C0               	movwf	??_main
  1954  0395  0840               	movf	??_main,w
  1955  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1956  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1957  0398  07DD               	addwf	main@lux_select^(0+128),f
  1958  0399                     l3550:	
  1959                           
  1960                           ;main.c: 283:                         time[i] = 1;
  1961  0399  085E               	movf	main@i_478^(0+128),w
  1962  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1963  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1964  039C  00C0               	movwf	??_main
  1965  039D  0740               	addwf	??_main,w
  1966  039E  3E49               	addlw	(low (_time| 0))& (0+255)
  1967  039F  0084               	movwf	4
  1968  03A0  3001               	movlw	1
  1969  03A1  0080               	movwf	0
  1970  03A2  0A84               	incf	4,f
  1971  03A3  3000               	movlw	0
  1972  03A4  0080               	movwf	0
  1973  03A5                     l3552:	
  1974                           
  1975                           ;main.c: 285:                         if (lux_select >= 3)
  1976  03A5  3003               	movlw	3
  1977  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  1978  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  1979  03A8  025D               	subwf	main@lux_select^(0+128),w
  1980  03A9  1C03               	skipc
  1981  03AA  2BAC               	goto	u2931
  1982  03AB  2BAD               	goto	u2930
  1983  03AC                     u2931:	
  1984  03AC  2BB9               	goto	l250
  1985  03AD                     u2930:	
  1986  03AD                     l3554:	
  1987                           
  1988                           ;main.c: 286:                         {;main.c: 287:                             lux_sel
      +                          ect = 0;
  1989  03AD  01DD               	clrf	main@lux_select^(0+128)
  1990  03AE                     l3556:	
  1991                           
  1992                           ;main.c: 289:                             if (i == 0)
  1993  03AE  085E               	movf	main@i_478^(0+128),w
  1994  03AF  1D03               	btfss	3,2
  1995  03B0  2BB2               	goto	u2941
  1996  03B1  2BB3               	goto	u2940
  1997  03B2                     u2941:	
  1998  03B2  2BB9               	goto	l250
  1999  03B3                     u2940:	
  2000  03B3                     l3558:	
  2001                           
  2002                           ;main.c: 290:                             {;main.c: 291:                                
      +                           UpdateTimes(Semafori);
  2003  03B3  3064               	movlw	(low (_Semafori| 0))& (0+255)
  2004  03B4  120A  158A  2795  120A  118A  	fcall	_UpdateTimes
  2005  03B9                     l250:	
  2006                           ;main.c: 294:                     }
  2007                           
  2008                           
  2009                           ;main.c: 296:                     luciSemaforo(i, lux_select);
  2010  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2011  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2012  03BB  085D               	movf	main@lux_select^(0+128),w
  2013  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2014  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2015  03BE  00C0               	movwf	??_main
  2016  03BF  0840               	movf	??_main,w
  2017  03C0  00A4               	movwf	luciSemaforo@lux
  2018  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2019  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2020  03C3  085E               	movf	main@i_478^(0+128),w
  2021  03C4  120A  158A  250C  120A  118A  	fcall	_luciSemaforo
  2022  03C9                     l3560:	
  2023                           
  2024                           ;main.c: 297:                     (*Semafori[i]).lux_select = lux_select;
  2025  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2026  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  2027  03CB  085D               	movf	main@lux_select^(0+128),w
  2028  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2029  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2030  03CE  00C0               	movwf	??_main
  2031  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  2032  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  2033  03D1  085E               	movf	main@i_478^(0+128),w
  2034  03D2  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2035  03D3  0084               	movwf	4
  2036  03D4  1383               	bcf	3,7	;select IRP bank0
  2037  03D5  0800               	movf	0,w
  2038  03D6  3E0C               	addlw	12
  2039  03D7  0084               	movwf	4
  2040  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2041  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2042  03DA  0840               	movf	??_main,w
  2043  03DB  0080               	movwf	0
  2044  03DC                     l3562:	
  2045                           
  2046                           ;main.c: 298:                     GetDigits(DigitsArr, i, (*Semafori[i]).times[lux_selec
      +                          t] - time[i]);
  2047  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2048  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  2049  03DE  085E               	movf	main@i_478^(0+128),w
  2050  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2051  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2052  03E1  00C0               	movwf	??_main
  2053  03E2  0840               	movf	??_main,w
  2054  03E3  00B4               	movwf	GetDigits@index
  2055  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2056  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2057  03E6  085E               	movf	main@i_478^(0+128),w
  2058  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2059  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2060  03E9  00C1               	movwf	??_main+1
  2061  03EA  0741               	addwf	??_main+1,w
  2062  03EB  3E49               	addlw	(low (_time| 0))& (0+255)
  2063  03EC  0084               	movwf	4
  2064  03ED  0800               	movf	0,w
  2065  03EE  00C2               	movwf	??_main+2
  2066  03EF  0A84               	incf	4,f
  2067  03F0  0800               	movf	0,w
  2068  03F1  00C3               	movwf	??_main+3
  2069  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2070  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2071  03F4  085E               	movf	main@i_478^(0+128),w
  2072  03F5  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2073  03F6  0084               	movwf	4
  2074  03F7  085D               	movf	main@lux_select^(0+128),w
  2075  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2076  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2077  03FA  00C4               	movwf	??_main+4
  2078  03FB  0744               	addwf	??_main+4,w
  2079  03FC  0700               	addwf	0,w
  2080  03FD  00C5               	movwf	??_main+5
  2081  03FE  0845               	movf	??_main+5,w
  2082  03FF  0084               	movwf	4
  2083  0400  0800               	movf	0,w
  2084  0401  00C6               	movwf	??_main+6
  2085  0402  0A84               	incf	4,f
  2086  0403  0800               	movf	0,w
  2087  0404  00C7               	movwf	??_main+7
  2088  0405  0842               	movf	??_main+2,w
  2089  0406  0246               	subwf	??_main+6,w
  2090  0407  00B5               	movwf	GetDigits@Time
  2091  0408  0843               	movf	??_main+3,w
  2092  0409  1C03               	skipc
  2093  040A  0A43               	incf	??_main+3,w
  2094  040B  0247               	subwf	??_main+7,w
  2095  040C  00B6               	movwf	GetDigits@Time+1
  2096  040D  3062               	movlw	(low (_DigitsArr| 0))& (0+255)
  2097  040E  120A  118A  243A  120A  118A  	fcall	_GetDigits
  2098  0413                     l3564:	
  2099                           
  2100                           ;main.c: 300:             }
  2101  0413  3001               	movlw	1
  2102  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0416  00C0               	movwf	??_main
  2105  0417  0840               	movf	??_main,w
  2106  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2107  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2108  041A  07DE               	addwf	main@i_478^(0+128),f
  2109  041B  2B30               	goto	l3540
  2110  041C                     l3568:	
  2111                           
  2112                           ;main.c: 303:         ShowDigitsOnDisplay();
  2113  041C  120A  118A  2686  120A  118A  	fcall	_ShowDigitsOnDisplay
  2114  0421                     l3570:	
  2115                           
  2116                           ;main.c: 309:         if (secondPassed.Bit && cycled.Bit)
  2117  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0423  1C57               	btfss	_secondPassed,0
  2120  0424  2C26               	goto	u2951
  2121  0425  2C27               	goto	u2950
  2122  0426                     u2951:	
  2123  0426  2C2D               	goto	l253
  2124  0427                     u2950:	
  2125  0427                     l3572:	
  2126  0427  1C56               	btfss	_cycled,0
  2127  0428  2C2A               	goto	u2961
  2128  0429  2C2B               	goto	u2960
  2129  042A                     u2961:	
  2130  042A  2C2D               	goto	l253
  2131  042B                     u2960:	
  2132  042B                     l3574:	
  2133                           
  2134                           ;main.c: 310:         {;main.c: 311:             secondPassed.Bit = 0;
  2135  042B  1057               	bcf	_secondPassed,0
  2136                           
  2137                           ;main.c: 312:             cycled.Bit = 0;
  2138  042C  1056               	bcf	_cycled,0
  2139  042D                     l253:	
  2140                           ;main.c: 313:         }
  2141                           
  2142                           
  2143                           ;main.c: 314:         if (secondPassed.Bit && !cycled.Bit)
  2144  042D  1C57               	btfss	_secondPassed,0
  2145  042E  2C30               	goto	u2971
  2146  042F  2C31               	goto	u2970
  2147  0430                     u2971:	
  2148  0430  2886               	goto	l3440
  2149  0431                     u2970:	
  2150  0431                     l3576:	
  2151  0431  1856               	btfsc	_cycled,0
  2152  0432  2C34               	goto	u2981
  2153  0433  2C35               	goto	u2980
  2154  0434                     u2981:	
  2155  0434  2886               	goto	l3440
  2156  0435                     u2980:	
  2157  0435                     l3578:	
  2158                           
  2159                           ;main.c: 315:         {;main.c: 316:             cycled.Bit = 1;
  2160  0435  1456               	bsf	_cycled,0
  2161  0436  2886               	goto	l3440
  2162  0437  120A  118A  2810   	ljmp	start
  2163  043A                     __end_of_main:	
  2164                           
  2165                           	psect	text1
  2166  0BDA                     __ptext1:	
  2167 ;; *************** function _sendByte *****************
  2168 ;; Defined at:
  2169 ;;		line 380 in file "main.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  byte0           1    wreg     unsigned char 
  2172 ;;  byte1           1   24[BANK0 ] unsigned char 
  2173 ;;  valore          1   25[BANK0 ] unsigned char 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  byte0           1   29[BANK0 ] unsigned char 
  2176 ;;  i               1   31[BANK0 ] unsigned char 
  2177 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2178 ;;		 -> BuildByte@txByte(5), 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         0       2       0       0       0
  2189 ;;      Locals:         0       3       0       0       0
  2190 ;;      Temps:          0       3       0       0       0
  2191 ;;      Totals:         0       8       0       0       0
  2192 ;;Total ram usage:        8 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    4
  2195 ;; This function calls:
  2196 ;;		_BuildByte
  2197 ;;		_UART_TxChar
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _sendByte
  2205  0BDA                     _sendByte:	
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2209                           ;sendByte@byte0 stored from wreg
  2210  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0BDC  00BD               	movwf	sendByte@byte0
  2213  0BDD                     l3308:	
  2214                           
  2215                           ;main.c: 380: void sendByte(char byte0, char byte1, char valore);main.c: 381: {;main.c: 
      +                          382:     char *txByte;;main.c: 383:     txByte = BuildByte(byte0, byte1, valore);
  2216  0BDD  0838               	movf	sendByte@byte1,w
  2217  0BDE  00BA               	movwf	??_sendByte
  2218  0BDF  083A               	movf	??_sendByte,w
  2219  0BE0  00A4               	movwf	BuildByte@byte1
  2220  0BE1  0839               	movf	sendByte@valore,w
  2221  0BE2  00BB               	movwf	??_sendByte+1
  2222  0BE3  083B               	movf	??_sendByte+1,w
  2223  0BE4  00A5               	movwf	BuildByte@valore
  2224  0BE5  083D               	movf	sendByte@byte0,w
  2225  0BE6  120A  118A  2507  120A  158A  	fcall	_BuildByte
  2226  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0BED  00BC               	movwf	??_sendByte+2
  2229  0BEE  083C               	movf	??_sendByte+2,w
  2230  0BEF  00BE               	movwf	sendByte@txByte
  2231  0BF0                     l3310:	
  2232                           
  2233                           ;main.c: 385:     for (unsigned char i = 0; i < 5; i++)
  2234  0BF0  01BF               	clrf	sendByte@i
  2235  0BF1                     l3316:	
  2236                           
  2237                           ;main.c: 386:     {;main.c: 387:         UART_TxChar(*(txByte++));
  2238  0BF1  083E               	movf	sendByte@txByte,w
  2239  0BF2  0084               	movwf	4
  2240  0BF3  1383               	bcf	3,7	;select IRP bank0
  2241  0BF4  0800               	movf	0,w
  2242  0BF5  120A  158A  237F  120A  158A  	fcall	_UART_TxChar
  2243  0BFA                     l3318:	
  2244  0BFA  3001               	movlw	1
  2245  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0BFD  00BA               	movwf	??_sendByte
  2248  0BFE  083A               	movf	??_sendByte,w
  2249  0BFF  07BE               	addwf	sendByte@txByte,f
  2250  0C00                     l3320:	
  2251                           
  2252                           ;main.c: 388:     }
  2253  0C00  3001               	movlw	1
  2254  0C01  00BA               	movwf	??_sendByte
  2255  0C02  083A               	movf	??_sendByte,w
  2256  0C03  07BF               	addwf	sendByte@i,f
  2257  0C04                     l3322:	
  2258  0C04  3005               	movlw	5
  2259  0C05  023F               	subwf	sendByte@i,w
  2260  0C06  1C03               	skipc
  2261  0C07  2C09               	goto	u2701
  2262  0C08  2C0A               	goto	u2700
  2263  0C09                     u2701:	
  2264  0C09  2BF1               	goto	l3316
  2265  0C0A                     u2700:	
  2266  0C0A                     l292:	
  2267  0C0A  0008               	return
  2268  0C0B                     __end_of_sendByte:	
  2269                           
  2270                           	psect	text2
  2271  0B7F                     __ptext2:	
  2272 ;; *************** function _UART_TxChar *****************
  2273 ;; Defined at:
  2274 ;;		line 355 in file "main.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  ch              1    wreg     unsigned char 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  ch              1    4[BANK0 ] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         0       1       0       0       0
  2290 ;;      Temps:          0       0       0       0       0
  2291 ;;      Totals:         0       1       0       0       0
  2292 ;;Total ram usage:        1 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    3
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_sendByte
  2299 ;;		_UART_Write_Text
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _UART_TxChar
  2305  0B7F                     _UART_TxChar:	
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _UART_TxChar: [wreg]
  2309                           ;UART_TxChar@ch stored from wreg
  2310  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0B81  00A4               	movwf	UART_TxChar@ch
  2313  0B82                     l3022:	
  2314  0B82                     l272:	
  2315                           ;main.c: 358:         ;
  2316                           
  2317                           
  2318                           ;main.c: 357:     while (!TXIF)
  2319  0B82  1E0C               	btfss	12,4	;volatile
  2320  0B83  2B85               	goto	u2251
  2321  0B84  2B86               	goto	u2250
  2322  0B85                     u2251:	
  2323  0B85  2B82               	goto	l272
  2324  0B86                     u2250:	
  2325  0B86                     l274:	
  2326                           
  2327                           ;main.c: 359:     TXIF = 0;
  2328  0B86  120C               	bcf	12,4	;volatile
  2329  0B87                     l3024:	
  2330                           
  2331                           ;main.c: 360:     TXREG = ch;
  2332  0B87  0824               	movf	UART_TxChar@ch,w
  2333  0B88  0099               	movwf	25	;volatile
  2334  0B89                     l275:	
  2335  0B89  0008               	return
  2336  0B8A                     __end_of_UART_TxChar:	
  2337                           
  2338                           	psect	text3
  2339  0507                     __ptext3:	
  2340 ;; *************** function _BuildByte *****************
  2341 ;; Defined at:
  2342 ;;		line 2 in file "./CustomLib/Serial.h"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  byte0           1    wreg     unsigned char 
  2345 ;;  byte1           1    4[BANK0 ] unsigned char 
  2346 ;;  valore          1    5[BANK0 ] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  byte0           1    8[BANK0 ] unsigned char 
  2349 ;;  y               2   18[BANK0 ] int 
  2350 ;;  y               2   16[BANK0 ] int 
  2351 ;;  i               2   22[BANK0 ] int 
  2352 ;;  i               2   20[BANK0 ] int 
  2353 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2354 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2355 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      PTR unsigned char 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         0       2       0       0       0
  2366 ;;      Locals:         0      16       0       0       0
  2367 ;;      Temps:          0       2       0       0       0
  2368 ;;      Totals:         0      20       0       0       0
  2369 ;;Total ram usage:       20 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    3
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_sendByte
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function _BuildByte
  2381  0507                     _BuildByte:	
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2385                           ;BuildByte@byte0 stored from wreg
  2386  0507  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0508  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0509  00A8               	movwf	BuildByte@byte0
  2389  050A                     l2940:	
  2390                           
  2391                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2392  050A  0828               	movf	BuildByte@byte0,w
  2393  050B  397F               	andlw	127
  2394  050C  00A6               	movwf	??_BuildByte
  2395  050D  0826               	movf	??_BuildByte,w
  2396  050E  00A9               	movwf	BuildByte@txByte
  2397                           
  2398                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2399  050F  0824               	movf	BuildByte@byte1,w
  2400  0510  397F               	andlw	127
  2401  0511  00A6               	movwf	??_BuildByte
  2402  0512  0826               	movf	??_BuildByte,w
  2403  0513  00AA               	movwf	BuildByte@txByte+1
  2404                           
  2405                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2406  0514  0825               	movf	BuildByte@valore,w
  2407  0515  397F               	andlw	127
  2408  0516  00A6               	movwf	??_BuildByte
  2409  0517  0826               	movf	??_BuildByte,w
  2410  0518  00AB               	movwf	BuildByte@txByte+2
  2411  0519                     l2942:	
  2412                           
  2413                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2414  0519  0825               	movf	BuildByte@valore,w
  2415  051A  00A6               	movwf	??_BuildByte
  2416  051B  3007               	movlw	7
  2417  051C                     u2145:	
  2418  051C  1003               	clrc
  2419  051D  0CA6               	rrf	??_BuildByte,f
  2420  051E  3EFF               	addlw	-1
  2421  051F  1D03               	skipz
  2422  0520  2D1C               	goto	u2145
  2423  0521  0826               	movf	??_BuildByte,w
  2424  0522  397F               	andlw	127
  2425  0523  00A7               	movwf	??_BuildByte+1
  2426  0524  0827               	movf	??_BuildByte+1,w
  2427  0525  00AC               	movwf	BuildByte@txByte+3
  2428  0526                     l2944:	
  2429                           
  2430                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2431  0526  01AE               	clrf	BuildByte@sommaRow
  2432  0527                     l2946:	
  2433                           
  2434                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2435  0527  01AF               	clrf	BuildByte@sommaColumn
  2436  0528                     l2948:	
  2437                           
  2438                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2439  0528  01B4               	clrf	BuildByte@i
  2440  0529  01B5               	clrf	BuildByte@i+1
  2441  052A                     l2954:	
  2442                           
  2443                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2444  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2445  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2446  052C  01B0               	clrf	BuildByte@y
  2447  052D  01B1               	clrf	BuildByte@y+1
  2448  052E                     l2960:	
  2449                           
  2450                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2451  052E  1283               	bcf	3,5	;RP0=0, select bank0
  2452  052F  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0530  0834               	movf	BuildByte@i,w
  2454  0531  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2455  0532  0084               	movwf	4
  2456  0533  1383               	bcf	3,7	;select IRP bank0
  2457  0534  0800               	movf	0,w
  2458  0535  00A6               	movwf	??_BuildByte
  2459  0536  0A30               	incf	BuildByte@y,w
  2460  0537  2D3A               	goto	u2154
  2461  0538                     u2155:	
  2462  0538  1003               	clrc
  2463  0539  0CA6               	rrf	??_BuildByte,f
  2464  053A                     u2154:	
  2465  053A  3EFF               	addlw	-1
  2466  053B  1D03               	skipz
  2467  053C  2D38               	goto	u2155
  2468  053D  0826               	movf	??_BuildByte,w
  2469  053E  3901               	andlw	1
  2470  053F  00A7               	movwf	??_BuildByte+1
  2471  0540  0827               	movf	??_BuildByte+1,w
  2472  0541  07AE               	addwf	BuildByte@sommaRow,f
  2473  0542                     l2962:	
  2474                           
  2475                           ;./CustomLib/Serial.h: 18:         }
  2476  0542  3001               	movlw	1
  2477  0543  07B0               	addwf	BuildByte@y,f
  2478  0544  1803               	skipnc
  2479  0545  0AB1               	incf	BuildByte@y+1,f
  2480  0546  3000               	movlw	0
  2481  0547  07B1               	addwf	BuildByte@y+1,f
  2482  0548                     l2964:	
  2483  0548  0831               	movf	BuildByte@y+1,w
  2484  0549  3A80               	xorlw	128
  2485  054A  00FF               	movwf	btemp+1
  2486  054B  3080               	movlw	128
  2487  054C  027F               	subwf	btemp+1,w
  2488  054D  1D03               	skipz
  2489  054E  2D51               	goto	u2165
  2490  054F  3008               	movlw	8
  2491  0550  0230               	subwf	BuildByte@y,w
  2492  0551                     u2165:	
  2493  0551  1C03               	skipc
  2494  0552  2D54               	goto	u2161
  2495  0553  2D55               	goto	u2160
  2496  0554                     u2161:	
  2497  0554  2D2E               	goto	l2960
  2498  0555                     u2160:	
  2499  0555                     l103:	
  2500                           
  2501                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2502  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2504  0557  1C2E               	btfss	BuildByte@sommaRow,0
  2505  0558  2D5A               	goto	u2171
  2506  0559  2D5B               	goto	u2170
  2507  055A                     u2171:	
  2508  055A  2D63               	goto	l2968
  2509  055B                     u2170:	
  2510  055B                     l2966:	
  2511                           
  2512                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2513  055B  3080               	movlw	128
  2514  055C  00A6               	movwf	??_BuildByte
  2515  055D  0834               	movf	BuildByte@i,w
  2516  055E  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2517  055F  0084               	movwf	4
  2518  0560  0826               	movf	??_BuildByte,w
  2519  0561  1383               	bcf	3,7	;select IRP bank0
  2520  0562  0780               	addwf	0,f
  2521  0563                     l2968:	
  2522                           
  2523                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2524  0563  01AE               	clrf	BuildByte@sommaRow
  2525  0564                     l2972:	
  2526                           ;./CustomLib/Serial.h: 23:         }
  2527                           
  2528                           
  2529                           ;./CustomLib/Serial.h: 28:     }
  2530  0564  3001               	movlw	1
  2531  0565  07B4               	addwf	BuildByte@i,f
  2532  0566  1803               	skipnc
  2533  0567  0AB5               	incf	BuildByte@i+1,f
  2534  0568  3000               	movlw	0
  2535  0569  07B5               	addwf	BuildByte@i+1,f
  2536  056A                     l2974:	
  2537  056A  0835               	movf	BuildByte@i+1,w
  2538  056B  3A80               	xorlw	128
  2539  056C  00FF               	movwf	btemp+1
  2540  056D  3080               	movlw	128
  2541  056E  027F               	subwf	btemp+1,w
  2542  056F  1D03               	skipz
  2543  0570  2D73               	goto	u2185
  2544  0571  3004               	movlw	4
  2545  0572  0234               	subwf	BuildByte@i,w
  2546  0573                     u2185:	
  2547  0573  1C03               	skipc
  2548  0574  2D76               	goto	u2181
  2549  0575  2D77               	goto	u2180
  2550  0576                     u2181:	
  2551  0576  2D2A               	goto	l2954
  2552  0577                     u2180:	
  2553  0577                     l2976:	
  2554                           
  2555                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2556  0577  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0578  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0579  01B6               	clrf	BuildByte@i_337
  2559  057A  01B7               	clrf	BuildByte@i_337+1
  2560  057B                     l2982:	
  2561                           
  2562                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2563  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2564  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2565  057D  01B2               	clrf	BuildByte@y_338
  2566  057E  01B3               	clrf	BuildByte@y_338+1
  2567  057F                     l2988:	
  2568                           
  2569                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2570  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0581  0832               	movf	BuildByte@y_338,w
  2573  0582  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2574  0583  0084               	movwf	4
  2575  0584  1383               	bcf	3,7	;select IRP bank0
  2576  0585  0800               	movf	0,w
  2577  0586  00A6               	movwf	??_BuildByte
  2578  0587  0A36               	incf	BuildByte@i_337,w
  2579  0588  2D8B               	goto	u2194
  2580  0589                     u2195:	
  2581  0589  1003               	clrc
  2582  058A  0CA6               	rrf	??_BuildByte,f
  2583  058B                     u2194:	
  2584  058B  3EFF               	addlw	-1
  2585  058C  1D03               	skipz
  2586  058D  2D89               	goto	u2195
  2587  058E  0826               	movf	??_BuildByte,w
  2588  058F  3901               	andlw	1
  2589  0590  00A7               	movwf	??_BuildByte+1
  2590  0591  0827               	movf	??_BuildByte+1,w
  2591  0592  07AF               	addwf	BuildByte@sommaColumn,f
  2592  0593                     l2990:	
  2593                           
  2594                           ;./CustomLib/Serial.h: 37:         }
  2595  0593  3001               	movlw	1
  2596  0594  07B2               	addwf	BuildByte@y_338,f
  2597  0595  1803               	skipnc
  2598  0596  0AB3               	incf	BuildByte@y_338+1,f
  2599  0597  3000               	movlw	0
  2600  0598  07B3               	addwf	BuildByte@y_338+1,f
  2601  0599                     l2992:	
  2602  0599  0833               	movf	BuildByte@y_338+1,w
  2603  059A  3A80               	xorlw	128
  2604  059B  00FF               	movwf	btemp+1
  2605  059C  3080               	movlw	128
  2606  059D  027F               	subwf	btemp+1,w
  2607  059E  1D03               	skipz
  2608  059F  2DA2               	goto	u2205
  2609  05A0  3004               	movlw	4
  2610  05A1  0232               	subwf	BuildByte@y_338,w
  2611  05A2                     u2205:	
  2612  05A2  1C03               	skipc
  2613  05A3  2DA5               	goto	u2201
  2614  05A4  2DA6               	goto	u2200
  2615  05A5                     u2201:	
  2616  05A5  2D7F               	goto	l2988
  2617  05A6                     u2200:	
  2618  05A6                     l109:	
  2619                           
  2620                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2621  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2622  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2623  05A8  1C2F               	btfss	BuildByte@sommaColumn,0
  2624  05A9  2DAB               	goto	u2211
  2625  05AA  2DAC               	goto	u2210
  2626  05AB                     u2211:	
  2627  05AB  2DB9               	goto	l2996
  2628  05AC                     u2210:	
  2629  05AC                     l2994:	
  2630                           
  2631                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2632  05AC  3001               	movlw	1
  2633  05AD  00A6               	movwf	??_BuildByte
  2634  05AE  0A36               	incf	BuildByte@i_337,w
  2635  05AF  2DB2               	goto	u2224
  2636  05B0                     u2225:	
  2637  05B0  1003               	clrc
  2638  05B1  0DA6               	rlf	??_BuildByte,f
  2639  05B2                     u2224:	
  2640  05B2  3EFF               	addlw	-1
  2641  05B3  1D03               	skipz
  2642  05B4  2DB0               	goto	u2225
  2643  05B5  0826               	movf	??_BuildByte,w
  2644  05B6  00A7               	movwf	??_BuildByte+1
  2645  05B7  0827               	movf	??_BuildByte+1,w
  2646  05B8  07AD               	addwf	BuildByte@txByte+4,f
  2647  05B9                     l2996:	
  2648                           
  2649                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2650  05B9  01AF               	clrf	BuildByte@sommaColumn
  2651  05BA                     l3000:	
  2652                           ;./CustomLib/Serial.h: 42:         }
  2653                           
  2654                           
  2655                           ;./CustomLib/Serial.h: 47:     }
  2656  05BA  3001               	movlw	1
  2657  05BB  07B6               	addwf	BuildByte@i_337,f
  2658  05BC  1803               	skipnc
  2659  05BD  0AB7               	incf	BuildByte@i_337+1,f
  2660  05BE  3000               	movlw	0
  2661  05BF  07B7               	addwf	BuildByte@i_337+1,f
  2662  05C0                     l3002:	
  2663  05C0  0837               	movf	BuildByte@i_337+1,w
  2664  05C1  3A80               	xorlw	128
  2665  05C2  00FF               	movwf	btemp+1
  2666  05C3  3080               	movlw	128
  2667  05C4  027F               	subwf	btemp+1,w
  2668  05C5  1D03               	skipz
  2669  05C6  2DC9               	goto	u2235
  2670  05C7  3008               	movlw	8
  2671  05C8  0236               	subwf	BuildByte@i_337,w
  2672  05C9                     u2235:	
  2673  05C9  1C03               	skipc
  2674  05CA  2DCC               	goto	u2231
  2675  05CB  2DCD               	goto	u2230
  2676  05CC                     u2231:	
  2677  05CC  2D7B               	goto	l2982
  2678  05CD                     u2230:	
  2679  05CD                     l3004:	
  2680                           
  2681                           ;./CustomLib/Serial.h: 49:     return txByte;
  2682  05CD  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2683  05CE                     l112:	
  2684  05CE  0008               	return
  2685  05CF                     __end_of_BuildByte:	
  2686                           
  2687                           	psect	text4
  2688  0C0B                     __ptext4:	
  2689 ;; *************** function _map *****************
  2690 ;; Defined at:
  2691 ;;		line 134 in file "./CustomLib/TrafficLight.h"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  x               2   20[BANK0 ] int 
  2694 ;;  in_min          2   22[BANK0 ] int 
  2695 ;;  in_max          2   24[BANK0 ] int 
  2696 ;;  out_min         2   26[BANK0 ] int 
  2697 ;;  out_max         2   28[BANK0 ] int 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2   20[BANK0 ] int 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0      10       0       0       0
  2710 ;;      Locals:         0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0
  2712 ;;      Totals:         0      10       0       0       0
  2713 ;;Total ram usage:       10 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    4
  2716 ;; This function calls:
  2717 ;;		___awdiv
  2718 ;;		___wmul
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _map
  2726  0C0B                     _map:	
  2727  0C0B                     l3286:	
  2728                           ;incstack = 0
  2729                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2730                           
  2731                           
  2732                           ;./CustomLib/TrafficLight.h: 134: int map(int x, int in_min, int in_max, int out_min, in
      +                          t out_max);./CustomLib/TrafficLight.h: 135: {;./CustomLib/TrafficLight.h: 136:     retur
      +                          n (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2733  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0C0D  0836               	movf	map@in_min,w
  2736  0C0E  0238               	subwf	map@in_max,w
  2737  0C0F  00AB               	movwf	___awdiv@divisor
  2738  0C10  0837               	movf	map@in_min+1,w
  2739  0C11  1C03               	skipc
  2740  0C12  0A37               	incf	map@in_min+1,w
  2741  0C13  0239               	subwf	map@in_max+1,w
  2742  0C14  00AC               	movwf	___awdiv@divisor+1
  2743  0C15  0836               	movf	map@in_min,w
  2744  0C16  0234               	subwf	map@x,w
  2745  0C17  00A4               	movwf	___wmul@multiplier
  2746  0C18  0837               	movf	map@in_min+1,w
  2747  0C19  1C03               	skipc
  2748  0C1A  0A37               	incf	map@in_min+1,w
  2749  0C1B  0235               	subwf	map@x+1,w
  2750  0C1C  00A5               	movwf	___wmul@multiplier+1
  2751  0C1D  083A               	movf	map@out_min,w
  2752  0C1E  023C               	subwf	map@out_max,w
  2753  0C1F  00A6               	movwf	___wmul@multiplicand
  2754  0C20  083B               	movf	map@out_min+1,w
  2755  0C21  1C03               	skipc
  2756  0C22  0A3B               	incf	map@out_min+1,w
  2757  0C23  023D               	subwf	map@out_max+1,w
  2758  0C24  00A7               	movwf	___wmul@multiplicand+1
  2759  0C25  120A  118A  27D0  120A  158A  	fcall	___wmul
  2760  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0C2C  0825               	movf	?___wmul+1,w
  2763  0C2D  00AE               	movwf	___awdiv@dividend+1
  2764  0C2E  0824               	movf	?___wmul,w
  2765  0C2F  00AD               	movwf	___awdiv@dividend
  2766  0C30  120A  158A  272C  120A  158A  	fcall	___awdiv
  2767  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0C37  083A               	movf	map@out_min,w
  2770  0C38  072B               	addwf	?___awdiv,w
  2771  0C39  00B4               	movwf	?_map
  2772  0C3A  083B               	movf	map@out_min+1,w
  2773  0C3B  1803               	skipnc
  2774  0C3C  0A3B               	incf	map@out_min+1,w
  2775  0C3D  072C               	addwf	?___awdiv+1,w
  2776  0C3E  00B5               	movwf	?_map+1
  2777  0C3F                     l167:	
  2778  0C3F  0008               	return
  2779  0C40                     __end_of_map:	
  2780                           
  2781                           	psect	text5
  2782  07D0                     __ptext5:	
  2783 ;; *************** function ___wmul *****************
  2784 ;; Defined at:
  2785 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  multiplier      2    4[BANK0 ] unsigned int 
  2788 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  product         2    8[BANK0 ] unsigned int 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  2    4[BANK0 ] unsigned int 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2800 ;;      Params:         0       4       0       0       0
  2801 ;;      Locals:         0       2       0       0       0
  2802 ;;      Temps:          0       0       0       0       0
  2803 ;;      Totals:         0       6       0       0       0
  2804 ;;Total ram usage:        6 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    3
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_map
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function ___wmul
  2816  07D0                     ___wmul:	
  2817  07D0                     l3044:	
  2818                           ;incstack = 0
  2819                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2820                           
  2821  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  2822  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  2823  07D2  01A8               	clrf	___wmul@product
  2824  07D3  01A9               	clrf	___wmul@product+1
  2825  07D4                     l3046:	
  2826  07D4  1C24               	btfss	___wmul@multiplier,0
  2827  07D5  2FD7               	goto	u2261
  2828  07D6  2FD8               	goto	u2260
  2829  07D7                     u2261:	
  2830  07D7  2FDE               	goto	l434
  2831  07D8                     u2260:	
  2832  07D8                     l3048:	
  2833  07D8  0826               	movf	___wmul@multiplicand,w
  2834  07D9  07A8               	addwf	___wmul@product,f
  2835  07DA  1803               	skipnc
  2836  07DB  0AA9               	incf	___wmul@product+1,f
  2837  07DC  0827               	movf	___wmul@multiplicand+1,w
  2838  07DD  07A9               	addwf	___wmul@product+1,f
  2839  07DE                     l434:	
  2840  07DE  3001               	movlw	1
  2841  07DF                     u2275:	
  2842  07DF  1003               	clrc
  2843  07E0  0DA6               	rlf	___wmul@multiplicand,f
  2844  07E1  0DA7               	rlf	___wmul@multiplicand+1,f
  2845  07E2  3EFF               	addlw	-1
  2846  07E3  1D03               	skipz
  2847  07E4  2FDF               	goto	u2275
  2848  07E5                     l3050:	
  2849  07E5  3001               	movlw	1
  2850  07E6                     u2285:	
  2851  07E6  1003               	clrc
  2852  07E7  0CA5               	rrf	___wmul@multiplier+1,f
  2853  07E8  0CA4               	rrf	___wmul@multiplier,f
  2854  07E9  3EFF               	addlw	-1
  2855  07EA  1D03               	skipz
  2856  07EB  2FE6               	goto	u2285
  2857  07EC                     l3052:	
  2858  07EC  0824               	movf	___wmul@multiplier,w
  2859  07ED  0425               	iorwf	___wmul@multiplier+1,w
  2860  07EE  1D03               	btfss	3,2
  2861  07EF  2FF1               	goto	u2291
  2862  07F0  2FF2               	goto	u2290
  2863  07F1                     u2291:	
  2864  07F1  2FD4               	goto	l3046
  2865  07F2                     u2290:	
  2866  07F2                     l3054:	
  2867  07F2  0829               	movf	___wmul@product+1,w
  2868  07F3  00A5               	movwf	?___wmul+1
  2869  07F4  0828               	movf	___wmul@product,w
  2870  07F5  00A4               	movwf	?___wmul
  2871  07F6                     l436:	
  2872  07F6  0008               	return
  2873  07F7                     __end_of___wmul:	
  2874                           
  2875                           	psect	text6
  2876  0D0C                     __ptext6:	
  2877 ;; *************** function _luciSemaforo *****************
  2878 ;; Defined at:
  2879 ;;		line 412 in file "main.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  index           1    wreg     unsigned char 
  2882 ;;  lux             1    4[BANK0 ] unsigned char 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  index           1    7[BANK0 ] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       1       0       0       0
  2895 ;;      Locals:         0       1       0       0       0
  2896 ;;      Temps:          0       2       0       0       0
  2897 ;;      Totals:         0       4       0       0       0
  2898 ;;Total ram usage:        4 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    3
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function _luciSemaforo
  2910  0D0C                     _luciSemaforo:	
  2911                           
  2912                           ;incstack = 0
  2913                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  2914                           ;luciSemaforo@index stored from wreg
  2915  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0D0E  00A7               	movwf	luciSemaforo@index
  2918  0D0F                     l3334:	
  2919                           
  2920                           ;main.c: 412: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 413: {;m
      +                          ain.c: 414:     switch (index)
  2921  0D0F  2D4E               	goto	l3346
  2922  0D10                     l306:	
  2923                           ;main.c: 418:         {;main.c: 419:         case 0:
  2924                           
  2925                           
  2926                           ;main.c: 420:             PORTCbits.RC1 = 0;
  2927  0D10  1087               	bcf	7,1	;volatile
  2928                           
  2929                           ;main.c: 421:             PORTCbits.RC2 = 0;
  2930  0D11  1107               	bcf	7,2	;volatile
  2931                           
  2932                           ;main.c: 422:             PORTCbits.RC0 = 1;
  2933  0D12  1407               	bsf	7,0	;volatile
  2934                           
  2935                           ;main.c: 423:             break;
  2936  0D13  2D5E               	goto	l317
  2937  0D14                     l308:	
  2938                           ;main.c: 424:         case 1:
  2939                           
  2940                           
  2941                           ;main.c: 425:             PORTCbits.RC0 = 0;
  2942  0D14  1007               	bcf	7,0	;volatile
  2943                           
  2944                           ;main.c: 426:             PORTCbits.RC2 = 0;
  2945  0D15  1107               	bcf	7,2	;volatile
  2946                           
  2947                           ;main.c: 427:             PORTCbits.RC1 = 1;
  2948  0D16  1487               	bsf	7,1	;volatile
  2949                           
  2950                           ;main.c: 428:             break;
  2951  0D17  2D5E               	goto	l317
  2952  0D18                     l309:	
  2953                           ;main.c: 429:         case 2:
  2954                           
  2955                           
  2956                           ;main.c: 430:             PORTCbits.RC0 = 0;
  2957  0D18  1007               	bcf	7,0	;volatile
  2958                           
  2959                           ;main.c: 431:             PORTCbits.RC1 = 0;
  2960  0D19  1087               	bcf	7,1	;volatile
  2961                           
  2962                           ;main.c: 432:             PORTCbits.RC2 = 1;
  2963  0D1A  1507               	bsf	7,2	;volatile
  2964                           
  2965                           ;main.c: 433:             break;
  2966  0D1B  2D5E               	goto	l317
  2967  0D1C                     l3338:	
  2968  0D1C  0824               	movf	luciSemaforo@lux,w
  2969  0D1D  00A5               	movwf	??_luciSemaforo
  2970  0D1E  01A6               	clrf	??_luciSemaforo+1
  2971                           
  2972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2973                           ; Switch size 1, requested type "simple"
  2974                           ; Number of cases is 1, Range of values is 0 to 0
  2975                           ; switch strategies available:
  2976                           ; Name         Instructions Cycles
  2977                           ; simple_byte            4     3 (average)
  2978                           ; direct_byte           11     8 (fixed)
  2979                           ; jumptable            260     6 (fixed)
  2980                           ;	Chosen strategy is simple_byte
  2981  0D1F  0826               	movf	??_luciSemaforo+1,w
  2982  0D20  3A00               	xorlw	0	; case 0
  2983  0D21  1903               	skipnz
  2984  0D22  2D24               	goto	l3824
  2985  0D23  2D5E               	goto	l317
  2986  0D24                     l3824:	
  2987                           
  2988                           ; Switch size 1, requested type "simple"
  2989                           ; Number of cases is 3, Range of values is 0 to 2
  2990                           ; switch strategies available:
  2991                           ; Name         Instructions Cycles
  2992                           ; simple_byte           10     6 (average)
  2993                           ; direct_byte           17     8 (fixed)
  2994                           ; jumptable            260     6 (fixed)
  2995                           ;	Chosen strategy is simple_byte
  2996  0D24  0825               	movf	??_luciSemaforo,w
  2997  0D25  3A00               	xorlw	0	; case 0
  2998  0D26  1903               	skipnz
  2999  0D27  2D10               	goto	l306
  3000  0D28  3A01               	xorlw	1	; case 1
  3001  0D29  1903               	skipnz
  3002  0D2A  2D14               	goto	l308
  3003  0D2B  3A03               	xorlw	3	; case 2
  3004  0D2C  1903               	skipnz
  3005  0D2D  2D18               	goto	l309
  3006  0D2E  2D5E               	goto	l317
  3007  0D2F                     l313:	
  3008                           ;main.c: 439:         {;main.c: 440:         case 0:
  3009                           
  3010                           
  3011                           ;main.c: 441:             PORTBbits.RB1 = 0;
  3012  0D2F  1086               	bcf	6,1	;volatile
  3013                           
  3014                           ;main.c: 442:             PORTBbits.RB6 = 0;
  3015  0D30  1306               	bcf	6,6	;volatile
  3016                           
  3017                           ;main.c: 443:             PORTBbits.RB7 = 1;
  3018  0D31  1786               	bsf	6,7	;volatile
  3019                           
  3020                           ;main.c: 444:             break;
  3021  0D32  2D5E               	goto	l317
  3022  0D33                     l315:	
  3023                           ;main.c: 445:         case 1:
  3024                           
  3025                           
  3026                           ;main.c: 446:             PORTBbits.RB7 = 0;
  3027  0D33  1386               	bcf	6,7	;volatile
  3028                           
  3029                           ;main.c: 447:             PORTBbits.RB6 = 0;
  3030  0D34  1306               	bcf	6,6	;volatile
  3031                           
  3032                           ;main.c: 448:             PORTBbits.RB1 = 1;
  3033  0D35  1486               	bsf	6,1	;volatile
  3034                           
  3035                           ;main.c: 449:             break;
  3036  0D36  2D5E               	goto	l317
  3037  0D37                     l316:	
  3038                           ;main.c: 450:         case 2:
  3039                           
  3040                           
  3041                           ;main.c: 451:             PORTBbits.RB7 = 0;
  3042  0D37  1386               	bcf	6,7	;volatile
  3043                           
  3044                           ;main.c: 452:             PORTBbits.RB1 = 0;
  3045  0D38  1086               	bcf	6,1	;volatile
  3046                           
  3047                           ;main.c: 453:             PORTBbits.RB6 = 1;
  3048  0D39  1706               	bsf	6,6	;volatile
  3049                           
  3050                           ;main.c: 454:             break;
  3051  0D3A  2D5E               	goto	l317
  3052  0D3B                     l3342:	
  3053  0D3B  0824               	movf	luciSemaforo@lux,w
  3054  0D3C  00A5               	movwf	??_luciSemaforo
  3055  0D3D  01A6               	clrf	??_luciSemaforo+1
  3056                           
  3057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3058                           ; Switch size 1, requested type "simple"
  3059                           ; Number of cases is 1, Range of values is 0 to 0
  3060                           ; switch strategies available:
  3061                           ; Name         Instructions Cycles
  3062                           ; simple_byte            4     3 (average)
  3063                           ; direct_byte           11     8 (fixed)
  3064                           ; jumptable            260     6 (fixed)
  3065                           ;	Chosen strategy is simple_byte
  3066  0D3E  0826               	movf	??_luciSemaforo+1,w
  3067  0D3F  3A00               	xorlw	0	; case 0
  3068  0D40  1903               	skipnz
  3069  0D41  2D43               	goto	l3826
  3070  0D42  2D5E               	goto	l317
  3071  0D43                     l3826:	
  3072                           
  3073                           ; Switch size 1, requested type "simple"
  3074                           ; Number of cases is 3, Range of values is 0 to 2
  3075                           ; switch strategies available:
  3076                           ; Name         Instructions Cycles
  3077                           ; simple_byte           10     6 (average)
  3078                           ; direct_byte           17     8 (fixed)
  3079                           ; jumptable            260     6 (fixed)
  3080                           ;	Chosen strategy is simple_byte
  3081  0D43  0825               	movf	??_luciSemaforo,w
  3082  0D44  3A00               	xorlw	0	; case 0
  3083  0D45  1903               	skipnz
  3084  0D46  2D2F               	goto	l313
  3085  0D47  3A01               	xorlw	1	; case 1
  3086  0D48  1903               	skipnz
  3087  0D49  2D33               	goto	l315
  3088  0D4A  3A03               	xorlw	3	; case 2
  3089  0D4B  1903               	skipnz
  3090  0D4C  2D37               	goto	l316
  3091  0D4D  2D5E               	goto	l317
  3092  0D4E                     l3346:	
  3093  0D4E  0827               	movf	luciSemaforo@index,w
  3094  0D4F  00A5               	movwf	??_luciSemaforo
  3095  0D50  01A6               	clrf	??_luciSemaforo+1
  3096                           
  3097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3098                           ; Switch size 1, requested type "simple"
  3099                           ; Number of cases is 1, Range of values is 0 to 0
  3100                           ; switch strategies available:
  3101                           ; Name         Instructions Cycles
  3102                           ; simple_byte            4     3 (average)
  3103                           ; direct_byte           11     8 (fixed)
  3104                           ; jumptable            260     6 (fixed)
  3105                           ;	Chosen strategy is simple_byte
  3106  0D51  0826               	movf	??_luciSemaforo+1,w
  3107  0D52  3A00               	xorlw	0	; case 0
  3108  0D53  1903               	skipnz
  3109  0D54  2D56               	goto	l3828
  3110  0D55  2D5E               	goto	l317
  3111  0D56                     l3828:	
  3112                           
  3113                           ; Switch size 1, requested type "simple"
  3114                           ; Number of cases is 2, Range of values is 0 to 1
  3115                           ; switch strategies available:
  3116                           ; Name         Instructions Cycles
  3117                           ; simple_byte            7     4 (average)
  3118                           ; direct_byte           14     8 (fixed)
  3119                           ; jumptable            260     6 (fixed)
  3120                           ;	Chosen strategy is simple_byte
  3121  0D56  0825               	movf	??_luciSemaforo,w
  3122  0D57  3A00               	xorlw	0	; case 0
  3123  0D58  1903               	skipnz
  3124  0D59  2D1C               	goto	l3338
  3125  0D5A  3A01               	xorlw	1	; case 1
  3126  0D5B  1903               	skipnz
  3127  0D5C  2D3B               	goto	l3342
  3128  0D5D  2D5E               	goto	l317
  3129  0D5E                     l317:	
  3130  0D5E  0008               	return
  3131  0D5F                     __end_of_luciSemaforo:	
  3132                           
  3133                           	psect	text7
  3134  0B8A                     __ptext7:	
  3135 ;; *************** function _init_ADC *****************
  3136 ;; Defined at:
  3137 ;;		line 324 in file "main.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0
  3153 ;;      Temps:          0       1       0       0       0
  3154 ;;      Totals:         0       1       0       0       0
  3155 ;;Total ram usage:        1 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    3
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _init_ADC
  3167  0B8A                     _init_ADC:	
  3168  0B8A                     l3290:	
  3169                           ;incstack = 0
  3170                           ; Regs used in _init_ADC: [wreg+status,2]
  3171                           
  3172                           
  3173                           ;main.c: 326:     TRISA = 0xE3;
  3174  0B8A  30E3               	movlw	227
  3175  0B8B  1683               	bsf	3,5	;RP0=1, select bank1
  3176  0B8C  1303               	bcf	3,6	;RP1=0, select bank1
  3177  0B8D  0085               	movwf	5	;volatile
  3178  0B8E                     l3292:	
  3179                           
  3180                           ;main.c: 327:     ADCON0 = 0x00;
  3181  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0B90  019F               	clrf	31	;volatile
  3184  0B91                     l3294:	
  3185                           
  3186                           ;main.c: 328:     ADCON1 = 0x80;
  3187  0B91  3080               	movlw	128
  3188  0B92  1683               	bsf	3,5	;RP0=1, select bank1
  3189  0B93  1303               	bcf	3,6	;RP1=0, select bank1
  3190  0B94  009F               	movwf	31	;volatile
  3191  0B95                     l3296:	
  3192                           
  3193                           ;main.c: 329:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3194  0B95  3019               	movlw	25
  3195  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0B98  00A4               	movwf	??_init_ADC
  3198  0B99                     u3007:	
  3199  0B99  0BA4               	decfsz	??_init_ADC,f
  3200  0B9A  2B99               	goto	u3007
  3201  0B9B  2B9C               	nop2
  3202  0B9C                     l260:	
  3203  0B9C  0008               	return
  3204  0B9D                     __end_of_init_ADC:	
  3205                           
  3206                           	psect	text8
  3207  0F95                     __ptext8:	
  3208 ;; *************** function _UpdateTimes *****************
  3209 ;; Defined at:
  3210 ;;		line 4 in file "./CustomLib/TrafficLight.h"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  _semafori       1    wreg     PTR PTR struct .
  3213 ;;		 -> Semafori(2), 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  _semafori       1   14[BANK0 ] PTR PTR struct .
  3216 ;;		 -> Semafori(2), 
  3217 ;;  i               1   15[BANK0 ] unsigned char 
  3218 ;;  l               1   16[BANK0 ] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         0       0       0       0       0
  3229 ;;      Locals:         0       3       0       0       0
  3230 ;;      Temps:          0      10       0       0       0
  3231 ;;      Totals:         0      13       0       0       0
  3232 ;;Total ram usage:       13 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    3
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function _UpdateTimes
  3244  0F95                     _UpdateTimes:	
  3245                           
  3246                           ;incstack = 0
  3247                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3248                           ;UpdateTimes@_semafori stored from wreg
  3249  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0F97  00AE               	movwf	UpdateTimes@_semafori
  3252  0F98                     l3194:	
  3253                           
  3254                           ;./CustomLib/TrafficLight.h: 4: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 5: {;./CustomLib/TrafficLight.h: 7:     for (unsigned char l = 0; l < n_semafo
      +                          ri; l++)
  3255  0F98  01B0               	clrf	UpdateTimes@l
  3256  0F99                     l3200:	
  3257                           
  3258                           ;./CustomLib/TrafficLight.h: 8:     {;./CustomLib/TrafficLight.h: 9:         for(unsigne
      +                          d char i = 0; i < 3; i++)
  3259  0F99  01AF               	clrf	UpdateTimes@i
  3260  0F9A                     l3206:	
  3261                           
  3262                           ;./CustomLib/TrafficLight.h: 10:         {;./CustomLib/TrafficLight.h: 11:             i
      +                          f( (*(_semafori)[l]).times[i] != (*(_semafori)[l]).new_times[i] )
  3263  0F9A  0830               	movf	UpdateTimes@l,w
  3264  0F9B  072E               	addwf	UpdateTimes@_semafori,w
  3265  0F9C  00A4               	movwf	??_UpdateTimes
  3266  0F9D  0824               	movf	??_UpdateTimes,w
  3267  0F9E  0084               	movwf	4
  3268  0F9F  082F               	movf	UpdateTimes@i,w
  3269  0FA0  00A5               	movwf	??_UpdateTimes+1
  3270  0FA1  0725               	addwf	??_UpdateTimes+1,w
  3271  0FA2  1383               	bcf	3,7	;select IRP bank0
  3272  0FA3  0700               	addwf	0,w
  3273  0FA4  00A6               	movwf	??_UpdateTimes+2
  3274  0FA5  0826               	movf	??_UpdateTimes+2,w
  3275  0FA6  3E06               	addlw	6
  3276  0FA7  0084               	movwf	4
  3277  0FA8  0800               	movf	0,w
  3278  0FA9  00A7               	movwf	??_UpdateTimes+3
  3279  0FAA  0A84               	incf	4,f
  3280  0FAB  0800               	movf	0,w
  3281  0FAC  00A8               	movwf	??_UpdateTimes+4
  3282  0FAD  0830               	movf	UpdateTimes@l,w
  3283  0FAE  072E               	addwf	UpdateTimes@_semafori,w
  3284  0FAF  00A9               	movwf	??_UpdateTimes+5
  3285  0FB0  0829               	movf	??_UpdateTimes+5,w
  3286  0FB1  0084               	movwf	4
  3287  0FB2  082F               	movf	UpdateTimes@i,w
  3288  0FB3  00AA               	movwf	??_UpdateTimes+6
  3289  0FB4  072A               	addwf	??_UpdateTimes+6,w
  3290  0FB5  0700               	addwf	0,w
  3291  0FB6  00AB               	movwf	??_UpdateTimes+7
  3292  0FB7  082B               	movf	??_UpdateTimes+7,w
  3293  0FB8  0084               	movwf	4
  3294  0FB9  0800               	movf	0,w
  3295  0FBA  00AC               	movwf	??_UpdateTimes+8
  3296  0FBB  0A84               	incf	4,f
  3297  0FBC  0800               	movf	0,w
  3298  0FBD  00AD               	movwf	??_UpdateTimes+9
  3299  0FBE  0828               	movf	??_UpdateTimes+4,w
  3300  0FBF  062D               	xorwf	??_UpdateTimes+9,w
  3301  0FC0  1D03               	skipz
  3302  0FC1  2FC4               	goto	u2615
  3303  0FC2  0827               	movf	??_UpdateTimes+3,w
  3304  0FC3  062C               	xorwf	??_UpdateTimes+8,w
  3305  0FC4                     u2615:	
  3306  0FC4  1903               	skipnz
  3307  0FC5  2FC7               	goto	u2611
  3308  0FC6  2FC8               	goto	u2610
  3309  0FC7                     u2611:	
  3310  0FC7  2FEB               	goto	l3210
  3311  0FC8                     u2610:	
  3312  0FC8                     l3208:	
  3313                           
  3314                           ;./CustomLib/TrafficLight.h: 12:             {;./CustomLib/TrafficLight.h: 13:          
      +                                 (*(_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3315  0FC8  0830               	movf	UpdateTimes@l,w
  3316  0FC9  072E               	addwf	UpdateTimes@_semafori,w
  3317  0FCA  00A4               	movwf	??_UpdateTimes
  3318  0FCB  0824               	movf	??_UpdateTimes,w
  3319  0FCC  0084               	movwf	4
  3320  0FCD  082F               	movf	UpdateTimes@i,w
  3321  0FCE  00A5               	movwf	??_UpdateTimes+1
  3322  0FCF  0725               	addwf	??_UpdateTimes+1,w
  3323  0FD0  0700               	addwf	0,w
  3324  0FD1  00A6               	movwf	??_UpdateTimes+2
  3325  0FD2  0826               	movf	??_UpdateTimes+2,w
  3326  0FD3  3E06               	addlw	6
  3327  0FD4  0084               	movwf	4
  3328  0FD5  0800               	movf	0,w
  3329  0FD6  00A7               	movwf	??_UpdateTimes+3
  3330  0FD7  0A84               	incf	4,f
  3331  0FD8  0800               	movf	0,w
  3332  0FD9  00A8               	movwf	??_UpdateTimes+4
  3333  0FDA  0830               	movf	UpdateTimes@l,w
  3334  0FDB  072E               	addwf	UpdateTimes@_semafori,w
  3335  0FDC  00A9               	movwf	??_UpdateTimes+5
  3336  0FDD  0829               	movf	??_UpdateTimes+5,w
  3337  0FDE  0084               	movwf	4
  3338  0FDF  082F               	movf	UpdateTimes@i,w
  3339  0FE0  00AA               	movwf	??_UpdateTimes+6
  3340  0FE1  072A               	addwf	??_UpdateTimes+6,w
  3341  0FE2  0700               	addwf	0,w
  3342  0FE3  00AB               	movwf	??_UpdateTimes+7
  3343  0FE4  082B               	movf	??_UpdateTimes+7,w
  3344  0FE5  0084               	movwf	4
  3345  0FE6  0827               	movf	??_UpdateTimes+3,w
  3346  0FE7  0080               	movwf	0
  3347  0FE8  0A84               	incf	4,f
  3348  0FE9  0828               	movf	??_UpdateTimes+4,w
  3349  0FEA  0080               	movwf	0
  3350  0FEB                     l3210:	
  3351                           
  3352                           ;./CustomLib/TrafficLight.h: 15:         }
  3353  0FEB  3001               	movlw	1
  3354  0FEC  00A4               	movwf	??_UpdateTimes
  3355  0FED  0824               	movf	??_UpdateTimes,w
  3356  0FEE  07AF               	addwf	UpdateTimes@i,f
  3357  0FEF                     l3212:	
  3358  0FEF  3003               	movlw	3
  3359  0FF0  022F               	subwf	UpdateTimes@i,w
  3360  0FF1  1C03               	skipc
  3361  0FF2  2FF4               	goto	u2621
  3362  0FF3  2FF5               	goto	u2620
  3363  0FF4                     u2621:	
  3364  0FF4  2F9A               	goto	l3206
  3365  0FF5                     u2620:	
  3366  0FF5                     l3216:	
  3367                           
  3368                           ;./CustomLib/TrafficLight.h: 21:     }
  3369  0FF5  3001               	movlw	1
  3370  0FF6  00A4               	movwf	??_UpdateTimes
  3371  0FF7  0824               	movf	??_UpdateTimes,w
  3372  0FF8  07B0               	addwf	UpdateTimes@l,f
  3373  0FF9                     l3218:	
  3374  0FF9  3002               	movlw	2
  3375  0FFA  0230               	subwf	UpdateTimes@l,w
  3376  0FFB  1C03               	skipc
  3377  0FFC  2FFE               	goto	u2631
  3378  0FFD  2FFF               	goto	u2630
  3379  0FFE                     u2631:	
  3380  0FFE  2F99               	goto	l3200
  3381  0FFF                     u2630:	
  3382  0FFF                     l125:	
  3383  0FFF  0008               	return
  3384  1000                     __end_of_UpdateTimes:	
  3385                           
  3386                           	psect	text9
  3387  0C40                     __ptext9:	
  3388 ;; *************** function _UART_Init *****************
  3389 ;; Defined at:
  3390 ;;		line 343 in file "main.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  baudrate        2   19[BANK0 ] int 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0, pclath, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3404 ;;      Params:         0       2       0       0       0
  3405 ;;      Locals:         0       0       0       0       0
  3406 ;;      Temps:          0       4       0       0       0
  3407 ;;      Totals:         0       6       0       0       0
  3408 ;;Total ram usage:        6 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    4
  3411 ;; This function calls:
  3412 ;;		___aldiv
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function _UART_Init
  3420  0C40                     _UART_Init:	
  3421  0C40                     l3298:	
  3422                           ;incstack = 0
  3423                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3424                           
  3425                           
  3426                           ;main.c: 343: void UART_Init(int baudrate);main.c: 344: {;main.c: 345:     TRISCbits.TRI
      +                          SC6 = 0;
  3427  0C40  1683               	bsf	3,5	;RP0=1, select bank1
  3428  0C41  1303               	bcf	3,6	;RP1=0, select bank1
  3429  0C42  1307               	bcf	7,6	;volatile
  3430                           
  3431                           ;main.c: 346:     TXSTAbits.TXEN = 1;
  3432  0C43  1698               	bsf	24,5	;volatile
  3433                           
  3434                           ;main.c: 347:     RCSTAbits.SPEN = 1;
  3435  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0C46  1798               	bsf	24,7	;volatile
  3438                           
  3439                           ;main.c: 348:     RCSTAbits.CREN = 1;
  3440  0C47  1618               	bsf	24,4	;volatile
  3441  0C48                     l3300:	
  3442                           
  3443                           ;main.c: 349:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3444  0C48  0833               	movf	UART_Init@baudrate,w
  3445  0C49  00B5               	movwf	??_UART_Init
  3446  0C4A  0834               	movf	UART_Init@baudrate+1,w
  3447  0C4B  00B6               	movwf	??_UART_Init+1
  3448  0C4C  3000               	movlw	0
  3449  0C4D  1BB6               	btfsc	??_UART_Init+1,7
  3450  0C4E  30FF               	movlw	255
  3451  0C4F  00B7               	movwf	??_UART_Init+2
  3452  0C50  00B8               	movwf	??_UART_Init+3
  3453  0C51  3006               	movlw	6
  3454  0C52                     u2695:	
  3455  0C52  1003               	clrc
  3456  0C53  0DB5               	rlf	??_UART_Init,f
  3457  0C54  0DB6               	rlf	??_UART_Init+1,f
  3458  0C55  0DB7               	rlf	??_UART_Init+2,f
  3459  0C56  0DB8               	rlf	??_UART_Init+3,f
  3460  0C57                     u2690:	
  3461  0C57  3EFF               	addlw	-1
  3462  0C58  1D03               	skipz
  3463  0C59  2C52               	goto	u2695
  3464  0C5A  0838               	movf	??_UART_Init+3,w
  3465  0C5B  00A7               	movwf	___aldiv@divisor+3
  3466  0C5C  0837               	movf	??_UART_Init+2,w
  3467  0C5D  00A6               	movwf	___aldiv@divisor+2
  3468  0C5E  0836               	movf	??_UART_Init+1,w
  3469  0C5F  00A5               	movwf	___aldiv@divisor+1
  3470  0C60  0835               	movf	??_UART_Init,w
  3471  0C61  00A4               	movwf	___aldiv@divisor
  3472  0C62  3001               	movlw	1
  3473  0C63  00AB               	movwf	___aldiv@dividend+3
  3474  0C64  30E8               	movlw	232
  3475  0C65  00AA               	movwf	___aldiv@dividend+2
  3476  0C66  3048               	movlw	72
  3477  0C67  00A9               	movwf	___aldiv@dividend+1
  3478  0C68  3000               	movlw	0
  3479  0C69  00A8               	movwf	___aldiv@dividend
  3480  0C6A  120A  118A  2733  120A  158A  	fcall	___aldiv
  3481  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  3482  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  3483  0C71  0824               	movf	?___aldiv,w
  3484  0C72  3EFF               	addlw	255
  3485  0C73  1683               	bsf	3,5	;RP0=1, select bank1
  3486  0C74  1303               	bcf	3,6	;RP1=0, select bank1
  3487  0C75  0099               	movwf	25	;volatile
  3488  0C76                     l3302:	
  3489                           
  3490                           ;main.c: 350:     INTCONbits.GIE = 1;
  3491  0C76  178B               	bsf	11,7	;volatile
  3492  0C77                     l3304:	
  3493                           
  3494                           ;main.c: 351:     INTCONbits.PEIE = 1;
  3495  0C77  170B               	bsf	11,6	;volatile
  3496  0C78                     l3306:	
  3497                           
  3498                           ;main.c: 352:     PIE1bits.RCIE = 1;
  3499  0C78  168C               	bsf	12,5	;volatile
  3500  0C79                     l269:	
  3501  0C79  0008               	return
  3502  0C7A                     __end_of_UART_Init:	
  3503                           
  3504                           	psect	text10
  3505  0733                     __ptext10:	
  3506 ;; *************** function ___aldiv *****************
  3507 ;; Defined at:
  3508 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  divisor         4    4[BANK0 ] long 
  3511 ;;  dividend        4    8[BANK0 ] long 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  quotient        4   15[BANK0 ] long 
  3514 ;;  sign            1   14[BANK0 ] unsigned char 
  3515 ;;  counter         1   13[BANK0 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  4    4[BANK0 ] long 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       8       0       0       0
  3526 ;;      Locals:         0       6       0       0       0
  3527 ;;      Temps:          0       1       0       0       0
  3528 ;;      Totals:         0      15       0       0       0
  3529 ;;Total ram usage:       15 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    3
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_UART_Init
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           
  3540                           ;psect for function ___aldiv
  3541  0733                     ___aldiv:	
  3542  0733                     l3072:	
  3543                           ;incstack = 0
  3544                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3545                           
  3546  0733  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0734  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0735  01AE               	clrf	___aldiv@sign
  3549  0736                     l3074:	
  3550  0736  1FA7               	btfss	___aldiv@divisor+3,7
  3551  0737  2F39               	goto	u2321
  3552  0738  2F3A               	goto	u2320
  3553  0739                     u2321:	
  3554  0739  2F47               	goto	l499
  3555  073A                     u2320:	
  3556  073A                     l3076:	
  3557  073A  09A4               	comf	___aldiv@divisor,f
  3558  073B  09A5               	comf	___aldiv@divisor+1,f
  3559  073C  09A6               	comf	___aldiv@divisor+2,f
  3560  073D  09A7               	comf	___aldiv@divisor+3,f
  3561  073E  0AA4               	incf	___aldiv@divisor,f
  3562  073F  1903               	skipnz
  3563  0740  0AA5               	incf	___aldiv@divisor+1,f
  3564  0741  1903               	skipnz
  3565  0742  0AA6               	incf	___aldiv@divisor+2,f
  3566  0743  1903               	skipnz
  3567  0744  0AA7               	incf	___aldiv@divisor+3,f
  3568  0745  01AE               	clrf	___aldiv@sign
  3569  0746  0AAE               	incf	___aldiv@sign,f
  3570  0747                     l499:	
  3571  0747  1FAB               	btfss	___aldiv@dividend+3,7
  3572  0748  2F4A               	goto	u2331
  3573  0749  2F4B               	goto	u2330
  3574  074A                     u2331:	
  3575  074A  2F5A               	goto	l3082
  3576  074B                     u2330:	
  3577  074B                     l3078:	
  3578  074B  09A8               	comf	___aldiv@dividend,f
  3579  074C  09A9               	comf	___aldiv@dividend+1,f
  3580  074D  09AA               	comf	___aldiv@dividend+2,f
  3581  074E  09AB               	comf	___aldiv@dividend+3,f
  3582  074F  0AA8               	incf	___aldiv@dividend,f
  3583  0750  1903               	skipnz
  3584  0751  0AA9               	incf	___aldiv@dividend+1,f
  3585  0752  1903               	skipnz
  3586  0753  0AAA               	incf	___aldiv@dividend+2,f
  3587  0754  1903               	skipnz
  3588  0755  0AAB               	incf	___aldiv@dividend+3,f
  3589  0756                     l3080:	
  3590  0756  3001               	movlw	1
  3591  0757  00AC               	movwf	??___aldiv
  3592  0758  082C               	movf	??___aldiv,w
  3593  0759  06AE               	xorwf	___aldiv@sign,f
  3594  075A                     l3082:	
  3595  075A  3000               	movlw	0
  3596  075B  00B2               	movwf	___aldiv@quotient+3
  3597  075C  3000               	movlw	0
  3598  075D  00B1               	movwf	___aldiv@quotient+2
  3599  075E  3000               	movlw	0
  3600  075F  00B0               	movwf	___aldiv@quotient+1
  3601  0760  3000               	movlw	0
  3602  0761  00AF               	movwf	___aldiv@quotient
  3603  0762                     l3084:	
  3604  0762  0827               	movf	___aldiv@divisor+3,w
  3605  0763  0426               	iorwf	___aldiv@divisor+2,w
  3606  0764  0425               	iorwf	___aldiv@divisor+1,w
  3607  0765  0424               	iorwf	___aldiv@divisor,w
  3608  0766  1903               	skipnz
  3609  0767  2F69               	goto	u2341
  3610  0768  2F6A               	goto	u2340
  3611  0769                     u2341:	
  3612  0769  2FB7               	goto	l3104
  3613  076A                     u2340:	
  3614  076A                     l3086:	
  3615  076A  01AD               	clrf	___aldiv@counter
  3616  076B  0AAD               	incf	___aldiv@counter,f
  3617  076C  2F7A               	goto	l3090
  3618  076D                     l3088:	
  3619  076D  3001               	movlw	1
  3620  076E  00AC               	movwf	??___aldiv
  3621  076F                     u2355:	
  3622  076F  1003               	clrc
  3623  0770  0DA4               	rlf	___aldiv@divisor,f
  3624  0771  0DA5               	rlf	___aldiv@divisor+1,f
  3625  0772  0DA6               	rlf	___aldiv@divisor+2,f
  3626  0773  0DA7               	rlf	___aldiv@divisor+3,f
  3627  0774  0BAC               	decfsz	??___aldiv,f
  3628  0775  2F6F               	goto	u2355
  3629  0776  3001               	movlw	1
  3630  0777  00AC               	movwf	??___aldiv
  3631  0778  082C               	movf	??___aldiv,w
  3632  0779  07AD               	addwf	___aldiv@counter,f
  3633  077A                     l3090:	
  3634  077A  1FA7               	btfss	___aldiv@divisor+3,7
  3635  077B  2F7D               	goto	u2361
  3636  077C  2F7E               	goto	u2360
  3637  077D                     u2361:	
  3638  077D  2F6D               	goto	l3088
  3639  077E                     u2360:	
  3640  077E                     l3092:	
  3641  077E  3001               	movlw	1
  3642  077F  00AC               	movwf	??___aldiv
  3643  0780                     u2375:	
  3644  0780  1003               	clrc
  3645  0781  0DAF               	rlf	___aldiv@quotient,f
  3646  0782  0DB0               	rlf	___aldiv@quotient+1,f
  3647  0783  0DB1               	rlf	___aldiv@quotient+2,f
  3648  0784  0DB2               	rlf	___aldiv@quotient+3,f
  3649  0785  0BAC               	decfsz	??___aldiv,f
  3650  0786  2F80               	goto	u2375
  3651  0787                     l3094:	
  3652  0787  0827               	movf	___aldiv@divisor+3,w
  3653  0788  022B               	subwf	___aldiv@dividend+3,w
  3654  0789  1D03               	skipz
  3655  078A  2F95               	goto	u2385
  3656  078B  0826               	movf	___aldiv@divisor+2,w
  3657  078C  022A               	subwf	___aldiv@dividend+2,w
  3658  078D  1D03               	skipz
  3659  078E  2F95               	goto	u2385
  3660  078F  0825               	movf	___aldiv@divisor+1,w
  3661  0790  0229               	subwf	___aldiv@dividend+1,w
  3662  0791  1D03               	skipz
  3663  0792  2F95               	goto	u2385
  3664  0793  0824               	movf	___aldiv@divisor,w
  3665  0794  0228               	subwf	___aldiv@dividend,w
  3666  0795                     u2385:	
  3667  0795  1C03               	skipc
  3668  0796  2F98               	goto	u2381
  3669  0797  2F99               	goto	u2380
  3670  0798                     u2381:	
  3671  0798  2FA8               	goto	l3100
  3672  0799                     u2380:	
  3673  0799                     l3096:	
  3674  0799  0824               	movf	___aldiv@divisor,w
  3675  079A  02A8               	subwf	___aldiv@dividend,f
  3676  079B  0825               	movf	___aldiv@divisor+1,w
  3677  079C  1C03               	skipc
  3678  079D  0F25               	incfsz	___aldiv@divisor+1,w
  3679  079E  02A9               	subwf	___aldiv@dividend+1,f
  3680  079F  0826               	movf	___aldiv@divisor+2,w
  3681  07A0  1C03               	skipc
  3682  07A1  0F26               	incfsz	___aldiv@divisor+2,w
  3683  07A2  02AA               	subwf	___aldiv@dividend+2,f
  3684  07A3  0827               	movf	___aldiv@divisor+3,w
  3685  07A4  1C03               	skipc
  3686  07A5  0F27               	incfsz	___aldiv@divisor+3,w
  3687  07A6  02AB               	subwf	___aldiv@dividend+3,f
  3688  07A7                     l3098:	
  3689  07A7  142F               	bsf	___aldiv@quotient,0
  3690  07A8                     l3100:	
  3691  07A8  3001               	movlw	1
  3692  07A9                     u2395:	
  3693  07A9  1003               	clrc
  3694  07AA  0CA7               	rrf	___aldiv@divisor+3,f
  3695  07AB  0CA6               	rrf	___aldiv@divisor+2,f
  3696  07AC  0CA5               	rrf	___aldiv@divisor+1,f
  3697  07AD  0CA4               	rrf	___aldiv@divisor,f
  3698  07AE  3EFF               	addlw	-1
  3699  07AF  1D03               	skipz
  3700  07B0  2FA9               	goto	u2395
  3701  07B1                     l3102:	
  3702  07B1  3001               	movlw	1
  3703  07B2  02AD               	subwf	___aldiv@counter,f
  3704  07B3  1D03               	btfss	3,2
  3705  07B4  2FB6               	goto	u2401
  3706  07B5  2FB7               	goto	u2400
  3707  07B6                     u2401:	
  3708  07B6  2F7E               	goto	l3092
  3709  07B7                     u2400:	
  3710  07B7                     l3104:	
  3711  07B7  082E               	movf	___aldiv@sign,w
  3712  07B8  1903               	btfsc	3,2
  3713  07B9  2FBB               	goto	u2411
  3714  07BA  2FBC               	goto	u2410
  3715  07BB                     u2411:	
  3716  07BB  2FC7               	goto	l3108
  3717  07BC                     u2410:	
  3718  07BC                     l3106:	
  3719  07BC  09AF               	comf	___aldiv@quotient,f
  3720  07BD  09B0               	comf	___aldiv@quotient+1,f
  3721  07BE  09B1               	comf	___aldiv@quotient+2,f
  3722  07BF  09B2               	comf	___aldiv@quotient+3,f
  3723  07C0  0AAF               	incf	___aldiv@quotient,f
  3724  07C1  1903               	skipnz
  3725  07C2  0AB0               	incf	___aldiv@quotient+1,f
  3726  07C3  1903               	skipnz
  3727  07C4  0AB1               	incf	___aldiv@quotient+2,f
  3728  07C5  1903               	skipnz
  3729  07C6  0AB2               	incf	___aldiv@quotient+3,f
  3730  07C7                     l3108:	
  3731  07C7  0832               	movf	___aldiv@quotient+3,w
  3732  07C8  00A7               	movwf	?___aldiv+3
  3733  07C9  0831               	movf	___aldiv@quotient+2,w
  3734  07CA  00A6               	movwf	?___aldiv+2
  3735  07CB  0830               	movf	___aldiv@quotient+1,w
  3736  07CC  00A5               	movwf	?___aldiv+1
  3737  07CD  082F               	movf	___aldiv@quotient,w
  3738  07CE  00A4               	movwf	?___aldiv
  3739  07CF                     l509:	
  3740  07CF  0008               	return
  3741  07D0                     __end_of___aldiv:	
  3742                           
  3743                           	psect	text11
  3744  0686                     __ptext11:	
  3745 ;; *************** function _ShowDigitsOnDisplay *****************
  3746 ;; Defined at:
  3747 ;;		line 485 in file "main.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  display_inde    1   13[BANK0 ] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         0       1       0       0       0
  3763 ;;      Temps:          0       2       0       0       0
  3764 ;;      Totals:         0       3       0       0       0
  3765 ;;Total ram usage:        3 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    4
  3768 ;; This function calls:
  3769 ;;		_SetDisplay
  3770 ;;		___awmod
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function _ShowDigitsOnDisplay
  3778  0686                     _ShowDigitsOnDisplay:	
  3779  0686                     l3366:	
  3780                           ;incstack = 0
  3781                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3782                           
  3783                           
  3784                           ;main.c: 487:     for (unsigned char display_index = 0; display_index < n_semafori; disp
      +                          lay_index++)
  3785  0686  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0687  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0688  01AD               	clrf	ShowDigitsOnDisplay@display_index
  3788  0689  2EFD               	goto	l3386
  3789  068A                     l3372:	
  3790                           
  3791                           ;main.c: 492:             if ((*DigitsArr[display_index]).centinaia > 0)
  3792  068A  082D               	movf	ShowDigitsOnDisplay@display_index,w
  3793  068B  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  3794  068C  0084               	movwf	4
  3795  068D  1383               	bcf	3,7	;select IRP bank0
  3796  068E  0800               	movf	0,w
  3797  068F  0084               	movwf	4
  3798  0690  0800               	movf	0,w
  3799  0691  1903               	btfsc	3,2
  3800  0692  2E94               	goto	u2731
  3801  0693  2E95               	goto	u2730
  3802  0694                     u2731:	
  3803  0694  2F10               	goto	l3388
  3804  0695                     u2730:	
  3805  0695                     l3374:	
  3806                           
  3807                           ;main.c: 493:             {;main.c: 494:                 SetDisplay(display_index, 1, 0,
      +                           0, display[(*DigitsArr[display_index]).centinaia]);
  3808  0695  01A4               	clrf	SetDisplay@d1
  3809  0696  0AA4               	incf	SetDisplay@d1,f
  3810  0697  01A5               	clrf	SetDisplay@d2
  3811  0698  01A6               	clrf	SetDisplay@d3
  3812  0699  082D               	movf	ShowDigitsOnDisplay@display_index,w
  3813  069A  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  3814  069B  0084               	movwf	4
  3815  069C  0800               	movf	0,w
  3816  069D  0084               	movwf	4
  3817  069E  0800               	movf	0,w
  3818  069F  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3819  06A0  0084               	movwf	4
  3820  06A1  120A  158A  2000  120A  118A  	fcall	stringdir
  3821  06A6  00AB               	movwf	??_ShowDigitsOnDisplay
  3822  06A7  082B               	movf	??_ShowDigitsOnDisplay,w
  3823  06A8  00A7               	movwf	SetDisplay@value
  3824  06A9  082D               	movf	ShowDigitsOnDisplay@display_index,w
  3825  06AA  120A  158A  255F  120A  118A  	fcall	_SetDisplay
  3826  06AF  2F10               	goto	l3388
  3827  06B0                     l3376:	
  3828                           
  3829                           ;main.c: 498:             if ((*DigitsArr[display_index]).decine > 0 || (*DigitsArr[disp
      +                          lay_index]).centinaia > 0)
  3830  06B0  082D               	movf	ShowDigitsOnDisplay@display_index,w
  3831  06B1  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  3832  06B2  0084               	movwf	4
  3833  06B3  1383               	bcf	3,7	;select IRP bank0
  3834  06B4  0A00               	incf	0,w
  3835  06B5  0084               	movwf	4
  3836  06B6  0800               	movf	0,w
  3837  06B7  1D03               	btfss	3,2
  3838  06B8  2EBA               	goto	u2741
  3839  06B9  2EBB               	goto	u2740
  3840  06BA                     u2741:	
  3841  06BA  2EC5               	goto	l3380
  3842  06BB                     u2740:	
  3843  06BB                     l3378:	
  3844  06BB  082D               	movf	ShowDigitsOnDisplay@display_index,w
  3845  06BC  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  3846  06BD  0084               	movwf	4
  3847  06BE  0800               	movf	0,w
  3848  06BF  0084               	movwf	4
  3849  06C0  0800               	movf	0,w
  3850  06C1  1903               	btfsc	3,2
  3851  06C2  2EC4               	goto	u2751
  3852  06C3  2EC5               	goto	u2750
  3853  06C4                     u2751:	
  3854  06C4  2F10               	goto	l3388
  3855  06C5                     u2750:	
  3856  06C5                     l3380:	
  3857                           
  3858                           ;main.c: 499:             {;main.c: 500:                 SetDisplay(display_index, 0, 1,
      +                           0, display[(*DigitsArr[display_index]).decine]);
  3859  06C5  01A4               	clrf	SetDisplay@d1
  3860  06C6  01A5               	clrf	SetDisplay@d2
  3861  06C7  0AA5               	incf	SetDisplay@d2,f
  3862  06C8  01A6               	clrf	SetDisplay@d3
  3863  06C9  082D               	movf	ShowDigitsOnDisplay@display_index,w
  3864  06CA  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  3865  06CB  0084               	movwf	4
  3866  06CC  0A00               	incf	0,w
  3867  06CD  0084               	movwf	4
  3868  06CE  0800               	movf	0,w
  3869  06CF  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3870  06D0  0084               	movwf	4
  3871  06D1  120A  158A  2000  120A  118A  	fcall	stringdir
  3872  06D6  00AB               	movwf	??_ShowDigitsOnDisplay
  3873  06D7  082B               	movf	??_ShowDigitsOnDisplay,w
  3874  06D8  00A7               	movwf	SetDisplay@value
  3875  06D9  082D               	movf	ShowDigitsOnDisplay@display_index,w
  3876  06DA  120A  158A  255F  120A  118A  	fcall	_SetDisplay
  3877  06DF  2F10               	goto	l3388
  3878  06E0                     l3382:	
  3879                           
  3880                           ;main.c: 504:             SetDisplay(display_index, 0, 0, 1, display[(*DigitsArr[display
      +                          _index]).unita]);
  3881  06E0  01A4               	clrf	SetDisplay@d1
  3882  06E1  01A5               	clrf	SetDisplay@d2
  3883  06E2  01A6               	clrf	SetDisplay@d3
  3884  06E3  0AA6               	incf	SetDisplay@d3,f
  3885  06E4  082D               	movf	ShowDigitsOnDisplay@display_index,w
  3886  06E5  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  3887  06E6  0084               	movwf	4
  3888  06E7  1383               	bcf	3,7	;select IRP bank0
  3889  06E8  0800               	movf	0,w
  3890  06E9  3E02               	addlw	2
  3891  06EA  0084               	movwf	4
  3892  06EB  0800               	movf	0,w
  3893  06EC  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3894  06ED  0084               	movwf	4
  3895  06EE  120A  158A  2000  120A  118A  	fcall	stringdir
  3896  06F3  00AB               	movwf	??_ShowDigitsOnDisplay
  3897  06F4  082B               	movf	??_ShowDigitsOnDisplay,w
  3898  06F5  00A7               	movwf	SetDisplay@value
  3899  06F6  082D               	movf	ShowDigitsOnDisplay@display_index,w
  3900  06F7  120A  158A  255F  120A  118A  	fcall	_SetDisplay
  3901                           
  3902                           ;main.c: 505:             break;
  3903  06FC  2F10               	goto	l3388
  3904  06FD                     l3386:	
  3905  06FD  0855               	movf	_disp,w
  3906  06FE  00AB               	movwf	??_ShowDigitsOnDisplay
  3907  06FF  01AC               	clrf	??_ShowDigitsOnDisplay+1
  3908                           
  3909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3910                           ; Switch size 1, requested type "simple"
  3911                           ; Number of cases is 1, Range of values is 0 to 0
  3912                           ; switch strategies available:
  3913                           ; Name         Instructions Cycles
  3914                           ; simple_byte            4     3 (average)
  3915                           ; direct_byte           11     8 (fixed)
  3916                           ; jumptable            260     6 (fixed)
  3917                           ;	Chosen strategy is simple_byte
  3918  0700  082C               	movf	??_ShowDigitsOnDisplay+1,w
  3919  0701  3A00               	xorlw	0	; case 0
  3920  0702  1903               	skipnz
  3921  0703  2F05               	goto	l3830
  3922  0704  2F10               	goto	l3388
  3923  0705                     l3830:	
  3924                           
  3925                           ; Switch size 1, requested type "simple"
  3926                           ; Number of cases is 3, Range of values is 0 to 2
  3927                           ; switch strategies available:
  3928                           ; Name         Instructions Cycles
  3929                           ; simple_byte           10     6 (average)
  3930                           ; direct_byte           17     8 (fixed)
  3931                           ; jumptable            260     6 (fixed)
  3932                           ;	Chosen strategy is simple_byte
  3933  0705  082B               	movf	??_ShowDigitsOnDisplay,w
  3934  0706  3A00               	xorlw	0	; case 0
  3935  0707  1903               	skipnz
  3936  0708  2E8A               	goto	l3372
  3937  0709  3A01               	xorlw	1	; case 1
  3938  070A  1903               	skipnz
  3939  070B  2EB0               	goto	l3376
  3940  070C  3A03               	xorlw	3	; case 2
  3941  070D  1903               	skipnz
  3942  070E  2EE0               	goto	l3382
  3943  070F  2F10               	goto	l3388
  3944  0710                     l3388:	
  3945                           
  3946                           ;main.c: 507:     }
  3947  0710  3001               	movlw	1
  3948  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0712  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0713  00AB               	movwf	??_ShowDigitsOnDisplay
  3951  0714  082B               	movf	??_ShowDigitsOnDisplay,w
  3952  0715  07AD               	addwf	ShowDigitsOnDisplay@display_index,f
  3953  0716                     l3390:	
  3954  0716  3002               	movlw	2
  3955  0717  022D               	subwf	ShowDigitsOnDisplay@display_index,w
  3956  0718  1C03               	skipc
  3957  0719  2F1B               	goto	u2761
  3958  071A  2F1C               	goto	u2760
  3959  071B                     u2761:	
  3960  071B  2EFD               	goto	l3386
  3961  071C                     u2760:	
  3962  071C                     l3392:	
  3963                           
  3964                           ;main.c: 508:     disp = (disp + 1) % 3;
  3965  071C  3003               	movlw	3
  3966  071D  00A4               	movwf	___awmod@divisor
  3967  071E  3000               	movlw	0
  3968  071F  00A5               	movwf	___awmod@divisor+1
  3969  0720  0855               	movf	_disp,w
  3970  0721  3E01               	addlw	1
  3971  0722  00A6               	movwf	___awmod@dividend
  3972  0723  3000               	movlw	0
  3973  0724  1803               	skipnc
  3974  0725  3001               	movlw	1
  3975  0726  00A7               	movwf	___awmod@dividend+1
  3976  0727  120A  158A  260C  120A  118A  	fcall	___awmod
  3977  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3978  072D  1303               	bcf	3,6	;RP1=0, select bank0
  3979  072E  0824               	movf	?___awmod,w
  3980  072F  00AB               	movwf	??_ShowDigitsOnDisplay
  3981  0730  082B               	movf	??_ShowDigitsOnDisplay,w
  3982  0731  00D5               	movwf	_disp
  3983  0732                     l338:	
  3984  0732  0008               	return
  3985  0733                     __end_of_ShowDigitsOnDisplay:	
  3986                           
  3987                           	psect	text12
  3988  0D5F                     __ptext12:	
  3989 ;; *************** function _SetDisplay *****************
  3990 ;; Defined at:
  3991 ;;		line 460 in file "main.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  display_inde    1    wreg     unsigned char 
  3994 ;;  d1              1    4[BANK0 ] unsigned char 
  3995 ;;  d2              1    5[BANK0 ] unsigned char 
  3996 ;;  d3              1    6[BANK0 ] unsigned char 
  3997 ;;  value           1    7[BANK0 ] unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  display_inde    1   10[BANK0 ] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       4       0       0       0
  4010 ;;      Locals:         0       1       0       0       0
  4011 ;;      Temps:          0       2       0       0       0
  4012 ;;      Totals:         0       7       0       0       0
  4013 ;;Total ram usage:        7 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    3
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_ShowDigitsOnDisplay
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           
  4024                           ;psect for function _SetDisplay
  4025  0D5F                     _SetDisplay:	
  4026                           
  4027                           ;incstack = 0
  4028                           ; Regs used in _SetDisplay: [wreg-fsr0h+status,2+status,0]
  4029                           ;SetDisplay@display_index stored from wreg
  4030  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  4031  0D60  1303               	bcf	3,6	;RP1=0, select bank0
  4032  0D61  00AA               	movwf	SetDisplay@display_index
  4033  0D62                     l3026:	
  4034                           
  4035                           ;main.c: 460: void SetDisplay(unsigned char display_index, char d1, char d2, char d3, ch
      +                          ar value);main.c: 461: {;main.c: 462:     switch (display_index)
  4036  0D62  2DA3               	goto	l3036
  4037  0D63                     l3028:	
  4038                           
  4039                           ;main.c: 465:         PORTAbits.RA2 = d1;
  4040  0D63  0C24               	rrf	SetDisplay@d1,w
  4041  0D64  1C03               	skipc
  4042  0D65  1105               	bcf	5,2	;volatile
  4043  0D66  1803               	skipnc
  4044  0D67  1505               	bsf	5,2	;volatile
  4045                           
  4046                           ;main.c: 466:         PORTAbits.RA3 = d2;
  4047  0D68  0C25               	rrf	SetDisplay@d2,w
  4048  0D69  1C03               	skipc
  4049  0D6A  1185               	bcf	5,3	;volatile
  4050  0D6B  1803               	skipnc
  4051  0D6C  1585               	bsf	5,3	;volatile
  4052                           
  4053                           ;main.c: 467:         PORTAbits.RA4 = d3;
  4054  0D6D  0C26               	rrf	SetDisplay@d3,w
  4055  0D6E  1C03               	skipc
  4056  0D6F  1205               	bcf	5,4	;volatile
  4057  0D70  1803               	skipnc
  4058  0D71  1605               	bsf	5,4	;volatile
  4059                           
  4060                           ;main.c: 468:         PORTBbits.RB0 = d1;
  4061  0D72  0C24               	rrf	SetDisplay@d1,w
  4062  0D73  1C03               	skipc
  4063  0D74  1006               	bcf	6,0	;volatile
  4064  0D75  1803               	skipnc
  4065  0D76  1406               	bsf	6,0	;volatile
  4066                           
  4067                           ;main.c: 469:         PORTBbits.RB0 = d2;
  4068  0D77  0C25               	rrf	SetDisplay@d2,w
  4069  0D78  1C03               	skipc
  4070  0D79  1006               	bcf	6,0	;volatile
  4071  0D7A  1803               	skipnc
  4072  0D7B  1406               	bsf	6,0	;volatile
  4073                           
  4074                           ;main.c: 470:         PORTBbits.RB0 = d3;
  4075  0D7C  0C26               	rrf	SetDisplay@d3,w
  4076  0D7D  1C03               	skipc
  4077  0D7E  1006               	bcf	6,0	;volatile
  4078  0D7F  1803               	skipnc
  4079  0D80  1406               	bsf	6,0	;volatile
  4080  0D81                     l3030:	
  4081                           
  4082                           ;main.c: 471:         PORTD = value;
  4083  0D81  0827               	movf	SetDisplay@value,w
  4084  0D82  0088               	movwf	8	;volatile
  4085                           
  4086                           ;main.c: 472:         break;
  4087  0D83  2DB3               	goto	l324
  4088  0D84                     l3032:	
  4089                           
  4090                           ;main.c: 474:         PORTAbits.RA5 = d1;
  4091  0D84  0C24               	rrf	SetDisplay@d1,w
  4092  0D85  1C03               	skipc
  4093  0D86  1285               	bcf	5,5	;volatile
  4094  0D87  1803               	skipnc
  4095  0D88  1685               	bsf	5,5	;volatile
  4096                           
  4097                           ;main.c: 475:         PORTBbits.RB0 = d2;
  4098  0D89  0C25               	rrf	SetDisplay@d2,w
  4099  0D8A  1C03               	skipc
  4100  0D8B  1006               	bcf	6,0	;volatile
  4101  0D8C  1803               	skipnc
  4102  0D8D  1406               	bsf	6,0	;volatile
  4103                           
  4104                           ;main.c: 476:         PORTBbits.RB0 = d3;
  4105  0D8E  0C26               	rrf	SetDisplay@d3,w
  4106  0D8F  1C03               	skipc
  4107  0D90  1006               	bcf	6,0	;volatile
  4108  0D91  1803               	skipnc
  4109  0D92  1406               	bsf	6,0	;volatile
  4110                           
  4111                           ;main.c: 477:         PORTBbits.RB0 = d1;
  4112  0D93  0C24               	rrf	SetDisplay@d1,w
  4113  0D94  1C03               	skipc
  4114  0D95  1006               	bcf	6,0	;volatile
  4115  0D96  1803               	skipnc
  4116  0D97  1406               	bsf	6,0	;volatile
  4117                           
  4118                           ;main.c: 478:         PORTBbits.RB0 = d2;
  4119  0D98  0C25               	rrf	SetDisplay@d2,w
  4120  0D99  1C03               	skipc
  4121  0D9A  1006               	bcf	6,0	;volatile
  4122  0D9B  1803               	skipnc
  4123  0D9C  1406               	bsf	6,0	;volatile
  4124                           
  4125                           ;main.c: 479:         PORTBbits.RB0 = d3;
  4126  0D9D  0C26               	rrf	SetDisplay@d3,w
  4127  0D9E  1C03               	skipc
  4128  0D9F  1006               	bcf	6,0	;volatile
  4129  0DA0  1803               	skipnc
  4130  0DA1  1406               	bsf	6,0	;volatile
  4131                           
  4132                           ;main.c: 481:         break;
  4133  0DA2  2DB3               	goto	l324
  4134  0DA3                     l3036:	
  4135  0DA3  082A               	movf	SetDisplay@display_index,w
  4136  0DA4  00A8               	movwf	??_SetDisplay
  4137  0DA5  01A9               	clrf	??_SetDisplay+1
  4138                           
  4139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4140                           ; Switch size 1, requested type "simple"
  4141                           ; Number of cases is 1, Range of values is 0 to 0
  4142                           ; switch strategies available:
  4143                           ; Name         Instructions Cycles
  4144                           ; simple_byte            4     3 (average)
  4145                           ; direct_byte           11     8 (fixed)
  4146                           ; jumptable            260     6 (fixed)
  4147                           ;	Chosen strategy is simple_byte
  4148  0DA6  0829               	movf	??_SetDisplay+1,w
  4149  0DA7  3A00               	xorlw	0	; case 0
  4150  0DA8  1903               	skipnz
  4151  0DA9  2DAB               	goto	l3832
  4152  0DAA  2DB3               	goto	l324
  4153  0DAB                     l3832:	
  4154                           
  4155                           ; Switch size 1, requested type "simple"
  4156                           ; Number of cases is 2, Range of values is 0 to 1
  4157                           ; switch strategies available:
  4158                           ; Name         Instructions Cycles
  4159                           ; simple_byte            7     4 (average)
  4160                           ; direct_byte           14     8 (fixed)
  4161                           ; jumptable            260     6 (fixed)
  4162                           ;	Chosen strategy is simple_byte
  4163  0DAB  0828               	movf	??_SetDisplay,w
  4164  0DAC  3A00               	xorlw	0	; case 0
  4165  0DAD  1903               	skipnz
  4166  0DAE  2D63               	goto	l3028
  4167  0DAF  3A01               	xorlw	1	; case 1
  4168  0DB0  1903               	skipnz
  4169  0DB1  2D84               	goto	l3032
  4170  0DB2  2DB3               	goto	l324
  4171  0DB3                     l324:	
  4172  0DB3  0008               	return
  4173  0DB4                     __end_of_SetDisplay:	
  4174                           
  4175                           	psect	text13
  4176  0E67                     __ptext13:	
  4177 ;; *************** function _SetReceivedTimes *****************
  4178 ;; Defined at:
  4179 ;;		line 90 in file "./CustomLib/TrafficLight.h"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4182 ;;		 -> dataFromGateway(15), 
  4183 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4184 ;;		 -> Semafori(2), 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  _dataFromGat    1   19[BANK0 ] PTR unsigned char 
  4187 ;;		 -> dataFromGateway(15), 
  4188 ;;  index           1   20[BANK0 ] unsigned char 
  4189 ;;  colorId         1   18[BANK0 ] unsigned char 
  4190 ;;  semaforoId      1   17[BANK0 ] unsigned char 
  4191 ;;  i               1   21[BANK0 ] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4201 ;;      Params:         0       1       0       0       0
  4202 ;;      Locals:         0       5       0       0       0
  4203 ;;      Temps:          0       4       0       0       0
  4204 ;;      Totals:         0      10       0       0       0
  4205 ;;Total ram usage:       10 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    4
  4208 ;; This function calls:
  4209 ;;		_GetTime
  4210 ;;		___bmul
  4211 ;; This function is called by:
  4212 ;;		_main
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           
  4217                           ;psect for function _SetReceivedTimes
  4218  0E67                     _SetReceivedTimes:	
  4219                           
  4220                           ;incstack = 0
  4221                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4222                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4223  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0E68  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0E69  00B3               	movwf	SetReceivedTimes@_dataFromGateway
  4226  0E6A                     l3256:	
  4227                           
  4228                           ;./CustomLib/TrafficLight.h: 90: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 91: {;./CustomLib/TrafficLight.h: 92:   
      +                            for (unsigned char i = 0; i < 3; i++)
  4229  0E6A  01B5               	clrf	SetReceivedTimes@i
  4230  0E6B                     l3258:	
  4231  0E6B  3003               	movlw	3
  4232  0E6C  0235               	subwf	SetReceivedTimes@i,w
  4233  0E6D  1C03               	skipc
  4234  0E6E  2E70               	goto	u2661
  4235  0E6F  2E71               	goto	u2660
  4236  0E70                     u2661:	
  4237  0E70  2E72               	goto	l3262
  4238  0E71                     u2660:	
  4239  0E71  2EC6               	goto	l152
  4240  0E72                     l3262:	
  4241                           
  4242                           ;./CustomLib/TrafficLight.h: 93:     {;./CustomLib/TrafficLight.h: 94:         unsigned 
      +                          char index = i * 5;
  4243  0E72  3005               	movlw	5
  4244  0E73  00AD               	movwf	??_SetReceivedTimes
  4245  0E74  082D               	movf	??_SetReceivedTimes,w
  4246  0E75  00A4               	movwf	___bmul@multiplicand
  4247  0E76  0835               	movf	SetReceivedTimes@i,w
  4248  0E77  120A  158A  239D  120A  158A  	fcall	___bmul
  4249  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  4250  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  4251  0E7E  00AE               	movwf	??_SetReceivedTimes+1
  4252  0E7F  082E               	movf	??_SetReceivedTimes+1,w
  4253  0E80  00B4               	movwf	SetReceivedTimes@index
  4254  0E81                     l3264:	
  4255                           
  4256                           ;./CustomLib/TrafficLight.h: 95:         unsigned char semaforoId = (_dataFromGateway[in
      +                          dex] >> 1) & 0x0F;
  4257  0E81  0834               	movf	SetReceivedTimes@index,w
  4258  0E82  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4259  0E83  00AD               	movwf	??_SetReceivedTimes
  4260  0E84  082D               	movf	??_SetReceivedTimes,w
  4261  0E85  0084               	movwf	4
  4262  0E86  1383               	bcf	3,7	;select IRP bank0
  4263  0E87  0800               	movf	0,w
  4264  0E88  00AE               	movwf	??_SetReceivedTimes+1
  4265  0E89  1003               	clrc
  4266  0E8A  0C2E               	rrf	??_SetReceivedTimes+1,w
  4267  0E8B  390F               	andlw	15
  4268  0E8C  00AF               	movwf	??_SetReceivedTimes+2
  4269  0E8D  082F               	movf	??_SetReceivedTimes+2,w
  4270  0E8E  00B1               	movwf	SetReceivedTimes@semaforoId
  4271  0E8F                     l3266:	
  4272                           
  4273                           ;./CustomLib/TrafficLight.h: 96:         unsigned char colorId = ((_dataFromGateway[inde
      +                          x] >> 5) & 0x03) - 1;
  4274  0E8F  0834               	movf	SetReceivedTimes@index,w
  4275  0E90  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4276  0E91  00AD               	movwf	??_SetReceivedTimes
  4277  0E92  082D               	movf	??_SetReceivedTimes,w
  4278  0E93  0084               	movwf	4
  4279  0E94  0800               	movf	0,w
  4280  0E95  00AE               	movwf	??_SetReceivedTimes+1
  4281  0E96  3005               	movlw	5
  4282  0E97                     u2675:	
  4283  0E97  1003               	clrc
  4284  0E98  0CAE               	rrf	??_SetReceivedTimes+1,f
  4285  0E99  3EFF               	addlw	-1
  4286  0E9A  1D03               	skipz
  4287  0E9B  2E97               	goto	u2675
  4288  0E9C  082E               	movf	??_SetReceivedTimes+1,w
  4289  0E9D  3903               	andlw	3
  4290  0E9E  3EFF               	addlw	255
  4291  0E9F  00AF               	movwf	??_SetReceivedTimes+2
  4292  0EA0  082F               	movf	??_SetReceivedTimes+2,w
  4293  0EA1  00B2               	movwf	SetReceivedTimes@colorId
  4294  0EA2                     l3268:	
  4295                           
  4296                           ;./CustomLib/TrafficLight.h: 98:         (*(_semafori)[semaforoId]).new_times[colorId]=G
      +                          etTime(index, _dataFromGateway);
  4297  0EA2  0833               	movf	SetReceivedTimes@_dataFromGateway,w
  4298  0EA3  00AD               	movwf	??_SetReceivedTimes
  4299  0EA4  082D               	movf	??_SetReceivedTimes,w
  4300  0EA5  00A4               	movwf	GetTime@_dataFromGateway
  4301  0EA6  0834               	movf	SetReceivedTimes@index,w
  4302  0EA7  120A  158A  247A  120A  158A  	fcall	_GetTime
  4303  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  4304  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  4305  0EAE  0831               	movf	SetReceivedTimes@semaforoId,w
  4306  0EAF  072C               	addwf	SetReceivedTimes@_semafori,w
  4307  0EB0  00AE               	movwf	??_SetReceivedTimes+1
  4308  0EB1  082E               	movf	??_SetReceivedTimes+1,w
  4309  0EB2  0084               	movwf	4
  4310  0EB3  0832               	movf	SetReceivedTimes@colorId,w
  4311  0EB4  00AF               	movwf	??_SetReceivedTimes+2
  4312  0EB5  072F               	addwf	??_SetReceivedTimes+2,w
  4313  0EB6  1383               	bcf	3,7	;select IRP bank0
  4314  0EB7  0700               	addwf	0,w
  4315  0EB8  00B0               	movwf	??_SetReceivedTimes+3
  4316  0EB9  0830               	movf	??_SetReceivedTimes+3,w
  4317  0EBA  3E06               	addlw	6
  4318  0EBB  0084               	movwf	4
  4319  0EBC  0824               	movf	?_GetTime,w
  4320  0EBD  0080               	movwf	0
  4321  0EBE  0A84               	incf	4,f
  4322  0EBF  0825               	movf	?_GetTime+1,w
  4323  0EC0  0080               	movwf	0
  4324  0EC1                     l3270:	
  4325                           
  4326                           ;./CustomLib/TrafficLight.h: 99:     }
  4327  0EC1  3001               	movlw	1
  4328  0EC2  00AD               	movwf	??_SetReceivedTimes
  4329  0EC3  082D               	movf	??_SetReceivedTimes,w
  4330  0EC4  07B5               	addwf	SetReceivedTimes@i,f
  4331  0EC5  2E6B               	goto	l3258
  4332  0EC6                     l152:	
  4333  0EC6  0008               	return
  4334  0EC7                     __end_of_SetReceivedTimes:	
  4335                           
  4336                           	psect	text14
  4337  0C7A                     __ptext14:	
  4338 ;; *************** function _GetTime *****************
  4339 ;; Defined at:
  4340 ;;		line 38 in file "./CustomLib/TrafficLight.h"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  index           1    wreg     unsigned char 
  4343 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4344 ;;		 -> dataFromGateway(15), 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  index           1    8[BANK0 ] unsigned char 
  4347 ;;  tmp             2   10[BANK0 ] int 
  4348 ;;  shortInt        1    9[BANK0 ] struct .
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2    4[BANK0 ] int 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4358 ;;      Params:         0       2       0       0       0
  4359 ;;      Locals:         0       4       0       0       0
  4360 ;;      Temps:          0       2       0       0       0
  4361 ;;      Totals:         0       8       0       0       0
  4362 ;;Total ram usage:        8 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    3
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_SetReceivedTimes
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function _GetTime
  4374  0C7A                     _GetTime:	
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4378                           ;GetTime@index stored from wreg
  4379  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  4380  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  4381  0C7C  00A8               	movwf	GetTime@index
  4382  0C7D                     l3008:	
  4383                           
  4384                           ;./CustomLib/TrafficLight.h: 38: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 39: {;./CustomLib/TrafficLight.h: 40:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 44:     } shortInt;;./CustomLib/TrafficLight.h: 46:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4385  0C7D  0828               	movf	GetTime@index,w
  4386  0C7E  0724               	addwf	GetTime@_dataFromGateway,w
  4387  0C7F  00A6               	movwf	??_GetTime
  4388  0C80  0826               	movf	??_GetTime,w
  4389  0C81  3E03               	addlw	3
  4390  0C82  0084               	movwf	4
  4391  0C83  307F               	movlw	127
  4392  0C84  1383               	bcf	3,7	;select IRP bank0
  4393  0C85  0500               	andwf	0,w
  4394  0C86  00A7               	movwf	??_GetTime+1
  4395  0C87  0829               	movf	GetTime@shortInt,w
  4396  0C88  0627               	xorwf	??_GetTime+1,w
  4397  0C89  3980               	andlw	-128
  4398  0C8A  0627               	xorwf	??_GetTime+1,w
  4399  0C8B  00A9               	movwf	GetTime@shortInt
  4400  0C8C                     l3010:	
  4401                           
  4402                           ;./CustomLib/TrafficLight.h: 47:     tmp = shortInt.Val;
  4403  0C8C  0829               	movf	GetTime@shortInt,w
  4404  0C8D  397F               	andlw	127
  4405  0C8E  00A6               	movwf	??_GetTime
  4406  0C8F  01A7               	clrf	??_GetTime+1
  4407  0C90  0826               	movf	??_GetTime,w
  4408  0C91  00AA               	movwf	GetTime@tmp
  4409  0C92  0827               	movf	??_GetTime+1,w
  4410  0C93  00AB               	movwf	GetTime@tmp+1
  4411  0C94                     l3012:	
  4412                           
  4413                           ;./CustomLib/TrafficLight.h: 48:     tmp = (tmp << 7) & 0x80;
  4414  0C94  082B               	movf	GetTime@tmp+1,w
  4415  0C95  00A7               	movwf	??_GetTime+1
  4416  0C96  082A               	movf	GetTime@tmp,w
  4417  0C97  00A6               	movwf	??_GetTime
  4418  0C98  3007               	movlw	7
  4419  0C99  00FF               	movwf	btemp+1
  4420  0C9A                     u2245:	
  4421  0C9A  1003               	clrc
  4422  0C9B  0DA6               	rlf	??_GetTime,f
  4423  0C9C  0DA7               	rlf	??_GetTime+1,f
  4424  0C9D  0BFF               	decfsz	btemp+1,f
  4425  0C9E  2C9A               	goto	u2245
  4426  0C9F  3080               	movlw	128
  4427  0CA0  0526               	andwf	??_GetTime,w
  4428  0CA1  00AA               	movwf	GetTime@tmp
  4429  0CA2  3000               	movlw	0
  4430  0CA3  0527               	andwf	??_GetTime+1,w
  4431  0CA4  00AB               	movwf	GetTime@tmp+1
  4432  0CA5                     l3014:	
  4433                           
  4434                           ;./CustomLib/TrafficLight.h: 50:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4435  0CA5  0828               	movf	GetTime@index,w
  4436  0CA6  0724               	addwf	GetTime@_dataFromGateway,w
  4437  0CA7  00A6               	movwf	??_GetTime
  4438  0CA8  0826               	movf	??_GetTime,w
  4439  0CA9  3E02               	addlw	2
  4440  0CAA  0084               	movwf	4
  4441  0CAB  307F               	movlw	127
  4442  0CAC  0500               	andwf	0,w
  4443  0CAD  00A7               	movwf	??_GetTime+1
  4444  0CAE  0829               	movf	GetTime@shortInt,w
  4445  0CAF  0627               	xorwf	??_GetTime+1,w
  4446  0CB0  3980               	andlw	-128
  4447  0CB1  0627               	xorwf	??_GetTime+1,w
  4448  0CB2  00A9               	movwf	GetTime@shortInt
  4449  0CB3                     l3016:	
  4450                           
  4451                           ;./CustomLib/TrafficLight.h: 51:     tmp = tmp | shortInt.Val;
  4452  0CB3  0829               	movf	GetTime@shortInt,w
  4453  0CB4  397F               	andlw	127
  4454  0CB5  00A6               	movwf	??_GetTime
  4455  0CB6  082A               	movf	GetTime@tmp,w
  4456  0CB7  0426               	iorwf	??_GetTime,w
  4457  0CB8  00AA               	movwf	GetTime@tmp
  4458  0CB9  082B               	movf	GetTime@tmp+1,w
  4459  0CBA  00AB               	movwf	GetTime@tmp+1
  4460  0CBB                     l3018:	
  4461                           
  4462                           ;./CustomLib/TrafficLight.h: 53:     return tmp;
  4463  0CBB  082B               	movf	GetTime@tmp+1,w
  4464  0CBC  00A5               	movwf	?_GetTime+1
  4465  0CBD  082A               	movf	GetTime@tmp,w
  4466  0CBE  00A4               	movwf	?_GetTime
  4467  0CBF                     l135:	
  4468  0CBF  0008               	return
  4469  0CC0                     __end_of_GetTime:	
  4470                           
  4471                           	psect	text15
  4472  05CF                     __ptext15:	
  4473 ;; *************** function _SetDefaultTimers *****************
  4474 ;; Defined at:
  4475 ;;		line 58 in file "./CustomLib/TrafficLight.h"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  rosso           2    4[BANK0 ] int 
  4478 ;;  verde           2    6[BANK0 ] int 
  4479 ;;  giallo          2    8[BANK0 ] int 
  4480 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4481 ;;		 -> Semafori(2), 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  i               1   15[BANK0 ] unsigned char 
  4484 ;;  l               1   14[BANK0 ] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4494 ;;      Params:         0       7       0       0       0
  4495 ;;      Locals:         0       2       0       0       0
  4496 ;;      Temps:          0       3       0       0       0
  4497 ;;      Totals:         0      12       0       0       0
  4498 ;;Total ram usage:       12 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    3
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_main
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _SetDefaultTimers
  4510  05CF                     _SetDefaultTimers:	
  4511  05CF                     l3220:	
  4512                           ;incstack = 0
  4513                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4514                           
  4515                           
  4516                           ;./CustomLib/TrafficLight.h: 58: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 59: {;./CustomLib/TrafficLight.h: 60: 
      +                              for (unsigned char l = 0; l < n_semafori; l++)
  4517  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  4518  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  4519  05D1  01AE               	clrf	SetDefaultTimers@l
  4520  05D2                     l3226:	
  4521                           
  4522                           ;./CustomLib/TrafficLight.h: 61:     {;./CustomLib/TrafficLight.h: 62:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4523  05D2  01AF               	clrf	SetDefaultTimers@i
  4524  05D3  2E43               	goto	l3240
  4525  05D4                     l3232:	
  4526                           
  4527                           ;./CustomLib/TrafficLight.h: 67:                 (*(_semafori)[l]).times[i] = rosso;
  4528  05D4  082E               	movf	SetDefaultTimers@l,w
  4529  05D5  072A               	addwf	SetDefaultTimers@_semafori,w
  4530  05D6  00AB               	movwf	??_SetDefaultTimers
  4531  05D7  082B               	movf	??_SetDefaultTimers,w
  4532  05D8  0084               	movwf	4
  4533  05D9  082F               	movf	SetDefaultTimers@i,w
  4534  05DA  00AC               	movwf	??_SetDefaultTimers+1
  4535  05DB  072C               	addwf	??_SetDefaultTimers+1,w
  4536  05DC  1383               	bcf	3,7	;select IRP bank0
  4537  05DD  0700               	addwf	0,w
  4538  05DE  00AD               	movwf	??_SetDefaultTimers+2
  4539  05DF  082D               	movf	??_SetDefaultTimers+2,w
  4540  05E0  0084               	movwf	4
  4541  05E1  0824               	movf	SetDefaultTimers@rosso,w
  4542  05E2  0080               	movwf	0
  4543  05E3  0A84               	incf	4,f
  4544  05E4  0825               	movf	SetDefaultTimers@rosso+1,w
  4545  05E5  0080               	movwf	0
  4546                           
  4547                           ;./CustomLib/TrafficLight.h: 68:                 (*(_semafori)[l]).new_times[i] = rosso;
  4548  05E6  082E               	movf	SetDefaultTimers@l,w
  4549  05E7  072A               	addwf	SetDefaultTimers@_semafori,w
  4550  05E8  00AB               	movwf	??_SetDefaultTimers
  4551  05E9  082B               	movf	??_SetDefaultTimers,w
  4552  05EA  0084               	movwf	4
  4553  05EB  082F               	movf	SetDefaultTimers@i,w
  4554  05EC  00AC               	movwf	??_SetDefaultTimers+1
  4555  05ED  072C               	addwf	??_SetDefaultTimers+1,w
  4556  05EE  0700               	addwf	0,w
  4557  05EF  00AD               	movwf	??_SetDefaultTimers+2
  4558  05F0  082D               	movf	??_SetDefaultTimers+2,w
  4559  05F1  3E06               	addlw	6
  4560  05F2  0084               	movwf	4
  4561  05F3  0824               	movf	SetDefaultTimers@rosso,w
  4562  05F4  0080               	movwf	0
  4563  05F5  0A84               	incf	4,f
  4564  05F6  0825               	movf	SetDefaultTimers@rosso+1,w
  4565  05F7  0080               	movwf	0
  4566                           
  4567                           ;./CustomLib/TrafficLight.h: 69:                 break;
  4568  05F8  2E56               	goto	l3242
  4569  05F9                     l3234:	
  4570                           
  4571                           ;./CustomLib/TrafficLight.h: 71:                 (*(_semafori)[l]).times[i] = verde;
  4572  05F9  082E               	movf	SetDefaultTimers@l,w
  4573  05FA  072A               	addwf	SetDefaultTimers@_semafori,w
  4574  05FB  00AB               	movwf	??_SetDefaultTimers
  4575  05FC  082B               	movf	??_SetDefaultTimers,w
  4576  05FD  0084               	movwf	4
  4577  05FE  082F               	movf	SetDefaultTimers@i,w
  4578  05FF  00AC               	movwf	??_SetDefaultTimers+1
  4579  0600  072C               	addwf	??_SetDefaultTimers+1,w
  4580  0601  1383               	bcf	3,7	;select IRP bank0
  4581  0602  0700               	addwf	0,w
  4582  0603  00AD               	movwf	??_SetDefaultTimers+2
  4583  0604  082D               	movf	??_SetDefaultTimers+2,w
  4584  0605  0084               	movwf	4
  4585  0606  0826               	movf	SetDefaultTimers@verde,w
  4586  0607  0080               	movwf	0
  4587  0608  0A84               	incf	4,f
  4588  0609  0827               	movf	SetDefaultTimers@verde+1,w
  4589  060A  0080               	movwf	0
  4590                           
  4591                           ;./CustomLib/TrafficLight.h: 72:                 (*(_semafori)[l]).new_times[i] = verde;
  4592  060B  082E               	movf	SetDefaultTimers@l,w
  4593  060C  072A               	addwf	SetDefaultTimers@_semafori,w
  4594  060D  00AB               	movwf	??_SetDefaultTimers
  4595  060E  082B               	movf	??_SetDefaultTimers,w
  4596  060F  0084               	movwf	4
  4597  0610  082F               	movf	SetDefaultTimers@i,w
  4598  0611  00AC               	movwf	??_SetDefaultTimers+1
  4599  0612  072C               	addwf	??_SetDefaultTimers+1,w
  4600  0613  0700               	addwf	0,w
  4601  0614  00AD               	movwf	??_SetDefaultTimers+2
  4602  0615  082D               	movf	??_SetDefaultTimers+2,w
  4603  0616  3E06               	addlw	6
  4604  0617  0084               	movwf	4
  4605  0618  0826               	movf	SetDefaultTimers@verde,w
  4606  0619  0080               	movwf	0
  4607  061A  0A84               	incf	4,f
  4608  061B  0827               	movf	SetDefaultTimers@verde+1,w
  4609  061C  0080               	movwf	0
  4610                           
  4611                           ;./CustomLib/TrafficLight.h: 73:                 break;
  4612  061D  2E56               	goto	l3242
  4613  061E                     l3236:	
  4614                           
  4615                           ;./CustomLib/TrafficLight.h: 75:                 (*(_semafori)[l]).times[i] = giallo;
  4616  061E  082E               	movf	SetDefaultTimers@l,w
  4617  061F  072A               	addwf	SetDefaultTimers@_semafori,w
  4618  0620  00AB               	movwf	??_SetDefaultTimers
  4619  0621  082B               	movf	??_SetDefaultTimers,w
  4620  0622  0084               	movwf	4
  4621  0623  082F               	movf	SetDefaultTimers@i,w
  4622  0624  00AC               	movwf	??_SetDefaultTimers+1
  4623  0625  072C               	addwf	??_SetDefaultTimers+1,w
  4624  0626  1383               	bcf	3,7	;select IRP bank0
  4625  0627  0700               	addwf	0,w
  4626  0628  00AD               	movwf	??_SetDefaultTimers+2
  4627  0629  082D               	movf	??_SetDefaultTimers+2,w
  4628  062A  0084               	movwf	4
  4629  062B  0828               	movf	SetDefaultTimers@giallo,w
  4630  062C  0080               	movwf	0
  4631  062D  0A84               	incf	4,f
  4632  062E  0829               	movf	SetDefaultTimers@giallo+1,w
  4633  062F  0080               	movwf	0
  4634                           
  4635                           ;./CustomLib/TrafficLight.h: 76:                 (*(_semafori)[l]).new_times[i] = giallo
      +                          ;
  4636  0630  082E               	movf	SetDefaultTimers@l,w
  4637  0631  072A               	addwf	SetDefaultTimers@_semafori,w
  4638  0632  00AB               	movwf	??_SetDefaultTimers
  4639  0633  082B               	movf	??_SetDefaultTimers,w
  4640  0634  0084               	movwf	4
  4641  0635  082F               	movf	SetDefaultTimers@i,w
  4642  0636  00AC               	movwf	??_SetDefaultTimers+1
  4643  0637  072C               	addwf	??_SetDefaultTimers+1,w
  4644  0638  0700               	addwf	0,w
  4645  0639  00AD               	movwf	??_SetDefaultTimers+2
  4646  063A  082D               	movf	??_SetDefaultTimers+2,w
  4647  063B  3E06               	addlw	6
  4648  063C  0084               	movwf	4
  4649  063D  0828               	movf	SetDefaultTimers@giallo,w
  4650  063E  0080               	movwf	0
  4651  063F  0A84               	incf	4,f
  4652  0640  0829               	movf	SetDefaultTimers@giallo+1,w
  4653  0641  0080               	movwf	0
  4654                           
  4655                           ;./CustomLib/TrafficLight.h: 77:                 break;
  4656  0642  2E56               	goto	l3242
  4657  0643                     l3240:	
  4658  0643  082F               	movf	SetDefaultTimers@i,w
  4659  0644  00AB               	movwf	??_SetDefaultTimers
  4660  0645  01AC               	clrf	??_SetDefaultTimers+1
  4661                           
  4662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4663                           ; Switch size 1, requested type "simple"
  4664                           ; Number of cases is 1, Range of values is 0 to 0
  4665                           ; switch strategies available:
  4666                           ; Name         Instructions Cycles
  4667                           ; simple_byte            4     3 (average)
  4668                           ; direct_byte           11     8 (fixed)
  4669                           ; jumptable            260     6 (fixed)
  4670                           ;	Chosen strategy is simple_byte
  4671  0646  082C               	movf	??_SetDefaultTimers+1,w
  4672  0647  3A00               	xorlw	0	; case 0
  4673  0648  1903               	skipnz
  4674  0649  2E4B               	goto	l3834
  4675  064A  2E56               	goto	l3242
  4676  064B                     l3834:	
  4677                           
  4678                           ; Switch size 1, requested type "simple"
  4679                           ; Number of cases is 3, Range of values is 0 to 2
  4680                           ; switch strategies available:
  4681                           ; Name         Instructions Cycles
  4682                           ; simple_byte           10     6 (average)
  4683                           ; direct_byte           17     8 (fixed)
  4684                           ; jumptable            260     6 (fixed)
  4685                           ;	Chosen strategy is simple_byte
  4686  064B  082B               	movf	??_SetDefaultTimers,w
  4687  064C  3A00               	xorlw	0	; case 0
  4688  064D  1903               	skipnz
  4689  064E  2DD4               	goto	l3232
  4690  064F  3A01               	xorlw	1	; case 1
  4691  0650  1903               	skipnz
  4692  0651  2DF9               	goto	l3234
  4693  0652  3A03               	xorlw	3	; case 2
  4694  0653  1903               	skipnz
  4695  0654  2E1E               	goto	l3236
  4696  0655  2E56               	goto	l3242
  4697  0656                     l3242:	
  4698                           
  4699                           ;./CustomLib/TrafficLight.h: 79:         }
  4700  0656  3001               	movlw	1
  4701  0657  00AB               	movwf	??_SetDefaultTimers
  4702  0658  082B               	movf	??_SetDefaultTimers,w
  4703  0659  07AF               	addwf	SetDefaultTimers@i,f
  4704  065A                     l3244:	
  4705  065A  3003               	movlw	3
  4706  065B  022F               	subwf	SetDefaultTimers@i,w
  4707  065C  1C03               	skipc
  4708  065D  2E5F               	goto	u2641
  4709  065E  2E60               	goto	u2640
  4710  065F                     u2641:	
  4711  065F  2E43               	goto	l3240
  4712  0660                     u2640:	
  4713  0660                     l3246:	
  4714                           
  4715                           ;./CustomLib/TrafficLight.h: 80:     }
  4716  0660  3001               	movlw	1
  4717  0661  00AB               	movwf	??_SetDefaultTimers
  4718  0662  082B               	movf	??_SetDefaultTimers,w
  4719  0663  07AE               	addwf	SetDefaultTimers@l,f
  4720  0664                     l3248:	
  4721  0664  3002               	movlw	2
  4722  0665  022E               	subwf	SetDefaultTimers@l,w
  4723  0666  1C03               	skipc
  4724  0667  2E69               	goto	u2651
  4725  0668  2E6A               	goto	u2650
  4726  0669                     u2651:	
  4727  0669  2DD2               	goto	l3226
  4728  066A                     u2650:	
  4729  066A                     l3250:	
  4730                           
  4731                           ;./CustomLib/TrafficLight.h: 82:     (*(_semafori)[0]).lux_select = 0;
  4732  066A  082A               	movf	SetDefaultTimers@_semafori,w
  4733  066B  0084               	movwf	4
  4734  066C  1383               	bcf	3,7	;select IRP bank0
  4735  066D  0800               	movf	0,w
  4736  066E  3E0C               	addlw	12
  4737  066F  0084               	movwf	4
  4738  0670  0180               	clrf	0
  4739                           
  4740                           ;./CustomLib/TrafficLight.h: 83:     (*(_semafori)[0]).new_lux_select = 0;
  4741  0671  082A               	movf	SetDefaultTimers@_semafori,w
  4742  0672  0084               	movwf	4
  4743  0673  0800               	movf	0,w
  4744  0674  3E0D               	addlw	13
  4745  0675  0084               	movwf	4
  4746  0676  0180               	clrf	0
  4747                           
  4748                           ;./CustomLib/TrafficLight.h: 84:     (*(_semafori)[1]).lux_select = 1;
  4749  0677  0A2A               	incf	SetDefaultTimers@_semafori,w
  4750  0678  0084               	movwf	4
  4751  0679  0800               	movf	0,w
  4752  067A  3E0C               	addlw	12
  4753  067B  0084               	movwf	4
  4754  067C  0180               	clrf	0
  4755  067D  0A80               	incf	0,f
  4756                           
  4757                           ;./CustomLib/TrafficLight.h: 85:     (*(_semafori)[1]).new_lux_select = 1;
  4758  067E  0A2A               	incf	SetDefaultTimers@_semafori,w
  4759  067F  0084               	movwf	4
  4760  0680  0800               	movf	0,w
  4761  0681  3E0D               	addlw	13
  4762  0682  0084               	movwf	4
  4763  0683  0180               	clrf	0
  4764  0684  0A80               	incf	0,f
  4765  0685                     l147:	
  4766  0685  0008               	return
  4767  0686                     __end_of_SetDefaultTimers:	
  4768                           
  4769                           	psect	text16
  4770  043A                     __ptext16:	
  4771 ;; *************** function _GetDigits *****************
  4772 ;; Defined at:
  4773 ;;		line 103 in file "./CustomLib/TrafficLight.h"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  _digits         1    wreg     PTR PTR struct .
  4776 ;;		 -> DigitsArr(2), 
  4777 ;;  index           1   20[BANK0 ] unsigned char 
  4778 ;;  Time            2   21[BANK0 ] int 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  _digits         1   28[BANK0 ] PTR PTR struct .
  4781 ;;		 -> DigitsArr(2), 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4791 ;;      Params:         0       3       0       0       0
  4792 ;;      Locals:         0       3       0       0       0
  4793 ;;      Temps:          0       3       0       0       0
  4794 ;;      Totals:         0       9       0       0       0
  4795 ;;Total ram usage:        9 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    4
  4798 ;; This function calls:
  4799 ;;		___awdiv
  4800 ;;		___awmod
  4801 ;;		___bmul
  4802 ;; This function is called by:
  4803 ;;		_main
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           
  4808                           ;psect for function _GetDigits
  4809  043A                     _GetDigits:	
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4813                           ;GetDigits@_digits stored from wreg
  4814  043A  1283               	bcf	3,5	;RP0=0, select bank0
  4815  043B  1303               	bcf	3,6	;RP1=0, select bank0
  4816  043C  00BC               	movwf	GetDigits@_digits
  4817  043D                     l3274:	
  4818                           
  4819                           ;./CustomLib/TrafficLight.h: 103: void GetDigits(_Digits _digits, unsigned char index, i
      +                          nt Time);./CustomLib/TrafficLight.h: 104: {;./CustomLib/TrafficLight.h: 105:     while(T
      +                          ime/1000>0)
  4820  043D  2C53               	goto	l3278
  4821  043E                     l3276:	
  4822                           
  4823                           ;./CustomLib/TrafficLight.h: 106:     {;./CustomLib/TrafficLight.h: 107:         Time=Ti
      +                          me/10;
  4824  043E  300A               	movlw	10
  4825  043F  1283               	bcf	3,5	;RP0=0, select bank0
  4826  0440  1303               	bcf	3,6	;RP1=0, select bank0
  4827  0441  00AB               	movwf	___awdiv@divisor
  4828  0442  3000               	movlw	0
  4829  0443  00AC               	movwf	___awdiv@divisor+1
  4830  0444  0836               	movf	GetDigits@Time+1,w
  4831  0445  00AE               	movwf	___awdiv@dividend+1
  4832  0446  0835               	movf	GetDigits@Time,w
  4833  0447  00AD               	movwf	___awdiv@dividend
  4834  0448  120A  158A  272C  120A  118A  	fcall	___awdiv
  4835  044D  1283               	bcf	3,5	;RP0=0, select bank0
  4836  044E  1303               	bcf	3,6	;RP1=0, select bank0
  4837  044F  082C               	movf	?___awdiv+1,w
  4838  0450  00B6               	movwf	GetDigits@Time+1
  4839  0451  082B               	movf	?___awdiv,w
  4840  0452  00B5               	movwf	GetDigits@Time
  4841  0453                     l3278:	
  4842                           
  4843                           ;./CustomLib/TrafficLight.h: 105:     while(Time/1000>0)
  4844  0453  30E8               	movlw	232
  4845  0454  00AB               	movwf	___awdiv@divisor
  4846  0455  3003               	movlw	3
  4847  0456  00AC               	movwf	___awdiv@divisor+1
  4848  0457  0836               	movf	GetDigits@Time+1,w
  4849  0458  00AE               	movwf	___awdiv@dividend+1
  4850  0459  0835               	movf	GetDigits@Time,w
  4851  045A  00AD               	movwf	___awdiv@dividend
  4852  045B  120A  158A  272C  120A  118A  	fcall	___awdiv
  4853  0460  1283               	bcf	3,5	;RP0=0, select bank0
  4854  0461  1303               	bcf	3,6	;RP1=0, select bank0
  4855  0462  082C               	movf	?___awdiv+1,w
  4856  0463  3A80               	xorlw	128
  4857  0464  00FF               	movwf	btemp+1
  4858  0465  3080               	movlw	128
  4859  0466  027F               	subwf	btemp+1,w
  4860  0467  1D03               	skipz
  4861  0468  2C6B               	goto	u2685
  4862  0469  3001               	movlw	1
  4863  046A  022B               	subwf	?___awdiv,w
  4864  046B                     u2685:	
  4865  046B  1803               	skipnc
  4866  046C  2C6E               	goto	u2681
  4867  046D  2C6F               	goto	u2680
  4868  046E                     u2681:	
  4869  046E  2C3E               	goto	l3276
  4870  046F                     u2680:	
  4871  046F                     l3280:	
  4872                           
  4873                           ;./CustomLib/TrafficLight.h: 110:     (*_digits)[index].centinaia = Time / 100;
  4874  046F  3064               	movlw	100
  4875  0470  1283               	bcf	3,5	;RP0=0, select bank0
  4876  0471  1303               	bcf	3,6	;RP1=0, select bank0
  4877  0472  00AB               	movwf	___awdiv@divisor
  4878  0473  3000               	movlw	0
  4879  0474  00AC               	movwf	___awdiv@divisor+1
  4880  0475  0836               	movf	GetDigits@Time+1,w
  4881  0476  00AE               	movwf	___awdiv@dividend+1
  4882  0477  0835               	movf	GetDigits@Time,w
  4883  0478  00AD               	movwf	___awdiv@dividend
  4884  0479  120A  158A  272C  120A  118A  	fcall	___awdiv
  4885  047E  1283               	bcf	3,5	;RP0=0, select bank0
  4886  047F  1303               	bcf	3,6	;RP1=0, select bank0
  4887  0480  082B               	movf	?___awdiv,w
  4888  0481  00B7               	movwf	??_GetDigits
  4889  0482  083C               	movf	GetDigits@_digits,w
  4890  0483  0084               	movwf	4
  4891  0484  3003               	movlw	3
  4892  0485  00B8               	movwf	??_GetDigits+1
  4893  0486  0838               	movf	??_GetDigits+1,w
  4894  0487  00A4               	movwf	___bmul@multiplicand
  4895  0488  0834               	movf	GetDigits@index,w
  4896  0489  120A  158A  239D  120A  118A  	fcall	___bmul
  4897  048E  1383               	bcf	3,7	;select IRP bank0
  4898  048F  0700               	addwf	0,w
  4899  0490  1283               	bcf	3,5	;RP0=0, select bank0
  4900  0491  1303               	bcf	3,6	;RP1=0, select bank0
  4901  0492  00B9               	movwf	??_GetDigits+2
  4902  0493  0839               	movf	??_GetDigits+2,w
  4903  0494  0084               	movwf	4
  4904  0495  0837               	movf	??_GetDigits,w
  4905  0496  0080               	movwf	0
  4906                           
  4907                           ;./CustomLib/TrafficLight.h: 111:     (*_digits)[index].decine = (Time % 100) / 10;
  4908  0497  300A               	movlw	10
  4909  0498  00AB               	movwf	___awdiv@divisor
  4910  0499  3000               	movlw	0
  4911  049A  00AC               	movwf	___awdiv@divisor+1
  4912  049B  0836               	movf	GetDigits@Time+1,w
  4913  049C  00A7               	movwf	___awmod@dividend+1
  4914  049D  0835               	movf	GetDigits@Time,w
  4915  049E  00A6               	movwf	___awmod@dividend
  4916  049F  3064               	movlw	100
  4917  04A0  00A4               	movwf	___awmod@divisor
  4918  04A1  3000               	movlw	0
  4919  04A2  00A5               	movwf	___awmod@divisor+1
  4920  04A3  120A  158A  260C  120A  118A  	fcall	___awmod
  4921  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  4922  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  4923  04AA  0825               	movf	?___awmod+1,w
  4924  04AB  00AE               	movwf	___awdiv@dividend+1
  4925  04AC  0824               	movf	?___awmod,w
  4926  04AD  00AD               	movwf	___awdiv@dividend
  4927  04AE  120A  158A  272C  120A  118A  	fcall	___awdiv
  4928  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  4929  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  4930  04B5  082B               	movf	?___awdiv,w
  4931  04B6  00B7               	movwf	??_GetDigits
  4932  04B7  083C               	movf	GetDigits@_digits,w
  4933  04B8  0084               	movwf	4
  4934  04B9  3003               	movlw	3
  4935  04BA  00B8               	movwf	??_GetDigits+1
  4936  04BB  0838               	movf	??_GetDigits+1,w
  4937  04BC  00A4               	movwf	___bmul@multiplicand
  4938  04BD  0834               	movf	GetDigits@index,w
  4939  04BE  120A  158A  239D  120A  118A  	fcall	___bmul
  4940  04C3  1383               	bcf	3,7	;select IRP bank0
  4941  04C4  0700               	addwf	0,w
  4942  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  4943  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  4944  04C7  00B9               	movwf	??_GetDigits+2
  4945  04C8  0A39               	incf	??_GetDigits+2,w
  4946  04C9  0084               	movwf	4
  4947  04CA  0837               	movf	??_GetDigits,w
  4948  04CB  0080               	movwf	0
  4949  04CC                     l3282:	
  4950                           
  4951                           ;./CustomLib/TrafficLight.h: 112:     (*_digits)[index].unita = (Time % 100) % 10;
  4952  04CC  0836               	movf	GetDigits@Time+1,w
  4953  04CD  00A7               	movwf	___awmod@dividend+1
  4954  04CE  0835               	movf	GetDigits@Time,w
  4955  04CF  00A6               	movwf	___awmod@dividend
  4956  04D0  3064               	movlw	100
  4957  04D1  00A4               	movwf	___awmod@divisor
  4958  04D2  3000               	movlw	0
  4959  04D3  00A5               	movwf	___awmod@divisor+1
  4960  04D4  120A  158A  260C  120A  118A  	fcall	___awmod
  4961  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  4962  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  4963  04DB  0825               	movf	?___awmod+1,w
  4964  04DC  00BB               	movwf	_GetDigits$1189+1
  4965  04DD  0824               	movf	?___awmod,w
  4966  04DE  00BA               	movwf	_GetDigits$1189
  4967  04DF                     l3284:	
  4968                           
  4969                           ;./CustomLib/TrafficLight.h: 112:     (*_digits)[index].unita = (Time % 100) % 10;
  4970  04DF  300A               	movlw	10
  4971  04E0  00A4               	movwf	___awmod@divisor
  4972  04E1  3000               	movlw	0
  4973  04E2  00A5               	movwf	___awmod@divisor+1
  4974  04E3  083B               	movf	_GetDigits$1189+1,w
  4975  04E4  00A7               	movwf	___awmod@dividend+1
  4976  04E5  083A               	movf	_GetDigits$1189,w
  4977  04E6  00A6               	movwf	___awmod@dividend
  4978  04E7  120A  158A  260C  120A  118A  	fcall	___awmod
  4979  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  4980  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  4981  04EE  0824               	movf	?___awmod,w
  4982  04EF  00B7               	movwf	??_GetDigits
  4983  04F0  083C               	movf	GetDigits@_digits,w
  4984  04F1  0084               	movwf	4
  4985  04F2  3003               	movlw	3
  4986  04F3  00B8               	movwf	??_GetDigits+1
  4987  04F4  0838               	movf	??_GetDigits+1,w
  4988  04F5  00A4               	movwf	___bmul@multiplicand
  4989  04F6  0834               	movf	GetDigits@index,w
  4990  04F7  120A  158A  239D  120A  118A  	fcall	___bmul
  4991  04FC  1383               	bcf	3,7	;select IRP bank0
  4992  04FD  0700               	addwf	0,w
  4993  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  4994  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  4995  0500  00B9               	movwf	??_GetDigits+2
  4996  0501  0839               	movf	??_GetDigits+2,w
  4997  0502  3E02               	addlw	2
  4998  0503  0084               	movwf	4
  4999  0504  0837               	movf	??_GetDigits,w
  5000  0505  0080               	movwf	0
  5001  0506                     l158:	
  5002  0506  0008               	return
  5003  0507                     __end_of_GetDigits:	
  5004                           
  5005                           	psect	text17
  5006  0B9D                     __ptext17:	
  5007 ;; *************** function ___bmul *****************
  5008 ;; Defined at:
  5009 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  multiplier      1    wreg     unsigned char 
  5012 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  multiplier      1    7[BANK0 ] unsigned char 
  5015 ;;  product         1    6[BANK0 ] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      unsigned char 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5025 ;;      Params:         0       1       0       0       0
  5026 ;;      Locals:         0       2       0       0       0
  5027 ;;      Temps:          0       1       0       0       0
  5028 ;;      Totals:         0       4       0       0       0
  5029 ;;Total ram usage:        4 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    3
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_SetReceivedTimes
  5036 ;;		_GetDigits
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function ___bmul
  5042  0B9D                     ___bmul:	
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5046                           ;___bmul@multiplier stored from wreg
  5047  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0B9F  00A7               	movwf	___bmul@multiplier
  5050  0BA0                     l3058:	
  5051  0BA0  01A6               	clrf	___bmul@product
  5052  0BA1                     l3060:	
  5053  0BA1  1C27               	btfss	___bmul@multiplier,0
  5054  0BA2  2BA4               	goto	u2301
  5055  0BA3  2BA5               	goto	u2300
  5056  0BA4                     u2301:	
  5057  0BA4  2BA9               	goto	l3064
  5058  0BA5                     u2300:	
  5059  0BA5                     l3062:	
  5060  0BA5  0824               	movf	___bmul@multiplicand,w
  5061  0BA6  00A5               	movwf	??___bmul
  5062  0BA7  0825               	movf	??___bmul,w
  5063  0BA8  07A6               	addwf	___bmul@product,f
  5064  0BA9                     l3064:	
  5065  0BA9  1003               	clrc
  5066  0BAA  0DA4               	rlf	___bmul@multiplicand,f
  5067  0BAB                     l3066:	
  5068  0BAB  1003               	clrc
  5069  0BAC  0CA7               	rrf	___bmul@multiplier,f
  5070  0BAD  0827               	movf	___bmul@multiplier,w
  5071  0BAE  1D03               	btfss	3,2
  5072  0BAF  2BB1               	goto	u2311
  5073  0BB0  2BB2               	goto	u2310
  5074  0BB1                     u2311:	
  5075  0BB1  2BA1               	goto	l3060
  5076  0BB2                     u2310:	
  5077  0BB2                     l3068:	
  5078  0BB2  0826               	movf	___bmul@product,w
  5079  0BB3                     l460:	
  5080  0BB3  0008               	return
  5081  0BB4                     __end_of___bmul:	
  5082                           
  5083                           	psect	text18
  5084  0E0C                     __ptext18:	
  5085 ;; *************** function ___awmod *****************
  5086 ;; Defined at:
  5087 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  divisor         2    4[BANK0 ] int 
  5090 ;;  dividend        2    6[BANK0 ] int 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  sign            1   10[BANK0 ] unsigned char 
  5093 ;;  counter         1    9[BANK0 ] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  2    4[BANK0 ] int 
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5103 ;;      Params:         0       4       0       0       0
  5104 ;;      Locals:         0       2       0       0       0
  5105 ;;      Temps:          0       1       0       0       0
  5106 ;;      Totals:         0       7       0       0       0
  5107 ;;Total ram usage:        7 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    3
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_GetDigits
  5114 ;;		_ShowDigitsOnDisplay
  5115 ;;		_ChangeTrafficLight
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           
  5120                           ;psect for function ___awmod
  5121  0E0C                     ___awmod:	
  5122  0E0C                     l3156:	
  5123                           ;incstack = 0
  5124                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5125                           
  5126  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0E0E  01AA               	clrf	___awmod@sign
  5129  0E0F                     l3158:	
  5130  0E0F  1FA7               	btfss	___awmod@dividend+1,7
  5131  0E10  2E12               	goto	u2521
  5132  0E11  2E13               	goto	u2520
  5133  0E12                     u2521:	
  5134  0E12  2E1A               	goto	l3164
  5135  0E13                     u2520:	
  5136  0E13                     l3160:	
  5137  0E13  09A6               	comf	___awmod@dividend,f
  5138  0E14  09A7               	comf	___awmod@dividend+1,f
  5139  0E15  0AA6               	incf	___awmod@dividend,f
  5140  0E16  1903               	skipnz
  5141  0E17  0AA7               	incf	___awmod@dividend+1,f
  5142  0E18                     l3162:	
  5143  0E18  01AA               	clrf	___awmod@sign
  5144  0E19  0AAA               	incf	___awmod@sign,f
  5145  0E1A                     l3164:	
  5146  0E1A  1FA5               	btfss	___awmod@divisor+1,7
  5147  0E1B  2E1D               	goto	u2531
  5148  0E1C  2E1E               	goto	u2530
  5149  0E1D                     u2531:	
  5150  0E1D  2E23               	goto	l3168
  5151  0E1E                     u2530:	
  5152  0E1E                     l3166:	
  5153  0E1E  09A4               	comf	___awmod@divisor,f
  5154  0E1F  09A5               	comf	___awmod@divisor+1,f
  5155  0E20  0AA4               	incf	___awmod@divisor,f
  5156  0E21  1903               	skipnz
  5157  0E22  0AA5               	incf	___awmod@divisor+1,f
  5158  0E23                     l3168:	
  5159  0E23  0824               	movf	___awmod@divisor,w
  5160  0E24  0425               	iorwf	___awmod@divisor+1,w
  5161  0E25  1903               	btfsc	3,2
  5162  0E26  2E28               	goto	u2541
  5163  0E27  2E29               	goto	u2540
  5164  0E28                     u2541:	
  5165  0E28  2E58               	goto	l3186
  5166  0E29                     u2540:	
  5167  0E29                     l3170:	
  5168  0E29  01A9               	clrf	___awmod@counter
  5169  0E2A  0AA9               	incf	___awmod@counter,f
  5170  0E2B  2E37               	goto	l3176
  5171  0E2C                     l3172:	
  5172  0E2C  3001               	movlw	1
  5173  0E2D                     u2555:	
  5174  0E2D  1003               	clrc
  5175  0E2E  0DA4               	rlf	___awmod@divisor,f
  5176  0E2F  0DA5               	rlf	___awmod@divisor+1,f
  5177  0E30  3EFF               	addlw	-1
  5178  0E31  1D03               	skipz
  5179  0E32  2E2D               	goto	u2555
  5180  0E33                     l3174:	
  5181  0E33  3001               	movlw	1
  5182  0E34  00A8               	movwf	??___awmod
  5183  0E35  0828               	movf	??___awmod,w
  5184  0E36  07A9               	addwf	___awmod@counter,f
  5185  0E37                     l3176:	
  5186  0E37  1FA5               	btfss	___awmod@divisor+1,7
  5187  0E38  2E3A               	goto	u2561
  5188  0E39  2E3B               	goto	u2560
  5189  0E3A                     u2561:	
  5190  0E3A  2E2C               	goto	l3172
  5191  0E3B                     u2560:	
  5192  0E3B                     l3178:	
  5193  0E3B  0825               	movf	___awmod@divisor+1,w
  5194  0E3C  0227               	subwf	___awmod@dividend+1,w
  5195  0E3D  1D03               	skipz
  5196  0E3E  2E41               	goto	u2575
  5197  0E3F  0824               	movf	___awmod@divisor,w
  5198  0E40  0226               	subwf	___awmod@dividend,w
  5199  0E41                     u2575:	
  5200  0E41  1C03               	skipc
  5201  0E42  2E44               	goto	u2571
  5202  0E43  2E45               	goto	u2570
  5203  0E44                     u2571:	
  5204  0E44  2E4B               	goto	l3182
  5205  0E45                     u2570:	
  5206  0E45                     l3180:	
  5207  0E45  0824               	movf	___awmod@divisor,w
  5208  0E46  02A6               	subwf	___awmod@dividend,f
  5209  0E47  0825               	movf	___awmod@divisor+1,w
  5210  0E48  1C03               	skipc
  5211  0E49  03A7               	decf	___awmod@dividend+1,f
  5212  0E4A  02A7               	subwf	___awmod@dividend+1,f
  5213  0E4B                     l3182:	
  5214  0E4B  3001               	movlw	1
  5215  0E4C                     u2585:	
  5216  0E4C  1003               	clrc
  5217  0E4D  0CA5               	rrf	___awmod@divisor+1,f
  5218  0E4E  0CA4               	rrf	___awmod@divisor,f
  5219  0E4F  3EFF               	addlw	-1
  5220  0E50  1D03               	skipz
  5221  0E51  2E4C               	goto	u2585
  5222  0E52                     l3184:	
  5223  0E52  3001               	movlw	1
  5224  0E53  02A9               	subwf	___awmod@counter,f
  5225  0E54  1D03               	btfss	3,2
  5226  0E55  2E57               	goto	u2591
  5227  0E56  2E58               	goto	u2590
  5228  0E57                     u2591:	
  5229  0E57  2E3B               	goto	l3178
  5230  0E58                     u2590:	
  5231  0E58                     l3186:	
  5232  0E58  082A               	movf	___awmod@sign,w
  5233  0E59  1903               	btfsc	3,2
  5234  0E5A  2E5C               	goto	u2601
  5235  0E5B  2E5D               	goto	u2600
  5236  0E5C                     u2601:	
  5237  0E5C  2E62               	goto	l3190
  5238  0E5D                     u2600:	
  5239  0E5D                     l3188:	
  5240  0E5D  09A6               	comf	___awmod@dividend,f
  5241  0E5E  09A7               	comf	___awmod@dividend+1,f
  5242  0E5F  0AA6               	incf	___awmod@dividend,f
  5243  0E60  1903               	skipnz
  5244  0E61  0AA7               	incf	___awmod@dividend+1,f
  5245  0E62                     l3190:	
  5246  0E62  0827               	movf	___awmod@dividend+1,w
  5247  0E63  00A5               	movwf	?___awmod+1
  5248  0E64  0826               	movf	___awmod@dividend,w
  5249  0E65  00A4               	movwf	?___awmod
  5250  0E66                     l600:	
  5251  0E66  0008               	return
  5252  0E67                     __end_of___awmod:	
  5253                           
  5254                           	psect	text19
  5255  0F2C                     __ptext19:	
  5256 ;; *************** function ___awdiv *****************
  5257 ;; Defined at:
  5258 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  divisor         2   11[BANK0 ] int 
  5261 ;;  dividend        2   13[BANK0 ] int 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  quotient        2   18[BANK0 ] int 
  5264 ;;  sign            1   17[BANK0 ] unsigned char 
  5265 ;;  counter         1   16[BANK0 ] unsigned char 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  2   11[BANK0 ] int 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5275 ;;      Params:         0       4       0       0       0
  5276 ;;      Locals:         0       4       0       0       0
  5277 ;;      Temps:          0       1       0       0       0
  5278 ;;      Totals:         0       9       0       0       0
  5279 ;;Total ram usage:        9 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    3
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_GetDigits
  5286 ;;		_map
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function ___awdiv
  5292  0F2C                     ___awdiv:	
  5293  0F2C                     l3112:	
  5294                           ;incstack = 0
  5295                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5296                           
  5297  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  5298  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  5299  0F2E  01B1               	clrf	___awdiv@sign
  5300  0F2F                     l3114:	
  5301  0F2F  1FAC               	btfss	___awdiv@divisor+1,7
  5302  0F30  2F32               	goto	u2421
  5303  0F31  2F33               	goto	u2420
  5304  0F32                     u2421:	
  5305  0F32  2F3A               	goto	l3120
  5306  0F33                     u2420:	
  5307  0F33                     l3116:	
  5308  0F33  09AB               	comf	___awdiv@divisor,f
  5309  0F34  09AC               	comf	___awdiv@divisor+1,f
  5310  0F35  0AAB               	incf	___awdiv@divisor,f
  5311  0F36  1903               	skipnz
  5312  0F37  0AAC               	incf	___awdiv@divisor+1,f
  5313  0F38                     l3118:	
  5314  0F38  01B1               	clrf	___awdiv@sign
  5315  0F39  0AB1               	incf	___awdiv@sign,f
  5316  0F3A                     l3120:	
  5317  0F3A  1FAE               	btfss	___awdiv@dividend+1,7
  5318  0F3B  2F3D               	goto	u2431
  5319  0F3C  2F3E               	goto	u2430
  5320  0F3D                     u2431:	
  5321  0F3D  2F47               	goto	l3126
  5322  0F3E                     u2430:	
  5323  0F3E                     l3122:	
  5324  0F3E  09AD               	comf	___awdiv@dividend,f
  5325  0F3F  09AE               	comf	___awdiv@dividend+1,f
  5326  0F40  0AAD               	incf	___awdiv@dividend,f
  5327  0F41  1903               	skipnz
  5328  0F42  0AAE               	incf	___awdiv@dividend+1,f
  5329  0F43                     l3124:	
  5330  0F43  3001               	movlw	1
  5331  0F44  00AF               	movwf	??___awdiv
  5332  0F45  082F               	movf	??___awdiv,w
  5333  0F46  06B1               	xorwf	___awdiv@sign,f
  5334  0F47                     l3126:	
  5335  0F47  01B2               	clrf	___awdiv@quotient
  5336  0F48  01B3               	clrf	___awdiv@quotient+1
  5337  0F49                     l3128:	
  5338  0F49  082B               	movf	___awdiv@divisor,w
  5339  0F4A  042C               	iorwf	___awdiv@divisor+1,w
  5340  0F4B  1903               	btfsc	3,2
  5341  0F4C  2F4E               	goto	u2441
  5342  0F4D  2F4F               	goto	u2440
  5343  0F4E                     u2441:	
  5344  0F4E  2F86               	goto	l3148
  5345  0F4F                     u2440:	
  5346  0F4F                     l3130:	
  5347  0F4F  01B0               	clrf	___awdiv@counter
  5348  0F50  0AB0               	incf	___awdiv@counter,f
  5349  0F51  2F5D               	goto	l3136
  5350  0F52                     l3132:	
  5351  0F52  3001               	movlw	1
  5352  0F53                     u2455:	
  5353  0F53  1003               	clrc
  5354  0F54  0DAB               	rlf	___awdiv@divisor,f
  5355  0F55  0DAC               	rlf	___awdiv@divisor+1,f
  5356  0F56  3EFF               	addlw	-1
  5357  0F57  1D03               	skipz
  5358  0F58  2F53               	goto	u2455
  5359  0F59                     l3134:	
  5360  0F59  3001               	movlw	1
  5361  0F5A  00AF               	movwf	??___awdiv
  5362  0F5B  082F               	movf	??___awdiv,w
  5363  0F5C  07B0               	addwf	___awdiv@counter,f
  5364  0F5D                     l3136:	
  5365  0F5D  1FAC               	btfss	___awdiv@divisor+1,7
  5366  0F5E  2F60               	goto	u2461
  5367  0F5F  2F61               	goto	u2460
  5368  0F60                     u2461:	
  5369  0F60  2F52               	goto	l3132
  5370  0F61                     u2460:	
  5371  0F61                     l3138:	
  5372  0F61  3001               	movlw	1
  5373  0F62                     u2475:	
  5374  0F62  1003               	clrc
  5375  0F63  0DB2               	rlf	___awdiv@quotient,f
  5376  0F64  0DB3               	rlf	___awdiv@quotient+1,f
  5377  0F65  3EFF               	addlw	-1
  5378  0F66  1D03               	skipz
  5379  0F67  2F62               	goto	u2475
  5380  0F68  082C               	movf	___awdiv@divisor+1,w
  5381  0F69  022E               	subwf	___awdiv@dividend+1,w
  5382  0F6A  1D03               	skipz
  5383  0F6B  2F6E               	goto	u2485
  5384  0F6C  082B               	movf	___awdiv@divisor,w
  5385  0F6D  022D               	subwf	___awdiv@dividend,w
  5386  0F6E                     u2485:	
  5387  0F6E  1C03               	skipc
  5388  0F6F  2F71               	goto	u2481
  5389  0F70  2F72               	goto	u2480
  5390  0F71                     u2481:	
  5391  0F71  2F79               	goto	l3144
  5392  0F72                     u2480:	
  5393  0F72                     l3140:	
  5394  0F72  082B               	movf	___awdiv@divisor,w
  5395  0F73  02AD               	subwf	___awdiv@dividend,f
  5396  0F74  082C               	movf	___awdiv@divisor+1,w
  5397  0F75  1C03               	skipc
  5398  0F76  03AE               	decf	___awdiv@dividend+1,f
  5399  0F77  02AE               	subwf	___awdiv@dividend+1,f
  5400  0F78                     l3142:	
  5401  0F78  1432               	bsf	___awdiv@quotient,0
  5402  0F79                     l3144:	
  5403  0F79  3001               	movlw	1
  5404  0F7A                     u2495:	
  5405  0F7A  1003               	clrc
  5406  0F7B  0CAC               	rrf	___awdiv@divisor+1,f
  5407  0F7C  0CAB               	rrf	___awdiv@divisor,f
  5408  0F7D  3EFF               	addlw	-1
  5409  0F7E  1D03               	skipz
  5410  0F7F  2F7A               	goto	u2495
  5411  0F80                     l3146:	
  5412  0F80  3001               	movlw	1
  5413  0F81  02B0               	subwf	___awdiv@counter,f
  5414  0F82  1D03               	btfss	3,2
  5415  0F83  2F85               	goto	u2501
  5416  0F84  2F86               	goto	u2500
  5417  0F85                     u2501:	
  5418  0F85  2F61               	goto	l3138
  5419  0F86                     u2500:	
  5420  0F86                     l3148:	
  5421  0F86  0831               	movf	___awdiv@sign,w
  5422  0F87  1903               	btfsc	3,2
  5423  0F88  2F8A               	goto	u2511
  5424  0F89  2F8B               	goto	u2510
  5425  0F8A                     u2511:	
  5426  0F8A  2F90               	goto	l3152
  5427  0F8B                     u2510:	
  5428  0F8B                     l3150:	
  5429  0F8B  09B2               	comf	___awdiv@quotient,f
  5430  0F8C  09B3               	comf	___awdiv@quotient+1,f
  5431  0F8D  0AB2               	incf	___awdiv@quotient,f
  5432  0F8E  1903               	skipnz
  5433  0F8F  0AB3               	incf	___awdiv@quotient+1,f
  5434  0F90                     l3152:	
  5435  0F90  0833               	movf	___awdiv@quotient+1,w
  5436  0F91  00AC               	movwf	?___awdiv+1
  5437  0F92  0832               	movf	___awdiv@quotient,w
  5438  0F93  00AB               	movwf	?___awdiv
  5439  0F94                     l587:	
  5440  0F94  0008               	return
  5441  0F95                     __end_of___awdiv:	
  5442                           
  5443                           	psect	text20
  5444  0BB4                     __ptext20:	
  5445 ;; *************** function _ADC_Read *****************
  5446 ;; Defined at:
  5447 ;;		line 333 in file "main.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  canale          1    wreg     unsigned char 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;  canale          1    7[BANK0 ] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  2    4[BANK0 ] int 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       2       0       0       0
  5462 ;;      Locals:         0       1       0       0       0
  5463 ;;      Temps:          0       1       0       0       0
  5464 ;;      Totals:         0       4       0       0       0
  5465 ;;Total ram usage:        4 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    3
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_main
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           
  5476                           ;psect for function _ADC_Read
  5477  0BB4                     _ADC_Read:	
  5478                           
  5479                           ;incstack = 0
  5480                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5481                           ;ADC_Read@canale stored from wreg
  5482  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  5483  0BB5  1303               	bcf	3,6	;RP1=0, select bank0
  5484  0BB6  00A7               	movwf	ADC_Read@canale
  5485  0BB7                     l3324:	
  5486                           
  5487                           ;main.c: 333: int ADC_Read(char canale);main.c: 334: {;main.c: 335:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5488  0BB7  0827               	movf	ADC_Read@canale,w
  5489  0BB8  00A6               	movwf	??_ADC_Read
  5490  0BB9  3002               	movlw	2
  5491  0BBA                     u2715:	
  5492  0BBA  1003               	clrc
  5493  0BBB  0DA6               	rlf	??_ADC_Read,f
  5494  0BBC  3EFF               	addlw	-1
  5495  0BBD  1D03               	skipz
  5496  0BBE  2BBA               	goto	u2715
  5497  0BBF  1003               	clrc
  5498  0BC0  0D26               	rlf	??_ADC_Read,w
  5499  0BC1  3801               	iorlw	1
  5500  0BC2  009F               	movwf	31	;volatile
  5501  0BC3                     l3326:	
  5502                           
  5503                           ;main.c: 336:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5504  0BC3  3004               	movlw	4
  5505  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  5506  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  5507  0BC6  00A6               	movwf	??_ADC_Read
  5508  0BC7                     u3017:	
  5509  0BC7  0BA6               	decfsz	??_ADC_Read,f
  5510  0BC8  2BC7               	goto	u3017
  5511  0BC9  0000               	nop
  5512  0BCA                     l3328:	
  5513                           
  5514                           ;main.c: 337:     GO_nDONE = 1;
  5515  0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  5516  0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  5517  0BCC  151F               	bsf	31,2	;volatile
  5518  0BCD                     l263:	
  5519                           ;main.c: 339:         ;
  5520                           
  5521                           
  5522                           ;main.c: 338:     while (GO_nDONE)
  5523  0BCD  191F               	btfsc	31,2	;volatile
  5524  0BCE  2BD0               	goto	u2721
  5525  0BCF  2BD1               	goto	u2720
  5526  0BD0                     u2721:	
  5527  0BD0  2BCD               	goto	l263
  5528  0BD1                     u2720:	
  5529  0BD1                     l3330:	
  5530                           
  5531                           ;main.c: 340:     return ADRESL + (ADRESH << 8);
  5532  0BD1  081E               	movf	30,w	;volatile
  5533  0BD2  00A5               	movwf	?_ADC_Read+1
  5534  0BD3  1683               	bsf	3,5	;RP0=1, select bank1
  5535  0BD4  1303               	bcf	3,6	;RP1=0, select bank1
  5536  0BD5  081E               	movf	30,w	;volatile
  5537  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  5538  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  5539  0BD8  00A4               	movwf	?_ADC_Read
  5540  0BD9                     l266:	
  5541  0BD9  0008               	return
  5542  0BDA                     __end_of_ADC_Read:	
  5543                           
  5544                           	psect	text21
  5545  0DB4                     __ptext21:	
  5546 ;; *************** function _ISR *****************
  5547 ;; Defined at:
  5548 ;;		line 511 in file "main.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5562 ;;      Params:         0       0       0       0       0
  5563 ;;      Locals:         0       0       0       0       0
  5564 ;;      Temps:          0       4       0       0       0
  5565 ;;      Totals:         0       4       0       0       0
  5566 ;;Total ram usage:        4 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    2
  5569 ;; This function calls:
  5570 ;;		_UART_Read
  5571 ;;		_conteggioVeicoli
  5572 ;; This function is called by:
  5573 ;;		Interrupt level 1
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           
  5578                           ;psect for function _ISR
  5579  0DB4                     _ISR:	
  5580  0DB4                     i1l2676:	
  5581                           
  5582                           ;main.c: 514:     if (RCIF && readGateway.Bit == 0)
  5583  0DB4  1E8C               	btfss	12,5	;volatile
  5584  0DB5  2DB7               	goto	u207_21
  5585  0DB6  2DB8               	goto	u207_20
  5586  0DB7                     u207_21:	
  5587  0DB7  2DC1               	goto	i1l2684
  5588  0DB8                     u207_20:	
  5589  0DB8                     i1l2678:	
  5590  0DB8  1858               	btfsc	_readGateway,0
  5591  0DB9  2DBB               	goto	u208_21
  5592  0DBA  2DBC               	goto	u208_20
  5593  0DBB                     u208_21:	
  5594  0DBB  2DC1               	goto	i1l2684
  5595  0DBC                     u208_20:	
  5596  0DBC                     i1l2680:	
  5597                           
  5598                           ;main.c: 515:     {;main.c: 516:         readGateway.Bit = 1;
  5599  0DBC  1458               	bsf	_readGateway,0
  5600                           
  5601                           ;main.c: 517:         readGatewayDone.Bit = 0;
  5602  0DBD  1059               	bcf	_readGatewayDone,0
  5603                           
  5604                           ;main.c: 518:         readGatewayDone.Timeout = 0;
  5605  0DBE  10D9               	bcf	_readGatewayDone,1
  5606  0DBF                     i1l2682:	
  5607                           
  5608                           ;main.c: 519:         dataFromGatewayIndex = 0;
  5609  0DBF  01D3               	clrf	_dataFromGatewayIndex
  5610                           
  5611                           ;main.c: 520:         timerReadFromGateway = 0;
  5612  0DC0  01D2               	clrf	_timerReadFromGateway
  5613  0DC1                     i1l2684:	
  5614                           
  5615                           ;main.c: 522:     if (RCIF && readGateway.Bit == 1)
  5616  0DC1  1E8C               	btfss	12,5	;volatile
  5617  0DC2  2DC4               	goto	u209_21
  5618  0DC3  2DC5               	goto	u209_20
  5619  0DC4                     u209_21:	
  5620  0DC4  2DDC               	goto	i1l2694
  5621  0DC5                     u209_20:	
  5622  0DC5                     i1l2686:	
  5623  0DC5  1C58               	btfss	_readGateway,0
  5624  0DC6  2DC8               	goto	u210_21
  5625  0DC7  2DC9               	goto	u210_20
  5626  0DC8                     u210_21:	
  5627  0DC8  2DDC               	goto	i1l2694
  5628  0DC9                     u210_20:	
  5629  0DC9                     i1l2688:	
  5630                           
  5631                           ;main.c: 523:     {;main.c: 524:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  5632  0DC9  120A  118A  27F7  120A  158A  	fcall	_UART_Read
  5633  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  5634  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  5635  0DD0  00A0               	movwf	??_ISR
  5636  0DD1  0853               	movf	_dataFromGatewayIndex,w
  5637  0DD2  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  5638  0DD3  0084               	movwf	4
  5639  0DD4  0820               	movf	??_ISR,w
  5640  0DD5  1383               	bcf	3,7	;select IRP bank1
  5641  0DD6  0080               	movwf	0
  5642  0DD7                     i1l2690:	
  5643                           
  5644                           ;main.c: 525:         dataFromGatewayIndex++;
  5645  0DD7  3001               	movlw	1
  5646  0DD8  00A0               	movwf	??_ISR
  5647  0DD9  0820               	movf	??_ISR,w
  5648  0DDA  07D3               	addwf	_dataFromGatewayIndex,f
  5649  0DDB                     i1l2692:	
  5650                           
  5651                           ;main.c: 526:         timerReadFromGateway = 0;
  5652  0DDB  01D2               	clrf	_timerReadFromGateway
  5653  0DDC                     i1l2694:	
  5654                           
  5655                           ;main.c: 531:     if (TMR0IF)
  5656  0DDC  1D0B               	btfss	11,2	;volatile
  5657  0DDD  2DDF               	goto	u211_21
  5658  0DDE  2DE0               	goto	u211_20
  5659  0DDF                     u211_21:	
  5660  0DDF  2DEA               	goto	i1l2702
  5661  0DE0                     u211_20:	
  5662  0DE0                     i1l2696:	
  5663                           
  5664                           ;main.c: 532:     {;main.c: 533:         TMR0IF = 0;
  5665  0DE0  110B               	bcf	11,2	;volatile
  5666  0DE1                     i1l2698:	
  5667                           
  5668                           ;main.c: 534:         conteggioVeicoli();
  5669  0DE1  120A  158A  26C7  120A  158A  	fcall	_conteggioVeicoli
  5670  0DE6                     i1l2700:	
  5671                           
  5672                           ;main.c: 535:         TMR0 = 6;
  5673  0DE6  3006               	movlw	6
  5674  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  5675  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  5676  0DE9  0081               	movwf	1	;volatile
  5677  0DEA                     i1l2702:	
  5678                           
  5679                           ;main.c: 538:     if (TMR1IF)
  5680  0DEA  1C0C               	btfss	12,0	;volatile
  5681  0DEB  2DED               	goto	u212_21
  5682  0DEC  2DEE               	goto	u212_20
  5683  0DED                     u212_21:	
  5684  0DED  2E03               	goto	i1l348
  5685  0DEE                     u212_20:	
  5686  0DEE                     i1l2704:	
  5687                           
  5688                           ;main.c: 539:     {;main.c: 540:         TMR1IF = 0;
  5689  0DEE  100C               	bcf	12,0	;volatile
  5690  0DEF                     i1l2706:	
  5691                           
  5692                           ;main.c: 541:         count_lux++;
  5693  0DEF  3001               	movlw	1
  5694  0DF0  00A0               	movwf	??_ISR
  5695  0DF1  0820               	movf	??_ISR,w
  5696  0DF2  07D4               	addwf	_count_lux,f
  5697  0DF3                     i1l2708:	
  5698                           
  5699                           ;main.c: 543:         if (count_lux >= 20)
  5700  0DF3  3014               	movlw	20
  5701  0DF4  0254               	subwf	_count_lux,w
  5702  0DF5  1C03               	skipc
  5703  0DF6  2DF8               	goto	u213_21
  5704  0DF7  2DF9               	goto	u213_20
  5705  0DF8                     u213_21:	
  5706  0DF8  2DFF               	goto	i1l2716
  5707  0DF9                     u213_20:	
  5708  0DF9                     i1l2710:	
  5709                           
  5710                           ;main.c: 544:         {;main.c: 545:             secondPassed.Bit = 1;
  5711  0DF9  1457               	bsf	_secondPassed,0
  5712  0DFA                     i1l2712:	
  5713                           
  5714                           ;main.c: 546:             count_lux = 0;
  5715  0DFA  01D4               	clrf	_count_lux
  5716  0DFB                     i1l2714:	
  5717                           
  5718                           ;main.c: 547:             timerReadFromGateway++;
  5719  0DFB  3001               	movlw	1
  5720  0DFC  00A0               	movwf	??_ISR
  5721  0DFD  0820               	movf	??_ISR,w
  5722  0DFE  07D2               	addwf	_timerReadFromGateway,f
  5723  0DFF                     i1l2716:	
  5724                           
  5725                           ;main.c: 550:         TMR1H = 60;
  5726  0DFF  303C               	movlw	60
  5727  0E00  008F               	movwf	15	;volatile
  5728  0E01                     i1l2718:	
  5729                           
  5730                           ;main.c: 551:         TMR1L = 176;
  5731  0E01  30B0               	movlw	176
  5732  0E02  008E               	movwf	14	;volatile
  5733  0E03                     i1l348:	
  5734  0E03  0823               	movf	??_ISR+3,w
  5735  0E04  008A               	movwf	10
  5736  0E05  0822               	movf	??_ISR+2,w
  5737  0E06  0084               	movwf	4
  5738  0E07  0E21               	swapf	(??_ISR+1)^0,w
  5739  0E08  0083               	movwf	3
  5740  0E09  0EFE               	swapf	btemp,f
  5741  0E0A  0E7E               	swapf	btemp,w
  5742  0E0B  0009               	retfie
  5743  0E0C                     __end_of_ISR:	
  5744                           
  5745                           	psect	intentry
  5746  0004                     __pintentry:	
  5747                           ;incstack = 0
  5748                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5749                           
  5750  0004                     interrupt_function:	
  5751  007E                     saved_w	set	btemp
  5752  0004  00FE               	movwf	btemp
  5753  0005  0E03               	swapf	3,w
  5754  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5755  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5756  0008  00A1               	movwf	??_ISR+1
  5757  0009  0804               	movf	4,w
  5758  000A  00A2               	movwf	??_ISR+2
  5759  000B  080A               	movf	10,w
  5760  000C  00A3               	movwf	??_ISR+3
  5761  000D  120A  158A  2DB4   	ljmp	_ISR
  5762                           
  5763                           	psect	text22
  5764  0EC7                     __ptext22:	
  5765 ;; *************** function _conteggioVeicoli *****************
  5766 ;; Defined at:
  5767 ;;		line 391 in file "main.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;		None
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  i               1   13[COMMON] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      void 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5781 ;;      Params:         0       0       0       0       0
  5782 ;;      Locals:         1       0       0       0       0
  5783 ;;      Temps:          4       0       0       0       0
  5784 ;;      Totals:         5       0       0       0       0
  5785 ;;Total ram usage:        5 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:    1
  5788 ;; This function calls:
  5789 ;;		_Conteggio
  5790 ;; This function is called by:
  5791 ;;		_ISR
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           
  5796                           ;psect for function _conteggioVeicoli
  5797  0EC7                     _conteggioVeicoli:	
  5798  0EC7                     i1l2454:	
  5799                           ;incstack = 0
  5800                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5801                           
  5802                           
  5803                           ;main.c: 393:     RoadsSensors[0] = PORTBbits.RB3;
  5804  0EC7  3000               	movlw	0
  5805  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0ECA  1986               	btfsc	6,3	;volatile
  5808  0ECB  3001               	movlw	1
  5809  0ECC  1683               	bsf	3,5	;RP0=1, select bank1
  5810  0ECD  1303               	bcf	3,6	;RP1=0, select bank1
  5811  0ECE  00A0               	movwf	_RoadsSensors^(0+128)
  5812                           
  5813                           ;main.c: 394:     RoadsSensors[1] = PORTBbits.RB4;
  5814  0ECF  3000               	movlw	0
  5815  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  5817  0ED2  1A06               	btfsc	6,4	;volatile
  5818  0ED3  3001               	movlw	1
  5819  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  5820  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  5821  0ED6  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  5822                           
  5823                           ;main.c: 395:     RoadsSensors[2] = PORTBbits.RB5;
  5824  0ED7  3000               	movlw	0
  5825  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  5826  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  5827  0EDA  1A86               	btfsc	6,5	;volatile
  5828  0EDB  3001               	movlw	1
  5829  0EDC  1683               	bsf	3,5	;RP0=1, select bank1
  5830  0EDD  1303               	bcf	3,6	;RP1=0, select bank1
  5831  0EDE  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  5832                           
  5833                           ;main.c: 396:     RoadsSensors[3] = PORTAbits.RA5;
  5834  0EDF  3000               	movlw	0
  5835  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  5836  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  5837  0EE2  1A85               	btfsc	5,5	;volatile
  5838  0EE3  3001               	movlw	1
  5839  0EE4  1683               	bsf	3,5	;RP0=1, select bank1
  5840  0EE5  1303               	bcf	3,6	;RP1=0, select bank1
  5841  0EE6  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  5842  0EE7                     i1l2456:	
  5843                           
  5844                           ;main.c: 398:     for (unsigned char i = 0; i < 4; i++)
  5845  0EE7  01FD               	clrf	conteggioVeicoli@i
  5846  0EE8                     i1l2460:	
  5847                           
  5848                           ;main.c: 399:     {;main.c: 400:         if (!RoadsSensors[i])
  5849  0EE8  087D               	movf	conteggioVeicoli@i,w
  5850  0EE9  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5851  0EEA  0084               	movwf	4
  5852  0EEB  1383               	bcf	3,7	;select IRP bank1
  5853  0EEC  0800               	movf	0,w
  5854  0EED  1D03               	btfss	3,2
  5855  0EEE  2EF0               	goto	u181_21
  5856  0EEF  2EF1               	goto	u181_20
  5857  0EF0                     u181_21:	
  5858  0EF0  2EFA               	goto	i1l2464
  5859  0EF1                     u181_20:	
  5860  0EF1                     i1l2462:	
  5861                           
  5862                           ;main.c: 401:         {;main.c: 402:             count++;
  5863  0EF1  3001               	movlw	1
  5864  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  5865  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  5866  0EF4  07CD               	addwf	_count,f
  5867  0EF5  1803               	skipnc
  5868  0EF6  0ACE               	incf	_count+1,f
  5869  0EF7  3000               	movlw	0
  5870  0EF8  07CE               	addwf	_count+1,f
  5871                           
  5872                           ;main.c: 403:         }
  5873  0EF9  2F21               	goto	i1l2470
  5874  0EFA                     i1l2464:	
  5875  0EFA  087D               	movf	conteggioVeicoli@i,w
  5876  0EFB  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5877  0EFC  0084               	movwf	4
  5878  0EFD  0800               	movf	0,w
  5879  0EFE  1903               	btfsc	3,2
  5880  0EFF  2F01               	goto	u182_21
  5881  0F00  2F02               	goto	u182_20
  5882  0F01                     u182_21:	
  5883  0F01  2F21               	goto	i1l2470
  5884  0F02                     u182_20:	
  5885  0F02                     i1l2466:	
  5886                           
  5887                           ;main.c: 405:         {;main.c: 406:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  5888  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  5889  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  5890  0F04  084E               	movf	_count+1,w
  5891  0F05  00F1               	movwf	Conteggio@_count+1
  5892  0F06  084D               	movf	_count,w
  5893  0F07  00F0               	movwf	Conteggio@_count
  5894  0F08  305E               	movlw	(low (_motorcycle| 0))& (0+255)
  5895  0F09  00F9               	movwf	??_conteggioVeicoli
  5896  0F0A  0879               	movf	??_conteggioVeicoli,w
  5897  0F0B  00F2               	movwf	Conteggio@_motorcycle
  5898  0F0C  305A               	movlw	(low (_car| 0))& (0+255)
  5899  0F0D  00FA               	movwf	??_conteggioVeicoli+1
  5900  0F0E  087A               	movf	??_conteggioVeicoli+1,w
  5901  0F0F  00F3               	movwf	Conteggio@_car
  5902  0F10  30CF               	movlw	(low (_truck| 0))& (0+255)
  5903  0F11  00FB               	movwf	??_conteggioVeicoli+2
  5904  0F12  087B               	movf	??_conteggioVeicoli+2,w
  5905  0F13  00F4               	movwf	Conteggio@_truck
  5906  0F14  087D               	movf	conteggioVeicoli@i,w
  5907  0F15  00FC               	movwf	??_conteggioVeicoli+3
  5908  0F16  087C               	movf	??_conteggioVeicoli+3,w
  5909  0F17  00F5               	movwf	Conteggio@index
  5910  0F18  120A  158A  24C0  120A  158A  	fcall	_Conteggio
  5911  0F1D                     i1l2468:	
  5912                           
  5913                           ;main.c: 407:             count = 0;
  5914  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  5915  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  5916  0F1F  01CD               	clrf	_count
  5917  0F20  01CE               	clrf	_count+1
  5918  0F21                     i1l2470:	
  5919                           
  5920                           ;main.c: 409:     }
  5921  0F21  3001               	movlw	1
  5922  0F22  00F9               	movwf	??_conteggioVeicoli
  5923  0F23  0879               	movf	??_conteggioVeicoli,w
  5924  0F24  07FD               	addwf	conteggioVeicoli@i,f
  5925  0F25                     i1l2472:	
  5926  0F25  3004               	movlw	4
  5927  0F26  027D               	subwf	conteggioVeicoli@i,w
  5928  0F27  1C03               	skipc
  5929  0F28  2F2A               	goto	u183_21
  5930  0F29  2F2B               	goto	u183_20
  5931  0F2A                     u183_21:	
  5932  0F2A  2EE8               	goto	i1l2460
  5933  0F2B                     u183_20:	
  5934  0F2B                     i1l300:	
  5935  0F2B  0008               	return
  5936  0F2C                     __end_of_conteggioVeicoli:	
  5937                           
  5938                           	psect	text23
  5939  0CC0                     __ptext23:	
  5940 ;; *************** function _Conteggio *****************
  5941 ;; Defined at:
  5942 ;;		line 117 in file "./CustomLib/TrafficLight.h"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  _count          2    0[COMMON] unsigned int 
  5945 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5946 ;;		 -> motorcycle(4), 
  5947 ;;  _car            1    3[COMMON] PTR unsigned char 
  5948 ;;		 -> car(4), 
  5949 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5950 ;;		 -> truck(4), 
  5951 ;;  index           1    5[COMMON] unsigned char 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;		None
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5963 ;;      Params:         6       0       0       0       0
  5964 ;;      Locals:         0       0       0       0       0
  5965 ;;      Temps:          3       0       0       0       0
  5966 ;;      Totals:         9       0       0       0       0
  5967 ;;Total ram usage:        9 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_conteggioVeicoli
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _Conteggio
  5978  0CC0                     _Conteggio:	
  5979  0CC0                     i1l2060:	
  5980                           ;incstack = 0
  5981                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5982                           
  5983                           
  5984                           ;./CustomLib/TrafficLight.h: 117: void Conteggio(unsigned int _count, unsigned char _mot
      +                          orcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custo
      +                          mLib/TrafficLight.h: 118: {;./CustomLib/TrafficLight.h: 119:     if (_count >= 500)
  5985  0CC0  3001               	movlw	1
  5986  0CC1  0271               	subwf	Conteggio@_count+1,w
  5987  0CC2  30F4               	movlw	244
  5988  0CC3  1903               	skipnz
  5989  0CC4  0270               	subwf	Conteggio@_count,w
  5990  0CC5  1C03               	skipc
  5991  0CC6  2CC8               	goto	u125_21
  5992  0CC7  2CC9               	goto	u125_20
  5993  0CC8                     u125_21:	
  5994  0CC8  2CD9               	goto	i1l2064
  5995  0CC9                     u125_20:	
  5996  0CC9                     i1l2062:	
  5997                           
  5998                           ;./CustomLib/TrafficLight.h: 120:     {;./CustomLib/TrafficLight.h: 121:         _motorc
      +                          ycle[index]=_motorcycle[index]+1;
  5999  0CC9  0875               	movf	Conteggio@index,w
  6000  0CCA  0772               	addwf	Conteggio@_motorcycle,w
  6001  0CCB  00F6               	movwf	??_Conteggio
  6002  0CCC  0876               	movf	??_Conteggio,w
  6003  0CCD  0084               	movwf	4
  6004  0CCE  1383               	bcf	3,7	;select IRP bank0
  6005  0CCF  0800               	movf	0,w
  6006  0CD0  3E01               	addlw	1
  6007  0CD1  00F7               	movwf	??_Conteggio+1
  6008  0CD2  0875               	movf	Conteggio@index,w
  6009  0CD3  0772               	addwf	Conteggio@_motorcycle,w
  6010  0CD4  00F8               	movwf	??_Conteggio+2
  6011  0CD5  0878               	movf	??_Conteggio+2,w
  6012  0CD6  0084               	movwf	4
  6013  0CD7  0877               	movf	??_Conteggio+1,w
  6014  0CD8  0080               	movwf	0
  6015  0CD9                     i1l2064:	
  6016                           
  6017                           ;./CustomLib/TrafficLight.h: 123:     if (_count >= 1500)
  6018  0CD9  3005               	movlw	5
  6019  0CDA  0271               	subwf	Conteggio@_count+1,w
  6020  0CDB  30DC               	movlw	220
  6021  0CDC  1903               	skipnz
  6022  0CDD  0270               	subwf	Conteggio@_count,w
  6023  0CDE  1C03               	skipc
  6024  0CDF  2CE1               	goto	u126_21
  6025  0CE0  2CE2               	goto	u126_20
  6026  0CE1                     u126_21:	
  6027  0CE1  2CF2               	goto	i1l2068
  6028  0CE2                     u126_20:	
  6029  0CE2                     i1l2066:	
  6030                           
  6031                           ;./CustomLib/TrafficLight.h: 124:     {;./CustomLib/TrafficLight.h: 125:         _car[in
      +                          dex]=_car[index]+1;
  6032  0CE2  0875               	movf	Conteggio@index,w
  6033  0CE3  0773               	addwf	Conteggio@_car,w
  6034  0CE4  00F6               	movwf	??_Conteggio
  6035  0CE5  0876               	movf	??_Conteggio,w
  6036  0CE6  0084               	movwf	4
  6037  0CE7  1383               	bcf	3,7	;select IRP bank0
  6038  0CE8  0800               	movf	0,w
  6039  0CE9  3E01               	addlw	1
  6040  0CEA  00F7               	movwf	??_Conteggio+1
  6041  0CEB  0875               	movf	Conteggio@index,w
  6042  0CEC  0773               	addwf	Conteggio@_car,w
  6043  0CED  00F8               	movwf	??_Conteggio+2
  6044  0CEE  0878               	movf	??_Conteggio+2,w
  6045  0CEF  0084               	movwf	4
  6046  0CF0  0877               	movf	??_Conteggio+1,w
  6047  0CF1  0080               	movwf	0
  6048  0CF2                     i1l2068:	
  6049                           
  6050                           ;./CustomLib/TrafficLight.h: 127:     if (_count >= 3000)
  6051  0CF2  300B               	movlw	11
  6052  0CF3  0271               	subwf	Conteggio@_count+1,w
  6053  0CF4  30B8               	movlw	184
  6054  0CF5  1903               	skipnz
  6055  0CF6  0270               	subwf	Conteggio@_count,w
  6056  0CF7  1C03               	skipc
  6057  0CF8  2CFA               	goto	u127_21
  6058  0CF9  2CFB               	goto	u127_20
  6059  0CFA                     u127_21:	
  6060  0CFA  2D0B               	goto	i1l164
  6061  0CFB                     u127_20:	
  6062  0CFB                     i1l2070:	
  6063                           
  6064                           ;./CustomLib/TrafficLight.h: 128:     {;./CustomLib/TrafficLight.h: 129:         _truck[
      +                          index]=_truck[index]+1;
  6065  0CFB  0875               	movf	Conteggio@index,w
  6066  0CFC  0774               	addwf	Conteggio@_truck,w
  6067  0CFD  00F6               	movwf	??_Conteggio
  6068  0CFE  0876               	movf	??_Conteggio,w
  6069  0CFF  0084               	movwf	4
  6070  0D00  1383               	bcf	3,7	;select IRP bank0
  6071  0D01  0800               	movf	0,w
  6072  0D02  3E01               	addlw	1
  6073  0D03  00F7               	movwf	??_Conteggio+1
  6074  0D04  0875               	movf	Conteggio@index,w
  6075  0D05  0774               	addwf	Conteggio@_truck,w
  6076  0D06  00F8               	movwf	??_Conteggio+2
  6077  0D07  0878               	movf	??_Conteggio+2,w
  6078  0D08  0084               	movwf	4
  6079  0D09  0877               	movf	??_Conteggio+1,w
  6080  0D0A  0080               	movwf	0
  6081  0D0B                     i1l164:	
  6082  0D0B  0008               	return
  6083  0D0C                     __end_of_Conteggio:	
  6084                           
  6085                           	psect	text24
  6086  07F7                     __ptext24:	
  6087 ;; *************** function _UART_Read *****************
  6088 ;; Defined at:
  6089 ;;		line 372 in file "main.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      unsigned char 
  6096 ;; Registers used:
  6097 ;;		wreg
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6103 ;;      Params:         0       0       0       0       0
  6104 ;;      Locals:         0       0       0       0       0
  6105 ;;      Temps:          0       0       0       0       0
  6106 ;;      Totals:         0       0       0       0       0
  6107 ;;Total ram usage:        0 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; This function calls:
  6110 ;;		Nothing
  6111 ;; This function is called by:
  6112 ;;		_ISR
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function _UART_Read
  6118  07F7                     _UART_Read:	
  6119  07F7                     i1l2448:	
  6120                           ;incstack = 0
  6121                           ; Regs used in _UART_Read: [wreg]
  6122                           
  6123  07F7                     i1l284:	
  6124                           ;main.c: 375:         ;
  6125                           
  6126                           
  6127                           ;main.c: 374:     while (!RCIF)
  6128  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  6129  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  6130  07F9  1E8C               	btfss	12,5	;volatile
  6131  07FA  2FFC               	goto	u180_21
  6132  07FB  2FFD               	goto	u180_20
  6133  07FC                     u180_21:	
  6134  07FC  2FF7               	goto	i1l284
  6135  07FD                     u180_20:	
  6136  07FD                     i1l286:	
  6137                           
  6138                           ;main.c: 376:     RCIF = 0;
  6139  07FD  128C               	bcf	12,5	;volatile
  6140  07FE                     i1l2450:	
  6141                           
  6142                           ;main.c: 377:     return RCREG;
  6143  07FE  081A               	movf	26,w	;volatile
  6144  07FF                     i1l287:	
  6145  07FF  0008               	return
  6146  0800                     __end_of_UART_Read:	
  6147  007E                     btemp	set	126	;btemp
  6148  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        4
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      70
    BANK1            80      8      65
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    DigitsArr	PTR struct .[2] size(1) Largest target is 3
		 -> digits1(BANK1[3]), digits0(BANK1[3]), 

    Semafori	PTR struct .[2] size(1) Largest target is 14
		 -> s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    GetDigits@_digits	PTR PTR struct . size(1) Largest target is 2
		 -> DigitsArr(BANK0[2]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->_SetDisplay
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   22857
                                             32 BANK0      9     9      0
                                              0 BANK1      8     8      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                           _init_ADC
                       _luciSemaforo
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    5528
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2616
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     183
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         13    13      0     668
                                              4 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  3     3      0    3194
                                             11 BANK0      3     3      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           7     3      4    1514
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    10     9      1    1618
                                             12 BANK0     10     9      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    12     5      7    1395
                                              4 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            9     6      3    3993
                                             20 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     721
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
     ___bmul
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _UpdateTimes
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      8      41       7       81.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      95      12        0.0%
ABS                  0      0      95       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jul 13 16:14:36 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                      ___awdiv@sign 0031                                _s0 00C1  
                              _s1 00B3                                fsr 0004               ___wmul@multiplicand 0026  
                  _GetDigits$1189 003A                 luciSemaforo@index 0027                       __CFG_LVP$ON 0000  
                             l103 0555                               l112 05CE                               l125 0FFF  
                             l109 05A6                               l221 030A                               l135 0CBF  
                             l223 008B                               l152 0EC6                               l313 0D2F  
                             l306 0D10                               l250 03B9                               l147 0685  
                             l315 0D33                               l324 0DB3                               l260 0B9C  
                             l316 0D37                               l308 0D14                               l309 0D18  
                             l317 0D5E                               l253 042D                               l237 0215  
                             l158 0506                               l263 0BCD                               l167 0C3F  
                             l600 0E66                               l272 0B82                               l266 0BD9  
                             l338 0732                               l434 07DE                               l274 0B86  
                             l275 0B89                               l460 0BB3                               l436 07F6  
                             l292 0C0A                               l509 07CF                               l269 0C79  
                             l587 0F94                               l499 0747                      __CFG_CPD$OFF 0000  
                             _ISR 0DB4                               _car 005A                               _map 0C0B  
                             fsr0 0004                               indf 0000                      ___awmod@sign 002A  
                    __CFG_FOSC$HS 0000                              ?_ISR 0070             ??_ShowDigitsOnDisplay 002B  
                            l3000 05BA                              l3010 0C8C                              l3002 05C0  
                            l3012 0C94                              l3100 07A8                              l3004 05CD  
                            l3014 0CA5                              l3030 0D81                              l3102 07B1  
                            l3022 0B82                              l3120 0F3A                              l3112 0F2C  
                            l3016 0CB3                              l3008 0C7D                              l3032 0D84  
                            l3104 07B7                              l3200 0F99                              l3024 0B87  
                            l3130 0F4F                              l3122 0F3E                              l3114 0F2F  
                            l3018 0CBB                              l3026 0D62                              l3106 07BC  
                            l3210 0FEB                              l3050 07E5                              l3140 0F72  
                            l3132 0F52                              l3124 0F43                              l3116 0F33  
                            l3060 0BA1                              l3220 05CF                              l3028 0D63  
                            l3036 0DA3                              l3108 07C7                              l3300 0C48  
                            l3212 0FEF                              l3052 07EC                              l3044 07D0  
                            l3150 0F8B                              l3142 0F78                              l3134 0F59  
                            l3126 0F47                              l3118 0F38                              l3062 0BA5  
                            l3302 0C76                              l3206 0F9A                              l3054 07F2  
                            l3046 07D4                              l3310 0BF0                              l3152 0F90  
                            l3144 0F79                              l3136 0F5D                              l3128 0F49  
                            l3160 0E13                              l3064 0BA9                              l3232 05D4  
                            l3240 0643                              l3080 0756                              l3072 0733  
                            l3304 0C77                              l3216 0FF5                              l3208 0FC8  
                            l3048 07D8                              l3320 0C00                              l3330 0BD1  
                            l3146 0F80                              l3138 0F61                              l3170 0E29  
                            l3162 0E18                              l3066 0BAB                              l3058 0BA0  
                            l3250 066A                              l3234 05F9                              l3242 0656  
                            l3226 05D2                              l3090 077A                              l3082 075A  
                            l3074 0736                              l3306 0C78                              l3218 0FF9  
                            l3322 0C04                              l3410 0049                              l3324 0BB7  
                            l3148 0F86                              l3180 0E45                              l3172 0E2C  
                            l3164 0E1A                              l3156 0E0C                              l3068 0BB2  
                            l3244 065A                              l3236 061E                              l3092 077E  
                            l3084 0762                              l3076 073A                              l3316 0BF1  
                            l3308 0BDD                              l3500 02CD                              l3420 0055  
                            l3412 004B                              l3404 0040                              l3326 0BC3  
                            l3190 0E62                              l3182 0E4B                              l3174 0E33  
                            l3166 0E1E                              l3158 0E0F                              l3246 0660  
                            l3270 0EC1                              l3262 0E72                              l3094 0787  
                            l3086 076A                              l3078 074B                              l3342 0D3B  
                            l3334 0D0F                              l3318 0BFA                              l3510 02E2  
                            l3430 0081                              l3422 0057                              l3414 004D  
                            l3406 0046                              l3328 0BCA                              l3184 0E52  
                            l3176 0E37                              l3168 0E23                              l3280 046F  
                            l3248 0664                              l3264 0E81                              l3256 0E6A  
                            l3096 0799                              l3088 076D                              l3512 02E8  
                            l3504 02D4                              l3520 02F5                              l3440 0086  
                            l3432 0082                              l3424 005C                              l3416 0051  
                            l3408 0047                              l3178 0E3B                              l3186 0E58  
                            l3282 04CC                              l3274 043D                              l3266 0E8F  
                            l3258 0E6B                              l3098 07A7                              l3194 0F98  
                            l3290 0B8A                              l3338 0D1C                              l3346 0D4E  
                            l3530 0317                              l3522 030F                              l3514 02EB  
                            l3506 02D9                              l3450 0092                              l3434 0083  
                            l3426 0067                              l3418 0053                              l3188 0E5D  
                            l3284 04DF                              l3276 043E                              l3268 0EA2  
                            l3380 06C5                              l3372 068A                              l3292 0B8E  
                            l3540 0330                              l3532 0319                              l3524 0310  
                            l3516 02F1                              l3452 00D9                              l3460 01AE  
                            l3444 008D                              l3436 0084                              l3428 007E  
                            l3278 0453                              l3390 0716                              l3382 06E0  
                            l3374 0695                              l3366 0686                              l3294 0B91  
                            l3286 0C0B                              l3550 0399                              l3526 0311  
                            l3534 0323                              l3454 0120                              l3462 01C3  
                            l3438 0085                              l3392 071C                              l3376 06B0  
                            l3296 0B95                              l3560 03C9                              l3552 03A5  
                            l3544 0337                              l3536 0329                              l3528 0313  
                            l3472 01DC                              l3464 01CB                              l3456 0167  
                            l3378 06BB                              l3386 06FD                              l3298 0C40  
                            l3570 0421                              l3562 03DC                              l3554 03AD  
                            l3546 034A                              l3538 032D                              l3490 0217  
                            l3474 01EB                              l3466 01D8                              l3388 0710  
                            l2940 050A                              l3572 0427                              l3556 03AE  
                            l3548 0393                              l3564 0413                              l3492 02A5  
                            l3484 0201                              l3476 01F1                              l3820 01B5  
                            l3830 0705                              l2942 0519                              l3574 042B  
                            l3558 03B3                              l3822 0302                              l3494 02B0  
                            l3486 0206                              l3478 01FE                              ?_map 0034  
                            l3832 0DAB                              l3824 0D24                              l2960 052E  
                            l2944 0526                              l3576 0431                              l3568 041C  
                            l3496 02BD                              l3488 020E                              l3834 064B  
                            l3826 0D43                              l2962 0542                              l2954 052A  
                            l2946 0527                              l3578 0435                              l3498 02CA  
                            l3828 0D56                              l2972 0564                              l2964 0548  
                            l2948 0528                              l2990 0593                              l2982 057B  
                            l2974 056A                              l2966 055B                              l2992 0599  
                            l2976 0577                              l2968 0563                              l2994 05AC  
                            l2996 05B9                              l2988 057F                              u2200 05A6  
                            u2201 05A5                              u2210 05AC                              u2211 05AB  
                            u2300 0BA5                              u2301 0BA4                              u2205 05A2  
                            u2310 0BB2                              u2230 05CD                              u2311 0BB1  
                            u3007 0B99                              u2231 05CC                              u2400 07B7  
                            u2320 073A                              u2224 05B2                              u2160 0555  
                            u3017 0BC7                              u2401 07B6                              u2321 0739  
                            u2225 05B0                              u2161 0554                              u2145 051C  
                            u2410 07BC                              u2330 074B                              u2170 055B  
                            u2154 053A                              u2250 0B86                              u2411 07BB  
                            u2331 074A                              u2235 05C9                              u2171 055A  
                            u2155 0538                              u2251 0B85                              u2500 0F86  
                            u2420 0F33                              u2340 076A                              u2260 07D8  
                            u2180 0577                              u2501 0F85                              u2421 0F32  
                            u2245 0C9A                              u2341 0769                              u2261 07D7  
                            u2181 0576                              u2165 0551                              u2510 0F8B  
                            u2430 0F3E                              u2511 0F8A                              u2431 0F3D  
                            u2440 0F4F                              u2600 0E5D                              u2520 0E13  
                            u2360 077E                              u2441 0F4E                              u2601 0E5C  
                            u2521 0E12                              u2361 077D                              u2185 0573  
                            u2530 0E1E                              u2610 0FC8                              u2290 07F2  
                            u2194 058B                              u2531 0E1D                              u2355 076F  
                            u2611 0FC7                              u2291 07F1                              u2275 07DF  
                            u2195 0589                              u2460 0F61                              u2540 0E29  
                            u2380 0799                              u2620 0FF5                              u2700 0C0A  
                            u2461 0F60                              u2541 0E28                              u2381 0798  
                            u2621 0FF4                              u2285 07E6                              u2701 0C09  
                            u2630 0FFF                              u2455 0F53                              u2375 0780  
                            u2631 0FFE                              u2615 0FC4                              u2720 0BD1  
                            u2480 0F72                              u2560 0E3B                              u2640 0660  
                            u2800 01D8                              u2721 0BD0                              u2481 0F71  
                            u2561 0E3A                              u2641 065F                              u2385 0795  
                            u2801 01D7                              u2570 0E45                              u2650 066A  
                            u2730 0695                              u2810 01FE                              u2715 0BBA  
                            u2475 0F62                              u2571 0E44                              u2555 0E2D  
                            u2651 0669                              u2731 0694                              u2395 07A9  
                            u2811 01FD                              u2660 0E71                              u2740 06BB  
                            u2900 0336                              u2820 0214                              u2485 0F6E  
                            u2661 0E70                              u2741 06BA                              u2901 0335  
                            u2821 0213                              u2805 01D4                              u2590 0E58  
                            u2750 06C5                              u2910 034A                              u2830 02D3  
                            u2495 0F7A                              u2591 0E57                              u2575 0E41  
                            u2751 06C4                              u2911 0349                              u2831 02D2  
                            u2815 01FA                              u2680 046F                              u2760 071C  
                            u2920 0393                              u2840 02E8                              u2585 0E4C  
                            u2681 046E                              u2761 071B                              u2921 0392  
                            u2841 02E7                              u2690 0C57                              u2930 03AD  
                            u2850 02F1                              u2675 0E97                              u2931 03AC  
                            u2851 02F0                              u2940 03B3                              u2860 030F  
                            u2685 046B                              u2941 03B2                              u2861 030E  
                            u2950 0427                              u2870 0317                              u2790 008A  
                            u2695 0C52                              u2951 0426                              u2871 0316  
                            u2791 0089                              u2960 042B                              u2880 0329  
                            u2961 042A                              u2881 0328                              u2970 0431  
                            u2890 032D                              u2971 0430                              u2891 032C  
                            u2980 0435                              _RCIF 0065                              u2981 0434  
                            _TMR0 0001                              _TXIF 0064                      __CFG_WRT$OFF 0000  
                            _disp 0055                              _main 0040                              _temp 0051  
                            _time 0049                              map@x 0034                              btemp 007E  
                __end_of_ADC_Read 0BDA                     __CFG_BOREN$ON 0000                              start 0010  
                 __end_of_GetTime 0CC0                 ___bmul@multiplier 0027                             ??_ISR 0020  
       __size_of_conteggioVeicoli 0065                             ??_map 003E                   __end_of___aldiv 07D0  
                           ?_main 0070                   __end_of___awdiv 0F95                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 0E67                   ___awdiv@divisor 002B                             _T1CON 0010  
                           i1l300 0F2B                             i1l164 0D0B                             i1l284 07F7  
                           i1l348 0E03                             i1l286 07FD                             i1l287 07FF  
                 ___awdiv@counter 0030                             _RCREG 001A              UpdateTimes@_semafori 002E  
                           _TMR1H 000F                             _TMR1L 000E                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _TRISE 0089  
                           _TXREG 0019                     __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A  
              __size_of_UART_Read 0009                   __end_of_display 0811                             _count 004D  
                           main@i 00DF                             _truck 00CF                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 0013  
                    __end_of_main 043A         __size_of_SetReceivedTimes 0060                __size_of_GetDigits 00CD  
                          ??_main 0040                 SetDefaultTimers@i 002F                 SetDefaultTimers@l 002E  
              __size_of_BuildByte 00C8                        _SetDisplay 0D5F                            _ADCON0 001F  
                          _ADCON1 009F                __size_of_Conteggio 004C                            _ADRESH 001E  
                          _ADRESL 009E                  ___awdiv@dividend 002D                            i1l2060 0CC0  
                          i1l2070 0CFB                            i1l2062 0CC9                            i1l2064 0CD9  
                          i1l2066 0CE2                            i1l2068 0CF2                            i1l2450 07FE  
                          i1l2460 0EE8                            i1l2700 0DE6                            i1l2470 0F21  
                          i1l2462 0EF1                            i1l2454 0EC7                            i1l2710 0DF9  
                          i1l2702 0DEA                            i1l2448 07F7                            i1l2472 0F25  
                          i1l2464 0EFA                            i1l2456 0EE7                            i1l2712 0DFA  
                          i1l2704 0DEE                            u210_20 0DC9                            u210_21 0DC8  
                          i1l2466 0F02                            i1l2714 0DFB                            i1l2706 0DEF  
                          i1l2468 0F1D                            i1l2716 0DFF                            i1l2708 0DF3  
                          i1l2718 0E01                            u211_20 0DE0                            i1l2680 0DBC  
                          u211_21 0DDF                            i1l2690 0DD7                            i1l2682 0DBF  
                          i1l2692 0DDB                            i1l2684 0DC1                            i1l2676 0DB4  
                          i1l2686 0DC5                            i1l2694 0DDC                            i1l2678 0DB8  
                          u212_20 0DEE                            i1l2696 0DE0                            i1l2688 0DC9  
                          u212_21 0DED                            i1l2698 0DE1                            u125_20 0CC9  
                          u213_20 0DF9                            u125_21 0CC8                            u213_21 0DF8  
                          u126_20 0CE2                            u126_21 0CE1                            u127_20 0CFB  
                          u207_20 0DB8                            u127_21 0CFA                            u207_21 0DB7  
                          u208_20 0DBC                            u208_21 0DBB                            u209_20 0DC5  
                          _INTCON 000B                            u209_21 0DC4                            u180_20 07FD  
                          u180_21 07FC                            u181_20 0EF1                            u181_21 0EF0  
                          u182_20 0F02                            u182_21 0F01                            u183_20 0F2B  
                          u183_21 0F2A                            _TMR0IF 005A                            _TMR1IF 0060  
                       ??_GetTime 0026                      ?_UART_TxChar 0070                 __end_of_UART_Init 0C7A  
               __end_of_UART_Read 0800                            ___bmul 0B9D                         ??___aldiv 002C  
                 GetTime@shortInt 0029                            ___wmul 07D0                         ??___awdiv 002F  
                       ??___awmod 0028                  __end_of_init_ADC 0B9D                            _cycled 0056  
                ___awdiv@quotient 0032                   ___awmod@divisor 0024                   ___awmod@counter 0029  
                __end_of_sendByte 0C0B                         ?_ADC_Read 0024                            saved_w 007E  
         __end_of__initialization 003C                 __end_of_GetDigits 0507                     ??_UpdateTimes 0024  
       __size_of_SetDefaultTimers 00B7               ___bmul@multiplicand 0024                    __pcstackCOMMON 0070  
               __end_of_BuildByte 05CF                      __pidataBANK0 0B73                  _conteggioVeicoli 0EC7  
               __end_of_Conteggio 0D0C                     ?_luciSemaforo 0024                        ??_ADC_Read 0026  
          SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024  
                   GetDigits@Time 0035              _dataFromGatewayIndex 0053              _timerReadFromGateway 0052  
                      __pbssBANK0 0049                        __pbssBANK1 00A0                        __pmaintext 0040  
                         ?___bmul 0024  ShowDigitsOnDisplay@display_index 002D                           ?___wmul 0024  
                  ??_luciSemaforo 0025               __end_of_UpdateTimes 1000                     sendByte@byte0 003D  
                   sendByte@byte1 0038                        __pintentry 0004                  _SetReceivedTimes 0E67  
     __end_of_ShowDigitsOnDisplay 0733                        __stringtab 0800                         ?_init_ADC 0070  
                         _GetTime 0C7A                   BuildByte@valore 0025                   BuildByte@txByte 0029  
         GetTime@_dataFromGateway 0024                         ?_sendByte 0038                        _n_semafori 0811  
            __size_of_UART_TxChar 000B                           ___aldiv 0733                   __size_of___bmul 0017  
                         ___awdiv 0F2C                           ___awmod 0E0C               __size_of_SetDisplay 0055  
                 __size_of___wmul 0027                 conteggioVeicoli@i 007D                           _digits0 00D6  
                         _digits1 00D3                           __ptext1 0BDA                           __ptext2 0B7F  
                         __ptext3 0507                           __ptext4 0C0B                           __ptext5 07D0  
                         __ptext6 0D0C                           __ptext7 0B8A                           __ptext8 0F95  
                         __ptext9 0C40                           _display 0806                      __size_of_ISR 0058  
                    __size_of_map 0035                  ___awmod@dividend 0026                  ___aldiv@dividend 0028  
            BuildByte@sommaColumn 002F                           _umidita 0050                           clrloop0 0B78  
                GetDigits@_digits 003C              end_of_initialization 003C                        ??_init_ADC 0024  
                  main@lux_select 00DD                       _UpdateTimes 0F95                        ??_sendByte 003A  
                _SetDefaultTimers 05CF                         _RCSTAbits 0018                  ___aldiv@quotient 002F  
                      _motorcycle 005E                         _UART_Init 0C40                         _UART_Read 07F7  
           SetReceivedTimes@index 0034                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTCbits 0007                      SetDisplay@d1 0024                      SetDisplay@d2 0025  
                    SetDisplay@d3 0026                         _TRISCbits 0087                 __size_of_ADC_Read 0026  
        __end_of_conteggioVeicoli 0F2C              __end_of_luciSemaforo 0D5F                        map@out_max 003C  
                      map@out_min 003A  SetReceivedTimes@_dataFromGateway 0033                         _TXSTAbits 0098  
                       _GetDigits 043A                         _DigitsArr 0062                    __end_of___bmul 0BB4  
                  __end_of___wmul 07F7                        ?_UART_Init 0033                        ?_UART_Read 0070  
                       _BuildByte 0507                         _Conteggio 0CC0                 BuildByte@sommaRow 002E  
             start_initialization 0013                       __end_of_ISR 0E0C                      ??_SetDisplay 0028  
                     __end_of_map 0C40          __end_of_SetReceivedTimes 0EC7                        ?_GetDigits 0034  
                        ??___bmul 0025                    ADC_Read@canale 0027                          ??___wmul 0028  
                     __pdataBANK0 0062                __end_of_SetDisplay 0DB4                    GetDigits@index 0034  
                      ?_BuildByte 0024                        ?_Conteggio 0070                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00D9                          ?_GetTime 0024  
           SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013  
               __size_of_sendByte 0031                          ?___aldiv 0024                          ?___awdiv 002B  
                        ?___awmod 0024                       ??_UART_Init 0035                       ??_UART_Read 0070  
                  BuildByte@i_337 0036                         __pstrings 0800                    BuildByte@y_338 0032  
                  sendByte@valore 0039                    sendByte@txByte 003E                    BuildByte@byte0 0028  
                  BuildByte@byte1 0024          __end_of_SetDefaultTimers 0686                          _ADC_Read 0BB4  
           __size_of_luciSemaforo 0053                         _count_lux 0054                     UART_TxChar@ch 0024  
    __size_of_ShowDigitsOnDisplay 00AD                   ___aldiv@divisor 0024                 SetReceivedTimes@i 0035  
               interrupt_function 0004                   ___aldiv@counter 002D                    ___wmul@product 0028  
      SetReceivedTimes@semaforoId 0031                      ?_UpdateTimes 0070                         clear_ram0 0B77  
                        _PIE1bits 008C                     ??_UART_TxChar 0024                       ??_GetDigits 0037  
                        _GO_nDONE 00FA                      _luciSemaforo 0D0C                         _pressione 004F  
               UART_Init@baudrate 0033                       ??_BuildByte 0026                         map@in_max 0038  
                       map@in_min 0036                       __stringbase 0805                         main@i_473 00DB  
                       main@i_474 00D9                         main@i_476 00DA                       ??_Conteggio 0076  
                       main@i_478 00DE                 ___wmul@multiplier 0024                      GetTime@index 0028  
                    _RoadsSensors 00A0                 ?_conteggioVeicoli 0070                      _secondPassed 0057  
              ??_conteggioVeicoli 0079                  __size_of_GetTime 0046                          _Semafori 0064  
                     _readGateway 0058                  __size_of___aldiv 009D               __end_of_UART_TxChar 0B8A  
                __size_of___awdiv 0069                  __size_of___awmod 005B                __end_of__stringtab 0806  
                       sendByte@i 003F                          __ptext10 0733                          __ptext11 0686  
                        __ptext20 0BB4                          __ptext12 0D5F                          __ptext21 0DB4  
                        __ptext13 0E67                          __ptext22 0EC7                          __ptext14 0C7A  
                        __ptext23 0CC0                          __ptext15 05CF                          __ptext24 07F7  
                        __ptext16 043A                          __ptext17 0B9D                          __ptext18 0E0C  
                        __ptext19 0F2C                __end_of_n_semafori 0812           SetDisplay@display_index 002A  
                        _init_ADC 0B8A                 ?_SetReceivedTimes 002C                     __size_of_main 03FA  
                 _dataFromGateway 00A4                          _sendByte 0BDA                ??_SetReceivedTimes 002D  
                      _INTCONbits 000B              Conteggio@_motorcycle 0072                          intlevel1 0000  
                 _readGatewayDone 0059                         stringcode 0800                       _UART_TxChar 0B7F  
         SetReceivedTimes@colorId 0032              __size_of_UpdateTimes 006B                        GetTime@tmp 002A  
             _ShowDigitsOnDisplay 0686                        _OPTION_REG 0081                   SetDisplay@value 0027  
                        stringdir 0800                          stringtab 0800                      UpdateTimes@i 002F  
                    UpdateTimes@l 0030                 ?_SetDefaultTimers 0024                      ___aldiv@sign 002E  
              ??_SetDefaultTimers 002B              ?_ShowDigitsOnDisplay 0070                        BuildByte@i 0034  
                      BuildByte@y 0030         SetDefaultTimers@_semafori 002A                   Conteggio@_count 0070  
                   Conteggio@_car 0073                   Conteggio@_truck 0074                    Conteggio@index 0075  
