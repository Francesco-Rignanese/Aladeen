

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 16 11:01:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.10
    47                           ; Generated 31/07/2019 GMT
    48                           ; 
    49                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200                           
   201                           	psect	idataBANK0
   202  09DF                     __pidataBANK0:	
   203                           
   204                           ;initializer for _DigitsArr
   205  09DF  34E8               	retlw	low (_digits0| 0)
   206  09E0  34E5               	retlw	low (_digits1| 0)
   207                           
   208                           ;initializer for _Semafori
   209  09E1  34CB               	retlw	low (_s0| 0)
   210  09E2  34BD               	retlw	low (_s1| 0)
   211                           
   212                           	psect	idataBANK1
   213  09DB                     __pidataBANK1:	
   214                           
   215                           ;initializer for _randx
   216  09DB  3401               	retlw	1
   217  09DC  3400               	retlw	0
   218  09DD  3400               	retlw	0
   219  09DE  3400               	retlw	0
   220                           
   221                           	psect	strings
   222  0800                     __pstrings:	
   223  0800                     stringtab:	
   224  0800                     __stringtab:	
   225  0800                     stringcode:	
   226                           ;	String table - string pointers are 1 byte each
   227                           
   228  0800                     stringdir:	
   229  0800  3008               	movlw	high stringdir
   230  0801  008A               	movwf	10
   231  0802  0804               	movf	4,w
   232  0803  0A84               	incf	4,f
   233  0804  0782               	addwf	2,f
   234  0805                     __stringbase:	
   235  0805  3400               	retlw	0
   236  0806                     __end_of__stringtab:	
   237  0806                     _display:	
   238  0806  343F               	retlw	63
   239  0807  3406               	retlw	6
   240  0808  345B               	retlw	91
   241  0809  344F               	retlw	79
   242  080A  3466               	retlw	102
   243  080B  346D               	retlw	109
   244  080C  347D               	retlw	125
   245  080D  3407               	retlw	7
   246  080E  347F               	retlw	127
   247  080F  346F               	retlw	111
   248  0810  3400               	retlw	0
   249  0811                     __end_of_display:	
   250  0811                     _n_semafori:	
   251  0811  3402               	retlw	2
   252  0812                     __end_of_n_semafori:	
   253  0008                     _PORTD	set	8
   254  0005                     _PORTAbits	set	5
   255  001A                     _RCREG	set	26
   256  0019                     _TXREG	set	25
   257  000B                     _INTCONbits	set	11
   258  0018                     _RCSTAbits	set	24
   259  001E                     _ADRESH	set	30
   260  001F                     _ADCON0	set	31
   261  0006                     _PORTBbits	set	6
   262  0007                     _PORTCbits	set	7
   263  000E                     _TMR1L	set	14
   264  000F                     _TMR1H	set	15
   265  0010                     _T1CON	set	16
   266  0001                     _TMR0	set	1
   267  000B                     _INTCON	set	11
   268  0060                     _TMR1IF	set	96
   269  005A                     _TMR0IF	set	90
   270  0065                     _RCIF	set	101
   271  0064                     _TXIF	set	100
   272  00FA                     _GO_nDONE	set	250
   273  008C                     _PIE1bits	set	140
   274  0099                     _SPBRG	set	153
   275  0098                     _TXSTAbits	set	152
   276  0087                     _TRISCbits	set	135
   277  009E                     _ADRESL	set	158
   278  009F                     _ADCON1	set	159
   279  0085                     _TRISA	set	133
   280  0081                     _OPTION_REG	set	129
   281  0089                     _TRISE	set	137
   282  0088                     _TRISD	set	136
   283  0087                     _TRISC	set	135
   284  0086                     _TRISB	set	134
   285                           
   286                           ; #config settings
   287  0000                     
   288                           	psect	cinit
   289  0013                     start_initialization:	
   290  0013                     __initialization:	
   291                           
   292                           ; Initialize objects allocated to BANK1
   293  0013  1683               	bsf	3,5	;RP0=1, select bank1
   294  0014  1303               	bcf	3,6	;RP1=0, select bank1
   295  0015  120A  158A  21DB  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   296  001A  00EB               	movwf	__pdataBANK1& (0+127)
   297  001B  120A  158A  21DC  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   298  0020  00EC               	movwf	(__pdataBANK1+1)& (0+127)
   299  0021  120A  158A  21DD  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   300  0026  00ED               	movwf	(__pdataBANK1+2)& (0+127)
   301  0027  120A  158A  21DE  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   302  002C  00EE               	movwf	(__pdataBANK1+3)& (0+127)
   303                           
   304                           ; Initialize objects allocated to BANK0
   305  002D  1283               	bcf	3,5	;RP0=0, select bank0
   306  002E  1303               	bcf	3,6	;RP1=0, select bank0
   307  002F  120A  158A  21DF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   308  0034  00E2               	movwf	__pdataBANK0& (0+127)
   309  0035  120A  158A  21E0  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   310  003A  00E3               	movwf	(__pdataBANK0+1)& (0+127)
   311  003B  120A  158A  21E1  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   312  0040  00E4               	movwf	(__pdataBANK0+2)& (0+127)
   313  0041  120A  158A  21E2  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   314  0046  00E5               	movwf	(__pdataBANK0+3)& (0+127)
   315                           
   316                           ; Clear objects allocated to BANK1
   317  0047  1383               	bcf	3,7	;select IRP bank0
   318  0048  30A0               	movlw	low __pbssBANK1
   319  0049  0084               	movwf	4
   320  004A  30EB               	movlw	low (__pbssBANK1+75)
   321  004B  120A  158A  21E3  120A  118A  	fcall	clear_ram0
   322                           
   323                           ; Clear objects allocated to BANK0
   324  0050  01DB               	clrf	__pbssBANK0& (0+127)
   325  0051  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   326  0052  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   327  0053  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   328  0054  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   329  0055  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   330  0056  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   331  0057                     end_of_initialization:	
   332                           ;End of C runtime variable initialization code
   333                           
   334  0057                     __end_of__initialization:	
   335  0057  0183               	clrf	3
   336  0058  120A  118A  285B   	ljmp	_main	;jump to C main() function
   337                           
   338                           	psect	bssBANK0
   339  005B                     __pbssBANK0:	
   340  005B                     _dataFromGatewayIndex:	
   341  005B                     	ds	1
   342  005C                     _count_lux:	
   343  005C                     	ds	1
   344  005D                     _disp:	
   345  005D                     	ds	1
   346  005E                     _cycled:	
   347  005E                     	ds	1
   348  005F                     _secondPassed:	
   349  005F                     	ds	1
   350  0060                     _readGateway:	
   351  0060                     	ds	1
   352  0061                     _readGatewayDone:	
   353  0061                     	ds	1
   354                           
   355                           	psect	dataBANK0
   356  0062                     __pdataBANK0:	
   357  0062                     _DigitsArr:	
   358  0062                     	ds	2
   359  0064                     _Semafori:	
   360  0064                     	ds	2
   361                           
   362                           	psect	bssBANK1
   363  00A0                     __pbssBANK1:	
   364  00A0                     _RoadsSensors:	
   365  00A0                     	ds	4
   366  00A4                     _time:	
   367  00A4                     	ds	4
   368  00A8                     _count:	
   369  00A8                     	ds	2
   370  00AA                     _pressione:	
   371  00AA                     	ds	1
   372  00AB                     _umidita:	
   373  00AB                     	ds	1
   374  00AC                     _temp:	
   375  00AC                     	ds	1
   376  00AD                     _timerReadFromGateway:	
   377  00AD                     	ds	1
   378  00AE                     _dataFromGateway:	
   379  00AE                     	ds	15
   380  00BD                     _s1:	
   381  00BD                     	ds	14
   382  00CB                     _s0:	
   383  00CB                     	ds	14
   384  00D9                     _truck:	
   385  00D9                     	ds	4
   386  00DD                     _car:	
   387  00DD                     	ds	4
   388  00E1                     _motorcycle:	
   389  00E1                     	ds	4
   390  00E5                     _digits1:	
   391  00E5                     	ds	3
   392  00E8                     _digits0:	
   393  00E8                     	ds	3
   394                           
   395                           	psect	dataBANK1
   396  00EB                     __pdataBANK1:	
   397  00EB                     _randx:	
   398  00EB                     	ds	4
   399                           
   400                           	psect	clrtext
   401  09E3                     clear_ram0:	
   402                           ;	Called with FSR containing the base address, and
   403                           ;	W with the last address+1
   404                           
   405  09E3  0064               	clrwdt	;clear the watchdog before getting into this loop
   406  09E4                     clrloop0:	
   407  09E4  0180               	clrf	0	;clear RAM location pointed to by FSR
   408  09E5  0A84               	incf	4,f	;increment pointer
   409  09E6  0604               	xorwf	4,w	;XOR with final address
   410  09E7  1903               	btfsc	3,2	;have we reached the end yet?
   411  09E8  3400               	retlw	0	;all done for this memory range, return
   412  09E9  0604               	xorwf	4,w	;XOR again to restore value
   413  09EA  29E4               	goto	clrloop0	;do the next byte
   414                           
   415                           	psect	cstackBANK3
   416  0190                     __pcstackBANK3:	
   417  0190                     main@randomMoto:	
   418                           
   419                           ; 1 bytes @ 0x0
   420  0190                     	ds	1
   421  0191                     main@randomCar:	
   422                           
   423                           ; 1 bytes @ 0x1
   424  0191                     	ds	1
   425  0192                     main@randomTruck:	
   426                           
   427                           ; 1 bytes @ 0x2
   428  0192                     	ds	1
   429  0193                     main@i_481:	
   430                           
   431                           ; 1 bytes @ 0x3
   432  0193                     	ds	1
   433  0194                     main@i_483:	
   434                           
   435                           ; 1 bytes @ 0x4
   436  0194                     	ds	1
   437  0195                     main@i_480:	
   438                           
   439                           ; 2 bytes @ 0x5
   440  0195                     	ds	2
   441  0197                     main@lux_select:	
   442                           
   443                           ; 1 bytes @ 0x7
   444  0197                     	ds	1
   445  0198                     main@i_485:	
   446                           
   447                           ; 1 bytes @ 0x8
   448  0198                     	ds	1
   449  0199                     main@i:	
   450                           
   451                           ; 1 bytes @ 0x9
   452  0199                     	ds	1
   453                           
   454                           	psect	cstackCOMMON
   455  0070                     __pcstackCOMMON:	
   456  0070                     ?_init_ADC:	
   457  0070                     ?_ShowDigitsOnDisplay:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_UpdateTimes:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_Conteggio:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_main:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_UART_TxChar:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_UART_Read:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ??_UART_Read:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_conteggioVeicoli:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_ISR:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     Conteggio@_count:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 2 bytes @ 0x0
   489  0070                     	ds	2
   490  0072                     Conteggio@_motorcycle:	
   491                           
   492                           ; 1 bytes @ 0x2
   493  0072                     	ds	1
   494  0073                     Conteggio@_car:	
   495                           
   496                           ; 1 bytes @ 0x3
   497  0073                     	ds	1
   498  0074                     Conteggio@_truck:	
   499                           
   500                           ; 1 bytes @ 0x4
   501  0074                     	ds	1
   502  0075                     Conteggio@index:	
   503                           
   504                           ; 1 bytes @ 0x5
   505  0075                     	ds	1
   506  0076                     ??_Conteggio:	
   507                           
   508                           ; 1 bytes @ 0x6
   509  0076                     	ds	3
   510  0079                     ??_conteggioVeicoli:	
   511                           
   512                           ; 1 bytes @ 0x9
   513  0079                     	ds	4
   514  007D                     conteggioVeicoli@i:	
   515                           
   516                           ; 1 bytes @ 0xD
   517  007D                     	ds	1
   518                           
   519                           	psect	cstackBANK0
   520  0020                     __pcstackBANK0:	
   521  0020                     ??_ISR:	
   522                           
   523                           ; 1 bytes @ 0x0
   524  0020                     	ds	4
   525  0024                     ??_init_ADC:	
   526  0024                     ?_luciSemaforo:	
   527                           ; 1 bytes @ 0x4
   528                           
   529  0024                     ?_BuildByte:	
   530                           ; 1 bytes @ 0x4
   531                           
   532  0024                     ??_UpdateTimes:	
   533                           ; 1 bytes @ 0x4
   534                           
   535  0024                     ?_SetDefaultTimers:	
   536                           ; 1 bytes @ 0x4
   537                           
   538  0024                     ??_UART_TxChar:	
   539                           ; 1 bytes @ 0x4
   540                           
   541  0024                     ?_SetDisplay:	
   542                           ; 1 bytes @ 0x4
   543                           
   544  0024                     ?___bmul:	
   545                           ; 1 bytes @ 0x4
   546                           
   547  0024                     ?_ADC_Read:	
   548                           ; 1 bytes @ 0x4
   549                           
   550  0024                     ?_GetTime:	
   551                           ; 2 bytes @ 0x4
   552                           
   553  0024                     ?___wmul:	
   554                           ; 2 bytes @ 0x4
   555                           
   556  0024                     ?___lmul:	
   557                           ; 2 bytes @ 0x4
   558                           
   559  0024                     ?___aldiv:	
   560                           ; 4 bytes @ 0x4
   561                           
   562  0024                     BuildByte@byte1:	
   563                           ; 4 bytes @ 0x4
   564                           
   565  0024                     GetTime@_dataFromGateway:	
   566                           ; 1 bytes @ 0x4
   567                           
   568  0024                     UART_TxChar@ch:	
   569                           ; 1 bytes @ 0x4
   570                           
   571  0024                     luciSemaforo@lux:	
   572                           ; 1 bytes @ 0x4
   573                           
   574  0024                     SetDisplay@d1:	
   575                           ; 1 bytes @ 0x4
   576                           
   577  0024                     ___bmul@multiplicand:	
   578                           ; 1 bytes @ 0x4
   579                           
   580  0024                     SetDefaultTimers@rosso:	
   581                           ; 1 bytes @ 0x4
   582                           
   583  0024                     ___wmul@multiplier:	
   584                           ; 2 bytes @ 0x4
   585                           
   586  0024                     ___lmul@multiplier:	
   587                           ; 2 bytes @ 0x4
   588                           
   589  0024                     ___aldiv@divisor:	
   590                           ; 4 bytes @ 0x4
   591                           
   592                           
   593                           ; 4 bytes @ 0x4
   594  0024                     	ds	1
   595  0025                     ??_luciSemaforo:	
   596  0025                     ??___bmul:	
   597                           ; 1 bytes @ 0x5
   598                           
   599  0025                     BuildByte@valore:	
   600                           ; 1 bytes @ 0x5
   601                           
   602  0025                     SetDisplay@d2:	
   603                           ; 1 bytes @ 0x5
   604                           
   605                           
   606                           ; 1 bytes @ 0x5
   607  0025                     	ds	1
   608  0026                     ??_ADC_Read:	
   609  0026                     ??_BuildByte:	
   610                           ; 1 bytes @ 0x6
   611                           
   612  0026                     ??_GetTime:	
   613                           ; 1 bytes @ 0x6
   614                           
   615  0026                     SetDisplay@d3:	
   616                           ; 1 bytes @ 0x6
   617                           
   618  0026                     ___bmul@product:	
   619                           ; 1 bytes @ 0x6
   620                           
   621  0026                     SetDefaultTimers@verde:	
   622                           ; 1 bytes @ 0x6
   623                           
   624  0026                     ___wmul@multiplicand:	
   625                           ; 2 bytes @ 0x6
   626                           
   627                           
   628                           ; 2 bytes @ 0x6
   629  0026                     	ds	1
   630  0027                     ADC_Read@canale:	
   631  0027                     luciSemaforo@index:	
   632                           ; 1 bytes @ 0x7
   633                           
   634  0027                     SetDisplay@value:	
   635                           ; 1 bytes @ 0x7
   636                           
   637  0027                     ___bmul@multiplier:	
   638                           ; 1 bytes @ 0x7
   639                           
   640                           
   641                           ; 1 bytes @ 0x7
   642  0027                     	ds	1
   643  0028                     ??_SetDisplay:	
   644  0028                     ??___wmul:	
   645                           ; 1 bytes @ 0x8
   646                           
   647  0028                     BuildByte@byte0:	
   648                           ; 1 bytes @ 0x8
   649                           
   650  0028                     GetTime@index:	
   651                           ; 1 bytes @ 0x8
   652                           
   653  0028                     SetDefaultTimers@giallo:	
   654                           ; 1 bytes @ 0x8
   655                           
   656  0028                     ___wmul@product:	
   657                           ; 2 bytes @ 0x8
   658                           
   659  0028                     ___lmul@multiplicand:	
   660                           ; 2 bytes @ 0x8
   661                           
   662  0028                     ___aldiv@dividend:	
   663                           ; 4 bytes @ 0x8
   664                           
   665                           
   666                           ; 4 bytes @ 0x8
   667  0028                     	ds	1
   668  0029                     GetTime@shortInt:	
   669  0029                     BuildByte@txByte:	
   670                           ; 1 bytes @ 0x9
   671                           
   672                           
   673                           ; 5 bytes @ 0x9
   674  0029                     	ds	1
   675  002A                     SetDefaultTimers@_semafori:	
   676  002A                     SetDisplay@display_index:	
   677                           ; 1 bytes @ 0xA
   678                           
   679  002A                     GetTime@tmp:	
   680                           ; 1 bytes @ 0xA
   681                           
   682                           
   683                           ; 2 bytes @ 0xA
   684  002A                     	ds	1
   685  002B                     ??_SetDefaultTimers:	
   686                           
   687                           ; 1 bytes @ 0xB
   688  002B                     	ds	1
   689  002C                     ?_SetReceivedTimes:	
   690  002C                     ??___lmul:	
   691                           ; 1 bytes @ 0xC
   692                           
   693  002C                     ??___aldiv:	
   694                           ; 1 bytes @ 0xC
   695                           
   696  002C                     SetReceivedTimes@_semafori:	
   697                           ; 1 bytes @ 0xC
   698                           
   699                           
   700                           ; 1 bytes @ 0xC
   701  002C                     	ds	1
   702  002D                     ??_SetReceivedTimes:	
   703  002D                     ___aldiv@counter:	
   704                           ; 1 bytes @ 0xD
   705                           
   706  002D                     ___lmul@product:	
   707                           ; 1 bytes @ 0xD
   708                           
   709                           
   710                           ; 4 bytes @ 0xD
   711  002D                     	ds	1
   712  002E                     BuildByte@sommaRow:	
   713  002E                     UpdateTimes@_semafori:	
   714                           ; 1 bytes @ 0xE
   715                           
   716  002E                     SetDefaultTimers@l:	
   717                           ; 1 bytes @ 0xE
   718                           
   719  002E                     ___aldiv@sign:	
   720                           ; 1 bytes @ 0xE
   721                           
   722                           
   723                           ; 1 bytes @ 0xE
   724  002E                     	ds	1
   725  002F                     BuildByte@sommaColumn:	
   726  002F                     UpdateTimes@i:	
   727                           ; 1 bytes @ 0xF
   728                           
   729  002F                     SetDefaultTimers@i:	
   730                           ; 1 bytes @ 0xF
   731                           
   732  002F                     ___aldiv@quotient:	
   733                           ; 1 bytes @ 0xF
   734                           
   735                           
   736                           ; 4 bytes @ 0xF
   737  002F                     	ds	1
   738  0030                     UpdateTimes@l:	
   739  0030                     BuildByte@y:	
   740                           ; 1 bytes @ 0x10
   741                           
   742                           
   743                           ; 2 bytes @ 0x10
   744  0030                     	ds	1
   745  0031                     ?_rand:	
   746  0031                     SetReceivedTimes@semaforoId:	
   747                           ; 2 bytes @ 0x11
   748                           
   749                           
   750                           ; 1 bytes @ 0x11
   751  0031                     	ds	1
   752  0032                     SetReceivedTimes@colorId:	
   753  0032                     BuildByte@y_342:	
   754                           ; 1 bytes @ 0x12
   755                           
   756                           
   757                           ; 2 bytes @ 0x12
   758  0032                     	ds	1
   759  0033                     ?_UART_Init:	
   760  0033                     ??_rand:	
   761                           ; 1 bytes @ 0x13
   762                           
   763  0033                     SetReceivedTimes@_dataFromGateway:	
   764                           ; 1 bytes @ 0x13
   765                           
   766  0033                     UART_Init@baudrate:	
   767                           ; 1 bytes @ 0x13
   768                           
   769                           
   770                           ; 2 bytes @ 0x13
   771  0033                     	ds	1
   772  0034                     SetReceivedTimes@index:	
   773  0034                     BuildByte@i:	
   774                           ; 1 bytes @ 0x14
   775                           
   776                           
   777                           ; 2 bytes @ 0x14
   778  0034                     	ds	1
   779  0035                     ??_UART_Init:	
   780  0035                     SetReceivedTimes@i:	
   781                           ; 1 bytes @ 0x15
   782                           
   783                           
   784                           ; 1 bytes @ 0x15
   785  0035                     	ds	1
   786  0036                     BuildByte@i_341:	
   787                           
   788                           ; 2 bytes @ 0x16
   789  0036                     	ds	2
   790  0038                     ?_sendByte:	
   791  0038                     ?___awmod:	
   792                           ; 1 bytes @ 0x18
   793                           
   794  0038                     sendByte@byte1:	
   795                           ; 2 bytes @ 0x18
   796                           
   797  0038                     ___awmod@divisor:	
   798                           ; 1 bytes @ 0x18
   799                           
   800                           
   801                           ; 2 bytes @ 0x18
   802  0038                     	ds	1
   803  0039                     sendByte@valore:	
   804                           
   805                           ; 1 bytes @ 0x19
   806  0039                     	ds	1
   807  003A                     ??_sendByte:	
   808  003A                     ___awmod@dividend:	
   809                           ; 1 bytes @ 0x1A
   810                           
   811                           
   812                           ; 2 bytes @ 0x1A
   813  003A                     	ds	2
   814  003C                     ??___awmod:	
   815                           
   816                           ; 1 bytes @ 0x1C
   817  003C                     	ds	1
   818  003D                     sendByte@byte0:	
   819  003D                     ___awmod@counter:	
   820                           ; 1 bytes @ 0x1D
   821                           
   822                           
   823                           ; 1 bytes @ 0x1D
   824  003D                     	ds	1
   825  003E                     sendByte@txByte:	
   826  003E                     ___awmod@sign:	
   827                           ; 1 bytes @ 0x1E
   828                           
   829                           
   830                           ; 1 bytes @ 0x1E
   831  003E                     	ds	1
   832  003F                     ??_ShowDigitsOnDisplay:	
   833  003F                     ?___awdiv:	
   834                           ; 1 bytes @ 0x1F
   835                           
   836  003F                     sendByte@i:	
   837                           ; 2 bytes @ 0x1F
   838                           
   839  003F                     ___awdiv@divisor:	
   840                           ; 1 bytes @ 0x1F
   841                           
   842                           
   843                           ; 2 bytes @ 0x1F
   844  003F                     	ds	2
   845  0041                     ShowDigitsOnDisplay@display_index:	
   846  0041                     ___awdiv@dividend:	
   847                           ; 1 bytes @ 0x21
   848                           
   849                           
   850                           ; 2 bytes @ 0x21
   851  0041                     	ds	2
   852  0043                     ??___awdiv:	
   853                           
   854                           ; 1 bytes @ 0x23
   855  0043                     	ds	1
   856  0044                     ___awdiv@counter:	
   857                           
   858                           ; 1 bytes @ 0x24
   859  0044                     	ds	1
   860  0045                     ___awdiv@sign:	
   861                           
   862                           ; 1 bytes @ 0x25
   863  0045                     	ds	1
   864  0046                     ___awdiv@quotient:	
   865                           
   866                           ; 2 bytes @ 0x26
   867  0046                     	ds	2
   868  0048                     ?_GetDigits:	
   869  0048                     ?_map:	
   870                           ; 1 bytes @ 0x28
   871                           
   872  0048                     GetDigits@index:	
   873                           ; 2 bytes @ 0x28
   874                           
   875  0048                     map@x:	
   876                           ; 1 bytes @ 0x28
   877                           
   878                           
   879                           ; 2 bytes @ 0x28
   880  0048                     	ds	1
   881  0049                     GetDigits@Time:	
   882                           
   883                           ; 2 bytes @ 0x29
   884  0049                     	ds	1
   885  004A                     map@in_min:	
   886                           
   887                           ; 2 bytes @ 0x2A
   888  004A                     	ds	1
   889  004B                     ??_GetDigits:	
   890                           
   891                           ; 1 bytes @ 0x2B
   892  004B                     	ds	1
   893  004C                     map@in_max:	
   894                           
   895                           ; 2 bytes @ 0x2C
   896  004C                     	ds	2
   897  004E                     map@out_min:	
   898  004E                     _GetDigits$1203:	
   899                           ; 2 bytes @ 0x2E
   900                           
   901                           
   902                           ; 2 bytes @ 0x2E
   903  004E                     	ds	2
   904  0050                     GetDigits@_digits:	
   905  0050                     map@out_max:	
   906                           ; 1 bytes @ 0x30
   907                           
   908                           
   909                           ; 2 bytes @ 0x30
   910  0050                     	ds	2
   911  0052                     ??_map:	
   912  0052                     ??_main:	
   913                           ; 1 bytes @ 0x32
   914                           
   915                           
   916                           ; 1 bytes @ 0x32
   917  0052                     	ds	9
   918                           
   919                           	psect	maintext
   920  005B                     __pmaintext:	
   921 ;;
   922 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   923 ;;
   924 ;; *************** function _main *****************
   925 ;; Defined at:
   926 ;;		line 136 in file "main.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  lux_select      1    7[BANK3 ] unsigned char 
   931 ;;  randomTruck     1    2[BANK3 ] unsigned char 
   932 ;;  randomCar       1    1[BANK3 ] unsigned char 
   933 ;;  randomMoto      1    0[BANK3 ] unsigned char 
   934 ;;  i               1    4[BANK3 ] unsigned char 
   935 ;;  i               1    3[BANK3 ] unsigned char 
   936 ;;  i               2    5[BANK3 ] int 
   937 ;;  i               1    9[BANK3 ] unsigned char 
   938 ;;  i               1    8[BANK3 ] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : B00/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0      10       0
   950 ;;      Temps:          0       9       0       0       0
   951 ;;      Totals:         0       9       0      10       0
   952 ;;Total ram usage:       19 bytes
   953 ;; Hardware stack levels required when called:    5
   954 ;; This function calls:
   955 ;;		_ADC_Read
   956 ;;		_GetDigits
   957 ;;		_SetDefaultTimers
   958 ;;		_SetReceivedTimes
   959 ;;		_ShowDigitsOnDisplay
   960 ;;		_UART_Init
   961 ;;		_UpdateTimes
   962 ;;		___awmod
   963 ;;		_init_ADC
   964 ;;		_luciSemaforo
   965 ;;		_map
   966 ;;		_rand
   967 ;;		_sendByte
   968 ;; This function is called by:
   969 ;;		Startup code after reset
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _main
   975  005B                     _main:	
   976  005B                     l3512:	
   977                           ;incstack = 0
   978                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   979                           
   980                           
   981                           ;main.c: 138:     TRISB = 0x38;
   982  005B  3038               	movlw	56
   983  005C  1683               	bsf	3,5	;RP0=1, select bank1
   984  005D  1303               	bcf	3,6	;RP1=0, select bank1
   985  005E  0086               	movwf	6	;volatile
   986                           
   987                           ;main.c: 139:     TRISC = 0x80;
   988  005F  3080               	movlw	128
   989  0060  0087               	movwf	7	;volatile
   990  0061                     l3514:	
   991                           
   992                           ;main.c: 140:     TRISD = 0x00;
   993  0061  0188               	clrf	8	;volatile
   994  0062                     l3516:	
   995                           
   996                           ;main.c: 141:     TRISE = 0x01;
   997  0062  3001               	movlw	1
   998  0063  0089               	movwf	9	;volatile
   999  0064                     l3518:	
  1000                           
  1001                           ;main.c: 142:     INTCON = 0xE0;
  1002  0064  30E0               	movlw	224
  1003  0065  008B               	movwf	11	;volatile
  1004  0066                     l3520:	
  1005                           
  1006                           ;main.c: 143:     OPTION_REG = 0x04;
  1007  0066  3004               	movlw	4
  1008  0067  0081               	movwf	1	;volatile
  1009  0068                     l3522:	
  1010                           
  1011                           ;main.c: 144:     TMR0 = 6;
  1012  0068  3006               	movlw	6
  1013  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1014  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1015  006B  0081               	movwf	1	;volatile
  1016  006C                     l3524:	
  1017                           
  1018                           ;main.c: 145:     T1CON = 0x31;
  1019  006C  3031               	movlw	49
  1020  006D  0090               	movwf	16	;volatile
  1021  006E                     l3526:	
  1022                           
  1023                           ;main.c: 147:     TMR1H = 60;
  1024  006E  303C               	movlw	60
  1025  006F  008F               	movwf	15	;volatile
  1026  0070                     l3528:	
  1027                           
  1028                           ;main.c: 148:     TMR1L = 176;
  1029  0070  30B0               	movlw	176
  1030  0071  008E               	movwf	14	;volatile
  1031  0072                     l3530:	
  1032                           
  1033                           ;main.c: 151:     init_ADC();
  1034  0072  120A  158A  21F4  120A  118A  	fcall	_init_ADC
  1035  0077                     l3532:	
  1036                           
  1037                           ;main.c: 152:     UART_Init(9600);
  1038  0077  3080               	movlw	128
  1039  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1041  007A  00B3               	movwf	UART_Init@baudrate
  1042  007B  3025               	movlw	37
  1043  007C  00B4               	movwf	UART_Init@baudrate+1
  1044  007D  120A  158A  22D1  120A  118A  	fcall	_UART_Init
  1045  0082                     l3534:	
  1046                           
  1047                           ;main.c: 153:     SetDefaultTimers(6, 4, 2, Semafori);
  1048  0082  3006               	movlw	6
  1049  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1050  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1051  0085  00A4               	movwf	SetDefaultTimers@rosso
  1052  0086  3000               	movlw	0
  1053  0087  00A5               	movwf	SetDefaultTimers@rosso+1
  1054  0088  3004               	movlw	4
  1055  0089  00A6               	movwf	SetDefaultTimers@verde
  1056  008A  3000               	movlw	0
  1057  008B  00A7               	movwf	SetDefaultTimers@verde+1
  1058  008C  3002               	movlw	2
  1059  008D  00A8               	movwf	SetDefaultTimers@giallo
  1060  008E  3000               	movlw	0
  1061  008F  00A9               	movwf	SetDefaultTimers@giallo+1
  1062  0090  3064               	movlw	(low (_Semafori| 0))& (0+255)
  1063  0091  00D2               	movwf	??_main
  1064  0092  0852               	movf	??_main,w
  1065  0093  00AA               	movwf	SetDefaultTimers@_semafori
  1066  0094  120A  118A  269F  120A  118A  	fcall	_SetDefaultTimers
  1067  0099                     l3536:	
  1068                           
  1069                           ;main.c: 155:     PORTCbits.RC0 = 0;
  1070  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1071  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1072  009B  1007               	bcf	7,0	;volatile
  1073  009C                     l3538:	
  1074                           
  1075                           ;main.c: 156:     PORTBbits.RB7 = 0;
  1076  009C  1386               	bcf	6,7	;volatile
  1077  009D                     l3540:	
  1078                           
  1079                           ;main.c: 157:     PORTCbits.RC2 = 0;
  1080  009D  1107               	bcf	7,2	;volatile
  1081  009E                     l3542:	
  1082                           
  1083                           ;main.c: 158:     PORTBbits.RB6 = 0;
  1084  009E  1306               	bcf	6,6	;volatile
  1085  009F                     l3544:	
  1086                           
  1087                           ;main.c: 159:     PORTCbits.RC1 = 0;
  1088  009F  1087               	bcf	7,1	;volatile
  1089  00A0                     l3546:	
  1090                           
  1091                           ;main.c: 160:     PORTBbits.RB1 = 0;
  1092  00A0  1086               	bcf	6,1	;volatile
  1093  00A1                     l3548:	
  1094                           
  1095                           ;main.c: 163:     {;main.c: 165:         if (readGateway.Bit)
  1096  00A1  1C60               	btfss	_readGateway,0
  1097  00A2  28A4               	goto	u2971
  1098  00A3  28A5               	goto	u2970
  1099  00A4                     u2971:	
  1100  00A4  2BBF               	goto	l223
  1101  00A5                     u2970:	
  1102  00A5  2BAA               	goto	l3636
  1103  00A6                     l225:	
  1104                           ;main.c: 168:             {;main.c: 169:             case 0x08:
  1105                           
  1106                           
  1107                           ;main.c: 170:                 readGatewayDone.Bit = 1;
  1108  00A6  1461               	bsf	_readGatewayDone,0
  1109                           
  1110                           ;main.c: 171:                 readGateway.Bit = 0;
  1111  00A7  1060               	bcf	_readGateway,0
  1112  00A8                     l3552:	
  1113                           
  1114                           ;main.c: 173:                 for (unsigned char i = 0; i < 4; i++)
  1115  00A8  1683               	bsf	3,5	;RP0=1, select bank3
  1116  00A9  1703               	bsf	3,6	;RP1=1, select bank3
  1117  00AA  0199               	clrf	main@i^(0+384)
  1118  00AB                     l3558:	
  1119                           
  1120                           ;main.c: 174:                 {;main.c: 176:                     unsigned char randomMot
      +                          o = (char)rand() % 20 + 1;
  1121  00AB  3014               	movlw	20
  1122  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1123  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1124  00AE  00B8               	movwf	___awmod@divisor
  1125  00AF  3000               	movlw	0
  1126  00B0  00B9               	movwf	___awmod@divisor+1
  1127  00B1  120A  158A  26E2  120A  118A  	fcall	_rand
  1128  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1129  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1130  00B8  0831               	movf	?_rand,w
  1131  00B9  00D2               	movwf	??_main
  1132  00BA  01D3               	clrf	??_main+1
  1133  00BB  0852               	movf	??_main,w
  1134  00BC  00BA               	movwf	___awmod@dividend
  1135  00BD  0853               	movf	??_main+1,w
  1136  00BE  00BB               	movwf	___awmod@dividend+1
  1137  00BF  120A  158A  248D  120A  118A  	fcall	___awmod
  1138  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1139  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1140  00C6  0838               	movf	?___awmod,w
  1141  00C7  3E01               	addlw	1
  1142  00C8  00D4               	movwf	??_main+2
  1143  00C9  0854               	movf	??_main+2,w
  1144  00CA  1683               	bsf	3,5	;RP0=1, select bank3
  1145  00CB  1703               	bsf	3,6	;RP1=1, select bank3
  1146  00CC  0090               	movwf	main@randomMoto^(0+384)
  1147                           
  1148                           ;main.c: 177:                     unsigned char randomCar = (char)rand() % 20 + 1;
  1149  00CD  3014               	movlw	20
  1150  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1151  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1152  00D0  00B8               	movwf	___awmod@divisor
  1153  00D1  3000               	movlw	0
  1154  00D2  00B9               	movwf	___awmod@divisor+1
  1155  00D3  120A  158A  26E2  120A  118A  	fcall	_rand
  1156  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1157  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1158  00DA  0831               	movf	?_rand,w
  1159  00DB  00D2               	movwf	??_main
  1160  00DC  01D3               	clrf	??_main+1
  1161  00DD  0852               	movf	??_main,w
  1162  00DE  00BA               	movwf	___awmod@dividend
  1163  00DF  0853               	movf	??_main+1,w
  1164  00E0  00BB               	movwf	___awmod@dividend+1
  1165  00E1  120A  158A  248D  120A  118A  	fcall	___awmod
  1166  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1167  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1168  00E8  0838               	movf	?___awmod,w
  1169  00E9  3E01               	addlw	1
  1170  00EA  00D4               	movwf	??_main+2
  1171  00EB  0854               	movf	??_main+2,w
  1172  00EC  1683               	bsf	3,5	;RP0=1, select bank3
  1173  00ED  1703               	bsf	3,6	;RP1=1, select bank3
  1174  00EE  0091               	movwf	main@randomCar^(0+384)
  1175                           
  1176                           ;main.c: 178:                     unsigned char randomTruck = (char)rand() % 20 + 1;
  1177  00EF  3014               	movlw	20
  1178  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1179  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1180  00F2  00B8               	movwf	___awmod@divisor
  1181  00F3  3000               	movlw	0
  1182  00F4  00B9               	movwf	___awmod@divisor+1
  1183  00F5  120A  158A  26E2  120A  118A  	fcall	_rand
  1184  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1185  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1186  00FC  0831               	movf	?_rand,w
  1187  00FD  00D2               	movwf	??_main
  1188  00FE  01D3               	clrf	??_main+1
  1189  00FF  0852               	movf	??_main,w
  1190  0100  00BA               	movwf	___awmod@dividend
  1191  0101  0853               	movf	??_main+1,w
  1192  0102  00BB               	movwf	___awmod@dividend+1
  1193  0103  120A  158A  248D  120A  118A  	fcall	___awmod
  1194  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1196  010A  0838               	movf	?___awmod,w
  1197  010B  3E01               	addlw	1
  1198  010C  00D4               	movwf	??_main+2
  1199  010D  0854               	movf	??_main+2,w
  1200  010E  1683               	bsf	3,5	;RP0=1, select bank3
  1201  010F  1703               	bsf	3,6	;RP1=1, select bank3
  1202  0110  0092               	movwf	main@randomTruck^(0+384)
  1203  0111                     l3560:	
  1204                           
  1205                           ;main.c: 180:                     motorcycle[i] = randomMoto;
  1206  0111  0810               	movf	main@randomMoto^(0+384),w
  1207  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0114  00D2               	movwf	??_main
  1210  0115  1683               	bsf	3,5	;RP0=1, select bank3
  1211  0116  1703               	bsf	3,6	;RP1=1, select bank3
  1212  0117  0819               	movf	main@i^(0+384),w
  1213  0118  3EE1               	addlw	(low (_motorcycle| 0))& (0+255)
  1214  0119  0084               	movwf	4
  1215  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1216  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1217  011C  0852               	movf	??_main,w
  1218  011D  1383               	bcf	3,7	;select IRP bank1
  1219  011E  0080               	movwf	0
  1220  011F                     l3562:	
  1221                           
  1222                           ;main.c: 181:                     car[i] = randomCar;
  1223  011F  1683               	bsf	3,5	;RP0=1, select bank3
  1224  0120  1703               	bsf	3,6	;RP1=1, select bank3
  1225  0121  0811               	movf	main@randomCar^(0+384),w
  1226  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0124  00D2               	movwf	??_main
  1229  0125  1683               	bsf	3,5	;RP0=1, select bank3
  1230  0126  1703               	bsf	3,6	;RP1=1, select bank3
  1231  0127  0819               	movf	main@i^(0+384),w
  1232  0128  3EDD               	addlw	(low (_car| 0))& (0+255)
  1233  0129  0084               	movwf	4
  1234  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1235  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1236  012C  0852               	movf	??_main,w
  1237  012D  0080               	movwf	0
  1238  012E                     l3564:	
  1239                           
  1240                           ;main.c: 182:                     truck[i] = randomTruck;
  1241  012E  1683               	bsf	3,5	;RP0=1, select bank3
  1242  012F  1703               	bsf	3,6	;RP1=1, select bank3
  1243  0130  0812               	movf	main@randomTruck^(0+384),w
  1244  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0133  00D2               	movwf	??_main
  1247  0134  1683               	bsf	3,5	;RP0=1, select bank3
  1248  0135  1703               	bsf	3,6	;RP1=1, select bank3
  1249  0136  0819               	movf	main@i^(0+384),w
  1250  0137  3ED9               	addlw	(low (_truck| 0))& (0+255)
  1251  0138  0084               	movwf	4
  1252  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1253  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1254  013B  0852               	movf	??_main,w
  1255  013C  0080               	movwf	0
  1256                           
  1257                           ;main.c: 185:                     switch (i)
  1258  013D  2A4E               	goto	l3576
  1259  013E                     l3566:	
  1260                           
  1261                           ;main.c: 188:                         sendByte(0x03, 0x01, motorcycle[i]);
  1262  013E  01B8               	clrf	sendByte@byte1
  1263  013F  0AB8               	incf	sendByte@byte1,f
  1264  0140  1683               	bsf	3,5	;RP0=1, select bank3
  1265  0141  1703               	bsf	3,6	;RP1=1, select bank3
  1266  0142  0819               	movf	main@i^(0+384),w
  1267  0143  3EE1               	addlw	(low (_motorcycle| 0))& (0+255)
  1268  0144  0084               	movwf	4
  1269  0145  0800               	movf	0,w
  1270  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0148  00D2               	movwf	??_main
  1273  0149  0852               	movf	??_main,w
  1274  014A  00B9               	movwf	sendByte@valore
  1275  014B  3003               	movlw	3
  1276  014C  120A  158A  226B  120A  118A  	fcall	_sendByte
  1277                           
  1278                           ;main.c: 189:                         sendByte(0x03, 0x02, car[i]);
  1279  0151  3002               	movlw	2
  1280  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0154  00D2               	movwf	??_main
  1283  0155  0852               	movf	??_main,w
  1284  0156  00B8               	movwf	sendByte@byte1
  1285  0157  1683               	bsf	3,5	;RP0=1, select bank3
  1286  0158  1703               	bsf	3,6	;RP1=1, select bank3
  1287  0159  0819               	movf	main@i^(0+384),w
  1288  015A  3EDD               	addlw	(low (_car| 0))& (0+255)
  1289  015B  0084               	movwf	4
  1290  015C  1383               	bcf	3,7	;select IRP bank1
  1291  015D  0800               	movf	0,w
  1292  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1293  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0160  00D3               	movwf	??_main+1
  1295  0161  0853               	movf	??_main+1,w
  1296  0162  00B9               	movwf	sendByte@valore
  1297  0163  3003               	movlw	3
  1298  0164  120A  158A  226B  120A  118A  	fcall	_sendByte
  1299                           
  1300                           ;main.c: 190:                         sendByte(0x03, 0x03, truck[i]);
  1301  0169  3003               	movlw	3
  1302  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1303  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1304  016C  00D2               	movwf	??_main
  1305  016D  0852               	movf	??_main,w
  1306  016E  00B8               	movwf	sendByte@byte1
  1307  016F  1683               	bsf	3,5	;RP0=1, select bank3
  1308  0170  1703               	bsf	3,6	;RP1=1, select bank3
  1309  0171  0819               	movf	main@i^(0+384),w
  1310  0172  3ED9               	addlw	(low (_truck| 0))& (0+255)
  1311  0173  0084               	movwf	4
  1312  0174  1383               	bcf	3,7	;select IRP bank1
  1313  0175  0800               	movf	0,w
  1314  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0178  00D3               	movwf	??_main+1
  1317  0179  0853               	movf	??_main+1,w
  1318  017A  00B9               	movwf	sendByte@valore
  1319  017B  3003               	movlw	3
  1320  017C  120A  158A  226B  120A  118A  	fcall	_sendByte
  1321                           
  1322                           ;main.c: 191:                         break;
  1323  0181  2A68               	goto	l3578
  1324  0182                     l3568:	
  1325                           
  1326                           ;main.c: 193:                         sendByte(0x05, 0x01, motorcycle[i]);
  1327  0182  01B8               	clrf	sendByte@byte1
  1328  0183  0AB8               	incf	sendByte@byte1,f
  1329  0184  1683               	bsf	3,5	;RP0=1, select bank3
  1330  0185  1703               	bsf	3,6	;RP1=1, select bank3
  1331  0186  0819               	movf	main@i^(0+384),w
  1332  0187  3EE1               	addlw	(low (_motorcycle| 0))& (0+255)
  1333  0188  0084               	movwf	4
  1334  0189  0800               	movf	0,w
  1335  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1336  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1337  018C  00D2               	movwf	??_main
  1338  018D  0852               	movf	??_main,w
  1339  018E  00B9               	movwf	sendByte@valore
  1340  018F  3005               	movlw	5
  1341  0190  120A  158A  226B  120A  118A  	fcall	_sendByte
  1342                           
  1343                           ;main.c: 194:                         sendByte(0x05, 0x02, car[i]);
  1344  0195  3002               	movlw	2
  1345  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1346  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1347  0198  00D2               	movwf	??_main
  1348  0199  0852               	movf	??_main,w
  1349  019A  00B8               	movwf	sendByte@byte1
  1350  019B  1683               	bsf	3,5	;RP0=1, select bank3
  1351  019C  1703               	bsf	3,6	;RP1=1, select bank3
  1352  019D  0819               	movf	main@i^(0+384),w
  1353  019E  3EDD               	addlw	(low (_car| 0))& (0+255)
  1354  019F  0084               	movwf	4
  1355  01A0  1383               	bcf	3,7	;select IRP bank1
  1356  01A1  0800               	movf	0,w
  1357  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1358  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1359  01A4  00D3               	movwf	??_main+1
  1360  01A5  0853               	movf	??_main+1,w
  1361  01A6  00B9               	movwf	sendByte@valore
  1362  01A7  3005               	movlw	5
  1363  01A8  120A  158A  226B  120A  118A  	fcall	_sendByte
  1364                           
  1365                           ;main.c: 195:                         sendByte(0x05, 0x03, truck[i]);
  1366  01AD  3003               	movlw	3
  1367  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1368  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1369  01B0  00D2               	movwf	??_main
  1370  01B1  0852               	movf	??_main,w
  1371  01B2  00B8               	movwf	sendByte@byte1
  1372  01B3  1683               	bsf	3,5	;RP0=1, select bank3
  1373  01B4  1703               	bsf	3,6	;RP1=1, select bank3
  1374  01B5  0819               	movf	main@i^(0+384),w
  1375  01B6  3ED9               	addlw	(low (_truck| 0))& (0+255)
  1376  01B7  0084               	movwf	4
  1377  01B8  1383               	bcf	3,7	;select IRP bank1
  1378  01B9  0800               	movf	0,w
  1379  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1380  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1381  01BC  00D3               	movwf	??_main+1
  1382  01BD  0853               	movf	??_main+1,w
  1383  01BE  00B9               	movwf	sendByte@valore
  1384  01BF  3005               	movlw	5
  1385  01C0  120A  158A  226B  120A  118A  	fcall	_sendByte
  1386                           
  1387                           ;main.c: 196:                         break;
  1388  01C5  2A68               	goto	l3578
  1389  01C6                     l3570:	
  1390                           
  1391                           ;main.c: 198:                         sendByte(0x07, 0x01, motorcycle[i]);
  1392  01C6  01B8               	clrf	sendByte@byte1
  1393  01C7  0AB8               	incf	sendByte@byte1,f
  1394  01C8  1683               	bsf	3,5	;RP0=1, select bank3
  1395  01C9  1703               	bsf	3,6	;RP1=1, select bank3
  1396  01CA  0819               	movf	main@i^(0+384),w
  1397  01CB  3EE1               	addlw	(low (_motorcycle| 0))& (0+255)
  1398  01CC  0084               	movwf	4
  1399  01CD  0800               	movf	0,w
  1400  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1401  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1402  01D0  00D2               	movwf	??_main
  1403  01D1  0852               	movf	??_main,w
  1404  01D2  00B9               	movwf	sendByte@valore
  1405  01D3  3007               	movlw	7
  1406  01D4  120A  158A  226B  120A  118A  	fcall	_sendByte
  1407                           
  1408                           ;main.c: 199:                         sendByte(0x07, 0x02, car[i]);
  1409  01D9  3002               	movlw	2
  1410  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1411  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1412  01DC  00D2               	movwf	??_main
  1413  01DD  0852               	movf	??_main,w
  1414  01DE  00B8               	movwf	sendByte@byte1
  1415  01DF  1683               	bsf	3,5	;RP0=1, select bank3
  1416  01E0  1703               	bsf	3,6	;RP1=1, select bank3
  1417  01E1  0819               	movf	main@i^(0+384),w
  1418  01E2  3EDD               	addlw	(low (_car| 0))& (0+255)
  1419  01E3  0084               	movwf	4
  1420  01E4  1383               	bcf	3,7	;select IRP bank1
  1421  01E5  0800               	movf	0,w
  1422  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1423  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1424  01E8  00D3               	movwf	??_main+1
  1425  01E9  0853               	movf	??_main+1,w
  1426  01EA  00B9               	movwf	sendByte@valore
  1427  01EB  3007               	movlw	7
  1428  01EC  120A  158A  226B  120A  118A  	fcall	_sendByte
  1429                           
  1430                           ;main.c: 200:                         sendByte(0x07, 0x03, truck[i]);
  1431  01F1  3003               	movlw	3
  1432  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1433  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1434  01F4  00D2               	movwf	??_main
  1435  01F5  0852               	movf	??_main,w
  1436  01F6  00B8               	movwf	sendByte@byte1
  1437  01F7  1683               	bsf	3,5	;RP0=1, select bank3
  1438  01F8  1703               	bsf	3,6	;RP1=1, select bank3
  1439  01F9  0819               	movf	main@i^(0+384),w
  1440  01FA  3ED9               	addlw	(low (_truck| 0))& (0+255)
  1441  01FB  0084               	movwf	4
  1442  01FC  1383               	bcf	3,7	;select IRP bank1
  1443  01FD  0800               	movf	0,w
  1444  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1445  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0200  00D3               	movwf	??_main+1
  1447  0201  0853               	movf	??_main+1,w
  1448  0202  00B9               	movwf	sendByte@valore
  1449  0203  3007               	movlw	7
  1450  0204  120A  158A  226B  120A  118A  	fcall	_sendByte
  1451                           
  1452                           ;main.c: 201:                         break;
  1453  0209  2A68               	goto	l3578
  1454  020A                     l3572:	
  1455                           
  1456                           ;main.c: 203:                         sendByte(0x09, 0x01, motorcycle[i]);
  1457  020A  01B8               	clrf	sendByte@byte1
  1458  020B  0AB8               	incf	sendByte@byte1,f
  1459  020C  1683               	bsf	3,5	;RP0=1, select bank3
  1460  020D  1703               	bsf	3,6	;RP1=1, select bank3
  1461  020E  0819               	movf	main@i^(0+384),w
  1462  020F  3EE1               	addlw	(low (_motorcycle| 0))& (0+255)
  1463  0210  0084               	movwf	4
  1464  0211  0800               	movf	0,w
  1465  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0214  00D2               	movwf	??_main
  1468  0215  0852               	movf	??_main,w
  1469  0216  00B9               	movwf	sendByte@valore
  1470  0217  3009               	movlw	9
  1471  0218  120A  158A  226B  120A  118A  	fcall	_sendByte
  1472                           
  1473                           ;main.c: 204:                         sendByte(0x09, 0x02, car[i]);
  1474  021D  3002               	movlw	2
  1475  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1476  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0220  00D2               	movwf	??_main
  1478  0221  0852               	movf	??_main,w
  1479  0222  00B8               	movwf	sendByte@byte1
  1480  0223  1683               	bsf	3,5	;RP0=1, select bank3
  1481  0224  1703               	bsf	3,6	;RP1=1, select bank3
  1482  0225  0819               	movf	main@i^(0+384),w
  1483  0226  3EDD               	addlw	(low (_car| 0))& (0+255)
  1484  0227  0084               	movwf	4
  1485  0228  1383               	bcf	3,7	;select IRP bank1
  1486  0229  0800               	movf	0,w
  1487  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1488  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1489  022C  00D3               	movwf	??_main+1
  1490  022D  0853               	movf	??_main+1,w
  1491  022E  00B9               	movwf	sendByte@valore
  1492  022F  3009               	movlw	9
  1493  0230  120A  158A  226B  120A  118A  	fcall	_sendByte
  1494                           
  1495                           ;main.c: 205:                         sendByte(0x09, 0x03, truck[i]);
  1496  0235  3003               	movlw	3
  1497  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0238  00D2               	movwf	??_main
  1500  0239  0852               	movf	??_main,w
  1501  023A  00B8               	movwf	sendByte@byte1
  1502  023B  1683               	bsf	3,5	;RP0=1, select bank3
  1503  023C  1703               	bsf	3,6	;RP1=1, select bank3
  1504  023D  0819               	movf	main@i^(0+384),w
  1505  023E  3ED9               	addlw	(low (_truck| 0))& (0+255)
  1506  023F  0084               	movwf	4
  1507  0240  1383               	bcf	3,7	;select IRP bank1
  1508  0241  0800               	movf	0,w
  1509  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0244  00D3               	movwf	??_main+1
  1512  0245  0853               	movf	??_main+1,w
  1513  0246  00B9               	movwf	sendByte@valore
  1514  0247  3009               	movlw	9
  1515  0248  120A  158A  226B  120A  118A  	fcall	_sendByte
  1516                           
  1517                           ;main.c: 206:                         break;
  1518  024D  2A68               	goto	l3578
  1519  024E                     l3576:	
  1520  024E  1683               	bsf	3,5	;RP0=1, select bank3
  1521  024F  1703               	bsf	3,6	;RP1=1, select bank3
  1522  0250  0819               	movf	main@i^(0+384),w
  1523  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0253  00D2               	movwf	??_main
  1526  0254  01D3               	clrf	??_main+1
  1527                           
  1528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1529                           ; Switch size 1, requested type "simple"
  1530                           ; Number of cases is 1, Range of values is 0 to 0
  1531                           ; switch strategies available:
  1532                           ; Name         Instructions Cycles
  1533                           ; simple_byte            4     3 (average)
  1534                           ; direct_byte           11     8 (fixed)
  1535                           ; jumptable            260     6 (fixed)
  1536                           ;	Chosen strategy is simple_byte
  1537  0255  0853               	movf	??_main+1,w
  1538  0256  3A00               	xorlw	0	; case 0
  1539  0257  1903               	skipnz
  1540  0258  2A5A               	goto	l3944
  1541  0259  2A68               	goto	l3578
  1542  025A                     l3944:	
  1543                           
  1544                           ; Switch size 1, requested type "simple"
  1545                           ; Number of cases is 4, Range of values is 0 to 3
  1546                           ; switch strategies available:
  1547                           ; Name         Instructions Cycles
  1548                           ; simple_byte           13     7 (average)
  1549                           ; direct_byte           20     8 (fixed)
  1550                           ; jumptable            260     6 (fixed)
  1551                           ;	Chosen strategy is simple_byte
  1552  025A  0852               	movf	??_main,w
  1553  025B  3A00               	xorlw	0	; case 0
  1554  025C  1903               	skipnz
  1555  025D  293E               	goto	l3566
  1556  025E  3A01               	xorlw	1	; case 1
  1557  025F  1903               	skipnz
  1558  0260  2982               	goto	l3568
  1559  0261  3A03               	xorlw	3	; case 2
  1560  0262  1903               	skipnz
  1561  0263  29C6               	goto	l3570
  1562  0264  3A01               	xorlw	1	; case 3
  1563  0265  1903               	skipnz
  1564  0266  2A0A               	goto	l3572
  1565  0267  2A68               	goto	l3578
  1566  0268                     l3578:	
  1567                           
  1568                           ;main.c: 208:                 }
  1569  0268  3001               	movlw	1
  1570  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1571  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1572  026B  00D2               	movwf	??_main
  1573  026C  0852               	movf	??_main,w
  1574  026D  1683               	bsf	3,5	;RP0=1, select bank3
  1575  026E  1703               	bsf	3,6	;RP1=1, select bank3
  1576  026F  0799               	addwf	main@i^(0+384),f
  1577  0270                     l3580:	
  1578  0270  3004               	movlw	4
  1579  0271  0219               	subwf	main@i^(0+384),w
  1580  0272  1C03               	skipc
  1581  0273  2A75               	goto	u2981
  1582  0274  2A76               	goto	u2980
  1583  0275                     u2981:	
  1584  0275  28AB               	goto	l3558
  1585  0276                     u2980:	
  1586  0276                     l3582:	
  1587                           
  1588                           ;main.c: 210:                 for (int i = 0; i < 4; i++)
  1589  0276  0195               	clrf	main@i_480^(0+384)
  1590  0277  0196               	clrf	(main@i_480+1)^(0+384)
  1591  0278                     l3588:	
  1592                           
  1593                           ;main.c: 211:                 {;main.c: 212:                     motorcycle[i] = 0;
  1594  0278  1683               	bsf	3,5	;RP0=1, select bank3
  1595  0279  1703               	bsf	3,6	;RP1=1, select bank3
  1596  027A  0815               	movf	main@i_480^(0+384),w
  1597  027B  3EE1               	addlw	(low (_motorcycle| 0))& (0+255)
  1598  027C  0084               	movwf	4
  1599  027D  1383               	bcf	3,7	;select IRP bank1
  1600  027E  0180               	clrf	0
  1601                           
  1602                           ;main.c: 213:                     car[i] = 0;
  1603  027F  0815               	movf	main@i_480^(0+384),w
  1604  0280  3EDD               	addlw	(low (_car| 0))& (0+255)
  1605  0281  0084               	movwf	4
  1606  0282  0180               	clrf	0
  1607                           
  1608                           ;main.c: 214:                     truck[i] = 0;
  1609  0283  0815               	movf	main@i_480^(0+384),w
  1610  0284  3ED9               	addlw	(low (_truck| 0))& (0+255)
  1611  0285  0084               	movwf	4
  1612  0286  0180               	clrf	0
  1613  0287                     l3590:	
  1614                           
  1615                           ;main.c: 215:                 }
  1616  0287  3001               	movlw	1
  1617  0288  0795               	addwf	main@i_480^(0+384),f
  1618  0289  1803               	skipnc
  1619  028A  0A96               	incf	(main@i_480+1)^(0+384),f
  1620  028B  3000               	movlw	0
  1621  028C  0796               	addwf	(main@i_480+1)^(0+384),f
  1622  028D                     l3592:	
  1623  028D  0816               	movf	(main@i_480+1)^(0+384),w
  1624  028E  3A80               	xorlw	128
  1625  028F  00FF               	movwf	btemp+1
  1626  0290  3080               	movlw	128
  1627  0291  027F               	subwf	btemp+1,w
  1628  0292  1D03               	skipz
  1629  0293  2A96               	goto	u2995
  1630  0294  3004               	movlw	4
  1631  0295  0215               	subwf	main@i_480^(0+384),w
  1632  0296                     u2995:	
  1633  0296  1C03               	skipc
  1634  0297  2A99               	goto	u2991
  1635  0298  2A9A               	goto	u2990
  1636  0299                     u2991:	
  1637  0299  2A78               	goto	l3588
  1638  029A                     u2990:	
  1639  029A                     l3594:	
  1640                           
  1641                           ;main.c: 217:                 for (unsigned char i = 0; i < 5; i++)
  1642  029A  1683               	bsf	3,5	;RP0=1, select bank3
  1643  029B  1703               	bsf	3,6	;RP1=1, select bank3
  1644  029C  0193               	clrf	main@i_481^(0+384)
  1645  029D                     l3600:	
  1646                           
  1647                           ;main.c: 218:                 {;main.c: 219:                     dataFromGateway[i] = 0;
  1648  029D  0813               	movf	main@i_481^(0+384),w
  1649  029E  3EAE               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1650  029F  0084               	movwf	4
  1651  02A0  1383               	bcf	3,7	;select IRP bank1
  1652  02A1  0180               	clrf	0
  1653  02A2                     l3602:	
  1654                           
  1655                           ;main.c: 220:                 }
  1656  02A2  3001               	movlw	1
  1657  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1658  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1659  02A5  00D2               	movwf	??_main
  1660  02A6  0852               	movf	??_main,w
  1661  02A7  1683               	bsf	3,5	;RP0=1, select bank3
  1662  02A8  1703               	bsf	3,6	;RP1=1, select bank3
  1663  02A9  0793               	addwf	main@i_481^(0+384),f
  1664  02AA                     l3604:	
  1665  02AA  3005               	movlw	5
  1666  02AB  0213               	subwf	main@i_481^(0+384),w
  1667  02AC  1C03               	skipc
  1668  02AD  2AAF               	goto	u3001
  1669  02AE  2AB0               	goto	u3000
  1670  02AF                     u3001:	
  1671  02AF  2A9D               	goto	l3600
  1672  02B0                     u3000:	
  1673  02B0  2BBF               	goto	l223
  1674  02B1                     l239:	
  1675                           ;main.c: 222:             case 0x0A:
  1676                           
  1677                           
  1678                           ;main.c: 223:                 readGatewayDone.Bit = 1;
  1679  02B1  1461               	bsf	_readGatewayDone,0
  1680                           
  1681                           ;main.c: 224:                 readGateway.Bit = 0;
  1682  02B2  1060               	bcf	_readGateway,0
  1683  02B3                     l3606:	
  1684                           
  1685                           ;main.c: 226:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1686  02B3  3000               	movlw	0
  1687  02B4  120A  158A  221E  120A  118A  	fcall	_ADC_Read
  1688  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1689  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1690  02BB  0824               	movf	?_ADC_Read,w
  1691  02BC  00D2               	movwf	??_main
  1692  02BD  0825               	movf	?_ADC_Read+1,w
  1693  02BE  00D3               	movwf	??_main+1
  1694  02BF  0D53               	rlf	??_main+1,w
  1695  02C0  0CD3               	rrf	??_main+1,f
  1696  02C1  0CD2               	rrf	??_main,f
  1697  02C2  0D53               	rlf	??_main+1,w
  1698  02C3  0CD3               	rrf	??_main+1,f
  1699  02C4  0CD2               	rrf	??_main,f
  1700  02C5  0852               	movf	??_main,w
  1701  02C6  00C8               	movwf	map@x
  1702  02C7  0853               	movf	??_main+1,w
  1703  02C8  00C9               	movwf	map@x+1
  1704  02C9  3000               	movlw	0
  1705  02CA  00CA               	movwf	map@in_min
  1706  02CB  00CB               	movwf	map@in_min+1
  1707  02CC  30FF               	movlw	255
  1708  02CD  00CC               	movwf	map@in_max
  1709  02CE  3000               	movlw	0
  1710  02CF  00CD               	movwf	map@in_max+1
  1711  02D0  30EC               	movlw	236
  1712  02D1  00CE               	movwf	map@out_min
  1713  02D2  30FF               	movlw	255
  1714  02D3  00CF               	movwf	map@out_min+1
  1715  02D4  303C               	movlw	60
  1716  02D5  00D0               	movwf	map@out_max
  1717  02D6  3000               	movlw	0
  1718  02D7  00D1               	movwf	map@out_max+1
  1719  02D8  120A  158A  229C  120A  118A  	fcall	_map
  1720  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1721  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1722  02DF  0848               	movf	?_map,w
  1723  02E0  00D4               	movwf	??_main+2
  1724  02E1  0854               	movf	??_main+2,w
  1725  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  1726  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  1727  02E4  00AC               	movwf	_temp^(0+128)
  1728                           
  1729                           ;main.c: 227:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1730  02E5  3001               	movlw	1
  1731  02E6  120A  158A  221E  120A  118A  	fcall	_ADC_Read
  1732  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1733  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1734  02ED  0824               	movf	?_ADC_Read,w
  1735  02EE  00D2               	movwf	??_main
  1736  02EF  0825               	movf	?_ADC_Read+1,w
  1737  02F0  00D3               	movwf	??_main+1
  1738  02F1  0D53               	rlf	??_main+1,w
  1739  02F2  0CD3               	rrf	??_main+1,f
  1740  02F3  0CD2               	rrf	??_main,f
  1741  02F4  0D53               	rlf	??_main+1,w
  1742  02F5  0CD3               	rrf	??_main+1,f
  1743  02F6  0CD2               	rrf	??_main,f
  1744  02F7  0852               	movf	??_main,w
  1745  02F8  00C8               	movwf	map@x
  1746  02F9  0853               	movf	??_main+1,w
  1747  02FA  00C9               	movwf	map@x+1
  1748  02FB  3000               	movlw	0
  1749  02FC  00CA               	movwf	map@in_min
  1750  02FD  00CB               	movwf	map@in_min+1
  1751  02FE  30FF               	movlw	255
  1752  02FF  00CC               	movwf	map@in_max
  1753  0300  3000               	movlw	0
  1754  0301  00CD               	movwf	map@in_max+1
  1755  0302  3000               	movlw	0
  1756  0303  00CE               	movwf	map@out_min
  1757  0304  00CF               	movwf	map@out_min+1
  1758  0305  3064               	movlw	100
  1759  0306  00D0               	movwf	map@out_max
  1760  0307  3000               	movlw	0
  1761  0308  00D1               	movwf	map@out_max+1
  1762  0309  120A  158A  229C  120A  118A  	fcall	_map
  1763  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1764  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0310  0848               	movf	?_map,w
  1766  0311  00D4               	movwf	??_main+2
  1767  0312  0854               	movf	??_main+2,w
  1768  0313  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0314  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0315  00AB               	movwf	_umidita^(0+128)
  1771                           
  1772                           ;main.c: 228:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1773  0316  3005               	movlw	5
  1774  0317  120A  158A  221E  120A  118A  	fcall	_ADC_Read
  1775  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1776  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1777  031E  0824               	movf	?_ADC_Read,w
  1778  031F  00D2               	movwf	??_main
  1779  0320  0825               	movf	?_ADC_Read+1,w
  1780  0321  00D3               	movwf	??_main+1
  1781  0322  0D53               	rlf	??_main+1,w
  1782  0323  0CD3               	rrf	??_main+1,f
  1783  0324  0CD2               	rrf	??_main,f
  1784  0325  0D53               	rlf	??_main+1,w
  1785  0326  0CD3               	rrf	??_main+1,f
  1786  0327  0CD2               	rrf	??_main,f
  1787  0328  0852               	movf	??_main,w
  1788  0329  00C8               	movwf	map@x
  1789  032A  0853               	movf	??_main+1,w
  1790  032B  00C9               	movwf	map@x+1
  1791  032C  3000               	movlw	0
  1792  032D  00CA               	movwf	map@in_min
  1793  032E  00CB               	movwf	map@in_min+1
  1794  032F  30FF               	movlw	255
  1795  0330  00CC               	movwf	map@in_max
  1796  0331  3000               	movlw	0
  1797  0332  00CD               	movwf	map@in_max+1
  1798  0333  3000               	movlw	0
  1799  0334  00CE               	movwf	map@out_min
  1800  0335  00CF               	movwf	map@out_min+1
  1801  0336  3064               	movlw	100
  1802  0337  00D0               	movwf	map@out_max
  1803  0338  3000               	movlw	0
  1804  0339  00D1               	movwf	map@out_max+1
  1805  033A  120A  158A  229C  120A  118A  	fcall	_map
  1806  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0341  0848               	movf	?_map,w
  1809  0342  00D4               	movwf	??_main+2
  1810  0343  0854               	movf	??_main+2,w
  1811  0344  1683               	bsf	3,5	;RP0=1, select bank1
  1812  0345  1303               	bcf	3,6	;RP1=0, select bank1
  1813  0346  00AA               	movwf	_pressione^(0+128)
  1814  0347                     l3608:	
  1815                           
  1816                           ;main.c: 229:                 sendByte(0x02, 0x00, temp);
  1817  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0349  01B8               	clrf	sendByte@byte1
  1820  034A  1683               	bsf	3,5	;RP0=1, select bank1
  1821  034B  1303               	bcf	3,6	;RP1=0, select bank1
  1822  034C  082C               	movf	_temp^(0+128),w
  1823  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1824  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1825  034F  00D2               	movwf	??_main
  1826  0350  0852               	movf	??_main,w
  1827  0351  00B9               	movwf	sendByte@valore
  1828  0352  3002               	movlw	2
  1829  0353  120A  158A  226B  120A  118A  	fcall	_sendByte
  1830  0358                     l3610:	
  1831                           
  1832                           ;main.c: 230:                 sendByte(0x04, 0x00, umidita);
  1833  0358  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0359  1303               	bcf	3,6	;RP1=0, select bank0
  1835  035A  01B8               	clrf	sendByte@byte1
  1836  035B  1683               	bsf	3,5	;RP0=1, select bank1
  1837  035C  1303               	bcf	3,6	;RP1=0, select bank1
  1838  035D  082B               	movf	_umidita^(0+128),w
  1839  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1840  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0360  00D2               	movwf	??_main
  1842  0361  0852               	movf	??_main,w
  1843  0362  00B9               	movwf	sendByte@valore
  1844  0363  3004               	movlw	4
  1845  0364  120A  158A  226B  120A  118A  	fcall	_sendByte
  1846  0369                     l3612:	
  1847                           
  1848                           ;main.c: 231:                 sendByte(0x06, 0x00, pressione);
  1849  0369  1283               	bcf	3,5	;RP0=0, select bank0
  1850  036A  1303               	bcf	3,6	;RP1=0, select bank0
  1851  036B  01B8               	clrf	sendByte@byte1
  1852  036C  1683               	bsf	3,5	;RP0=1, select bank1
  1853  036D  1303               	bcf	3,6	;RP1=0, select bank1
  1854  036E  082A               	movf	_pressione^(0+128),w
  1855  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0371  00D2               	movwf	??_main
  1858  0372  0852               	movf	??_main,w
  1859  0373  00B9               	movwf	sendByte@valore
  1860  0374  3006               	movlw	6
  1861  0375  120A  158A  226B  120A  118A  	fcall	_sendByte
  1862  037A                     l3614:	
  1863                           
  1864                           ;main.c: 233:                 for (unsigned char i = 0; i < 5; i++)
  1865  037A  1683               	bsf	3,5	;RP0=1, select bank3
  1866  037B  1703               	bsf	3,6	;RP1=1, select bank3
  1867  037C  0194               	clrf	main@i_483^(0+384)
  1868  037D                     l3616:	
  1869  037D  3005               	movlw	5
  1870  037E  0214               	subwf	main@i_483^(0+384),w
  1871  037F  1C03               	skipc
  1872  0380  2B82               	goto	u3011
  1873  0381  2B83               	goto	u3010
  1874  0382                     u3011:	
  1875  0382  2B84               	goto	l3620
  1876  0383                     u3010:	
  1877  0383  2BBF               	goto	l223
  1878  0384                     l3620:	
  1879                           
  1880                           ;main.c: 234:                 {;main.c: 235:                     dataFromGateway[i] = 0;
  1881  0384  0814               	movf	main@i_483^(0+384),w
  1882  0385  3EAE               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1883  0386  0084               	movwf	4
  1884  0387  1383               	bcf	3,7	;select IRP bank1
  1885  0388  0180               	clrf	0
  1886  0389                     l3622:	
  1887                           
  1888                           ;main.c: 236:                 }
  1889  0389  3001               	movlw	1
  1890  038A  1283               	bcf	3,5	;RP0=0, select bank0
  1891  038B  1303               	bcf	3,6	;RP1=0, select bank0
  1892  038C  00D2               	movwf	??_main
  1893  038D  0852               	movf	??_main,w
  1894  038E  1683               	bsf	3,5	;RP0=1, select bank3
  1895  038F  1703               	bsf	3,6	;RP1=1, select bank3
  1896  0390  0794               	addwf	main@i_483^(0+384),f
  1897  0391  2B7D               	goto	l3616
  1898  0392                     l3626:	
  1899                           
  1900                           ;main.c: 240:                 if (timerReadFromGateway >= 4)
  1901  0392  3004               	movlw	4
  1902  0393  1683               	bsf	3,5	;RP0=1, select bank1
  1903  0394  1303               	bcf	3,6	;RP1=0, select bank1
  1904  0395  022D               	subwf	_timerReadFromGateway^(0+128),w
  1905  0396  1C03               	skipc
  1906  0397  2B99               	goto	u3021
  1907  0398  2B9A               	goto	u3020
  1908  0399                     u3021:	
  1909  0399  2B9F               	goto	l3630
  1910  039A                     u3020:	
  1911  039A                     l3628:	
  1912                           
  1913                           ;main.c: 241:                 {;main.c: 242:                     readGatewayDone.Bit = 1
      +                          ;
  1914  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1915  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1916  039C  1461               	bsf	_readGatewayDone,0
  1917                           
  1918                           ;main.c: 243:                     readGatewayDone.Timeout = 1;
  1919  039D  14E1               	bsf	_readGatewayDone,1
  1920                           
  1921                           ;main.c: 244:                     readGateway.Bit = 0;
  1922  039E  1060               	bcf	_readGateway,0
  1923  039F                     l3630:	
  1924                           
  1925                           ;main.c: 247:                 if (dataFromGatewayIndex >= 15)
  1926  039F  300F               	movlw	15
  1927  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1928  03A1  025B               	subwf	_dataFromGatewayIndex,w
  1929  03A2  1C03               	skipc
  1930  03A3  2BA5               	goto	u3031
  1931  03A4  2BA6               	goto	u3030
  1932  03A5                     u3031:	
  1933  03A5  2BBF               	goto	l223
  1934  03A6                     u3030:	
  1935  03A6                     l3632:	
  1936                           
  1937                           ;main.c: 248:                 {;main.c: 249:                     readGatewayDone.Bit = 1
      +                          ;
  1938  03A6  1461               	bsf	_readGatewayDone,0
  1939                           
  1940                           ;main.c: 250:                     readGatewayDone.Timeout = 0;
  1941  03A7  10E1               	bcf	_readGatewayDone,1
  1942                           
  1943                           ;main.c: 251:                     readGateway.Bit = 0;
  1944  03A8  1060               	bcf	_readGateway,0
  1945  03A9  2BBF               	goto	l223
  1946  03AA                     l3636:	
  1947  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  1948  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  1949  03AC  082E               	movf	_dataFromGateway^(0+128),w
  1950  03AD  397F               	andlw	127
  1951  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1952  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1953  03B0  00D2               	movwf	??_main
  1954  03B1  01D3               	clrf	??_main+1
  1955                           
  1956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1957                           ; Switch size 1, requested type "simple"
  1958                           ; Number of cases is 1, Range of values is 0 to 0
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte            4     3 (average)
  1962                           ; direct_byte           11     8 (fixed)
  1963                           ; jumptable            260     6 (fixed)
  1964                           ;	Chosen strategy is simple_byte
  1965  03B2  0853               	movf	??_main+1,w
  1966  03B3  3A00               	xorlw	0	; case 0
  1967  03B4  1903               	skipnz
  1968  03B5  2BB7               	goto	l3946
  1969  03B6  2B92               	goto	l3626
  1970  03B7                     l3946:	
  1971                           
  1972                           ; Switch size 1, requested type "simple"
  1973                           ; Number of cases is 2, Range of values is 8 to 10
  1974                           ; switch strategies available:
  1975                           ; Name         Instructions Cycles
  1976                           ; simple_byte            7     4 (average)
  1977                           ; direct_byte           20    11 (fixed)
  1978                           ; jumptable            263     9 (fixed)
  1979                           ;	Chosen strategy is simple_byte
  1980  03B7  0852               	movf	??_main,w
  1981  03B8  3A08               	xorlw	8	; case 8
  1982  03B9  1903               	skipnz
  1983  03BA  28A6               	goto	l225
  1984  03BB  3A02               	xorlw	2	; case 10
  1985  03BC  1903               	skipnz
  1986  03BD  2AB1               	goto	l239
  1987  03BE  2B92               	goto	l3626
  1988  03BF                     l223:	
  1989                           ;main.c: 255:         }
  1990                           
  1991                           
  1992                           ;main.c: 258:         if (readGatewayDone.Bit)
  1993  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1994  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1995  03C1  1C61               	btfss	_readGatewayDone,0
  1996  03C2  2BC4               	goto	u3041
  1997  03C3  2BC5               	goto	u3040
  1998  03C4                     u3041:	
  1999  03C4  2BDD               	goto	l3650
  2000  03C5                     u3040:	
  2001  03C5                     l3638:	
  2002                           
  2003                           ;main.c: 259:         {;main.c: 261:             readGateway.Bit = 0;
  2004  03C5  1060               	bcf	_readGateway,0
  2005  03C6                     l3640:	
  2006                           
  2007                           ;main.c: 262:             dataFromGatewayIndex = 0;
  2008  03C6  01DB               	clrf	_dataFromGatewayIndex
  2009  03C7                     l3642:	
  2010                           
  2011                           ;main.c: 263:             readGatewayDone.Bit = 0;
  2012  03C7  1061               	bcf	_readGatewayDone,0
  2013                           
  2014                           ;main.c: 264:             timerReadFromGateway = 0;
  2015  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2016  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2017  03CA  01AD               	clrf	_timerReadFromGateway^(0+128)
  2018  03CB                     l3644:	
  2019                           
  2020                           ;main.c: 267:             if (readGatewayDone.Timeout)
  2021  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2022  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2023  03CD  1CE1               	btfss	_readGatewayDone,1
  2024  03CE  2BD0               	goto	u3051
  2025  03CF  2BD1               	goto	u3050
  2026  03D0                     u3051:	
  2027  03D0  2BD3               	goto	l3648
  2028  03D1                     u3050:	
  2029  03D1                     l3646:	
  2030                           
  2031                           ;main.c: 268:             {;main.c: 269:                 readGatewayDone.Timeout = 0;
  2032  03D1  10E1               	bcf	_readGatewayDone,1
  2033                           
  2034                           ;main.c: 270:             }
  2035  03D2  2BDD               	goto	l3650
  2036  03D3                     l3648:	
  2037                           
  2038                           ;main.c: 273:             {;main.c: 275:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  2039  03D3  3064               	movlw	(low (_Semafori| 0))& (0+255)
  2040  03D4  00D2               	movwf	??_main
  2041  03D5  0852               	movf	??_main,w
  2042  03D6  00AC               	movwf	SetReceivedTimes@_semafori
  2043  03D7  30AE               	movlw	(low (_dataFromGateway| 0))& (0+255)
  2044  03D8  120A  158A  24E8  120A  118A  	fcall	_SetReceivedTimes
  2045  03DD                     l3650:	
  2046                           
  2047                           ;main.c: 281:         if (secondPassed.Bit && cycled.Bit)
  2048  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2049  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2050  03DF  1C5F               	btfss	_secondPassed,0
  2051  03E0  2BE2               	goto	u3061
  2052  03E1  2BE3               	goto	u3060
  2053  03E2                     u3061:	
  2054  03E2  2CEC               	goto	l3692
  2055  03E3                     u3060:	
  2056  03E3                     l3652:	
  2057  03E3  1C5E               	btfss	_cycled,0
  2058  03E4  2BE6               	goto	u3071
  2059  03E5  2BE7               	goto	u3070
  2060  03E6                     u3071:	
  2061  03E6  2CEC               	goto	l3692
  2062  03E7                     u3070:	
  2063  03E7                     l3654:	
  2064                           
  2065                           ;main.c: 282:         {;main.c: 283:             for (unsigned char i = 0; i < n_semafor
      +                          i; i++)
  2066  03E7  1683               	bsf	3,5	;RP0=1, select bank3
  2067  03E8  1703               	bsf	3,6	;RP1=1, select bank3
  2068  03E9  0198               	clrf	main@i_485^(0+384)
  2069  03EA                     l3656:	
  2070  03EA  3002               	movlw	2
  2071  03EB  0218               	subwf	main@i_485^(0+384),w
  2072  03EC  1C03               	skipc
  2073  03ED  2BEF               	goto	u3081
  2074  03EE  2BF0               	goto	u3080
  2075  03EF                     u3081:	
  2076  03EF  2BF1               	goto	l3660
  2077  03F0                     u3080:	
  2078  03F0  2CEC               	goto	l3692
  2079  03F1                     l3660:	
  2080                           
  2081                           ;main.c: 284:             {;main.c: 285:                 if ((*Semafori[i]).times[0] != 
      +                          0)
  2082  03F1  0818               	movf	main@i_485^(0+384),w
  2083  03F2  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2084  03F3  0084               	movwf	4
  2085  03F4  1383               	bcf	3,7	;select IRP bank0
  2086  03F5  0800               	movf	0,w
  2087  03F6  0084               	movwf	4
  2088  03F7  0800               	movf	0,w
  2089  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2090  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2091  03FA  00D2               	movwf	??_main
  2092  03FB  0A84               	incf	4,f
  2093  03FC  0800               	movf	0,w
  2094  03FD  00D3               	movwf	??_main+1
  2095  03FE  0852               	movf	??_main,w
  2096  03FF  0453               	iorwf	??_main+1,w
  2097  0400  1903               	btfsc	3,2
  2098  0401  2C03               	goto	u3091
  2099  0402  2C04               	goto	u3090
  2100  0403                     u3091:	
  2101  0403  2CE3               	goto	l3688
  2102  0404                     u3090:	
  2103  0404                     l3662:	
  2104                           
  2105                           ;main.c: 286:                 {;main.c: 287:                     time[i]++;
  2106  0404  1683               	bsf	3,5	;RP0=1, select bank3
  2107  0405  1703               	bsf	3,6	;RP1=1, select bank3
  2108  0406  0818               	movf	main@i_485^(0+384),w
  2109  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0409  00D2               	movwf	??_main
  2112  040A  0752               	addwf	??_main,w
  2113  040B  3EA4               	addlw	(low (_time| 0))& (0+255)
  2114  040C  0084               	movwf	4
  2115  040D  3001               	movlw	1
  2116  040E  0780               	addwf	0,f
  2117  040F  0A84               	incf	4,f
  2118  0410  1803               	skipnc
  2119  0411  0A80               	incf	0,f
  2120                           
  2121                           ;main.c: 288:                     unsigned char lux_select = (*Semafori[i]).lux_select;
  2122  0412  1683               	bsf	3,5	;RP0=1, select bank3
  2123  0413  1703               	bsf	3,6	;RP1=1, select bank3
  2124  0414  0818               	movf	main@i_485^(0+384),w
  2125  0415  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2126  0416  0084               	movwf	4
  2127  0417  0800               	movf	0,w
  2128  0418  3E0C               	addlw	12
  2129  0419  0084               	movwf	4
  2130  041A  0800               	movf	0,w
  2131  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2132  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2133  041D  00D2               	movwf	??_main
  2134  041E  0852               	movf	??_main,w
  2135  041F  1683               	bsf	3,5	;RP0=1, select bank3
  2136  0420  1703               	bsf	3,6	;RP1=1, select bank3
  2137  0421  0097               	movwf	main@lux_select^(0+384)
  2138                           
  2139                           ;main.c: 290:                     if ((*Semafori[i]).times[lux_select] - time[i] < 0)
  2140  0422  0818               	movf	main@i_485^(0+384),w
  2141  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2143  0425  00D2               	movwf	??_main
  2144  0426  0752               	addwf	??_main,w
  2145  0427  3EA4               	addlw	(low (_time| 0))& (0+255)
  2146  0428  0084               	movwf	4
  2147  0429  0800               	movf	0,w
  2148  042A  00D3               	movwf	??_main+1
  2149  042B  0A84               	incf	4,f
  2150  042C  0800               	movf	0,w
  2151  042D  00D4               	movwf	??_main+2
  2152  042E  1683               	bsf	3,5	;RP0=1, select bank3
  2153  042F  1703               	bsf	3,6	;RP1=1, select bank3
  2154  0430  0818               	movf	main@i_485^(0+384),w
  2155  0431  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2156  0432  0084               	movwf	4
  2157  0433  0817               	movf	main@lux_select^(0+384),w
  2158  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0436  00D5               	movwf	??_main+3
  2161  0437  0755               	addwf	??_main+3,w
  2162  0438  0700               	addwf	0,w
  2163  0439  00D6               	movwf	??_main+4
  2164  043A  0856               	movf	??_main+4,w
  2165  043B  0084               	movwf	4
  2166  043C  0800               	movf	0,w
  2167  043D  00D7               	movwf	??_main+5
  2168  043E  0A84               	incf	4,f
  2169  043F  0800               	movf	0,w
  2170  0440  00D8               	movwf	??_main+6
  2171  0441  0853               	movf	??_main+1,w
  2172  0442  0257               	subwf	??_main+5,w
  2173  0443  00D9               	movwf	??_main+7
  2174  0444  0854               	movf	??_main+2,w
  2175  0445  1C03               	skipc
  2176  0446  0A54               	incf	??_main+2,w
  2177  0447  0258               	subwf	??_main+6,w
  2178  0448  00DA               	movwf	??_main+8
  2179  0449  1FDA               	btfss	??_main+8,7
  2180  044A  2C4C               	goto	u3101
  2181  044B  2C4D               	goto	u3100
  2182  044C                     u3101:	
  2183  044C  2C89               	goto	l252
  2184  044D                     u3100:	
  2185  044D                     l3664:	
  2186                           
  2187                           ;main.c: 291:                     {;main.c: 292:                         lux_select++;
  2188  044D  3001               	movlw	1
  2189  044E  00D2               	movwf	??_main
  2190  044F  0852               	movf	??_main,w
  2191  0450  1683               	bsf	3,5	;RP0=1, select bank3
  2192  0451  1703               	bsf	3,6	;RP1=1, select bank3
  2193  0452  0797               	addwf	main@lux_select^(0+384),f
  2194  0453                     l3666:	
  2195                           
  2196                           ;main.c: 293:                         time[i] = 1;
  2197  0453  0818               	movf	main@i_485^(0+384),w
  2198  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0455  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0456  00D2               	movwf	??_main
  2201  0457  0752               	addwf	??_main,w
  2202  0458  3EA4               	addlw	(low (_time| 0))& (0+255)
  2203  0459  0084               	movwf	4
  2204  045A  3001               	movlw	1
  2205  045B  0080               	movwf	0
  2206  045C  0A84               	incf	4,f
  2207  045D  3000               	movlw	0
  2208  045E  0080               	movwf	0
  2209  045F                     l3668:	
  2210                           
  2211                           ;main.c: 295:                         if (lux_select >= 3)
  2212  045F  3003               	movlw	3
  2213  0460  1683               	bsf	3,5	;RP0=1, select bank3
  2214  0461  1703               	bsf	3,6	;RP1=1, select bank3
  2215  0462  0217               	subwf	main@lux_select^(0+384),w
  2216  0463  1C03               	skipc
  2217  0464  2C66               	goto	u3111
  2218  0465  2C67               	goto	u3110
  2219  0466                     u3111:	
  2220  0466  2C89               	goto	l252
  2221  0467                     u3110:	
  2222  0467                     l3670:	
  2223                           
  2224                           ;main.c: 296:                         {;main.c: 297:                             lux_sel
      +                          ect = 0;
  2225  0467  0197               	clrf	main@lux_select^(0+384)
  2226  0468                     l3672:	
  2227                           
  2228                           ;main.c: 299:                             if (i == 0)
  2229  0468  0818               	movf	main@i_485^(0+384),w
  2230  0469  1D03               	btfss	3,2
  2231  046A  2C6C               	goto	u3121
  2232  046B  2C6D               	goto	u3120
  2233  046C                     u3121:	
  2234  046C  2C89               	goto	l252
  2235  046D                     u3120:	
  2236  046D                     l3674:	
  2237                           
  2238                           ;main.c: 300:                             {;main.c: 301:                                
      +                           UpdateTimes(Semafori);
  2239  046D  3064               	movlw	(low (_Semafori| 0))& (0+255)
  2240  046E  120A  158A  2677  120A  118A  	fcall	_UpdateTimes
  2241  0473                     l3676:	
  2242                           
  2243                           ;main.c: 303:                                 time[0] = 1;
  2244  0473  3001               	movlw	1
  2245  0474  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0475  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0476  00A4               	movwf	_time^(0+128)
  2248  0477  3000               	movlw	0
  2249  0478  00A5               	movwf	(_time^(0+128)+1)
  2250  0479                     l3678:	
  2251                           
  2252                           ;main.c: 304:                                 time[1] = 1;
  2253  0479  3001               	movlw	1
  2254  047A  00A6               	movwf	(_time^(0+128)+2)
  2255  047B  3000               	movlw	0
  2256  047C  00A7               	movwf	(_time^(0+128)+3)
  2257  047D                     l3680:	
  2258                           
  2259                           ;main.c: 306:                                 (*Semafori[0]).lux_select = 0;
  2260  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2261  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2262  047F  0864               	movf	_Semafori,w
  2263  0480  3E0C               	addlw	12
  2264  0481  0084               	movwf	4
  2265  0482  1383               	bcf	3,7	;select IRP bank0
  2266  0483  0180               	clrf	0
  2267  0484                     l3682:	
  2268                           
  2269                           ;main.c: 307:                                 (*Semafori[1]).lux_select = 1;
  2270  0484  0865               	movf	low ((_Semafori| 0+1)),w
  2271  0485  3E0C               	addlw	12
  2272  0486  0084               	movwf	4
  2273  0487  0180               	clrf	0
  2274  0488  0A80               	incf	0,f
  2275  0489                     l252:	
  2276                           ;main.c: 310:                     }
  2277                           
  2278                           
  2279                           ;main.c: 312:                     luciSemaforo(i, lux_select);
  2280  0489  1683               	bsf	3,5	;RP0=1, select bank3
  2281  048A  1703               	bsf	3,6	;RP1=1, select bank3
  2282  048B  0817               	movf	main@lux_select^(0+384),w
  2283  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2284  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2285  048E  00D2               	movwf	??_main
  2286  048F  0852               	movf	??_main,w
  2287  0490  00A4               	movwf	luciSemaforo@lux
  2288  0491  1683               	bsf	3,5	;RP0=1, select bank3
  2289  0492  1703               	bsf	3,6	;RP1=1, select bank3
  2290  0493  0818               	movf	main@i_485^(0+384),w
  2291  0494  120A  158A  23E5  120A  118A  	fcall	_luciSemaforo
  2292  0499                     l3684:	
  2293                           
  2294                           ;main.c: 313:                     (*Semafori[i]).lux_select = lux_select;
  2295  0499  1683               	bsf	3,5	;RP0=1, select bank3
  2296  049A  1703               	bsf	3,6	;RP1=1, select bank3
  2297  049B  0817               	movf	main@lux_select^(0+384),w
  2298  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2299  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2300  049E  00D2               	movwf	??_main
  2301  049F  1683               	bsf	3,5	;RP0=1, select bank3
  2302  04A0  1703               	bsf	3,6	;RP1=1, select bank3
  2303  04A1  0818               	movf	main@i_485^(0+384),w
  2304  04A2  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2305  04A3  0084               	movwf	4
  2306  04A4  1383               	bcf	3,7	;select IRP bank0
  2307  04A5  0800               	movf	0,w
  2308  04A6  3E0C               	addlw	12
  2309  04A7  0084               	movwf	4
  2310  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2311  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2312  04AA  0852               	movf	??_main,w
  2313  04AB  0080               	movwf	0
  2314  04AC                     l3686:	
  2315                           
  2316                           ;main.c: 314:                     GetDigits(DigitsArr, i, (*Semafori[i]).times[lux_selec
      +                          t] - time[i]);
  2317  04AC  1683               	bsf	3,5	;RP0=1, select bank3
  2318  04AD  1703               	bsf	3,6	;RP1=1, select bank3
  2319  04AE  0818               	movf	main@i_485^(0+384),w
  2320  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2321  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2322  04B1  00D2               	movwf	??_main
  2323  04B2  0852               	movf	??_main,w
  2324  04B3  00C8               	movwf	GetDigits@index
  2325  04B4  1683               	bsf	3,5	;RP0=1, select bank3
  2326  04B5  1703               	bsf	3,6	;RP1=1, select bank3
  2327  04B6  0818               	movf	main@i_485^(0+384),w
  2328  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2329  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2330  04B9  00D3               	movwf	??_main+1
  2331  04BA  0753               	addwf	??_main+1,w
  2332  04BB  3EA4               	addlw	(low (_time| 0))& (0+255)
  2333  04BC  0084               	movwf	4
  2334  04BD  0800               	movf	0,w
  2335  04BE  00D4               	movwf	??_main+2
  2336  04BF  0A84               	incf	4,f
  2337  04C0  0800               	movf	0,w
  2338  04C1  00D5               	movwf	??_main+3
  2339  04C2  1683               	bsf	3,5	;RP0=1, select bank3
  2340  04C3  1703               	bsf	3,6	;RP1=1, select bank3
  2341  04C4  0818               	movf	main@i_485^(0+384),w
  2342  04C5  3E64               	addlw	(low (_Semafori| 0))& (0+255)
  2343  04C6  0084               	movwf	4
  2344  04C7  0817               	movf	main@lux_select^(0+384),w
  2345  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2346  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2347  04CA  00D6               	movwf	??_main+4
  2348  04CB  0756               	addwf	??_main+4,w
  2349  04CC  0700               	addwf	0,w
  2350  04CD  00D7               	movwf	??_main+5
  2351  04CE  0857               	movf	??_main+5,w
  2352  04CF  0084               	movwf	4
  2353  04D0  0800               	movf	0,w
  2354  04D1  00D8               	movwf	??_main+6
  2355  04D2  0A84               	incf	4,f
  2356  04D3  0800               	movf	0,w
  2357  04D4  00D9               	movwf	??_main+7
  2358  04D5  0854               	movf	??_main+2,w
  2359  04D6  0258               	subwf	??_main+6,w
  2360  04D7  00C9               	movwf	GetDigits@Time
  2361  04D8  0855               	movf	??_main+3,w
  2362  04D9  1C03               	skipc
  2363  04DA  0A55               	incf	??_main+3,w
  2364  04DB  0259               	subwf	??_main+7,w
  2365  04DC  00CA               	movwf	GetDigits@Time+1
  2366  04DD  3062               	movlw	(low (_DigitsArr| 0))& (0+255)
  2367  04DE  120A  118A  250A  120A  118A  	fcall	_GetDigits
  2368  04E3                     l3688:	
  2369                           
  2370                           ;main.c: 316:             }
  2371  04E3  3001               	movlw	1
  2372  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2373  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2374  04E6  00D2               	movwf	??_main
  2375  04E7  0852               	movf	??_main,w
  2376  04E8  1683               	bsf	3,5	;RP0=1, select bank3
  2377  04E9  1703               	bsf	3,6	;RP1=1, select bank3
  2378  04EA  0798               	addwf	main@i_485^(0+384),f
  2379  04EB  2BEA               	goto	l3656
  2380  04EC                     l3692:	
  2381                           
  2382                           ;main.c: 319:         ShowDigitsOnDisplay();
  2383  04EC  120A  158A  2753  120A  118A  	fcall	_ShowDigitsOnDisplay
  2384  04F1                     l3694:	
  2385                           
  2386                           ;main.c: 325:         if (secondPassed.Bit && cycled.Bit)
  2387  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2388  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2389  04F3  1C5F               	btfss	_secondPassed,0
  2390  04F4  2CF6               	goto	u3131
  2391  04F5  2CF7               	goto	u3130
  2392  04F6                     u3131:	
  2393  04F6  2CFD               	goto	l255
  2394  04F7                     u3130:	
  2395  04F7                     l3696:	
  2396  04F7  1C5E               	btfss	_cycled,0
  2397  04F8  2CFA               	goto	u3141
  2398  04F9  2CFB               	goto	u3140
  2399  04FA                     u3141:	
  2400  04FA  2CFD               	goto	l255
  2401  04FB                     u3140:	
  2402  04FB                     l3698:	
  2403                           
  2404                           ;main.c: 326:         {;main.c: 327:             secondPassed.Bit = 0;
  2405  04FB  105F               	bcf	_secondPassed,0
  2406                           
  2407                           ;main.c: 328:             cycled.Bit = 0;
  2408  04FC  105E               	bcf	_cycled,0
  2409  04FD                     l255:	
  2410                           ;main.c: 329:         }
  2411                           
  2412                           
  2413                           ;main.c: 330:         if (secondPassed.Bit && !cycled.Bit)
  2414  04FD  1C5F               	btfss	_secondPassed,0
  2415  04FE  2D00               	goto	u3151
  2416  04FF  2D01               	goto	u3150
  2417  0500                     u3151:	
  2418  0500  28A1               	goto	l3548
  2419  0501                     u3150:	
  2420  0501                     l3700:	
  2421  0501  185E               	btfsc	_cycled,0
  2422  0502  2D04               	goto	u3161
  2423  0503  2D05               	goto	u3160
  2424  0504                     u3161:	
  2425  0504  28A1               	goto	l3548
  2426  0505                     u3160:	
  2427  0505                     l3702:	
  2428                           
  2429                           ;main.c: 331:         {;main.c: 332:             cycled.Bit = 1;
  2430  0505  145E               	bsf	_cycled,0
  2431  0506  28A1               	goto	l3548
  2432  0507  120A  118A  2810   	ljmp	start
  2433  050A                     __end_of_main:	
  2434                           
  2435                           	psect	text1
  2436  0A6B                     __ptext1:	
  2437 ;; *************** function _sendByte *****************
  2438 ;; Defined at:
  2439 ;;		line 394 in file "main.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  byte0           1    wreg     unsigned char 
  2442 ;;  byte1           1   24[BANK0 ] unsigned char 
  2443 ;;  valore          1   25[BANK0 ] unsigned char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  byte0           1   29[BANK0 ] unsigned char 
  2446 ;;  i               1   31[BANK0 ] unsigned char 
  2447 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2448 ;;		 -> BuildByte@txByte(5), 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       2       0       0       0
  2459 ;;      Locals:         0       3       0       0       0
  2460 ;;      Temps:          0       3       0       0       0
  2461 ;;      Totals:         0       8       0       0       0
  2462 ;;Total ram usage:        8 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    4
  2465 ;; This function calls:
  2466 ;;		_BuildByte
  2467 ;;		_UART_TxChar
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function _sendByte
  2475  0A6B                     _sendByte:	
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2479                           ;sendByte@byte0 stored from wreg
  2480  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0A6D  00BD               	movwf	sendByte@byte0
  2483  0A6E                     l3416:	
  2484                           
  2485                           ;main.c: 394: void sendByte(char byte0, char byte1, char valore);main.c: 395: {;main.c: 
      +                          396:     char *txByte;;main.c: 397:     txByte = BuildByte(byte0, byte1, valore);
  2486  0A6E  0838               	movf	sendByte@byte1,w
  2487  0A6F  00BA               	movwf	??_sendByte
  2488  0A70  083A               	movf	??_sendByte,w
  2489  0A71  00A4               	movwf	BuildByte@byte1
  2490  0A72  0839               	movf	sendByte@valore,w
  2491  0A73  00BB               	movwf	??_sendByte+1
  2492  0A74  083B               	movf	??_sendByte+1,w
  2493  0A75  00A5               	movwf	BuildByte@valore
  2494  0A76  083D               	movf	sendByte@byte0,w
  2495  0A77  120A  118A  25D7  120A  158A  	fcall	_BuildByte
  2496  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0A7E  00BC               	movwf	??_sendByte+2
  2499  0A7F  083C               	movf	??_sendByte+2,w
  2500  0A80  00BE               	movwf	sendByte@txByte
  2501  0A81                     l3418:	
  2502                           
  2503                           ;main.c: 399:     for (unsigned char i = 0; i < 5; i++)
  2504  0A81  01BF               	clrf	sendByte@i
  2505  0A82                     l3424:	
  2506                           
  2507                           ;main.c: 400:     {;main.c: 401:         UART_TxChar(*(txByte++));
  2508  0A82  083E               	movf	sendByte@txByte,w
  2509  0A83  0084               	movwf	4
  2510  0A84  1383               	bcf	3,7	;select IRP bank0
  2511  0A85  0800               	movf	0,w
  2512  0A86  120A  118A  27F3  120A  158A  	fcall	_UART_TxChar
  2513  0A8B                     l3426:	
  2514  0A8B  3001               	movlw	1
  2515  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  2516  0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0A8E  00BA               	movwf	??_sendByte
  2518  0A8F  083A               	movf	??_sendByte,w
  2519  0A90  07BE               	addwf	sendByte@txByte,f
  2520  0A91                     l3428:	
  2521                           
  2522                           ;main.c: 402:     }
  2523  0A91  3001               	movlw	1
  2524  0A92  00BA               	movwf	??_sendByte
  2525  0A93  083A               	movf	??_sendByte,w
  2526  0A94  07BF               	addwf	sendByte@i,f
  2527  0A95                     l3430:	
  2528  0A95  3005               	movlw	5
  2529  0A96  023F               	subwf	sendByte@i,w
  2530  0A97  1C03               	skipc
  2531  0A98  2A9A               	goto	u2881
  2532  0A99  2A9B               	goto	u2880
  2533  0A9A                     u2881:	
  2534  0A9A  2A82               	goto	l3424
  2535  0A9B                     u2880:	
  2536  0A9B                     l294:	
  2537  0A9B  0008               	return
  2538  0A9C                     __end_of_sendByte:	
  2539                           
  2540                           	psect	text2
  2541  07F3                     __ptext2:	
  2542 ;; *************** function _UART_TxChar *****************
  2543 ;; Defined at:
  2544 ;;		line 369 in file "main.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  ch              1    wreg     unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  ch              1    4[BANK0 ] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         0       0       0       0       0
  2559 ;;      Locals:         0       1       0       0       0
  2560 ;;      Temps:          0       0       0       0       0
  2561 ;;      Totals:         0       1       0       0       0
  2562 ;;Total ram usage:        1 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    3
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_sendByte
  2569 ;;		_UART_Write_Text
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _UART_TxChar
  2575  07F3                     _UART_TxChar:	
  2576                           
  2577                           ;incstack = 0
  2578                           ; Regs used in _UART_TxChar: [wreg]
  2579                           ;UART_TxChar@ch stored from wreg
  2580  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  2581  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  2582  07F5  00A4               	movwf	UART_TxChar@ch
  2583  07F6                     l3108:	
  2584  07F6                     l274:	
  2585                           ;main.c: 372:         ;
  2586                           
  2587                           
  2588                           ;main.c: 371:     while (!TXIF)
  2589  07F6  1E0C               	btfss	12,4	;volatile
  2590  07F7  2FF9               	goto	u2371
  2591  07F8  2FFA               	goto	u2370
  2592  07F9                     u2371:	
  2593  07F9  2FF6               	goto	l274
  2594  07FA                     u2370:	
  2595  07FA                     l276:	
  2596                           
  2597                           ;main.c: 373:     TXIF = 0;
  2598  07FA  120C               	bcf	12,4	;volatile
  2599  07FB                     l3110:	
  2600                           
  2601                           ;main.c: 374:     TXREG = ch;
  2602  07FB  0824               	movf	UART_TxChar@ch,w
  2603  07FC  0099               	movwf	25	;volatile
  2604  07FD                     l277:	
  2605  07FD  0008               	return
  2606  07FE                     __end_of_UART_TxChar:	
  2607                           
  2608                           	psect	text3
  2609  05D7                     __ptext3:	
  2610 ;; *************** function _BuildByte *****************
  2611 ;; Defined at:
  2612 ;;		line 2 in file "./CustomLib/Serial.h"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  byte0           1    wreg     unsigned char 
  2615 ;;  byte1           1    4[BANK0 ] unsigned char 
  2616 ;;  valore          1    5[BANK0 ] unsigned char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  byte0           1    8[BANK0 ] unsigned char 
  2619 ;;  y               2   18[BANK0 ] int 
  2620 ;;  y               2   16[BANK0 ] int 
  2621 ;;  i               2   22[BANK0 ] int 
  2622 ;;  i               2   20[BANK0 ] int 
  2623 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2624 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2625 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      PTR unsigned char 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         0       2       0       0       0
  2636 ;;      Locals:         0      16       0       0       0
  2637 ;;      Temps:          0       2       0       0       0
  2638 ;;      Totals:         0      20       0       0       0
  2639 ;;Total ram usage:       20 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    3
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_sendByte
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _BuildByte
  2651  05D7                     _BuildByte:	
  2652                           
  2653                           ;incstack = 0
  2654                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2655                           ;BuildByte@byte0 stored from wreg
  2656  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2657  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2658  05D9  00A8               	movwf	BuildByte@byte0
  2659  05DA                     l3026:	
  2660                           
  2661                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2662  05DA  0828               	movf	BuildByte@byte0,w
  2663  05DB  397F               	andlw	127
  2664  05DC  00A6               	movwf	??_BuildByte
  2665  05DD  0826               	movf	??_BuildByte,w
  2666  05DE  00A9               	movwf	BuildByte@txByte
  2667                           
  2668                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2669  05DF  0824               	movf	BuildByte@byte1,w
  2670  05E0  397F               	andlw	127
  2671  05E1  00A6               	movwf	??_BuildByte
  2672  05E2  0826               	movf	??_BuildByte,w
  2673  05E3  00AA               	movwf	BuildByte@txByte+1
  2674                           
  2675                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2676  05E4  0825               	movf	BuildByte@valore,w
  2677  05E5  397F               	andlw	127
  2678  05E6  00A6               	movwf	??_BuildByte
  2679  05E7  0826               	movf	??_BuildByte,w
  2680  05E8  00AB               	movwf	BuildByte@txByte+2
  2681  05E9                     l3028:	
  2682                           
  2683                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2684  05E9  0825               	movf	BuildByte@valore,w
  2685  05EA  00A6               	movwf	??_BuildByte
  2686  05EB  3007               	movlw	7
  2687  05EC                     u2265:	
  2688  05EC  1003               	clrc
  2689  05ED  0CA6               	rrf	??_BuildByte,f
  2690  05EE  3EFF               	addlw	-1
  2691  05EF  1D03               	skipz
  2692  05F0  2DEC               	goto	u2265
  2693  05F1  0826               	movf	??_BuildByte,w
  2694  05F2  397F               	andlw	127
  2695  05F3  00A7               	movwf	??_BuildByte+1
  2696  05F4  0827               	movf	??_BuildByte+1,w
  2697  05F5  00AC               	movwf	BuildByte@txByte+3
  2698  05F6                     l3030:	
  2699                           
  2700                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2701  05F6  01AE               	clrf	BuildByte@sommaRow
  2702  05F7                     l3032:	
  2703                           
  2704                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2705  05F7  01AF               	clrf	BuildByte@sommaColumn
  2706  05F8                     l3034:	
  2707                           
  2708                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2709  05F8  01B4               	clrf	BuildByte@i
  2710  05F9  01B5               	clrf	BuildByte@i+1
  2711  05FA                     l3040:	
  2712                           
  2713                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2714  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2715  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2716  05FC  01B0               	clrf	BuildByte@y
  2717  05FD  01B1               	clrf	BuildByte@y+1
  2718  05FE                     l3046:	
  2719                           
  2720                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2721  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2722  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0600  0834               	movf	BuildByte@i,w
  2724  0601  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2725  0602  0084               	movwf	4
  2726  0603  1383               	bcf	3,7	;select IRP bank0
  2727  0604  0800               	movf	0,w
  2728  0605  00A6               	movwf	??_BuildByte
  2729  0606  0A30               	incf	BuildByte@y,w
  2730  0607  2E0A               	goto	u2274
  2731  0608                     u2275:	
  2732  0608  1003               	clrc
  2733  0609  0CA6               	rrf	??_BuildByte,f
  2734  060A                     u2274:	
  2735  060A  3EFF               	addlw	-1
  2736  060B  1D03               	skipz
  2737  060C  2E08               	goto	u2275
  2738  060D  0826               	movf	??_BuildByte,w
  2739  060E  3901               	andlw	1
  2740  060F  00A7               	movwf	??_BuildByte+1
  2741  0610  0827               	movf	??_BuildByte+1,w
  2742  0611  07AE               	addwf	BuildByte@sommaRow,f
  2743  0612                     l3048:	
  2744                           
  2745                           ;./CustomLib/Serial.h: 18:         }
  2746  0612  3001               	movlw	1
  2747  0613  07B0               	addwf	BuildByte@y,f
  2748  0614  1803               	skipnc
  2749  0615  0AB1               	incf	BuildByte@y+1,f
  2750  0616  3000               	movlw	0
  2751  0617  07B1               	addwf	BuildByte@y+1,f
  2752  0618                     l3050:	
  2753  0618  0831               	movf	BuildByte@y+1,w
  2754  0619  3A80               	xorlw	128
  2755  061A  00FF               	movwf	btemp+1
  2756  061B  3080               	movlw	128
  2757  061C  027F               	subwf	btemp+1,w
  2758  061D  1D03               	skipz
  2759  061E  2E21               	goto	u2285
  2760  061F  3008               	movlw	8
  2761  0620  0230               	subwf	BuildByte@y,w
  2762  0621                     u2285:	
  2763  0621  1C03               	skipc
  2764  0622  2E24               	goto	u2281
  2765  0623  2E25               	goto	u2280
  2766  0624                     u2281:	
  2767  0624  2DFE               	goto	l3046
  2768  0625                     u2280:	
  2769  0625                     l105:	
  2770                           
  2771                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2772  0625  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0626  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0627  1C2E               	btfss	BuildByte@sommaRow,0
  2775  0628  2E2A               	goto	u2291
  2776  0629  2E2B               	goto	u2290
  2777  062A                     u2291:	
  2778  062A  2E33               	goto	l3054
  2779  062B                     u2290:	
  2780  062B                     l3052:	
  2781                           
  2782                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2783  062B  3080               	movlw	128
  2784  062C  00A6               	movwf	??_BuildByte
  2785  062D  0834               	movf	BuildByte@i,w
  2786  062E  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2787  062F  0084               	movwf	4
  2788  0630  0826               	movf	??_BuildByte,w
  2789  0631  1383               	bcf	3,7	;select IRP bank0
  2790  0632  0780               	addwf	0,f
  2791  0633                     l3054:	
  2792                           
  2793                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2794  0633  01AE               	clrf	BuildByte@sommaRow
  2795  0634                     l3058:	
  2796                           ;./CustomLib/Serial.h: 23:         }
  2797                           
  2798                           
  2799                           ;./CustomLib/Serial.h: 28:     }
  2800  0634  3001               	movlw	1
  2801  0635  07B4               	addwf	BuildByte@i,f
  2802  0636  1803               	skipnc
  2803  0637  0AB5               	incf	BuildByte@i+1,f
  2804  0638  3000               	movlw	0
  2805  0639  07B5               	addwf	BuildByte@i+1,f
  2806  063A                     l3060:	
  2807  063A  0835               	movf	BuildByte@i+1,w
  2808  063B  3A80               	xorlw	128
  2809  063C  00FF               	movwf	btemp+1
  2810  063D  3080               	movlw	128
  2811  063E  027F               	subwf	btemp+1,w
  2812  063F  1D03               	skipz
  2813  0640  2E43               	goto	u2305
  2814  0641  3004               	movlw	4
  2815  0642  0234               	subwf	BuildByte@i,w
  2816  0643                     u2305:	
  2817  0643  1C03               	skipc
  2818  0644  2E46               	goto	u2301
  2819  0645  2E47               	goto	u2300
  2820  0646                     u2301:	
  2821  0646  2DFA               	goto	l3040
  2822  0647                     u2300:	
  2823  0647                     l3062:	
  2824                           
  2825                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2826  0647  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0648  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0649  01B6               	clrf	BuildByte@i_341
  2829  064A  01B7               	clrf	BuildByte@i_341+1
  2830  064B                     l3068:	
  2831                           
  2832                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2833  064B  1283               	bcf	3,5	;RP0=0, select bank0
  2834  064C  1303               	bcf	3,6	;RP1=0, select bank0
  2835  064D  01B2               	clrf	BuildByte@y_342
  2836  064E  01B3               	clrf	BuildByte@y_342+1
  2837  064F                     l3074:	
  2838                           
  2839                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2840  064F  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0650  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0651  0832               	movf	BuildByte@y_342,w
  2843  0652  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2844  0653  0084               	movwf	4
  2845  0654  1383               	bcf	3,7	;select IRP bank0
  2846  0655  0800               	movf	0,w
  2847  0656  00A6               	movwf	??_BuildByte
  2848  0657  0A36               	incf	BuildByte@i_341,w
  2849  0658  2E5B               	goto	u2314
  2850  0659                     u2315:	
  2851  0659  1003               	clrc
  2852  065A  0CA6               	rrf	??_BuildByte,f
  2853  065B                     u2314:	
  2854  065B  3EFF               	addlw	-1
  2855  065C  1D03               	skipz
  2856  065D  2E59               	goto	u2315
  2857  065E  0826               	movf	??_BuildByte,w
  2858  065F  3901               	andlw	1
  2859  0660  00A7               	movwf	??_BuildByte+1
  2860  0661  0827               	movf	??_BuildByte+1,w
  2861  0662  07AF               	addwf	BuildByte@sommaColumn,f
  2862  0663                     l3076:	
  2863                           
  2864                           ;./CustomLib/Serial.h: 37:         }
  2865  0663  3001               	movlw	1
  2866  0664  07B2               	addwf	BuildByte@y_342,f
  2867  0665  1803               	skipnc
  2868  0666  0AB3               	incf	BuildByte@y_342+1,f
  2869  0667  3000               	movlw	0
  2870  0668  07B3               	addwf	BuildByte@y_342+1,f
  2871  0669                     l3078:	
  2872  0669  0833               	movf	BuildByte@y_342+1,w
  2873  066A  3A80               	xorlw	128
  2874  066B  00FF               	movwf	btemp+1
  2875  066C  3080               	movlw	128
  2876  066D  027F               	subwf	btemp+1,w
  2877  066E  1D03               	skipz
  2878  066F  2E72               	goto	u2325
  2879  0670  3004               	movlw	4
  2880  0671  0232               	subwf	BuildByte@y_342,w
  2881  0672                     u2325:	
  2882  0672  1C03               	skipc
  2883  0673  2E75               	goto	u2321
  2884  0674  2E76               	goto	u2320
  2885  0675                     u2321:	
  2886  0675  2E4F               	goto	l3074
  2887  0676                     u2320:	
  2888  0676                     l111:	
  2889                           
  2890                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2891  0676  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0677  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0678  1C2F               	btfss	BuildByte@sommaColumn,0
  2894  0679  2E7B               	goto	u2331
  2895  067A  2E7C               	goto	u2330
  2896  067B                     u2331:	
  2897  067B  2E89               	goto	l3082
  2898  067C                     u2330:	
  2899  067C                     l3080:	
  2900                           
  2901                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2902  067C  3001               	movlw	1
  2903  067D  00A6               	movwf	??_BuildByte
  2904  067E  0A36               	incf	BuildByte@i_341,w
  2905  067F  2E82               	goto	u2344
  2906  0680                     u2345:	
  2907  0680  1003               	clrc
  2908  0681  0DA6               	rlf	??_BuildByte,f
  2909  0682                     u2344:	
  2910  0682  3EFF               	addlw	-1
  2911  0683  1D03               	skipz
  2912  0684  2E80               	goto	u2345
  2913  0685  0826               	movf	??_BuildByte,w
  2914  0686  00A7               	movwf	??_BuildByte+1
  2915  0687  0827               	movf	??_BuildByte+1,w
  2916  0688  07AD               	addwf	BuildByte@txByte+4,f
  2917  0689                     l3082:	
  2918                           
  2919                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2920  0689  01AF               	clrf	BuildByte@sommaColumn
  2921  068A                     l3086:	
  2922                           ;./CustomLib/Serial.h: 42:         }
  2923                           
  2924                           
  2925                           ;./CustomLib/Serial.h: 47:     }
  2926  068A  3001               	movlw	1
  2927  068B  07B6               	addwf	BuildByte@i_341,f
  2928  068C  1803               	skipnc
  2929  068D  0AB7               	incf	BuildByte@i_341+1,f
  2930  068E  3000               	movlw	0
  2931  068F  07B7               	addwf	BuildByte@i_341+1,f
  2932  0690                     l3088:	
  2933  0690  0837               	movf	BuildByte@i_341+1,w
  2934  0691  3A80               	xorlw	128
  2935  0692  00FF               	movwf	btemp+1
  2936  0693  3080               	movlw	128
  2937  0694  027F               	subwf	btemp+1,w
  2938  0695  1D03               	skipz
  2939  0696  2E99               	goto	u2355
  2940  0697  3008               	movlw	8
  2941  0698  0236               	subwf	BuildByte@i_341,w
  2942  0699                     u2355:	
  2943  0699  1C03               	skipc
  2944  069A  2E9C               	goto	u2351
  2945  069B  2E9D               	goto	u2350
  2946  069C                     u2351:	
  2947  069C  2E4B               	goto	l3068
  2948  069D                     u2350:	
  2949  069D                     l3090:	
  2950                           
  2951                           ;./CustomLib/Serial.h: 49:     return txByte;
  2952  069D  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2953  069E                     l114:	
  2954  069E  0008               	return
  2955  069F                     __end_of_BuildByte:	
  2956                           
  2957                           	psect	text4
  2958  0EE2                     __ptext4:	
  2959 ;; *************** function _rand *****************
  2960 ;; Defined at:
  2961 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  2   17[BANK0 ] int 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       2       0       0       0
  2976 ;;      Locals:         0       0       0       0       0
  2977 ;;      Temps:          0       5       0       0       0
  2978 ;;      Totals:         0       7       0       0       0
  2979 ;;Total ram usage:        7 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    4
  2982 ;; This function calls:
  2983 ;;		___lmul
  2984 ;; This function is called by:
  2985 ;;		_main
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function _rand
  2991  0EE2                     _rand:	
  2992  0EE2                     l3408:	
  2993                           ;incstack = 0
  2994                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2995                           
  2996  0EE2  1683               	bsf	3,5	;RP0=1, select bank1
  2997  0EE3  1303               	bcf	3,6	;RP1=0, select bank1
  2998  0EE4  086E               	movf	(_randx+3)^(0+128),w
  2999  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0EE7  00A7               	movwf	___lmul@multiplier+3
  3002  0EE8  1683               	bsf	3,5	;RP0=1, select bank1
  3003  0EE9  1303               	bcf	3,6	;RP1=0, select bank1
  3004  0EEA  086D               	movf	(_randx+2)^(0+128),w
  3005  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0EED  00A6               	movwf	___lmul@multiplier+2
  3008  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0EEF  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0EF0  086C               	movf	(_randx+1)^(0+128),w
  3011  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0EF3  00A5               	movwf	___lmul@multiplier+1
  3014  0EF4  1683               	bsf	3,5	;RP0=1, select bank1
  3015  0EF5  1303               	bcf	3,6	;RP1=0, select bank1
  3016  0EF6  086B               	movf	_randx^(0+128),w
  3017  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0EF9  00A4               	movwf	___lmul@multiplier
  3020  0EFA  3041               	movlw	65
  3021  0EFB  00AB               	movwf	___lmul@multiplicand+3
  3022  0EFC  30C6               	movlw	198
  3023  0EFD  00AA               	movwf	___lmul@multiplicand+2
  3024  0EFE  304E               	movlw	78
  3025  0EFF  00A9               	movwf	___lmul@multiplicand+1
  3026  0F00  306D               	movlw	109
  3027  0F01  00A8               	movwf	___lmul@multiplicand
  3028  0F02  120A  158A  2351  120A  158A  	fcall	___lmul
  3029  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0F09  0827               	movf	?___lmul+3,w
  3032  0F0A  1683               	bsf	3,5	;RP0=1, select bank1
  3033  0F0B  1303               	bcf	3,6	;RP1=0, select bank1
  3034  0F0C  00EE               	movwf	(_randx+3)^(0+128)
  3035  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0F0F  0826               	movf	?___lmul+2,w
  3038  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  3039  0F11  1303               	bcf	3,6	;RP1=0, select bank1
  3040  0F12  00ED               	movwf	(_randx+2)^(0+128)
  3041  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0F15  0825               	movf	?___lmul+1,w
  3044  0F16  1683               	bsf	3,5	;RP0=1, select bank1
  3045  0F17  1303               	bcf	3,6	;RP1=0, select bank1
  3046  0F18  00EC               	movwf	(_randx+1)^(0+128)
  3047  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0F1B  0824               	movf	?___lmul,w
  3050  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  3051  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  3052  0F1E  00EB               	movwf	_randx^(0+128)
  3053  0F1F                     l3410:	
  3054  0F1F  3039               	movlw	57
  3055  0F20  07EB               	addwf	_randx^(0+128),f
  3056  0F21  3030               	movlw	48
  3057  0F22  1803               	skipnc
  3058  0F23  3031               	movlw	49
  3059  0F24  07EC               	addwf	(_randx+1)^(0+128),f
  3060  0F25  3000               	movlw	0
  3061  0F26  1803               	skipnc
  3062  0F27  3001               	movlw	1
  3063  0F28  07ED               	addwf	(_randx+2)^(0+128),f
  3064  0F29  3000               	movlw	0
  3065  0F2A  1803               	skipnc
  3066  0F2B  3001               	movlw	1
  3067  0F2C  07EE               	addwf	(_randx+3)^(0+128),f
  3068  0F2D                     l3412:	
  3069  0F2D  086B               	movf	_randx^(0+128),w
  3070  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0F30  00B3               	movwf	??_rand
  3073  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  3074  0F32  1303               	bcf	3,6	;RP1=0, select bank1
  3075  0F33  086C               	movf	(_randx+1)^(0+128),w
  3076  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0F36  00B4               	movwf	??_rand+1
  3079  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  3081  0F39  086D               	movf	(_randx+2)^(0+128),w
  3082  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0F3C  00B5               	movwf	??_rand+2
  3085  0F3D  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0F3E  1303               	bcf	3,6	;RP1=0, select bank1
  3087  0F3F  086E               	movf	(_randx+3)^(0+128),w
  3088  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0F42  00B6               	movwf	??_rand+3
  3091  0F43  3010               	movlw	16
  3092  0F44  00B7               	movwf	??_rand+4
  3093  0F45                     u2875:	
  3094  0F45  0D36               	rlf	??_rand+3,w
  3095  0F46  0CB6               	rrf	??_rand+3,f
  3096  0F47  0CB5               	rrf	??_rand+2,f
  3097  0F48  0CB4               	rrf	??_rand+1,f
  3098  0F49  0CB3               	rrf	??_rand,f
  3099  0F4A                     u2870:	
  3100  0F4A  0BB7               	decfsz	??_rand+4,f
  3101  0F4B  2F45               	goto	u2875
  3102  0F4C  30FF               	movlw	255
  3103  0F4D  0533               	andwf	??_rand,w
  3104  0F4E  00B1               	movwf	?_rand
  3105  0F4F  307F               	movlw	127
  3106  0F50  0534               	andwf	??_rand+1,w
  3107  0F51  00B2               	movwf	?_rand+1
  3108  0F52                     l886:	
  3109  0F52  0008               	return
  3110  0F53                     __end_of_rand:	
  3111                           
  3112                           	psect	text5
  3113  0B51                     __ptext5:	
  3114 ;; *************** function ___lmul *****************
  3115 ;; Defined at:
  3116 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  multiplier      4    4[BANK0 ] unsigned long 
  3119 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  product         4   13[BANK0 ] unsigned long 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  4    4[BANK0 ] unsigned long 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         0       8       0       0       0
  3132 ;;      Locals:         0       4       0       0       0
  3133 ;;      Temps:          0       1       0       0       0
  3134 ;;      Totals:         0      13       0       0       0
  3135 ;;Total ram usage:       13 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    3
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_rand
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function ___lmul
  3147  0B51                     ___lmul:	
  3148  0B51                     l3144:	
  3149                           ;incstack = 0
  3150                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3151                           
  3152  0B51  3000               	movlw	0
  3153  0B52  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0B53  1303               	bcf	3,6	;RP1=0, select bank0
  3155  0B54  00B0               	movwf	___lmul@product+3
  3156  0B55  3000               	movlw	0
  3157  0B56  00AF               	movwf	___lmul@product+2
  3158  0B57  3000               	movlw	0
  3159  0B58  00AE               	movwf	___lmul@product+1
  3160  0B59  3000               	movlw	0
  3161  0B5A  00AD               	movwf	___lmul@product
  3162  0B5B                     l3146:	
  3163  0B5B  1C24               	btfss	___lmul@multiplier,0
  3164  0B5C  2B5E               	goto	u2421
  3165  0B5D  2B5F               	goto	u2420
  3166  0B5E                     u2421:	
  3167  0B5E  2B76               	goto	l3150
  3168  0B5F                     u2420:	
  3169  0B5F                     l3148:	
  3170  0B5F  0828               	movf	___lmul@multiplicand,w
  3171  0B60  07AD               	addwf	___lmul@product,f
  3172  0B61  0829               	movf	___lmul@multiplicand+1,w
  3173  0B62  1103               	clrz
  3174  0B63  1803               	skipnc
  3175  0B64  3E01               	addlw	1
  3176  0B65  1903               	skipnz
  3177  0B66  2B68               	goto	u2431
  3178  0B67  07AE               	addwf	___lmul@product+1,f
  3179  0B68                     u2431:	
  3180  0B68  082A               	movf	___lmul@multiplicand+2,w
  3181  0B69  1103               	clrz
  3182  0B6A  1803               	skipnc
  3183  0B6B  3E01               	addlw	1
  3184  0B6C  1903               	skipnz
  3185  0B6D  2B6F               	goto	u2432
  3186  0B6E  07AF               	addwf	___lmul@product+2,f
  3187  0B6F                     u2432:	
  3188  0B6F  082B               	movf	___lmul@multiplicand+3,w
  3189  0B70  1103               	clrz
  3190  0B71  1803               	skipnc
  3191  0B72  3E01               	addlw	1
  3192  0B73  1903               	skipnz
  3193  0B74  2B76               	goto	u2433
  3194  0B75  07B0               	addwf	___lmul@product+3,f
  3195  0B76                     u2433:	
  3196  0B76                     l3150:	
  3197  0B76  3001               	movlw	1
  3198  0B77  00AC               	movwf	??___lmul
  3199  0B78                     u2445:	
  3200  0B78  1003               	clrc
  3201  0B79  0DA8               	rlf	___lmul@multiplicand,f
  3202  0B7A  0DA9               	rlf	___lmul@multiplicand+1,f
  3203  0B7B  0DAA               	rlf	___lmul@multiplicand+2,f
  3204  0B7C  0DAB               	rlf	___lmul@multiplicand+3,f
  3205  0B7D  0BAC               	decfsz	??___lmul,f
  3206  0B7E  2B78               	goto	u2445
  3207  0B7F                     l3152:	
  3208  0B7F  3001               	movlw	1
  3209  0B80                     u2455:	
  3210  0B80  1003               	clrc
  3211  0B81  0CA7               	rrf	___lmul@multiplier+3,f
  3212  0B82  0CA6               	rrf	___lmul@multiplier+2,f
  3213  0B83  0CA5               	rrf	___lmul@multiplier+1,f
  3214  0B84  0CA4               	rrf	___lmul@multiplier,f
  3215  0B85  3EFF               	addlw	-1
  3216  0B86  1D03               	skipz
  3217  0B87  2B80               	goto	u2455
  3218  0B88  0827               	movf	___lmul@multiplier+3,w
  3219  0B89  0426               	iorwf	___lmul@multiplier+2,w
  3220  0B8A  0425               	iorwf	___lmul@multiplier+1,w
  3221  0B8B  0424               	iorwf	___lmul@multiplier,w
  3222  0B8C  1D03               	skipz
  3223  0B8D  2B8F               	goto	u2461
  3224  0B8E  2B90               	goto	u2460
  3225  0B8F                     u2461:	
  3226  0B8F  2B5B               	goto	l3146
  3227  0B90                     u2460:	
  3228  0B90                     l3154:	
  3229  0B90  0830               	movf	___lmul@product+3,w
  3230  0B91  00A7               	movwf	?___lmul+3
  3231  0B92  082F               	movf	___lmul@product+2,w
  3232  0B93  00A6               	movwf	?___lmul+2
  3233  0B94  082E               	movf	___lmul@product+1,w
  3234  0B95  00A5               	movwf	?___lmul+1
  3235  0B96  082D               	movf	___lmul@product,w
  3236  0B97  00A4               	movwf	?___lmul
  3237  0B98                     l450:	
  3238  0B98  0008               	return
  3239  0B99                     __end_of___lmul:	
  3240                           
  3241                           	psect	text6
  3242  0A9C                     __ptext6:	
  3243 ;; *************** function _map *****************
  3244 ;; Defined at:
  3245 ;;		line 127 in file "./CustomLib/TrafficLight.h"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  x               2   40[BANK0 ] int 
  3248 ;;  in_min          2   42[BANK0 ] int 
  3249 ;;  in_max          2   44[BANK0 ] int 
  3250 ;;  out_min         2   46[BANK0 ] int 
  3251 ;;  out_max         2   48[BANK0 ] int 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  2   40[BANK0 ] int 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         0      10       0       0       0
  3264 ;;      Locals:         0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0
  3266 ;;      Totals:         0      10       0       0       0
  3267 ;;Total ram usage:       10 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    4
  3270 ;; This function calls:
  3271 ;;		___awdiv
  3272 ;;		___wmul
  3273 ;; This function is called by:
  3274 ;;		_main
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           
  3279                           ;psect for function _map
  3280  0A9C                     _map:	
  3281  0A9C                     l3386:	
  3282                           ;incstack = 0
  3283                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3284                           
  3285                           
  3286                           ;./CustomLib/TrafficLight.h: 127: int map(int x, int in_min, int in_max, int out_min, in
      +                          t out_max);./CustomLib/TrafficLight.h: 128: {;./CustomLib/TrafficLight.h: 129:     retur
      +                          n (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3287  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0A9E  084A               	movf	map@in_min,w
  3290  0A9F  024C               	subwf	map@in_max,w
  3291  0AA0  00BF               	movwf	___awdiv@divisor
  3292  0AA1  084B               	movf	map@in_min+1,w
  3293  0AA2  1C03               	skipc
  3294  0AA3  0A4B               	incf	map@in_min+1,w
  3295  0AA4  024D               	subwf	map@in_max+1,w
  3296  0AA5  00C0               	movwf	___awdiv@divisor+1
  3297  0AA6  084A               	movf	map@in_min,w
  3298  0AA7  0248               	subwf	map@x,w
  3299  0AA8  00A4               	movwf	___wmul@multiplier
  3300  0AA9  084B               	movf	map@in_min+1,w
  3301  0AAA  1C03               	skipc
  3302  0AAB  0A4B               	incf	map@in_min+1,w
  3303  0AAC  0249               	subwf	map@x+1,w
  3304  0AAD  00A5               	movwf	___wmul@multiplier+1
  3305  0AAE  084E               	movf	map@out_min,w
  3306  0AAF  0250               	subwf	map@out_max,w
  3307  0AB0  00A6               	movwf	___wmul@multiplicand
  3308  0AB1  084F               	movf	map@out_min+1,w
  3309  0AB2  1C03               	skipc
  3310  0AB3  0A4F               	incf	map@out_min+1,w
  3311  0AB4  0251               	subwf	map@out_max+1,w
  3312  0AB5  00A7               	movwf	___wmul@multiplicand+1
  3313  0AB6  120A  158A  2244  120A  158A  	fcall	___wmul
  3314  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0ABD  0825               	movf	?___wmul+1,w
  3317  0ABE  00C2               	movwf	___awdiv@dividend+1
  3318  0ABF  0824               	movf	?___wmul,w
  3319  0AC0  00C1               	movwf	___awdiv@dividend
  3320  0AC1  120A  158A  260E  120A  158A  	fcall	___awdiv
  3321  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0AC8  084E               	movf	map@out_min,w
  3324  0AC9  073F               	addwf	?___awdiv,w
  3325  0ACA  00C8               	movwf	?_map
  3326  0ACB  084F               	movf	map@out_min+1,w
  3327  0ACC  1803               	skipnc
  3328  0ACD  0A4F               	incf	map@out_min+1,w
  3329  0ACE  0740               	addwf	?___awdiv+1,w
  3330  0ACF  00C9               	movwf	?_map+1
  3331  0AD0                     l169:	
  3332  0AD0  0008               	return
  3333  0AD1                     __end_of_map:	
  3334                           
  3335                           	psect	text7
  3336  0A44                     __ptext7:	
  3337 ;; *************** function ___wmul *****************
  3338 ;; Defined at:
  3339 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3342 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  product         2    8[BANK0 ] unsigned int 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2    4[BANK0 ] unsigned int 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       4       0       0       0
  3355 ;;      Locals:         0       2       0       0       0
  3356 ;;      Temps:          0       0       0       0       0
  3357 ;;      Totals:         0       6       0       0       0
  3358 ;;Total ram usage:        6 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    3
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_map
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function ___wmul
  3370  0A44                     ___wmul:	
  3371  0A44                     l3130:	
  3372                           ;incstack = 0
  3373                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3374                           
  3375  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0A45  1303               	bcf	3,6	;RP1=0, select bank0
  3377  0A46  01A8               	clrf	___wmul@product
  3378  0A47  01A9               	clrf	___wmul@product+1
  3379  0A48                     l3132:	
  3380  0A48  1C24               	btfss	___wmul@multiplier,0
  3381  0A49  2A4B               	goto	u2381
  3382  0A4A  2A4C               	goto	u2380
  3383  0A4B                     u2381:	
  3384  0A4B  2A52               	goto	l436
  3385  0A4C                     u2380:	
  3386  0A4C                     l3134:	
  3387  0A4C  0826               	movf	___wmul@multiplicand,w
  3388  0A4D  07A8               	addwf	___wmul@product,f
  3389  0A4E  1803               	skipnc
  3390  0A4F  0AA9               	incf	___wmul@product+1,f
  3391  0A50  0827               	movf	___wmul@multiplicand+1,w
  3392  0A51  07A9               	addwf	___wmul@product+1,f
  3393  0A52                     l436:	
  3394  0A52  3001               	movlw	1
  3395  0A53                     u2395:	
  3396  0A53  1003               	clrc
  3397  0A54  0DA6               	rlf	___wmul@multiplicand,f
  3398  0A55  0DA7               	rlf	___wmul@multiplicand+1,f
  3399  0A56  3EFF               	addlw	-1
  3400  0A57  1D03               	skipz
  3401  0A58  2A53               	goto	u2395
  3402  0A59                     l3136:	
  3403  0A59  3001               	movlw	1
  3404  0A5A                     u2405:	
  3405  0A5A  1003               	clrc
  3406  0A5B  0CA5               	rrf	___wmul@multiplier+1,f
  3407  0A5C  0CA4               	rrf	___wmul@multiplier,f
  3408  0A5D  3EFF               	addlw	-1
  3409  0A5E  1D03               	skipz
  3410  0A5F  2A5A               	goto	u2405
  3411  0A60                     l3138:	
  3412  0A60  0824               	movf	___wmul@multiplier,w
  3413  0A61  0425               	iorwf	___wmul@multiplier+1,w
  3414  0A62  1D03               	btfss	3,2
  3415  0A63  2A65               	goto	u2411
  3416  0A64  2A66               	goto	u2410
  3417  0A65                     u2411:	
  3418  0A65  2A48               	goto	l3132
  3419  0A66                     u2410:	
  3420  0A66                     l3140:	
  3421  0A66  0829               	movf	___wmul@product+1,w
  3422  0A67  00A5               	movwf	?___wmul+1
  3423  0A68  0828               	movf	___wmul@product,w
  3424  0A69  00A4               	movwf	?___wmul
  3425  0A6A                     l438:	
  3426  0A6A  0008               	return
  3427  0A6B                     __end_of___wmul:	
  3428                           
  3429                           	psect	text8
  3430  0BE5                     __ptext8:	
  3431 ;; *************** function _luciSemaforo *****************
  3432 ;; Defined at:
  3433 ;;		line 426 in file "main.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  index           1    wreg     unsigned char 
  3436 ;;  lux             1    4[BANK0 ] unsigned char 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  index           1    7[BANK0 ] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3448 ;;      Params:         0       1       0       0       0
  3449 ;;      Locals:         0       1       0       0       0
  3450 ;;      Temps:          0       2       0       0       0
  3451 ;;      Totals:         0       4       0       0       0
  3452 ;;Total ram usage:        4 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    3
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_main
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           
  3463                           ;psect for function _luciSemaforo
  3464  0BE5                     _luciSemaforo:	
  3465                           
  3466                           ;incstack = 0
  3467                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3468                           ;luciSemaforo@index stored from wreg
  3469  0BE5  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0BE6  1303               	bcf	3,6	;RP1=0, select bank0
  3471  0BE7  00A7               	movwf	luciSemaforo@index
  3472  0BE8                     l3442:	
  3473                           
  3474                           ;main.c: 426: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 427: {;m
      +                          ain.c: 428:     switch (index)
  3475  0BE8  2C27               	goto	l3454
  3476  0BE9                     l308:	
  3477                           ;main.c: 432:         {;main.c: 433:         case 0:
  3478                           
  3479                           
  3480                           ;main.c: 434:             PORTCbits.RC1 = 0;
  3481  0BE9  1087               	bcf	7,1	;volatile
  3482                           
  3483                           ;main.c: 435:             PORTCbits.RC2 = 0;
  3484  0BEA  1107               	bcf	7,2	;volatile
  3485                           
  3486                           ;main.c: 436:             PORTCbits.RC0 = 1;
  3487  0BEB  1407               	bsf	7,0	;volatile
  3488                           
  3489                           ;main.c: 437:             break;
  3490  0BEC  2C37               	goto	l319
  3491  0BED                     l310:	
  3492                           ;main.c: 438:         case 1:
  3493                           
  3494                           
  3495                           ;main.c: 439:             PORTCbits.RC0 = 0;
  3496  0BED  1007               	bcf	7,0	;volatile
  3497                           
  3498                           ;main.c: 440:             PORTCbits.RC2 = 0;
  3499  0BEE  1107               	bcf	7,2	;volatile
  3500                           
  3501                           ;main.c: 441:             PORTCbits.RC1 = 1;
  3502  0BEF  1487               	bsf	7,1	;volatile
  3503                           
  3504                           ;main.c: 442:             break;
  3505  0BF0  2C37               	goto	l319
  3506  0BF1                     l311:	
  3507                           ;main.c: 443:         case 2:
  3508                           
  3509                           
  3510                           ;main.c: 444:             PORTCbits.RC0 = 0;
  3511  0BF1  1007               	bcf	7,0	;volatile
  3512                           
  3513                           ;main.c: 445:             PORTCbits.RC1 = 0;
  3514  0BF2  1087               	bcf	7,1	;volatile
  3515                           
  3516                           ;main.c: 446:             PORTCbits.RC2 = 1;
  3517  0BF3  1507               	bsf	7,2	;volatile
  3518                           
  3519                           ;main.c: 447:             break;
  3520  0BF4  2C37               	goto	l319
  3521  0BF5                     l3446:	
  3522  0BF5  0824               	movf	luciSemaforo@lux,w
  3523  0BF6  00A5               	movwf	??_luciSemaforo
  3524  0BF7  01A6               	clrf	??_luciSemaforo+1
  3525                           
  3526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3527                           ; Switch size 1, requested type "simple"
  3528                           ; Number of cases is 1, Range of values is 0 to 0
  3529                           ; switch strategies available:
  3530                           ; Name         Instructions Cycles
  3531                           ; simple_byte            4     3 (average)
  3532                           ; direct_byte           11     8 (fixed)
  3533                           ; jumptable            260     6 (fixed)
  3534                           ;	Chosen strategy is simple_byte
  3535  0BF8  0826               	movf	??_luciSemaforo+1,w
  3536  0BF9  3A00               	xorlw	0	; case 0
  3537  0BFA  1903               	skipnz
  3538  0BFB  2BFD               	goto	l3948
  3539  0BFC  2C37               	goto	l319
  3540  0BFD                     l3948:	
  3541                           
  3542                           ; Switch size 1, requested type "simple"
  3543                           ; Number of cases is 3, Range of values is 0 to 2
  3544                           ; switch strategies available:
  3545                           ; Name         Instructions Cycles
  3546                           ; simple_byte           10     6 (average)
  3547                           ; direct_byte           17     8 (fixed)
  3548                           ; jumptable            260     6 (fixed)
  3549                           ;	Chosen strategy is simple_byte
  3550  0BFD  0825               	movf	??_luciSemaforo,w
  3551  0BFE  3A00               	xorlw	0	; case 0
  3552  0BFF  1903               	skipnz
  3553  0C00  2BE9               	goto	l308
  3554  0C01  3A01               	xorlw	1	; case 1
  3555  0C02  1903               	skipnz
  3556  0C03  2BED               	goto	l310
  3557  0C04  3A03               	xorlw	3	; case 2
  3558  0C05  1903               	skipnz
  3559  0C06  2BF1               	goto	l311
  3560  0C07  2C37               	goto	l319
  3561  0C08                     l315:	
  3562                           ;main.c: 453:         {;main.c: 454:         case 0:
  3563                           
  3564                           
  3565                           ;main.c: 455:             PORTBbits.RB1 = 0;
  3566  0C08  1086               	bcf	6,1	;volatile
  3567                           
  3568                           ;main.c: 456:             PORTBbits.RB6 = 0;
  3569  0C09  1306               	bcf	6,6	;volatile
  3570                           
  3571                           ;main.c: 457:             PORTBbits.RB7 = 1;
  3572  0C0A  1786               	bsf	6,7	;volatile
  3573                           
  3574                           ;main.c: 458:             break;
  3575  0C0B  2C37               	goto	l319
  3576  0C0C                     l317:	
  3577                           ;main.c: 459:         case 1:
  3578                           
  3579                           
  3580                           ;main.c: 460:             PORTBbits.RB7 = 0;
  3581  0C0C  1386               	bcf	6,7	;volatile
  3582                           
  3583                           ;main.c: 461:             PORTBbits.RB6 = 0;
  3584  0C0D  1306               	bcf	6,6	;volatile
  3585                           
  3586                           ;main.c: 462:             PORTBbits.RB1 = 1;
  3587  0C0E  1486               	bsf	6,1	;volatile
  3588                           
  3589                           ;main.c: 463:             break;
  3590  0C0F  2C37               	goto	l319
  3591  0C10                     l318:	
  3592                           ;main.c: 464:         case 2:
  3593                           
  3594                           
  3595                           ;main.c: 465:             PORTBbits.RB7 = 0;
  3596  0C10  1386               	bcf	6,7	;volatile
  3597                           
  3598                           ;main.c: 466:             PORTBbits.RB1 = 0;
  3599  0C11  1086               	bcf	6,1	;volatile
  3600                           
  3601                           ;main.c: 467:             PORTBbits.RB6 = 1;
  3602  0C12  1706               	bsf	6,6	;volatile
  3603                           
  3604                           ;main.c: 468:             break;
  3605  0C13  2C37               	goto	l319
  3606  0C14                     l3450:	
  3607  0C14  0824               	movf	luciSemaforo@lux,w
  3608  0C15  00A5               	movwf	??_luciSemaforo
  3609  0C16  01A6               	clrf	??_luciSemaforo+1
  3610                           
  3611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3612                           ; Switch size 1, requested type "simple"
  3613                           ; Number of cases is 1, Range of values is 0 to 0
  3614                           ; switch strategies available:
  3615                           ; Name         Instructions Cycles
  3616                           ; simple_byte            4     3 (average)
  3617                           ; direct_byte           11     8 (fixed)
  3618                           ; jumptable            260     6 (fixed)
  3619                           ;	Chosen strategy is simple_byte
  3620  0C17  0826               	movf	??_luciSemaforo+1,w
  3621  0C18  3A00               	xorlw	0	; case 0
  3622  0C19  1903               	skipnz
  3623  0C1A  2C1C               	goto	l3950
  3624  0C1B  2C37               	goto	l319
  3625  0C1C                     l3950:	
  3626                           
  3627                           ; Switch size 1, requested type "simple"
  3628                           ; Number of cases is 3, Range of values is 0 to 2
  3629                           ; switch strategies available:
  3630                           ; Name         Instructions Cycles
  3631                           ; simple_byte           10     6 (average)
  3632                           ; direct_byte           17     8 (fixed)
  3633                           ; jumptable            260     6 (fixed)
  3634                           ;	Chosen strategy is simple_byte
  3635  0C1C  0825               	movf	??_luciSemaforo,w
  3636  0C1D  3A00               	xorlw	0	; case 0
  3637  0C1E  1903               	skipnz
  3638  0C1F  2C08               	goto	l315
  3639  0C20  3A01               	xorlw	1	; case 1
  3640  0C21  1903               	skipnz
  3641  0C22  2C0C               	goto	l317
  3642  0C23  3A03               	xorlw	3	; case 2
  3643  0C24  1903               	skipnz
  3644  0C25  2C10               	goto	l318
  3645  0C26  2C37               	goto	l319
  3646  0C27                     l3454:	
  3647  0C27  0827               	movf	luciSemaforo@index,w
  3648  0C28  00A5               	movwf	??_luciSemaforo
  3649  0C29  01A6               	clrf	??_luciSemaforo+1
  3650                           
  3651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3652                           ; Switch size 1, requested type "simple"
  3653                           ; Number of cases is 1, Range of values is 0 to 0
  3654                           ; switch strategies available:
  3655                           ; Name         Instructions Cycles
  3656                           ; simple_byte            4     3 (average)
  3657                           ; direct_byte           11     8 (fixed)
  3658                           ; jumptable            260     6 (fixed)
  3659                           ;	Chosen strategy is simple_byte
  3660  0C2A  0826               	movf	??_luciSemaforo+1,w
  3661  0C2B  3A00               	xorlw	0	; case 0
  3662  0C2C  1903               	skipnz
  3663  0C2D  2C2F               	goto	l3952
  3664  0C2E  2C37               	goto	l319
  3665  0C2F                     l3952:	
  3666                           
  3667                           ; Switch size 1, requested type "simple"
  3668                           ; Number of cases is 2, Range of values is 0 to 1
  3669                           ; switch strategies available:
  3670                           ; Name         Instructions Cycles
  3671                           ; simple_byte            7     4 (average)
  3672                           ; direct_byte           14     8 (fixed)
  3673                           ; jumptable            260     6 (fixed)
  3674                           ;	Chosen strategy is simple_byte
  3675  0C2F  0825               	movf	??_luciSemaforo,w
  3676  0C30  3A00               	xorlw	0	; case 0
  3677  0C31  1903               	skipnz
  3678  0C32  2BF5               	goto	l3446
  3679  0C33  3A01               	xorlw	1	; case 1
  3680  0C34  1903               	skipnz
  3681  0C35  2C14               	goto	l3450
  3682  0C36  2C37               	goto	l319
  3683  0C37                     l319:	
  3684  0C37  0008               	return
  3685  0C38                     __end_of_luciSemaforo:	
  3686                           
  3687                           	psect	text9
  3688  09F4                     __ptext9:	
  3689 ;; *************** function _init_ADC *****************
  3690 ;; Defined at:
  3691 ;;		line 338 in file "main.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, status,2
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3705 ;;      Params:         0       0       0       0       0
  3706 ;;      Locals:         0       0       0       0       0
  3707 ;;      Temps:          0       1       0       0       0
  3708 ;;      Totals:         0       1       0       0       0
  3709 ;;Total ram usage:        1 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; Hardware stack levels required when called:    3
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_main
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           
  3720                           ;psect for function _init_ADC
  3721  09F4                     _init_ADC:	
  3722  09F4                     l3390:	
  3723                           ;incstack = 0
  3724                           ; Regs used in _init_ADC: [wreg+status,2]
  3725                           
  3726                           
  3727                           ;main.c: 340:     TRISA = 0xE3;
  3728  09F4  30E3               	movlw	227
  3729  09F5  1683               	bsf	3,5	;RP0=1, select bank1
  3730  09F6  1303               	bcf	3,6	;RP1=0, select bank1
  3731  09F7  0085               	movwf	5	;volatile
  3732  09F8                     l3392:	
  3733                           
  3734                           ;main.c: 341:     ADCON0 = 0x00;
  3735  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  3736  09F9  1303               	bcf	3,6	;RP1=0, select bank0
  3737  09FA  019F               	clrf	31	;volatile
  3738  09FB                     l3394:	
  3739                           
  3740                           ;main.c: 342:     ADCON1 = 0x80;
  3741  09FB  3080               	movlw	128
  3742  09FC  1683               	bsf	3,5	;RP0=1, select bank1
  3743  09FD  1303               	bcf	3,6	;RP1=0, select bank1
  3744  09FE  009F               	movwf	31	;volatile
  3745  09FF                     l3396:	
  3746                           
  3747                           ;main.c: 343:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3748  09FF  3019               	movlw	25
  3749  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0A02  00A4               	movwf	??_init_ADC
  3752  0A03                     u3187:	
  3753  0A03  0BA4               	decfsz	??_init_ADC,f
  3754  0A04  2A03               	goto	u3187
  3755  0A05  2A06               	nop2
  3756  0A06                     l262:	
  3757  0A06  0008               	return
  3758  0A07                     __end_of_init_ADC:	
  3759                           
  3760                           	psect	text10
  3761  0E77                     __ptext10:	
  3762 ;; *************** function _UpdateTimes *****************
  3763 ;; Defined at:
  3764 ;;		line 4 in file "./CustomLib/TrafficLight.h"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  _semafori       1    wreg     PTR PTR struct .
  3767 ;;		 -> Semafori(2), 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  _semafori       1   14[BANK0 ] PTR PTR struct .
  3770 ;;		 -> Semafori(2), 
  3771 ;;  i               1   15[BANK0 ] unsigned char 
  3772 ;;  l               1   16[BANK0 ] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3782 ;;      Params:         0       0       0       0       0
  3783 ;;      Locals:         0       3       0       0       0
  3784 ;;      Temps:          0      10       0       0       0
  3785 ;;      Totals:         0      13       0       0       0
  3786 ;;Total ram usage:       13 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    3
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function _UpdateTimes
  3798  0E77                     _UpdateTimes:	
  3799                           
  3800                           ;incstack = 0
  3801                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3802                           ;UpdateTimes@_semafori stored from wreg
  3803  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3805  0E79  00AE               	movwf	UpdateTimes@_semafori
  3806  0E7A                     l3294:	
  3807                           
  3808                           ;./CustomLib/TrafficLight.h: 4: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 5: {;./CustomLib/TrafficLight.h: 7:     for (unsigned char l = 0; l < n_semafo
      +                          ri; l++)
  3809  0E7A  01B0               	clrf	UpdateTimes@l
  3810  0E7B                     l3300:	
  3811                           
  3812                           ;./CustomLib/TrafficLight.h: 8:     {;./CustomLib/TrafficLight.h: 9:         for (unsign
      +                          ed char i = 0; i < 3; i++)
  3813  0E7B  01AF               	clrf	UpdateTimes@i
  3814  0E7C                     l3306:	
  3815                           
  3816                           ;./CustomLib/TrafficLight.h: 10:         {;./CustomLib/TrafficLight.h: 11:             i
      +                          f ((*(_semafori)[l]).times[i] != (*(_semafori)[l]).new_times[i])
  3817  0E7C  0830               	movf	UpdateTimes@l,w
  3818  0E7D  072E               	addwf	UpdateTimes@_semafori,w
  3819  0E7E  00A4               	movwf	??_UpdateTimes
  3820  0E7F  0824               	movf	??_UpdateTimes,w
  3821  0E80  0084               	movwf	4
  3822  0E81  082F               	movf	UpdateTimes@i,w
  3823  0E82  00A5               	movwf	??_UpdateTimes+1
  3824  0E83  0725               	addwf	??_UpdateTimes+1,w
  3825  0E84  1383               	bcf	3,7	;select IRP bank0
  3826  0E85  0700               	addwf	0,w
  3827  0E86  00A6               	movwf	??_UpdateTimes+2
  3828  0E87  0826               	movf	??_UpdateTimes+2,w
  3829  0E88  3E06               	addlw	6
  3830  0E89  0084               	movwf	4
  3831  0E8A  0800               	movf	0,w
  3832  0E8B  00A7               	movwf	??_UpdateTimes+3
  3833  0E8C  0A84               	incf	4,f
  3834  0E8D  0800               	movf	0,w
  3835  0E8E  00A8               	movwf	??_UpdateTimes+4
  3836  0E8F  0830               	movf	UpdateTimes@l,w
  3837  0E90  072E               	addwf	UpdateTimes@_semafori,w
  3838  0E91  00A9               	movwf	??_UpdateTimes+5
  3839  0E92  0829               	movf	??_UpdateTimes+5,w
  3840  0E93  0084               	movwf	4
  3841  0E94  082F               	movf	UpdateTimes@i,w
  3842  0E95  00AA               	movwf	??_UpdateTimes+6
  3843  0E96  072A               	addwf	??_UpdateTimes+6,w
  3844  0E97  0700               	addwf	0,w
  3845  0E98  00AB               	movwf	??_UpdateTimes+7
  3846  0E99  082B               	movf	??_UpdateTimes+7,w
  3847  0E9A  0084               	movwf	4
  3848  0E9B  0800               	movf	0,w
  3849  0E9C  00AC               	movwf	??_UpdateTimes+8
  3850  0E9D  0A84               	incf	4,f
  3851  0E9E  0800               	movf	0,w
  3852  0E9F  00AD               	movwf	??_UpdateTimes+9
  3853  0EA0  0828               	movf	??_UpdateTimes+4,w
  3854  0EA1  062D               	xorwf	??_UpdateTimes+9,w
  3855  0EA2  1D03               	skipz
  3856  0EA3  2EA6               	goto	u2785
  3857  0EA4  0827               	movf	??_UpdateTimes+3,w
  3858  0EA5  062C               	xorwf	??_UpdateTimes+8,w
  3859  0EA6                     u2785:	
  3860  0EA6  1903               	skipnz
  3861  0EA7  2EA9               	goto	u2781
  3862  0EA8  2EAA               	goto	u2780
  3863  0EA9                     u2781:	
  3864  0EA9  2ECD               	goto	l3310
  3865  0EAA                     u2780:	
  3866  0EAA                     l3308:	
  3867                           
  3868                           ;./CustomLib/TrafficLight.h: 12:             {;./CustomLib/TrafficLight.h: 13:          
      +                                 (*(_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3869  0EAA  0830               	movf	UpdateTimes@l,w
  3870  0EAB  072E               	addwf	UpdateTimes@_semafori,w
  3871  0EAC  00A4               	movwf	??_UpdateTimes
  3872  0EAD  0824               	movf	??_UpdateTimes,w
  3873  0EAE  0084               	movwf	4
  3874  0EAF  082F               	movf	UpdateTimes@i,w
  3875  0EB0  00A5               	movwf	??_UpdateTimes+1
  3876  0EB1  0725               	addwf	??_UpdateTimes+1,w
  3877  0EB2  0700               	addwf	0,w
  3878  0EB3  00A6               	movwf	??_UpdateTimes+2
  3879  0EB4  0826               	movf	??_UpdateTimes+2,w
  3880  0EB5  3E06               	addlw	6
  3881  0EB6  0084               	movwf	4
  3882  0EB7  0800               	movf	0,w
  3883  0EB8  00A7               	movwf	??_UpdateTimes+3
  3884  0EB9  0A84               	incf	4,f
  3885  0EBA  0800               	movf	0,w
  3886  0EBB  00A8               	movwf	??_UpdateTimes+4
  3887  0EBC  0830               	movf	UpdateTimes@l,w
  3888  0EBD  072E               	addwf	UpdateTimes@_semafori,w
  3889  0EBE  00A9               	movwf	??_UpdateTimes+5
  3890  0EBF  0829               	movf	??_UpdateTimes+5,w
  3891  0EC0  0084               	movwf	4
  3892  0EC1  082F               	movf	UpdateTimes@i,w
  3893  0EC2  00AA               	movwf	??_UpdateTimes+6
  3894  0EC3  072A               	addwf	??_UpdateTimes+6,w
  3895  0EC4  0700               	addwf	0,w
  3896  0EC5  00AB               	movwf	??_UpdateTimes+7
  3897  0EC6  082B               	movf	??_UpdateTimes+7,w
  3898  0EC7  0084               	movwf	4
  3899  0EC8  0827               	movf	??_UpdateTimes+3,w
  3900  0EC9  0080               	movwf	0
  3901  0ECA  0A84               	incf	4,f
  3902  0ECB  0828               	movf	??_UpdateTimes+4,w
  3903  0ECC  0080               	movwf	0
  3904  0ECD                     l3310:	
  3905                           
  3906                           ;./CustomLib/TrafficLight.h: 15:         }
  3907  0ECD  3001               	movlw	1
  3908  0ECE  00A4               	movwf	??_UpdateTimes
  3909  0ECF  0824               	movf	??_UpdateTimes,w
  3910  0ED0  07AF               	addwf	UpdateTimes@i,f
  3911  0ED1                     l3312:	
  3912  0ED1  3003               	movlw	3
  3913  0ED2  022F               	subwf	UpdateTimes@i,w
  3914  0ED3  1C03               	skipc
  3915  0ED4  2ED6               	goto	u2791
  3916  0ED5  2ED7               	goto	u2790
  3917  0ED6                     u2791:	
  3918  0ED6  2E7C               	goto	l3306
  3919  0ED7                     u2790:	
  3920  0ED7                     l3316:	
  3921                           
  3922                           ;./CustomLib/TrafficLight.h: 21:     }
  3923  0ED7  3001               	movlw	1
  3924  0ED8  00A4               	movwf	??_UpdateTimes
  3925  0ED9  0824               	movf	??_UpdateTimes,w
  3926  0EDA  07B0               	addwf	UpdateTimes@l,f
  3927  0EDB                     l3318:	
  3928  0EDB  3002               	movlw	2
  3929  0EDC  0230               	subwf	UpdateTimes@l,w
  3930  0EDD  1C03               	skipc
  3931  0EDE  2EE0               	goto	u2801
  3932  0EDF  2EE1               	goto	u2800
  3933  0EE0                     u2801:	
  3934  0EE0  2E7B               	goto	l3300
  3935  0EE1                     u2800:	
  3936  0EE1                     l127:	
  3937  0EE1  0008               	return
  3938  0EE2                     __end_of_UpdateTimes:	
  3939                           
  3940                           	psect	text11
  3941  0AD1                     __ptext11:	
  3942 ;; *************** function _UART_Init *****************
  3943 ;; Defined at:
  3944 ;;		line 357 in file "main.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  baudrate        2   19[BANK0 ] int 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0, pclath, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         0       2       0       0       0
  3959 ;;      Locals:         0       0       0       0       0
  3960 ;;      Temps:          0       4       0       0       0
  3961 ;;      Totals:         0       6       0       0       0
  3962 ;;Total ram usage:        6 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    4
  3965 ;; This function calls:
  3966 ;;		___aldiv
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           
  3973                           ;psect for function _UART_Init
  3974  0AD1                     _UART_Init:	
  3975  0AD1                     l3398:	
  3976                           ;incstack = 0
  3977                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3978                           
  3979                           
  3980                           ;main.c: 357: void UART_Init(int baudrate);main.c: 358: {;main.c: 359:     TRISCbits.TRI
      +                          SC6 = 0;
  3981  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  3982  0AD2  1303               	bcf	3,6	;RP1=0, select bank1
  3983  0AD3  1307               	bcf	7,6	;volatile
  3984                           
  3985                           ;main.c: 360:     TXSTAbits.TXEN = 1;
  3986  0AD4  1698               	bsf	24,5	;volatile
  3987                           
  3988                           ;main.c: 361:     RCSTAbits.SPEN = 1;
  3989  0AD5  1283               	bcf	3,5	;RP0=0, select bank0
  3990  0AD6  1303               	bcf	3,6	;RP1=0, select bank0
  3991  0AD7  1798               	bsf	24,7	;volatile
  3992                           
  3993                           ;main.c: 362:     RCSTAbits.CREN = 1;
  3994  0AD8  1618               	bsf	24,4	;volatile
  3995  0AD9                     l3400:	
  3996                           
  3997                           ;main.c: 363:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3998  0AD9  0833               	movf	UART_Init@baudrate,w
  3999  0ADA  00B5               	movwf	??_UART_Init
  4000  0ADB  0834               	movf	UART_Init@baudrate+1,w
  4001  0ADC  00B6               	movwf	??_UART_Init+1
  4002  0ADD  3000               	movlw	0
  4003  0ADE  1BB6               	btfsc	??_UART_Init+1,7
  4004  0ADF  30FF               	movlw	255
  4005  0AE0  00B7               	movwf	??_UART_Init+2
  4006  0AE1  00B8               	movwf	??_UART_Init+3
  4007  0AE2  3006               	movlw	6
  4008  0AE3                     u2865:	
  4009  0AE3  1003               	clrc
  4010  0AE4  0DB5               	rlf	??_UART_Init,f
  4011  0AE5  0DB6               	rlf	??_UART_Init+1,f
  4012  0AE6  0DB7               	rlf	??_UART_Init+2,f
  4013  0AE7  0DB8               	rlf	??_UART_Init+3,f
  4014  0AE8                     u2860:	
  4015  0AE8  3EFF               	addlw	-1
  4016  0AE9  1D03               	skipz
  4017  0AEA  2AE3               	goto	u2865
  4018  0AEB  0838               	movf	??_UART_Init+3,w
  4019  0AEC  00A7               	movwf	___aldiv@divisor+3
  4020  0AED  0837               	movf	??_UART_Init+2,w
  4021  0AEE  00A6               	movwf	___aldiv@divisor+2
  4022  0AEF  0836               	movf	??_UART_Init+1,w
  4023  0AF0  00A5               	movwf	___aldiv@divisor+1
  4024  0AF1  0835               	movf	??_UART_Init,w
  4025  0AF2  00A4               	movwf	___aldiv@divisor
  4026  0AF3  3001               	movlw	1
  4027  0AF4  00AB               	movwf	___aldiv@dividend+3
  4028  0AF5  30E8               	movlw	232
  4029  0AF6  00AA               	movwf	___aldiv@dividend+2
  4030  0AF7  3048               	movlw	72
  4031  0AF8  00A9               	movwf	___aldiv@dividend+1
  4032  0AF9  3000               	movlw	0
  4033  0AFA  00A8               	movwf	___aldiv@dividend
  4034  0AFB  120A  118A  2756  120A  158A  	fcall	___aldiv
  4035  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  4036  0B01  1303               	bcf	3,6	;RP1=0, select bank0
  4037  0B02  0824               	movf	?___aldiv,w
  4038  0B03  3EFF               	addlw	255
  4039  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  4040  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  4041  0B06  0099               	movwf	25	;volatile
  4042  0B07                     l3402:	
  4043                           
  4044                           ;main.c: 364:     INTCONbits.GIE = 1;
  4045  0B07  178B               	bsf	11,7	;volatile
  4046  0B08                     l3404:	
  4047                           
  4048                           ;main.c: 365:     INTCONbits.PEIE = 1;
  4049  0B08  170B               	bsf	11,6	;volatile
  4050  0B09                     l3406:	
  4051                           
  4052                           ;main.c: 366:     PIE1bits.RCIE = 1;
  4053  0B09  168C               	bsf	12,5	;volatile
  4054  0B0A                     l271:	
  4055  0B0A  0008               	return
  4056  0B0B                     __end_of_UART_Init:	
  4057                           
  4058                           	psect	text12
  4059  0756                     __ptext12:	
  4060 ;; *************** function ___aldiv *****************
  4061 ;; Defined at:
  4062 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  divisor         4    4[BANK0 ] long 
  4065 ;;  dividend        4    8[BANK0 ] long 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  quotient        4   15[BANK0 ] long 
  4068 ;;  sign            1   14[BANK0 ] unsigned char 
  4069 ;;  counter         1   13[BANK0 ] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  4    4[BANK0 ] long 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         0       8       0       0       0
  4080 ;;      Locals:         0       6       0       0       0
  4081 ;;      Temps:          0       1       0       0       0
  4082 ;;      Totals:         0      15       0       0       0
  4083 ;;Total ram usage:       15 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    3
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_UART_Init
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function ___aldiv
  4095  0756                     ___aldiv:	
  4096  0756                     l3172:	
  4097                           ;incstack = 0
  4098                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4099                           
  4100  0756  1283               	bcf	3,5	;RP0=0, select bank0
  4101  0757  1303               	bcf	3,6	;RP1=0, select bank0
  4102  0758  01AE               	clrf	___aldiv@sign
  4103  0759                     l3174:	
  4104  0759  1FA7               	btfss	___aldiv@divisor+3,7
  4105  075A  2F5C               	goto	u2491
  4106  075B  2F5D               	goto	u2490
  4107  075C                     u2491:	
  4108  075C  2F6A               	goto	l501
  4109  075D                     u2490:	
  4110  075D                     l3176:	
  4111  075D  09A4               	comf	___aldiv@divisor,f
  4112  075E  09A5               	comf	___aldiv@divisor+1,f
  4113  075F  09A6               	comf	___aldiv@divisor+2,f
  4114  0760  09A7               	comf	___aldiv@divisor+3,f
  4115  0761  0AA4               	incf	___aldiv@divisor,f
  4116  0762  1903               	skipnz
  4117  0763  0AA5               	incf	___aldiv@divisor+1,f
  4118  0764  1903               	skipnz
  4119  0765  0AA6               	incf	___aldiv@divisor+2,f
  4120  0766  1903               	skipnz
  4121  0767  0AA7               	incf	___aldiv@divisor+3,f
  4122  0768  01AE               	clrf	___aldiv@sign
  4123  0769  0AAE               	incf	___aldiv@sign,f
  4124  076A                     l501:	
  4125  076A  1FAB               	btfss	___aldiv@dividend+3,7
  4126  076B  2F6D               	goto	u2501
  4127  076C  2F6E               	goto	u2500
  4128  076D                     u2501:	
  4129  076D  2F7D               	goto	l3182
  4130  076E                     u2500:	
  4131  076E                     l3178:	
  4132  076E  09A8               	comf	___aldiv@dividend,f
  4133  076F  09A9               	comf	___aldiv@dividend+1,f
  4134  0770  09AA               	comf	___aldiv@dividend+2,f
  4135  0771  09AB               	comf	___aldiv@dividend+3,f
  4136  0772  0AA8               	incf	___aldiv@dividend,f
  4137  0773  1903               	skipnz
  4138  0774  0AA9               	incf	___aldiv@dividend+1,f
  4139  0775  1903               	skipnz
  4140  0776  0AAA               	incf	___aldiv@dividend+2,f
  4141  0777  1903               	skipnz
  4142  0778  0AAB               	incf	___aldiv@dividend+3,f
  4143  0779                     l3180:	
  4144  0779  3001               	movlw	1
  4145  077A  00AC               	movwf	??___aldiv
  4146  077B  082C               	movf	??___aldiv,w
  4147  077C  06AE               	xorwf	___aldiv@sign,f
  4148  077D                     l3182:	
  4149  077D  3000               	movlw	0
  4150  077E  00B2               	movwf	___aldiv@quotient+3
  4151  077F  3000               	movlw	0
  4152  0780  00B1               	movwf	___aldiv@quotient+2
  4153  0781  3000               	movlw	0
  4154  0782  00B0               	movwf	___aldiv@quotient+1
  4155  0783  3000               	movlw	0
  4156  0784  00AF               	movwf	___aldiv@quotient
  4157  0785                     l3184:	
  4158  0785  0827               	movf	___aldiv@divisor+3,w
  4159  0786  0426               	iorwf	___aldiv@divisor+2,w
  4160  0787  0425               	iorwf	___aldiv@divisor+1,w
  4161  0788  0424               	iorwf	___aldiv@divisor,w
  4162  0789  1903               	skipnz
  4163  078A  2F8C               	goto	u2511
  4164  078B  2F8D               	goto	u2510
  4165  078C                     u2511:	
  4166  078C  2FDA               	goto	l3204
  4167  078D                     u2510:	
  4168  078D                     l3186:	
  4169  078D  01AD               	clrf	___aldiv@counter
  4170  078E  0AAD               	incf	___aldiv@counter,f
  4171  078F  2F9D               	goto	l3190
  4172  0790                     l3188:	
  4173  0790  3001               	movlw	1
  4174  0791  00AC               	movwf	??___aldiv
  4175  0792                     u2525:	
  4176  0792  1003               	clrc
  4177  0793  0DA4               	rlf	___aldiv@divisor,f
  4178  0794  0DA5               	rlf	___aldiv@divisor+1,f
  4179  0795  0DA6               	rlf	___aldiv@divisor+2,f
  4180  0796  0DA7               	rlf	___aldiv@divisor+3,f
  4181  0797  0BAC               	decfsz	??___aldiv,f
  4182  0798  2F92               	goto	u2525
  4183  0799  3001               	movlw	1
  4184  079A  00AC               	movwf	??___aldiv
  4185  079B  082C               	movf	??___aldiv,w
  4186  079C  07AD               	addwf	___aldiv@counter,f
  4187  079D                     l3190:	
  4188  079D  1FA7               	btfss	___aldiv@divisor+3,7
  4189  079E  2FA0               	goto	u2531
  4190  079F  2FA1               	goto	u2530
  4191  07A0                     u2531:	
  4192  07A0  2F90               	goto	l3188
  4193  07A1                     u2530:	
  4194  07A1                     l3192:	
  4195  07A1  3001               	movlw	1
  4196  07A2  00AC               	movwf	??___aldiv
  4197  07A3                     u2545:	
  4198  07A3  1003               	clrc
  4199  07A4  0DAF               	rlf	___aldiv@quotient,f
  4200  07A5  0DB0               	rlf	___aldiv@quotient+1,f
  4201  07A6  0DB1               	rlf	___aldiv@quotient+2,f
  4202  07A7  0DB2               	rlf	___aldiv@quotient+3,f
  4203  07A8  0BAC               	decfsz	??___aldiv,f
  4204  07A9  2FA3               	goto	u2545
  4205  07AA                     l3194:	
  4206  07AA  0827               	movf	___aldiv@divisor+3,w
  4207  07AB  022B               	subwf	___aldiv@dividend+3,w
  4208  07AC  1D03               	skipz
  4209  07AD  2FB8               	goto	u2555
  4210  07AE  0826               	movf	___aldiv@divisor+2,w
  4211  07AF  022A               	subwf	___aldiv@dividend+2,w
  4212  07B0  1D03               	skipz
  4213  07B1  2FB8               	goto	u2555
  4214  07B2  0825               	movf	___aldiv@divisor+1,w
  4215  07B3  0229               	subwf	___aldiv@dividend+1,w
  4216  07B4  1D03               	skipz
  4217  07B5  2FB8               	goto	u2555
  4218  07B6  0824               	movf	___aldiv@divisor,w
  4219  07B7  0228               	subwf	___aldiv@dividend,w
  4220  07B8                     u2555:	
  4221  07B8  1C03               	skipc
  4222  07B9  2FBB               	goto	u2551
  4223  07BA  2FBC               	goto	u2550
  4224  07BB                     u2551:	
  4225  07BB  2FCB               	goto	l3200
  4226  07BC                     u2550:	
  4227  07BC                     l3196:	
  4228  07BC  0824               	movf	___aldiv@divisor,w
  4229  07BD  02A8               	subwf	___aldiv@dividend,f
  4230  07BE  0825               	movf	___aldiv@divisor+1,w
  4231  07BF  1C03               	skipc
  4232  07C0  0F25               	incfsz	___aldiv@divisor+1,w
  4233  07C1  02A9               	subwf	___aldiv@dividend+1,f
  4234  07C2  0826               	movf	___aldiv@divisor+2,w
  4235  07C3  1C03               	skipc
  4236  07C4  0F26               	incfsz	___aldiv@divisor+2,w
  4237  07C5  02AA               	subwf	___aldiv@dividend+2,f
  4238  07C6  0827               	movf	___aldiv@divisor+3,w
  4239  07C7  1C03               	skipc
  4240  07C8  0F27               	incfsz	___aldiv@divisor+3,w
  4241  07C9  02AB               	subwf	___aldiv@dividend+3,f
  4242  07CA                     l3198:	
  4243  07CA  142F               	bsf	___aldiv@quotient,0
  4244  07CB                     l3200:	
  4245  07CB  3001               	movlw	1
  4246  07CC                     u2565:	
  4247  07CC  1003               	clrc
  4248  07CD  0CA7               	rrf	___aldiv@divisor+3,f
  4249  07CE  0CA6               	rrf	___aldiv@divisor+2,f
  4250  07CF  0CA5               	rrf	___aldiv@divisor+1,f
  4251  07D0  0CA4               	rrf	___aldiv@divisor,f
  4252  07D1  3EFF               	addlw	-1
  4253  07D2  1D03               	skipz
  4254  07D3  2FCC               	goto	u2565
  4255  07D4                     l3202:	
  4256  07D4  3001               	movlw	1
  4257  07D5  02AD               	subwf	___aldiv@counter,f
  4258  07D6  1D03               	btfss	3,2
  4259  07D7  2FD9               	goto	u2571
  4260  07D8  2FDA               	goto	u2570
  4261  07D9                     u2571:	
  4262  07D9  2FA1               	goto	l3192
  4263  07DA                     u2570:	
  4264  07DA                     l3204:	
  4265  07DA  082E               	movf	___aldiv@sign,w
  4266  07DB  1903               	btfsc	3,2
  4267  07DC  2FDE               	goto	u2581
  4268  07DD  2FDF               	goto	u2580
  4269  07DE                     u2581:	
  4270  07DE  2FEA               	goto	l3208
  4271  07DF                     u2580:	
  4272  07DF                     l3206:	
  4273  07DF  09AF               	comf	___aldiv@quotient,f
  4274  07E0  09B0               	comf	___aldiv@quotient+1,f
  4275  07E1  09B1               	comf	___aldiv@quotient+2,f
  4276  07E2  09B2               	comf	___aldiv@quotient+3,f
  4277  07E3  0AAF               	incf	___aldiv@quotient,f
  4278  07E4  1903               	skipnz
  4279  07E5  0AB0               	incf	___aldiv@quotient+1,f
  4280  07E6  1903               	skipnz
  4281  07E7  0AB1               	incf	___aldiv@quotient+2,f
  4282  07E8  1903               	skipnz
  4283  07E9  0AB2               	incf	___aldiv@quotient+3,f
  4284  07EA                     l3208:	
  4285  07EA  0832               	movf	___aldiv@quotient+3,w
  4286  07EB  00A7               	movwf	?___aldiv+3
  4287  07EC  0831               	movf	___aldiv@quotient+2,w
  4288  07ED  00A6               	movwf	?___aldiv+2
  4289  07EE  0830               	movf	___aldiv@quotient+1,w
  4290  07EF  00A5               	movwf	?___aldiv+1
  4291  07F0  082F               	movf	___aldiv@quotient,w
  4292  07F1  00A4               	movwf	?___aldiv
  4293  07F2                     l511:	
  4294  07F2  0008               	return
  4295  07F3                     __end_of___aldiv:	
  4296                           
  4297                           	psect	text13
  4298  0F53                     __ptext13:	
  4299 ;; *************** function _ShowDigitsOnDisplay *****************
  4300 ;; Defined at:
  4301 ;;		line 499 in file "main.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  display_inde    1   33[BANK0 ] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4315 ;;      Params:         0       0       0       0       0
  4316 ;;      Locals:         0       1       0       0       0
  4317 ;;      Temps:          0       2       0       0       0
  4318 ;;      Totals:         0       3       0       0       0
  4319 ;;Total ram usage:        3 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    4
  4322 ;; This function calls:
  4323 ;;		_SetDisplay
  4324 ;;		___awmod
  4325 ;; This function is called by:
  4326 ;;		_main
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           
  4331                           ;psect for function _ShowDigitsOnDisplay
  4332  0F53                     _ShowDigitsOnDisplay:	
  4333  0F53                     l3474:	
  4334                           ;incstack = 0
  4335                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4336                           
  4337                           
  4338                           ;main.c: 501:     for (unsigned char display_index = 0; display_index < n_semafori; disp
      +                          lay_index++)
  4339  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  4341  0F55  01C1               	clrf	ShowDigitsOnDisplay@display_index
  4342  0F56  2FCA               	goto	l3494
  4343  0F57                     l3480:	
  4344                           
  4345                           ;main.c: 506:             if ((*DigitsArr[display_index]).centinaia > 0)
  4346  0F57  0841               	movf	ShowDigitsOnDisplay@display_index,w
  4347  0F58  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4348  0F59  0084               	movwf	4
  4349  0F5A  1383               	bcf	3,7	;select IRP bank0
  4350  0F5B  0800               	movf	0,w
  4351  0F5C  0084               	movwf	4
  4352  0F5D  0800               	movf	0,w
  4353  0F5E  1903               	btfsc	3,2
  4354  0F5F  2F61               	goto	u2911
  4355  0F60  2F62               	goto	u2910
  4356  0F61                     u2911:	
  4357  0F61  2FDD               	goto	l3496
  4358  0F62                     u2910:	
  4359  0F62                     l3482:	
  4360                           
  4361                           ;main.c: 507:             {;main.c: 508:                 SetDisplay(display_index, 1, 0,
      +                           0, display[(*DigitsArr[display_index]).centinaia]);
  4362  0F62  01A4               	clrf	SetDisplay@d1
  4363  0F63  0AA4               	incf	SetDisplay@d1,f
  4364  0F64  01A5               	clrf	SetDisplay@d2
  4365  0F65  01A6               	clrf	SetDisplay@d3
  4366  0F66  0841               	movf	ShowDigitsOnDisplay@display_index,w
  4367  0F67  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4368  0F68  0084               	movwf	4
  4369  0F69  0800               	movf	0,w
  4370  0F6A  0084               	movwf	4
  4371  0F6B  0800               	movf	0,w
  4372  0F6C  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4373  0F6D  0084               	movwf	4
  4374  0F6E  120A  158A  2000  120A  158A  	fcall	stringdir
  4375  0F73  00BF               	movwf	??_ShowDigitsOnDisplay
  4376  0F74  083F               	movf	??_ShowDigitsOnDisplay,w
  4377  0F75  00A7               	movwf	SetDisplay@value
  4378  0F76  0841               	movf	ShowDigitsOnDisplay@display_index,w
  4379  0F77  120A  158A  2438  120A  158A  	fcall	_SetDisplay
  4380  0F7C  2FDD               	goto	l3496
  4381  0F7D                     l3484:	
  4382                           
  4383                           ;main.c: 512:             if ((*DigitsArr[display_index]).decine > 0 || (*DigitsArr[disp
      +                          lay_index]).centinaia > 0)
  4384  0F7D  0841               	movf	ShowDigitsOnDisplay@display_index,w
  4385  0F7E  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4386  0F7F  0084               	movwf	4
  4387  0F80  1383               	bcf	3,7	;select IRP bank0
  4388  0F81  0A00               	incf	0,w
  4389  0F82  0084               	movwf	4
  4390  0F83  0800               	movf	0,w
  4391  0F84  1D03               	btfss	3,2
  4392  0F85  2F87               	goto	u2921
  4393  0F86  2F88               	goto	u2920
  4394  0F87                     u2921:	
  4395  0F87  2F92               	goto	l3488
  4396  0F88                     u2920:	
  4397  0F88                     l3486:	
  4398  0F88  0841               	movf	ShowDigitsOnDisplay@display_index,w
  4399  0F89  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4400  0F8A  0084               	movwf	4
  4401  0F8B  0800               	movf	0,w
  4402  0F8C  0084               	movwf	4
  4403  0F8D  0800               	movf	0,w
  4404  0F8E  1903               	btfsc	3,2
  4405  0F8F  2F91               	goto	u2931
  4406  0F90  2F92               	goto	u2930
  4407  0F91                     u2931:	
  4408  0F91  2FDD               	goto	l3496
  4409  0F92                     u2930:	
  4410  0F92                     l3488:	
  4411                           
  4412                           ;main.c: 513:             {;main.c: 514:                 SetDisplay(display_index, 0, 1,
      +                           0, display[(*DigitsArr[display_index]).decine]);
  4413  0F92  01A4               	clrf	SetDisplay@d1
  4414  0F93  01A5               	clrf	SetDisplay@d2
  4415  0F94  0AA5               	incf	SetDisplay@d2,f
  4416  0F95  01A6               	clrf	SetDisplay@d3
  4417  0F96  0841               	movf	ShowDigitsOnDisplay@display_index,w
  4418  0F97  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4419  0F98  0084               	movwf	4
  4420  0F99  0A00               	incf	0,w
  4421  0F9A  0084               	movwf	4
  4422  0F9B  0800               	movf	0,w
  4423  0F9C  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4424  0F9D  0084               	movwf	4
  4425  0F9E  120A  158A  2000  120A  158A  	fcall	stringdir
  4426  0FA3  00BF               	movwf	??_ShowDigitsOnDisplay
  4427  0FA4  083F               	movf	??_ShowDigitsOnDisplay,w
  4428  0FA5  00A7               	movwf	SetDisplay@value
  4429  0FA6  0841               	movf	ShowDigitsOnDisplay@display_index,w
  4430  0FA7  120A  158A  2438  120A  158A  	fcall	_SetDisplay
  4431  0FAC  2FDD               	goto	l3496
  4432  0FAD                     l3490:	
  4433                           
  4434                           ;main.c: 518:             SetDisplay(display_index, 0, 0, 1, display[(*DigitsArr[display
      +                          _index]).unita]);
  4435  0FAD  01A4               	clrf	SetDisplay@d1
  4436  0FAE  01A5               	clrf	SetDisplay@d2
  4437  0FAF  01A6               	clrf	SetDisplay@d3
  4438  0FB0  0AA6               	incf	SetDisplay@d3,f
  4439  0FB1  0841               	movf	ShowDigitsOnDisplay@display_index,w
  4440  0FB2  3E62               	addlw	(low (_DigitsArr| 0))& (0+255)
  4441  0FB3  0084               	movwf	4
  4442  0FB4  1383               	bcf	3,7	;select IRP bank0
  4443  0FB5  0800               	movf	0,w
  4444  0FB6  3E02               	addlw	2
  4445  0FB7  0084               	movwf	4
  4446  0FB8  0800               	movf	0,w
  4447  0FB9  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4448  0FBA  0084               	movwf	4
  4449  0FBB  120A  158A  2000  120A  158A  	fcall	stringdir
  4450  0FC0  00BF               	movwf	??_ShowDigitsOnDisplay
  4451  0FC1  083F               	movf	??_ShowDigitsOnDisplay,w
  4452  0FC2  00A7               	movwf	SetDisplay@value
  4453  0FC3  0841               	movf	ShowDigitsOnDisplay@display_index,w
  4454  0FC4  120A  158A  2438  120A  158A  	fcall	_SetDisplay
  4455                           
  4456                           ;main.c: 519:             break;
  4457  0FC9  2FDD               	goto	l3496
  4458  0FCA                     l3494:	
  4459  0FCA  085D               	movf	_disp,w
  4460  0FCB  00BF               	movwf	??_ShowDigitsOnDisplay
  4461  0FCC  01C0               	clrf	??_ShowDigitsOnDisplay+1
  4462                           
  4463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4464                           ; Switch size 1, requested type "simple"
  4465                           ; Number of cases is 1, Range of values is 0 to 0
  4466                           ; switch strategies available:
  4467                           ; Name         Instructions Cycles
  4468                           ; simple_byte            4     3 (average)
  4469                           ; direct_byte           11     8 (fixed)
  4470                           ; jumptable            260     6 (fixed)
  4471                           ;	Chosen strategy is simple_byte
  4472  0FCD  0840               	movf	??_ShowDigitsOnDisplay+1,w
  4473  0FCE  3A00               	xorlw	0	; case 0
  4474  0FCF  1903               	skipnz
  4475  0FD0  2FD2               	goto	l3954
  4476  0FD1  2FDD               	goto	l3496
  4477  0FD2                     l3954:	
  4478                           
  4479                           ; Switch size 1, requested type "simple"
  4480                           ; Number of cases is 3, Range of values is 0 to 2
  4481                           ; switch strategies available:
  4482                           ; Name         Instructions Cycles
  4483                           ; simple_byte           10     6 (average)
  4484                           ; direct_byte           17     8 (fixed)
  4485                           ; jumptable            260     6 (fixed)
  4486                           ;	Chosen strategy is simple_byte
  4487  0FD2  083F               	movf	??_ShowDigitsOnDisplay,w
  4488  0FD3  3A00               	xorlw	0	; case 0
  4489  0FD4  1903               	skipnz
  4490  0FD5  2F57               	goto	l3480
  4491  0FD6  3A01               	xorlw	1	; case 1
  4492  0FD7  1903               	skipnz
  4493  0FD8  2F7D               	goto	l3484
  4494  0FD9  3A03               	xorlw	3	; case 2
  4495  0FDA  1903               	skipnz
  4496  0FDB  2FAD               	goto	l3490
  4497  0FDC  2FDD               	goto	l3496
  4498  0FDD                     l3496:	
  4499                           
  4500                           ;main.c: 521:     }
  4501  0FDD  3001               	movlw	1
  4502  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0FE0  00BF               	movwf	??_ShowDigitsOnDisplay
  4505  0FE1  083F               	movf	??_ShowDigitsOnDisplay,w
  4506  0FE2  07C1               	addwf	ShowDigitsOnDisplay@display_index,f
  4507  0FE3                     l3498:	
  4508  0FE3  3002               	movlw	2
  4509  0FE4  0241               	subwf	ShowDigitsOnDisplay@display_index,w
  4510  0FE5  1C03               	skipc
  4511  0FE6  2FE8               	goto	u2941
  4512  0FE7  2FE9               	goto	u2940
  4513  0FE8                     u2941:	
  4514  0FE8  2FCA               	goto	l3494
  4515  0FE9                     u2940:	
  4516  0FE9                     l3500:	
  4517                           
  4518                           ;main.c: 522:     disp = (disp + 1) % 3;
  4519  0FE9  3003               	movlw	3
  4520  0FEA  00B8               	movwf	___awmod@divisor
  4521  0FEB  3000               	movlw	0
  4522  0FEC  00B9               	movwf	___awmod@divisor+1
  4523  0FED  085D               	movf	_disp,w
  4524  0FEE  3E01               	addlw	1
  4525  0FEF  00BA               	movwf	___awmod@dividend
  4526  0FF0  3000               	movlw	0
  4527  0FF1  1803               	skipnc
  4528  0FF2  3001               	movlw	1
  4529  0FF3  00BB               	movwf	___awmod@dividend+1
  4530  0FF4  120A  158A  248D  120A  158A  	fcall	___awmod
  4531  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4532  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0FFB  0838               	movf	?___awmod,w
  4534  0FFC  00BF               	movwf	??_ShowDigitsOnDisplay
  4535  0FFD  083F               	movf	??_ShowDigitsOnDisplay,w
  4536  0FFE  00DD               	movwf	_disp
  4537  0FFF                     l340:	
  4538  0FFF  0008               	return
  4539  1000                     __end_of_ShowDigitsOnDisplay:	
  4540                           
  4541                           	psect	text14
  4542  0C38                     __ptext14:	
  4543 ;; *************** function _SetDisplay *****************
  4544 ;; Defined at:
  4545 ;;		line 474 in file "main.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  display_inde    1    wreg     unsigned char 
  4548 ;;  d1              1    4[BANK0 ] unsigned char 
  4549 ;;  d2              1    5[BANK0 ] unsigned char 
  4550 ;;  d3              1    6[BANK0 ] unsigned char 
  4551 ;;  value           1    7[BANK0 ] unsigned char 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  display_inde    1   10[BANK0 ] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4563 ;;      Params:         0       4       0       0       0
  4564 ;;      Locals:         0       1       0       0       0
  4565 ;;      Temps:          0       2       0       0       0
  4566 ;;      Totals:         0       7       0       0       0
  4567 ;;Total ram usage:        7 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    3
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_ShowDigitsOnDisplay
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function _SetDisplay
  4579  0C38                     _SetDisplay:	
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in _SetDisplay: [wreg-fsr0h+status,2+status,0]
  4583                           ;SetDisplay@display_index stored from wreg
  4584  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  4585  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  4586  0C3A  00AA               	movwf	SetDisplay@display_index
  4587  0C3B                     l3112:	
  4588                           
  4589                           ;main.c: 474: void SetDisplay(unsigned char display_index, char d1, char d2, char d3, ch
      +                          ar value);main.c: 475: {;main.c: 476:     switch (display_index)
  4590  0C3B  2C7C               	goto	l3122
  4591  0C3C                     l3114:	
  4592                           
  4593                           ;main.c: 479:         PORTAbits.RA2 = d1;
  4594  0C3C  0C24               	rrf	SetDisplay@d1,w
  4595  0C3D  1C03               	skipc
  4596  0C3E  1105               	bcf	5,2	;volatile
  4597  0C3F  1803               	skipnc
  4598  0C40  1505               	bsf	5,2	;volatile
  4599                           
  4600                           ;main.c: 480:         PORTAbits.RA3 = d2;
  4601  0C41  0C25               	rrf	SetDisplay@d2,w
  4602  0C42  1C03               	skipc
  4603  0C43  1185               	bcf	5,3	;volatile
  4604  0C44  1803               	skipnc
  4605  0C45  1585               	bsf	5,3	;volatile
  4606                           
  4607                           ;main.c: 481:         PORTAbits.RA4 = d3;
  4608  0C46  0C26               	rrf	SetDisplay@d3,w
  4609  0C47  1C03               	skipc
  4610  0C48  1205               	bcf	5,4	;volatile
  4611  0C49  1803               	skipnc
  4612  0C4A  1605               	bsf	5,4	;volatile
  4613                           
  4614                           ;main.c: 482:         PORTBbits.RB0 = d1;
  4615  0C4B  0C24               	rrf	SetDisplay@d1,w
  4616  0C4C  1C03               	skipc
  4617  0C4D  1006               	bcf	6,0	;volatile
  4618  0C4E  1803               	skipnc
  4619  0C4F  1406               	bsf	6,0	;volatile
  4620                           
  4621                           ;main.c: 483:         PORTBbits.RB0 = d2;
  4622  0C50  0C25               	rrf	SetDisplay@d2,w
  4623  0C51  1C03               	skipc
  4624  0C52  1006               	bcf	6,0	;volatile
  4625  0C53  1803               	skipnc
  4626  0C54  1406               	bsf	6,0	;volatile
  4627                           
  4628                           ;main.c: 484:         PORTBbits.RB0 = d3;
  4629  0C55  0C26               	rrf	SetDisplay@d3,w
  4630  0C56  1C03               	skipc
  4631  0C57  1006               	bcf	6,0	;volatile
  4632  0C58  1803               	skipnc
  4633  0C59  1406               	bsf	6,0	;volatile
  4634  0C5A                     l3116:	
  4635                           
  4636                           ;main.c: 485:         PORTD = value;
  4637  0C5A  0827               	movf	SetDisplay@value,w
  4638  0C5B  0088               	movwf	8	;volatile
  4639                           
  4640                           ;main.c: 486:         break;
  4641  0C5C  2C8C               	goto	l326
  4642  0C5D                     l3118:	
  4643                           
  4644                           ;main.c: 488:         PORTAbits.RA5 = d1;
  4645  0C5D  0C24               	rrf	SetDisplay@d1,w
  4646  0C5E  1C03               	skipc
  4647  0C5F  1285               	bcf	5,5	;volatile
  4648  0C60  1803               	skipnc
  4649  0C61  1685               	bsf	5,5	;volatile
  4650                           
  4651                           ;main.c: 489:         PORTBbits.RB0 = d2;
  4652  0C62  0C25               	rrf	SetDisplay@d2,w
  4653  0C63  1C03               	skipc
  4654  0C64  1006               	bcf	6,0	;volatile
  4655  0C65  1803               	skipnc
  4656  0C66  1406               	bsf	6,0	;volatile
  4657                           
  4658                           ;main.c: 490:         PORTBbits.RB0 = d3;
  4659  0C67  0C26               	rrf	SetDisplay@d3,w
  4660  0C68  1C03               	skipc
  4661  0C69  1006               	bcf	6,0	;volatile
  4662  0C6A  1803               	skipnc
  4663  0C6B  1406               	bsf	6,0	;volatile
  4664                           
  4665                           ;main.c: 491:         PORTBbits.RB0 = d1;
  4666  0C6C  0C24               	rrf	SetDisplay@d1,w
  4667  0C6D  1C03               	skipc
  4668  0C6E  1006               	bcf	6,0	;volatile
  4669  0C6F  1803               	skipnc
  4670  0C70  1406               	bsf	6,0	;volatile
  4671                           
  4672                           ;main.c: 492:         PORTBbits.RB0 = d2;
  4673  0C71  0C25               	rrf	SetDisplay@d2,w
  4674  0C72  1C03               	skipc
  4675  0C73  1006               	bcf	6,0	;volatile
  4676  0C74  1803               	skipnc
  4677  0C75  1406               	bsf	6,0	;volatile
  4678                           
  4679                           ;main.c: 493:         PORTBbits.RB0 = d3;
  4680  0C76  0C26               	rrf	SetDisplay@d3,w
  4681  0C77  1C03               	skipc
  4682  0C78  1006               	bcf	6,0	;volatile
  4683  0C79  1803               	skipnc
  4684  0C7A  1406               	bsf	6,0	;volatile
  4685                           
  4686                           ;main.c: 495:         break;
  4687  0C7B  2C8C               	goto	l326
  4688  0C7C                     l3122:	
  4689  0C7C  082A               	movf	SetDisplay@display_index,w
  4690  0C7D  00A8               	movwf	??_SetDisplay
  4691  0C7E  01A9               	clrf	??_SetDisplay+1
  4692                           
  4693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4694                           ; Switch size 1, requested type "simple"
  4695                           ; Number of cases is 1, Range of values is 0 to 0
  4696                           ; switch strategies available:
  4697                           ; Name         Instructions Cycles
  4698                           ; simple_byte            4     3 (average)
  4699                           ; direct_byte           11     8 (fixed)
  4700                           ; jumptable            260     6 (fixed)
  4701                           ;	Chosen strategy is simple_byte
  4702  0C7F  0829               	movf	??_SetDisplay+1,w
  4703  0C80  3A00               	xorlw	0	; case 0
  4704  0C81  1903               	skipnz
  4705  0C82  2C84               	goto	l3956
  4706  0C83  2C8C               	goto	l326
  4707  0C84                     l3956:	
  4708                           
  4709                           ; Switch size 1, requested type "simple"
  4710                           ; Number of cases is 2, Range of values is 0 to 1
  4711                           ; switch strategies available:
  4712                           ; Name         Instructions Cycles
  4713                           ; simple_byte            7     4 (average)
  4714                           ; direct_byte           14     8 (fixed)
  4715                           ; jumptable            260     6 (fixed)
  4716                           ;	Chosen strategy is simple_byte
  4717  0C84  0828               	movf	??_SetDisplay,w
  4718  0C85  3A00               	xorlw	0	; case 0
  4719  0C86  1903               	skipnz
  4720  0C87  2C3C               	goto	l3114
  4721  0C88  3A01               	xorlw	1	; case 1
  4722  0C89  1903               	skipnz
  4723  0C8A  2C5D               	goto	l3118
  4724  0C8B  2C8C               	goto	l326
  4725  0C8C                     l326:	
  4726  0C8C  0008               	return
  4727  0C8D                     __end_of_SetDisplay:	
  4728                           
  4729                           	psect	text15
  4730  0CE8                     __ptext15:	
  4731 ;; *************** function _SetReceivedTimes *****************
  4732 ;; Defined at:
  4733 ;;		line 86 in file "./CustomLib/TrafficLight.h"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4736 ;;		 -> dataFromGateway(15), 
  4737 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4738 ;;		 -> Semafori(2), 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  _dataFromGat    1   19[BANK0 ] PTR unsigned char 
  4741 ;;		 -> dataFromGateway(15), 
  4742 ;;  index           1   20[BANK0 ] unsigned char 
  4743 ;;  colorId         1   18[BANK0 ] unsigned char 
  4744 ;;  semaforoId      1   17[BANK0 ] unsigned char 
  4745 ;;  i               1   21[BANK0 ] unsigned char 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4755 ;;      Params:         0       1       0       0       0
  4756 ;;      Locals:         0       5       0       0       0
  4757 ;;      Temps:          0       4       0       0       0
  4758 ;;      Totals:         0      10       0       0       0
  4759 ;;Total ram usage:       10 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    4
  4762 ;; This function calls:
  4763 ;;		_GetTime
  4764 ;;		___bmul
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function _SetReceivedTimes
  4772  0CE8                     _SetReceivedTimes:	
  4773                           
  4774                           ;incstack = 0
  4775                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4776                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4777  0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  4778  0CE9  1303               	bcf	3,6	;RP1=0, select bank0
  4779  0CEA  00B3               	movwf	SetReceivedTimes@_dataFromGateway
  4780  0CEB                     l3356:	
  4781                           
  4782                           ;./CustomLib/TrafficLight.h: 86: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 87: {;./CustomLib/TrafficLight.h: 88:   
      +                            for (unsigned char i = 0; i < 3; i++)
  4783  0CEB  01B5               	clrf	SetReceivedTimes@i
  4784  0CEC                     l3358:	
  4785  0CEC  3003               	movlw	3
  4786  0CED  0235               	subwf	SetReceivedTimes@i,w
  4787  0CEE  1C03               	skipc
  4788  0CEF  2CF1               	goto	u2831
  4789  0CF0  2CF2               	goto	u2830
  4790  0CF1                     u2831:	
  4791  0CF1  2CF3               	goto	l3362
  4792  0CF2                     u2830:	
  4793  0CF2  2D47               	goto	l154
  4794  0CF3                     l3362:	
  4795                           
  4796                           ;./CustomLib/TrafficLight.h: 89:     {;./CustomLib/TrafficLight.h: 90:         unsigned 
      +                          char index = i * 5;
  4797  0CF3  3005               	movlw	5
  4798  0CF4  00AD               	movwf	??_SetReceivedTimes
  4799  0CF5  082D               	movf	??_SetReceivedTimes,w
  4800  0CF6  00A4               	movwf	___bmul@multiplicand
  4801  0CF7  0835               	movf	SetReceivedTimes@i,w
  4802  0CF8  120A  158A  2207  120A  158A  	fcall	___bmul
  4803  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  4804  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  4805  0CFF  00AE               	movwf	??_SetReceivedTimes+1
  4806  0D00  082E               	movf	??_SetReceivedTimes+1,w
  4807  0D01  00B4               	movwf	SetReceivedTimes@index
  4808  0D02                     l3364:	
  4809                           
  4810                           ;./CustomLib/TrafficLight.h: 91:         unsigned char semaforoId = (_dataFromGateway[in
      +                          dex] >> 1) & 0x0F;
  4811  0D02  0834               	movf	SetReceivedTimes@index,w
  4812  0D03  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4813  0D04  00AD               	movwf	??_SetReceivedTimes
  4814  0D05  082D               	movf	??_SetReceivedTimes,w
  4815  0D06  0084               	movwf	4
  4816  0D07  1383               	bcf	3,7	;select IRP bank0
  4817  0D08  0800               	movf	0,w
  4818  0D09  00AE               	movwf	??_SetReceivedTimes+1
  4819  0D0A  1003               	clrc
  4820  0D0B  0C2E               	rrf	??_SetReceivedTimes+1,w
  4821  0D0C  390F               	andlw	15
  4822  0D0D  00AF               	movwf	??_SetReceivedTimes+2
  4823  0D0E  082F               	movf	??_SetReceivedTimes+2,w
  4824  0D0F  00B1               	movwf	SetReceivedTimes@semaforoId
  4825  0D10                     l3366:	
  4826                           
  4827                           ;./CustomLib/TrafficLight.h: 92:         unsigned char colorId = ((_dataFromGateway[inde
      +                          x] >> 5) & 0x03) - 1;
  4828  0D10  0834               	movf	SetReceivedTimes@index,w
  4829  0D11  0733               	addwf	SetReceivedTimes@_dataFromGateway,w
  4830  0D12  00AD               	movwf	??_SetReceivedTimes
  4831  0D13  082D               	movf	??_SetReceivedTimes,w
  4832  0D14  0084               	movwf	4
  4833  0D15  0800               	movf	0,w
  4834  0D16  00AE               	movwf	??_SetReceivedTimes+1
  4835  0D17  3005               	movlw	5
  4836  0D18                     u2845:	
  4837  0D18  1003               	clrc
  4838  0D19  0CAE               	rrf	??_SetReceivedTimes+1,f
  4839  0D1A  3EFF               	addlw	-1
  4840  0D1B  1D03               	skipz
  4841  0D1C  2D18               	goto	u2845
  4842  0D1D  082E               	movf	??_SetReceivedTimes+1,w
  4843  0D1E  3903               	andlw	3
  4844  0D1F  3EFF               	addlw	255
  4845  0D20  00AF               	movwf	??_SetReceivedTimes+2
  4846  0D21  082F               	movf	??_SetReceivedTimes+2,w
  4847  0D22  00B2               	movwf	SetReceivedTimes@colorId
  4848  0D23                     l3368:	
  4849                           
  4850                           ;./CustomLib/TrafficLight.h: 94:         (*(_semafori)[semaforoId]).new_times[colorId] =
      +                           GetTime(index, _dataFromGateway);
  4851  0D23  0833               	movf	SetReceivedTimes@_dataFromGateway,w
  4852  0D24  00AD               	movwf	??_SetReceivedTimes
  4853  0D25  082D               	movf	??_SetReceivedTimes,w
  4854  0D26  00A4               	movwf	GetTime@_dataFromGateway
  4855  0D27  0834               	movf	SetReceivedTimes@index,w
  4856  0D28  120A  158A  230B  120A  158A  	fcall	_GetTime
  4857  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  4858  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  4859  0D2F  0831               	movf	SetReceivedTimes@semaforoId,w
  4860  0D30  072C               	addwf	SetReceivedTimes@_semafori,w
  4861  0D31  00AE               	movwf	??_SetReceivedTimes+1
  4862  0D32  082E               	movf	??_SetReceivedTimes+1,w
  4863  0D33  0084               	movwf	4
  4864  0D34  0832               	movf	SetReceivedTimes@colorId,w
  4865  0D35  00AF               	movwf	??_SetReceivedTimes+2
  4866  0D36  072F               	addwf	??_SetReceivedTimes+2,w
  4867  0D37  1383               	bcf	3,7	;select IRP bank0
  4868  0D38  0700               	addwf	0,w
  4869  0D39  00B0               	movwf	??_SetReceivedTimes+3
  4870  0D3A  0830               	movf	??_SetReceivedTimes+3,w
  4871  0D3B  3E06               	addlw	6
  4872  0D3C  0084               	movwf	4
  4873  0D3D  0824               	movf	?_GetTime,w
  4874  0D3E  0080               	movwf	0
  4875  0D3F  0A84               	incf	4,f
  4876  0D40  0825               	movf	?_GetTime+1,w
  4877  0D41  0080               	movwf	0
  4878  0D42                     l3370:	
  4879                           
  4880                           ;./CustomLib/TrafficLight.h: 95:     }
  4881  0D42  3001               	movlw	1
  4882  0D43  00AD               	movwf	??_SetReceivedTimes
  4883  0D44  082D               	movf	??_SetReceivedTimes,w
  4884  0D45  07B5               	addwf	SetReceivedTimes@i,f
  4885  0D46  2CEC               	goto	l3358
  4886  0D47                     l154:	
  4887  0D47  0008               	return
  4888  0D48                     __end_of_SetReceivedTimes:	
  4889                           
  4890                           	psect	text16
  4891  0B0B                     __ptext16:	
  4892 ;; *************** function _GetTime *****************
  4893 ;; Defined at:
  4894 ;;		line 37 in file "./CustomLib/TrafficLight.h"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  index           1    wreg     unsigned char 
  4897 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4898 ;;		 -> dataFromGateway(15), 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  index           1    8[BANK0 ] unsigned char 
  4901 ;;  tmp             2   10[BANK0 ] int 
  4902 ;;  shortInt        1    9[BANK0 ] struct .
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  2    4[BANK0 ] int 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4912 ;;      Params:         0       2       0       0       0
  4913 ;;      Locals:         0       4       0       0       0
  4914 ;;      Temps:          0       2       0       0       0
  4915 ;;      Totals:         0       8       0       0       0
  4916 ;;Total ram usage:        8 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    3
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_SetReceivedTimes
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           
  4927                           ;psect for function _GetTime
  4928  0B0B                     _GetTime:	
  4929                           
  4930                           ;incstack = 0
  4931                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4932                           ;GetTime@index stored from wreg
  4933  0B0B  1283               	bcf	3,5	;RP0=0, select bank0
  4934  0B0C  1303               	bcf	3,6	;RP1=0, select bank0
  4935  0B0D  00A8               	movwf	GetTime@index
  4936  0B0E                     l3094:	
  4937                           
  4938                           ;./CustomLib/TrafficLight.h: 37: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 38: {;./CustomLib/TrafficLight.h: 39:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 43:     } shortInt;;./CustomLib/TrafficLight.h: 45:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4939  0B0E  0828               	movf	GetTime@index,w
  4940  0B0F  0724               	addwf	GetTime@_dataFromGateway,w
  4941  0B10  00A6               	movwf	??_GetTime
  4942  0B11  0826               	movf	??_GetTime,w
  4943  0B12  3E03               	addlw	3
  4944  0B13  0084               	movwf	4
  4945  0B14  307F               	movlw	127
  4946  0B15  1383               	bcf	3,7	;select IRP bank0
  4947  0B16  0500               	andwf	0,w
  4948  0B17  00A7               	movwf	??_GetTime+1
  4949  0B18  0829               	movf	GetTime@shortInt,w
  4950  0B19  0627               	xorwf	??_GetTime+1,w
  4951  0B1A  3980               	andlw	-128
  4952  0B1B  0627               	xorwf	??_GetTime+1,w
  4953  0B1C  00A9               	movwf	GetTime@shortInt
  4954  0B1D                     l3096:	
  4955                           
  4956                           ;./CustomLib/TrafficLight.h: 46:     tmp = shortInt.Val;
  4957  0B1D  0829               	movf	GetTime@shortInt,w
  4958  0B1E  397F               	andlw	127
  4959  0B1F  00A6               	movwf	??_GetTime
  4960  0B20  01A7               	clrf	??_GetTime+1
  4961  0B21  0826               	movf	??_GetTime,w
  4962  0B22  00AA               	movwf	GetTime@tmp
  4963  0B23  0827               	movf	??_GetTime+1,w
  4964  0B24  00AB               	movwf	GetTime@tmp+1
  4965  0B25                     l3098:	
  4966                           
  4967                           ;./CustomLib/TrafficLight.h: 47:     tmp = (tmp << 7) & 0x80;
  4968  0B25  082B               	movf	GetTime@tmp+1,w
  4969  0B26  00A7               	movwf	??_GetTime+1
  4970  0B27  082A               	movf	GetTime@tmp,w
  4971  0B28  00A6               	movwf	??_GetTime
  4972  0B29  3007               	movlw	7
  4973  0B2A  00FF               	movwf	btemp+1
  4974  0B2B                     u2365:	
  4975  0B2B  1003               	clrc
  4976  0B2C  0DA6               	rlf	??_GetTime,f
  4977  0B2D  0DA7               	rlf	??_GetTime+1,f
  4978  0B2E  0BFF               	decfsz	btemp+1,f
  4979  0B2F  2B2B               	goto	u2365
  4980  0B30  3080               	movlw	128
  4981  0B31  0526               	andwf	??_GetTime,w
  4982  0B32  00AA               	movwf	GetTime@tmp
  4983  0B33  3000               	movlw	0
  4984  0B34  0527               	andwf	??_GetTime+1,w
  4985  0B35  00AB               	movwf	GetTime@tmp+1
  4986  0B36                     l3100:	
  4987                           
  4988                           ;./CustomLib/TrafficLight.h: 49:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4989  0B36  0828               	movf	GetTime@index,w
  4990  0B37  0724               	addwf	GetTime@_dataFromGateway,w
  4991  0B38  00A6               	movwf	??_GetTime
  4992  0B39  0826               	movf	??_GetTime,w
  4993  0B3A  3E02               	addlw	2
  4994  0B3B  0084               	movwf	4
  4995  0B3C  307F               	movlw	127
  4996  0B3D  0500               	andwf	0,w
  4997  0B3E  00A7               	movwf	??_GetTime+1
  4998  0B3F  0829               	movf	GetTime@shortInt,w
  4999  0B40  0627               	xorwf	??_GetTime+1,w
  5000  0B41  3980               	andlw	-128
  5001  0B42  0627               	xorwf	??_GetTime+1,w
  5002  0B43  00A9               	movwf	GetTime@shortInt
  5003  0B44                     l3102:	
  5004                           
  5005                           ;./CustomLib/TrafficLight.h: 50:     tmp = tmp | shortInt.Val;
  5006  0B44  0829               	movf	GetTime@shortInt,w
  5007  0B45  397F               	andlw	127
  5008  0B46  00A6               	movwf	??_GetTime
  5009  0B47  082A               	movf	GetTime@tmp,w
  5010  0B48  0426               	iorwf	??_GetTime,w
  5011  0B49  00AA               	movwf	GetTime@tmp
  5012  0B4A  082B               	movf	GetTime@tmp+1,w
  5013  0B4B  00AB               	movwf	GetTime@tmp+1
  5014  0B4C                     l3104:	
  5015                           
  5016                           ;./CustomLib/TrafficLight.h: 52:     return tmp;
  5017  0B4C  082B               	movf	GetTime@tmp+1,w
  5018  0B4D  00A5               	movwf	?_GetTime+1
  5019  0B4E  082A               	movf	GetTime@tmp,w
  5020  0B4F  00A4               	movwf	?_GetTime
  5021  0B50                     l137:	
  5022  0B50  0008               	return
  5023  0B51                     __end_of_GetTime:	
  5024                           
  5025                           	psect	text17
  5026  069F                     __ptext17:	
  5027 ;; *************** function _SetDefaultTimers *****************
  5028 ;; Defined at:
  5029 ;;		line 56 in file "./CustomLib/TrafficLight.h"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  rosso           2    4[BANK0 ] int 
  5032 ;;  verde           2    6[BANK0 ] int 
  5033 ;;  giallo          2    8[BANK0 ] int 
  5034 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  5035 ;;		 -> Semafori(2), 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  i               1   15[BANK0 ] unsigned char 
  5038 ;;  l               1   14[BANK0 ] unsigned char 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5048 ;;      Params:         0       7       0       0       0
  5049 ;;      Locals:         0       2       0       0       0
  5050 ;;      Temps:          0       3       0       0       0
  5051 ;;      Totals:         0      12       0       0       0
  5052 ;;Total ram usage:       12 bytes
  5053 ;; Hardware stack levels used:    1
  5054 ;; Hardware stack levels required when called:    3
  5055 ;; This function calls:
  5056 ;;		Nothing
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           
  5063                           ;psect for function _SetDefaultTimers
  5064  069F                     _SetDefaultTimers:	
  5065  069F                     l3320:	
  5066                           ;incstack = 0
  5067                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  5068                           
  5069                           
  5070                           ;./CustomLib/TrafficLight.h: 56: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 57: {;./CustomLib/TrafficLight.h: 58: 
      +                              for (unsigned char l = 0; l < n_semafori; l++)
  5071  069F  1283               	bcf	3,5	;RP0=0, select bank0
  5072  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  5073  06A1  01AE               	clrf	SetDefaultTimers@l
  5074  06A2                     l3326:	
  5075                           
  5076                           ;./CustomLib/TrafficLight.h: 59:     {;./CustomLib/TrafficLight.h: 60:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  5077  06A2  01AF               	clrf	SetDefaultTimers@i
  5078  06A3  2F13               	goto	l3340
  5079  06A4                     l3332:	
  5080                           
  5081                           ;./CustomLib/TrafficLight.h: 65:                 (*(_semafori)[l]).times[i] = rosso;
  5082  06A4  082E               	movf	SetDefaultTimers@l,w
  5083  06A5  072A               	addwf	SetDefaultTimers@_semafori,w
  5084  06A6  00AB               	movwf	??_SetDefaultTimers
  5085  06A7  082B               	movf	??_SetDefaultTimers,w
  5086  06A8  0084               	movwf	4
  5087  06A9  082F               	movf	SetDefaultTimers@i,w
  5088  06AA  00AC               	movwf	??_SetDefaultTimers+1
  5089  06AB  072C               	addwf	??_SetDefaultTimers+1,w
  5090  06AC  1383               	bcf	3,7	;select IRP bank0
  5091  06AD  0700               	addwf	0,w
  5092  06AE  00AD               	movwf	??_SetDefaultTimers+2
  5093  06AF  082D               	movf	??_SetDefaultTimers+2,w
  5094  06B0  0084               	movwf	4
  5095  06B1  0824               	movf	SetDefaultTimers@rosso,w
  5096  06B2  0080               	movwf	0
  5097  06B3  0A84               	incf	4,f
  5098  06B4  0825               	movf	SetDefaultTimers@rosso+1,w
  5099  06B5  0080               	movwf	0
  5100                           
  5101                           ;./CustomLib/TrafficLight.h: 66:                 (*(_semafori)[l]).new_times[i] = rosso;
  5102  06B6  082E               	movf	SetDefaultTimers@l,w
  5103  06B7  072A               	addwf	SetDefaultTimers@_semafori,w
  5104  06B8  00AB               	movwf	??_SetDefaultTimers
  5105  06B9  082B               	movf	??_SetDefaultTimers,w
  5106  06BA  0084               	movwf	4
  5107  06BB  082F               	movf	SetDefaultTimers@i,w
  5108  06BC  00AC               	movwf	??_SetDefaultTimers+1
  5109  06BD  072C               	addwf	??_SetDefaultTimers+1,w
  5110  06BE  0700               	addwf	0,w
  5111  06BF  00AD               	movwf	??_SetDefaultTimers+2
  5112  06C0  082D               	movf	??_SetDefaultTimers+2,w
  5113  06C1  3E06               	addlw	6
  5114  06C2  0084               	movwf	4
  5115  06C3  0824               	movf	SetDefaultTimers@rosso,w
  5116  06C4  0080               	movwf	0
  5117  06C5  0A84               	incf	4,f
  5118  06C6  0825               	movf	SetDefaultTimers@rosso+1,w
  5119  06C7  0080               	movwf	0
  5120                           
  5121                           ;./CustomLib/TrafficLight.h: 67:                 break;
  5122  06C8  2F26               	goto	l3342
  5123  06C9                     l3334:	
  5124                           
  5125                           ;./CustomLib/TrafficLight.h: 69:                 (*(_semafori)[l]).times[i] = verde;
  5126  06C9  082E               	movf	SetDefaultTimers@l,w
  5127  06CA  072A               	addwf	SetDefaultTimers@_semafori,w
  5128  06CB  00AB               	movwf	??_SetDefaultTimers
  5129  06CC  082B               	movf	??_SetDefaultTimers,w
  5130  06CD  0084               	movwf	4
  5131  06CE  082F               	movf	SetDefaultTimers@i,w
  5132  06CF  00AC               	movwf	??_SetDefaultTimers+1
  5133  06D0  072C               	addwf	??_SetDefaultTimers+1,w
  5134  06D1  1383               	bcf	3,7	;select IRP bank0
  5135  06D2  0700               	addwf	0,w
  5136  06D3  00AD               	movwf	??_SetDefaultTimers+2
  5137  06D4  082D               	movf	??_SetDefaultTimers+2,w
  5138  06D5  0084               	movwf	4
  5139  06D6  0826               	movf	SetDefaultTimers@verde,w
  5140  06D7  0080               	movwf	0
  5141  06D8  0A84               	incf	4,f
  5142  06D9  0827               	movf	SetDefaultTimers@verde+1,w
  5143  06DA  0080               	movwf	0
  5144                           
  5145                           ;./CustomLib/TrafficLight.h: 70:                 (*(_semafori)[l]).new_times[i] = verde;
  5146  06DB  082E               	movf	SetDefaultTimers@l,w
  5147  06DC  072A               	addwf	SetDefaultTimers@_semafori,w
  5148  06DD  00AB               	movwf	??_SetDefaultTimers
  5149  06DE  082B               	movf	??_SetDefaultTimers,w
  5150  06DF  0084               	movwf	4
  5151  06E0  082F               	movf	SetDefaultTimers@i,w
  5152  06E1  00AC               	movwf	??_SetDefaultTimers+1
  5153  06E2  072C               	addwf	??_SetDefaultTimers+1,w
  5154  06E3  0700               	addwf	0,w
  5155  06E4  00AD               	movwf	??_SetDefaultTimers+2
  5156  06E5  082D               	movf	??_SetDefaultTimers+2,w
  5157  06E6  3E06               	addlw	6
  5158  06E7  0084               	movwf	4
  5159  06E8  0826               	movf	SetDefaultTimers@verde,w
  5160  06E9  0080               	movwf	0
  5161  06EA  0A84               	incf	4,f
  5162  06EB  0827               	movf	SetDefaultTimers@verde+1,w
  5163  06EC  0080               	movwf	0
  5164                           
  5165                           ;./CustomLib/TrafficLight.h: 71:                 break;
  5166  06ED  2F26               	goto	l3342
  5167  06EE                     l3336:	
  5168                           
  5169                           ;./CustomLib/TrafficLight.h: 73:                 (*(_semafori)[l]).times[i] = giallo;
  5170  06EE  082E               	movf	SetDefaultTimers@l,w
  5171  06EF  072A               	addwf	SetDefaultTimers@_semafori,w
  5172  06F0  00AB               	movwf	??_SetDefaultTimers
  5173  06F1  082B               	movf	??_SetDefaultTimers,w
  5174  06F2  0084               	movwf	4
  5175  06F3  082F               	movf	SetDefaultTimers@i,w
  5176  06F4  00AC               	movwf	??_SetDefaultTimers+1
  5177  06F5  072C               	addwf	??_SetDefaultTimers+1,w
  5178  06F6  1383               	bcf	3,7	;select IRP bank0
  5179  06F7  0700               	addwf	0,w
  5180  06F8  00AD               	movwf	??_SetDefaultTimers+2
  5181  06F9  082D               	movf	??_SetDefaultTimers+2,w
  5182  06FA  0084               	movwf	4
  5183  06FB  0828               	movf	SetDefaultTimers@giallo,w
  5184  06FC  0080               	movwf	0
  5185  06FD  0A84               	incf	4,f
  5186  06FE  0829               	movf	SetDefaultTimers@giallo+1,w
  5187  06FF  0080               	movwf	0
  5188                           
  5189                           ;./CustomLib/TrafficLight.h: 74:                 (*(_semafori)[l]).new_times[i] = giallo
      +                          ;
  5190  0700  082E               	movf	SetDefaultTimers@l,w
  5191  0701  072A               	addwf	SetDefaultTimers@_semafori,w
  5192  0702  00AB               	movwf	??_SetDefaultTimers
  5193  0703  082B               	movf	??_SetDefaultTimers,w
  5194  0704  0084               	movwf	4
  5195  0705  082F               	movf	SetDefaultTimers@i,w
  5196  0706  00AC               	movwf	??_SetDefaultTimers+1
  5197  0707  072C               	addwf	??_SetDefaultTimers+1,w
  5198  0708  0700               	addwf	0,w
  5199  0709  00AD               	movwf	??_SetDefaultTimers+2
  5200  070A  082D               	movf	??_SetDefaultTimers+2,w
  5201  070B  3E06               	addlw	6
  5202  070C  0084               	movwf	4
  5203  070D  0828               	movf	SetDefaultTimers@giallo,w
  5204  070E  0080               	movwf	0
  5205  070F  0A84               	incf	4,f
  5206  0710  0829               	movf	SetDefaultTimers@giallo+1,w
  5207  0711  0080               	movwf	0
  5208                           
  5209                           ;./CustomLib/TrafficLight.h: 75:                 break;
  5210  0712  2F26               	goto	l3342
  5211  0713                     l3340:	
  5212  0713  082F               	movf	SetDefaultTimers@i,w
  5213  0714  00AB               	movwf	??_SetDefaultTimers
  5214  0715  01AC               	clrf	??_SetDefaultTimers+1
  5215                           
  5216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5217                           ; Switch size 1, requested type "simple"
  5218                           ; Number of cases is 1, Range of values is 0 to 0
  5219                           ; switch strategies available:
  5220                           ; Name         Instructions Cycles
  5221                           ; simple_byte            4     3 (average)
  5222                           ; direct_byte           11     8 (fixed)
  5223                           ; jumptable            260     6 (fixed)
  5224                           ;	Chosen strategy is simple_byte
  5225  0716  082C               	movf	??_SetDefaultTimers+1,w
  5226  0717  3A00               	xorlw	0	; case 0
  5227  0718  1903               	skipnz
  5228  0719  2F1B               	goto	l3958
  5229  071A  2F26               	goto	l3342
  5230  071B                     l3958:	
  5231                           
  5232                           ; Switch size 1, requested type "simple"
  5233                           ; Number of cases is 3, Range of values is 0 to 2
  5234                           ; switch strategies available:
  5235                           ; Name         Instructions Cycles
  5236                           ; simple_byte           10     6 (average)
  5237                           ; direct_byte           17     8 (fixed)
  5238                           ; jumptable            260     6 (fixed)
  5239                           ;	Chosen strategy is simple_byte
  5240  071B  082B               	movf	??_SetDefaultTimers,w
  5241  071C  3A00               	xorlw	0	; case 0
  5242  071D  1903               	skipnz
  5243  071E  2EA4               	goto	l3332
  5244  071F  3A01               	xorlw	1	; case 1
  5245  0720  1903               	skipnz
  5246  0721  2EC9               	goto	l3334
  5247  0722  3A03               	xorlw	3	; case 2
  5248  0723  1903               	skipnz
  5249  0724  2EEE               	goto	l3336
  5250  0725  2F26               	goto	l3342
  5251  0726                     l3342:	
  5252                           
  5253                           ;./CustomLib/TrafficLight.h: 77:         }
  5254  0726  3001               	movlw	1
  5255  0727  00AB               	movwf	??_SetDefaultTimers
  5256  0728  082B               	movf	??_SetDefaultTimers,w
  5257  0729  07AF               	addwf	SetDefaultTimers@i,f
  5258  072A                     l3344:	
  5259  072A  3003               	movlw	3
  5260  072B  022F               	subwf	SetDefaultTimers@i,w
  5261  072C  1C03               	skipc
  5262  072D  2F2F               	goto	u2811
  5263  072E  2F30               	goto	u2810
  5264  072F                     u2811:	
  5265  072F  2F13               	goto	l3340
  5266  0730                     u2810:	
  5267  0730                     l3346:	
  5268                           
  5269                           ;./CustomLib/TrafficLight.h: 78:     }
  5270  0730  3001               	movlw	1
  5271  0731  00AB               	movwf	??_SetDefaultTimers
  5272  0732  082B               	movf	??_SetDefaultTimers,w
  5273  0733  07AE               	addwf	SetDefaultTimers@l,f
  5274  0734                     l3348:	
  5275  0734  3002               	movlw	2
  5276  0735  022E               	subwf	SetDefaultTimers@l,w
  5277  0736  1C03               	skipc
  5278  0737  2F39               	goto	u2821
  5279  0738  2F3A               	goto	u2820
  5280  0739                     u2821:	
  5281  0739  2EA2               	goto	l3326
  5282  073A                     u2820:	
  5283  073A                     l3350:	
  5284                           
  5285                           ;./CustomLib/TrafficLight.h: 80:     (*(_semafori)[0]).lux_select = 0;
  5286  073A  082A               	movf	SetDefaultTimers@_semafori,w
  5287  073B  0084               	movwf	4
  5288  073C  1383               	bcf	3,7	;select IRP bank0
  5289  073D  0800               	movf	0,w
  5290  073E  3E0C               	addlw	12
  5291  073F  0084               	movwf	4
  5292  0740  0180               	clrf	0
  5293                           
  5294                           ;./CustomLib/TrafficLight.h: 81:     (*(_semafori)[0]).new_lux_select = 0;
  5295  0741  082A               	movf	SetDefaultTimers@_semafori,w
  5296  0742  0084               	movwf	4
  5297  0743  0800               	movf	0,w
  5298  0744  3E0D               	addlw	13
  5299  0745  0084               	movwf	4
  5300  0746  0180               	clrf	0
  5301                           
  5302                           ;./CustomLib/TrafficLight.h: 82:     (*(_semafori)[1]).lux_select = 1;
  5303  0747  0A2A               	incf	SetDefaultTimers@_semafori,w
  5304  0748  0084               	movwf	4
  5305  0749  0800               	movf	0,w
  5306  074A  3E0C               	addlw	12
  5307  074B  0084               	movwf	4
  5308  074C  0180               	clrf	0
  5309  074D  0A80               	incf	0,f
  5310                           
  5311                           ;./CustomLib/TrafficLight.h: 83:     (*(_semafori)[1]).new_lux_select = 1;
  5312  074E  0A2A               	incf	SetDefaultTimers@_semafori,w
  5313  074F  0084               	movwf	4
  5314  0750  0800               	movf	0,w
  5315  0751  3E0D               	addlw	13
  5316  0752  0084               	movwf	4
  5317  0753  0180               	clrf	0
  5318  0754  0A80               	incf	0,f
  5319  0755                     l149:	
  5320  0755  0008               	return
  5321  0756                     __end_of_SetDefaultTimers:	
  5322                           
  5323                           	psect	text18
  5324  050A                     __ptext18:	
  5325 ;; *************** function _GetDigits *****************
  5326 ;; Defined at:
  5327 ;;		line 98 in file "./CustomLib/TrafficLight.h"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  _digits         1    wreg     PTR PTR struct .
  5330 ;;		 -> DigitsArr(2), 
  5331 ;;  index           1   40[BANK0 ] unsigned char 
  5332 ;;  Time            2   41[BANK0 ] int 
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;  _digits         1   48[BANK0 ] PTR PTR struct .
  5335 ;;		 -> DigitsArr(2), 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5345 ;;      Params:         0       3       0       0       0
  5346 ;;      Locals:         0       3       0       0       0
  5347 ;;      Temps:          0       3       0       0       0
  5348 ;;      Totals:         0       9       0       0       0
  5349 ;;Total ram usage:        9 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    4
  5352 ;; This function calls:
  5353 ;;		___awdiv
  5354 ;;		___awmod
  5355 ;;		___bmul
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function _GetDigits
  5363  050A                     _GetDigits:	
  5364                           
  5365                           ;incstack = 0
  5366                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5367                           ;GetDigits@_digits stored from wreg
  5368  050A  1283               	bcf	3,5	;RP0=0, select bank0
  5369  050B  1303               	bcf	3,6	;RP1=0, select bank0
  5370  050C  00D0               	movwf	GetDigits@_digits
  5371  050D                     l3374:	
  5372                           
  5373                           ;./CustomLib/TrafficLight.h: 98: void GetDigits(_Digits _digits, unsigned char index, in
      +                          t Time);./CustomLib/TrafficLight.h: 99: {;./CustomLib/TrafficLight.h: 100:     while (Ti
      +                          me / 1000 > 0)
  5374  050D  2D23               	goto	l3378
  5375  050E                     l3376:	
  5376                           
  5377                           ;./CustomLib/TrafficLight.h: 101:     {;./CustomLib/TrafficLight.h: 102:         Time = 
      +                          Time / 10;
  5378  050E  300A               	movlw	10
  5379  050F  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0510  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0511  00BF               	movwf	___awdiv@divisor
  5382  0512  3000               	movlw	0
  5383  0513  00C0               	movwf	___awdiv@divisor+1
  5384  0514  084A               	movf	GetDigits@Time+1,w
  5385  0515  00C2               	movwf	___awdiv@dividend+1
  5386  0516  0849               	movf	GetDigits@Time,w
  5387  0517  00C1               	movwf	___awdiv@dividend
  5388  0518  120A  158A  260E  120A  118A  	fcall	___awdiv
  5389  051D  1283               	bcf	3,5	;RP0=0, select bank0
  5390  051E  1303               	bcf	3,6	;RP1=0, select bank0
  5391  051F  0840               	movf	?___awdiv+1,w
  5392  0520  00CA               	movwf	GetDigits@Time+1
  5393  0521  083F               	movf	?___awdiv,w
  5394  0522  00C9               	movwf	GetDigits@Time
  5395  0523                     l3378:	
  5396                           
  5397                           ;./CustomLib/TrafficLight.h: 100:     while (Time / 1000 > 0)
  5398  0523  30E8               	movlw	232
  5399  0524  00BF               	movwf	___awdiv@divisor
  5400  0525  3003               	movlw	3
  5401  0526  00C0               	movwf	___awdiv@divisor+1
  5402  0527  084A               	movf	GetDigits@Time+1,w
  5403  0528  00C2               	movwf	___awdiv@dividend+1
  5404  0529  0849               	movf	GetDigits@Time,w
  5405  052A  00C1               	movwf	___awdiv@dividend
  5406  052B  120A  158A  260E  120A  118A  	fcall	___awdiv
  5407  0530  1283               	bcf	3,5	;RP0=0, select bank0
  5408  0531  1303               	bcf	3,6	;RP1=0, select bank0
  5409  0532  0840               	movf	?___awdiv+1,w
  5410  0533  3A80               	xorlw	128
  5411  0534  00FF               	movwf	btemp+1
  5412  0535  3080               	movlw	128
  5413  0536  027F               	subwf	btemp+1,w
  5414  0537  1D03               	skipz
  5415  0538  2D3B               	goto	u2855
  5416  0539  3001               	movlw	1
  5417  053A  023F               	subwf	?___awdiv,w
  5418  053B                     u2855:	
  5419  053B  1803               	skipnc
  5420  053C  2D3E               	goto	u2851
  5421  053D  2D3F               	goto	u2850
  5422  053E                     u2851:	
  5423  053E  2D0E               	goto	l3376
  5424  053F                     u2850:	
  5425  053F                     l3380:	
  5426                           
  5427                           ;./CustomLib/TrafficLight.h: 105:     (*_digits)[index].centinaia = Time / 100;
  5428  053F  3064               	movlw	100
  5429  0540  1283               	bcf	3,5	;RP0=0, select bank0
  5430  0541  1303               	bcf	3,6	;RP1=0, select bank0
  5431  0542  00BF               	movwf	___awdiv@divisor
  5432  0543  3000               	movlw	0
  5433  0544  00C0               	movwf	___awdiv@divisor+1
  5434  0545  084A               	movf	GetDigits@Time+1,w
  5435  0546  00C2               	movwf	___awdiv@dividend+1
  5436  0547  0849               	movf	GetDigits@Time,w
  5437  0548  00C1               	movwf	___awdiv@dividend
  5438  0549  120A  158A  260E  120A  118A  	fcall	___awdiv
  5439  054E  1283               	bcf	3,5	;RP0=0, select bank0
  5440  054F  1303               	bcf	3,6	;RP1=0, select bank0
  5441  0550  083F               	movf	?___awdiv,w
  5442  0551  00CB               	movwf	??_GetDigits
  5443  0552  0850               	movf	GetDigits@_digits,w
  5444  0553  0084               	movwf	4
  5445  0554  3003               	movlw	3
  5446  0555  00CC               	movwf	??_GetDigits+1
  5447  0556  084C               	movf	??_GetDigits+1,w
  5448  0557  00A4               	movwf	___bmul@multiplicand
  5449  0558  0848               	movf	GetDigits@index,w
  5450  0559  120A  158A  2207  120A  118A  	fcall	___bmul
  5451  055E  1383               	bcf	3,7	;select IRP bank0
  5452  055F  0700               	addwf	0,w
  5453  0560  1283               	bcf	3,5	;RP0=0, select bank0
  5454  0561  1303               	bcf	3,6	;RP1=0, select bank0
  5455  0562  00CD               	movwf	??_GetDigits+2
  5456  0563  084D               	movf	??_GetDigits+2,w
  5457  0564  0084               	movwf	4
  5458  0565  084B               	movf	??_GetDigits,w
  5459  0566  0080               	movwf	0
  5460                           
  5461                           ;./CustomLib/TrafficLight.h: 106:     (*_digits)[index].decine = (Time % 100) / 10;
  5462  0567  300A               	movlw	10
  5463  0568  00BF               	movwf	___awdiv@divisor
  5464  0569  3000               	movlw	0
  5465  056A  00C0               	movwf	___awdiv@divisor+1
  5466  056B  084A               	movf	GetDigits@Time+1,w
  5467  056C  00BB               	movwf	___awmod@dividend+1
  5468  056D  0849               	movf	GetDigits@Time,w
  5469  056E  00BA               	movwf	___awmod@dividend
  5470  056F  3064               	movlw	100
  5471  0570  00B8               	movwf	___awmod@divisor
  5472  0571  3000               	movlw	0
  5473  0572  00B9               	movwf	___awmod@divisor+1
  5474  0573  120A  158A  248D  120A  118A  	fcall	___awmod
  5475  0578  1283               	bcf	3,5	;RP0=0, select bank0
  5476  0579  1303               	bcf	3,6	;RP1=0, select bank0
  5477  057A  0839               	movf	?___awmod+1,w
  5478  057B  00C2               	movwf	___awdiv@dividend+1
  5479  057C  0838               	movf	?___awmod,w
  5480  057D  00C1               	movwf	___awdiv@dividend
  5481  057E  120A  158A  260E  120A  118A  	fcall	___awdiv
  5482  0583  1283               	bcf	3,5	;RP0=0, select bank0
  5483  0584  1303               	bcf	3,6	;RP1=0, select bank0
  5484  0585  083F               	movf	?___awdiv,w
  5485  0586  00CB               	movwf	??_GetDigits
  5486  0587  0850               	movf	GetDigits@_digits,w
  5487  0588  0084               	movwf	4
  5488  0589  3003               	movlw	3
  5489  058A  00CC               	movwf	??_GetDigits+1
  5490  058B  084C               	movf	??_GetDigits+1,w
  5491  058C  00A4               	movwf	___bmul@multiplicand
  5492  058D  0848               	movf	GetDigits@index,w
  5493  058E  120A  158A  2207  120A  118A  	fcall	___bmul
  5494  0593  1383               	bcf	3,7	;select IRP bank0
  5495  0594  0700               	addwf	0,w
  5496  0595  1283               	bcf	3,5	;RP0=0, select bank0
  5497  0596  1303               	bcf	3,6	;RP1=0, select bank0
  5498  0597  00CD               	movwf	??_GetDigits+2
  5499  0598  0A4D               	incf	??_GetDigits+2,w
  5500  0599  0084               	movwf	4
  5501  059A  084B               	movf	??_GetDigits,w
  5502  059B  0080               	movwf	0
  5503  059C                     l3382:	
  5504                           
  5505                           ;./CustomLib/TrafficLight.h: 107:     (*_digits)[index].unita = (Time % 100) % 10;
  5506  059C  084A               	movf	GetDigits@Time+1,w
  5507  059D  00BB               	movwf	___awmod@dividend+1
  5508  059E  0849               	movf	GetDigits@Time,w
  5509  059F  00BA               	movwf	___awmod@dividend
  5510  05A0  3064               	movlw	100
  5511  05A1  00B8               	movwf	___awmod@divisor
  5512  05A2  3000               	movlw	0
  5513  05A3  00B9               	movwf	___awmod@divisor+1
  5514  05A4  120A  158A  248D  120A  118A  	fcall	___awmod
  5515  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  5516  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  5517  05AB  0839               	movf	?___awmod+1,w
  5518  05AC  00CF               	movwf	_GetDigits$1203+1
  5519  05AD  0838               	movf	?___awmod,w
  5520  05AE  00CE               	movwf	_GetDigits$1203
  5521  05AF                     l3384:	
  5522                           
  5523                           ;./CustomLib/TrafficLight.h: 107:     (*_digits)[index].unita = (Time % 100) % 10;
  5524  05AF  300A               	movlw	10
  5525  05B0  00B8               	movwf	___awmod@divisor
  5526  05B1  3000               	movlw	0
  5527  05B2  00B9               	movwf	___awmod@divisor+1
  5528  05B3  084F               	movf	_GetDigits$1203+1,w
  5529  05B4  00BB               	movwf	___awmod@dividend+1
  5530  05B5  084E               	movf	_GetDigits$1203,w
  5531  05B6  00BA               	movwf	___awmod@dividend
  5532  05B7  120A  158A  248D  120A  118A  	fcall	___awmod
  5533  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  5534  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  5535  05BE  0838               	movf	?___awmod,w
  5536  05BF  00CB               	movwf	??_GetDigits
  5537  05C0  0850               	movf	GetDigits@_digits,w
  5538  05C1  0084               	movwf	4
  5539  05C2  3003               	movlw	3
  5540  05C3  00CC               	movwf	??_GetDigits+1
  5541  05C4  084C               	movf	??_GetDigits+1,w
  5542  05C5  00A4               	movwf	___bmul@multiplicand
  5543  05C6  0848               	movf	GetDigits@index,w
  5544  05C7  120A  158A  2207  120A  118A  	fcall	___bmul
  5545  05CC  1383               	bcf	3,7	;select IRP bank0
  5546  05CD  0700               	addwf	0,w
  5547  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  5548  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  5549  05D0  00CD               	movwf	??_GetDigits+2
  5550  05D1  084D               	movf	??_GetDigits+2,w
  5551  05D2  3E02               	addlw	2
  5552  05D3  0084               	movwf	4
  5553  05D4  084B               	movf	??_GetDigits,w
  5554  05D5  0080               	movwf	0
  5555  05D6                     l160:	
  5556  05D6  0008               	return
  5557  05D7                     __end_of_GetDigits:	
  5558                           
  5559                           	psect	text19
  5560  0A07                     __ptext19:	
  5561 ;; *************** function ___bmul *****************
  5562 ;; Defined at:
  5563 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  multiplier      1    wreg     unsigned char 
  5566 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  multiplier      1    7[BANK0 ] unsigned char 
  5569 ;;  product         1    6[BANK0 ] unsigned char 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      unsigned char 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5579 ;;      Params:         0       1       0       0       0
  5580 ;;      Locals:         0       2       0       0       0
  5581 ;;      Temps:          0       1       0       0       0
  5582 ;;      Totals:         0       4       0       0       0
  5583 ;;Total ram usage:        4 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    3
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_SetReceivedTimes
  5590 ;;		_GetDigits
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function ___bmul
  5596  0A07                     ___bmul:	
  5597                           
  5598                           ;incstack = 0
  5599                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5600                           ;___bmul@multiplier stored from wreg
  5601  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  5602  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  5603  0A09  00A7               	movwf	___bmul@multiplier
  5604  0A0A                     l3158:	
  5605  0A0A  01A6               	clrf	___bmul@product
  5606  0A0B                     l3160:	
  5607  0A0B  1C27               	btfss	___bmul@multiplier,0
  5608  0A0C  2A0E               	goto	u2471
  5609  0A0D  2A0F               	goto	u2470
  5610  0A0E                     u2471:	
  5611  0A0E  2A13               	goto	l3164
  5612  0A0F                     u2470:	
  5613  0A0F                     l3162:	
  5614  0A0F  0824               	movf	___bmul@multiplicand,w
  5615  0A10  00A5               	movwf	??___bmul
  5616  0A11  0825               	movf	??___bmul,w
  5617  0A12  07A6               	addwf	___bmul@product,f
  5618  0A13                     l3164:	
  5619  0A13  1003               	clrc
  5620  0A14  0DA4               	rlf	___bmul@multiplicand,f
  5621  0A15                     l3166:	
  5622  0A15  1003               	clrc
  5623  0A16  0CA7               	rrf	___bmul@multiplier,f
  5624  0A17  0827               	movf	___bmul@multiplier,w
  5625  0A18  1D03               	btfss	3,2
  5626  0A19  2A1B               	goto	u2481
  5627  0A1A  2A1C               	goto	u2480
  5628  0A1B                     u2481:	
  5629  0A1B  2A0B               	goto	l3160
  5630  0A1C                     u2480:	
  5631  0A1C                     l3168:	
  5632  0A1C  0826               	movf	___bmul@product,w
  5633  0A1D                     l462:	
  5634  0A1D  0008               	return
  5635  0A1E                     __end_of___bmul:	
  5636                           
  5637                           	psect	text20
  5638  0C8D                     __ptext20:	
  5639 ;; *************** function ___awmod *****************
  5640 ;; Defined at:
  5641 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  divisor         2   24[BANK0 ] int 
  5644 ;;  dividend        2   26[BANK0 ] int 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  sign            1   30[BANK0 ] unsigned char 
  5647 ;;  counter         1   29[BANK0 ] unsigned char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  2   24[BANK0 ] int 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5657 ;;      Params:         0       4       0       0       0
  5658 ;;      Locals:         0       2       0       0       0
  5659 ;;      Temps:          0       1       0       0       0
  5660 ;;      Totals:         0       7       0       0       0
  5661 ;;Total ram usage:        7 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    3
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_GetDigits
  5668 ;;		_main
  5669 ;;		_ShowDigitsOnDisplay
  5670 ;;		_ChangeTrafficLight
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           
  5675                           ;psect for function ___awmod
  5676  0C8D                     ___awmod:	
  5677  0C8D                     l3256:	
  5678                           ;incstack = 0
  5679                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5680                           
  5681  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  5682  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  5683  0C8F  01BE               	clrf	___awmod@sign
  5684  0C90                     l3258:	
  5685  0C90  1FBB               	btfss	___awmod@dividend+1,7
  5686  0C91  2C93               	goto	u2691
  5687  0C92  2C94               	goto	u2690
  5688  0C93                     u2691:	
  5689  0C93  2C9B               	goto	l3264
  5690  0C94                     u2690:	
  5691  0C94                     l3260:	
  5692  0C94  09BA               	comf	___awmod@dividend,f
  5693  0C95  09BB               	comf	___awmod@dividend+1,f
  5694  0C96  0ABA               	incf	___awmod@dividend,f
  5695  0C97  1903               	skipnz
  5696  0C98  0ABB               	incf	___awmod@dividend+1,f
  5697  0C99                     l3262:	
  5698  0C99  01BE               	clrf	___awmod@sign
  5699  0C9A  0ABE               	incf	___awmod@sign,f
  5700  0C9B                     l3264:	
  5701  0C9B  1FB9               	btfss	___awmod@divisor+1,7
  5702  0C9C  2C9E               	goto	u2701
  5703  0C9D  2C9F               	goto	u2700
  5704  0C9E                     u2701:	
  5705  0C9E  2CA4               	goto	l3268
  5706  0C9F                     u2700:	
  5707  0C9F                     l3266:	
  5708  0C9F  09B8               	comf	___awmod@divisor,f
  5709  0CA0  09B9               	comf	___awmod@divisor+1,f
  5710  0CA1  0AB8               	incf	___awmod@divisor,f
  5711  0CA2  1903               	skipnz
  5712  0CA3  0AB9               	incf	___awmod@divisor+1,f
  5713  0CA4                     l3268:	
  5714  0CA4  0838               	movf	___awmod@divisor,w
  5715  0CA5  0439               	iorwf	___awmod@divisor+1,w
  5716  0CA6  1903               	btfsc	3,2
  5717  0CA7  2CA9               	goto	u2711
  5718  0CA8  2CAA               	goto	u2710
  5719  0CA9                     u2711:	
  5720  0CA9  2CD9               	goto	l3286
  5721  0CAA                     u2710:	
  5722  0CAA                     l3270:	
  5723  0CAA  01BD               	clrf	___awmod@counter
  5724  0CAB  0ABD               	incf	___awmod@counter,f
  5725  0CAC  2CB8               	goto	l3276
  5726  0CAD                     l3272:	
  5727  0CAD  3001               	movlw	1
  5728  0CAE                     u2725:	
  5729  0CAE  1003               	clrc
  5730  0CAF  0DB8               	rlf	___awmod@divisor,f
  5731  0CB0  0DB9               	rlf	___awmod@divisor+1,f
  5732  0CB1  3EFF               	addlw	-1
  5733  0CB2  1D03               	skipz
  5734  0CB3  2CAE               	goto	u2725
  5735  0CB4                     l3274:	
  5736  0CB4  3001               	movlw	1
  5737  0CB5  00BC               	movwf	??___awmod
  5738  0CB6  083C               	movf	??___awmod,w
  5739  0CB7  07BD               	addwf	___awmod@counter,f
  5740  0CB8                     l3276:	
  5741  0CB8  1FB9               	btfss	___awmod@divisor+1,7
  5742  0CB9  2CBB               	goto	u2731
  5743  0CBA  2CBC               	goto	u2730
  5744  0CBB                     u2731:	
  5745  0CBB  2CAD               	goto	l3272
  5746  0CBC                     u2730:	
  5747  0CBC                     l3278:	
  5748  0CBC  0839               	movf	___awmod@divisor+1,w
  5749  0CBD  023B               	subwf	___awmod@dividend+1,w
  5750  0CBE  1D03               	skipz
  5751  0CBF  2CC2               	goto	u2745
  5752  0CC0  0838               	movf	___awmod@divisor,w
  5753  0CC1  023A               	subwf	___awmod@dividend,w
  5754  0CC2                     u2745:	
  5755  0CC2  1C03               	skipc
  5756  0CC3  2CC5               	goto	u2741
  5757  0CC4  2CC6               	goto	u2740
  5758  0CC5                     u2741:	
  5759  0CC5  2CCC               	goto	l3282
  5760  0CC6                     u2740:	
  5761  0CC6                     l3280:	
  5762  0CC6  0838               	movf	___awmod@divisor,w
  5763  0CC7  02BA               	subwf	___awmod@dividend,f
  5764  0CC8  0839               	movf	___awmod@divisor+1,w
  5765  0CC9  1C03               	skipc
  5766  0CCA  03BB               	decf	___awmod@dividend+1,f
  5767  0CCB  02BB               	subwf	___awmod@dividend+1,f
  5768  0CCC                     l3282:	
  5769  0CCC  3001               	movlw	1
  5770  0CCD                     u2755:	
  5771  0CCD  1003               	clrc
  5772  0CCE  0CB9               	rrf	___awmod@divisor+1,f
  5773  0CCF  0CB8               	rrf	___awmod@divisor,f
  5774  0CD0  3EFF               	addlw	-1
  5775  0CD1  1D03               	skipz
  5776  0CD2  2CCD               	goto	u2755
  5777  0CD3                     l3284:	
  5778  0CD3  3001               	movlw	1
  5779  0CD4  02BD               	subwf	___awmod@counter,f
  5780  0CD5  1D03               	btfss	3,2
  5781  0CD6  2CD8               	goto	u2761
  5782  0CD7  2CD9               	goto	u2760
  5783  0CD8                     u2761:	
  5784  0CD8  2CBC               	goto	l3278
  5785  0CD9                     u2760:	
  5786  0CD9                     l3286:	
  5787  0CD9  083E               	movf	___awmod@sign,w
  5788  0CDA  1903               	btfsc	3,2
  5789  0CDB  2CDD               	goto	u2771
  5790  0CDC  2CDE               	goto	u2770
  5791  0CDD                     u2771:	
  5792  0CDD  2CE3               	goto	l3290
  5793  0CDE                     u2770:	
  5794  0CDE                     l3288:	
  5795  0CDE  09BA               	comf	___awmod@dividend,f
  5796  0CDF  09BB               	comf	___awmod@dividend+1,f
  5797  0CE0  0ABA               	incf	___awmod@dividend,f
  5798  0CE1  1903               	skipnz
  5799  0CE2  0ABB               	incf	___awmod@dividend+1,f
  5800  0CE3                     l3290:	
  5801  0CE3  083B               	movf	___awmod@dividend+1,w
  5802  0CE4  00B9               	movwf	?___awmod+1
  5803  0CE5  083A               	movf	___awmod@dividend,w
  5804  0CE6  00B8               	movwf	?___awmod
  5805  0CE7                     l602:	
  5806  0CE7  0008               	return
  5807  0CE8                     __end_of___awmod:	
  5808                           
  5809                           	psect	text21
  5810  0E0E                     __ptext21:	
  5811 ;; *************** function ___awdiv *****************
  5812 ;; Defined at:
  5813 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  divisor         2   31[BANK0 ] int 
  5816 ;;  dividend        2   33[BANK0 ] int 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  quotient        2   38[BANK0 ] int 
  5819 ;;  sign            1   37[BANK0 ] unsigned char 
  5820 ;;  counter         1   36[BANK0 ] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  2   31[BANK0 ] int 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5830 ;;      Params:         0       4       0       0       0
  5831 ;;      Locals:         0       4       0       0       0
  5832 ;;      Temps:          0       1       0       0       0
  5833 ;;      Totals:         0       9       0       0       0
  5834 ;;Total ram usage:        9 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    3
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_GetDigits
  5841 ;;		_map
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function ___awdiv
  5847  0E0E                     ___awdiv:	
  5848  0E0E                     l3212:	
  5849                           ;incstack = 0
  5850                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5851                           
  5852  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  5853  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  5854  0E10  01C5               	clrf	___awdiv@sign
  5855  0E11                     l3214:	
  5856  0E11  1FC0               	btfss	___awdiv@divisor+1,7
  5857  0E12  2E14               	goto	u2591
  5858  0E13  2E15               	goto	u2590
  5859  0E14                     u2591:	
  5860  0E14  2E1C               	goto	l3220
  5861  0E15                     u2590:	
  5862  0E15                     l3216:	
  5863  0E15  09BF               	comf	___awdiv@divisor,f
  5864  0E16  09C0               	comf	___awdiv@divisor+1,f
  5865  0E17  0ABF               	incf	___awdiv@divisor,f
  5866  0E18  1903               	skipnz
  5867  0E19  0AC0               	incf	___awdiv@divisor+1,f
  5868  0E1A                     l3218:	
  5869  0E1A  01C5               	clrf	___awdiv@sign
  5870  0E1B  0AC5               	incf	___awdiv@sign,f
  5871  0E1C                     l3220:	
  5872  0E1C  1FC2               	btfss	___awdiv@dividend+1,7
  5873  0E1D  2E1F               	goto	u2601
  5874  0E1E  2E20               	goto	u2600
  5875  0E1F                     u2601:	
  5876  0E1F  2E29               	goto	l3226
  5877  0E20                     u2600:	
  5878  0E20                     l3222:	
  5879  0E20  09C1               	comf	___awdiv@dividend,f
  5880  0E21  09C2               	comf	___awdiv@dividend+1,f
  5881  0E22  0AC1               	incf	___awdiv@dividend,f
  5882  0E23  1903               	skipnz
  5883  0E24  0AC2               	incf	___awdiv@dividend+1,f
  5884  0E25                     l3224:	
  5885  0E25  3001               	movlw	1
  5886  0E26  00C3               	movwf	??___awdiv
  5887  0E27  0843               	movf	??___awdiv,w
  5888  0E28  06C5               	xorwf	___awdiv@sign,f
  5889  0E29                     l3226:	
  5890  0E29  01C6               	clrf	___awdiv@quotient
  5891  0E2A  01C7               	clrf	___awdiv@quotient+1
  5892  0E2B                     l3228:	
  5893  0E2B  083F               	movf	___awdiv@divisor,w
  5894  0E2C  0440               	iorwf	___awdiv@divisor+1,w
  5895  0E2D  1903               	btfsc	3,2
  5896  0E2E  2E30               	goto	u2611
  5897  0E2F  2E31               	goto	u2610
  5898  0E30                     u2611:	
  5899  0E30  2E68               	goto	l3248
  5900  0E31                     u2610:	
  5901  0E31                     l3230:	
  5902  0E31  01C4               	clrf	___awdiv@counter
  5903  0E32  0AC4               	incf	___awdiv@counter,f
  5904  0E33  2E3F               	goto	l3236
  5905  0E34                     l3232:	
  5906  0E34  3001               	movlw	1
  5907  0E35                     u2625:	
  5908  0E35  1003               	clrc
  5909  0E36  0DBF               	rlf	___awdiv@divisor,f
  5910  0E37  0DC0               	rlf	___awdiv@divisor+1,f
  5911  0E38  3EFF               	addlw	-1
  5912  0E39  1D03               	skipz
  5913  0E3A  2E35               	goto	u2625
  5914  0E3B                     l3234:	
  5915  0E3B  3001               	movlw	1
  5916  0E3C  00C3               	movwf	??___awdiv
  5917  0E3D  0843               	movf	??___awdiv,w
  5918  0E3E  07C4               	addwf	___awdiv@counter,f
  5919  0E3F                     l3236:	
  5920  0E3F  1FC0               	btfss	___awdiv@divisor+1,7
  5921  0E40  2E42               	goto	u2631
  5922  0E41  2E43               	goto	u2630
  5923  0E42                     u2631:	
  5924  0E42  2E34               	goto	l3232
  5925  0E43                     u2630:	
  5926  0E43                     l3238:	
  5927  0E43  3001               	movlw	1
  5928  0E44                     u2645:	
  5929  0E44  1003               	clrc
  5930  0E45  0DC6               	rlf	___awdiv@quotient,f
  5931  0E46  0DC7               	rlf	___awdiv@quotient+1,f
  5932  0E47  3EFF               	addlw	-1
  5933  0E48  1D03               	skipz
  5934  0E49  2E44               	goto	u2645
  5935  0E4A  0840               	movf	___awdiv@divisor+1,w
  5936  0E4B  0242               	subwf	___awdiv@dividend+1,w
  5937  0E4C  1D03               	skipz
  5938  0E4D  2E50               	goto	u2655
  5939  0E4E  083F               	movf	___awdiv@divisor,w
  5940  0E4F  0241               	subwf	___awdiv@dividend,w
  5941  0E50                     u2655:	
  5942  0E50  1C03               	skipc
  5943  0E51  2E53               	goto	u2651
  5944  0E52  2E54               	goto	u2650
  5945  0E53                     u2651:	
  5946  0E53  2E5B               	goto	l3244
  5947  0E54                     u2650:	
  5948  0E54                     l3240:	
  5949  0E54  083F               	movf	___awdiv@divisor,w
  5950  0E55  02C1               	subwf	___awdiv@dividend,f
  5951  0E56  0840               	movf	___awdiv@divisor+1,w
  5952  0E57  1C03               	skipc
  5953  0E58  03C2               	decf	___awdiv@dividend+1,f
  5954  0E59  02C2               	subwf	___awdiv@dividend+1,f
  5955  0E5A                     l3242:	
  5956  0E5A  1446               	bsf	___awdiv@quotient,0
  5957  0E5B                     l3244:	
  5958  0E5B  3001               	movlw	1
  5959  0E5C                     u2665:	
  5960  0E5C  1003               	clrc
  5961  0E5D  0CC0               	rrf	___awdiv@divisor+1,f
  5962  0E5E  0CBF               	rrf	___awdiv@divisor,f
  5963  0E5F  3EFF               	addlw	-1
  5964  0E60  1D03               	skipz
  5965  0E61  2E5C               	goto	u2665
  5966  0E62                     l3246:	
  5967  0E62  3001               	movlw	1
  5968  0E63  02C4               	subwf	___awdiv@counter,f
  5969  0E64  1D03               	btfss	3,2
  5970  0E65  2E67               	goto	u2671
  5971  0E66  2E68               	goto	u2670
  5972  0E67                     u2671:	
  5973  0E67  2E43               	goto	l3238
  5974  0E68                     u2670:	
  5975  0E68                     l3248:	
  5976  0E68  0845               	movf	___awdiv@sign,w
  5977  0E69  1903               	btfsc	3,2
  5978  0E6A  2E6C               	goto	u2681
  5979  0E6B  2E6D               	goto	u2680
  5980  0E6C                     u2681:	
  5981  0E6C  2E72               	goto	l3252
  5982  0E6D                     u2680:	
  5983  0E6D                     l3250:	
  5984  0E6D  09C6               	comf	___awdiv@quotient,f
  5985  0E6E  09C7               	comf	___awdiv@quotient+1,f
  5986  0E6F  0AC6               	incf	___awdiv@quotient,f
  5987  0E70  1903               	skipnz
  5988  0E71  0AC7               	incf	___awdiv@quotient+1,f
  5989  0E72                     l3252:	
  5990  0E72  0847               	movf	___awdiv@quotient+1,w
  5991  0E73  00C0               	movwf	?___awdiv+1
  5992  0E74  0846               	movf	___awdiv@quotient,w
  5993  0E75  00BF               	movwf	?___awdiv
  5994  0E76                     l589:	
  5995  0E76  0008               	return
  5996  0E77                     __end_of___awdiv:	
  5997                           
  5998                           	psect	text22
  5999  0A1E                     __ptext22:	
  6000 ;; *************** function _ADC_Read *****************
  6001 ;; Defined at:
  6002 ;;		line 347 in file "main.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  canale          1    wreg     unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  canale          1    7[BANK0 ] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  2    4[BANK0 ] int 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6016 ;;      Params:         0       2       0       0       0
  6017 ;;      Locals:         0       1       0       0       0
  6018 ;;      Temps:          0       1       0       0       0
  6019 ;;      Totals:         0       4       0       0       0
  6020 ;;Total ram usage:        4 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    3
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_main
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           
  6031                           ;psect for function _ADC_Read
  6032  0A1E                     _ADC_Read:	
  6033                           
  6034                           ;incstack = 0
  6035                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  6036                           ;ADC_Read@canale stored from wreg
  6037  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  6038  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  6039  0A20  00A7               	movwf	ADC_Read@canale
  6040  0A21                     l3432:	
  6041                           
  6042                           ;main.c: 347: int ADC_Read(char canale);main.c: 348: {;main.c: 349:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  6043  0A21  0827               	movf	ADC_Read@canale,w
  6044  0A22  00A6               	movwf	??_ADC_Read
  6045  0A23  3002               	movlw	2
  6046  0A24                     u2895:	
  6047  0A24  1003               	clrc
  6048  0A25  0DA6               	rlf	??_ADC_Read,f
  6049  0A26  3EFF               	addlw	-1
  6050  0A27  1D03               	skipz
  6051  0A28  2A24               	goto	u2895
  6052  0A29  1003               	clrc
  6053  0A2A  0D26               	rlf	??_ADC_Read,w
  6054  0A2B  3801               	iorlw	1
  6055  0A2C  009F               	movwf	31	;volatile
  6056  0A2D                     l3434:	
  6057                           
  6058                           ;main.c: 350:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  6059  0A2D  3004               	movlw	4
  6060  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  6061  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  6062  0A30  00A6               	movwf	??_ADC_Read
  6063  0A31                     u3197:	
  6064  0A31  0BA6               	decfsz	??_ADC_Read,f
  6065  0A32  2A31               	goto	u3197
  6066  0A33  0000               	nop
  6067  0A34                     l3436:	
  6068                           
  6069                           ;main.c: 351:     GO_nDONE = 1;
  6070  0A34  1283               	bcf	3,5	;RP0=0, select bank0
  6071  0A35  1303               	bcf	3,6	;RP1=0, select bank0
  6072  0A36  151F               	bsf	31,2	;volatile
  6073  0A37                     l265:	
  6074                           ;main.c: 353:         ;
  6075                           
  6076                           
  6077                           ;main.c: 352:     while (GO_nDONE)
  6078  0A37  191F               	btfsc	31,2	;volatile
  6079  0A38  2A3A               	goto	u2901
  6080  0A39  2A3B               	goto	u2900
  6081  0A3A                     u2901:	
  6082  0A3A  2A37               	goto	l265
  6083  0A3B                     u2900:	
  6084  0A3B                     l3438:	
  6085                           
  6086                           ;main.c: 354:     return ADRESL + (ADRESH << 8);
  6087  0A3B  081E               	movf	30,w	;volatile
  6088  0A3C  00A5               	movwf	?_ADC_Read+1
  6089  0A3D  1683               	bsf	3,5	;RP0=1, select bank1
  6090  0A3E  1303               	bcf	3,6	;RP1=0, select bank1
  6091  0A3F  081E               	movf	30,w	;volatile
  6092  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  6093  0A41  1303               	bcf	3,6	;RP1=0, select bank0
  6094  0A42  00A4               	movwf	?_ADC_Read
  6095  0A43                     l268:	
  6096  0A43  0008               	return
  6097  0A44                     __end_of_ADC_Read:	
  6098                           
  6099                           	psect	text23
  6100  0D48                     __ptext23:	
  6101 ;; *************** function _ISR *****************
  6102 ;; Defined at:
  6103 ;;		line 525 in file "main.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;		None
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1    wreg      void 
  6110 ;; Registers used:
  6111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6117 ;;      Params:         0       0       0       0       0
  6118 ;;      Locals:         0       0       0       0       0
  6119 ;;      Temps:          0       4       0       0       0
  6120 ;;      Totals:         0       4       0       0       0
  6121 ;;Total ram usage:        4 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    2
  6124 ;; This function calls:
  6125 ;;		_UART_Read
  6126 ;;		_conteggioVeicoli
  6127 ;; This function is called by:
  6128 ;;		Interrupt level 1
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function _ISR
  6134  0D48                     _ISR:	
  6135  0D48                     i1l2762:	
  6136                           
  6137                           ;main.c: 528:     if (RCIF && readGateway.Bit == 0)
  6138  0D48  1E8C               	btfss	12,5	;volatile
  6139  0D49  2D4B               	goto	u219_21
  6140  0D4A  2D4C               	goto	u219_20
  6141  0D4B                     u219_21:	
  6142  0D4B  2D57               	goto	i1l2770
  6143  0D4C                     u219_20:	
  6144  0D4C                     i1l2764:	
  6145  0D4C  1860               	btfsc	_readGateway,0
  6146  0D4D  2D4F               	goto	u220_21
  6147  0D4E  2D50               	goto	u220_20
  6148  0D4F                     u220_21:	
  6149  0D4F  2D57               	goto	i1l2770
  6150  0D50                     u220_20:	
  6151  0D50                     i1l2766:	
  6152                           
  6153                           ;main.c: 529:     {;main.c: 530:         readGateway.Bit = 1;
  6154  0D50  1460               	bsf	_readGateway,0
  6155                           
  6156                           ;main.c: 531:         readGatewayDone.Bit = 0;
  6157  0D51  1061               	bcf	_readGatewayDone,0
  6158                           
  6159                           ;main.c: 532:         readGatewayDone.Timeout = 0;
  6160  0D52  10E1               	bcf	_readGatewayDone,1
  6161  0D53                     i1l2768:	
  6162                           
  6163                           ;main.c: 533:         dataFromGatewayIndex = 0;
  6164  0D53  01DB               	clrf	_dataFromGatewayIndex
  6165                           
  6166                           ;main.c: 534:         timerReadFromGateway = 0;
  6167  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  6168  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  6169  0D56  01AD               	clrf	_timerReadFromGateway^(0+128)
  6170  0D57                     i1l2770:	
  6171                           
  6172                           ;main.c: 536:     if (RCIF && readGateway.Bit == 1)
  6173  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  6174  0D58  1E8C               	btfss	12,5	;volatile
  6175  0D59  2D5B               	goto	u221_21
  6176  0D5A  2D5C               	goto	u221_20
  6177  0D5B                     u221_21:	
  6178  0D5B  2D75               	goto	i1l2780
  6179  0D5C                     u221_20:	
  6180  0D5C                     i1l2772:	
  6181  0D5C  1C60               	btfss	_readGateway,0
  6182  0D5D  2D5F               	goto	u222_21
  6183  0D5E  2D60               	goto	u222_20
  6184  0D5F                     u222_21:	
  6185  0D5F  2D75               	goto	i1l2780
  6186  0D60                     u222_20:	
  6187  0D60                     i1l2774:	
  6188                           
  6189                           ;main.c: 537:     {;main.c: 538:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  6190  0D60  120A  158A  21EB  120A  158A  	fcall	_UART_Read
  6191  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  6192  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  6193  0D67  00A0               	movwf	??_ISR
  6194  0D68  085B               	movf	_dataFromGatewayIndex,w
  6195  0D69  3EAE               	addlw	(low (_dataFromGateway| 0))& (0+255)
  6196  0D6A  0084               	movwf	4
  6197  0D6B  0820               	movf	??_ISR,w
  6198  0D6C  1383               	bcf	3,7	;select IRP bank1
  6199  0D6D  0080               	movwf	0
  6200  0D6E                     i1l2776:	
  6201                           
  6202                           ;main.c: 539:         dataFromGatewayIndex++;
  6203  0D6E  3001               	movlw	1
  6204  0D6F  00A0               	movwf	??_ISR
  6205  0D70  0820               	movf	??_ISR,w
  6206  0D71  07DB               	addwf	_dataFromGatewayIndex,f
  6207  0D72                     i1l2778:	
  6208                           
  6209                           ;main.c: 540:         timerReadFromGateway = 0;
  6210  0D72  1683               	bsf	3,5	;RP0=1, select bank1
  6211  0D73  1303               	bcf	3,6	;RP1=0, select bank1
  6212  0D74  01AD               	clrf	_timerReadFromGateway^(0+128)
  6213  0D75                     i1l2780:	
  6214                           
  6215                           ;main.c: 545:     if (TMR0IF)
  6216  0D75  1D0B               	btfss	11,2	;volatile
  6217  0D76  2D78               	goto	u223_21
  6218  0D77  2D79               	goto	u223_20
  6219  0D78                     u223_21:	
  6220  0D78  2D83               	goto	i1l2788
  6221  0D79                     u223_20:	
  6222  0D79                     i1l2782:	
  6223                           
  6224                           ;main.c: 546:     {;main.c: 547:         TMR0IF = 0;
  6225  0D79  110B               	bcf	11,2	;volatile
  6226  0D7A                     i1l2784:	
  6227                           
  6228                           ;main.c: 548:         conteggioVeicoli();
  6229  0D7A  120A  158A  25A9  120A  158A  	fcall	_conteggioVeicoli
  6230  0D7F                     i1l2786:	
  6231                           
  6232                           ;main.c: 549:         TMR0 = 6;
  6233  0D7F  3006               	movlw	6
  6234  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  6235  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  6236  0D82  0081               	movwf	1	;volatile
  6237  0D83                     i1l2788:	
  6238                           
  6239                           ;main.c: 552:     if (TMR1IF)
  6240  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  6241  0D84  1C0C               	btfss	12,0	;volatile
  6242  0D85  2D87               	goto	u224_21
  6243  0D86  2D88               	goto	u224_20
  6244  0D87                     u224_21:	
  6245  0D87  2DA0               	goto	i1l350
  6246  0D88                     u224_20:	
  6247  0D88                     i1l2790:	
  6248                           
  6249                           ;main.c: 553:     {;main.c: 554:         TMR1IF = 0;
  6250  0D88  100C               	bcf	12,0	;volatile
  6251  0D89                     i1l2792:	
  6252                           
  6253                           ;main.c: 555:         count_lux++;
  6254  0D89  3001               	movlw	1
  6255  0D8A  00A0               	movwf	??_ISR
  6256  0D8B  0820               	movf	??_ISR,w
  6257  0D8C  07DC               	addwf	_count_lux,f
  6258  0D8D                     i1l2794:	
  6259                           
  6260                           ;main.c: 557:         if (count_lux >= 20)
  6261  0D8D  3014               	movlw	20
  6262  0D8E  025C               	subwf	_count_lux,w
  6263  0D8F  1C03               	skipc
  6264  0D90  2D92               	goto	u225_21
  6265  0D91  2D93               	goto	u225_20
  6266  0D92                     u225_21:	
  6267  0D92  2D9B               	goto	i1l2802
  6268  0D93                     u225_20:	
  6269  0D93                     i1l2796:	
  6270                           
  6271                           ;main.c: 558:         {;main.c: 559:             secondPassed.Bit = 1;
  6272  0D93  145F               	bsf	_secondPassed,0
  6273  0D94                     i1l2798:	
  6274                           
  6275                           ;main.c: 560:             count_lux = 0;
  6276  0D94  01DC               	clrf	_count_lux
  6277  0D95                     i1l2800:	
  6278                           
  6279                           ;main.c: 561:             timerReadFromGateway++;
  6280  0D95  3001               	movlw	1
  6281  0D96  00A0               	movwf	??_ISR
  6282  0D97  0820               	movf	??_ISR,w
  6283  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  6284  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  6285  0D9A  07AD               	addwf	_timerReadFromGateway^(0+128),f
  6286  0D9B                     i1l2802:	
  6287                           
  6288                           ;main.c: 564:         TMR1H = 60;
  6289  0D9B  303C               	movlw	60
  6290  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  6291  0D9D  008F               	movwf	15	;volatile
  6292  0D9E                     i1l2804:	
  6293                           
  6294                           ;main.c: 565:         TMR1L = 176;
  6295  0D9E  30B0               	movlw	176
  6296  0D9F  008E               	movwf	14	;volatile
  6297  0DA0                     i1l350:	
  6298  0DA0  0823               	movf	??_ISR+3,w
  6299  0DA1  008A               	movwf	10
  6300  0DA2  0822               	movf	??_ISR+2,w
  6301  0DA3  0084               	movwf	4
  6302  0DA4  0E21               	swapf	(??_ISR+1)^0,w
  6303  0DA5  0083               	movwf	3
  6304  0DA6  0EFE               	swapf	btemp,f
  6305  0DA7  0E7E               	swapf	btemp,w
  6306  0DA8  0009               	retfie
  6307  0DA9                     __end_of_ISR:	
  6308                           
  6309                           	psect	intentry
  6310  0004                     __pintentry:	
  6311                           ;incstack = 0
  6312                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6313                           
  6314  0004                     interrupt_function:	
  6315  007E                     saved_w	set	btemp
  6316  0004  00FE               	movwf	btemp
  6317  0005  0E03               	swapf	3,w
  6318  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6319  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6320  0008  00A1               	movwf	??_ISR+1
  6321  0009  0804               	movf	4,w
  6322  000A  00A2               	movwf	??_ISR+2
  6323  000B  080A               	movf	10,w
  6324  000C  00A3               	movwf	??_ISR+3
  6325  000D  120A  158A  2D48   	ljmp	_ISR
  6326                           
  6327                           	psect	text24
  6328  0DA9                     __ptext24:	
  6329 ;; *************** function _conteggioVeicoli *****************
  6330 ;; Defined at:
  6331 ;;		line 405 in file "main.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;		None
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;  i               1   13[COMMON] unsigned char 
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  1    wreg      void 
  6338 ;; Registers used:
  6339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6345 ;;      Params:         0       0       0       0       0
  6346 ;;      Locals:         1       0       0       0       0
  6347 ;;      Temps:          4       0       0       0       0
  6348 ;;      Totals:         5       0       0       0       0
  6349 ;;Total ram usage:        5 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; Hardware stack levels required when called:    1
  6352 ;; This function calls:
  6353 ;;		_Conteggio
  6354 ;; This function is called by:
  6355 ;;		_ISR
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           
  6360                           ;psect for function _conteggioVeicoli
  6361  0DA9                     _conteggioVeicoli:	
  6362  0DA9                     i1l2524:	
  6363                           ;incstack = 0
  6364                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6365                           
  6366                           
  6367                           ;main.c: 407:     RoadsSensors[0] = PORTBbits.RB3;
  6368  0DA9  3000               	movlw	0
  6369  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  6370  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  6371  0DAC  1986               	btfsc	6,3	;volatile
  6372  0DAD  3001               	movlw	1
  6373  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  6374  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  6375  0DB0  00A0               	movwf	_RoadsSensors^(0+128)
  6376                           
  6377                           ;main.c: 408:     RoadsSensors[1] = PORTBbits.RB4;
  6378  0DB1  3000               	movlw	0
  6379  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  6380  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  6381  0DB4  1A06               	btfsc	6,4	;volatile
  6382  0DB5  3001               	movlw	1
  6383  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  6384  0DB7  1303               	bcf	3,6	;RP1=0, select bank1
  6385  0DB8  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  6386                           
  6387                           ;main.c: 409:     RoadsSensors[2] = PORTBbits.RB5;
  6388  0DB9  3000               	movlw	0
  6389  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  6390  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  6391  0DBC  1A86               	btfsc	6,5	;volatile
  6392  0DBD  3001               	movlw	1
  6393  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  6394  0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  6395  0DC0  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  6396                           
  6397                           ;main.c: 410:     RoadsSensors[3] = PORTAbits.RA5;
  6398  0DC1  3000               	movlw	0
  6399  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  6400  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  6401  0DC4  1A85               	btfsc	5,5	;volatile
  6402  0DC5  3001               	movlw	1
  6403  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  6404  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  6405  0DC8  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  6406  0DC9                     i1l2526:	
  6407                           
  6408                           ;main.c: 412:     for (unsigned char i = 0; i < 4; i++)
  6409  0DC9  01FD               	clrf	conteggioVeicoli@i
  6410  0DCA                     i1l2530:	
  6411                           
  6412                           ;main.c: 413:     {;main.c: 414:         if (!RoadsSensors[i])
  6413  0DCA  087D               	movf	conteggioVeicoli@i,w
  6414  0DCB  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6415  0DCC  0084               	movwf	4
  6416  0DCD  1383               	bcf	3,7	;select IRP bank1
  6417  0DCE  0800               	movf	0,w
  6418  0DCF  1D03               	btfss	3,2
  6419  0DD0  2DD2               	goto	u193_21
  6420  0DD1  2DD3               	goto	u193_20
  6421  0DD2                     u193_21:	
  6422  0DD2  2DDC               	goto	i1l2534
  6423  0DD3                     u193_20:	
  6424  0DD3                     i1l2532:	
  6425                           
  6426                           ;main.c: 415:         {;main.c: 416:             count++;
  6427  0DD3  3001               	movlw	1
  6428  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  6429  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  6430  0DD6  07A8               	addwf	_count^(0+128),f
  6431  0DD7  1803               	skipnc
  6432  0DD8  0AA9               	incf	(_count+1)^(0+128),f
  6433  0DD9  3000               	movlw	0
  6434  0DDA  07A9               	addwf	(_count+1)^(0+128),f
  6435                           
  6436                           ;main.c: 417:         }
  6437  0DDB  2E03               	goto	i1l2540
  6438  0DDC                     i1l2534:	
  6439  0DDC  087D               	movf	conteggioVeicoli@i,w
  6440  0DDD  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6441  0DDE  0084               	movwf	4
  6442  0DDF  0800               	movf	0,w
  6443  0DE0  1903               	btfsc	3,2
  6444  0DE1  2DE3               	goto	u194_21
  6445  0DE2  2DE4               	goto	u194_20
  6446  0DE3                     u194_21:	
  6447  0DE3  2E03               	goto	i1l2540
  6448  0DE4                     u194_20:	
  6449  0DE4                     i1l2536:	
  6450                           
  6451                           ;main.c: 419:         {;main.c: 420:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  6452  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  6453  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  6454  0DE6  0829               	movf	(_count+1)^(0+128),w
  6455  0DE7  00F1               	movwf	Conteggio@_count+1
  6456  0DE8  0828               	movf	_count^(0+128),w
  6457  0DE9  00F0               	movwf	Conteggio@_count
  6458  0DEA  30E1               	movlw	(low (_motorcycle| 0))& (0+255)
  6459  0DEB  00F9               	movwf	??_conteggioVeicoli
  6460  0DEC  0879               	movf	??_conteggioVeicoli,w
  6461  0DED  00F2               	movwf	Conteggio@_motorcycle
  6462  0DEE  30DD               	movlw	(low (_car| 0))& (0+255)
  6463  0DEF  00FA               	movwf	??_conteggioVeicoli+1
  6464  0DF0  087A               	movf	??_conteggioVeicoli+1,w
  6465  0DF1  00F3               	movwf	Conteggio@_car
  6466  0DF2  30D9               	movlw	(low (_truck| 0))& (0+255)
  6467  0DF3  00FB               	movwf	??_conteggioVeicoli+2
  6468  0DF4  087B               	movf	??_conteggioVeicoli+2,w
  6469  0DF5  00F4               	movwf	Conteggio@_truck
  6470  0DF6  087D               	movf	conteggioVeicoli@i,w
  6471  0DF7  00FC               	movwf	??_conteggioVeicoli+3
  6472  0DF8  087C               	movf	??_conteggioVeicoli+3,w
  6473  0DF9  00F5               	movwf	Conteggio@index
  6474  0DFA  120A  158A  2399  120A  158A  	fcall	_Conteggio
  6475  0DFF                     i1l2538:	
  6476                           
  6477                           ;main.c: 421:             count = 0;
  6478  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  6479  0E00  1303               	bcf	3,6	;RP1=0, select bank1
  6480  0E01  01A8               	clrf	_count^(0+128)
  6481  0E02  01A9               	clrf	(_count+1)^(0+128)
  6482  0E03                     i1l2540:	
  6483                           
  6484                           ;main.c: 423:     }
  6485  0E03  3001               	movlw	1
  6486  0E04  00F9               	movwf	??_conteggioVeicoli
  6487  0E05  0879               	movf	??_conteggioVeicoli,w
  6488  0E06  07FD               	addwf	conteggioVeicoli@i,f
  6489  0E07                     i1l2542:	
  6490  0E07  3004               	movlw	4
  6491  0E08  027D               	subwf	conteggioVeicoli@i,w
  6492  0E09  1C03               	skipc
  6493  0E0A  2E0C               	goto	u195_21
  6494  0E0B  2E0D               	goto	u195_20
  6495  0E0C                     u195_21:	
  6496  0E0C  2DCA               	goto	i1l2530
  6497  0E0D                     u195_20:	
  6498  0E0D                     i1l302:	
  6499  0E0D  0008               	return
  6500  0E0E                     __end_of_conteggioVeicoli:	
  6501                           
  6502                           	psect	text25
  6503  0B99                     __ptext25:	
  6504 ;; *************** function _Conteggio *****************
  6505 ;; Defined at:
  6506 ;;		line 111 in file "./CustomLib/TrafficLight.h"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  _count          2    0[COMMON] unsigned int 
  6509 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  6510 ;;		 -> motorcycle(4), 
  6511 ;;  _car            1    3[COMMON] PTR unsigned char 
  6512 ;;		 -> car(4), 
  6513 ;;  _truck          1    4[COMMON] PTR unsigned char 
  6514 ;;		 -> truck(4), 
  6515 ;;  index           1    5[COMMON] unsigned char 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      void 
  6520 ;; Registers used:
  6521 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6527 ;;      Params:         6       0       0       0       0
  6528 ;;      Locals:         0       0       0       0       0
  6529 ;;      Temps:          3       0       0       0       0
  6530 ;;      Totals:         9       0       0       0       0
  6531 ;;Total ram usage:        9 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_conteggioVeicoli
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           
  6541                           ;psect for function _Conteggio
  6542  0B99                     _Conteggio:	
  6543  0B99                     i1l2108:	
  6544                           ;incstack = 0
  6545                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  6546                           
  6547                           
  6548                           ;./CustomLib/TrafficLight.h: 111: void Conteggio(unsigned int _count, unsigned char _mot
      +                          orcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custo
      +                          mLib/TrafficLight.h: 112: {;./CustomLib/TrafficLight.h: 113:     if (_count >= 500)
  6549  0B99  3001               	movlw	1
  6550  0B9A  0271               	subwf	Conteggio@_count+1,w
  6551  0B9B  30F4               	movlw	244
  6552  0B9C  1903               	skipnz
  6553  0B9D  0270               	subwf	Conteggio@_count,w
  6554  0B9E  1C03               	skipc
  6555  0B9F  2BA1               	goto	u131_21
  6556  0BA0  2BA2               	goto	u131_20
  6557  0BA1                     u131_21:	
  6558  0BA1  2BB2               	goto	i1l2112
  6559  0BA2                     u131_20:	
  6560  0BA2                     i1l2110:	
  6561                           
  6562                           ;./CustomLib/TrafficLight.h: 114:     {;./CustomLib/TrafficLight.h: 115:         _motorc
      +                          ycle[index] = _motorcycle[index] + 1;
  6563  0BA2  0875               	movf	Conteggio@index,w
  6564  0BA3  0772               	addwf	Conteggio@_motorcycle,w
  6565  0BA4  00F6               	movwf	??_Conteggio
  6566  0BA5  0876               	movf	??_Conteggio,w
  6567  0BA6  0084               	movwf	4
  6568  0BA7  1383               	bcf	3,7	;select IRP bank0
  6569  0BA8  0800               	movf	0,w
  6570  0BA9  3E01               	addlw	1
  6571  0BAA  00F7               	movwf	??_Conteggio+1
  6572  0BAB  0875               	movf	Conteggio@index,w
  6573  0BAC  0772               	addwf	Conteggio@_motorcycle,w
  6574  0BAD  00F8               	movwf	??_Conteggio+2
  6575  0BAE  0878               	movf	??_Conteggio+2,w
  6576  0BAF  0084               	movwf	4
  6577  0BB0  0877               	movf	??_Conteggio+1,w
  6578  0BB1  0080               	movwf	0
  6579  0BB2                     i1l2112:	
  6580                           
  6581                           ;./CustomLib/TrafficLight.h: 117:     if (_count >= 1500)
  6582  0BB2  3005               	movlw	5
  6583  0BB3  0271               	subwf	Conteggio@_count+1,w
  6584  0BB4  30DC               	movlw	220
  6585  0BB5  1903               	skipnz
  6586  0BB6  0270               	subwf	Conteggio@_count,w
  6587  0BB7  1C03               	skipc
  6588  0BB8  2BBA               	goto	u132_21
  6589  0BB9  2BBB               	goto	u132_20
  6590  0BBA                     u132_21:	
  6591  0BBA  2BCB               	goto	i1l2116
  6592  0BBB                     u132_20:	
  6593  0BBB                     i1l2114:	
  6594                           
  6595                           ;./CustomLib/TrafficLight.h: 118:     {;./CustomLib/TrafficLight.h: 119:         _car[in
      +                          dex] = _car[index] + 1;
  6596  0BBB  0875               	movf	Conteggio@index,w
  6597  0BBC  0773               	addwf	Conteggio@_car,w
  6598  0BBD  00F6               	movwf	??_Conteggio
  6599  0BBE  0876               	movf	??_Conteggio,w
  6600  0BBF  0084               	movwf	4
  6601  0BC0  1383               	bcf	3,7	;select IRP bank0
  6602  0BC1  0800               	movf	0,w
  6603  0BC2  3E01               	addlw	1
  6604  0BC3  00F7               	movwf	??_Conteggio+1
  6605  0BC4  0875               	movf	Conteggio@index,w
  6606  0BC5  0773               	addwf	Conteggio@_car,w
  6607  0BC6  00F8               	movwf	??_Conteggio+2
  6608  0BC7  0878               	movf	??_Conteggio+2,w
  6609  0BC8  0084               	movwf	4
  6610  0BC9  0877               	movf	??_Conteggio+1,w
  6611  0BCA  0080               	movwf	0
  6612  0BCB                     i1l2116:	
  6613                           
  6614                           ;./CustomLib/TrafficLight.h: 121:     if (_count >= 3000)
  6615  0BCB  300B               	movlw	11
  6616  0BCC  0271               	subwf	Conteggio@_count+1,w
  6617  0BCD  30B8               	movlw	184
  6618  0BCE  1903               	skipnz
  6619  0BCF  0270               	subwf	Conteggio@_count,w
  6620  0BD0  1C03               	skipc
  6621  0BD1  2BD3               	goto	u133_21
  6622  0BD2  2BD4               	goto	u133_20
  6623  0BD3                     u133_21:	
  6624  0BD3  2BE4               	goto	i1l166
  6625  0BD4                     u133_20:	
  6626  0BD4                     i1l2118:	
  6627                           
  6628                           ;./CustomLib/TrafficLight.h: 122:     {;./CustomLib/TrafficLight.h: 123:         _truck[
      +                          index] = _truck[index] + 1;
  6629  0BD4  0875               	movf	Conteggio@index,w
  6630  0BD5  0774               	addwf	Conteggio@_truck,w
  6631  0BD6  00F6               	movwf	??_Conteggio
  6632  0BD7  0876               	movf	??_Conteggio,w
  6633  0BD8  0084               	movwf	4
  6634  0BD9  1383               	bcf	3,7	;select IRP bank0
  6635  0BDA  0800               	movf	0,w
  6636  0BDB  3E01               	addlw	1
  6637  0BDC  00F7               	movwf	??_Conteggio+1
  6638  0BDD  0875               	movf	Conteggio@index,w
  6639  0BDE  0774               	addwf	Conteggio@_truck,w
  6640  0BDF  00F8               	movwf	??_Conteggio+2
  6641  0BE0  0878               	movf	??_Conteggio+2,w
  6642  0BE1  0084               	movwf	4
  6643  0BE2  0877               	movf	??_Conteggio+1,w
  6644  0BE3  0080               	movwf	0
  6645  0BE4                     i1l166:	
  6646  0BE4  0008               	return
  6647  0BE5                     __end_of_Conteggio:	
  6648                           
  6649                           	psect	text26
  6650  09EB                     __ptext26:	
  6651 ;; *************** function _UART_Read *****************
  6652 ;; Defined at:
  6653 ;;		line 386 in file "main.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      unsigned char 
  6660 ;; Registers used:
  6661 ;;		wreg
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6667 ;;      Params:         0       0       0       0       0
  6668 ;;      Locals:         0       0       0       0       0
  6669 ;;      Temps:          0       0       0       0       0
  6670 ;;      Totals:         0       0       0       0       0
  6671 ;;Total ram usage:        0 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_ISR
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           
  6681                           ;psect for function _UART_Read
  6682  09EB                     _UART_Read:	
  6683  09EB                     i1l2518:	
  6684                           ;incstack = 0
  6685                           ; Regs used in _UART_Read: [wreg]
  6686                           
  6687  09EB                     i1l286:	
  6688                           ;main.c: 389:         ;
  6689                           
  6690                           
  6691                           ;main.c: 388:     while (!RCIF)
  6692  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  6693  09EC  1303               	bcf	3,6	;RP1=0, select bank0
  6694  09ED  1E8C               	btfss	12,5	;volatile
  6695  09EE  29F0               	goto	u192_21
  6696  09EF  29F1               	goto	u192_20
  6697  09F0                     u192_21:	
  6698  09F0  29EB               	goto	i1l286
  6699  09F1                     u192_20:	
  6700  09F1                     i1l288:	
  6701                           
  6702                           ;main.c: 390:     RCIF = 0;
  6703  09F1  128C               	bcf	12,5	;volatile
  6704  09F2                     i1l2520:	
  6705                           
  6706                           ;main.c: 391:     return RCREG;
  6707  09F2  081A               	movf	26,w	;volatile
  6708  09F3                     i1l289:	
  6709  09F3  0008               	return
  6710  09F4                     __end_of_UART_Read:	
  6711  007E                     btemp	set	126	;btemp
  6712  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        8
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      70
    BANK1            80      0      79
    BANK3            96     10      10
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    DigitsArr	PTR struct .[2] size(1) Largest target is 3
		 -> digits1(BANK1[3]), digits0(BANK1[3]), 

    Semafori	PTR struct .[2] size(1) Largest target is 14
		 -> s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK1[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK1[4]), 

    GetDigits@_digits	PTR PTR struct . size(1) Largest target is 2
		 -> DigitsArr(BANK0[2]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 2
		 -> Semafori(BANK0[2]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_map
    _sendByte->_BuildByte
    _rand->___lmul
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awmod->_rand
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   26321
                                             50 BANK0      9     9      0
                                              0 BANK3     10    10      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                            ___awmod
                           _init_ADC
                       _luciSemaforo
                                _map
                               _rand
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     316
                                             17 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    5528
                                             40 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2616
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     183
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         13    13      0     668
                                              4 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  3     3      0    3734
                                             31 BANK0      3     3      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           7     3      4    1514
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    10     9      1    1618
                                             12 BANK0     10     9      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    12     5      7    1395
                                              4 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            9     6      3    4533
                                             40 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     721
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1873
                                             24 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                             31 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
         _rand (ARG)
           ___lmul
       ___wmul (ARG)
     ___awmod
       _rand (ARG)
         ___lmul
     ___bmul
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
       _rand (ARG)
         ___lmul
   _UART_Init
     ___aldiv
   _UpdateTimes
   ___awmod
     _rand (ARG)
       ___lmul
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
         _rand (ARG)
           ___lmul
       ___wmul (ARG)
     ___wmul (ARG)
   _rand
     ___lmul
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      A       A       9       10.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3B      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AD      12        0.0%
ABS                  0      0      AD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 16 11:01:56 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                      ___awdiv@sign 0045                                _s0 00CB  
                              _s1 00BD                                fsr 0004               ___wmul@multiplicand 0026  
                  _GetDigits$1203 004E                 luciSemaforo@index 0027                       __CFG_LVP$ON 0000  
                             l111 0676                               l105 0625                               l114 069E  
                             l310 0BED                               l127 0EE1                               l311 0BF1  
                             l223 03BF                               l160 05D6                               l137 0B50  
                             l225 00A6                               l154 0D47                               l315 0C08  
                             l340 0FFF                               l308 0BE9                               l252 0489  
                             l149 0755                               l501 076A                               l317 0C0C  
                             l326 0C8C                               l262 0A06                               l318 0C10  
                             l511 07F2                               l271 0B0A                               l319 0C37  
                             l255 04FD                               l239 02B1                               l265 0A37  
                             l169 0AD0                               l602 0CE7                               l450 0B98  
                             l274 07F6                               l268 0A43                               l436 0A52  
                             l276 07FA                               l277 07FD                               l462 0A1D  
                             l438 0A6A                               l294 0A9B                               l589 0E76  
                             l886 0F52                      __CFG_CPD$OFF 0000                               _ISR 0D48  
                             _car 00DD                               _map 0A9C                               fsr0 0004  
                             indf 0000                      ___awmod@sign 003E                      __CFG_FOSC$HS 0000  
                            ?_ISR 0070             ??_ShowDigitsOnDisplay 003F                              l3100 0B36  
                            l3102 0B44                              l3030 05F6                              l3110 07FB  
                            l3104 0B4C                              l3112 0C3B                              l3200 07CB  
                            l3040 05FA                              l3032 05F7                              l3114 0C3C  
                            l3122 0C7C                              l3202 07D4                              l3130 0A44  
                            l3050 0618                              l3034 05F8                              l3026 05DA  
                            l3220 0E1C                              l3212 0E0E                              l3116 0C5A  
                            l3204 07DA                              l3300 0E7B                              l3140 0A66  
                            l3132 0A48                              l3060 063A                              l3052 062B  
                            l3028 05E9                              l3108 07F6                              l3230 0E31  
                            l3222 0E20                              l3214 0E11                              l3118 0C5D  
                            l3206 07DF                              l3310 0ECD                              l3134 0A4C  
                            l3150 0B76                              l3062 0647                              l3054 0633  
                            l3046 05FE                              l3240 0E54                              l3232 0E34  
                            l3224 0E25                              l3216 0E15                              l3160 0A0B  
                            l3320 069F                              l3208 07EA                              l3400 0AD9  
                            l3312 0ED1                              l3136 0A59                              l3152 0B7F  
                            l3144 0B51                              l3080 067C                              l3048 0612  
                            l3250 0E6D                              l3242 0E5A                              l3234 0E3B  
                            l3226 0E29                              l3218 0E1A                              l3162 0A0F  
                            l3402 0B07                              l3306 0E7C                              l3138 0A60  
                            l3154 0B90                              l3146 0B5B                              l3410 0F1F  
                            l3090 069D                              l3082 0689                              l3074 064F  
                            l3058 0634                              l3252 0E72                              l3244 0E5B  
                            l3236 0E3F                              l3228 0E2B                              l3260 0C94  
                            l3164 0A13                              l3332 06A4                              l3340 0713  
                            l3500 0FE9                              l3180 0779                              l3172 0756  
                            l3404 0B08                              l3316 0ED7                              l3308 0EAA  
                            l3148 0B5F                              l3412 0F2D                              l3076 0663  
                            l3068 064B                              l3246 0E62                              l3238 0E43  
                            l3270 0CAA                              l3262 0C99                              l3166 0A15  
                            l3158 0A0A                              l3350 073A                              l3334 06C9  
                            l3342 0726                              l3326 06A2                              l3094 0B0E  
                            l3190 079D                              l3182 077D                              l3174 0759  
                            l3406 0B09                              l3318 0EDB                              l3086 068A  
                            l3078 0669                              l3430 0A95                              l3432 0A21  
                            l3248 0E68                              l3280 0CC6                              l3272 0CAD  
                            l3264 0C9B                              l3256 0C8D                              l3168 0A1C  
                            l3344 072A                              l3336 06EE                              l3096 0B1D  
                            l3192 07A1                              l3184 0785                              l3176 075D  
                            l3408 0EE2                              l3088 0690                              l3424 0A82  
                            l3416 0A6E                              l3600 029D                              l3520 0066  
                            l3512 005B                              l3434 0A2D                              l3290 0CE3  
                            l3282 0CCC                              l3274 0CB4                              l3266 0C9F  
                            l3258 0C90                              l3346 0730                              l3098 0B25  
                            l3370 0D42                              l3362 0CF3                              l3194 07AA  
                            l3186 078D                              l3178 076E                              l3450 0C14  
                            l3442 0BE8                              l3426 0A8B                              l3418 0A81  
                            l3610 0358                              l3602 02A2                              l3530 0072  
                            l3522 0068                              l3514 0061                              l3436 0A34  
                            l3284 0CD3                              l3276 0CB8                              l3268 0CA4  
                            l3380 053F                              l3348 0734                              l3364 0D02  
                            l3356 0CEB                              l3196 07BC                              l3188 0790  
                            l3428 0A91                              l3700 0501                              l3620 0384  
                            l3612 0369                              l3604 02AA                              l3540 009D  
                            l3532 0077                              l3524 006C                              l3516 0062  
                            l3438 0A3B                              l3278 0CBC                              l3286 0CD9  
                            l3382 059C                              l3374 050D                              l3366 0D10  
                            l3358 0CEC                              l3198 07CA                              l3294 0E7A  
                            l3390 09F4                              l3446 0BF5                              l3454 0C27  
                            l3702 0505                              l3630 039F                              l3622 0389  
                            l3614 037A                              l3606 02B3                              l3542 009E  
                            l3534 0082                              l3526 006E                              l3518 0064  
                            l3288 0CDE                              l3384 05AF                              l3376 050E  
                            l3368 0D23                              l3480 0F57                              l3392 09F8  
                            l3640 03C6                              l3632 03A6                              l3616 037D  
                            l3608 0347                              l3560 0111                              l3552 00A8  
                            l3544 009F                              l3536 0099                              l3528 0070  
                            l3378 0523                              l3490 0FAD                              l3482 0F62  
                            l3474 0F53                              l3394 09FB                              l3386 0A9C  
                            l3642 03C7                              l3650 03DD                              l3626 0392  
                            l3570 01C6                              l3562 011F                              l3546 00A0  
                            l3538 009C                              l3484 0F7D                              l3396 09FF  
                            l3660 03F1                              l3652 03E3                              l3644 03CB  
                            l3628 039A                              l3580 0270                              l3572 020A  
                            l3564 012E                              l3636 03AA                              l3548 00A1  
                            l3486 0F88                              l3494 0FCA                              l3398 0AD1  
                            l3670 0467                              l3662 0404                              l3654 03E7  
                            l3646 03D1                              l3638 03C5                              l3590 0287  
                            l3582 0276                              l3566 013E                              l3558 00AB  
                            ?_map 0048                              l3488 0F92                              l3496 0FDD  
                            l3680 047D                              l3672 0468                              l3664 044D  
                            l3656 03EA                              l3648 03D3                              l3592 028D  
                            l3568 0182                              l3576 024E                              l3498 0FE3  
                            l3682 0484                              l3674 046D                              l3666 0453  
                            l3594 029A                              l3578 0268                              l3684 0499  
                            l3676 0473                              l3668 045F                              l3692 04EC  
                            l3588 0278                              l3950 0C1C                              l3694 04F1  
                            l3686 04AC                              l3678 0479                              l3952 0C2F  
                            l3696 04F7                              l3688 04E3                              l3944 025A  
                            l3954 0FD2                              l3698 04FB                              l3946 03B7  
                            l3956 0C84                              l3948 0BFD                              l3958 071B  
                            u3000 02B0                              u3001 02AF                              u3010 0383  
                            u3011 0382                              u2300 0647                              u3100 044D  
                            u3020 039A                              u2301 0646                              u3101 044C  
                            u3021 0399                              u3110 0467                              u3030 03A6  
                            u3111 0466                              u3031 03A5                              u2320 0676  
                            u3120 046D                              u3040 03C5                              u2321 0675  
                            u2305 0643                              u3121 046C                              u3041 03C4  
                            u2410 0A66                              u2330 067C                              u2314 065B  
                            u3130 04F7                              u3050 03D1                              u2411 0A65  
                            u2331 067B                              u2315 0659                              u3131 04F6  
                            u3051 03D0                              u2500 076E                              u2420 0B5F  
                            u3140 04FB                              u3060 03E3                              u2501 076D  
                            u2405 0A5A                              u2421 0B5E                              u2325 0672  
                            u3141 04FA                              u3061 03E2                              u2510 078D  
                            u2350 069D                              u3150 0501                              u3070 03E7  
                            u2511 078C                              u2431 0B68                              u2351 069C  
                            u3151 0500                              u3071 03E6                              u2600 0E20  
                            u2432 0B6F                              u2344 0682                              u2280 0625  
                            u3160 0505                              u3080 03F0                              u2601 0E1F  
                            u2433 0B76                              u2345 0680                              u2281 0624  
                            u2265 05EC                              u3161 0504                              u3081 03EF  
                            u2610 0E31                              u2530 07A1                              u2290 062B  
                            u2274 060A                              u2370 07FA                              u3090 0404  
                            u2611 0E30                              u2531 07A0                              u2355 0699  
                            u2291 062A                              u2275 0608                              u2371 07F9  
                            u3091 0403                              u2700 0C9F                              u2380 0A4C  
                            u2460 0B90                              u2701 0C9E                              u2365 0B2B  
                            u2525 0792                              u2381 0A4B                              u2461 0B8F  
                            u2445 0B78                              u2285 0621                              u2630 0E43  
                            u2710 0CAA                              u2470 0A0F                              u2550 07BC  
                            u2631 0E42                              u2711 0CA9                              u2471 0A0E  
                            u2551 07BB                              u2455 0B80                              u2480 0A1C  
                            u2800 0EE1                              u2625 0E35                              u2481 0A1B  
                            u2545 07A3                              u2801 0EE0                              u2650 0E54  
                            u2730 0CBC                              u2810 0730                              u2570 07DA  
                            u2490 075D                              u2651 0E53                              u2731 0CBB  
                            u2811 072F                              u2571 07D9                              u2555 07B8  
                            u2491 075C                              u3187 0A03                              u2395 0A53  
                            u2900 0A3B                              u2740 0CC6                              u2820 073A  
                            u2580 07DF                              u2901 0A3A                              u3197 0A31  
                            u2645 0E44                              u2741 0CC5                              u2725 0CAE  
                            u2821 0739                              u2581 07DE                              u2565 07CC  
                            u2670 0E68                              u2590 0E15                              u2830 0CF2  
                            u2910 0F62                              u2671 0E67                              u2655 0E50  
                            u2591 0E14                              u2831 0CF1                              u2911 0F61  
                            u2680 0E6D                              u2760 0CD9                              u2920 0F88  
                            u2681 0E6C                              u2665 0E5C                              u2761 0CD8  
                            u2745 0CC2                              u2921 0F87                              u2770 0CDE  
                            u2690 0C94                              u2850 053F                              u2930 0F92  
                            u2771 0CDD                              u2755 0CCD                              u2691 0C93  
                            u2851 053E                              u2931 0F91                              u2940 0FE9  
                            u2860 0AE8                              u2780 0EAA                              u2845 0D18  
                            u2941 0FE8                              u2781 0EA9                              u2790 0ED7  
                            u2870 0F4A                              u2855 053B                              u2791 0ED6  
                            u2880 0A9B                              u2865 0AE3                              u2785 0EA6  
                            u2881 0A9A                              u2970 00A5                              u2875 0F45  
                            u2971 00A4                              u2980 0276                              _RCIF 0065  
                            u2981 0275                              u2990 029A                              u2895 0A24  
                            u2991 0299                              u2995 0296                              _TMR0 0001  
                            _TXIF 0064                      __CFG_WRT$OFF 0000                              _disp 005D  
                            _main 005B                              _rand 0EE2                              _temp 00AC  
                            _time 00A4                              map@x 0048                              btemp 007E  
                __end_of_ADC_Read 0A44                     __CFG_BOREN$ON 0000                              start 0010  
                 __end_of_GetTime 0B51                 ___bmul@multiplier 0027                             ??_ISR 0020  
       __size_of_conteggioVeicoli 0065                             ??_map 0052                   __end_of___aldiv 07F3  
                           ?_main 0070                             ?_rand 0031                   __end_of___awdiv 0E77  
                   __CFG_WDTE$OFF 0000                   __end_of___awmod 0CE8                   ___awdiv@divisor 003F  
                           _T1CON 0010                             i1l302 0E0D                             i1l166 0BE4  
                           i1l350 0DA0                             i1l286 09EB                             i1l288 09F1  
                           i1l289 09F3                   ___awdiv@counter 0044                             _RCREG 001A  
            UpdateTimes@_semafori 002E                             _TMR1H 000F                             _TMR1L 000E  
                           _SPBRG 0099                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISC 0087                             _TRISD 0088  
                           _TRISE 0089                             _TXREG 0019               ___lmul@multiplicand 0028  
                   __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A                __size_of_UART_Read 0009  
                 __end_of_display 0811                             _count 00A8                             _randx 00EB  
                           main@i 0199                             _truck 00D9                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 0013  
                    __end_of_main 050A                      __end_of_rand 0F53         __size_of_SetReceivedTimes 0060  
              __size_of_GetDigits 00CD                            ??_main 0052                            ??_rand 0033  
               SetDefaultTimers@i 002F                 SetDefaultTimers@l 002E                __size_of_BuildByte 00C8  
                      _SetDisplay 0C38                            _ADCON0 001F                            _ADCON1 009F  
              __size_of_Conteggio 004C                            _ADRESH 001E                            _ADRESL 009E  
                ___awdiv@dividend 0041                            i1l2110 0BA2                            i1l2112 0BB2  
                          i1l2114 0BBB                            i1l2116 0BCB                            i1l2108 0B99  
                          i1l2118 0BD4                            i1l2520 09F2                            i1l2530 0DCA  
                          i1l2540 0E03                            i1l2532 0DD3                            i1l2524 0DA9  
                          i1l2518 09EB                            i1l2542 0E07                            i1l2534 0DDC  
                          i1l2526 0DC9                            i1l2536 0DE4                            i1l2800 0D95  
                          i1l2538 0DFF                            i1l2802 0D9B                            i1l2804 0D9E  
                          u131_20 0BA2                            u131_21 0BA1                            i1l2770 0D57  
                          i1l2762 0D48                            i1l2772 0D5C                            i1l2780 0D75  
                          i1l2764 0D4C                            i1l2790 0D88                            i1l2782 0D79  
                          i1l2774 0D60                            i1l2766 0D50                            u132_20 0BBB  
                          i1l2792 0D89                            i1l2784 0D7A                            i1l2776 0D6E  
                          i1l2768 0D53                            u220_20 0D50                            u132_21 0BBA  
                          u220_21 0D4F                            i1l2794 0D8D                            i1l2786 0D7F  
                          i1l2778 0D72                            i1l2796 0D93                            i1l2788 0D83  
                          i1l2798 0D94                            u133_20 0BD4                            u221_20 0D5C  
                          u133_21 0BD3                            u221_21 0D5B                            u222_20 0D60  
                          u222_21 0D5F                            u223_20 0D79                            u223_21 0D78  
                          u224_20 0D88                            u224_21 0D87                            u225_20 0D93  
                          _INTCON 000B                            u225_21 0D92                            u219_20 0D4C  
                          u219_21 0D4B                            u192_20 09F1                            u192_21 09F0  
                          u193_20 0DD3                            u193_21 0DD2                            u194_20 0DE4  
                          u194_21 0DE3                            u195_20 0E0D                            u195_21 0E0C  
                          _TMR0IF 005A                            _TMR1IF 0060                         ??_GetTime 0026  
                    ?_UART_TxChar 0070                     main@randomCar 0191                 __end_of_UART_Init 0B0B  
               __end_of_UART_Read 09F4                            ___bmul 0A07                            ___lmul 0B51  
                       ??___aldiv 002C                   GetTime@shortInt 0029                            ___wmul 0A44  
                       ??___awdiv 0043                         ??___awmod 003C                  __end_of_init_ADC 0A07  
                          _cycled 005E                  ___awdiv@quotient 0046                   ___awmod@divisor 0038  
                 ___awmod@counter 003D                  __end_of_sendByte 0A9C                         ?_ADC_Read 0024  
                          saved_w 007E           __end_of__initialization 0057                 __end_of_GetDigits 05D7  
                   ??_UpdateTimes 0024         __size_of_SetDefaultTimers 00B7               ___bmul@multiplicand 0024  
                  __pcstackCOMMON 0070                 __end_of_BuildByte 069F                      __pidataBANK0 09DF  
                    __pidataBANK1 09DB                  _conteggioVeicoli 0DA9                 __end_of_Conteggio 0BE5  
                   ?_luciSemaforo 0024                        ??_ADC_Read 0026            SetDefaultTimers@giallo 0028  
       SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024                     GetDigits@Time 0049  
            _dataFromGatewayIndex 005B              _timerReadFromGateway 00AD                        __pbssBANK0 005B  
                      __pbssBANK1 00A0                        __pmaintext 005B                           ?___bmul 0024  
ShowDigitsOnDisplay@display_index 0041                           ?___lmul 0024                           ?___wmul 0024  
                  ??_luciSemaforo 0025               __end_of_UpdateTimes 0EE2                     sendByte@byte0 003D  
                   sendByte@byte1 0038                        __pintentry 0004                    ___lmul@product 002D  
                _SetReceivedTimes 0CE8       __end_of_ShowDigitsOnDisplay 1000                        __stringtab 0800  
                       ?_init_ADC 0070                           _GetTime 0B0B                   BuildByte@valore 0025  
                 BuildByte@txByte 0029           GetTime@_dataFromGateway 0024                         ?_sendByte 0038  
                  main@randomMoto 0190                        _n_semafori 0811              __size_of_UART_TxChar 000B  
                         ___aldiv 0756                   __size_of___bmul 0017                           ___awdiv 0E0E  
                 __size_of___lmul 0048                           ___awmod 0C8D               __size_of_SetDisplay 0055  
                 __size_of___wmul 0027                 conteggioVeicoli@i 007D                           _digits0 00E8  
                         _digits1 00E5                           __ptext1 0A6B                           __ptext2 07F3  
                         __ptext3 05D7                           __ptext4 0EE2                           __ptext5 0B51  
                         __ptext6 0A9C                           __ptext7 0A44                           __ptext8 0BE5  
                         __ptext9 09F4                           _display 0806                      __size_of_ISR 0061  
                    __size_of_map 0035                  ___awmod@dividend 003A                  ___aldiv@dividend 0028  
            BuildByte@sommaColumn 002F                           _umidita 00AB                           clrloop0 09E4  
                GetDigits@_digits 0050              end_of_initialization 0057                        ??_init_ADC 0024  
                  main@lux_select 0197                       _UpdateTimes 0E77                        ??_sendByte 003A  
                _SetDefaultTimers 069F                         _RCSTAbits 0018                  ___aldiv@quotient 002F  
                      _motorcycle 00E1                         _UART_Init 0AD1                         _UART_Read 09EB  
           SetReceivedTimes@index 0034                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTCbits 0007                      SetDisplay@d1 0024                      SetDisplay@d2 0025  
                    SetDisplay@d3 0026                         _TRISCbits 0087                 __size_of_ADC_Read 0026  
        __end_of_conteggioVeicoli 0E0E              __end_of_luciSemaforo 0C38                        map@out_max 0050  
                      map@out_min 004E  SetReceivedTimes@_dataFromGateway 0033                         _TXSTAbits 0098  
                       _GetDigits 050A                         _DigitsArr 0062                    __end_of___bmul 0A1E  
                  __end_of___lmul 0B99                    __end_of___wmul 0A6B                        ?_UART_Init 0033  
                      ?_UART_Read 0070                         _BuildByte 05D7                         _Conteggio 0B99  
               BuildByte@sommaRow 002E               start_initialization 0013                       __end_of_ISR 0DA9  
                    ??_SetDisplay 0028                       __end_of_map 0AD1          __end_of_SetReceivedTimes 0D48  
                      ?_GetDigits 0048                          ??___bmul 0025                          ??___lmul 002C  
                  ADC_Read@canale 0027                          ??___wmul 0028                       __pdataBANK0 0062  
                     __pdataBANK1 00EB                __end_of_SetDisplay 0C8D                    GetDigits@index 0048  
                      ?_BuildByte 0024                        ?_Conteggio 0070                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK3 0190                          ?_GetTime 0024  
           SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013  
               __size_of_sendByte 0031                          ?___aldiv 0024                          ?___awdiv 003F  
                        ?___awmod 0038                       ??_UART_Init 0035                       ??_UART_Read 0070  
                  BuildByte@i_341 0036                         __pstrings 0800                    BuildByte@y_342 0032  
                  sendByte@valore 0039                    sendByte@txByte 003E                    BuildByte@byte0 0028  
                  BuildByte@byte1 0024          __end_of_SetDefaultTimers 0756                          _ADC_Read 0A1E  
           __size_of_luciSemaforo 0053                         _count_lux 005C                     UART_TxChar@ch 0024  
    __size_of_ShowDigitsOnDisplay 00AD                   ___aldiv@divisor 0024                 SetReceivedTimes@i 0035  
               interrupt_function 0004                   ___aldiv@counter 002D                    ___wmul@product 0028  
      SetReceivedTimes@semaforoId 0031                      ?_UpdateTimes 0070                         clear_ram0 09E3  
                        _PIE1bits 008C                     ??_UART_TxChar 0024                       ??_GetDigits 004B  
                        _GO_nDONE 00FA                      _luciSemaforo 0BE5                         _pressione 00AA  
               UART_Init@baudrate 0033                       ??_BuildByte 0026                         map@in_max 004C  
                       map@in_min 004A                       __stringbase 0805                         main@i_480 0195  
                       main@i_481 0193                         main@i_483 0194                         main@i_485 0198  
                     ??_Conteggio 0076                 ___wmul@multiplier 0024                      GetTime@index 0028  
               ___lmul@multiplier 0024                      _RoadsSensors 00A0                 ?_conteggioVeicoli 0070  
                    _secondPassed 005F                ??_conteggioVeicoli 0079                  __size_of_GetTime 0046  
                        _Semafori 0064                   main@randomTruck 0192                       _readGateway 0060  
                __size_of___aldiv 009D               __end_of_UART_TxChar 07FE                  __size_of___awdiv 0069  
                __size_of___awmod 005B                __end_of__stringtab 0806                         sendByte@i 003F  
                        __ptext10 0E77                          __ptext11 0AD1                          __ptext20 0C8D  
                        __ptext12 0756                          __ptext21 0E0E                          __ptext13 0F53  
                        __ptext22 0A1E                          __ptext14 0C38                          __ptext23 0D48  
                        __ptext15 0CE8                          __ptext24 0DA9                          __ptext16 0B0B  
                        __ptext25 0B99                          __ptext17 069F                          __ptext26 09EB  
                        __ptext18 050A                          __ptext19 0A07                __end_of_n_semafori 0812  
         SetDisplay@display_index 002A                          _init_ADC 09F4                 ?_SetReceivedTimes 002C  
                   __size_of_main 04AF                   _dataFromGateway 00AE                     __size_of_rand 0071  
                        _sendByte 0A6B                ??_SetReceivedTimes 002D                        _INTCONbits 000B  
            Conteggio@_motorcycle 0072                          intlevel1 0000                   _readGatewayDone 0061  
                       stringcode 0800                       _UART_TxChar 07F3           SetReceivedTimes@colorId 0032  
            __size_of_UpdateTimes 006B                        GetTime@tmp 002A               _ShowDigitsOnDisplay 0F53  
                      _OPTION_REG 0081                   SetDisplay@value 0027                          stringdir 0800  
                        stringtab 0800                      UpdateTimes@i 002F                      UpdateTimes@l 0030  
               ?_SetDefaultTimers 0024                      ___aldiv@sign 002E                ??_SetDefaultTimers 002B  
            ?_ShowDigitsOnDisplay 0070                        BuildByte@i 0034                        BuildByte@y 0030  
       SetDefaultTimers@_semafori 002A                   Conteggio@_count 0070                     Conteggio@_car 0073  
                 Conteggio@_truck 0074                    Conteggio@index 0075  
