

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jul 11 16:31:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK1
   199  0C04                     __pidataBANK1:	
   200                           
   201                           ;initializer for _Semafori
   202  0C04  34D1               	retlw	low (_s0| 0)
   203  0C05  3400               	retlw	high (_s0| 0)
   204  0C06  34C3               	retlw	low (_s1| 0)
   205  0C07  3400               	retlw	high (_s1| 0)
   206  0C08  34D6               	retlw	low (_s2| (0+256))
   207  0C09  3401               	retlw	high (_s2| (0+256))
   208  0C0A  34C8               	retlw	low (_s3| (0+256))
   209  0C0B  3401               	retlw	high (_s3| (0+256))
   210  0C0C  34BA               	retlw	low (_s4| (0+256))
   211  0C0D  3401               	retlw	high (_s4| (0+256))
   212  0C0E  34AC               	retlw	low (_s5| (0+256))
   213  0C0F  3401               	retlw	high (_s5| (0+256))
   214  0C10  349E               	retlw	low (_s6| (0+256))
   215  0C11  3401               	retlw	high (_s6| (0+256))
   216  0C12  3490               	retlw	low (_s7| (0+256))
   217  0C13  3401               	retlw	high (_s7| (0+256))
   218                           
   219                           	psect	strings
   220  0800                     __pstrings:	
   221  0800                     stringtab:	
   222  0800                     __stringtab:	
   223  0800                     stringcode:	
   224                           ;	String table - string pointers are 1 byte each
   225                           
   226  0800                     stringdir:	
   227  0800  3008               	movlw	high stringdir
   228  0801  008A               	movwf	10
   229  0802  0804               	movf	4,w
   230  0803  0A84               	incf	4,f
   231  0804  0782               	addwf	2,f
   232  0805                     __stringbase:	
   233  0805  3400               	retlw	0
   234  0806                     __end_of__stringtab:	
   235  0806                     _display:	
   236  0806  343F               	retlw	63
   237  0807  3406               	retlw	6
   238  0808  345B               	retlw	91
   239  0809  344F               	retlw	79
   240  080A  3466               	retlw	102
   241  080B  346D               	retlw	109
   242  080C  347D               	retlw	125
   243  080D  3407               	retlw	7
   244  080E  347F               	retlw	127
   245  080F  346F               	retlw	111
   246  0810  3400               	retlw	0
   247  0811                     __end_of_display:	
   248  0811                     _n_semafori:	
   249  0811  3402               	retlw	2
   250  0812                     __end_of_n_semafori:	
   251  0008                     _PORTD	set	8
   252  0005                     _PORTAbits	set	5
   253  001A                     _RCREG	set	26
   254  0019                     _TXREG	set	25
   255  000B                     _INTCONbits	set	11
   256  0018                     _RCSTAbits	set	24
   257  001E                     _ADRESH	set	30
   258  001F                     _ADCON0	set	31
   259  0006                     _PORTBbits	set	6
   260  0007                     _PORTCbits	set	7
   261  000E                     _TMR1L	set	14
   262  000F                     _TMR1H	set	15
   263  0010                     _T1CON	set	16
   264  0001                     _TMR0	set	1
   265  000B                     _INTCON	set	11
   266  0060                     _TMR1IF	set	96
   267  005A                     _TMR0IF	set	90
   268  0065                     _RCIF	set	101
   269  0064                     _TXIF	set	100
   270  00FA                     _GO_nDONE	set	250
   271  008C                     _PIE1bits	set	140
   272  0099                     _SPBRG	set	153
   273  0098                     _TXSTAbits	set	152
   274  0087                     _TRISCbits	set	135
   275  009E                     _ADRESL	set	158
   276  009F                     _ADCON1	set	159
   277  0085                     _TRISA	set	133
   278  0081                     _OPTION_REG	set	129
   279  0089                     _TRISE	set	137
   280  0088                     _TRISD	set	136
   281  0087                     _TRISC	set	135
   282  0086                     _TRISB	set	134
   283                           
   284                           ; #config settings
   285  0000                     
   286                           	psect	cinit
   287  0013                     start_initialization:	
   288  0013                     __initialization:	
   289                           
   290                           ; Initialize objects allocated to BANK1
   291  0013  1383               	bcf	3,7	;select IRP bank0
   292  0014  30EF               	movlw	low (__pdataBANK1+16)
   293  0015  00FD               	movwf	btemp+-1
   294  0016  300C               	movlw	high __pidataBANK1
   295  0017  00FE               	movwf	btemp
   296  0018  3004               	movlw	low __pidataBANK1
   297  0019  00FF               	movwf	btemp+1
   298  001A  30DF               	movlw	low __pdataBANK1
   299  001B  0084               	movwf	4
   300  001C  120A  158A  242B  120A  118A  	fcall	init_ram0
   301                           
   302                           ; Clear objects allocated to BANK3
   303  0021  1783               	bsf	3,7	;select IRP bank2
   304  0022  3090               	movlw	low __pbssBANK3
   305  0023  0084               	movwf	4
   306  0024  30E4               	movlw	low (__pbssBANK3+84)
   307  0025  120A  158A  23F1  120A  118A  	fcall	clear_ram0
   308                           
   309                           ; Clear objects allocated to BANK1
   310  002A  1383               	bcf	3,7	;select IRP bank0
   311  002B  30A0               	movlw	low __pbssBANK1
   312  002C  0084               	movwf	4
   313  002D  30DF               	movlw	low (__pbssBANK1+63)
   314  002E  120A  158A  23F1  120A  118A  	fcall	clear_ram0
   315                           
   316                           ; Clear objects allocated to BANK0
   317  0033  304D               	movlw	low __pbssBANK0
   318  0034  0084               	movwf	4
   319  0035  3067               	movlw	low (__pbssBANK0+26)
   320  0036  120A  158A  23F1  120A  118A  	fcall	clear_ram0
   321  003B                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  003B                     __end_of__initialization:	
   325  003B  0183               	clrf	3
   326  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   327                           
   328                           	psect	bssBANK0
   329  004D                     __pbssBANK0:	
   330  004D                     _count:	
   331  004D                     	ds	2
   332  004F                     _timerReadFromGateway:	
   333  004F                     	ds	1
   334  0050                     _dataFromGatewayIndex:	
   335  0050                     	ds	1
   336  0051                     _comando:	
   337  0051                     	ds	1
   338  0052                     _count_lux:	
   339  0052                     	ds	1
   340  0053                     _disp:	
   341  0053                     	ds	1
   342  0054                     _cycled:	
   343  0054                     	ds	1
   344  0055                     _secondPassed:	
   345  0055                     	ds	1
   346  0056                     _readGateway:	
   347  0056                     	ds	1
   348  0057                     _readGatewayDone:	
   349  0057                     	ds	1
   350  0058                     _truck:	
   351  0058                     	ds	4
   352  005C                     _car:	
   353  005C                     	ds	4
   354  0060                     _motorcycle:	
   355  0060                     	ds	4
   356  0064                     _centinaia:	
   357  0064                     	ds	1
   358  0065                     _decine:	
   359  0065                     	ds	1
   360  0066                     _unita:	
   361  0066                     	ds	1
   362                           
   363                           	psect	bssBANK1
   364  00A0                     __pbssBANK1:	
   365  00A0                     _time:	
   366  00A0                     	ds	16
   367  00B0                     _RoadsSensors:	
   368  00B0                     	ds	4
   369  00B4                     _dataFromGateway:	
   370  00B4                     	ds	15
   371  00C3                     _s1:	
   372  00C3                     	ds	14
   373  00D1                     _s0:	
   374  00D1                     	ds	14
   375                           
   376                           	psect	dataBANK1
   377  00DF                     __pdataBANK1:	
   378  00DF                     _Semafori:	
   379  00DF                     	ds	16
   380                           
   381                           	psect	bssBANK3
   382  0190                     __pbssBANK3:	
   383  0190                     _s7:	
   384  0190                     	ds	14
   385  019E                     _s6:	
   386  019E                     	ds	14
   387  01AC                     _s5:	
   388  01AC                     	ds	14
   389  01BA                     _s4:	
   390  01BA                     	ds	14
   391  01C8                     _s3:	
   392  01C8                     	ds	14
   393  01D6                     _s2:	
   394  01D6                     	ds	14
   395                           
   396                           	psect	inittext
   397  0C27                     init_fetch0:	
   398                           ;	Called with low address in FSR and high address in W
   399                           
   400  0C27  087E               	movf	btemp,w
   401  0C28  008A               	movwf	10
   402  0C29  087F               	movf	btemp+1,w
   403  0C2A  0082               	movwf	2
   404  0C2B                     init_ram0:	
   405                           ;Called with:
   406                           ;	high address of idata address in btemp 
   407                           ;	low address of idata address in btemp+1 
   408                           ;	low address of data in FSR
   409                           ;	high address + 1 of data in btemp-1
   410                           
   411  0C2B  120A  158A  2427  120A  158A  	fcall	init_fetch0
   412  0C30  0080               	movwf	0
   413  0C31  0A84               	incf	4,f
   414  0C32  0804               	movf	4,w
   415  0C33  067D               	xorwf	btemp+-1,w
   416  0C34  1903               	btfsc	3,2
   417  0C35  3400               	retlw	0
   418  0C36  0AFF               	incf	btemp+1,f
   419  0C37  1903               	btfsc	3,2
   420  0C38  0AFE               	incf	btemp,f
   421  0C39  2C2B               	goto	init_ram0
   422                           
   423                           	psect	clrtext
   424  0BF1                     clear_ram0:	
   425                           ;	Called with FSR containing the base address, and
   426                           ;	W with the last address+1
   427                           
   428  0BF1  0064               	clrwdt	;clear the watchdog before getting into this loop
   429  0BF2                     clrloop0:	
   430  0BF2  0180               	clrf	0	;clear RAM location pointed to by FSR
   431  0BF3  0A84               	incf	4,f	;increment pointer
   432  0BF4  0604               	xorwf	4,w	;XOR with final address
   433  0BF5  1903               	btfsc	3,2	;have we reached the end yet?
   434  0BF6  3400               	retlw	0	;all done for this memory range, return
   435  0BF7  0604               	xorwf	4,w	;XOR again to restore value
   436  0BF8  2BF2               	goto	clrloop0	;do the next byte
   437                           
   438                           	psect	cstackBANK3
   439  01E4                     __pcstackBANK3:	
   440  01E4                     main@temp:	
   441                           
   442                           ; 1 bytes @ 0x0
   443  01E4                     	ds	1
   444  01E5                     main@umidita:	
   445                           
   446                           ; 1 bytes @ 0x1
   447  01E5                     	ds	1
   448  01E6                     main@pressione:	
   449                           
   450                           ; 1 bytes @ 0x2
   451  01E6                     	ds	1
   452  01E7                     main@i_504:	
   453                           
   454                           ; 1 bytes @ 0x3
   455  01E7                     	ds	1
   456  01E8                     main@i_506:	
   457                           
   458                           ; 1 bytes @ 0x4
   459  01E8                     	ds	1
   460  01E9                     main@lux_select:	
   461                           
   462                           ; 1 bytes @ 0x5
   463  01E9                     	ds	1
   464  01EA                     main@i_503:	
   465                           
   466                           ; 2 bytes @ 0x6
   467  01EA                     	ds	2
   468  01EC                     main@i_508:	
   469                           
   470                           ; 1 bytes @ 0x8
   471  01EC                     	ds	1
   472  01ED                     main@i:	
   473                           
   474                           ; 2 bytes @ 0x9
   475  01ED                     	ds	2
   476                           
   477                           	psect	cstackCOMMON
   478  0070                     __pcstackCOMMON:	
   479  0070                     ?_init_ADC:	
   480  0070                     ?_ShowDigitsOnDisplay:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_Conteggio:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_main:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_UART_TxChar:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_UART_Read:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ??_UART_Read:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_conteggioVeicoli:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_ISR:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     Conteggio@_count:	
   505                           ; 1 bytes @ 0x0
   506                           
   507                           
   508                           ; 2 bytes @ 0x0
   509  0070                     	ds	2
   510  0072                     Conteggio@_motorcycle:	
   511                           
   512                           ; 1 bytes @ 0x2
   513  0072                     	ds	1
   514  0073                     Conteggio@_car:	
   515                           
   516                           ; 1 bytes @ 0x3
   517  0073                     	ds	1
   518  0074                     Conteggio@_truck:	
   519                           
   520                           ; 1 bytes @ 0x4
   521  0074                     	ds	1
   522  0075                     Conteggio@index:	
   523                           
   524                           ; 1 bytes @ 0x5
   525  0075                     	ds	1
   526  0076                     ??_Conteggio:	
   527                           
   528                           ; 1 bytes @ 0x6
   529  0076                     	ds	3
   530  0079                     ??_conteggioVeicoli:	
   531                           
   532                           ; 1 bytes @ 0x9
   533  0079                     	ds	4
   534  007D                     conteggioVeicoli@i:	
   535                           
   536                           ; 1 bytes @ 0xD
   537  007D                     	ds	1
   538                           
   539                           	psect	cstackBANK0
   540  0020                     __pcstackBANK0:	
   541  0020                     ??_ISR:	
   542                           
   543                           ; 1 bytes @ 0x0
   544  0020                     	ds	4
   545  0024                     ??_init_ADC:	
   546  0024                     ?_luciSemaforo:	
   547                           ; 1 bytes @ 0x4
   548                           
   549  0024                     ?_BuildByte:	
   550                           ; 1 bytes @ 0x4
   551                           
   552  0024                     ?_SetDefaultTimers:	
   553                           ; 1 bytes @ 0x4
   554                           
   555  0024                     ??_UART_TxChar:	
   556                           ; 1 bytes @ 0x4
   557                           
   558  0024                     ?_SetDisplay:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0024                     ?___bmul:	
   562                           ; 1 bytes @ 0x4
   563                           
   564  0024                     ?_ADC_Read:	
   565                           ; 1 bytes @ 0x4
   566                           
   567  0024                     ?_GetTime:	
   568                           ; 2 bytes @ 0x4
   569                           
   570  0024                     ?___wmul:	
   571                           ; 2 bytes @ 0x4
   572                           
   573  0024                     ?___awmod:	
   574                           ; 2 bytes @ 0x4
   575                           
   576  0024                     ?___aldiv:	
   577                           ; 2 bytes @ 0x4
   578                           
   579  0024                     BuildByte@byte1:	
   580                           ; 4 bytes @ 0x4
   581                           
   582  0024                     GetTime@_dataFromGateway:	
   583                           ; 1 bytes @ 0x4
   584                           
   585  0024                     UART_TxChar@ch:	
   586                           ; 1 bytes @ 0x4
   587                           
   588  0024                     SetDisplay@d2:	
   589                           ; 1 bytes @ 0x4
   590                           
   591  0024                     luciSemaforo@lux:	
   592                           ; 1 bytes @ 0x4
   593                           
   594  0024                     ___bmul@multiplicand:	
   595                           ; 1 bytes @ 0x4
   596                           
   597  0024                     SetDefaultTimers@rosso:	
   598                           ; 1 bytes @ 0x4
   599                           
   600  0024                     ___wmul@multiplier:	
   601                           ; 2 bytes @ 0x4
   602                           
   603  0024                     ___awmod@divisor:	
   604                           ; 2 bytes @ 0x4
   605                           
   606  0024                     ___aldiv@divisor:	
   607                           ; 2 bytes @ 0x4
   608                           
   609                           
   610                           ; 4 bytes @ 0x4
   611  0024                     	ds	1
   612  0025                     ??_luciSemaforo:	
   613  0025                     ??___bmul:	
   614                           ; 1 bytes @ 0x5
   615                           
   616  0025                     BuildByte@valore:	
   617                           ; 1 bytes @ 0x5
   618                           
   619  0025                     SetDisplay@d3:	
   620                           ; 1 bytes @ 0x5
   621                           
   622                           
   623                           ; 1 bytes @ 0x5
   624  0025                     	ds	1
   625  0026                     ??_ADC_Read:	
   626  0026                     ??_BuildByte:	
   627                           ; 1 bytes @ 0x6
   628                           
   629  0026                     ??_GetTime:	
   630                           ; 1 bytes @ 0x6
   631                           
   632  0026                     SetDisplay@value:	
   633                           ; 1 bytes @ 0x6
   634                           
   635  0026                     ___bmul@product:	
   636                           ; 1 bytes @ 0x6
   637                           
   638  0026                     SetDefaultTimers@verde:	
   639                           ; 1 bytes @ 0x6
   640                           
   641  0026                     ___wmul@multiplicand:	
   642                           ; 2 bytes @ 0x6
   643                           
   644  0026                     ___awmod@dividend:	
   645                           ; 2 bytes @ 0x6
   646                           
   647                           
   648                           ; 2 bytes @ 0x6
   649  0026                     	ds	1
   650  0027                     ??_SetDisplay:	
   651  0027                     ADC_Read@canale:	
   652                           ; 1 bytes @ 0x7
   653                           
   654  0027                     SetDisplay@d1:	
   655                           ; 1 bytes @ 0x7
   656                           
   657  0027                     luciSemaforo@index:	
   658                           ; 1 bytes @ 0x7
   659                           
   660  0027                     ___bmul@multiplier:	
   661                           ; 1 bytes @ 0x7
   662                           
   663                           
   664                           ; 1 bytes @ 0x7
   665  0027                     	ds	1
   666  0028                     ??___wmul:	
   667  0028                     ??___awmod:	
   668                           ; 1 bytes @ 0x8
   669                           
   670  0028                     BuildByte@byte0:	
   671                           ; 1 bytes @ 0x8
   672                           
   673  0028                     GetTime@index:	
   674                           ; 1 bytes @ 0x8
   675                           
   676  0028                     SetDefaultTimers@giallo:	
   677                           ; 1 bytes @ 0x8
   678                           
   679  0028                     ___wmul@product:	
   680                           ; 2 bytes @ 0x8
   681                           
   682  0028                     ___aldiv@dividend:	
   683                           ; 2 bytes @ 0x8
   684                           
   685                           
   686                           ; 4 bytes @ 0x8
   687  0028                     	ds	1
   688  0029                     GetTime@shortInt:	
   689  0029                     ___awmod@counter:	
   690                           ; 1 bytes @ 0x9
   691                           
   692  0029                     BuildByte@txByte:	
   693                           ; 1 bytes @ 0x9
   694                           
   695                           
   696                           ; 5 bytes @ 0x9
   697  0029                     	ds	1
   698  002A                     SetDefaultTimers@_semafori:	
   699  002A                     ___awmod@sign:	
   700                           ; 1 bytes @ 0xA
   701                           
   702  002A                     GetTime@tmp:	
   703                           ; 1 bytes @ 0xA
   704                           
   705                           
   706                           ; 2 bytes @ 0xA
   707  002A                     	ds	1
   708  002B                     ??_ShowDigitsOnDisplay:	
   709  002B                     ??_SetDefaultTimers:	
   710                           ; 1 bytes @ 0xB
   711                           
   712  002B                     ?___awdiv:	
   713                           ; 1 bytes @ 0xB
   714                           
   715  002B                     ___awdiv@divisor:	
   716                           ; 2 bytes @ 0xB
   717                           
   718                           
   719                           ; 2 bytes @ 0xB
   720  002B                     	ds	1
   721  002C                     ?_SetReceivedTimes:	
   722  002C                     ??___aldiv:	
   723                           ; 1 bytes @ 0xC
   724                           
   725  002C                     SetReceivedTimes@_semafori:	
   726                           ; 1 bytes @ 0xC
   727                           
   728                           
   729                           ; 1 bytes @ 0xC
   730  002C                     	ds	1
   731  002D                     ??_SetReceivedTimes:	
   732  002D                     ___aldiv@counter:	
   733                           ; 1 bytes @ 0xD
   734                           
   735  002D                     ___awdiv@dividend:	
   736                           ; 1 bytes @ 0xD
   737                           
   738                           
   739                           ; 2 bytes @ 0xD
   740  002D                     	ds	1
   741  002E                     BuildByte@sommaRow:	
   742  002E                     ___aldiv@sign:	
   743                           ; 1 bytes @ 0xE
   744                           
   745                           
   746                           ; 1 bytes @ 0xE
   747  002E                     	ds	1
   748  002F                     ??___awdiv:	
   749  002F                     BuildByte@sommaColumn:	
   750                           ; 1 bytes @ 0xF
   751                           
   752  002F                     ___aldiv@quotient:	
   753                           ; 1 bytes @ 0xF
   754                           
   755                           
   756                           ; 4 bytes @ 0xF
   757  002F                     	ds	1
   758  0030                     ___awdiv@counter:	
   759  0030                     BuildByte@y:	
   760                           ; 1 bytes @ 0x10
   761                           
   762                           
   763                           ; 2 bytes @ 0x10
   764  0030                     	ds	1
   765  0031                     ___awdiv@sign:	
   766                           
   767                           ; 1 bytes @ 0x11
   768  0031                     	ds	1
   769  0032                     SetDefaultTimers@i:	
   770  0032                     BuildByte@y_356:	
   771                           ; 1 bytes @ 0x12
   772                           
   773  0032                     ___awdiv@quotient:	
   774                           ; 2 bytes @ 0x12
   775                           
   776                           
   777                           ; 2 bytes @ 0x12
   778  0032                     	ds	1
   779  0033                     ?_UART_Init:	
   780  0033                     SetDefaultTimers@l:	
   781                           ; 1 bytes @ 0x13
   782                           
   783  0033                     UART_Init@baudrate:	
   784                           ; 1 bytes @ 0x13
   785                           
   786                           
   787                           ; 2 bytes @ 0x13
   788  0033                     	ds	1
   789  0034                     ?_GetDigits:	
   790  0034                     ?_map:	
   791                           ; 1 bytes @ 0x14
   792                           
   793  0034                     GetDigits@decine:	
   794                           ; 2 bytes @ 0x14
   795                           
   796  0034                     map@x:	
   797                           ; 1 bytes @ 0x14
   798                           
   799  0034                     BuildByte@i:	
   800                           ; 2 bytes @ 0x14
   801                           
   802                           
   803                           ; 2 bytes @ 0x14
   804  0034                     	ds	1
   805  0035                     ??_UART_Init:	
   806  0035                     GetDigits@unita:	
   807                           ; 1 bytes @ 0x15
   808                           
   809  0035                     SetReceivedTimes@semaforoId:	
   810                           ; 1 bytes @ 0x15
   811                           
   812                           
   813                           ; 1 bytes @ 0x15
   814  0035                     	ds	1
   815  0036                     SetReceivedTimes@colorId:	
   816  0036                     map@in_min:	
   817                           ; 1 bytes @ 0x16
   818                           
   819  0036                     GetDigits@Time:	
   820                           ; 2 bytes @ 0x16
   821                           
   822  0036                     BuildByte@i_355:	
   823                           ; 2 bytes @ 0x16
   824                           
   825                           
   826                           ; 2 bytes @ 0x16
   827  0036                     	ds	1
   828  0037                     SetReceivedTimes@_dataFromGateway:	
   829                           
   830                           ; 1 bytes @ 0x17
   831  0037                     	ds	1
   832  0038                     ?_sendByte:	
   833  0038                     ??_GetDigits:	
   834                           ; 1 bytes @ 0x18
   835                           
   836  0038                     SetReceivedTimes@index:	
   837                           ; 1 bytes @ 0x18
   838                           
   839  0038                     sendByte@byte1:	
   840                           ; 1 bytes @ 0x18
   841                           
   842  0038                     map@in_max:	
   843                           ; 1 bytes @ 0x18
   844                           
   845                           
   846                           ; 2 bytes @ 0x18
   847  0038                     	ds	1
   848  0039                     SetReceivedTimes@i:	
   849  0039                     sendByte@valore:	
   850                           ; 1 bytes @ 0x19
   851                           
   852  0039                     _GetDigits$1221:	
   853                           ; 1 bytes @ 0x19
   854                           
   855                           
   856                           ; 2 bytes @ 0x19
   857  0039                     	ds	1
   858  003A                     ??_sendByte:	
   859  003A                     map@out_min:	
   860                           ; 1 bytes @ 0x1A
   861                           
   862                           
   863                           ; 2 bytes @ 0x1A
   864  003A                     	ds	1
   865  003B                     GetDigits@centinaia:	
   866                           
   867                           ; 1 bytes @ 0x1B
   868  003B                     	ds	1
   869  003C                     map@out_max:	
   870                           
   871                           ; 2 bytes @ 0x1C
   872  003C                     	ds	1
   873  003D                     sendByte@byte0:	
   874                           
   875                           ; 1 bytes @ 0x1D
   876  003D                     	ds	1
   877  003E                     ??_map:	
   878  003E                     sendByte@txByte:	
   879                           ; 1 bytes @ 0x1E
   880                           
   881                           
   882                           ; 1 bytes @ 0x1E
   883  003E                     	ds	1
   884  003F                     sendByte@i:	
   885                           
   886                           ; 1 bytes @ 0x1F
   887  003F                     	ds	1
   888  0040                     ??_main:	
   889                           
   890                           ; 1 bytes @ 0x20
   891  0040                     	ds	13
   892                           
   893                           	psect	maintext
   894  003F                     __pmaintext:	
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 125 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  lux_select      1    5[BANK3 ] unsigned char 
   905 ;;  i               1    4[BANK3 ] unsigned char 
   906 ;;  i               1    3[BANK3 ] unsigned char 
   907 ;;  i               2    6[BANK3 ] int 
   908 ;;  i               2    9[BANK3 ] int 
   909 ;;  i               1    8[BANK3 ] unsigned char 
   910 ;;  pressione       1    2[BANK3 ] unsigned char 
   911 ;;  umidita         1    1[BANK3 ] unsigned char 
   912 ;;  temp            1    0[BANK3 ] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : B00/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         0       0       0      11       0
   924 ;;      Temps:          0      13       0       0       0
   925 ;;      Totals:         0      13       0      11       0
   926 ;;Total ram usage:       24 bytes
   927 ;; Hardware stack levels required when called:    5
   928 ;; This function calls:
   929 ;;		_ADC_Read
   930 ;;		_GetDigits
   931 ;;		_SetDefaultTimers
   932 ;;		_SetReceivedTimes
   933 ;;		_ShowDigitsOnDisplay
   934 ;;		_UART_Init
   935 ;;		_init_ADC
   936 ;;		_luciSemaforo
   937 ;;		_map
   938 ;;		_sendByte
   939 ;; This function is called by:
   940 ;;		Startup code after reset
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _main
   946  003F                     _main:	
   947  003F                     l3265:	
   948                           ;incstack = 0
   949                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   950                           
   951                           
   952                           ;main.c: 127:     TRISB = 0x38;
   953  003F  3038               	movlw	56
   954  0040  1683               	bsf	3,5	;RP0=1, select bank1
   955  0041  1303               	bcf	3,6	;RP1=0, select bank1
   956  0042  0086               	movwf	6	;volatile
   957                           
   958                           ;main.c: 128:     TRISC = 0x80;
   959  0043  3080               	movlw	128
   960  0044  0087               	movwf	7	;volatile
   961  0045                     l3267:	
   962                           
   963                           ;main.c: 129:     TRISD = 0x00;
   964  0045  0188               	clrf	8	;volatile
   965  0046                     l3269:	
   966                           
   967                           ;main.c: 130:     TRISE = 0x01;
   968  0046  3001               	movlw	1
   969  0047  0089               	movwf	9	;volatile
   970  0048                     l3271:	
   971                           
   972                           ;main.c: 131:     INTCON = 0xE0;
   973  0048  30E0               	movlw	224
   974  0049  008B               	movwf	11	;volatile
   975  004A                     l3273:	
   976                           
   977                           ;main.c: 132:     OPTION_REG = 0x04;
   978  004A  3004               	movlw	4
   979  004B  0081               	movwf	1	;volatile
   980  004C                     l3275:	
   981                           
   982                           ;main.c: 133:     TMR0 = 6;
   983  004C  3006               	movlw	6
   984  004D  1283               	bcf	3,5	;RP0=0, select bank0
   985  004E  1303               	bcf	3,6	;RP1=0, select bank0
   986  004F  0081               	movwf	1	;volatile
   987  0050                     l3277:	
   988                           
   989                           ;main.c: 134:     T1CON = 0x31;
   990  0050  3031               	movlw	49
   991  0051  0090               	movwf	16	;volatile
   992  0052                     l3279:	
   993                           
   994                           ;main.c: 136:     TMR1H = 60;
   995  0052  303C               	movlw	60
   996  0053  008F               	movwf	15	;volatile
   997  0054                     l3281:	
   998                           
   999                           ;main.c: 137:     TMR1L = 176;
  1000  0054  30B0               	movlw	176
  1001  0055  008E               	movwf	14	;volatile
  1002                           
  1003                           ;main.c: 140:     disp = 0;
  1004  0056  01D3               	clrf	_disp
  1005                           
  1006                           ;main.c: 142:     unsigned char umidita = 0;
  1007  0057  1683               	bsf	3,5	;RP0=1, select bank3
  1008  0058  1703               	bsf	3,6	;RP1=1, select bank3
  1009  0059  01E5               	clrf	main@umidita^(0+384)
  1010                           
  1011                           ;main.c: 143:     unsigned char pressione = 0;
  1012  005A  01E6               	clrf	main@pressione^(0+384)
  1013  005B                     l3283:	
  1014                           
  1015                           ;main.c: 145:     init_ADC();
  1016  005B  120A  158A  2414  120A  118A  	fcall	_init_ADC
  1017  0060                     l3285:	
  1018                           
  1019                           ;main.c: 146:     UART_Init(9600);
  1020  0060  3080               	movlw	128
  1021  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0063  00B3               	movwf	UART_Init@baudrate
  1024  0064  3025               	movlw	37
  1025  0065  00B4               	movwf	UART_Init@baudrate+1
  1026  0066  120A  158A  24F2  120A  118A  	fcall	_UART_Init
  1027  006B                     l3287:	
  1028                           
  1029                           ;main.c: 147:     SetDefaultTimers(1, 2, 3, Semafori);
  1030  006B  3001               	movlw	1
  1031  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1032  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1033  006E  00A4               	movwf	SetDefaultTimers@rosso
  1034  006F  3000               	movlw	0
  1035  0070  00A5               	movwf	SetDefaultTimers@rosso+1
  1036  0071  3002               	movlw	2
  1037  0072  00A6               	movwf	SetDefaultTimers@verde
  1038  0073  3000               	movlw	0
  1039  0074  00A7               	movwf	SetDefaultTimers@verde+1
  1040  0075  3003               	movlw	3
  1041  0076  00A8               	movwf	SetDefaultTimers@giallo
  1042  0077  3000               	movlw	0
  1043  0078  00A9               	movwf	SetDefaultTimers@giallo+1
  1044  0079  30DF               	movlw	(low (_Semafori| 0))& (0+255)
  1045  007A  00C0               	movwf	??_main
  1046  007B  0840               	movf	??_main,w
  1047  007C  00AA               	movwf	SetDefaultTimers@_semafori
  1048  007D  120A  118A  2567  120A  118A  	fcall	_SetDefaultTimers
  1049  0082                     l3289:	
  1050                           
  1051                           ;main.c: 149:     PORTCbits.RC0 = 0;
  1052  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0084  1007               	bcf	7,0	;volatile
  1055  0085                     l3291:	
  1056                           
  1057                           ;main.c: 150:     PORTBbits.RB7 = 0;
  1058  0085  1386               	bcf	6,7	;volatile
  1059  0086                     l3293:	
  1060                           
  1061                           ;main.c: 151:     PORTCbits.RC3 = 0;
  1062  0086  1187               	bcf	7,3	;volatile
  1063  0087                     l3295:	
  1064                           
  1065                           ;main.c: 152:     PORTBbits.RB6 = 0;
  1066  0087  1306               	bcf	6,6	;volatile
  1067  0088                     l3297:	
  1068                           
  1069                           ;main.c: 153:     PORTCbits.RC1 = 0;
  1070  0088  1087               	bcf	7,1	;volatile
  1071  0089                     l3299:	
  1072                           
  1073                           ;main.c: 154:     PORTBbits.RB1 = 0;
  1074  0089  1086               	bcf	6,1	;volatile
  1075  008A                     l3301:	
  1076                           
  1077                           ;main.c: 157:     {;main.c: 159:         if (readGateway.Bit)
  1078  008A  1C56               	btfss	_readGateway,0
  1079  008B  288D               	goto	u2741
  1080  008C  288E               	goto	u2740
  1081  008D                     u2741:	
  1082  008D  2B22               	goto	l239
  1083  008E                     u2740:	
  1084  008E  2B0D               	goto	l3381
  1085  008F                     l241:	
  1086                           ;main.c: 162:             {;main.c: 163:             case 0x08:
  1087                           
  1088                           
  1089                           ;main.c: 164:                 readGatewayDone.Bit = 1;
  1090  008F  1457               	bsf	_readGatewayDone,0
  1091                           
  1092                           ;main.c: 165:                 readGateway.Bit = 0;
  1093  0090  1056               	bcf	_readGateway,0
  1094  0091                     l3305:	
  1095                           
  1096                           ;main.c: 167:                 for (int i = 0; i < 4; i++)
  1097  0091  1683               	bsf	3,5	;RP0=1, select bank3
  1098  0092  1703               	bsf	3,6	;RP1=1, select bank3
  1099  0093  01ED               	clrf	main@i^(0+384)
  1100  0094  01EE               	clrf	(main@i+1)^(0+384)
  1101  0095  29B2               	goto	l3321
  1102  0096                     l3311:	
  1103                           
  1104                           ;main.c: 172:                         sendByte(0x03, 0x01, motorcycle[i]);
  1105  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0098  01B8               	clrf	sendByte@byte1
  1108  0099  0AB8               	incf	sendByte@byte1,f
  1109  009A  1683               	bsf	3,5	;RP0=1, select bank3
  1110  009B  1703               	bsf	3,6	;RP1=1, select bank3
  1111  009C  086D               	movf	main@i^(0+384),w
  1112  009D  3E60               	addlw	(low (_motorcycle| 0))& (0+255)
  1113  009E  0084               	movwf	4
  1114  009F  1383               	bcf	3,7	;select IRP bank0
  1115  00A0  0800               	movf	0,w
  1116  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1117  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1118  00A3  00C0               	movwf	??_main
  1119  00A4  0840               	movf	??_main,w
  1120  00A5  00B9               	movwf	sendByte@valore
  1121  00A6  3003               	movlw	3
  1122  00A7  120A  158A  248C  120A  118A  	fcall	_sendByte
  1123                           
  1124                           ;main.c: 173:                         sendByte(0x03, 0x02, car[i]);
  1125  00AC  3002               	movlw	2
  1126  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1127  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1128  00AF  00C0               	movwf	??_main
  1129  00B0  0840               	movf	??_main,w
  1130  00B1  00B8               	movwf	sendByte@byte1
  1131  00B2  1683               	bsf	3,5	;RP0=1, select bank3
  1132  00B3  1703               	bsf	3,6	;RP1=1, select bank3
  1133  00B4  086D               	movf	main@i^(0+384),w
  1134  00B5  3E5C               	addlw	(low (_car| 0))& (0+255)
  1135  00B6  0084               	movwf	4
  1136  00B7  1383               	bcf	3,7	;select IRP bank0
  1137  00B8  0800               	movf	0,w
  1138  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1139  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1140  00BB  00C1               	movwf	??_main+1
  1141  00BC  0841               	movf	??_main+1,w
  1142  00BD  00B9               	movwf	sendByte@valore
  1143  00BE  3003               	movlw	3
  1144  00BF  120A  158A  248C  120A  118A  	fcall	_sendByte
  1145                           
  1146                           ;main.c: 174:                         sendByte(0x03, 0x03, truck[i]);
  1147  00C4  3003               	movlw	3
  1148  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1149  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1150  00C7  00C0               	movwf	??_main
  1151  00C8  0840               	movf	??_main,w
  1152  00C9  00B8               	movwf	sendByte@byte1
  1153  00CA  1683               	bsf	3,5	;RP0=1, select bank3
  1154  00CB  1703               	bsf	3,6	;RP1=1, select bank3
  1155  00CC  086D               	movf	main@i^(0+384),w
  1156  00CD  3E58               	addlw	(low (_truck| 0))& (0+255)
  1157  00CE  0084               	movwf	4
  1158  00CF  1383               	bcf	3,7	;select IRP bank0
  1159  00D0  0800               	movf	0,w
  1160  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1161  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1162  00D3  00C1               	movwf	??_main+1
  1163  00D4  0841               	movf	??_main+1,w
  1164  00D5  00B9               	movwf	sendByte@valore
  1165  00D6  3003               	movlw	3
  1166  00D7  120A  158A  248C  120A  118A  	fcall	_sendByte
  1167                           
  1168                           ;main.c: 175:                         break;
  1169  00DC  29C7               	goto	l3323
  1170  00DD                     l3313:	
  1171                           
  1172                           ;main.c: 177:                         sendByte(0x05, 0x01, motorcycle[i]);
  1173  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1174  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1175  00DF  01B8               	clrf	sendByte@byte1
  1176  00E0  0AB8               	incf	sendByte@byte1,f
  1177  00E1  1683               	bsf	3,5	;RP0=1, select bank3
  1178  00E2  1703               	bsf	3,6	;RP1=1, select bank3
  1179  00E3  086D               	movf	main@i^(0+384),w
  1180  00E4  3E60               	addlw	(low (_motorcycle| 0))& (0+255)
  1181  00E5  0084               	movwf	4
  1182  00E6  1383               	bcf	3,7	;select IRP bank0
  1183  00E7  0800               	movf	0,w
  1184  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1185  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1186  00EA  00C0               	movwf	??_main
  1187  00EB  0840               	movf	??_main,w
  1188  00EC  00B9               	movwf	sendByte@valore
  1189  00ED  3005               	movlw	5
  1190  00EE  120A  158A  248C  120A  118A  	fcall	_sendByte
  1191                           
  1192                           ;main.c: 178:                         sendByte(0x05, 0x02, car[i]);
  1193  00F3  3002               	movlw	2
  1194  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1195  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1196  00F6  00C0               	movwf	??_main
  1197  00F7  0840               	movf	??_main,w
  1198  00F8  00B8               	movwf	sendByte@byte1
  1199  00F9  1683               	bsf	3,5	;RP0=1, select bank3
  1200  00FA  1703               	bsf	3,6	;RP1=1, select bank3
  1201  00FB  086D               	movf	main@i^(0+384),w
  1202  00FC  3E5C               	addlw	(low (_car| 0))& (0+255)
  1203  00FD  0084               	movwf	4
  1204  00FE  1383               	bcf	3,7	;select IRP bank0
  1205  00FF  0800               	movf	0,w
  1206  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0102  00C1               	movwf	??_main+1
  1209  0103  0841               	movf	??_main+1,w
  1210  0104  00B9               	movwf	sendByte@valore
  1211  0105  3005               	movlw	5
  1212  0106  120A  158A  248C  120A  118A  	fcall	_sendByte
  1213                           
  1214                           ;main.c: 179:                         sendByte(0x05, 0x03, truck[i]);
  1215  010B  3003               	movlw	3
  1216  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1217  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1218  010E  00C0               	movwf	??_main
  1219  010F  0840               	movf	??_main,w
  1220  0110  00B8               	movwf	sendByte@byte1
  1221  0111  1683               	bsf	3,5	;RP0=1, select bank3
  1222  0112  1703               	bsf	3,6	;RP1=1, select bank3
  1223  0113  086D               	movf	main@i^(0+384),w
  1224  0114  3E58               	addlw	(low (_truck| 0))& (0+255)
  1225  0115  0084               	movwf	4
  1226  0116  1383               	bcf	3,7	;select IRP bank0
  1227  0117  0800               	movf	0,w
  1228  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1230  011A  00C1               	movwf	??_main+1
  1231  011B  0841               	movf	??_main+1,w
  1232  011C  00B9               	movwf	sendByte@valore
  1233  011D  3005               	movlw	5
  1234  011E  120A  158A  248C  120A  118A  	fcall	_sendByte
  1235                           
  1236                           ;main.c: 180:                         break;
  1237  0123  29C7               	goto	l3323
  1238  0124                     l3315:	
  1239                           
  1240                           ;main.c: 182:                         sendByte(0x07, 0x01, motorcycle[i]);
  1241  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0126  01B8               	clrf	sendByte@byte1
  1244  0127  0AB8               	incf	sendByte@byte1,f
  1245  0128  1683               	bsf	3,5	;RP0=1, select bank3
  1246  0129  1703               	bsf	3,6	;RP1=1, select bank3
  1247  012A  086D               	movf	main@i^(0+384),w
  1248  012B  3E60               	addlw	(low (_motorcycle| 0))& (0+255)
  1249  012C  0084               	movwf	4
  1250  012D  1383               	bcf	3,7	;select IRP bank0
  1251  012E  0800               	movf	0,w
  1252  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0131  00C0               	movwf	??_main
  1255  0132  0840               	movf	??_main,w
  1256  0133  00B9               	movwf	sendByte@valore
  1257  0134  3007               	movlw	7
  1258  0135  120A  158A  248C  120A  118A  	fcall	_sendByte
  1259                           
  1260                           ;main.c: 183:                         sendByte(0x07, 0x02, car[i]);
  1261  013A  3002               	movlw	2
  1262  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1263  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1264  013D  00C0               	movwf	??_main
  1265  013E  0840               	movf	??_main,w
  1266  013F  00B8               	movwf	sendByte@byte1
  1267  0140  1683               	bsf	3,5	;RP0=1, select bank3
  1268  0141  1703               	bsf	3,6	;RP1=1, select bank3
  1269  0142  086D               	movf	main@i^(0+384),w
  1270  0143  3E5C               	addlw	(low (_car| 0))& (0+255)
  1271  0144  0084               	movwf	4
  1272  0145  1383               	bcf	3,7	;select IRP bank0
  1273  0146  0800               	movf	0,w
  1274  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0149  00C1               	movwf	??_main+1
  1277  014A  0841               	movf	??_main+1,w
  1278  014B  00B9               	movwf	sendByte@valore
  1279  014C  3007               	movlw	7
  1280  014D  120A  158A  248C  120A  118A  	fcall	_sendByte
  1281                           
  1282                           ;main.c: 184:                         sendByte(0x07, 0x03, truck[i]);
  1283  0152  3003               	movlw	3
  1284  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0155  00C0               	movwf	??_main
  1287  0156  0840               	movf	??_main,w
  1288  0157  00B8               	movwf	sendByte@byte1
  1289  0158  1683               	bsf	3,5	;RP0=1, select bank3
  1290  0159  1703               	bsf	3,6	;RP1=1, select bank3
  1291  015A  086D               	movf	main@i^(0+384),w
  1292  015B  3E58               	addlw	(low (_truck| 0))& (0+255)
  1293  015C  0084               	movwf	4
  1294  015D  1383               	bcf	3,7	;select IRP bank0
  1295  015E  0800               	movf	0,w
  1296  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0161  00C1               	movwf	??_main+1
  1299  0162  0841               	movf	??_main+1,w
  1300  0163  00B9               	movwf	sendByte@valore
  1301  0164  3007               	movlw	7
  1302  0165  120A  158A  248C  120A  118A  	fcall	_sendByte
  1303                           
  1304                           ;main.c: 185:                         break;
  1305  016A  29C7               	goto	l3323
  1306  016B                     l3317:	
  1307                           
  1308                           ;main.c: 187:                         sendByte(0x09, 0x01, motorcycle[i]);
  1309  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1310  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1311  016D  01B8               	clrf	sendByte@byte1
  1312  016E  0AB8               	incf	sendByte@byte1,f
  1313  016F  1683               	bsf	3,5	;RP0=1, select bank3
  1314  0170  1703               	bsf	3,6	;RP1=1, select bank3
  1315  0171  086D               	movf	main@i^(0+384),w
  1316  0172  3E60               	addlw	(low (_motorcycle| 0))& (0+255)
  1317  0173  0084               	movwf	4
  1318  0174  1383               	bcf	3,7	;select IRP bank0
  1319  0175  0800               	movf	0,w
  1320  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0178  00C0               	movwf	??_main
  1323  0179  0840               	movf	??_main,w
  1324  017A  00B9               	movwf	sendByte@valore
  1325  017B  3009               	movlw	9
  1326  017C  120A  158A  248C  120A  118A  	fcall	_sendByte
  1327                           
  1328                           ;main.c: 188:                         sendByte(0x09, 0x02, car[i]);
  1329  0181  3002               	movlw	2
  1330  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0184  00C0               	movwf	??_main
  1333  0185  0840               	movf	??_main,w
  1334  0186  00B8               	movwf	sendByte@byte1
  1335  0187  1683               	bsf	3,5	;RP0=1, select bank3
  1336  0188  1703               	bsf	3,6	;RP1=1, select bank3
  1337  0189  086D               	movf	main@i^(0+384),w
  1338  018A  3E5C               	addlw	(low (_car| 0))& (0+255)
  1339  018B  0084               	movwf	4
  1340  018C  1383               	bcf	3,7	;select IRP bank0
  1341  018D  0800               	movf	0,w
  1342  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1343  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0190  00C1               	movwf	??_main+1
  1345  0191  0841               	movf	??_main+1,w
  1346  0192  00B9               	movwf	sendByte@valore
  1347  0193  3009               	movlw	9
  1348  0194  120A  158A  248C  120A  118A  	fcall	_sendByte
  1349                           
  1350                           ;main.c: 189:                         sendByte(0x09, 0x03, truck[i]);
  1351  0199  3003               	movlw	3
  1352  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1353  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1354  019C  00C0               	movwf	??_main
  1355  019D  0840               	movf	??_main,w
  1356  019E  00B8               	movwf	sendByte@byte1
  1357  019F  1683               	bsf	3,5	;RP0=1, select bank3
  1358  01A0  1703               	bsf	3,6	;RP1=1, select bank3
  1359  01A1  086D               	movf	main@i^(0+384),w
  1360  01A2  3E58               	addlw	(low (_truck| 0))& (0+255)
  1361  01A3  0084               	movwf	4
  1362  01A4  1383               	bcf	3,7	;select IRP bank0
  1363  01A5  0800               	movf	0,w
  1364  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1365  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1366  01A8  00C1               	movwf	??_main+1
  1367  01A9  0841               	movf	??_main+1,w
  1368  01AA  00B9               	movwf	sendByte@valore
  1369  01AB  3009               	movlw	9
  1370  01AC  120A  158A  248C  120A  118A  	fcall	_sendByte
  1371                           
  1372                           ;main.c: 190:                         break;
  1373  01B1  29C7               	goto	l3323
  1374  01B2                     l3321:	
  1375                           
  1376                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1377                           ; Switch size 1, requested type "simple"
  1378                           ; Number of cases is 1, Range of values is 0 to 0
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte            4     3 (average)
  1382                           ; direct_byte           11     8 (fixed)
  1383                           ; jumptable            260     6 (fixed)
  1384                           ;	Chosen strategy is simple_byte
  1385  01B2  1683               	bsf	3,5	;RP0=1, select bank3
  1386  01B3  1703               	bsf	3,6	;RP1=1, select bank3
  1387  01B4  086E               	movf	(main@i+1)^(0+384),w
  1388  01B5  3A00               	xorlw	0	; case 0
  1389  01B6  1903               	skipnz
  1390  01B7  29B9               	goto	l3645
  1391  01B8  29C7               	goto	l3323
  1392  01B9                     l3645:	
  1393                           
  1394                           ; Switch size 1, requested type "simple"
  1395                           ; Number of cases is 4, Range of values is 0 to 3
  1396                           ; switch strategies available:
  1397                           ; Name         Instructions Cycles
  1398                           ; simple_byte           13     7 (average)
  1399                           ; direct_byte           20     8 (fixed)
  1400                           ; jumptable            260     6 (fixed)
  1401                           ;	Chosen strategy is simple_byte
  1402  01B9  086D               	movf	main@i^(0+384),w
  1403  01BA  3A00               	xorlw	0	; case 0
  1404  01BB  1903               	skipnz
  1405  01BC  2896               	goto	l3311
  1406  01BD  3A01               	xorlw	1	; case 1
  1407  01BE  1903               	skipnz
  1408  01BF  28DD               	goto	l3313
  1409  01C0  3A03               	xorlw	3	; case 2
  1410  01C1  1903               	skipnz
  1411  01C2  2924               	goto	l3315
  1412  01C3  3A01               	xorlw	1	; case 3
  1413  01C4  1903               	skipnz
  1414  01C5  296B               	goto	l3317
  1415  01C6  29C7               	goto	l3323
  1416  01C7                     l3323:	
  1417                           
  1418                           ;main.c: 192:                 }
  1419  01C7  3001               	movlw	1
  1420  01C8  1683               	bsf	3,5	;RP0=1, select bank3
  1421  01C9  1703               	bsf	3,6	;RP1=1, select bank3
  1422  01CA  07ED               	addwf	main@i^(0+384),f
  1423  01CB  1803               	skipnc
  1424  01CC  0AEE               	incf	(main@i+1)^(0+384),f
  1425  01CD  3000               	movlw	0
  1426  01CE  07EE               	addwf	(main@i+1)^(0+384),f
  1427  01CF                     l3325:	
  1428  01CF  086E               	movf	(main@i+1)^(0+384),w
  1429  01D0  3A80               	xorlw	128
  1430  01D1  00FF               	movwf	btemp+1
  1431  01D2  3080               	movlw	128
  1432  01D3  027F               	subwf	btemp+1,w
  1433  01D4  1D03               	skipz
  1434  01D5  29D8               	goto	u2755
  1435  01D6  3004               	movlw	4
  1436  01D7  026D               	subwf	main@i^(0+384),w
  1437  01D8                     u2755:	
  1438  01D8  1C03               	skipc
  1439  01D9  29DB               	goto	u2751
  1440  01DA  29DC               	goto	u2750
  1441  01DB                     u2751:	
  1442  01DB  29B2               	goto	l3321
  1443  01DC                     u2750:	
  1444  01DC                     l3327:	
  1445                           
  1446                           ;main.c: 194:                 for (int i = 0; i < 4; i++)
  1447  01DC  1683               	bsf	3,5	;RP0=1, select bank3
  1448  01DD  1703               	bsf	3,6	;RP1=1, select bank3
  1449  01DE  01EA               	clrf	main@i_503^(0+384)
  1450  01DF  01EB               	clrf	(main@i_503+1)^(0+384)
  1451  01E0                     l3333:	
  1452                           
  1453                           ;main.c: 195:                 {;main.c: 196:                     motorcycle[i] = 0;
  1454  01E0  1683               	bsf	3,5	;RP0=1, select bank3
  1455  01E1  1703               	bsf	3,6	;RP1=1, select bank3
  1456  01E2  086A               	movf	main@i_503^(0+384),w
  1457  01E3  3E60               	addlw	(low (_motorcycle| 0))& (0+255)
  1458  01E4  0084               	movwf	4
  1459  01E5  1383               	bcf	3,7	;select IRP bank0
  1460  01E6  0180               	clrf	0
  1461                           
  1462                           ;main.c: 197:                     car[i] = 0;
  1463  01E7  086A               	movf	main@i_503^(0+384),w
  1464  01E8  3E5C               	addlw	(low (_car| 0))& (0+255)
  1465  01E9  0084               	movwf	4
  1466  01EA  0180               	clrf	0
  1467                           
  1468                           ;main.c: 198:                     truck[i] = 0;
  1469  01EB  086A               	movf	main@i_503^(0+384),w
  1470  01EC  3E58               	addlw	(low (_truck| 0))& (0+255)
  1471  01ED  0084               	movwf	4
  1472  01EE  0180               	clrf	0
  1473  01EF                     l3335:	
  1474                           
  1475                           ;main.c: 199:                 }
  1476  01EF  3001               	movlw	1
  1477  01F0  07EA               	addwf	main@i_503^(0+384),f
  1478  01F1  1803               	skipnc
  1479  01F2  0AEB               	incf	(main@i_503+1)^(0+384),f
  1480  01F3  3000               	movlw	0
  1481  01F4  07EB               	addwf	(main@i_503+1)^(0+384),f
  1482  01F5                     l3337:	
  1483  01F5  086B               	movf	(main@i_503+1)^(0+384),w
  1484  01F6  3A80               	xorlw	128
  1485  01F7  00FF               	movwf	btemp+1
  1486  01F8  3080               	movlw	128
  1487  01F9  027F               	subwf	btemp+1,w
  1488  01FA  1D03               	skipz
  1489  01FB  29FE               	goto	u2765
  1490  01FC  3004               	movlw	4
  1491  01FD  026A               	subwf	main@i_503^(0+384),w
  1492  01FE                     u2765:	
  1493  01FE  1C03               	skipc
  1494  01FF  2A01               	goto	u2761
  1495  0200  2A02               	goto	u2760
  1496  0201                     u2761:	
  1497  0201  29E0               	goto	l3333
  1498  0202                     u2760:	
  1499  0202                     l3339:	
  1500                           
  1501                           ;main.c: 201:                 for (unsigned char i = 0; i < 5; i++)
  1502  0202  1683               	bsf	3,5	;RP0=1, select bank3
  1503  0203  1703               	bsf	3,6	;RP1=1, select bank3
  1504  0204  01E7               	clrf	main@i_504^(0+384)
  1505  0205                     l3345:	
  1506                           
  1507                           ;main.c: 202:                 {;main.c: 203:                     dataFromGateway[i] = 0;
  1508  0205  0867               	movf	main@i_504^(0+384),w
  1509  0206  3EB4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1510  0207  0084               	movwf	4
  1511  0208  1383               	bcf	3,7	;select IRP bank1
  1512  0209  0180               	clrf	0
  1513  020A                     l3347:	
  1514                           
  1515                           ;main.c: 204:                 }
  1516  020A  3001               	movlw	1
  1517  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1518  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1519  020D  00C0               	movwf	??_main
  1520  020E  0840               	movf	??_main,w
  1521  020F  1683               	bsf	3,5	;RP0=1, select bank3
  1522  0210  1703               	bsf	3,6	;RP1=1, select bank3
  1523  0211  07E7               	addwf	main@i_504^(0+384),f
  1524  0212                     l3349:	
  1525  0212  3005               	movlw	5
  1526  0213  0267               	subwf	main@i_504^(0+384),w
  1527  0214  1C03               	skipc
  1528  0215  2A17               	goto	u2771
  1529  0216  2A18               	goto	u2770
  1530  0217                     u2771:	
  1531  0217  2A05               	goto	l3345
  1532  0218                     u2770:	
  1533  0218  2B22               	goto	l239
  1534  0219                     l255:	
  1535                           ;main.c: 206:             case 0x0A:
  1536                           
  1537                           
  1538                           ;main.c: 207:                 readGatewayDone.Bit = 1;
  1539  0219  1457               	bsf	_readGatewayDone,0
  1540                           
  1541                           ;main.c: 208:                 readGateway.Bit = 0;
  1542  021A  1056               	bcf	_readGateway,0
  1543  021B                     l3351:	
  1544                           
  1545                           ;main.c: 210:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1546  021B  3000               	movlw	0
  1547  021C  120A  158A  2466  120A  118A  	fcall	_ADC_Read
  1548  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0223  0824               	movf	?_ADC_Read,w
  1551  0224  00C0               	movwf	??_main
  1552  0225  0825               	movf	?_ADC_Read+1,w
  1553  0226  00C1               	movwf	??_main+1
  1554  0227  0D41               	rlf	??_main+1,w
  1555  0228  0CC1               	rrf	??_main+1,f
  1556  0229  0CC0               	rrf	??_main,f
  1557  022A  0D41               	rlf	??_main+1,w
  1558  022B  0CC1               	rrf	??_main+1,f
  1559  022C  0CC0               	rrf	??_main,f
  1560  022D  0840               	movf	??_main,w
  1561  022E  00B4               	movwf	map@x
  1562  022F  0841               	movf	??_main+1,w
  1563  0230  00B5               	movwf	map@x+1
  1564  0231  3000               	movlw	0
  1565  0232  00B6               	movwf	map@in_min
  1566  0233  00B7               	movwf	map@in_min+1
  1567  0234  30FF               	movlw	255
  1568  0235  00B8               	movwf	map@in_max
  1569  0236  3000               	movlw	0
  1570  0237  00B9               	movwf	map@in_max+1
  1571  0238  30EC               	movlw	236
  1572  0239  00BA               	movwf	map@out_min
  1573  023A  30FF               	movlw	255
  1574  023B  00BB               	movwf	map@out_min+1
  1575  023C  303C               	movlw	60
  1576  023D  00BC               	movwf	map@out_max
  1577  023E  3000               	movlw	0
  1578  023F  00BD               	movwf	map@out_max+1
  1579  0240  120A  158A  24BD  120A  118A  	fcall	_map
  1580  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0247  0834               	movf	?_map,w
  1583  0248  00C2               	movwf	??_main+2
  1584  0249  0842               	movf	??_main+2,w
  1585  024A  1683               	bsf	3,5	;RP0=1, select bank3
  1586  024B  1703               	bsf	3,6	;RP1=1, select bank3
  1587  024C  00E4               	movwf	main@temp^(0+384)
  1588                           
  1589                           ;main.c: 211:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1590  024D  3001               	movlw	1
  1591  024E  120A  158A  2466  120A  118A  	fcall	_ADC_Read
  1592  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0255  0824               	movf	?_ADC_Read,w
  1595  0256  00C0               	movwf	??_main
  1596  0257  0825               	movf	?_ADC_Read+1,w
  1597  0258  00C1               	movwf	??_main+1
  1598  0259  0D41               	rlf	??_main+1,w
  1599  025A  0CC1               	rrf	??_main+1,f
  1600  025B  0CC0               	rrf	??_main,f
  1601  025C  0D41               	rlf	??_main+1,w
  1602  025D  0CC1               	rrf	??_main+1,f
  1603  025E  0CC0               	rrf	??_main,f
  1604  025F  0840               	movf	??_main,w
  1605  0260  00B4               	movwf	map@x
  1606  0261  0841               	movf	??_main+1,w
  1607  0262  00B5               	movwf	map@x+1
  1608  0263  3000               	movlw	0
  1609  0264  00B6               	movwf	map@in_min
  1610  0265  00B7               	movwf	map@in_min+1
  1611  0266  30FF               	movlw	255
  1612  0267  00B8               	movwf	map@in_max
  1613  0268  3000               	movlw	0
  1614  0269  00B9               	movwf	map@in_max+1
  1615  026A  3000               	movlw	0
  1616  026B  00BA               	movwf	map@out_min
  1617  026C  00BB               	movwf	map@out_min+1
  1618  026D  3064               	movlw	100
  1619  026E  00BC               	movwf	map@out_max
  1620  026F  3000               	movlw	0
  1621  0270  00BD               	movwf	map@out_max+1
  1622  0271  120A  158A  24BD  120A  118A  	fcall	_map
  1623  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1625  0278  0834               	movf	?_map,w
  1626  0279  00C2               	movwf	??_main+2
  1627  027A  0842               	movf	??_main+2,w
  1628  027B  1683               	bsf	3,5	;RP0=1, select bank3
  1629  027C  1703               	bsf	3,6	;RP1=1, select bank3
  1630  027D  00E5               	movwf	main@umidita^(0+384)
  1631                           
  1632                           ;main.c: 212:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1633  027E  3005               	movlw	5
  1634  027F  120A  158A  2466  120A  118A  	fcall	_ADC_Read
  1635  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0286  0824               	movf	?_ADC_Read,w
  1638  0287  00C0               	movwf	??_main
  1639  0288  0825               	movf	?_ADC_Read+1,w
  1640  0289  00C1               	movwf	??_main+1
  1641  028A  0D41               	rlf	??_main+1,w
  1642  028B  0CC1               	rrf	??_main+1,f
  1643  028C  0CC0               	rrf	??_main,f
  1644  028D  0D41               	rlf	??_main+1,w
  1645  028E  0CC1               	rrf	??_main+1,f
  1646  028F  0CC0               	rrf	??_main,f
  1647  0290  0840               	movf	??_main,w
  1648  0291  00B4               	movwf	map@x
  1649  0292  0841               	movf	??_main+1,w
  1650  0293  00B5               	movwf	map@x+1
  1651  0294  3000               	movlw	0
  1652  0295  00B6               	movwf	map@in_min
  1653  0296  00B7               	movwf	map@in_min+1
  1654  0297  30FF               	movlw	255
  1655  0298  00B8               	movwf	map@in_max
  1656  0299  3000               	movlw	0
  1657  029A  00B9               	movwf	map@in_max+1
  1658  029B  3000               	movlw	0
  1659  029C  00BA               	movwf	map@out_min
  1660  029D  00BB               	movwf	map@out_min+1
  1661  029E  3064               	movlw	100
  1662  029F  00BC               	movwf	map@out_max
  1663  02A0  3000               	movlw	0
  1664  02A1  00BD               	movwf	map@out_max+1
  1665  02A2  120A  158A  24BD  120A  118A  	fcall	_map
  1666  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1667  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1668  02A9  0834               	movf	?_map,w
  1669  02AA  00C2               	movwf	??_main+2
  1670  02AB  0842               	movf	??_main+2,w
  1671  02AC  1683               	bsf	3,5	;RP0=1, select bank3
  1672  02AD  1703               	bsf	3,6	;RP1=1, select bank3
  1673  02AE  00E6               	movwf	main@pressione^(0+384)
  1674  02AF                     l3353:	
  1675                           
  1676                           ;main.c: 213:                 sendByte(0x02, 0x00, temp);
  1677  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1678  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1679  02B1  01B8               	clrf	sendByte@byte1
  1680  02B2  1683               	bsf	3,5	;RP0=1, select bank3
  1681  02B3  1703               	bsf	3,6	;RP1=1, select bank3
  1682  02B4  0864               	movf	main@temp^(0+384),w
  1683  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1684  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1685  02B7  00C0               	movwf	??_main
  1686  02B8  0840               	movf	??_main,w
  1687  02B9  00B9               	movwf	sendByte@valore
  1688  02BA  3002               	movlw	2
  1689  02BB  120A  158A  248C  120A  118A  	fcall	_sendByte
  1690  02C0                     l3355:	
  1691                           
  1692                           ;main.c: 214:                 sendByte(0x04, 0x00, umidita);
  1693  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1694  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1695  02C2  01B8               	clrf	sendByte@byte1
  1696  02C3  1683               	bsf	3,5	;RP0=1, select bank3
  1697  02C4  1703               	bsf	3,6	;RP1=1, select bank3
  1698  02C5  0865               	movf	main@umidita^(0+384),w
  1699  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1700  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1701  02C8  00C0               	movwf	??_main
  1702  02C9  0840               	movf	??_main,w
  1703  02CA  00B9               	movwf	sendByte@valore
  1704  02CB  3004               	movlw	4
  1705  02CC  120A  158A  248C  120A  118A  	fcall	_sendByte
  1706  02D1                     l3357:	
  1707                           
  1708                           ;main.c: 215:                 sendByte(0x06, 0x00, pressione);
  1709  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1710  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1711  02D3  01B8               	clrf	sendByte@byte1
  1712  02D4  1683               	bsf	3,5	;RP0=1, select bank3
  1713  02D5  1703               	bsf	3,6	;RP1=1, select bank3
  1714  02D6  0866               	movf	main@pressione^(0+384),w
  1715  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1716  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1717  02D9  00C0               	movwf	??_main
  1718  02DA  0840               	movf	??_main,w
  1719  02DB  00B9               	movwf	sendByte@valore
  1720  02DC  3006               	movlw	6
  1721  02DD  120A  158A  248C  120A  118A  	fcall	_sendByte
  1722  02E2                     l3359:	
  1723                           
  1724                           ;main.c: 217:                 for (unsigned char i = 0; i < 5; i++)
  1725  02E2  1683               	bsf	3,5	;RP0=1, select bank3
  1726  02E3  1703               	bsf	3,6	;RP1=1, select bank3
  1727  02E4  01E8               	clrf	main@i_506^(0+384)
  1728  02E5                     l3361:	
  1729  02E5  3005               	movlw	5
  1730  02E6  0268               	subwf	main@i_506^(0+384),w
  1731  02E7  1C03               	skipc
  1732  02E8  2AEA               	goto	u2781
  1733  02E9  2AEB               	goto	u2780
  1734  02EA                     u2781:	
  1735  02EA  2AEC               	goto	l3365
  1736  02EB                     u2780:	
  1737  02EB  2B22               	goto	l239
  1738  02EC                     l3365:	
  1739                           
  1740                           ;main.c: 218:                 {;main.c: 219:                     dataFromGateway[i] = 0;
  1741  02EC  0868               	movf	main@i_506^(0+384),w
  1742  02ED  3EB4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1743  02EE  0084               	movwf	4
  1744  02EF  1383               	bcf	3,7	;select IRP bank1
  1745  02F0  0180               	clrf	0
  1746  02F1                     l3367:	
  1747                           
  1748                           ;main.c: 220:                 }
  1749  02F1  3001               	movlw	1
  1750  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1751  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1752  02F4  00C0               	movwf	??_main
  1753  02F5  0840               	movf	??_main,w
  1754  02F6  1683               	bsf	3,5	;RP0=1, select bank3
  1755  02F7  1703               	bsf	3,6	;RP1=1, select bank3
  1756  02F8  07E8               	addwf	main@i_506^(0+384),f
  1757  02F9  2AE5               	goto	l3361
  1758  02FA                     l3371:	
  1759                           
  1760                           ;main.c: 224:                 if (timerReadFromGateway >= 4)
  1761  02FA  3004               	movlw	4
  1762  02FB  024F               	subwf	_timerReadFromGateway,w
  1763  02FC  1C03               	skipc
  1764  02FD  2AFF               	goto	u2791
  1765  02FE  2B00               	goto	u2790
  1766  02FF                     u2791:	
  1767  02FF  2B03               	goto	l3375
  1768  0300                     u2790:	
  1769  0300                     l3373:	
  1770                           
  1771                           ;main.c: 225:                 {;main.c: 226:                     readGatewayDone.Bit = 1
      +                          ;
  1772  0300  1457               	bsf	_readGatewayDone,0
  1773                           
  1774                           ;main.c: 227:                     readGatewayDone.Timeout = 1;
  1775  0301  14D7               	bsf	_readGatewayDone,1
  1776                           
  1777                           ;main.c: 228:                     readGateway.Bit = 0;
  1778  0302  1056               	bcf	_readGateway,0
  1779  0303                     l3375:	
  1780                           
  1781                           ;main.c: 231:                 if (dataFromGatewayIndex >= 15)
  1782  0303  300F               	movlw	15
  1783  0304  0250               	subwf	_dataFromGatewayIndex,w
  1784  0305  1C03               	skipc
  1785  0306  2B08               	goto	u2801
  1786  0307  2B09               	goto	u2800
  1787  0308                     u2801:	
  1788  0308  2B22               	goto	l239
  1789  0309                     u2800:	
  1790  0309                     l3377:	
  1791                           
  1792                           ;main.c: 232:                 {;main.c: 233:                     readGatewayDone.Bit = 1
      +                          ;
  1793  0309  1457               	bsf	_readGatewayDone,0
  1794                           
  1795                           ;main.c: 234:                     readGatewayDone.Timeout = 0;
  1796  030A  10D7               	bcf	_readGatewayDone,1
  1797                           
  1798                           ;main.c: 235:                     readGateway.Bit = 0;
  1799  030B  1056               	bcf	_readGateway,0
  1800  030C  2B22               	goto	l239
  1801  030D                     l3381:	
  1802  030D  1683               	bsf	3,5	;RP0=1, select bank1
  1803  030E  1303               	bcf	3,6	;RP1=0, select bank1
  1804  030F  0834               	movf	_dataFromGateway^(0+128),w
  1805  0310  397F               	andlw	127
  1806  0311  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0312  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0313  00C0               	movwf	??_main
  1809  0314  01C1               	clrf	??_main+1
  1810                           
  1811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1812                           ; Switch size 1, requested type "simple"
  1813                           ; Number of cases is 1, Range of values is 0 to 0
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte            4     3 (average)
  1817                           ; direct_byte           11     8 (fixed)
  1818                           ; jumptable            260     6 (fixed)
  1819                           ;	Chosen strategy is simple_byte
  1820  0315  0841               	movf	??_main+1,w
  1821  0316  3A00               	xorlw	0	; case 0
  1822  0317  1903               	skipnz
  1823  0318  2B1A               	goto	l3647
  1824  0319  2AFA               	goto	l3371
  1825  031A                     l3647:	
  1826                           
  1827                           ; Switch size 1, requested type "simple"
  1828                           ; Number of cases is 2, Range of values is 8 to 10
  1829                           ; switch strategies available:
  1830                           ; Name         Instructions Cycles
  1831                           ; simple_byte            7     4 (average)
  1832                           ; direct_byte           20    11 (fixed)
  1833                           ; jumptable            263     9 (fixed)
  1834                           ;	Chosen strategy is simple_byte
  1835  031A  0840               	movf	??_main,w
  1836  031B  3A08               	xorlw	8	; case 8
  1837  031C  1903               	skipnz
  1838  031D  288F               	goto	l241
  1839  031E  3A02               	xorlw	2	; case 10
  1840  031F  1903               	skipnz
  1841  0320  2A19               	goto	l255
  1842  0321  2AFA               	goto	l3371
  1843  0322                     l239:	
  1844                           ;main.c: 239:         }
  1845                           
  1846                           
  1847                           ;main.c: 242:         if (readGatewayDone.Bit)
  1848  0322  1283               	bcf	3,5	;RP0=0, select bank0
  1849  0323  1303               	bcf	3,6	;RP1=0, select bank0
  1850  0324  1C57               	btfss	_readGatewayDone,0
  1851  0325  2B27               	goto	u2811
  1852  0326  2B28               	goto	u2810
  1853  0327                     u2811:	
  1854  0327  2B3C               	goto	l3395
  1855  0328                     u2810:	
  1856  0328                     l3383:	
  1857                           
  1858                           ;main.c: 243:         {;main.c: 245:             readGateway.Bit = 0;
  1859  0328  1056               	bcf	_readGateway,0
  1860  0329                     l3385:	
  1861                           
  1862                           ;main.c: 246:             dataFromGatewayIndex = 0;
  1863  0329  01D0               	clrf	_dataFromGatewayIndex
  1864  032A                     l3387:	
  1865                           
  1866                           ;main.c: 247:             readGatewayDone.Bit = 0;
  1867  032A  1057               	bcf	_readGatewayDone,0
  1868                           
  1869                           ;main.c: 248:             timerReadFromGateway = 0;
  1870  032B  01CF               	clrf	_timerReadFromGateway
  1871  032C                     l3389:	
  1872                           
  1873                           ;main.c: 251:             if (readGatewayDone.Timeout)
  1874  032C  1CD7               	btfss	_readGatewayDone,1
  1875  032D  2B2F               	goto	u2821
  1876  032E  2B30               	goto	u2820
  1877  032F                     u2821:	
  1878  032F  2B32               	goto	l3393
  1879  0330                     u2820:	
  1880  0330                     l3391:	
  1881                           
  1882                           ;main.c: 252:             {;main.c: 253:                 readGatewayDone.Timeout = 0;
  1883  0330  10D7               	bcf	_readGatewayDone,1
  1884                           
  1885                           ;main.c: 254:             }
  1886  0331  2B3C               	goto	l3395
  1887  0332                     l3393:	
  1888                           
  1889                           ;main.c: 257:             {;main.c: 259:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1890  0332  30DF               	movlw	(low (_Semafori| 0))& (0+255)
  1891  0333  00C0               	movwf	??_main
  1892  0334  0840               	movf	??_main,w
  1893  0335  00AC               	movwf	SetReceivedTimes@_semafori
  1894  0336  30B4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1895  0337  120A  158A  2792  120A  118A  	fcall	_SetReceivedTimes
  1896  033C                     l3395:	
  1897                           
  1898                           ;main.c: 265:         if (secondPassed.Bit && cycled.Bit)
  1899  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1900  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1901  033E  1C55               	btfss	_secondPassed,0
  1902  033F  2B41               	goto	u2831
  1903  0340  2B42               	goto	u2830
  1904  0341                     u2831:	
  1905  0341  2C86               	goto	l3425
  1906  0342                     u2830:	
  1907  0342                     l3397:	
  1908  0342  1C54               	btfss	_cycled,0
  1909  0343  2B45               	goto	u2841
  1910  0344  2B46               	goto	u2840
  1911  0345                     u2841:	
  1912  0345  2C86               	goto	l3425
  1913  0346                     u2840:	
  1914  0346                     l3399:	
  1915                           
  1916                           ;main.c: 266:         {;main.c: 267:             unsigned char i = 0;
  1917  0346  1683               	bsf	3,5	;RP0=1, select bank3
  1918  0347  1703               	bsf	3,6	;RP1=1, select bank3
  1919  0348  01EC               	clrf	main@i_508^(0+384)
  1920                           
  1921                           ;main.c: 268:             while (i < 2)
  1922  0349  2C30               	goto	l3421
  1923  034A                     l3401:	
  1924                           
  1925                           ;main.c: 269:             {;main.c: 270:                 time[i]++;
  1926  034A  086C               	movf	main@i_508^(0+384),w
  1927  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1928  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1929  034D  00C0               	movwf	??_main
  1930  034E  0740               	addwf	??_main,w
  1931  034F  3EA0               	addlw	(low (_time| 0))& (0+255)
  1932  0350  0084               	movwf	4
  1933  0351  3001               	movlw	1
  1934  0352  1383               	bcf	3,7	;select IRP bank1
  1935  0353  0780               	addwf	0,f
  1936  0354  0A84               	incf	4,f
  1937  0355  1803               	skipnc
  1938  0356  0A80               	incf	0,f
  1939                           
  1940                           ;main.c: 271:                 if ((*Semafori[i]).times[0] != 0)
  1941  0357  1683               	bsf	3,5	;RP0=1, select bank3
  1942  0358  1703               	bsf	3,6	;RP1=1, select bank3
  1943  0359  086C               	movf	main@i_508^(0+384),w
  1944  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1945  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1946  035C  00C0               	movwf	??_main
  1947  035D  0740               	addwf	??_main,w
  1948  035E  3EDF               	addlw	(low (_Semafori| 0))& (0+255)
  1949  035F  0084               	movwf	4
  1950  0360  0800               	movf	0,w
  1951  0361  00C1               	movwf	??_main+1
  1952  0362  0A84               	incf	4,f
  1953  0363  0800               	movf	0,w
  1954  0364  00C2               	movwf	??_main+2
  1955  0365  0841               	movf	??_main+1,w
  1956  0366  0084               	movwf	4
  1957  0367  1783               	bsf	3,7
  1958  0368  1C42               	btfss	??_main+2,0
  1959  0369  1383               	bcf	3,7
  1960  036A  0800               	movf	0,w
  1961  036B  00C3               	movwf	??_main+3
  1962  036C  0A84               	incf	4,f
  1963  036D  0800               	movf	0,w
  1964  036E  00C4               	movwf	??_main+4
  1965  036F  0843               	movf	??_main+3,w
  1966  0370  0444               	iorwf	??_main+4,w
  1967  0371  1903               	btfsc	3,2
  1968  0372  2B74               	goto	u2851
  1969  0373  2B75               	goto	u2850
  1970  0374                     u2851:	
  1971  0374  2C2A               	goto	l3419
  1972  0375                     u2850:	
  1973  0375                     l3403:	
  1974                           
  1975                           ;main.c: 272:                 {;main.c: 273:                     unsigned char lux_selec
      +                          t = (*Semafori[i]).lux_select;
  1976  0375  1683               	bsf	3,5	;RP0=1, select bank3
  1977  0376  1703               	bsf	3,6	;RP1=1, select bank3
  1978  0377  086C               	movf	main@i_508^(0+384),w
  1979  0378  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0379  1303               	bcf	3,6	;RP1=0, select bank0
  1981  037A  00C0               	movwf	??_main
  1982  037B  0740               	addwf	??_main,w
  1983  037C  3EDF               	addlw	(low (_Semafori| 0))& (0+255)
  1984  037D  0084               	movwf	4
  1985  037E  1383               	bcf	3,7	;select IRP bank1
  1986  037F  0800               	movf	0,w
  1987  0380  00C1               	movwf	??_main+1
  1988  0381  0A84               	incf	4,f
  1989  0382  0800               	movf	0,w
  1990  0383  00C2               	movwf	??_main+2
  1991  0384  0841               	movf	??_main+1,w
  1992  0385  3E0C               	addlw	12
  1993  0386  00C3               	movwf	??_main+3
  1994  0387  0842               	movf	??_main+2,w
  1995  0388  1803               	skipnc
  1996  0389  3E01               	addlw	1
  1997  038A  3E00               	addlw	0
  1998  038B  00C4               	movwf	??_main+4
  1999  038C  0843               	movf	??_main+3,w
  2000  038D  0084               	movwf	4
  2001  038E  1783               	bsf	3,7
  2002  038F  1C44               	btfss	??_main+4,0
  2003  0390  1383               	bcf	3,7
  2004  0391  0800               	movf	0,w
  2005  0392  00C5               	movwf	??_main+5
  2006  0393  0845               	movf	??_main+5,w
  2007  0394  1683               	bsf	3,5	;RP0=1, select bank3
  2008  0395  1703               	bsf	3,6	;RP1=1, select bank3
  2009  0396  00E9               	movwf	main@lux_select^(0+384)
  2010                           
  2011                           ;main.c: 275:                     if ((*Semafori[i]).times[lux_select] - time[i] < 0)
  2012  0397  086C               	movf	main@i_508^(0+384),w
  2013  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2015  039A  00C0               	movwf	??_main
  2016  039B  0740               	addwf	??_main,w
  2017  039C  3EA0               	addlw	(low (_time| 0))& (0+255)
  2018  039D  0084               	movwf	4
  2019  039E  1383               	bcf	3,7	;select IRP bank1
  2020  039F  0800               	movf	0,w
  2021  03A0  00C1               	movwf	??_main+1
  2022  03A1  0A84               	incf	4,f
  2023  03A2  0800               	movf	0,w
  2024  03A3  00C2               	movwf	??_main+2
  2025  03A4  1683               	bsf	3,5	;RP0=1, select bank3
  2026  03A5  1703               	bsf	3,6	;RP1=1, select bank3
  2027  03A6  086C               	movf	main@i_508^(0+384),w
  2028  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2029  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2030  03A9  00C3               	movwf	??_main+3
  2031  03AA  0743               	addwf	??_main+3,w
  2032  03AB  3EDF               	addlw	(low (_Semafori| 0))& (0+255)
  2033  03AC  0084               	movwf	4
  2034  03AD  0800               	movf	0,w
  2035  03AE  00C4               	movwf	??_main+4
  2036  03AF  0A84               	incf	4,f
  2037  03B0  0800               	movf	0,w
  2038  03B1  00C5               	movwf	??_main+5
  2039  03B2  1683               	bsf	3,5	;RP0=1, select bank3
  2040  03B3  1703               	bsf	3,6	;RP1=1, select bank3
  2041  03B4  0869               	movf	main@lux_select^(0+384),w
  2042  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2043  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2044  03B7  00C6               	movwf	??_main+6
  2045  03B8  0746               	addwf	??_main+6,w
  2046  03B9  0744               	addwf	??_main+4,w
  2047  03BA  00C7               	movwf	??_main+7
  2048  03BB  0845               	movf	??_main+5,w
  2049  03BC  1803               	skipnc
  2050  03BD  3E01               	addlw	1
  2051  03BE  00C8               	movwf	??_main+8
  2052  03BF  0847               	movf	??_main+7,w
  2053  03C0  0084               	movwf	4
  2054  03C1  1783               	bsf	3,7
  2055  03C2  1C48               	btfss	??_main+8,0
  2056  03C3  1383               	bcf	3,7
  2057  03C4  0800               	movf	0,w
  2058  03C5  00C9               	movwf	??_main+9
  2059  03C6  0A84               	incf	4,f
  2060  03C7  0800               	movf	0,w
  2061  03C8  00CA               	movwf	??_main+10
  2062  03C9  0841               	movf	??_main+1,w
  2063  03CA  0249               	subwf	??_main+9,w
  2064  03CB  00CB               	movwf	??_main+11
  2065  03CC  0842               	movf	??_main+2,w
  2066  03CD  1C03               	skipc
  2067  03CE  0A42               	incf	??_main+2,w
  2068  03CF  024A               	subwf	??_main+10,w
  2069  03D0  00CC               	movwf	??_main+12
  2070  03D1  1FCC               	btfss	??_main+12,7
  2071  03D2  2BD4               	goto	u2861
  2072  03D3  2BD5               	goto	u2860
  2073  03D4                     u2861:	
  2074  03D4  2BF1               	goto	l3415
  2075  03D5                     u2860:	
  2076  03D5                     l3405:	
  2077                           
  2078                           ;main.c: 276:                     {;main.c: 277:                         lux_select++;
  2079  03D5  3001               	movlw	1
  2080  03D6  00C0               	movwf	??_main
  2081  03D7  0840               	movf	??_main,w
  2082  03D8  1683               	bsf	3,5	;RP0=1, select bank3
  2083  03D9  1703               	bsf	3,6	;RP1=1, select bank3
  2084  03DA  07E9               	addwf	main@lux_select^(0+384),f
  2085  03DB                     l3407:	
  2086                           
  2087                           ;main.c: 278:                         time[i] = 1;
  2088  03DB  086C               	movf	main@i_508^(0+384),w
  2089  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2090  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2091  03DE  00C0               	movwf	??_main
  2092  03DF  0740               	addwf	??_main,w
  2093  03E0  3EA0               	addlw	(low (_time| 0))& (0+255)
  2094  03E1  0084               	movwf	4
  2095  03E2  3001               	movlw	1
  2096  03E3  1383               	bcf	3,7	;select IRP bank1
  2097  03E4  0080               	movwf	0
  2098  03E5  0A84               	incf	4,f
  2099  03E6  3000               	movlw	0
  2100  03E7  0080               	movwf	0
  2101  03E8                     l3409:	
  2102                           
  2103                           ;main.c: 280:                         if (lux_select >= 3)
  2104  03E8  3003               	movlw	3
  2105  03E9  1683               	bsf	3,5	;RP0=1, select bank3
  2106  03EA  1703               	bsf	3,6	;RP1=1, select bank3
  2107  03EB  0269               	subwf	main@lux_select^(0+384),w
  2108  03EC  1C03               	skipc
  2109  03ED  2BEF               	goto	u2871
  2110  03EE  2BF0               	goto	u2870
  2111  03EF                     u2871:	
  2112  03EF  2BF1               	goto	l3415
  2113  03F0                     u2870:	
  2114  03F0                     l3411:	
  2115                           
  2116                           ;main.c: 281:                         {;main.c: 282:                             lux_sel
      +                          ect = 0;
  2117  03F0  01E9               	clrf	main@lux_select^(0+384)
  2118  03F1                     l3415:	
  2119                           
  2120                           ;main.c: 292:                     ShowDigitsOnDisplay();
  2121  03F1  120A  118A  2754  120A  118A  	fcall	_ShowDigitsOnDisplay
  2122                           
  2123                           ;main.c: 293:                     luciSemaforo(i, lux_select);
  2124  03F6  1683               	bsf	3,5	;RP0=1, select bank3
  2125  03F7  1703               	bsf	3,6	;RP1=1, select bank3
  2126  03F8  0869               	movf	main@lux_select^(0+384),w
  2127  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2128  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2129  03FB  00C0               	movwf	??_main
  2130  03FC  0840               	movf	??_main,w
  2131  03FD  00A4               	movwf	luciSemaforo@lux
  2132  03FE  1683               	bsf	3,5	;RP0=1, select bank3
  2133  03FF  1703               	bsf	3,6	;RP1=1, select bank3
  2134  0400  086C               	movf	main@i_508^(0+384),w
  2135  0401  120A  158A  25BE  120A  118A  	fcall	_luciSemaforo
  2136  0406                     l3417:	
  2137                           
  2138                           ;main.c: 294:                     (*Semafori[i]).lux_select = lux_select;
  2139  0406  1683               	bsf	3,5	;RP0=1, select bank3
  2140  0407  1703               	bsf	3,6	;RP1=1, select bank3
  2141  0408  0869               	movf	main@lux_select^(0+384),w
  2142  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2143  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2144  040B  00C0               	movwf	??_main
  2145  040C  1683               	bsf	3,5	;RP0=1, select bank3
  2146  040D  1703               	bsf	3,6	;RP1=1, select bank3
  2147  040E  086C               	movf	main@i_508^(0+384),w
  2148  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0411  00C1               	movwf	??_main+1
  2151  0412  0741               	addwf	??_main+1,w
  2152  0413  3EDF               	addlw	(low (_Semafori| 0))& (0+255)
  2153  0414  0084               	movwf	4
  2154  0415  1383               	bcf	3,7	;select IRP bank1
  2155  0416  0800               	movf	0,w
  2156  0417  00C2               	movwf	??_main+2
  2157  0418  0A84               	incf	4,f
  2158  0419  0800               	movf	0,w
  2159  041A  00C3               	movwf	??_main+3
  2160  041B  0842               	movf	??_main+2,w
  2161  041C  3E0C               	addlw	12
  2162  041D  00C4               	movwf	??_main+4
  2163  041E  0843               	movf	??_main+3,w
  2164  041F  1803               	skipnc
  2165  0420  3E01               	addlw	1
  2166  0421  3E00               	addlw	0
  2167  0422  00C5               	movwf	??_main+5
  2168  0423  0844               	movf	??_main+4,w
  2169  0424  0084               	movwf	4
  2170  0425  1783               	bsf	3,7
  2171  0426  1C45               	btfss	??_main+5,0
  2172  0427  1383               	bcf	3,7
  2173  0428  0840               	movf	??_main,w
  2174  0429  0080               	movwf	0
  2175  042A                     l3419:	
  2176                           
  2177                           ;main.c: 297:                 i++;
  2178  042A  3001               	movlw	1
  2179  042B  00C0               	movwf	??_main
  2180  042C  0840               	movf	??_main,w
  2181  042D  1683               	bsf	3,5	;RP0=1, select bank3
  2182  042E  1703               	bsf	3,6	;RP1=1, select bank3
  2183  042F  07EC               	addwf	main@i_508^(0+384),f
  2184  0430                     l3421:	
  2185                           
  2186                           ;main.c: 268:             while (i < 2)
  2187  0430  3002               	movlw	2
  2188  0431  026C               	subwf	main@i_508^(0+384),w
  2189  0432  1C03               	skipc
  2190  0433  2C35               	goto	u2881
  2191  0434  2C36               	goto	u2880
  2192  0435                     u2881:	
  2193  0435  2B4A               	goto	l3401
  2194  0436                     u2880:	
  2195  0436                     l3423:	
  2196                           
  2197                           ;main.c: 300:             GetDigits(&centinaia, &decine, &unita, (*Semafori[0]).times[(*
      +                          Semafori[0]).lux_select] - time[0]);
  2198  0436  3065               	movlw	(low (_decine| 0))& (0+255)
  2199  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0439  00C0               	movwf	??_main
  2202  043A  0840               	movf	??_main,w
  2203  043B  00B4               	movwf	GetDigits@decine
  2204  043C  3066               	movlw	(low (_unita| 0))& (0+255)
  2205  043D  00C1               	movwf	??_main+1
  2206  043E  0841               	movf	??_main+1,w
  2207  043F  00B5               	movwf	GetDigits@unita
  2208  0440  1683               	bsf	3,5	;RP0=1, select bank1
  2209  0441  1303               	bcf	3,6	;RP1=0, select bank1
  2210  0442  085F               	movf	_Semafori^(0+128),w
  2211  0443  3E0C               	addlw	12
  2212  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0446  00C2               	movwf	??_main+2
  2215  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2216  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2217  0449  0860               	movf	(_Semafori+1)^(0+128),w
  2218  044A  1803               	skipnc
  2219  044B  3E01               	addlw	1
  2220  044C  3E00               	addlw	0
  2221  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2222  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2223  044F  00C3               	movwf	??_main+3
  2224  0450  0842               	movf	??_main+2,w
  2225  0451  0084               	movwf	4
  2226  0452  1783               	bsf	3,7
  2227  0453  1C43               	btfss	??_main+3,0
  2228  0454  1383               	bcf	3,7
  2229  0455  0800               	movf	0,w
  2230  0456  00C4               	movwf	??_main+4
  2231  0457  0744               	addwf	??_main+4,w
  2232  0458  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0459  1303               	bcf	3,6	;RP1=0, select bank1
  2234  045A  075F               	addwf	_Semafori^(0+128),w
  2235  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2236  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2237  045D  00C5               	movwf	??_main+5
  2238  045E  1683               	bsf	3,5	;RP0=1, select bank1
  2239  045F  1303               	bcf	3,6	;RP1=0, select bank1
  2240  0460  0860               	movf	(_Semafori+1)^(0+128),w
  2241  0461  1803               	skipnc
  2242  0462  3E01               	addlw	1
  2243  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0465  00C6               	movwf	??_main+6
  2246  0466  0845               	movf	??_main+5,w
  2247  0467  0084               	movwf	4
  2248  0468  1783               	bsf	3,7
  2249  0469  1C46               	btfss	??_main+6,0
  2250  046A  1383               	bcf	3,7
  2251  046B  0800               	movf	0,w
  2252  046C  00C7               	movwf	??_main+7
  2253  046D  0A84               	incf	4,f
  2254  046E  0800               	movf	0,w
  2255  046F  00C8               	movwf	??_main+8
  2256  0470  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0471  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0472  0820               	movf	_time^(0+128),w
  2259  0473  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0474  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0475  0247               	subwf	??_main+7,w
  2262  0476  00B6               	movwf	GetDigits@Time
  2263  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2264  0478  1303               	bcf	3,6	;RP1=0, select bank1
  2265  0479  0821               	movf	(_time+1)^(0+128),w
  2266  047A  1C03               	skipc
  2267  047B  0A21               	incf	(_time+1)^(0+128),w
  2268  047C  1283               	bcf	3,5	;RP0=0, select bank0
  2269  047D  1303               	bcf	3,6	;RP1=0, select bank0
  2270  047E  0248               	subwf	??_main+8,w
  2271  047F  00B7               	movwf	GetDigits@Time+1
  2272  0480  3064               	movlw	(low (_centinaia| 0))& (0+255)
  2273  0481  120A  118A  26B8  120A  118A  	fcall	_GetDigits
  2274  0486                     l3425:	
  2275                           
  2276                           ;main.c: 307:         if (secondPassed.Bit && cycled.Bit)
  2277  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0488  1C55               	btfss	_secondPassed,0
  2280  0489  2C8B               	goto	u2891
  2281  048A  2C8C               	goto	u2890
  2282  048B                     u2891:	
  2283  048B  2C92               	goto	l272
  2284  048C                     u2890:	
  2285  048C                     l3427:	
  2286  048C  1C54               	btfss	_cycled,0
  2287  048D  2C8F               	goto	u2901
  2288  048E  2C90               	goto	u2900
  2289  048F                     u2901:	
  2290  048F  2C92               	goto	l272
  2291  0490                     u2900:	
  2292  0490                     l3429:	
  2293                           
  2294                           ;main.c: 308:         {;main.c: 309:             secondPassed.Bit = 0;
  2295  0490  1055               	bcf	_secondPassed,0
  2296                           
  2297                           ;main.c: 310:             cycled.Bit = 0;
  2298  0491  1054               	bcf	_cycled,0
  2299  0492                     l272:	
  2300                           ;main.c: 311:         }
  2301                           
  2302                           
  2303                           ;main.c: 312:         if (secondPassed.Bit && !cycled.Bit)
  2304  0492  1C55               	btfss	_secondPassed,0
  2305  0493  2C95               	goto	u2911
  2306  0494  2C96               	goto	u2910
  2307  0495                     u2911:	
  2308  0495  288A               	goto	l3301
  2309  0496                     u2910:	
  2310  0496                     l3431:	
  2311  0496  1854               	btfsc	_cycled,0
  2312  0497  2C99               	goto	u2921
  2313  0498  2C9A               	goto	u2920
  2314  0499                     u2921:	
  2315  0499  288A               	goto	l3301
  2316  049A                     u2920:	
  2317  049A                     l3433:	
  2318                           
  2319                           ;main.c: 313:         {;main.c: 314:             cycled.Bit = 1;
  2320  049A  1454               	bsf	_cycled,0
  2321  049B  288A               	goto	l3301
  2322  049C  120A  118A  2810   	ljmp	start
  2323  049F                     __end_of_main:	
  2324                           
  2325                           	psect	text1
  2326  0C8C                     __ptext1:	
  2327 ;; *************** function _sendByte *****************
  2328 ;; Defined at:
  2329 ;;		line 378 in file "main.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  byte0           1    wreg     unsigned char 
  2332 ;;  byte1           1   24[BANK0 ] unsigned char 
  2333 ;;  valore          1   25[BANK0 ] unsigned char 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  byte0           1   29[BANK0 ] unsigned char 
  2336 ;;  i               1   31[BANK0 ] unsigned char 
  2337 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2338 ;;		 -> BuildByte@txByte(5), 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       2       0       0       0
  2349 ;;      Locals:         0       3       0       0       0
  2350 ;;      Temps:          0       3       0       0       0
  2351 ;;      Totals:         0       8       0       0       0
  2352 ;;Total ram usage:        8 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    4
  2355 ;; This function calls:
  2356 ;;		_BuildByte
  2357 ;;		_UART_TxChar
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function _sendByte
  2365  0C8C                     _sendByte:	
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2369                           ;sendByte@byte0 stored from wreg
  2370  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0C8E  00BD               	movwf	sendByte@byte0
  2373  0C8F                     l3165:	
  2374                           
  2375                           ;main.c: 378: void sendByte(char byte0, char byte1, char valore);main.c: 379: {;main.c: 
      +                          380:     char *txByte;;main.c: 381:     txByte = BuildByte(byte0, byte1, valore);
  2376  0C8F  0838               	movf	sendByte@byte1,w
  2377  0C90  00BA               	movwf	??_sendByte
  2378  0C91  083A               	movf	??_sendByte,w
  2379  0C92  00A4               	movwf	BuildByte@byte1
  2380  0C93  0839               	movf	sendByte@valore,w
  2381  0C94  00BB               	movwf	??_sendByte+1
  2382  0C95  083B               	movf	??_sendByte+1,w
  2383  0C96  00A5               	movwf	BuildByte@valore
  2384  0C97  083D               	movf	sendByte@byte0,w
  2385  0C98  120A  118A  249F  120A  158A  	fcall	_BuildByte
  2386  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0C9F  00BC               	movwf	??_sendByte+2
  2389  0CA0  083C               	movf	??_sendByte+2,w
  2390  0CA1  00BE               	movwf	sendByte@txByte
  2391  0CA2                     l3167:	
  2392                           
  2393                           ;main.c: 383:     for (unsigned char i = 0; i < 5; i++)
  2394  0CA2  01BF               	clrf	sendByte@i
  2395  0CA3                     l3173:	
  2396                           
  2397                           ;main.c: 384:     {;main.c: 385:         UART_TxChar(*(txByte++));
  2398  0CA3  083E               	movf	sendByte@txByte,w
  2399  0CA4  0084               	movwf	4
  2400  0CA5  1383               	bcf	3,7	;select IRP bank0
  2401  0CA6  0800               	movf	0,w
  2402  0CA7  120A  158A  23F9  120A  158A  	fcall	_UART_TxChar
  2403  0CAC                     l3175:	
  2404  0CAC  3001               	movlw	1
  2405  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0CAF  00BA               	movwf	??_sendByte
  2408  0CB0  083A               	movf	??_sendByte,w
  2409  0CB1  07BE               	addwf	sendByte@txByte,f
  2410  0CB2                     l3177:	
  2411                           
  2412                           ;main.c: 386:     }
  2413  0CB2  3001               	movlw	1
  2414  0CB3  00BA               	movwf	??_sendByte
  2415  0CB4  083A               	movf	??_sendByte,w
  2416  0CB5  07BF               	addwf	sendByte@i,f
  2417  0CB6                     l3179:	
  2418  0CB6  3005               	movlw	5
  2419  0CB7  023F               	subwf	sendByte@i,w
  2420  0CB8  1C03               	skipc
  2421  0CB9  2CBB               	goto	u2651
  2422  0CBA  2CBC               	goto	u2650
  2423  0CBB                     u2651:	
  2424  0CBB  2CA3               	goto	l3173
  2425  0CBC                     u2650:	
  2426  0CBC                     l311:	
  2427  0CBC  0008               	return
  2428  0CBD                     __end_of_sendByte:	
  2429                           
  2430                           	psect	text2
  2431  0BF9                     __ptext2:	
  2432 ;; *************** function _UART_TxChar *****************
  2433 ;; Defined at:
  2434 ;;		line 353 in file "main.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  ch              1    wreg     unsigned char 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  ch              1    4[BANK0 ] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         0       1       0       0       0
  2450 ;;      Temps:          0       0       0       0       0
  2451 ;;      Totals:         0       1       0       0       0
  2452 ;;Total ram usage:        1 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    3
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_sendByte
  2459 ;;		_UART_Write_Text
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function _UART_TxChar
  2465  0BF9                     _UART_TxChar:	
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _UART_TxChar: [wreg]
  2469                           ;UART_TxChar@ch stored from wreg
  2470  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0BFB  00A4               	movwf	UART_TxChar@ch
  2473  0BFC                     l2917:	
  2474  0BFC                     l291:	
  2475                           ;main.c: 356:         ;
  2476                           
  2477                           
  2478                           ;main.c: 355:     while (!TXIF)
  2479  0BFC  1E0C               	btfss	12,4	;volatile
  2480  0BFD  2BFF               	goto	u2221
  2481  0BFE  2C00               	goto	u2220
  2482  0BFF                     u2221:	
  2483  0BFF  2BFC               	goto	l291
  2484  0C00                     u2220:	
  2485  0C00                     l293:	
  2486                           
  2487                           ;main.c: 357:     TXIF = 0;
  2488  0C00  120C               	bcf	12,4	;volatile
  2489  0C01                     l2919:	
  2490                           
  2491                           ;main.c: 358:     TXREG = ch;
  2492  0C01  0824               	movf	UART_TxChar@ch,w
  2493  0C02  0099               	movwf	25	;volatile
  2494  0C03                     l294:	
  2495  0C03  0008               	return
  2496  0C04                     __end_of_UART_TxChar:	
  2497                           
  2498                           	psect	text3
  2499  049F                     __ptext3:	
  2500 ;; *************** function _BuildByte *****************
  2501 ;; Defined at:
  2502 ;;		line 2 in file "./CustomLib/Serial.h"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  byte0           1    wreg     unsigned char 
  2505 ;;  byte1           1    4[BANK0 ] unsigned char 
  2506 ;;  valore          1    5[BANK0 ] unsigned char 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  byte0           1    8[BANK0 ] unsigned char 
  2509 ;;  y               2   18[BANK0 ] int 
  2510 ;;  y               2   16[BANK0 ] int 
  2511 ;;  i               2   22[BANK0 ] int 
  2512 ;;  i               2   20[BANK0 ] int 
  2513 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2514 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2515 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      PTR unsigned char 
  2518 ;; Registers used:
  2519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       2       0       0       0
  2526 ;;      Locals:         0      16       0       0       0
  2527 ;;      Temps:          0       2       0       0       0
  2528 ;;      Totals:         0      20       0       0       0
  2529 ;;Total ram usage:       20 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    3
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_sendByte
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _BuildByte
  2541  049F                     _BuildByte:	
  2542                           
  2543                           ;incstack = 0
  2544                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2545                           ;BuildByte@byte0 stored from wreg
  2546  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2547  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2548  04A1  00A8               	movwf	BuildByte@byte0
  2549  04A2                     l2835:	
  2550                           
  2551                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2552  04A2  0828               	movf	BuildByte@byte0,w
  2553  04A3  397F               	andlw	127
  2554  04A4  00A6               	movwf	??_BuildByte
  2555  04A5  0826               	movf	??_BuildByte,w
  2556  04A6  00A9               	movwf	BuildByte@txByte
  2557                           
  2558                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2559  04A7  0824               	movf	BuildByte@byte1,w
  2560  04A8  397F               	andlw	127
  2561  04A9  00A6               	movwf	??_BuildByte
  2562  04AA  0826               	movf	??_BuildByte,w
  2563  04AB  00AA               	movwf	BuildByte@txByte+1
  2564                           
  2565                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2566  04AC  0825               	movf	BuildByte@valore,w
  2567  04AD  397F               	andlw	127
  2568  04AE  00A6               	movwf	??_BuildByte
  2569  04AF  0826               	movf	??_BuildByte,w
  2570  04B0  00AB               	movwf	BuildByte@txByte+2
  2571  04B1                     l2837:	
  2572                           
  2573                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2574  04B1  0825               	movf	BuildByte@valore,w
  2575  04B2  00A6               	movwf	??_BuildByte
  2576  04B3  3007               	movlw	7
  2577  04B4                     u2115:	
  2578  04B4  1003               	clrc
  2579  04B5  0CA6               	rrf	??_BuildByte,f
  2580  04B6  3EFF               	addlw	-1
  2581  04B7  1D03               	skipz
  2582  04B8  2CB4               	goto	u2115
  2583  04B9  0826               	movf	??_BuildByte,w
  2584  04BA  397F               	andlw	127
  2585  04BB  00A7               	movwf	??_BuildByte+1
  2586  04BC  0827               	movf	??_BuildByte+1,w
  2587  04BD  00AC               	movwf	BuildByte@txByte+3
  2588  04BE                     l2839:	
  2589                           
  2590                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2591  04BE  01AE               	clrf	BuildByte@sommaRow
  2592  04BF                     l2841:	
  2593                           
  2594                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2595  04BF  01AF               	clrf	BuildByte@sommaColumn
  2596  04C0                     l2843:	
  2597                           
  2598                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2599  04C0  01B4               	clrf	BuildByte@i
  2600  04C1  01B5               	clrf	BuildByte@i+1
  2601  04C2                     l2849:	
  2602                           
  2603                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2604  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2605  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2606  04C4  01B0               	clrf	BuildByte@y
  2607  04C5  01B1               	clrf	BuildByte@y+1
  2608  04C6                     l2855:	
  2609                           
  2610                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2611  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2612  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2613  04C8  0834               	movf	BuildByte@i,w
  2614  04C9  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2615  04CA  0084               	movwf	4
  2616  04CB  1383               	bcf	3,7	;select IRP bank0
  2617  04CC  0800               	movf	0,w
  2618  04CD  00A6               	movwf	??_BuildByte
  2619  04CE  0A30               	incf	BuildByte@y,w
  2620  04CF  2CD2               	goto	u2124
  2621  04D0                     u2125:	
  2622  04D0  1003               	clrc
  2623  04D1  0CA6               	rrf	??_BuildByte,f
  2624  04D2                     u2124:	
  2625  04D2  3EFF               	addlw	-1
  2626  04D3  1D03               	skipz
  2627  04D4  2CD0               	goto	u2125
  2628  04D5  0826               	movf	??_BuildByte,w
  2629  04D6  3901               	andlw	1
  2630  04D7  00A7               	movwf	??_BuildByte+1
  2631  04D8  0827               	movf	??_BuildByte+1,w
  2632  04D9  07AE               	addwf	BuildByte@sommaRow,f
  2633  04DA                     l2857:	
  2634                           
  2635                           ;./CustomLib/Serial.h: 18:         }
  2636  04DA  3001               	movlw	1
  2637  04DB  07B0               	addwf	BuildByte@y,f
  2638  04DC  1803               	skipnc
  2639  04DD  0AB1               	incf	BuildByte@y+1,f
  2640  04DE  3000               	movlw	0
  2641  04DF  07B1               	addwf	BuildByte@y+1,f
  2642  04E0                     l2859:	
  2643  04E0  0831               	movf	BuildByte@y+1,w
  2644  04E1  3A80               	xorlw	128
  2645  04E2  00FF               	movwf	btemp+1
  2646  04E3  3080               	movlw	128
  2647  04E4  027F               	subwf	btemp+1,w
  2648  04E5  1D03               	skipz
  2649  04E6  2CE9               	goto	u2135
  2650  04E7  3008               	movlw	8
  2651  04E8  0230               	subwf	BuildByte@y,w
  2652  04E9                     u2135:	
  2653  04E9  1C03               	skipc
  2654  04EA  2CEC               	goto	u2131
  2655  04EB  2CED               	goto	u2130
  2656  04EC                     u2131:	
  2657  04EC  2CC6               	goto	l2855
  2658  04ED                     u2130:	
  2659  04ED                     l123:	
  2660                           
  2661                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2662  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2663  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2664  04EF  1C2E               	btfss	BuildByte@sommaRow,0
  2665  04F0  2CF2               	goto	u2141
  2666  04F1  2CF3               	goto	u2140
  2667  04F2                     u2141:	
  2668  04F2  2CFB               	goto	l2863
  2669  04F3                     u2140:	
  2670  04F3                     l2861:	
  2671                           
  2672                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2673  04F3  3080               	movlw	128
  2674  04F4  00A6               	movwf	??_BuildByte
  2675  04F5  0834               	movf	BuildByte@i,w
  2676  04F6  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2677  04F7  0084               	movwf	4
  2678  04F8  0826               	movf	??_BuildByte,w
  2679  04F9  1383               	bcf	3,7	;select IRP bank0
  2680  04FA  0780               	addwf	0,f
  2681  04FB                     l2863:	
  2682                           
  2683                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2684  04FB  01AE               	clrf	BuildByte@sommaRow
  2685  04FC                     l2867:	
  2686                           ;./CustomLib/Serial.h: 23:         }
  2687                           
  2688                           
  2689                           ;./CustomLib/Serial.h: 28:     }
  2690  04FC  3001               	movlw	1
  2691  04FD  07B4               	addwf	BuildByte@i,f
  2692  04FE  1803               	skipnc
  2693  04FF  0AB5               	incf	BuildByte@i+1,f
  2694  0500  3000               	movlw	0
  2695  0501  07B5               	addwf	BuildByte@i+1,f
  2696  0502                     l2869:	
  2697  0502  0835               	movf	BuildByte@i+1,w
  2698  0503  3A80               	xorlw	128
  2699  0504  00FF               	movwf	btemp+1
  2700  0505  3080               	movlw	128
  2701  0506  027F               	subwf	btemp+1,w
  2702  0507  1D03               	skipz
  2703  0508  2D0B               	goto	u2155
  2704  0509  3004               	movlw	4
  2705  050A  0234               	subwf	BuildByte@i,w
  2706  050B                     u2155:	
  2707  050B  1C03               	skipc
  2708  050C  2D0E               	goto	u2151
  2709  050D  2D0F               	goto	u2150
  2710  050E                     u2151:	
  2711  050E  2CC2               	goto	l2849
  2712  050F                     u2150:	
  2713  050F                     l2871:	
  2714                           
  2715                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2716  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0511  01B6               	clrf	BuildByte@i_355
  2719  0512  01B7               	clrf	BuildByte@i_355+1
  2720  0513                     l2877:	
  2721                           
  2722                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2723  0513  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0514  1303               	bcf	3,6	;RP1=0, select bank0
  2725  0515  01B2               	clrf	BuildByte@y_356
  2726  0516  01B3               	clrf	BuildByte@y_356+1
  2727  0517                     l2883:	
  2728                           
  2729                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2730  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0519  0832               	movf	BuildByte@y_356,w
  2733  051A  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2734  051B  0084               	movwf	4
  2735  051C  1383               	bcf	3,7	;select IRP bank0
  2736  051D  0800               	movf	0,w
  2737  051E  00A6               	movwf	??_BuildByte
  2738  051F  0A36               	incf	BuildByte@i_355,w
  2739  0520  2D23               	goto	u2164
  2740  0521                     u2165:	
  2741  0521  1003               	clrc
  2742  0522  0CA6               	rrf	??_BuildByte,f
  2743  0523                     u2164:	
  2744  0523  3EFF               	addlw	-1
  2745  0524  1D03               	skipz
  2746  0525  2D21               	goto	u2165
  2747  0526  0826               	movf	??_BuildByte,w
  2748  0527  3901               	andlw	1
  2749  0528  00A7               	movwf	??_BuildByte+1
  2750  0529  0827               	movf	??_BuildByte+1,w
  2751  052A  07AF               	addwf	BuildByte@sommaColumn,f
  2752  052B                     l2885:	
  2753                           
  2754                           ;./CustomLib/Serial.h: 37:         }
  2755  052B  3001               	movlw	1
  2756  052C  07B2               	addwf	BuildByte@y_356,f
  2757  052D  1803               	skipnc
  2758  052E  0AB3               	incf	BuildByte@y_356+1,f
  2759  052F  3000               	movlw	0
  2760  0530  07B3               	addwf	BuildByte@y_356+1,f
  2761  0531                     l2887:	
  2762  0531  0833               	movf	BuildByte@y_356+1,w
  2763  0532  3A80               	xorlw	128
  2764  0533  00FF               	movwf	btemp+1
  2765  0534  3080               	movlw	128
  2766  0535  027F               	subwf	btemp+1,w
  2767  0536  1D03               	skipz
  2768  0537  2D3A               	goto	u2175
  2769  0538  3004               	movlw	4
  2770  0539  0232               	subwf	BuildByte@y_356,w
  2771  053A                     u2175:	
  2772  053A  1C03               	skipc
  2773  053B  2D3D               	goto	u2171
  2774  053C  2D3E               	goto	u2170
  2775  053D                     u2171:	
  2776  053D  2D17               	goto	l2883
  2777  053E                     u2170:	
  2778  053E                     l129:	
  2779                           
  2780                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2781  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2782  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0540  1C2F               	btfss	BuildByte@sommaColumn,0
  2784  0541  2D43               	goto	u2181
  2785  0542  2D44               	goto	u2180
  2786  0543                     u2181:	
  2787  0543  2D51               	goto	l2891
  2788  0544                     u2180:	
  2789  0544                     l2889:	
  2790                           
  2791                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2792  0544  3001               	movlw	1
  2793  0545  00A6               	movwf	??_BuildByte
  2794  0546  0A36               	incf	BuildByte@i_355,w
  2795  0547  2D4A               	goto	u2194
  2796  0548                     u2195:	
  2797  0548  1003               	clrc
  2798  0549  0DA6               	rlf	??_BuildByte,f
  2799  054A                     u2194:	
  2800  054A  3EFF               	addlw	-1
  2801  054B  1D03               	skipz
  2802  054C  2D48               	goto	u2195
  2803  054D  0826               	movf	??_BuildByte,w
  2804  054E  00A7               	movwf	??_BuildByte+1
  2805  054F  0827               	movf	??_BuildByte+1,w
  2806  0550  07AD               	addwf	BuildByte@txByte+4,f
  2807  0551                     l2891:	
  2808                           
  2809                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2810  0551  01AF               	clrf	BuildByte@sommaColumn
  2811  0552                     l2895:	
  2812                           ;./CustomLib/Serial.h: 42:         }
  2813                           
  2814                           
  2815                           ;./CustomLib/Serial.h: 47:     }
  2816  0552  3001               	movlw	1
  2817  0553  07B6               	addwf	BuildByte@i_355,f
  2818  0554  1803               	skipnc
  2819  0555  0AB7               	incf	BuildByte@i_355+1,f
  2820  0556  3000               	movlw	0
  2821  0557  07B7               	addwf	BuildByte@i_355+1,f
  2822  0558                     l2897:	
  2823  0558  0837               	movf	BuildByte@i_355+1,w
  2824  0559  3A80               	xorlw	128
  2825  055A  00FF               	movwf	btemp+1
  2826  055B  3080               	movlw	128
  2827  055C  027F               	subwf	btemp+1,w
  2828  055D  1D03               	skipz
  2829  055E  2D61               	goto	u2205
  2830  055F  3008               	movlw	8
  2831  0560  0236               	subwf	BuildByte@i_355,w
  2832  0561                     u2205:	
  2833  0561  1C03               	skipc
  2834  0562  2D64               	goto	u2201
  2835  0563  2D65               	goto	u2200
  2836  0564                     u2201:	
  2837  0564  2D13               	goto	l2877
  2838  0565                     u2200:	
  2839  0565                     l2899:	
  2840                           
  2841                           ;./CustomLib/Serial.h: 49:     return txByte;
  2842  0565  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2843  0566                     l132:	
  2844  0566  0008               	return
  2845  0567                     __end_of_BuildByte:	
  2846                           
  2847                           	psect	text4
  2848  0CBD                     __ptext4:	
  2849 ;; *************** function _map *****************
  2850 ;; Defined at:
  2851 ;;		line 1 in file "./CustomLib/Conversions.h"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  x               2   20[BANK0 ] int 
  2854 ;;  in_min          2   22[BANK0 ] int 
  2855 ;;  in_max          2   24[BANK0 ] int 
  2856 ;;  out_min         2   26[BANK0 ] int 
  2857 ;;  out_max         2   28[BANK0 ] int 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2   20[BANK0 ] int 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0      10       0       0       0
  2870 ;;      Locals:         0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         0      10       0       0       0
  2873 ;;Total ram usage:       10 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    4
  2876 ;; This function calls:
  2877 ;;		___awdiv
  2878 ;;		___wmul
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _map
  2886  0CBD                     _map:	
  2887  0CBD                     l3075:	
  2888                           ;incstack = 0
  2889                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2890                           
  2891                           
  2892                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2893  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0CBF  0836               	movf	map@in_min,w
  2896  0CC0  0238               	subwf	map@in_max,w
  2897  0CC1  00AB               	movwf	___awdiv@divisor
  2898  0CC2  0837               	movf	map@in_min+1,w
  2899  0CC3  1C03               	skipc
  2900  0CC4  0A37               	incf	map@in_min+1,w
  2901  0CC5  0239               	subwf	map@in_max+1,w
  2902  0CC6  00AC               	movwf	___awdiv@divisor+1
  2903  0CC7  0836               	movf	map@in_min,w
  2904  0CC8  0234               	subwf	map@x,w
  2905  0CC9  00A4               	movwf	___wmul@multiplier
  2906  0CCA  0837               	movf	map@in_min+1,w
  2907  0CCB  1C03               	skipc
  2908  0CCC  0A37               	incf	map@in_min+1,w
  2909  0CCD  0235               	subwf	map@x+1,w
  2910  0CCE  00A5               	movwf	___wmul@multiplier+1
  2911  0CCF  083A               	movf	map@out_min,w
  2912  0CD0  023C               	subwf	map@out_max,w
  2913  0CD1  00A6               	movwf	___wmul@multiplicand
  2914  0CD2  083B               	movf	map@out_min+1,w
  2915  0CD3  1C03               	skipc
  2916  0CD4  0A3B               	incf	map@out_min+1,w
  2917  0CD5  023D               	subwf	map@out_max+1,w
  2918  0CD6  00A7               	movwf	___wmul@multiplicand+1
  2919  0CD7  120A  118A  27D0  120A  158A  	fcall	___wmul
  2920  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0CDE  0825               	movf	?___wmul+1,w
  2923  0CDF  00AE               	movwf	___awdiv@dividend+1
  2924  0CE0  0824               	movf	?___wmul,w
  2925  0CE1  00AD               	movwf	___awdiv@dividend
  2926  0CE2  120A  158A  2729  120A  158A  	fcall	___awdiv
  2927  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  2928  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  2929  0CE9  083A               	movf	map@out_min,w
  2930  0CEA  072B               	addwf	?___awdiv,w
  2931  0CEB  00B4               	movwf	?_map
  2932  0CEC  083B               	movf	map@out_min+1,w
  2933  0CED  1803               	skipnc
  2934  0CEE  0A3B               	incf	map@out_min+1,w
  2935  0CEF  072C               	addwf	?___awdiv+1,w
  2936  0CF0  00B5               	movwf	?_map+1
  2937  0CF1                     l81:	
  2938  0CF1  0008               	return
  2939  0CF2                     __end_of_map:	
  2940                           
  2941                           	psect	text5
  2942  07D0                     __ptext5:	
  2943 ;; *************** function ___wmul *****************
  2944 ;; Defined at:
  2945 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  multiplier      2    4[BANK0 ] unsigned int 
  2948 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  product         2    8[BANK0 ] unsigned int 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  2    4[BANK0 ] unsigned int 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         0       4       0       0       0
  2961 ;;      Locals:         0       2       0       0       0
  2962 ;;      Temps:          0       0       0       0       0
  2963 ;;      Totals:         0       6       0       0       0
  2964 ;;Total ram usage:        6 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    3
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_map
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function ___wmul
  2976  07D0                     ___wmul:	
  2977  07D0                     l2925:	
  2978                           ;incstack = 0
  2979                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2980                           
  2981  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  2982  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  2983  07D2  01A8               	clrf	___wmul@product
  2984  07D3  01A9               	clrf	___wmul@product+1
  2985  07D4                     l2927:	
  2986  07D4  1C24               	btfss	___wmul@multiplier,0
  2987  07D5  2FD7               	goto	u2231
  2988  07D6  2FD8               	goto	u2230
  2989  07D7                     u2231:	
  2990  07D7  2FDE               	goto	l447
  2991  07D8                     u2230:	
  2992  07D8                     l2929:	
  2993  07D8  0826               	movf	___wmul@multiplicand,w
  2994  07D9  07A8               	addwf	___wmul@product,f
  2995  07DA  1803               	skipnc
  2996  07DB  0AA9               	incf	___wmul@product+1,f
  2997  07DC  0827               	movf	___wmul@multiplicand+1,w
  2998  07DD  07A9               	addwf	___wmul@product+1,f
  2999  07DE                     l447:	
  3000  07DE  3001               	movlw	1
  3001  07DF                     u2245:	
  3002  07DF  1003               	clrc
  3003  07E0  0DA6               	rlf	___wmul@multiplicand,f
  3004  07E1  0DA7               	rlf	___wmul@multiplicand+1,f
  3005  07E2  3EFF               	addlw	-1
  3006  07E3  1D03               	skipz
  3007  07E4  2FDF               	goto	u2245
  3008  07E5                     l2931:	
  3009  07E5  3001               	movlw	1
  3010  07E6                     u2255:	
  3011  07E6  1003               	clrc
  3012  07E7  0CA5               	rrf	___wmul@multiplier+1,f
  3013  07E8  0CA4               	rrf	___wmul@multiplier,f
  3014  07E9  3EFF               	addlw	-1
  3015  07EA  1D03               	skipz
  3016  07EB  2FE6               	goto	u2255
  3017  07EC                     l2933:	
  3018  07EC  0824               	movf	___wmul@multiplier,w
  3019  07ED  0425               	iorwf	___wmul@multiplier+1,w
  3020  07EE  1D03               	btfss	3,2
  3021  07EF  2FF1               	goto	u2261
  3022  07F0  2FF2               	goto	u2260
  3023  07F1                     u2261:	
  3024  07F1  2FD4               	goto	l2927
  3025  07F2                     u2260:	
  3026  07F2                     l2935:	
  3027  07F2  0829               	movf	___wmul@product+1,w
  3028  07F3  00A5               	movwf	?___wmul+1
  3029  07F4  0828               	movf	___wmul@product,w
  3030  07F5  00A4               	movwf	?___wmul
  3031  07F6                     l449:	
  3032  07F6  0008               	return
  3033  07F7                     __end_of___wmul:	
  3034                           
  3035                           	psect	text6
  3036  0DBE                     __ptext6:	
  3037 ;; *************** function _luciSemaforo *****************
  3038 ;; Defined at:
  3039 ;;		line 418 in file "main.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  index           1    wreg     unsigned char 
  3042 ;;  lux             1    4[BANK0 ] unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  index           1    7[BANK0 ] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       1       0       0       0
  3055 ;;      Locals:         0       1       0       0       0
  3056 ;;      Temps:          0       2       0       0       0
  3057 ;;      Totals:         0       4       0       0       0
  3058 ;;Total ram usage:        4 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    3
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function _luciSemaforo
  3070  0DBE                     _luciSemaforo:	
  3071                           
  3072                           ;incstack = 0
  3073                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3074                           ;luciSemaforo@index stored from wreg
  3075  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0DC0  00A7               	movwf	luciSemaforo@index
  3078  0DC1                     l3215:	
  3079                           
  3080                           ;main.c: 418: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 419: {;m
      +                          ain.c: 420:     switch (index)
  3081  0DC1  2E00               	goto	l3227
  3082  0DC2                     l328:	
  3083                           ;main.c: 424:         {;main.c: 425:         case 0:
  3084                           
  3085                           
  3086                           ;main.c: 426:             PORTCbits.RC1 = 0;
  3087  0DC2  1087               	bcf	7,1	;volatile
  3088                           
  3089                           ;main.c: 427:             PORTCbits.RC3 = 0;
  3090  0DC3  1187               	bcf	7,3	;volatile
  3091                           
  3092                           ;main.c: 428:             PORTCbits.RC0 = 1;
  3093  0DC4  1407               	bsf	7,0	;volatile
  3094                           
  3095                           ;main.c: 429:             break;
  3096  0DC5  2E10               	goto	l339
  3097  0DC6                     l330:	
  3098                           ;main.c: 430:         case 1:
  3099                           
  3100                           
  3101                           ;main.c: 431:             PORTCbits.RC0 = 0;
  3102  0DC6  1007               	bcf	7,0	;volatile
  3103                           
  3104                           ;main.c: 432:             PORTCbits.RC3 = 0;
  3105  0DC7  1187               	bcf	7,3	;volatile
  3106                           
  3107                           ;main.c: 433:             PORTCbits.RC1 = 1;
  3108  0DC8  1487               	bsf	7,1	;volatile
  3109                           
  3110                           ;main.c: 434:             break;
  3111  0DC9  2E10               	goto	l339
  3112  0DCA                     l331:	
  3113                           ;main.c: 435:         case 2:
  3114                           
  3115                           
  3116                           ;main.c: 436:             PORTCbits.RC0 = 0;
  3117  0DCA  1007               	bcf	7,0	;volatile
  3118                           
  3119                           ;main.c: 437:             PORTCbits.RC1 = 0;
  3120  0DCB  1087               	bcf	7,1	;volatile
  3121                           
  3122                           ;main.c: 438:             PORTCbits.RC3 = 1;
  3123  0DCC  1587               	bsf	7,3	;volatile
  3124                           
  3125                           ;main.c: 439:             break;
  3126  0DCD  2E10               	goto	l339
  3127  0DCE                     l3219:	
  3128  0DCE  0824               	movf	luciSemaforo@lux,w
  3129  0DCF  00A5               	movwf	??_luciSemaforo
  3130  0DD0  01A6               	clrf	??_luciSemaforo+1
  3131                           
  3132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3133                           ; Switch size 1, requested type "simple"
  3134                           ; Number of cases is 1, Range of values is 0 to 0
  3135                           ; switch strategies available:
  3136                           ; Name         Instructions Cycles
  3137                           ; simple_byte            4     3 (average)
  3138                           ; direct_byte           11     8 (fixed)
  3139                           ; jumptable            260     6 (fixed)
  3140                           ;	Chosen strategy is simple_byte
  3141  0DD1  0826               	movf	??_luciSemaforo+1,w
  3142  0DD2  3A00               	xorlw	0	; case 0
  3143  0DD3  1903               	skipnz
  3144  0DD4  2DD6               	goto	l3649
  3145  0DD5  2E10               	goto	l339
  3146  0DD6                     l3649:	
  3147                           
  3148                           ; Switch size 1, requested type "simple"
  3149                           ; Number of cases is 3, Range of values is 0 to 2
  3150                           ; switch strategies available:
  3151                           ; Name         Instructions Cycles
  3152                           ; simple_byte           10     6 (average)
  3153                           ; direct_byte           17     8 (fixed)
  3154                           ; jumptable            260     6 (fixed)
  3155                           ;	Chosen strategy is simple_byte
  3156  0DD6  0825               	movf	??_luciSemaforo,w
  3157  0DD7  3A00               	xorlw	0	; case 0
  3158  0DD8  1903               	skipnz
  3159  0DD9  2DC2               	goto	l328
  3160  0DDA  3A01               	xorlw	1	; case 1
  3161  0DDB  1903               	skipnz
  3162  0DDC  2DC6               	goto	l330
  3163  0DDD  3A03               	xorlw	3	; case 2
  3164  0DDE  1903               	skipnz
  3165  0DDF  2DCA               	goto	l331
  3166  0DE0  2E10               	goto	l339
  3167  0DE1                     l335:	
  3168                           ;main.c: 445:         {;main.c: 446:         case 0:
  3169                           
  3170                           
  3171                           ;main.c: 447:             PORTBbits.RB1 = 0;
  3172  0DE1  1086               	bcf	6,1	;volatile
  3173                           
  3174                           ;main.c: 448:             PORTBbits.RB6 = 0;
  3175  0DE2  1306               	bcf	6,6	;volatile
  3176                           
  3177                           ;main.c: 449:             PORTBbits.RB7 = 1;
  3178  0DE3  1786               	bsf	6,7	;volatile
  3179                           
  3180                           ;main.c: 450:             break;
  3181  0DE4  2E10               	goto	l339
  3182  0DE5                     l337:	
  3183                           ;main.c: 451:         case 1:
  3184                           
  3185                           
  3186                           ;main.c: 452:             PORTBbits.RB7 = 0;
  3187  0DE5  1386               	bcf	6,7	;volatile
  3188                           
  3189                           ;main.c: 453:             PORTBbits.RB6 = 0;
  3190  0DE6  1306               	bcf	6,6	;volatile
  3191                           
  3192                           ;main.c: 454:             PORTBbits.RB1 = 1;
  3193  0DE7  1486               	bsf	6,1	;volatile
  3194                           
  3195                           ;main.c: 455:             break;
  3196  0DE8  2E10               	goto	l339
  3197  0DE9                     l338:	
  3198                           ;main.c: 456:         case 2:
  3199                           
  3200                           
  3201                           ;main.c: 457:             PORTBbits.RB7 = 0;
  3202  0DE9  1386               	bcf	6,7	;volatile
  3203                           
  3204                           ;main.c: 458:             PORTBbits.RB1 = 0;
  3205  0DEA  1086               	bcf	6,1	;volatile
  3206                           
  3207                           ;main.c: 459:             PORTBbits.RB6 = 1;
  3208  0DEB  1706               	bsf	6,6	;volatile
  3209                           
  3210                           ;main.c: 460:             break;
  3211  0DEC  2E10               	goto	l339
  3212  0DED                     l3223:	
  3213  0DED  0824               	movf	luciSemaforo@lux,w
  3214  0DEE  00A5               	movwf	??_luciSemaforo
  3215  0DEF  01A6               	clrf	??_luciSemaforo+1
  3216                           
  3217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3218                           ; Switch size 1, requested type "simple"
  3219                           ; Number of cases is 1, Range of values is 0 to 0
  3220                           ; switch strategies available:
  3221                           ; Name         Instructions Cycles
  3222                           ; simple_byte            4     3 (average)
  3223                           ; direct_byte           11     8 (fixed)
  3224                           ; jumptable            260     6 (fixed)
  3225                           ;	Chosen strategy is simple_byte
  3226  0DF0  0826               	movf	??_luciSemaforo+1,w
  3227  0DF1  3A00               	xorlw	0	; case 0
  3228  0DF2  1903               	skipnz
  3229  0DF3  2DF5               	goto	l3651
  3230  0DF4  2E10               	goto	l339
  3231  0DF5                     l3651:	
  3232                           
  3233                           ; Switch size 1, requested type "simple"
  3234                           ; Number of cases is 3, Range of values is 0 to 2
  3235                           ; switch strategies available:
  3236                           ; Name         Instructions Cycles
  3237                           ; simple_byte           10     6 (average)
  3238                           ; direct_byte           17     8 (fixed)
  3239                           ; jumptable            260     6 (fixed)
  3240                           ;	Chosen strategy is simple_byte
  3241  0DF5  0825               	movf	??_luciSemaforo,w
  3242  0DF6  3A00               	xorlw	0	; case 0
  3243  0DF7  1903               	skipnz
  3244  0DF8  2DE1               	goto	l335
  3245  0DF9  3A01               	xorlw	1	; case 1
  3246  0DFA  1903               	skipnz
  3247  0DFB  2DE5               	goto	l337
  3248  0DFC  3A03               	xorlw	3	; case 2
  3249  0DFD  1903               	skipnz
  3250  0DFE  2DE9               	goto	l338
  3251  0DFF  2E10               	goto	l339
  3252  0E00                     l3227:	
  3253  0E00  0827               	movf	luciSemaforo@index,w
  3254  0E01  00A5               	movwf	??_luciSemaforo
  3255  0E02  01A6               	clrf	??_luciSemaforo+1
  3256                           
  3257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3258                           ; Switch size 1, requested type "simple"
  3259                           ; Number of cases is 1, Range of values is 0 to 0
  3260                           ; switch strategies available:
  3261                           ; Name         Instructions Cycles
  3262                           ; simple_byte            4     3 (average)
  3263                           ; direct_byte           11     8 (fixed)
  3264                           ; jumptable            260     6 (fixed)
  3265                           ;	Chosen strategy is simple_byte
  3266  0E03  0826               	movf	??_luciSemaforo+1,w
  3267  0E04  3A00               	xorlw	0	; case 0
  3268  0E05  1903               	skipnz
  3269  0E06  2E08               	goto	l3653
  3270  0E07  2E10               	goto	l339
  3271  0E08                     l3653:	
  3272                           
  3273                           ; Switch size 1, requested type "simple"
  3274                           ; Number of cases is 2, Range of values is 0 to 1
  3275                           ; switch strategies available:
  3276                           ; Name         Instructions Cycles
  3277                           ; simple_byte            7     4 (average)
  3278                           ; direct_byte           14     8 (fixed)
  3279                           ; jumptable            260     6 (fixed)
  3280                           ;	Chosen strategy is simple_byte
  3281  0E08  0825               	movf	??_luciSemaforo,w
  3282  0E09  3A00               	xorlw	0	; case 0
  3283  0E0A  1903               	skipnz
  3284  0E0B  2DCE               	goto	l3219
  3285  0E0C  3A01               	xorlw	1	; case 1
  3286  0E0D  1903               	skipnz
  3287  0E0E  2DED               	goto	l3223
  3288  0E0F  2E10               	goto	l339
  3289  0E10                     l339:	
  3290  0E10  0008               	return
  3291  0E11                     __end_of_luciSemaforo:	
  3292                           
  3293                           	psect	text7
  3294  0C14                     __ptext7:	
  3295 ;; *************** function _init_ADC *****************
  3296 ;; Defined at:
  3297 ;;		line 322 in file "main.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0
  3313 ;;      Temps:          0       1       0       0       0
  3314 ;;      Totals:         0       1       0       0       0
  3315 ;;Total ram usage:        1 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    3
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _init_ADC
  3327  0C14                     _init_ADC:	
  3328  0C14                     l3147:	
  3329                           ;incstack = 0
  3330                           ; Regs used in _init_ADC: [wreg+status,2]
  3331                           
  3332                           
  3333                           ;main.c: 324:     TRISA = 0xE3;
  3334  0C14  30E3               	movlw	227
  3335  0C15  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0C16  1303               	bcf	3,6	;RP1=0, select bank1
  3337  0C17  0085               	movwf	5	;volatile
  3338  0C18                     l3149:	
  3339                           
  3340                           ;main.c: 325:     ADCON0 = 0x00;
  3341  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0C1A  019F               	clrf	31	;volatile
  3344  0C1B                     l3151:	
  3345                           
  3346                           ;main.c: 326:     ADCON1 = 0x80;
  3347  0C1B  3080               	movlw	128
  3348  0C1C  1683               	bsf	3,5	;RP0=1, select bank1
  3349  0C1D  1303               	bcf	3,6	;RP1=0, select bank1
  3350  0C1E  009F               	movwf	31	;volatile
  3351  0C1F                     l3153:	
  3352                           
  3353                           ;main.c: 327:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3354  0C1F  3019               	movlw	25
  3355  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0C22  00A4               	movwf	??_init_ADC
  3358  0C23                     u2947:	
  3359  0C23  0BA4               	decfsz	??_init_ADC,f
  3360  0C24  2C23               	goto	u2947
  3361  0C25  2C26               	nop2
  3362  0C26                     l279:	
  3363  0C26  0008               	return
  3364  0C27                     __end_of_init_ADC:	
  3365                           
  3366                           	psect	text8
  3367  0CF2                     __ptext8:	
  3368 ;; *************** function _UART_Init *****************
  3369 ;; Defined at:
  3370 ;;		line 341 in file "main.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  baudrate        2   19[BANK0 ] int 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, pclath, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         0       2       0       0       0
  3385 ;;      Locals:         0       0       0       0       0
  3386 ;;      Temps:          0       4       0       0       0
  3387 ;;      Totals:         0       6       0       0       0
  3388 ;;Total ram usage:        6 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    4
  3391 ;; This function calls:
  3392 ;;		___aldiv
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           
  3399                           ;psect for function _UART_Init
  3400  0CF2                     _UART_Init:	
  3401  0CF2                     l3155:	
  3402                           ;incstack = 0
  3403                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3404                           
  3405                           
  3406                           ;main.c: 341: void UART_Init(int baudrate);main.c: 342: {;main.c: 343:     TRISCbits.TRI
      +                          SC6 = 0;
  3407  0CF2  1683               	bsf	3,5	;RP0=1, select bank1
  3408  0CF3  1303               	bcf	3,6	;RP1=0, select bank1
  3409  0CF4  1307               	bcf	7,6	;volatile
  3410                           
  3411                           ;main.c: 344:     TXSTAbits.TXEN = 1;
  3412  0CF5  1698               	bsf	24,5	;volatile
  3413                           
  3414                           ;main.c: 345:     RCSTAbits.SPEN = 1;
  3415  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0CF8  1798               	bsf	24,7	;volatile
  3418                           
  3419                           ;main.c: 346:     RCSTAbits.CREN = 1;
  3420  0CF9  1618               	bsf	24,4	;volatile
  3421  0CFA                     l3157:	
  3422                           
  3423                           ;main.c: 347:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3424  0CFA  0833               	movf	UART_Init@baudrate,w
  3425  0CFB  00B5               	movwf	??_UART_Init
  3426  0CFC  0834               	movf	UART_Init@baudrate+1,w
  3427  0CFD  00B6               	movwf	??_UART_Init+1
  3428  0CFE  3000               	movlw	0
  3429  0CFF  1BB6               	btfsc	??_UART_Init+1,7
  3430  0D00  30FF               	movlw	255
  3431  0D01  00B7               	movwf	??_UART_Init+2
  3432  0D02  00B8               	movwf	??_UART_Init+3
  3433  0D03  3006               	movlw	6
  3434  0D04                     u2645:	
  3435  0D04  1003               	clrc
  3436  0D05  0DB5               	rlf	??_UART_Init,f
  3437  0D06  0DB6               	rlf	??_UART_Init+1,f
  3438  0D07  0DB7               	rlf	??_UART_Init+2,f
  3439  0D08  0DB8               	rlf	??_UART_Init+3,f
  3440  0D09                     u2640:	
  3441  0D09  3EFF               	addlw	-1
  3442  0D0A  1D03               	skipz
  3443  0D0B  2D04               	goto	u2645
  3444  0D0C  0838               	movf	??_UART_Init+3,w
  3445  0D0D  00A7               	movwf	___aldiv@divisor+3
  3446  0D0E  0837               	movf	??_UART_Init+2,w
  3447  0D0F  00A6               	movwf	___aldiv@divisor+2
  3448  0D10  0836               	movf	??_UART_Init+1,w
  3449  0D11  00A5               	movwf	___aldiv@divisor+1
  3450  0D12  0835               	movf	??_UART_Init,w
  3451  0D13  00A4               	movwf	___aldiv@divisor
  3452  0D14  3001               	movlw	1
  3453  0D15  00AB               	movwf	___aldiv@dividend+3
  3454  0D16  30E8               	movlw	232
  3455  0D17  00AA               	movwf	___aldiv@dividend+2
  3456  0D18  3048               	movlw	72
  3457  0D19  00A9               	movwf	___aldiv@dividend+1
  3458  0D1A  3000               	movlw	0
  3459  0D1B  00A8               	movwf	___aldiv@dividend
  3460  0D1C  120A  118A  261B  120A  158A  	fcall	___aldiv
  3461  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0D23  0824               	movf	?___aldiv,w
  3464  0D24  3EFF               	addlw	255
  3465  0D25  1683               	bsf	3,5	;RP0=1, select bank1
  3466  0D26  1303               	bcf	3,6	;RP1=0, select bank1
  3467  0D27  0099               	movwf	25	;volatile
  3468  0D28                     l3159:	
  3469                           
  3470                           ;main.c: 348:     INTCONbits.GIE = 1;
  3471  0D28  178B               	bsf	11,7	;volatile
  3472  0D29                     l3161:	
  3473                           
  3474                           ;main.c: 349:     INTCONbits.PEIE = 1;
  3475  0D29  170B               	bsf	11,6	;volatile
  3476  0D2A                     l3163:	
  3477                           
  3478                           ;main.c: 350:     PIE1bits.RCIE = 1;
  3479  0D2A  168C               	bsf	12,5	;volatile
  3480  0D2B                     l288:	
  3481  0D2B  0008               	return
  3482  0D2C                     __end_of_UART_Init:	
  3483                           
  3484                           	psect	text9
  3485  061B                     __ptext9:	
  3486 ;; *************** function ___aldiv *****************
  3487 ;; Defined at:
  3488 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  divisor         4    4[BANK0 ] long 
  3491 ;;  dividend        4    8[BANK0 ] long 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  quotient        4   15[BANK0 ] long 
  3494 ;;  sign            1   14[BANK0 ] unsigned char 
  3495 ;;  counter         1   13[BANK0 ] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  4    4[BANK0 ] long 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       8       0       0       0
  3506 ;;      Locals:         0       6       0       0       0
  3507 ;;      Temps:          0       1       0       0       0
  3508 ;;      Totals:         0      15       0       0       0
  3509 ;;Total ram usage:       15 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    3
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_UART_Init
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           
  3520                           ;psect for function ___aldiv
  3521  061B                     ___aldiv:	
  3522  061B                     l2953:	
  3523                           ;incstack = 0
  3524                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3525                           
  3526  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3527  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3528  061D  01AE               	clrf	___aldiv@sign
  3529  061E                     l2955:	
  3530  061E  1FA7               	btfss	___aldiv@divisor+3,7
  3531  061F  2E21               	goto	u2291
  3532  0620  2E22               	goto	u2290
  3533  0621                     u2291:	
  3534  0621  2E2F               	goto	l512
  3535  0622                     u2290:	
  3536  0622                     l2957:	
  3537  0622  09A4               	comf	___aldiv@divisor,f
  3538  0623  09A5               	comf	___aldiv@divisor+1,f
  3539  0624  09A6               	comf	___aldiv@divisor+2,f
  3540  0625  09A7               	comf	___aldiv@divisor+3,f
  3541  0626  0AA4               	incf	___aldiv@divisor,f
  3542  0627  1903               	skipnz
  3543  0628  0AA5               	incf	___aldiv@divisor+1,f
  3544  0629  1903               	skipnz
  3545  062A  0AA6               	incf	___aldiv@divisor+2,f
  3546  062B  1903               	skipnz
  3547  062C  0AA7               	incf	___aldiv@divisor+3,f
  3548  062D  01AE               	clrf	___aldiv@sign
  3549  062E  0AAE               	incf	___aldiv@sign,f
  3550  062F                     l512:	
  3551  062F  1FAB               	btfss	___aldiv@dividend+3,7
  3552  0630  2E32               	goto	u2301
  3553  0631  2E33               	goto	u2300
  3554  0632                     u2301:	
  3555  0632  2E42               	goto	l2963
  3556  0633                     u2300:	
  3557  0633                     l2959:	
  3558  0633  09A8               	comf	___aldiv@dividend,f
  3559  0634  09A9               	comf	___aldiv@dividend+1,f
  3560  0635  09AA               	comf	___aldiv@dividend+2,f
  3561  0636  09AB               	comf	___aldiv@dividend+3,f
  3562  0637  0AA8               	incf	___aldiv@dividend,f
  3563  0638  1903               	skipnz
  3564  0639  0AA9               	incf	___aldiv@dividend+1,f
  3565  063A  1903               	skipnz
  3566  063B  0AAA               	incf	___aldiv@dividend+2,f
  3567  063C  1903               	skipnz
  3568  063D  0AAB               	incf	___aldiv@dividend+3,f
  3569  063E                     l2961:	
  3570  063E  3001               	movlw	1
  3571  063F  00AC               	movwf	??___aldiv
  3572  0640  082C               	movf	??___aldiv,w
  3573  0641  06AE               	xorwf	___aldiv@sign,f
  3574  0642                     l2963:	
  3575  0642  3000               	movlw	0
  3576  0643  00B2               	movwf	___aldiv@quotient+3
  3577  0644  3000               	movlw	0
  3578  0645  00B1               	movwf	___aldiv@quotient+2
  3579  0646  3000               	movlw	0
  3580  0647  00B0               	movwf	___aldiv@quotient+1
  3581  0648  3000               	movlw	0
  3582  0649  00AF               	movwf	___aldiv@quotient
  3583  064A                     l2965:	
  3584  064A  0827               	movf	___aldiv@divisor+3,w
  3585  064B  0426               	iorwf	___aldiv@divisor+2,w
  3586  064C  0425               	iorwf	___aldiv@divisor+1,w
  3587  064D  0424               	iorwf	___aldiv@divisor,w
  3588  064E  1903               	skipnz
  3589  064F  2E51               	goto	u2311
  3590  0650  2E52               	goto	u2310
  3591  0651                     u2311:	
  3592  0651  2E9F               	goto	l2985
  3593  0652                     u2310:	
  3594  0652                     l2967:	
  3595  0652  01AD               	clrf	___aldiv@counter
  3596  0653  0AAD               	incf	___aldiv@counter,f
  3597  0654  2E62               	goto	l2971
  3598  0655                     l2969:	
  3599  0655  3001               	movlw	1
  3600  0656  00AC               	movwf	??___aldiv
  3601  0657                     u2325:	
  3602  0657  1003               	clrc
  3603  0658  0DA4               	rlf	___aldiv@divisor,f
  3604  0659  0DA5               	rlf	___aldiv@divisor+1,f
  3605  065A  0DA6               	rlf	___aldiv@divisor+2,f
  3606  065B  0DA7               	rlf	___aldiv@divisor+3,f
  3607  065C  0BAC               	decfsz	??___aldiv,f
  3608  065D  2E57               	goto	u2325
  3609  065E  3001               	movlw	1
  3610  065F  00AC               	movwf	??___aldiv
  3611  0660  082C               	movf	??___aldiv,w
  3612  0661  07AD               	addwf	___aldiv@counter,f
  3613  0662                     l2971:	
  3614  0662  1FA7               	btfss	___aldiv@divisor+3,7
  3615  0663  2E65               	goto	u2331
  3616  0664  2E66               	goto	u2330
  3617  0665                     u2331:	
  3618  0665  2E55               	goto	l2969
  3619  0666                     u2330:	
  3620  0666                     l2973:	
  3621  0666  3001               	movlw	1
  3622  0667  00AC               	movwf	??___aldiv
  3623  0668                     u2345:	
  3624  0668  1003               	clrc
  3625  0669  0DAF               	rlf	___aldiv@quotient,f
  3626  066A  0DB0               	rlf	___aldiv@quotient+1,f
  3627  066B  0DB1               	rlf	___aldiv@quotient+2,f
  3628  066C  0DB2               	rlf	___aldiv@quotient+3,f
  3629  066D  0BAC               	decfsz	??___aldiv,f
  3630  066E  2E68               	goto	u2345
  3631  066F                     l2975:	
  3632  066F  0827               	movf	___aldiv@divisor+3,w
  3633  0670  022B               	subwf	___aldiv@dividend+3,w
  3634  0671  1D03               	skipz
  3635  0672  2E7D               	goto	u2355
  3636  0673  0826               	movf	___aldiv@divisor+2,w
  3637  0674  022A               	subwf	___aldiv@dividend+2,w
  3638  0675  1D03               	skipz
  3639  0676  2E7D               	goto	u2355
  3640  0677  0825               	movf	___aldiv@divisor+1,w
  3641  0678  0229               	subwf	___aldiv@dividend+1,w
  3642  0679  1D03               	skipz
  3643  067A  2E7D               	goto	u2355
  3644  067B  0824               	movf	___aldiv@divisor,w
  3645  067C  0228               	subwf	___aldiv@dividend,w
  3646  067D                     u2355:	
  3647  067D  1C03               	skipc
  3648  067E  2E80               	goto	u2351
  3649  067F  2E81               	goto	u2350
  3650  0680                     u2351:	
  3651  0680  2E90               	goto	l2981
  3652  0681                     u2350:	
  3653  0681                     l2977:	
  3654  0681  0824               	movf	___aldiv@divisor,w
  3655  0682  02A8               	subwf	___aldiv@dividend,f
  3656  0683  0825               	movf	___aldiv@divisor+1,w
  3657  0684  1C03               	skipc
  3658  0685  0F25               	incfsz	___aldiv@divisor+1,w
  3659  0686  02A9               	subwf	___aldiv@dividend+1,f
  3660  0687  0826               	movf	___aldiv@divisor+2,w
  3661  0688  1C03               	skipc
  3662  0689  0F26               	incfsz	___aldiv@divisor+2,w
  3663  068A  02AA               	subwf	___aldiv@dividend+2,f
  3664  068B  0827               	movf	___aldiv@divisor+3,w
  3665  068C  1C03               	skipc
  3666  068D  0F27               	incfsz	___aldiv@divisor+3,w
  3667  068E  02AB               	subwf	___aldiv@dividend+3,f
  3668  068F                     l2979:	
  3669  068F  142F               	bsf	___aldiv@quotient,0
  3670  0690                     l2981:	
  3671  0690  3001               	movlw	1
  3672  0691                     u2365:	
  3673  0691  1003               	clrc
  3674  0692  0CA7               	rrf	___aldiv@divisor+3,f
  3675  0693  0CA6               	rrf	___aldiv@divisor+2,f
  3676  0694  0CA5               	rrf	___aldiv@divisor+1,f
  3677  0695  0CA4               	rrf	___aldiv@divisor,f
  3678  0696  3EFF               	addlw	-1
  3679  0697  1D03               	skipz
  3680  0698  2E91               	goto	u2365
  3681  0699                     l2983:	
  3682  0699  3001               	movlw	1
  3683  069A  02AD               	subwf	___aldiv@counter,f
  3684  069B  1D03               	btfss	3,2
  3685  069C  2E9E               	goto	u2371
  3686  069D  2E9F               	goto	u2370
  3687  069E                     u2371:	
  3688  069E  2E66               	goto	l2973
  3689  069F                     u2370:	
  3690  069F                     l2985:	
  3691  069F  082E               	movf	___aldiv@sign,w
  3692  06A0  1903               	btfsc	3,2
  3693  06A1  2EA3               	goto	u2381
  3694  06A2  2EA4               	goto	u2380
  3695  06A3                     u2381:	
  3696  06A3  2EAF               	goto	l2989
  3697  06A4                     u2380:	
  3698  06A4                     l2987:	
  3699  06A4  09AF               	comf	___aldiv@quotient,f
  3700  06A5  09B0               	comf	___aldiv@quotient+1,f
  3701  06A6  09B1               	comf	___aldiv@quotient+2,f
  3702  06A7  09B2               	comf	___aldiv@quotient+3,f
  3703  06A8  0AAF               	incf	___aldiv@quotient,f
  3704  06A9  1903               	skipnz
  3705  06AA  0AB0               	incf	___aldiv@quotient+1,f
  3706  06AB  1903               	skipnz
  3707  06AC  0AB1               	incf	___aldiv@quotient+2,f
  3708  06AD  1903               	skipnz
  3709  06AE  0AB2               	incf	___aldiv@quotient+3,f
  3710  06AF                     l2989:	
  3711  06AF  0832               	movf	___aldiv@quotient+3,w
  3712  06B0  00A7               	movwf	?___aldiv+3
  3713  06B1  0831               	movf	___aldiv@quotient+2,w
  3714  06B2  00A6               	movwf	?___aldiv+2
  3715  06B3  0830               	movf	___aldiv@quotient+1,w
  3716  06B4  00A5               	movwf	?___aldiv+1
  3717  06B5  082F               	movf	___aldiv@quotient,w
  3718  06B6  00A4               	movwf	?___aldiv
  3719  06B7                     l522:	
  3720  06B7  0008               	return
  3721  06B8                     __end_of___aldiv:	
  3722                           
  3723                           	psect	text10
  3724  0754                     __ptext10:	
  3725 ;; *************** function _ShowDigitsOnDisplay *****************
  3726 ;; Defined at:
  3727 ;;		line 466 in file "main.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3741 ;;      Params:         0       0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0
  3743 ;;      Temps:          0       2       0       0       0
  3744 ;;      Totals:         0       2       0       0       0
  3745 ;;Total ram usage:        2 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    4
  3748 ;; This function calls:
  3749 ;;		_SetDisplay
  3750 ;;		___awmod
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _ShowDigitsOnDisplay
  3758  0754                     _ShowDigitsOnDisplay:	
  3759  0754                     l3191:	
  3760                           ;incstack = 0
  3761                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3762                           
  3763                           
  3764                           ;main.c: 468:     switch (disp)
  3765  0754  2FA2               	goto	l3207
  3766  0755                     l3193:	
  3767                           
  3768                           ;main.c: 471:         if (centinaia > 0)
  3769  0755  0864               	movf	_centinaia,w
  3770  0756  1903               	btfsc	3,2
  3771  0757  2F59               	goto	u2681
  3772  0758  2F5A               	goto	u2680
  3773  0759                     u2681:	
  3774  0759  2FB7               	goto	l3209
  3775  075A                     u2680:	
  3776  075A                     l3195:	
  3777                           
  3778                           ;main.c: 472:         {;main.c: 473:             SetDisplay(1, 0, 0, display[centinaia])
      +                          ;
  3779  075A  01A4               	clrf	SetDisplay@d2
  3780  075B  01A5               	clrf	SetDisplay@d3
  3781  075C  0864               	movf	_centinaia,w
  3782  075D  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3783  075E  0084               	movwf	4
  3784  075F  120A  158A  2000  120A  118A  	fcall	stringdir
  3785  0764  00AB               	movwf	??_ShowDigitsOnDisplay
  3786  0765  082B               	movf	??_ShowDigitsOnDisplay,w
  3787  0766  00A6               	movwf	SetDisplay@value
  3788  0767  3001               	movlw	1
  3789  0768  120A  158A  243A  120A  118A  	fcall	_SetDisplay
  3790  076D  2FB7               	goto	l3209
  3791  076E                     l3197:	
  3792                           
  3793                           ;main.c: 477:         if (decine > 0 || centinaia > 0)
  3794  076E  0865               	movf	_decine,w
  3795  076F  1D03               	btfss	3,2
  3796  0770  2F72               	goto	u2691
  3797  0771  2F73               	goto	u2690
  3798  0772                     u2691:	
  3799  0772  2F78               	goto	l3201
  3800  0773                     u2690:	
  3801  0773                     l3199:	
  3802  0773  0864               	movf	_centinaia,w
  3803  0774  1903               	btfsc	3,2
  3804  0775  2F77               	goto	u2701
  3805  0776  2F78               	goto	u2700
  3806  0777                     u2701:	
  3807  0777  2FB7               	goto	l3209
  3808  0778                     u2700:	
  3809  0778                     l3201:	
  3810                           
  3811                           ;main.c: 478:         {;main.c: 479:             SetDisplay(0, 1, 0, display[decine]);
  3812  0778  01A4               	clrf	SetDisplay@d2
  3813  0779  0AA4               	incf	SetDisplay@d2,f
  3814  077A  01A5               	clrf	SetDisplay@d3
  3815  077B  0865               	movf	_decine,w
  3816  077C  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3817  077D  0084               	movwf	4
  3818  077E  120A  158A  2000  120A  118A  	fcall	stringdir
  3819  0783  00AB               	movwf	??_ShowDigitsOnDisplay
  3820  0784  082B               	movf	??_ShowDigitsOnDisplay,w
  3821  0785  00A6               	movwf	SetDisplay@value
  3822  0786  3000               	movlw	0
  3823  0787  120A  158A  243A  120A  118A  	fcall	_SetDisplay
  3824  078C  2FB7               	goto	l3209
  3825  078D                     l3203:	
  3826                           
  3827                           ;main.c: 483:         SetDisplay(0, 0, 1, display[unita]);
  3828  078D  01A4               	clrf	SetDisplay@d2
  3829  078E  01A5               	clrf	SetDisplay@d3
  3830  078F  0AA5               	incf	SetDisplay@d3,f
  3831  0790  0866               	movf	_unita,w
  3832  0791  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3833  0792  0084               	movwf	4
  3834  0793  120A  158A  2000  120A  118A  	fcall	stringdir
  3835  0798  00AB               	movwf	??_ShowDigitsOnDisplay
  3836  0799  082B               	movf	??_ShowDigitsOnDisplay,w
  3837  079A  00A6               	movwf	SetDisplay@value
  3838  079B  3000               	movlw	0
  3839  079C  120A  158A  243A  120A  118A  	fcall	_SetDisplay
  3840                           
  3841                           ;main.c: 484:         break;
  3842  07A1  2FB7               	goto	l3209
  3843  07A2                     l3207:	
  3844  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  3845  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  3846  07A4  0853               	movf	_disp,w
  3847  07A5  00AB               	movwf	??_ShowDigitsOnDisplay
  3848  07A6  01AC               	clrf	??_ShowDigitsOnDisplay+1
  3849                           
  3850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3851                           ; Switch size 1, requested type "simple"
  3852                           ; Number of cases is 1, Range of values is 0 to 0
  3853                           ; switch strategies available:
  3854                           ; Name         Instructions Cycles
  3855                           ; simple_byte            4     3 (average)
  3856                           ; direct_byte           11     8 (fixed)
  3857                           ; jumptable            260     6 (fixed)
  3858                           ;	Chosen strategy is simple_byte
  3859  07A7  082C               	movf	??_ShowDigitsOnDisplay+1,w
  3860  07A8  3A00               	xorlw	0	; case 0
  3861  07A9  1903               	skipnz
  3862  07AA  2FAC               	goto	l3655
  3863  07AB  2FB7               	goto	l3209
  3864  07AC                     l3655:	
  3865                           
  3866                           ; Switch size 1, requested type "simple"
  3867                           ; Number of cases is 3, Range of values is 0 to 2
  3868                           ; switch strategies available:
  3869                           ; Name         Instructions Cycles
  3870                           ; simple_byte           10     6 (average)
  3871                           ; direct_byte           17     8 (fixed)
  3872                           ; jumptable            260     6 (fixed)
  3873                           ;	Chosen strategy is simple_byte
  3874  07AC  082B               	movf	??_ShowDigitsOnDisplay,w
  3875  07AD  3A00               	xorlw	0	; case 0
  3876  07AE  1903               	skipnz
  3877  07AF  2F55               	goto	l3193
  3878  07B0  3A01               	xorlw	1	; case 1
  3879  07B1  1903               	skipnz
  3880  07B2  2F6E               	goto	l3197
  3881  07B3  3A03               	xorlw	3	; case 2
  3882  07B4  1903               	skipnz
  3883  07B5  2F8D               	goto	l3203
  3884  07B6  2FB7               	goto	l3209
  3885  07B7                     l3209:	
  3886                           
  3887                           ;main.c: 486:     disp = (disp + 1) % 3;
  3888  07B7  3003               	movlw	3
  3889  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3890  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3891  07BA  00A4               	movwf	___awmod@divisor
  3892  07BB  3000               	movlw	0
  3893  07BC  00A5               	movwf	___awmod@divisor+1
  3894  07BD  0853               	movf	_disp,w
  3895  07BE  3E01               	addlw	1
  3896  07BF  00A6               	movwf	___awmod@dividend
  3897  07C0  3000               	movlw	0
  3898  07C1  1803               	skipnc
  3899  07C2  3001               	movlw	1
  3900  07C3  00A7               	movwf	___awmod@dividend+1
  3901  07C4  120A  158A  2669  120A  118A  	fcall	___awmod
  3902  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  3903  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  3904  07CB  0824               	movf	?___awmod,w
  3905  07CC  00AB               	movwf	??_ShowDigitsOnDisplay
  3906  07CD  082B               	movf	??_ShowDigitsOnDisplay,w
  3907  07CE  00D3               	movwf	_disp
  3908  07CF                     l351:	
  3909  07CF  0008               	return
  3910  07D0                     __end_of_ShowDigitsOnDisplay:	
  3911                           
  3912                           	psect	text11
  3913  0C3A                     __ptext11:	
  3914 ;; *************** function _SetDisplay *****************
  3915 ;; Defined at:
  3916 ;;		line 389 in file "main.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  d1              1    wreg     unsigned char 
  3919 ;;  d2              1    4[BANK0 ] unsigned char 
  3920 ;;  d3              1    5[BANK0 ] unsigned char 
  3921 ;;  value           1    6[BANK0 ] unsigned char 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  d1              1    7[BANK0 ] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         0       3       0       0       0
  3934 ;;      Locals:         0       1       0       0       0
  3935 ;;      Temps:          0       0       0       0       0
  3936 ;;      Totals:         0       4       0       0       0
  3937 ;;Total ram usage:        4 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    3
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_ShowDigitsOnDisplay
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           
  3948                           ;psect for function _SetDisplay
  3949  0C3A                     _SetDisplay:	
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _SetDisplay: [wreg+status,0]
  3953                           ;SetDisplay@d1 stored from wreg
  3954  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  3955  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  3956  0C3C  00A7               	movwf	SetDisplay@d1
  3957  0C3D                     l2921:	
  3958                           
  3959                           ;main.c: 389: void SetDisplay(char d1, char d2, char d3, char value);main.c: 390: {;main
      +                          .c: 391:     PORTAbits.RA2 = d1;
  3960  0C3D  0C27               	rrf	SetDisplay@d1,w
  3961  0C3E  1C03               	skipc
  3962  0C3F  1105               	bcf	5,2	;volatile
  3963  0C40  1803               	skipnc
  3964  0C41  1505               	bsf	5,2	;volatile
  3965                           
  3966                           ;main.c: 392:     PORTAbits.RA3 = d2;
  3967  0C42  0C24               	rrf	SetDisplay@d2,w
  3968  0C43  1C03               	skipc
  3969  0C44  1185               	bcf	5,3	;volatile
  3970  0C45  1803               	skipnc
  3971  0C46  1585               	bsf	5,3	;volatile
  3972                           
  3973                           ;main.c: 393:     PORTAbits.RA4 = d3;
  3974  0C47  0C25               	rrf	SetDisplay@d3,w
  3975  0C48  1C03               	skipc
  3976  0C49  1205               	bcf	5,4	;volatile
  3977  0C4A  1803               	skipnc
  3978  0C4B  1605               	bsf	5,4	;volatile
  3979  0C4C                     l2923:	
  3980                           
  3981                           ;main.c: 394:     PORTD = value;
  3982  0C4C  0826               	movf	SetDisplay@value,w
  3983  0C4D  0088               	movwf	8	;volatile
  3984  0C4E                     l314:	
  3985  0C4E  0008               	return
  3986  0C4F                     __end_of_SetDisplay:	
  3987                           
  3988                           	psect	text12
  3989  0F92                     __ptext12:	
  3990 ;; *************** function _SetReceivedTimes *****************
  3991 ;; Defined at:
  3992 ;;		line 78 in file "./CustomLib/TrafficLight.h"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  3995 ;;		 -> dataFromGateway(15), 
  3996 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  3997 ;;		 -> Semafori(16), 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  _dataFromGat    1   23[BANK0 ] PTR unsigned char 
  4000 ;;		 -> dataFromGateway(15), 
  4001 ;;  index           1   24[BANK0 ] unsigned char 
  4002 ;;  colorId         1   22[BANK0 ] unsigned char 
  4003 ;;  semaforoId      1   21[BANK0 ] unsigned char 
  4004 ;;  i               1   25[BANK0 ] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4014 ;;      Params:         0       1       0       0       0
  4015 ;;      Locals:         0       5       0       0       0
  4016 ;;      Temps:          0       8       0       0       0
  4017 ;;      Totals:         0      14       0       0       0
  4018 ;;Total ram usage:       14 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    4
  4021 ;; This function calls:
  4022 ;;		_GetTime
  4023 ;;		___bmul
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           
  4030                           ;psect for function _SetReceivedTimes
  4031  0F92                     _SetReceivedTimes:	
  4032                           
  4033                           ;incstack = 0
  4034                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4035                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4036  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4037  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4038  0F94  00B7               	movwf	SetReceivedTimes@_dataFromGateway
  4039  0F95                     l3129:	
  4040                           
  4041                           ;./CustomLib/TrafficLight.h: 78: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 79: {;./CustomLib/TrafficLight.h: 80:   
      +                                        for (unsigned char i = 0; i < 3; i++)
  4042  0F95  01B9               	clrf	SetReceivedTimes@i
  4043  0F96                     l3131:	
  4044  0F96  3003               	movlw	3
  4045  0F97  0239               	subwf	SetReceivedTimes@i,w
  4046  0F98  1C03               	skipc
  4047  0F99  2F9B               	goto	u2621
  4048  0F9A  2F9C               	goto	u2620
  4049  0F9B                     u2621:	
  4050  0F9B  2F9D               	goto	l3135
  4051  0F9C                     u2620:	
  4052  0F9C  2FFF               	goto	l167
  4053  0F9D                     l3135:	
  4054                           
  4055                           ;./CustomLib/TrafficLight.h: 81:                 {;./CustomLib/TrafficLight.h: 82:      
      +                                         unsigned char index = i * 5;
  4056  0F9D  3005               	movlw	5
  4057  0F9E  00AD               	movwf	??_SetReceivedTimes
  4058  0F9F  082D               	movf	??_SetReceivedTimes,w
  4059  0FA0  00A4               	movwf	___bmul@multiplicand
  4060  0FA1  0839               	movf	SetReceivedTimes@i,w
  4061  0FA2  120A  158A  244F  120A  158A  	fcall	___bmul
  4062  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  4063  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  4064  0FA9  00AE               	movwf	??_SetReceivedTimes+1
  4065  0FAA  082E               	movf	??_SetReceivedTimes+1,w
  4066  0FAB  00B8               	movwf	SetReceivedTimes@index
  4067  0FAC                     l3137:	
  4068                           
  4069                           ;./CustomLib/TrafficLight.h: 83:                     unsigned char semaforoId = (_dataFr
      +                          omGateway[index] >> 1) & 0x0F;
  4070  0FAC  0838               	movf	SetReceivedTimes@index,w
  4071  0FAD  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4072  0FAE  00AD               	movwf	??_SetReceivedTimes
  4073  0FAF  082D               	movf	??_SetReceivedTimes,w
  4074  0FB0  0084               	movwf	4
  4075  0FB1  1383               	bcf	3,7	;select IRP bank0
  4076  0FB2  0800               	movf	0,w
  4077  0FB3  00AE               	movwf	??_SetReceivedTimes+1
  4078  0FB4  1003               	clrc
  4079  0FB5  0C2E               	rrf	??_SetReceivedTimes+1,w
  4080  0FB6  390F               	andlw	15
  4081  0FB7  00AF               	movwf	??_SetReceivedTimes+2
  4082  0FB8  082F               	movf	??_SetReceivedTimes+2,w
  4083  0FB9  00B5               	movwf	SetReceivedTimes@semaforoId
  4084  0FBA                     l3139:	
  4085                           
  4086                           ;./CustomLib/TrafficLight.h: 84:                     unsigned char colorId = ((_dataFrom
      +                          Gateway[index] >> 5) & 0x03) - 1;
  4087  0FBA  0838               	movf	SetReceivedTimes@index,w
  4088  0FBB  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4089  0FBC  00AD               	movwf	??_SetReceivedTimes
  4090  0FBD  082D               	movf	??_SetReceivedTimes,w
  4091  0FBE  0084               	movwf	4
  4092  0FBF  0800               	movf	0,w
  4093  0FC0  00AE               	movwf	??_SetReceivedTimes+1
  4094  0FC1  3005               	movlw	5
  4095  0FC2                     u2635:	
  4096  0FC2  1003               	clrc
  4097  0FC3  0CAE               	rrf	??_SetReceivedTimes+1,f
  4098  0FC4  3EFF               	addlw	-1
  4099  0FC5  1D03               	skipz
  4100  0FC6  2FC2               	goto	u2635
  4101  0FC7  082E               	movf	??_SetReceivedTimes+1,w
  4102  0FC8  3903               	andlw	3
  4103  0FC9  3EFF               	addlw	255
  4104  0FCA  00AF               	movwf	??_SetReceivedTimes+2
  4105  0FCB  082F               	movf	??_SetReceivedTimes+2,w
  4106  0FCC  00B6               	movwf	SetReceivedTimes@colorId
  4107  0FCD                     l3141:	
  4108                           
  4109                           ;./CustomLib/TrafficLight.h: 86:                     (*(_semafori)[semaforoId]).new_time
      +                          s[colorId]=GetTime(index, _dataFromGateway);
  4110  0FCD  0837               	movf	SetReceivedTimes@_dataFromGateway,w
  4111  0FCE  00AD               	movwf	??_SetReceivedTimes
  4112  0FCF  082D               	movf	??_SetReceivedTimes,w
  4113  0FD0  00A4               	movwf	GetTime@_dataFromGateway
  4114  0FD1  0838               	movf	SetReceivedTimes@index,w
  4115  0FD2  120A  158A  252C  120A  158A  	fcall	_GetTime
  4116  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0FD9  0835               	movf	SetReceivedTimes@semaforoId,w
  4119  0FDA  00AE               	movwf	??_SetReceivedTimes+1
  4120  0FDB  072E               	addwf	??_SetReceivedTimes+1,w
  4121  0FDC  072C               	addwf	SetReceivedTimes@_semafori,w
  4122  0FDD  00AF               	movwf	??_SetReceivedTimes+2
  4123  0FDE  082F               	movf	??_SetReceivedTimes+2,w
  4124  0FDF  0084               	movwf	4
  4125  0FE0  1383               	bcf	3,7	;select IRP bank0
  4126  0FE1  0800               	movf	0,w
  4127  0FE2  00B0               	movwf	??_SetReceivedTimes+3
  4128  0FE3  0A84               	incf	4,f
  4129  0FE4  0800               	movf	0,w
  4130  0FE5  00B1               	movwf	??_SetReceivedTimes+4
  4131  0FE6  0836               	movf	SetReceivedTimes@colorId,w
  4132  0FE7  00B2               	movwf	??_SetReceivedTimes+5
  4133  0FE8  0732               	addwf	??_SetReceivedTimes+5,w
  4134  0FE9  3E06               	addlw	6
  4135  0FEA  0730               	addwf	??_SetReceivedTimes+3,w
  4136  0FEB  00B3               	movwf	??_SetReceivedTimes+6
  4137  0FEC  0831               	movf	??_SetReceivedTimes+4,w
  4138  0FED  1803               	skipnc
  4139  0FEE  3E01               	addlw	1
  4140  0FEF  00B4               	movwf	??_SetReceivedTimes+7
  4141  0FF0  0833               	movf	??_SetReceivedTimes+6,w
  4142  0FF1  0084               	movwf	4
  4143  0FF2  1783               	bsf	3,7
  4144  0FF3  1C34               	btfss	??_SetReceivedTimes+7,0
  4145  0FF4  1383               	bcf	3,7
  4146  0FF5  0824               	movf	?_GetTime,w
  4147  0FF6  0080               	movwf	0
  4148  0FF7  0A84               	incf	4,f
  4149  0FF8  0825               	movf	?_GetTime+1,w
  4150  0FF9  0080               	movwf	0
  4151  0FFA                     l3143:	
  4152                           
  4153                           ;./CustomLib/TrafficLight.h: 87:                 }
  4154  0FFA  3001               	movlw	1
  4155  0FFB  00AD               	movwf	??_SetReceivedTimes
  4156  0FFC  082D               	movf	??_SetReceivedTimes,w
  4157  0FFD  07B9               	addwf	SetReceivedTimes@i,f
  4158  0FFE  2F96               	goto	l3131
  4159  0FFF                     l167:	
  4160  0FFF  0008               	return
  4161  1000                     __end_of_SetReceivedTimes:	
  4162                           
  4163                           	psect	text13
  4164  0C4F                     __ptext13:	
  4165 ;; *************** function ___bmul *****************
  4166 ;; Defined at:
  4167 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  multiplier      1    wreg     unsigned char 
  4170 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4173 ;;  product         1    6[BANK0 ] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      unsigned char 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4183 ;;      Params:         0       1       0       0       0
  4184 ;;      Locals:         0       2       0       0       0
  4185 ;;      Temps:          0       1       0       0       0
  4186 ;;      Totals:         0       4       0       0       0
  4187 ;;Total ram usage:        4 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    3
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_SetReceivedTimes
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function ___bmul
  4199  0C4F                     ___bmul:	
  4200                           
  4201                           ;incstack = 0
  4202                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4203                           ;___bmul@multiplier stored from wreg
  4204  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  4205  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  4206  0C51  00A7               	movwf	___bmul@multiplier
  4207  0C52                     l2939:	
  4208  0C52  01A6               	clrf	___bmul@product
  4209  0C53                     l2941:	
  4210  0C53  1C27               	btfss	___bmul@multiplier,0
  4211  0C54  2C56               	goto	u2271
  4212  0C55  2C57               	goto	u2270
  4213  0C56                     u2271:	
  4214  0C56  2C5B               	goto	l2945
  4215  0C57                     u2270:	
  4216  0C57                     l2943:	
  4217  0C57  0824               	movf	___bmul@multiplicand,w
  4218  0C58  00A5               	movwf	??___bmul
  4219  0C59  0825               	movf	??___bmul,w
  4220  0C5A  07A6               	addwf	___bmul@product,f
  4221  0C5B                     l2945:	
  4222  0C5B  1003               	clrc
  4223  0C5C  0DA4               	rlf	___bmul@multiplicand,f
  4224  0C5D                     l2947:	
  4225  0C5D  1003               	clrc
  4226  0C5E  0CA7               	rrf	___bmul@multiplier,f
  4227  0C5F  0827               	movf	___bmul@multiplier,w
  4228  0C60  1D03               	btfss	3,2
  4229  0C61  2C63               	goto	u2281
  4230  0C62  2C64               	goto	u2280
  4231  0C63                     u2281:	
  4232  0C63  2C53               	goto	l2941
  4233  0C64                     u2280:	
  4234  0C64                     l2949:	
  4235  0C64  0826               	movf	___bmul@product,w
  4236  0C65                     l473:	
  4237  0C65  0008               	return
  4238  0C66                     __end_of___bmul:	
  4239                           
  4240                           	psect	text14
  4241  0D2C                     __ptext14:	
  4242 ;; *************** function _GetTime *****************
  4243 ;; Defined at:
  4244 ;;		line 29 in file "./CustomLib/TrafficLight.h"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  index           1    wreg     unsigned char 
  4247 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4248 ;;		 -> dataFromGateway(15), 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  index           1    8[BANK0 ] unsigned char 
  4251 ;;  tmp             2   10[BANK0 ] int 
  4252 ;;  shortInt        1    9[BANK0 ] struct .
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  2    4[BANK0 ] int 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         0       2       0       0       0
  4263 ;;      Locals:         0       4       0       0       0
  4264 ;;      Temps:          0       2       0       0       0
  4265 ;;      Totals:         0       8       0       0       0
  4266 ;;Total ram usage:        8 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    3
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_SetReceivedTimes
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           
  4277                           ;psect for function _GetTime
  4278  0D2C                     _GetTime:	
  4279                           
  4280                           ;incstack = 0
  4281                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4282                           ;GetTime@index stored from wreg
  4283  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0D2E  00A8               	movwf	GetTime@index
  4286  0D2F                     l2903:	
  4287                           
  4288                           ;./CustomLib/TrafficLight.h: 29: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 30: {;./CustomLib/TrafficLight.h: 31:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 35:     } shortInt;;./CustomLib/TrafficLight.h: 37:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4289  0D2F  0828               	movf	GetTime@index,w
  4290  0D30  0724               	addwf	GetTime@_dataFromGateway,w
  4291  0D31  00A6               	movwf	??_GetTime
  4292  0D32  0826               	movf	??_GetTime,w
  4293  0D33  3E03               	addlw	3
  4294  0D34  0084               	movwf	4
  4295  0D35  307F               	movlw	127
  4296  0D36  1383               	bcf	3,7	;select IRP bank0
  4297  0D37  0500               	andwf	0,w
  4298  0D38  00A7               	movwf	??_GetTime+1
  4299  0D39  0829               	movf	GetTime@shortInt,w
  4300  0D3A  0627               	xorwf	??_GetTime+1,w
  4301  0D3B  3980               	andlw	-128
  4302  0D3C  0627               	xorwf	??_GetTime+1,w
  4303  0D3D  00A9               	movwf	GetTime@shortInt
  4304  0D3E                     l2905:	
  4305                           
  4306                           ;./CustomLib/TrafficLight.h: 38:     tmp = shortInt.Val;
  4307  0D3E  0829               	movf	GetTime@shortInt,w
  4308  0D3F  397F               	andlw	127
  4309  0D40  00A6               	movwf	??_GetTime
  4310  0D41  01A7               	clrf	??_GetTime+1
  4311  0D42  0826               	movf	??_GetTime,w
  4312  0D43  00AA               	movwf	GetTime@tmp
  4313  0D44  0827               	movf	??_GetTime+1,w
  4314  0D45  00AB               	movwf	GetTime@tmp+1
  4315  0D46                     l2907:	
  4316                           
  4317                           ;./CustomLib/TrafficLight.h: 39:     tmp = (tmp << 7) & 0x80;
  4318  0D46  082B               	movf	GetTime@tmp+1,w
  4319  0D47  00A7               	movwf	??_GetTime+1
  4320  0D48  082A               	movf	GetTime@tmp,w
  4321  0D49  00A6               	movwf	??_GetTime
  4322  0D4A  3007               	movlw	7
  4323  0D4B  00FF               	movwf	btemp+1
  4324  0D4C                     u2215:	
  4325  0D4C  1003               	clrc
  4326  0D4D  0DA6               	rlf	??_GetTime,f
  4327  0D4E  0DA7               	rlf	??_GetTime+1,f
  4328  0D4F  0BFF               	decfsz	btemp+1,f
  4329  0D50  2D4C               	goto	u2215
  4330  0D51  3080               	movlw	128
  4331  0D52  0526               	andwf	??_GetTime,w
  4332  0D53  00AA               	movwf	GetTime@tmp
  4333  0D54  3000               	movlw	0
  4334  0D55  0527               	andwf	??_GetTime+1,w
  4335  0D56  00AB               	movwf	GetTime@tmp+1
  4336  0D57                     l2909:	
  4337                           
  4338                           ;./CustomLib/TrafficLight.h: 41:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4339  0D57  0828               	movf	GetTime@index,w
  4340  0D58  0724               	addwf	GetTime@_dataFromGateway,w
  4341  0D59  00A6               	movwf	??_GetTime
  4342  0D5A  0826               	movf	??_GetTime,w
  4343  0D5B  3E02               	addlw	2
  4344  0D5C  0084               	movwf	4
  4345  0D5D  307F               	movlw	127
  4346  0D5E  0500               	andwf	0,w
  4347  0D5F  00A7               	movwf	??_GetTime+1
  4348  0D60  0829               	movf	GetTime@shortInt,w
  4349  0D61  0627               	xorwf	??_GetTime+1,w
  4350  0D62  3980               	andlw	-128
  4351  0D63  0627               	xorwf	??_GetTime+1,w
  4352  0D64  00A9               	movwf	GetTime@shortInt
  4353  0D65                     l2911:	
  4354                           
  4355                           ;./CustomLib/TrafficLight.h: 42:     tmp = tmp | shortInt.Val;
  4356  0D65  0829               	movf	GetTime@shortInt,w
  4357  0D66  397F               	andlw	127
  4358  0D67  00A6               	movwf	??_GetTime
  4359  0D68  082A               	movf	GetTime@tmp,w
  4360  0D69  0426               	iorwf	??_GetTime,w
  4361  0D6A  00AA               	movwf	GetTime@tmp
  4362  0D6B  082B               	movf	GetTime@tmp+1,w
  4363  0D6C  00AB               	movwf	GetTime@tmp+1
  4364  0D6D                     l2913:	
  4365                           
  4366                           ;./CustomLib/TrafficLight.h: 44:     return tmp;
  4367  0D6D  082B               	movf	GetTime@tmp+1,w
  4368  0D6E  00A5               	movwf	?_GetTime+1
  4369  0D6F  082A               	movf	GetTime@tmp,w
  4370  0D70  00A4               	movwf	?_GetTime
  4371  0D71                     l149:	
  4372  0D71  0008               	return
  4373  0D72                     __end_of_GetTime:	
  4374                           
  4375                           	psect	text15
  4376  0567                     __ptext15:	
  4377 ;; *************** function _SetDefaultTimers *****************
  4378 ;; Defined at:
  4379 ;;		line 49 in file "./CustomLib/TrafficLight.h"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  rosso           2    4[BANK0 ] int 
  4382 ;;  verde           2    6[BANK0 ] int 
  4383 ;;  giallo          2    8[BANK0 ] int 
  4384 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4385 ;;		 -> Semafori(16), 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  i               1   18[BANK0 ] unsigned char 
  4388 ;;  l               1   19[BANK0 ] unsigned char 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4398 ;;      Params:         0       7       0       0       0
  4399 ;;      Locals:         0       2       0       0       0
  4400 ;;      Temps:          0       7       0       0       0
  4401 ;;      Totals:         0      16       0       0       0
  4402 ;;Total ram usage:       16 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    3
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_main
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           
  4413                           ;psect for function _SetDefaultTimers
  4414  0567                     _SetDefaultTimers:	
  4415  0567                     l3091:	
  4416                           ;incstack = 0
  4417                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4418                           
  4419                           
  4420                           ;./CustomLib/TrafficLight.h: 49: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 50: {;./CustomLib/TrafficLight.h: 51: 
      +                              for (unsigned char l = 0; l < 16; l++)
  4421  0567  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0568  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0569  01B3               	clrf	SetDefaultTimers@l
  4424  056A                     l3097:	
  4425                           
  4426                           ;./CustomLib/TrafficLight.h: 52:     {;./CustomLib/TrafficLight.h: 53:         if(l<2)
  4427  056A  3002               	movlw	2
  4428  056B  0233               	subwf	SetDefaultTimers@l,w
  4429  056C  1803               	skipnc
  4430  056D  2D6F               	goto	u2591
  4431  056E  2D70               	goto	u2590
  4432  056F                     u2591:	
  4433  056F  2D8E               	goto	l3101
  4434  0570                     u2590:	
  4435  0570                     l3099:	
  4436                           
  4437                           ;./CustomLib/TrafficLight.h: 54:         {;./CustomLib/TrafficLight.h: 55:             (
      +                          *(_semafori)[l]).lux_select=l;
  4438  0570  0833               	movf	SetDefaultTimers@l,w
  4439  0571  00AB               	movwf	??_SetDefaultTimers
  4440  0572  0833               	movf	SetDefaultTimers@l,w
  4441  0573  00AC               	movwf	??_SetDefaultTimers+1
  4442  0574  072C               	addwf	??_SetDefaultTimers+1,w
  4443  0575  072A               	addwf	SetDefaultTimers@_semafori,w
  4444  0576  00AD               	movwf	??_SetDefaultTimers+2
  4445  0577  082D               	movf	??_SetDefaultTimers+2,w
  4446  0578  0084               	movwf	4
  4447  0579  1383               	bcf	3,7	;select IRP bank0
  4448  057A  0800               	movf	0,w
  4449  057B  00AE               	movwf	??_SetDefaultTimers+3
  4450  057C  0A84               	incf	4,f
  4451  057D  0800               	movf	0,w
  4452  057E  00AF               	movwf	??_SetDefaultTimers+4
  4453  057F  082E               	movf	??_SetDefaultTimers+3,w
  4454  0580  3E0C               	addlw	12
  4455  0581  00B0               	movwf	??_SetDefaultTimers+5
  4456  0582  082F               	movf	??_SetDefaultTimers+4,w
  4457  0583  1803               	skipnc
  4458  0584  3E01               	addlw	1
  4459  0585  3E00               	addlw	0
  4460  0586  00B1               	movwf	??_SetDefaultTimers+6
  4461  0587  0830               	movf	??_SetDefaultTimers+5,w
  4462  0588  0084               	movwf	4
  4463  0589  1783               	bsf	3,7
  4464  058A  1C31               	btfss	??_SetDefaultTimers+6,0
  4465  058B  1383               	bcf	3,7
  4466  058C  082B               	movf	??_SetDefaultTimers,w
  4467  058D  0080               	movwf	0
  4468  058E                     l3101:	
  4469                           
  4470                           ;./CustomLib/TrafficLight.h: 58:         for (unsigned char i = 0; i < 3; i++)
  4471  058E  01B2               	clrf	SetDefaultTimers@i
  4472  058F  2DF3               	goto	l3115
  4473  0590                     l3107:	
  4474                           
  4475                           ;./CustomLib/TrafficLight.h: 63:                 (*(_semafori)[l]).times[i] = rosso;
  4476  0590  0833               	movf	SetDefaultTimers@l,w
  4477  0591  00AB               	movwf	??_SetDefaultTimers
  4478  0592  072B               	addwf	??_SetDefaultTimers,w
  4479  0593  072A               	addwf	SetDefaultTimers@_semafori,w
  4480  0594  00AC               	movwf	??_SetDefaultTimers+1
  4481  0595  082C               	movf	??_SetDefaultTimers+1,w
  4482  0596  0084               	movwf	4
  4483  0597  1383               	bcf	3,7	;select IRP bank0
  4484  0598  0800               	movf	0,w
  4485  0599  00AD               	movwf	??_SetDefaultTimers+2
  4486  059A  0A84               	incf	4,f
  4487  059B  0800               	movf	0,w
  4488  059C  00AE               	movwf	??_SetDefaultTimers+3
  4489  059D  0832               	movf	SetDefaultTimers@i,w
  4490  059E  00AF               	movwf	??_SetDefaultTimers+4
  4491  059F  072F               	addwf	??_SetDefaultTimers+4,w
  4492  05A0  072D               	addwf	??_SetDefaultTimers+2,w
  4493  05A1  00B0               	movwf	??_SetDefaultTimers+5
  4494  05A2  082E               	movf	??_SetDefaultTimers+3,w
  4495  05A3  1803               	skipnc
  4496  05A4  3E01               	addlw	1
  4497  05A5  00B1               	movwf	??_SetDefaultTimers+6
  4498  05A6  0830               	movf	??_SetDefaultTimers+5,w
  4499  05A7  0084               	movwf	4
  4500  05A8  1783               	bsf	3,7
  4501  05A9  1C31               	btfss	??_SetDefaultTimers+6,0
  4502  05AA  1383               	bcf	3,7
  4503  05AB  0824               	movf	SetDefaultTimers@rosso,w
  4504  05AC  0080               	movwf	0
  4505  05AD  0A84               	incf	4,f
  4506  05AE  0825               	movf	SetDefaultTimers@rosso+1,w
  4507  05AF  0080               	movwf	0
  4508                           
  4509                           ;./CustomLib/TrafficLight.h: 64:                 break;
  4510  05B0  2E06               	goto	l3117
  4511  05B1                     l3109:	
  4512                           
  4513                           ;./CustomLib/TrafficLight.h: 66:                 (*(_semafori)[l]).times[i] = verde;
  4514  05B1  0833               	movf	SetDefaultTimers@l,w
  4515  05B2  00AB               	movwf	??_SetDefaultTimers
  4516  05B3  072B               	addwf	??_SetDefaultTimers,w
  4517  05B4  072A               	addwf	SetDefaultTimers@_semafori,w
  4518  05B5  00AC               	movwf	??_SetDefaultTimers+1
  4519  05B6  082C               	movf	??_SetDefaultTimers+1,w
  4520  05B7  0084               	movwf	4
  4521  05B8  1383               	bcf	3,7	;select IRP bank0
  4522  05B9  0800               	movf	0,w
  4523  05BA  00AD               	movwf	??_SetDefaultTimers+2
  4524  05BB  0A84               	incf	4,f
  4525  05BC  0800               	movf	0,w
  4526  05BD  00AE               	movwf	??_SetDefaultTimers+3
  4527  05BE  0832               	movf	SetDefaultTimers@i,w
  4528  05BF  00AF               	movwf	??_SetDefaultTimers+4
  4529  05C0  072F               	addwf	??_SetDefaultTimers+4,w
  4530  05C1  072D               	addwf	??_SetDefaultTimers+2,w
  4531  05C2  00B0               	movwf	??_SetDefaultTimers+5
  4532  05C3  082E               	movf	??_SetDefaultTimers+3,w
  4533  05C4  1803               	skipnc
  4534  05C5  3E01               	addlw	1
  4535  05C6  00B1               	movwf	??_SetDefaultTimers+6
  4536  05C7  0830               	movf	??_SetDefaultTimers+5,w
  4537  05C8  0084               	movwf	4
  4538  05C9  1783               	bsf	3,7
  4539  05CA  1C31               	btfss	??_SetDefaultTimers+6,0
  4540  05CB  1383               	bcf	3,7
  4541  05CC  0826               	movf	SetDefaultTimers@verde,w
  4542  05CD  0080               	movwf	0
  4543  05CE  0A84               	incf	4,f
  4544  05CF  0827               	movf	SetDefaultTimers@verde+1,w
  4545  05D0  0080               	movwf	0
  4546                           
  4547                           ;./CustomLib/TrafficLight.h: 67:                 break;
  4548  05D1  2E06               	goto	l3117
  4549  05D2                     l3111:	
  4550                           
  4551                           ;./CustomLib/TrafficLight.h: 69:                 (*(_semafori)[l]).times[i] = giallo;
  4552  05D2  0833               	movf	SetDefaultTimers@l,w
  4553  05D3  00AB               	movwf	??_SetDefaultTimers
  4554  05D4  072B               	addwf	??_SetDefaultTimers,w
  4555  05D5  072A               	addwf	SetDefaultTimers@_semafori,w
  4556  05D6  00AC               	movwf	??_SetDefaultTimers+1
  4557  05D7  082C               	movf	??_SetDefaultTimers+1,w
  4558  05D8  0084               	movwf	4
  4559  05D9  1383               	bcf	3,7	;select IRP bank0
  4560  05DA  0800               	movf	0,w
  4561  05DB  00AD               	movwf	??_SetDefaultTimers+2
  4562  05DC  0A84               	incf	4,f
  4563  05DD  0800               	movf	0,w
  4564  05DE  00AE               	movwf	??_SetDefaultTimers+3
  4565  05DF  0832               	movf	SetDefaultTimers@i,w
  4566  05E0  00AF               	movwf	??_SetDefaultTimers+4
  4567  05E1  072F               	addwf	??_SetDefaultTimers+4,w
  4568  05E2  072D               	addwf	??_SetDefaultTimers+2,w
  4569  05E3  00B0               	movwf	??_SetDefaultTimers+5
  4570  05E4  082E               	movf	??_SetDefaultTimers+3,w
  4571  05E5  1803               	skipnc
  4572  05E6  3E01               	addlw	1
  4573  05E7  00B1               	movwf	??_SetDefaultTimers+6
  4574  05E8  0830               	movf	??_SetDefaultTimers+5,w
  4575  05E9  0084               	movwf	4
  4576  05EA  1783               	bsf	3,7
  4577  05EB  1C31               	btfss	??_SetDefaultTimers+6,0
  4578  05EC  1383               	bcf	3,7
  4579  05ED  0828               	movf	SetDefaultTimers@giallo,w
  4580  05EE  0080               	movwf	0
  4581  05EF  0A84               	incf	4,f
  4582  05F0  0829               	movf	SetDefaultTimers@giallo+1,w
  4583  05F1  0080               	movwf	0
  4584                           
  4585                           ;./CustomLib/TrafficLight.h: 70:                 break;
  4586  05F2  2E06               	goto	l3117
  4587  05F3                     l3115:	
  4588  05F3  0832               	movf	SetDefaultTimers@i,w
  4589  05F4  00AB               	movwf	??_SetDefaultTimers
  4590  05F5  01AC               	clrf	??_SetDefaultTimers+1
  4591                           
  4592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4593                           ; Switch size 1, requested type "simple"
  4594                           ; Number of cases is 1, Range of values is 0 to 0
  4595                           ; switch strategies available:
  4596                           ; Name         Instructions Cycles
  4597                           ; simple_byte            4     3 (average)
  4598                           ; direct_byte           11     8 (fixed)
  4599                           ; jumptable            260     6 (fixed)
  4600                           ;	Chosen strategy is simple_byte
  4601  05F6  082C               	movf	??_SetDefaultTimers+1,w
  4602  05F7  3A00               	xorlw	0	; case 0
  4603  05F8  1903               	skipnz
  4604  05F9  2DFB               	goto	l3657
  4605  05FA  2E06               	goto	l3117
  4606  05FB                     l3657:	
  4607                           
  4608                           ; Switch size 1, requested type "simple"
  4609                           ; Number of cases is 3, Range of values is 0 to 2
  4610                           ; switch strategies available:
  4611                           ; Name         Instructions Cycles
  4612                           ; simple_byte           10     6 (average)
  4613                           ; direct_byte           17     8 (fixed)
  4614                           ; jumptable            260     6 (fixed)
  4615                           ;	Chosen strategy is simple_byte
  4616  05FB  082B               	movf	??_SetDefaultTimers,w
  4617  05FC  3A00               	xorlw	0	; case 0
  4618  05FD  1903               	skipnz
  4619  05FE  2D90               	goto	l3107
  4620  05FF  3A01               	xorlw	1	; case 1
  4621  0600  1903               	skipnz
  4622  0601  2DB1               	goto	l3109
  4623  0602  3A03               	xorlw	3	; case 2
  4624  0603  1903               	skipnz
  4625  0604  2DD2               	goto	l3111
  4626  0605  2E06               	goto	l3117
  4627  0606                     l3117:	
  4628                           
  4629                           ;./CustomLib/TrafficLight.h: 72:         }
  4630  0606  3001               	movlw	1
  4631  0607  00AB               	movwf	??_SetDefaultTimers
  4632  0608  082B               	movf	??_SetDefaultTimers,w
  4633  0609  07B2               	addwf	SetDefaultTimers@i,f
  4634  060A                     l3119:	
  4635  060A  3003               	movlw	3
  4636  060B  0232               	subwf	SetDefaultTimers@i,w
  4637  060C  1C03               	skipc
  4638  060D  2E0F               	goto	u2601
  4639  060E  2E10               	goto	u2600
  4640  060F                     u2601:	
  4641  060F  2DF3               	goto	l3115
  4642  0610                     u2600:	
  4643  0610                     l3121:	
  4644                           
  4645                           ;./CustomLib/TrafficLight.h: 73:     }
  4646  0610  3001               	movlw	1
  4647  0611  00AB               	movwf	??_SetDefaultTimers
  4648  0612  082B               	movf	??_SetDefaultTimers,w
  4649  0613  07B3               	addwf	SetDefaultTimers@l,f
  4650  0614                     l3123:	
  4651  0614  3010               	movlw	16
  4652  0615  0233               	subwf	SetDefaultTimers@l,w
  4653  0616  1C03               	skipc
  4654  0617  2E19               	goto	u2611
  4655  0618  2E1A               	goto	u2610
  4656  0619                     u2611:	
  4657  0619  2D6A               	goto	l3097
  4658  061A                     u2610:	
  4659  061A                     l162:	
  4660  061A  0008               	return
  4661  061B                     __end_of_SetDefaultTimers:	
  4662                           
  4663                           	psect	text16
  4664  06B8                     __ptext16:	
  4665 ;; *************** function _GetDigits *****************
  4666 ;; Defined at:
  4667 ;;		line 29 in file "./CustomLib/Conversions.h"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  centinaia       1    wreg     PTR unsigned char 
  4670 ;;		 -> centinaia(1), 
  4671 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  4672 ;;		 -> decine(1), 
  4673 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  4674 ;;		 -> unita(1), 
  4675 ;;  Time            2   22[BANK0 ] int 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  4678 ;;		 -> centinaia(1), 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      void 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       4       0       0       0
  4689 ;;      Locals:         0       3       0       0       0
  4690 ;;      Temps:          0       1       0       0       0
  4691 ;;      Totals:         0       8       0       0       0
  4692 ;;Total ram usage:        8 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    4
  4695 ;; This function calls:
  4696 ;;		___awdiv
  4697 ;;		___awmod
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           
  4704                           ;psect for function _GetDigits
  4705  06B8                     _GetDigits:	
  4706                           
  4707                           ;incstack = 0
  4708                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4709                           ;GetDigits@centinaia stored from wreg
  4710  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  4711  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  4712  06BA  00BB               	movwf	GetDigits@centinaia
  4713  06BB                     l3079:	
  4714                           
  4715                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     while(Time/1000>0)
  4716  06BB  2ED1               	goto	l3083
  4717  06BC                     l3081:	
  4718                           
  4719                           ;./CustomLib/Conversions.h: 32:     {;./CustomLib/Conversions.h: 33:         Time=Time/1
      +                          0;
  4720  06BC  300A               	movlw	10
  4721  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  4722  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  4723  06BF  00AB               	movwf	___awdiv@divisor
  4724  06C0  3000               	movlw	0
  4725  06C1  00AC               	movwf	___awdiv@divisor+1
  4726  06C2  0837               	movf	GetDigits@Time+1,w
  4727  06C3  00AE               	movwf	___awdiv@dividend+1
  4728  06C4  0836               	movf	GetDigits@Time,w
  4729  06C5  00AD               	movwf	___awdiv@dividend
  4730  06C6  120A  158A  2729  120A  118A  	fcall	___awdiv
  4731  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  4732  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  4733  06CD  082C               	movf	?___awdiv+1,w
  4734  06CE  00B7               	movwf	GetDigits@Time+1
  4735  06CF  082B               	movf	?___awdiv,w
  4736  06D0  00B6               	movwf	GetDigits@Time
  4737  06D1                     l3083:	
  4738                           
  4739                           ;./CustomLib/Conversions.h: 31:     while(Time/1000>0)
  4740  06D1  30E8               	movlw	232
  4741  06D2  00AB               	movwf	___awdiv@divisor
  4742  06D3  3003               	movlw	3
  4743  06D4  00AC               	movwf	___awdiv@divisor+1
  4744  06D5  0837               	movf	GetDigits@Time+1,w
  4745  06D6  00AE               	movwf	___awdiv@dividend+1
  4746  06D7  0836               	movf	GetDigits@Time,w
  4747  06D8  00AD               	movwf	___awdiv@dividend
  4748  06D9  120A  158A  2729  120A  118A  	fcall	___awdiv
  4749  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  4750  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  4751  06E0  082C               	movf	?___awdiv+1,w
  4752  06E1  3A80               	xorlw	128
  4753  06E2  00FF               	movwf	btemp+1
  4754  06E3  3080               	movlw	128
  4755  06E4  027F               	subwf	btemp+1,w
  4756  06E5  1D03               	skipz
  4757  06E6  2EE9               	goto	u2585
  4758  06E7  3001               	movlw	1
  4759  06E8  022B               	subwf	?___awdiv,w
  4760  06E9                     u2585:	
  4761  06E9  1803               	skipnc
  4762  06EA  2EEC               	goto	u2581
  4763  06EB  2EED               	goto	u2580
  4764  06EC                     u2581:	
  4765  06EC  2EBC               	goto	l3081
  4766  06ED                     u2580:	
  4767  06ED                     l3085:	
  4768                           
  4769                           ;./CustomLib/Conversions.h: 36:     *centinaia = Time / 100;
  4770  06ED  3064               	movlw	100
  4771  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  4772  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  4773  06F0  00AB               	movwf	___awdiv@divisor
  4774  06F1  3000               	movlw	0
  4775  06F2  00AC               	movwf	___awdiv@divisor+1
  4776  06F3  0837               	movf	GetDigits@Time+1,w
  4777  06F4  00AE               	movwf	___awdiv@dividend+1
  4778  06F5  0836               	movf	GetDigits@Time,w
  4779  06F6  00AD               	movwf	___awdiv@dividend
  4780  06F7  120A  158A  2729  120A  118A  	fcall	___awdiv
  4781  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  4782  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  4783  06FE  082B               	movf	?___awdiv,w
  4784  06FF  00B8               	movwf	??_GetDigits
  4785  0700  083B               	movf	GetDigits@centinaia,w
  4786  0701  0084               	movwf	4
  4787  0702  0838               	movf	??_GetDigits,w
  4788  0703  1383               	bcf	3,7	;select IRP bank0
  4789  0704  0080               	movwf	0
  4790                           
  4791                           ;./CustomLib/Conversions.h: 37:     *decine = (Time % 100) / 10;
  4792  0705  300A               	movlw	10
  4793  0706  00AB               	movwf	___awdiv@divisor
  4794  0707  3000               	movlw	0
  4795  0708  00AC               	movwf	___awdiv@divisor+1
  4796  0709  0837               	movf	GetDigits@Time+1,w
  4797  070A  00A7               	movwf	___awmod@dividend+1
  4798  070B  0836               	movf	GetDigits@Time,w
  4799  070C  00A6               	movwf	___awmod@dividend
  4800  070D  3064               	movlw	100
  4801  070E  00A4               	movwf	___awmod@divisor
  4802  070F  3000               	movlw	0
  4803  0710  00A5               	movwf	___awmod@divisor+1
  4804  0711  120A  158A  2669  120A  118A  	fcall	___awmod
  4805  0716  1283               	bcf	3,5	;RP0=0, select bank0
  4806  0717  1303               	bcf	3,6	;RP1=0, select bank0
  4807  0718  0825               	movf	?___awmod+1,w
  4808  0719  00AE               	movwf	___awdiv@dividend+1
  4809  071A  0824               	movf	?___awmod,w
  4810  071B  00AD               	movwf	___awdiv@dividend
  4811  071C  120A  158A  2729  120A  118A  	fcall	___awdiv
  4812  0721  1283               	bcf	3,5	;RP0=0, select bank0
  4813  0722  1303               	bcf	3,6	;RP1=0, select bank0
  4814  0723  082B               	movf	?___awdiv,w
  4815  0724  00B8               	movwf	??_GetDigits
  4816  0725  0834               	movf	GetDigits@decine,w
  4817  0726  0084               	movwf	4
  4818  0727  0838               	movf	??_GetDigits,w
  4819  0728  1383               	bcf	3,7	;select IRP bank0
  4820  0729  0080               	movwf	0
  4821  072A                     l3087:	
  4822                           
  4823                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4824  072A  0837               	movf	GetDigits@Time+1,w
  4825  072B  00A7               	movwf	___awmod@dividend+1
  4826  072C  0836               	movf	GetDigits@Time,w
  4827  072D  00A6               	movwf	___awmod@dividend
  4828  072E  3064               	movlw	100
  4829  072F  00A4               	movwf	___awmod@divisor
  4830  0730  3000               	movlw	0
  4831  0731  00A5               	movwf	___awmod@divisor+1
  4832  0732  120A  158A  2669  120A  118A  	fcall	___awmod
  4833  0737  1283               	bcf	3,5	;RP0=0, select bank0
  4834  0738  1303               	bcf	3,6	;RP1=0, select bank0
  4835  0739  0825               	movf	?___awmod+1,w
  4836  073A  00BA               	movwf	_GetDigits$1221+1
  4837  073B  0824               	movf	?___awmod,w
  4838  073C  00B9               	movwf	_GetDigits$1221
  4839  073D                     l3089:	
  4840                           
  4841                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4842  073D  300A               	movlw	10
  4843  073E  00A4               	movwf	___awmod@divisor
  4844  073F  3000               	movlw	0
  4845  0740  00A5               	movwf	___awmod@divisor+1
  4846  0741  083A               	movf	_GetDigits$1221+1,w
  4847  0742  00A7               	movwf	___awmod@dividend+1
  4848  0743  0839               	movf	_GetDigits$1221,w
  4849  0744  00A6               	movwf	___awmod@dividend
  4850  0745  120A  158A  2669  120A  118A  	fcall	___awmod
  4851  074A  1283               	bcf	3,5	;RP0=0, select bank0
  4852  074B  1303               	bcf	3,6	;RP1=0, select bank0
  4853  074C  0824               	movf	?___awmod,w
  4854  074D  00B8               	movwf	??_GetDigits
  4855  074E  0835               	movf	GetDigits@unita,w
  4856  074F  0084               	movwf	4
  4857  0750  0838               	movf	??_GetDigits,w
  4858  0751  1383               	bcf	3,7	;select IRP bank0
  4859  0752  0080               	movwf	0
  4860  0753                     l98:	
  4861  0753  0008               	return
  4862  0754                     __end_of_GetDigits:	
  4863                           
  4864                           	psect	text17
  4865  0E69                     __ptext17:	
  4866 ;; *************** function ___awmod *****************
  4867 ;; Defined at:
  4868 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  divisor         2    4[BANK0 ] int 
  4871 ;;  dividend        2    6[BANK0 ] int 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  sign            1   10[BANK0 ] unsigned char 
  4874 ;;  counter         1    9[BANK0 ] unsigned char 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  2    4[BANK0 ] int 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, status,0
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4884 ;;      Params:         0       4       0       0       0
  4885 ;;      Locals:         0       2       0       0       0
  4886 ;;      Temps:          0       1       0       0       0
  4887 ;;      Totals:         0       7       0       0       0
  4888 ;;Total ram usage:        7 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    3
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_GetDigits
  4895 ;;		_ShowDigitsOnDisplay
  4896 ;;		_intToString
  4897 ;;		_ChangeTrafficLight
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function ___awmod
  4903  0E69                     ___awmod:	
  4904  0E69                     l3037:	
  4905                           ;incstack = 0
  4906                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4907                           
  4908  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  4909  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  4910  0E6B  01AA               	clrf	___awmod@sign
  4911  0E6C                     l3039:	
  4912  0E6C  1FA7               	btfss	___awmod@dividend+1,7
  4913  0E6D  2E6F               	goto	u2491
  4914  0E6E  2E70               	goto	u2490
  4915  0E6F                     u2491:	
  4916  0E6F  2E77               	goto	l3045
  4917  0E70                     u2490:	
  4918  0E70                     l3041:	
  4919  0E70  09A6               	comf	___awmod@dividend,f
  4920  0E71  09A7               	comf	___awmod@dividend+1,f
  4921  0E72  0AA6               	incf	___awmod@dividend,f
  4922  0E73  1903               	skipnz
  4923  0E74  0AA7               	incf	___awmod@dividend+1,f
  4924  0E75                     l3043:	
  4925  0E75  01AA               	clrf	___awmod@sign
  4926  0E76  0AAA               	incf	___awmod@sign,f
  4927  0E77                     l3045:	
  4928  0E77  1FA5               	btfss	___awmod@divisor+1,7
  4929  0E78  2E7A               	goto	u2501
  4930  0E79  2E7B               	goto	u2500
  4931  0E7A                     u2501:	
  4932  0E7A  2E80               	goto	l3049
  4933  0E7B                     u2500:	
  4934  0E7B                     l3047:	
  4935  0E7B  09A4               	comf	___awmod@divisor,f
  4936  0E7C  09A5               	comf	___awmod@divisor+1,f
  4937  0E7D  0AA4               	incf	___awmod@divisor,f
  4938  0E7E  1903               	skipnz
  4939  0E7F  0AA5               	incf	___awmod@divisor+1,f
  4940  0E80                     l3049:	
  4941  0E80  0824               	movf	___awmod@divisor,w
  4942  0E81  0425               	iorwf	___awmod@divisor+1,w
  4943  0E82  1903               	btfsc	3,2
  4944  0E83  2E85               	goto	u2511
  4945  0E84  2E86               	goto	u2510
  4946  0E85                     u2511:	
  4947  0E85  2EB5               	goto	l3067
  4948  0E86                     u2510:	
  4949  0E86                     l3051:	
  4950  0E86  01A9               	clrf	___awmod@counter
  4951  0E87  0AA9               	incf	___awmod@counter,f
  4952  0E88  2E94               	goto	l3057
  4953  0E89                     l3053:	
  4954  0E89  3001               	movlw	1
  4955  0E8A                     u2525:	
  4956  0E8A  1003               	clrc
  4957  0E8B  0DA4               	rlf	___awmod@divisor,f
  4958  0E8C  0DA5               	rlf	___awmod@divisor+1,f
  4959  0E8D  3EFF               	addlw	-1
  4960  0E8E  1D03               	skipz
  4961  0E8F  2E8A               	goto	u2525
  4962  0E90                     l3055:	
  4963  0E90  3001               	movlw	1
  4964  0E91  00A8               	movwf	??___awmod
  4965  0E92  0828               	movf	??___awmod,w
  4966  0E93  07A9               	addwf	___awmod@counter,f
  4967  0E94                     l3057:	
  4968  0E94  1FA5               	btfss	___awmod@divisor+1,7
  4969  0E95  2E97               	goto	u2531
  4970  0E96  2E98               	goto	u2530
  4971  0E97                     u2531:	
  4972  0E97  2E89               	goto	l3053
  4973  0E98                     u2530:	
  4974  0E98                     l3059:	
  4975  0E98  0825               	movf	___awmod@divisor+1,w
  4976  0E99  0227               	subwf	___awmod@dividend+1,w
  4977  0E9A  1D03               	skipz
  4978  0E9B  2E9E               	goto	u2545
  4979  0E9C  0824               	movf	___awmod@divisor,w
  4980  0E9D  0226               	subwf	___awmod@dividend,w
  4981  0E9E                     u2545:	
  4982  0E9E  1C03               	skipc
  4983  0E9F  2EA1               	goto	u2541
  4984  0EA0  2EA2               	goto	u2540
  4985  0EA1                     u2541:	
  4986  0EA1  2EA8               	goto	l3063
  4987  0EA2                     u2540:	
  4988  0EA2                     l3061:	
  4989  0EA2  0824               	movf	___awmod@divisor,w
  4990  0EA3  02A6               	subwf	___awmod@dividend,f
  4991  0EA4  0825               	movf	___awmod@divisor+1,w
  4992  0EA5  1C03               	skipc
  4993  0EA6  03A7               	decf	___awmod@dividend+1,f
  4994  0EA7  02A7               	subwf	___awmod@dividend+1,f
  4995  0EA8                     l3063:	
  4996  0EA8  3001               	movlw	1
  4997  0EA9                     u2555:	
  4998  0EA9  1003               	clrc
  4999  0EAA  0CA5               	rrf	___awmod@divisor+1,f
  5000  0EAB  0CA4               	rrf	___awmod@divisor,f
  5001  0EAC  3EFF               	addlw	-1
  5002  0EAD  1D03               	skipz
  5003  0EAE  2EA9               	goto	u2555
  5004  0EAF                     l3065:	
  5005  0EAF  3001               	movlw	1
  5006  0EB0  02A9               	subwf	___awmod@counter,f
  5007  0EB1  1D03               	btfss	3,2
  5008  0EB2  2EB4               	goto	u2561
  5009  0EB3  2EB5               	goto	u2560
  5010  0EB4                     u2561:	
  5011  0EB4  2E98               	goto	l3059
  5012  0EB5                     u2560:	
  5013  0EB5                     l3067:	
  5014  0EB5  082A               	movf	___awmod@sign,w
  5015  0EB6  1903               	btfsc	3,2
  5016  0EB7  2EB9               	goto	u2571
  5017  0EB8  2EBA               	goto	u2570
  5018  0EB9                     u2571:	
  5019  0EB9  2EBF               	goto	l3071
  5020  0EBA                     u2570:	
  5021  0EBA                     l3069:	
  5022  0EBA  09A6               	comf	___awmod@dividend,f
  5023  0EBB  09A7               	comf	___awmod@dividend+1,f
  5024  0EBC  0AA6               	incf	___awmod@dividend,f
  5025  0EBD  1903               	skipnz
  5026  0EBE  0AA7               	incf	___awmod@dividend+1,f
  5027  0EBF                     l3071:	
  5028  0EBF  0827               	movf	___awmod@dividend+1,w
  5029  0EC0  00A5               	movwf	?___awmod+1
  5030  0EC1  0826               	movf	___awmod@dividend,w
  5031  0EC2  00A4               	movwf	?___awmod
  5032  0EC3                     l613:	
  5033  0EC3  0008               	return
  5034  0EC4                     __end_of___awmod:	
  5035                           
  5036                           	psect	text18
  5037  0F29                     __ptext18:	
  5038 ;; *************** function ___awdiv *****************
  5039 ;; Defined at:
  5040 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  divisor         2   11[BANK0 ] int 
  5043 ;;  dividend        2   13[BANK0 ] int 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;  quotient        2   18[BANK0 ] int 
  5046 ;;  sign            1   17[BANK0 ] unsigned char 
  5047 ;;  counter         1   16[BANK0 ] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  2   11[BANK0 ] int 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5057 ;;      Params:         0       4       0       0       0
  5058 ;;      Locals:         0       4       0       0       0
  5059 ;;      Temps:          0       1       0       0       0
  5060 ;;      Totals:         0       9       0       0       0
  5061 ;;Total ram usage:        9 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    3
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_map
  5068 ;;		_GetDigits
  5069 ;;		_intToString
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function ___awdiv
  5075  0F29                     ___awdiv:	
  5076  0F29                     l2993:	
  5077                           ;incstack = 0
  5078                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5079                           
  5080  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  5081  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  5082  0F2B  01B1               	clrf	___awdiv@sign
  5083  0F2C                     l2995:	
  5084  0F2C  1FAC               	btfss	___awdiv@divisor+1,7
  5085  0F2D  2F2F               	goto	u2391
  5086  0F2E  2F30               	goto	u2390
  5087  0F2F                     u2391:	
  5088  0F2F  2F37               	goto	l3001
  5089  0F30                     u2390:	
  5090  0F30                     l2997:	
  5091  0F30  09AB               	comf	___awdiv@divisor,f
  5092  0F31  09AC               	comf	___awdiv@divisor+1,f
  5093  0F32  0AAB               	incf	___awdiv@divisor,f
  5094  0F33  1903               	skipnz
  5095  0F34  0AAC               	incf	___awdiv@divisor+1,f
  5096  0F35                     l2999:	
  5097  0F35  01B1               	clrf	___awdiv@sign
  5098  0F36  0AB1               	incf	___awdiv@sign,f
  5099  0F37                     l3001:	
  5100  0F37  1FAE               	btfss	___awdiv@dividend+1,7
  5101  0F38  2F3A               	goto	u2401
  5102  0F39  2F3B               	goto	u2400
  5103  0F3A                     u2401:	
  5104  0F3A  2F44               	goto	l3007
  5105  0F3B                     u2400:	
  5106  0F3B                     l3003:	
  5107  0F3B  09AD               	comf	___awdiv@dividend,f
  5108  0F3C  09AE               	comf	___awdiv@dividend+1,f
  5109  0F3D  0AAD               	incf	___awdiv@dividend,f
  5110  0F3E  1903               	skipnz
  5111  0F3F  0AAE               	incf	___awdiv@dividend+1,f
  5112  0F40                     l3005:	
  5113  0F40  3001               	movlw	1
  5114  0F41  00AF               	movwf	??___awdiv
  5115  0F42  082F               	movf	??___awdiv,w
  5116  0F43  06B1               	xorwf	___awdiv@sign,f
  5117  0F44                     l3007:	
  5118  0F44  01B2               	clrf	___awdiv@quotient
  5119  0F45  01B3               	clrf	___awdiv@quotient+1
  5120  0F46                     l3009:	
  5121  0F46  082B               	movf	___awdiv@divisor,w
  5122  0F47  042C               	iorwf	___awdiv@divisor+1,w
  5123  0F48  1903               	btfsc	3,2
  5124  0F49  2F4B               	goto	u2411
  5125  0F4A  2F4C               	goto	u2410
  5126  0F4B                     u2411:	
  5127  0F4B  2F83               	goto	l3029
  5128  0F4C                     u2410:	
  5129  0F4C                     l3011:	
  5130  0F4C  01B0               	clrf	___awdiv@counter
  5131  0F4D  0AB0               	incf	___awdiv@counter,f
  5132  0F4E  2F5A               	goto	l3017
  5133  0F4F                     l3013:	
  5134  0F4F  3001               	movlw	1
  5135  0F50                     u2425:	
  5136  0F50  1003               	clrc
  5137  0F51  0DAB               	rlf	___awdiv@divisor,f
  5138  0F52  0DAC               	rlf	___awdiv@divisor+1,f
  5139  0F53  3EFF               	addlw	-1
  5140  0F54  1D03               	skipz
  5141  0F55  2F50               	goto	u2425
  5142  0F56                     l3015:	
  5143  0F56  3001               	movlw	1
  5144  0F57  00AF               	movwf	??___awdiv
  5145  0F58  082F               	movf	??___awdiv,w
  5146  0F59  07B0               	addwf	___awdiv@counter,f
  5147  0F5A                     l3017:	
  5148  0F5A  1FAC               	btfss	___awdiv@divisor+1,7
  5149  0F5B  2F5D               	goto	u2431
  5150  0F5C  2F5E               	goto	u2430
  5151  0F5D                     u2431:	
  5152  0F5D  2F4F               	goto	l3013
  5153  0F5E                     u2430:	
  5154  0F5E                     l3019:	
  5155  0F5E  3001               	movlw	1
  5156  0F5F                     u2445:	
  5157  0F5F  1003               	clrc
  5158  0F60  0DB2               	rlf	___awdiv@quotient,f
  5159  0F61  0DB3               	rlf	___awdiv@quotient+1,f
  5160  0F62  3EFF               	addlw	-1
  5161  0F63  1D03               	skipz
  5162  0F64  2F5F               	goto	u2445
  5163  0F65  082C               	movf	___awdiv@divisor+1,w
  5164  0F66  022E               	subwf	___awdiv@dividend+1,w
  5165  0F67  1D03               	skipz
  5166  0F68  2F6B               	goto	u2455
  5167  0F69  082B               	movf	___awdiv@divisor,w
  5168  0F6A  022D               	subwf	___awdiv@dividend,w
  5169  0F6B                     u2455:	
  5170  0F6B  1C03               	skipc
  5171  0F6C  2F6E               	goto	u2451
  5172  0F6D  2F6F               	goto	u2450
  5173  0F6E                     u2451:	
  5174  0F6E  2F76               	goto	l3025
  5175  0F6F                     u2450:	
  5176  0F6F                     l3021:	
  5177  0F6F  082B               	movf	___awdiv@divisor,w
  5178  0F70  02AD               	subwf	___awdiv@dividend,f
  5179  0F71  082C               	movf	___awdiv@divisor+1,w
  5180  0F72  1C03               	skipc
  5181  0F73  03AE               	decf	___awdiv@dividend+1,f
  5182  0F74  02AE               	subwf	___awdiv@dividend+1,f
  5183  0F75                     l3023:	
  5184  0F75  1432               	bsf	___awdiv@quotient,0
  5185  0F76                     l3025:	
  5186  0F76  3001               	movlw	1
  5187  0F77                     u2465:	
  5188  0F77  1003               	clrc
  5189  0F78  0CAC               	rrf	___awdiv@divisor+1,f
  5190  0F79  0CAB               	rrf	___awdiv@divisor,f
  5191  0F7A  3EFF               	addlw	-1
  5192  0F7B  1D03               	skipz
  5193  0F7C  2F77               	goto	u2465
  5194  0F7D                     l3027:	
  5195  0F7D  3001               	movlw	1
  5196  0F7E  02B0               	subwf	___awdiv@counter,f
  5197  0F7F  1D03               	btfss	3,2
  5198  0F80  2F82               	goto	u2471
  5199  0F81  2F83               	goto	u2470
  5200  0F82                     u2471:	
  5201  0F82  2F5E               	goto	l3019
  5202  0F83                     u2470:	
  5203  0F83                     l3029:	
  5204  0F83  0831               	movf	___awdiv@sign,w
  5205  0F84  1903               	btfsc	3,2
  5206  0F85  2F87               	goto	u2481
  5207  0F86  2F88               	goto	u2480
  5208  0F87                     u2481:	
  5209  0F87  2F8D               	goto	l3033
  5210  0F88                     u2480:	
  5211  0F88                     l3031:	
  5212  0F88  09B2               	comf	___awdiv@quotient,f
  5213  0F89  09B3               	comf	___awdiv@quotient+1,f
  5214  0F8A  0AB2               	incf	___awdiv@quotient,f
  5215  0F8B  1903               	skipnz
  5216  0F8C  0AB3               	incf	___awdiv@quotient+1,f
  5217  0F8D                     l3033:	
  5218  0F8D  0833               	movf	___awdiv@quotient+1,w
  5219  0F8E  00AC               	movwf	?___awdiv+1
  5220  0F8F  0832               	movf	___awdiv@quotient,w
  5221  0F90  00AB               	movwf	?___awdiv
  5222  0F91                     l600:	
  5223  0F91  0008               	return
  5224  0F92                     __end_of___awdiv:	
  5225                           
  5226                           	psect	text19
  5227  0C66                     __ptext19:	
  5228 ;; *************** function _ADC_Read *****************
  5229 ;; Defined at:
  5230 ;;		line 331 in file "main.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  canale          1    wreg     unsigned char 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  canale          1    7[BANK0 ] unsigned char 
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  2    4[BANK0 ] int 
  5237 ;; Registers used:
  5238 ;;		wreg, status,2, status,0
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5244 ;;      Params:         0       2       0       0       0
  5245 ;;      Locals:         0       1       0       0       0
  5246 ;;      Temps:          0       1       0       0       0
  5247 ;;      Totals:         0       4       0       0       0
  5248 ;;Total ram usage:        4 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:    3
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_main
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           
  5259                           ;psect for function _ADC_Read
  5260  0C66                     _ADC_Read:	
  5261                           
  5262                           ;incstack = 0
  5263                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5264                           ;ADC_Read@canale stored from wreg
  5265  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0C68  00A7               	movwf	ADC_Read@canale
  5268  0C69                     l3181:	
  5269                           
  5270                           ;main.c: 331: int ADC_Read(char canale);main.c: 332: {;main.c: 333:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5271  0C69  0827               	movf	ADC_Read@canale,w
  5272  0C6A  00A6               	movwf	??_ADC_Read
  5273  0C6B  3002               	movlw	2
  5274  0C6C                     u2665:	
  5275  0C6C  1003               	clrc
  5276  0C6D  0DA6               	rlf	??_ADC_Read,f
  5277  0C6E  3EFF               	addlw	-1
  5278  0C6F  1D03               	skipz
  5279  0C70  2C6C               	goto	u2665
  5280  0C71  1003               	clrc
  5281  0C72  0D26               	rlf	??_ADC_Read,w
  5282  0C73  3801               	iorlw	1
  5283  0C74  009F               	movwf	31	;volatile
  5284  0C75                     l3183:	
  5285                           
  5286                           ;main.c: 334:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5287  0C75  3004               	movlw	4
  5288  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5289  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5290  0C78  00A6               	movwf	??_ADC_Read
  5291  0C79                     u2957:	
  5292  0C79  0BA6               	decfsz	??_ADC_Read,f
  5293  0C7A  2C79               	goto	u2957
  5294  0C7B  0000               	nop
  5295  0C7C                     l3185:	
  5296                           
  5297                           ;main.c: 335:     GO_nDONE = 1;
  5298  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  5299  0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  5300  0C7E  151F               	bsf	31,2	;volatile
  5301  0C7F                     l282:	
  5302                           ;main.c: 337:         ;
  5303                           
  5304                           
  5305                           ;main.c: 336:     while (GO_nDONE)
  5306  0C7F  191F               	btfsc	31,2	;volatile
  5307  0C80  2C82               	goto	u2671
  5308  0C81  2C83               	goto	u2670
  5309  0C82                     u2671:	
  5310  0C82  2C7F               	goto	l282
  5311  0C83                     u2670:	
  5312  0C83                     l3187:	
  5313                           
  5314                           ;main.c: 338:     return ADRESL + (ADRESH << 8);
  5315  0C83  081E               	movf	30,w	;volatile
  5316  0C84  00A5               	movwf	?_ADC_Read+1
  5317  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  5318  0C86  1303               	bcf	3,6	;RP1=0, select bank1
  5319  0C87  081E               	movf	30,w	;volatile
  5320  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5321  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5322  0C8A  00A4               	movwf	?_ADC_Read
  5323  0C8B                     l285:	
  5324  0C8B  0008               	return
  5325  0C8C                     __end_of_ADC_Read:	
  5326                           
  5327                           	psect	text20
  5328  0E11                     __ptext20:	
  5329 ;; *************** function _ISR *****************
  5330 ;; Defined at:
  5331 ;;		line 489 in file "main.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5345 ;;      Params:         0       0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0
  5347 ;;      Temps:          0       4       0       0       0
  5348 ;;      Totals:         0       4       0       0       0
  5349 ;;Total ram usage:        4 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    2
  5352 ;; This function calls:
  5353 ;;		_UART_Read
  5354 ;;		_conteggioVeicoli
  5355 ;; This function is called by:
  5356 ;;		Interrupt level 1
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           
  5361                           ;psect for function _ISR
  5362  0E11                     _ISR:	
  5363  0E11                     i1l2601:	
  5364                           
  5365                           ;main.c: 492:     if (RCIF && readGateway.Bit == 0)
  5366  0E11  1E8C               	btfss	12,5	;volatile
  5367  0E12  2E14               	goto	u204_21
  5368  0E13  2E15               	goto	u204_20
  5369  0E14                     u204_21:	
  5370  0E14  2E1E               	goto	i1l2609
  5371  0E15                     u204_20:	
  5372  0E15                     i1l2603:	
  5373  0E15  1856               	btfsc	_readGateway,0
  5374  0E16  2E18               	goto	u205_21
  5375  0E17  2E19               	goto	u205_20
  5376  0E18                     u205_21:	
  5377  0E18  2E1E               	goto	i1l2609
  5378  0E19                     u205_20:	
  5379  0E19                     i1l2605:	
  5380                           
  5381                           ;main.c: 493:     {;main.c: 494:         readGateway.Bit = 1;
  5382  0E19  1456               	bsf	_readGateway,0
  5383                           
  5384                           ;main.c: 495:         readGatewayDone.Bit = 0;
  5385  0E1A  1057               	bcf	_readGatewayDone,0
  5386                           
  5387                           ;main.c: 496:         readGatewayDone.Timeout = 0;
  5388  0E1B  10D7               	bcf	_readGatewayDone,1
  5389  0E1C                     i1l2607:	
  5390                           
  5391                           ;main.c: 497:         dataFromGatewayIndex = 0;
  5392  0E1C  01D0               	clrf	_dataFromGatewayIndex
  5393                           
  5394                           ;main.c: 498:         timerReadFromGateway = 0;
  5395  0E1D  01CF               	clrf	_timerReadFromGateway
  5396  0E1E                     i1l2609:	
  5397                           
  5398                           ;main.c: 500:     if (RCIF && readGateway.Bit == 1)
  5399  0E1E  1E8C               	btfss	12,5	;volatile
  5400  0E1F  2E21               	goto	u206_21
  5401  0E20  2E22               	goto	u206_20
  5402  0E21                     u206_21:	
  5403  0E21  2E39               	goto	i1l2619
  5404  0E22                     u206_20:	
  5405  0E22                     i1l2611:	
  5406  0E22  1C56               	btfss	_readGateway,0
  5407  0E23  2E25               	goto	u207_21
  5408  0E24  2E26               	goto	u207_20
  5409  0E25                     u207_21:	
  5410  0E25  2E39               	goto	i1l2619
  5411  0E26                     u207_20:	
  5412  0E26                     i1l2613:	
  5413                           
  5414                           ;main.c: 501:     {;main.c: 502:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  5415  0E26  120A  118A  27F7  120A  158A  	fcall	_UART_Read
  5416  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  5417  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  5418  0E2D  00A0               	movwf	??_ISR
  5419  0E2E  0850               	movf	_dataFromGatewayIndex,w
  5420  0E2F  3EB4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  5421  0E30  0084               	movwf	4
  5422  0E31  0820               	movf	??_ISR,w
  5423  0E32  1383               	bcf	3,7	;select IRP bank1
  5424  0E33  0080               	movwf	0
  5425  0E34                     i1l2615:	
  5426                           
  5427                           ;main.c: 503:         dataFromGatewayIndex++;
  5428  0E34  3001               	movlw	1
  5429  0E35  00A0               	movwf	??_ISR
  5430  0E36  0820               	movf	??_ISR,w
  5431  0E37  07D0               	addwf	_dataFromGatewayIndex,f
  5432  0E38                     i1l2617:	
  5433                           
  5434                           ;main.c: 504:         timerReadFromGateway = 0;
  5435  0E38  01CF               	clrf	_timerReadFromGateway
  5436  0E39                     i1l2619:	
  5437                           
  5438                           ;main.c: 509:     if (TMR0IF)
  5439  0E39  1D0B               	btfss	11,2	;volatile
  5440  0E3A  2E3C               	goto	u208_21
  5441  0E3B  2E3D               	goto	u208_20
  5442  0E3C                     u208_21:	
  5443  0E3C  2E47               	goto	i1l2627
  5444  0E3D                     u208_20:	
  5445  0E3D                     i1l2621:	
  5446                           
  5447                           ;main.c: 510:     {;main.c: 511:         TMR0IF = 0;
  5448  0E3D  110B               	bcf	11,2	;volatile
  5449  0E3E                     i1l2623:	
  5450                           
  5451                           ;main.c: 512:         conteggioVeicoli();
  5452  0E3E  120A  158A  26C4  120A  158A  	fcall	_conteggioVeicoli
  5453  0E43                     i1l2625:	
  5454                           
  5455                           ;main.c: 513:         TMR0 = 6;
  5456  0E43  3006               	movlw	6
  5457  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  5458  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  5459  0E46  0081               	movwf	1	;volatile
  5460  0E47                     i1l2627:	
  5461                           
  5462                           ;main.c: 516:     if (TMR1IF)
  5463  0E47  1C0C               	btfss	12,0	;volatile
  5464  0E48  2E4A               	goto	u209_21
  5465  0E49  2E4B               	goto	u209_20
  5466  0E4A                     u209_21:	
  5467  0E4A  2E60               	goto	i1l361
  5468  0E4B                     u209_20:	
  5469  0E4B                     i1l2629:	
  5470                           
  5471                           ;main.c: 517:     {;main.c: 518:         TMR1IF = 0;
  5472  0E4B  100C               	bcf	12,0	;volatile
  5473  0E4C                     i1l2631:	
  5474                           
  5475                           ;main.c: 519:         count_lux++;
  5476  0E4C  3001               	movlw	1
  5477  0E4D  00A0               	movwf	??_ISR
  5478  0E4E  0820               	movf	??_ISR,w
  5479  0E4F  07D2               	addwf	_count_lux,f
  5480  0E50                     i1l2633:	
  5481                           
  5482                           ;main.c: 521:         if (count_lux >= 20)
  5483  0E50  3014               	movlw	20
  5484  0E51  0252               	subwf	_count_lux,w
  5485  0E52  1C03               	skipc
  5486  0E53  2E55               	goto	u210_21
  5487  0E54  2E56               	goto	u210_20
  5488  0E55                     u210_21:	
  5489  0E55  2E5C               	goto	i1l2641
  5490  0E56                     u210_20:	
  5491  0E56                     i1l2635:	
  5492                           
  5493                           ;main.c: 522:         {;main.c: 523:             secondPassed.Bit = 1;
  5494  0E56  1455               	bsf	_secondPassed,0
  5495  0E57                     i1l2637:	
  5496                           
  5497                           ;main.c: 524:             count_lux = 0;
  5498  0E57  01D2               	clrf	_count_lux
  5499  0E58                     i1l2639:	
  5500                           
  5501                           ;main.c: 525:             timerReadFromGateway++;
  5502  0E58  3001               	movlw	1
  5503  0E59  00A0               	movwf	??_ISR
  5504  0E5A  0820               	movf	??_ISR,w
  5505  0E5B  07CF               	addwf	_timerReadFromGateway,f
  5506  0E5C                     i1l2641:	
  5507                           
  5508                           ;main.c: 528:         TMR1H = 60;
  5509  0E5C  303C               	movlw	60
  5510  0E5D  008F               	movwf	15	;volatile
  5511  0E5E                     i1l2643:	
  5512                           
  5513                           ;main.c: 529:         TMR1L = 176;
  5514  0E5E  30B0               	movlw	176
  5515  0E5F  008E               	movwf	14	;volatile
  5516  0E60                     i1l361:	
  5517  0E60  0823               	movf	??_ISR+3,w
  5518  0E61  008A               	movwf	10
  5519  0E62  0822               	movf	??_ISR+2,w
  5520  0E63  0084               	movwf	4
  5521  0E64  0E21               	swapf	(??_ISR+1)^0,w
  5522  0E65  0083               	movwf	3
  5523  0E66  0EFE               	swapf	btemp,f
  5524  0E67  0E7E               	swapf	btemp,w
  5525  0E68  0009               	retfie
  5526  0E69                     __end_of_ISR:	
  5527                           
  5528                           	psect	intentry
  5529  0004                     __pintentry:	
  5530                           ;incstack = 0
  5531                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5532                           
  5533  0004                     interrupt_function:	
  5534  007E                     saved_w	set	btemp
  5535  0004  00FE               	movwf	btemp
  5536  0005  0E03               	swapf	3,w
  5537  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5538  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5539  0008  00A1               	movwf	??_ISR+1
  5540  0009  0804               	movf	4,w
  5541  000A  00A2               	movwf	??_ISR+2
  5542  000B  080A               	movf	10,w
  5543  000C  00A3               	movwf	??_ISR+3
  5544  000D  120A  158A  2E11   	ljmp	_ISR
  5545                           
  5546                           	psect	text21
  5547  0EC4                     __ptext21:	
  5548 ;; *************** function _conteggioVeicoli *****************
  5549 ;; Defined at:
  5550 ;;		line 397 in file "main.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  i               1   13[COMMON] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      void 
  5557 ;; Registers used:
  5558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5564 ;;      Params:         0       0       0       0       0
  5565 ;;      Locals:         1       0       0       0       0
  5566 ;;      Temps:          4       0       0       0       0
  5567 ;;      Totals:         5       0       0       0       0
  5568 ;;Total ram usage:        5 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    1
  5571 ;; This function calls:
  5572 ;;		_Conteggio
  5573 ;; This function is called by:
  5574 ;;		_ISR
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _conteggioVeicoli
  5580  0EC4                     _conteggioVeicoli:	
  5581  0EC4                     i1l2373:	
  5582                           ;incstack = 0
  5583                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5584                           
  5585                           
  5586                           ;main.c: 399:     RoadsSensors[0] = PORTBbits.RB3;
  5587  0EC4  3000               	movlw	0
  5588  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5589  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  5590  0EC7  1986               	btfsc	6,3	;volatile
  5591  0EC8  3001               	movlw	1
  5592  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  5593  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  5594  0ECB  00B0               	movwf	_RoadsSensors^(0+128)
  5595                           
  5596                           ;main.c: 400:     RoadsSensors[1] = PORTBbits.RB4;
  5597  0ECC  3000               	movlw	0
  5598  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0ECF  1A06               	btfsc	6,4	;volatile
  5601  0ED0  3001               	movlw	1
  5602  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  5603  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  5604  0ED3  00B1               	movwf	(_RoadsSensors^(0+128)+1)
  5605                           
  5606                           ;main.c: 401:     RoadsSensors[2] = PORTBbits.RB5;
  5607  0ED4  3000               	movlw	0
  5608  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5609  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  5610  0ED7  1A86               	btfsc	6,5	;volatile
  5611  0ED8  3001               	movlw	1
  5612  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  5613  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  5614  0EDB  00B2               	movwf	(_RoadsSensors^(0+128)+2)
  5615                           
  5616                           ;main.c: 402:     RoadsSensors[3] = PORTAbits.RA5;
  5617  0EDC  3000               	movlw	0
  5618  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  5619  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  5620  0EDF  1A85               	btfsc	5,5	;volatile
  5621  0EE0  3001               	movlw	1
  5622  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  5623  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  5624  0EE3  00B3               	movwf	(_RoadsSensors^(0+128)+3)
  5625  0EE4                     i1l2375:	
  5626                           
  5627                           ;main.c: 404:     for (unsigned char i = 0; i < 4; i++)
  5628  0EE4  01FD               	clrf	conteggioVeicoli@i
  5629  0EE5                     i1l2379:	
  5630                           
  5631                           ;main.c: 405:     {;main.c: 406:         if (!RoadsSensors[i])
  5632  0EE5  087D               	movf	conteggioVeicoli@i,w
  5633  0EE6  3EB0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5634  0EE7  0084               	movwf	4
  5635  0EE8  1383               	bcf	3,7	;select IRP bank1
  5636  0EE9  0800               	movf	0,w
  5637  0EEA  1D03               	btfss	3,2
  5638  0EEB  2EED               	goto	u178_21
  5639  0EEC  2EEE               	goto	u178_20
  5640  0EED                     u178_21:	
  5641  0EED  2EF7               	goto	i1l2383
  5642  0EEE                     u178_20:	
  5643  0EEE                     i1l2381:	
  5644                           
  5645                           ;main.c: 407:         {;main.c: 408:             count++;
  5646  0EEE  3001               	movlw	1
  5647  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  5648  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  5649  0EF1  07CD               	addwf	_count,f
  5650  0EF2  1803               	skipnc
  5651  0EF3  0ACE               	incf	_count+1,f
  5652  0EF4  3000               	movlw	0
  5653  0EF5  07CE               	addwf	_count+1,f
  5654                           
  5655                           ;main.c: 409:         }
  5656  0EF6  2F1E               	goto	i1l2389
  5657  0EF7                     i1l2383:	
  5658  0EF7  087D               	movf	conteggioVeicoli@i,w
  5659  0EF8  3EB0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5660  0EF9  0084               	movwf	4
  5661  0EFA  0800               	movf	0,w
  5662  0EFB  1903               	btfsc	3,2
  5663  0EFC  2EFE               	goto	u179_21
  5664  0EFD  2EFF               	goto	u179_20
  5665  0EFE                     u179_21:	
  5666  0EFE  2F1E               	goto	i1l2389
  5667  0EFF                     u179_20:	
  5668  0EFF                     i1l2385:	
  5669                           
  5670                           ;main.c: 411:         {;main.c: 412:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  5671  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5672  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5673  0F01  084E               	movf	_count+1,w
  5674  0F02  00F1               	movwf	Conteggio@_count+1
  5675  0F03  084D               	movf	_count,w
  5676  0F04  00F0               	movwf	Conteggio@_count
  5677  0F05  3060               	movlw	(low (_motorcycle| 0))& (0+255)
  5678  0F06  00F9               	movwf	??_conteggioVeicoli
  5679  0F07  0879               	movf	??_conteggioVeicoli,w
  5680  0F08  00F2               	movwf	Conteggio@_motorcycle
  5681  0F09  305C               	movlw	(low (_car| 0))& (0+255)
  5682  0F0A  00FA               	movwf	??_conteggioVeicoli+1
  5683  0F0B  087A               	movf	??_conteggioVeicoli+1,w
  5684  0F0C  00F3               	movwf	Conteggio@_car
  5685  0F0D  3058               	movlw	(low (_truck| 0))& (0+255)
  5686  0F0E  00FB               	movwf	??_conteggioVeicoli+2
  5687  0F0F  087B               	movf	??_conteggioVeicoli+2,w
  5688  0F10  00F4               	movwf	Conteggio@_truck
  5689  0F11  087D               	movf	conteggioVeicoli@i,w
  5690  0F12  00FC               	movwf	??_conteggioVeicoli+3
  5691  0F13  087C               	movf	??_conteggioVeicoli+3,w
  5692  0F14  00F5               	movwf	Conteggio@index
  5693  0F15  120A  158A  2572  120A  158A  	fcall	_Conteggio
  5694  0F1A                     i1l2387:	
  5695                           
  5696                           ;main.c: 413:             count = 0;
  5697  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5698  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  5699  0F1C  01CD               	clrf	_count
  5700  0F1D  01CE               	clrf	_count+1
  5701  0F1E                     i1l2389:	
  5702                           
  5703                           ;main.c: 415:     }
  5704  0F1E  3001               	movlw	1
  5705  0F1F  00F9               	movwf	??_conteggioVeicoli
  5706  0F20  0879               	movf	??_conteggioVeicoli,w
  5707  0F21  07FD               	addwf	conteggioVeicoli@i,f
  5708  0F22                     i1l2391:	
  5709  0F22  3004               	movlw	4
  5710  0F23  027D               	subwf	conteggioVeicoli@i,w
  5711  0F24  1C03               	skipc
  5712  0F25  2F27               	goto	u180_21
  5713  0F26  2F28               	goto	u180_20
  5714  0F27                     u180_21:	
  5715  0F27  2EE5               	goto	i1l2379
  5716  0F28                     u180_20:	
  5717  0F28                     i1l322:	
  5718  0F28  0008               	return
  5719  0F29                     __end_of_conteggioVeicoli:	
  5720                           
  5721                           	psect	text22
  5722  0D72                     __ptext22:	
  5723 ;; *************** function _Conteggio *****************
  5724 ;; Defined at:
  5725 ;;		line 92 in file "./CustomLib/TrafficLight.h"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  _count          2    0[COMMON] unsigned int 
  5728 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5729 ;;		 -> motorcycle(4), 
  5730 ;;  _car            1    3[COMMON] PTR unsigned char 
  5731 ;;		 -> car(4), 
  5732 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5733 ;;		 -> truck(4), 
  5734 ;;  index           1    5[COMMON] unsigned char 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5746 ;;      Params:         6       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0
  5748 ;;      Temps:          3       0       0       0       0
  5749 ;;      Totals:         9       0       0       0       0
  5750 ;;Total ram usage:        9 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_conteggioVeicoli
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           
  5760                           ;psect for function _Conteggio
  5761  0D72                     _Conteggio:	
  5762  0D72                     i1l2025:	
  5763                           ;incstack = 0
  5764                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5765                           
  5766                           
  5767                           ;./CustomLib/TrafficLight.h: 92: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 93: {;./CustomLib/TrafficLight.h: 94:         if (_count >= 500)
  5768  0D72  3001               	movlw	1
  5769  0D73  0271               	subwf	Conteggio@_count+1,w
  5770  0D74  30F4               	movlw	244
  5771  0D75  1903               	skipnz
  5772  0D76  0270               	subwf	Conteggio@_count,w
  5773  0D77  1C03               	skipc
  5774  0D78  2D7A               	goto	u125_21
  5775  0D79  2D7B               	goto	u125_20
  5776  0D7A                     u125_21:	
  5777  0D7A  2D8B               	goto	i1l2029
  5778  0D7B                     u125_20:	
  5779  0D7B                     i1l2027:	
  5780                           
  5781                           ;./CustomLib/TrafficLight.h: 95:         {;./CustomLib/TrafficLight.h: 96:             _
      +                          motorcycle[index]=_motorcycle[index]+1;
  5782  0D7B  0875               	movf	Conteggio@index,w
  5783  0D7C  0772               	addwf	Conteggio@_motorcycle,w
  5784  0D7D  00F6               	movwf	??_Conteggio
  5785  0D7E  0876               	movf	??_Conteggio,w
  5786  0D7F  0084               	movwf	4
  5787  0D80  1383               	bcf	3,7	;select IRP bank0
  5788  0D81  0800               	movf	0,w
  5789  0D82  3E01               	addlw	1
  5790  0D83  00F7               	movwf	??_Conteggio+1
  5791  0D84  0875               	movf	Conteggio@index,w
  5792  0D85  0772               	addwf	Conteggio@_motorcycle,w
  5793  0D86  00F8               	movwf	??_Conteggio+2
  5794  0D87  0878               	movf	??_Conteggio+2,w
  5795  0D88  0084               	movwf	4
  5796  0D89  0877               	movf	??_Conteggio+1,w
  5797  0D8A  0080               	movwf	0
  5798  0D8B                     i1l2029:	
  5799                           
  5800                           ;./CustomLib/TrafficLight.h: 98:         if (_count >= 1500)
  5801  0D8B  3005               	movlw	5
  5802  0D8C  0271               	subwf	Conteggio@_count+1,w
  5803  0D8D  30DC               	movlw	220
  5804  0D8E  1903               	skipnz
  5805  0D8F  0270               	subwf	Conteggio@_count,w
  5806  0D90  1C03               	skipc
  5807  0D91  2D93               	goto	u126_21
  5808  0D92  2D94               	goto	u126_20
  5809  0D93                     u126_21:	
  5810  0D93  2DA4               	goto	i1l2033
  5811  0D94                     u126_20:	
  5812  0D94                     i1l2031:	
  5813                           
  5814                           ;./CustomLib/TrafficLight.h: 99:         {;./CustomLib/TrafficLight.h: 100:             
      +                          _car[index]=_car[index]+1;
  5815  0D94  0875               	movf	Conteggio@index,w
  5816  0D95  0773               	addwf	Conteggio@_car,w
  5817  0D96  00F6               	movwf	??_Conteggio
  5818  0D97  0876               	movf	??_Conteggio,w
  5819  0D98  0084               	movwf	4
  5820  0D99  1383               	bcf	3,7	;select IRP bank0
  5821  0D9A  0800               	movf	0,w
  5822  0D9B  3E01               	addlw	1
  5823  0D9C  00F7               	movwf	??_Conteggio+1
  5824  0D9D  0875               	movf	Conteggio@index,w
  5825  0D9E  0773               	addwf	Conteggio@_car,w
  5826  0D9F  00F8               	movwf	??_Conteggio+2
  5827  0DA0  0878               	movf	??_Conteggio+2,w
  5828  0DA1  0084               	movwf	4
  5829  0DA2  0877               	movf	??_Conteggio+1,w
  5830  0DA3  0080               	movwf	0
  5831  0DA4                     i1l2033:	
  5832                           
  5833                           ;./CustomLib/TrafficLight.h: 102:         if (_count >= 3000)
  5834  0DA4  300B               	movlw	11
  5835  0DA5  0271               	subwf	Conteggio@_count+1,w
  5836  0DA6  30B8               	movlw	184
  5837  0DA7  1903               	skipnz
  5838  0DA8  0270               	subwf	Conteggio@_count,w
  5839  0DA9  1C03               	skipc
  5840  0DAA  2DAC               	goto	u127_21
  5841  0DAB  2DAD               	goto	u127_20
  5842  0DAC                     u127_21:	
  5843  0DAC  2DBD               	goto	i1l173
  5844  0DAD                     u127_20:	
  5845  0DAD                     i1l2035:	
  5846                           
  5847                           ;./CustomLib/TrafficLight.h: 103:         {;./CustomLib/TrafficLight.h: 104:            
      +                           _truck[index]=_truck[index]+1;
  5848  0DAD  0875               	movf	Conteggio@index,w
  5849  0DAE  0774               	addwf	Conteggio@_truck,w
  5850  0DAF  00F6               	movwf	??_Conteggio
  5851  0DB0  0876               	movf	??_Conteggio,w
  5852  0DB1  0084               	movwf	4
  5853  0DB2  1383               	bcf	3,7	;select IRP bank0
  5854  0DB3  0800               	movf	0,w
  5855  0DB4  3E01               	addlw	1
  5856  0DB5  00F7               	movwf	??_Conteggio+1
  5857  0DB6  0875               	movf	Conteggio@index,w
  5858  0DB7  0774               	addwf	Conteggio@_truck,w
  5859  0DB8  00F8               	movwf	??_Conteggio+2
  5860  0DB9  0878               	movf	??_Conteggio+2,w
  5861  0DBA  0084               	movwf	4
  5862  0DBB  0877               	movf	??_Conteggio+1,w
  5863  0DBC  0080               	movwf	0
  5864  0DBD                     i1l173:	
  5865  0DBD  0008               	return
  5866  0DBE                     __end_of_Conteggio:	
  5867                           
  5868                           	psect	text23
  5869  07F7                     __ptext23:	
  5870 ;; *************** function _UART_Read *****************
  5871 ;; Defined at:
  5872 ;;		line 370 in file "main.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;		None
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;		None
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      unsigned char 
  5879 ;; Registers used:
  5880 ;;		wreg
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5886 ;;      Params:         0       0       0       0       0
  5887 ;;      Locals:         0       0       0       0       0
  5888 ;;      Temps:          0       0       0       0       0
  5889 ;;      Totals:         0       0       0       0       0
  5890 ;;Total ram usage:        0 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_ISR
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           
  5900                           ;psect for function _UART_Read
  5901  07F7                     _UART_Read:	
  5902  07F7                     i1l2367:	
  5903                           ;incstack = 0
  5904                           ; Regs used in _UART_Read: [wreg]
  5905                           
  5906  07F7                     i1l303:	
  5907                           ;main.c: 373:         ;
  5908                           
  5909                           
  5910                           ;main.c: 372:     while (!RCIF)
  5911  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  5912  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  5913  07F9  1E8C               	btfss	12,5	;volatile
  5914  07FA  2FFC               	goto	u177_21
  5915  07FB  2FFD               	goto	u177_20
  5916  07FC                     u177_21:	
  5917  07FC  2FF7               	goto	i1l303
  5918  07FD                     u177_20:	
  5919  07FD                     i1l305:	
  5920                           
  5921                           ;main.c: 374:     RCIF = 0;
  5922  07FD  128C               	bcf	12,5	;volatile
  5923  07FE                     i1l2369:	
  5924                           
  5925                           ;main.c: 375:     return RCREG;
  5926  07FE  081A               	movf	26,w	;volatile
  5927  07FF                     i1l306:	
  5928  07FF  0008               	return
  5929  0800                     __end_of_UART_Read:	
  5930  007E                     btemp	set	126	;btemp
  5931  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        16
    BSS         173
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      71
    BANK1            80      0      79
    BANK3            96     11      95
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[8] size(2) Largest target is 14
		 -> s7(BANK3[14]), s6(BANK3[14]), s5(BANK3[14]), s4(BANK3[14]), 
		 -> s3(BANK3[14]), s2(BANK3[14]), s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK0[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   19217
                                             32 BANK0     13    13      0
                                              0 BANK3     11    11      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                           _init_ADC
                       _luciSemaforo
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    4428
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1336
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     183
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  2     2      0    2447
                                             11 BANK0      2     2      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           4     1      3     934
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    14    13      1    1273
                                             12 BANK0     14    13      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     376
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7    1023
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    3629
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      B      5F       9       99.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2D      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     103      12        0.0%
ABS                  0      0     103       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jul 11 16:31:06 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                                l81 0CF1                                l98 0753  
                    ___awdiv@sign 0031                                _s0 00D1                                _s1 00C3  
                              _s2 01D6                                _s3 01C8                                _s4 01BA  
                              _s5 01AC                                _s6 019E                                _s7 0190  
                              fsr 0004               ___wmul@multiplicand 0026                    _GetDigits$1221 0039  
               luciSemaforo@index 0027                       __CFG_LVP$ON 0000                               l123 04ED  
                             l132 0566                               l311 0CBC                               l129 053E  
                             l241 008F                               l162 061A                               l314 0C4E  
                             l330 0DC6                               l331 0DCA                               l149 0D71  
                             l167 0FFF                               l351 07CF                               l335 0DE1  
                             l255 0219                               l239 0322                               l600 0F91  
                             l512 062F                               l328 0DC2                               l272 0492  
                             l337 0DE5                               l282 0C7F                               l522 06B7  
                             l338 0DE9                               l339 0E10                               l291 0BFC  
                             l285 0C8B                               l613 0EC3                               l293 0C00  
                             l294 0C03                               l279 0C26                               l447 07DE  
                             l288 0D2B                               l473 0C65                               l449 07F6  
                    __CFG_CPD$OFF 0000                               _ISR 0E11                               _car 005C  
                             _map 0CBD                               fsr0 0004                               indf 0000  
                    ___awmod@sign 002A                      __CFG_FOSC$HS 0000                              ?_ISR 0070  
           ??_ShowDigitsOnDisplay 002B                              l3001 0F37                              l3011 0F4C  
                            l3003 0F3B                              l3021 0F6F                              l3013 0F4F  
                            l3005 0F40                              l3101 058E                              l3031 0F88  
                            l3023 0F75                              l3015 0F56                              l3007 0F44  
                            l3111 05D2                              l3033 0F8D                              l3025 0F76  
                            l3017 0F5A                              l3009 0F46                              l3041 0E70  
                            l3121 0610                              l3201 0778                              l3027 0F7D  
                            l3019 0F5E                              l3051 0E86                              l3043 0E75  
                            l3123 0614                              l3107 0590                              l3115 05F3  
                            l3131 0F96                              l3203 078D                              l3029 0F83  
                            l3061 0EA2                              l3053 0E89                              l3045 0E77  
                            l3037 0E69                              l3109 05B1                              l3117 0606  
                            l3141 0FCD                              l3301 008A                              l3071 0EBF  
                            l3063 0EA8                              l3055 0E90                              l3047 0E7B  
                            l3039 0E6C                              l3119 060A                              l3143 0FFA  
                            l3135 0F9D                              l3207 07A2                              l3151 0C1B  
                            l3223 0DED                              l3215 0DC1                              l3311 0096  
                            l3065 0EAF                              l3057 0E94                              l3049 0E80  
                            l3081 06BC                              l3137 0FAC                              l3129 0F95  
                            l3209 07B7                              l3161 0D29                              l3153 0C1F  
                            l3401 034A                              l3313 00DD                              l3321 01B2  
                            l3305 0091                              l3059 0E98                              l3067 0EB5  
                            l3083 06D1                              l3091 0567                              l3139 0FBA  
                            l3163 0D2A                              l3155 0CF2                              l3147 0C14  
                            l3219 0DCE                              l3227 0E00                              l3075 0CBD  
                            l3411 03F0                              l3403 0375                              l3315 0124  
                            l3323 01C7                              l3181 0C69                              l3069 0EBA  
                            l3085 06ED                              l3157 0CFA                              l3149 0C18  
                            l3173 0CA3                              l3165 0C8F                              l3405 03D5  
                            l3421 0430                              l3333 01E0                              l3325 01CF  
                            l3317 016B                              l3183 0C75                              l3087 072A  
                            l3079 06BB                              l3191 0754                              l3159 0D28  
                            l3175 0CAC                              l3167 0CA2                              l3431 0496  
                            l3423 0436                              l3407 03DB                              l3415 03F1  
                            l3351 021B                              l3335 01EF                              l3327 01DC  
                            l3271 0048                              l3185 0C7C                              l3089 073D  
                            l3097 056A                              l3193 0755                              l3177 0CB2  
                            l3433 049A                              l3417 0406                              l3409 03E8  
                            l3425 0486                              l3361 02E5                              l3353 02AF  
                            l3345 0205                              l3337 01F5                              l3281 0054  
                            l3273 004A                              l3265 003F                              l3187 0C83  
                            l3099 0570                              l3195 075A                              l3179 0CB6  
                            l3427 048C                              l3419 042A                              l3371 02FA  
                            l3355 02C0                              l3347 020A                              l3339 0202  
                            l3291 0085                              l3283 005B                              l3275 004C  
                            l3267 0045                              l3197 076E                              l3429 0490  
                            l3373 0300                              l3365 02EC                              l3357 02D1  
                            l3349 0212                              l3381 030D                              l3293 0086  
                            l3285 0060                              l3277 0050                              l3269 0046  
                            l2911 0D65                              l2903 0D2F                              l3199 0773  
                            l3391 0330                              l3383 0328                              l3375 0303  
                            l3367 02F1                              l3359 02E2                              l3295 0087  
                            l3287 006B                              l3279 0052                              l2913 0D6D  
                            l2905 0D3E                              l2921 0C3D                              l2841 04BF  
                            l3393 0332                              l3385 0329                              l3377 0309  
                            l3297 0088                              l3289 0082                              l2907 0D46  
                            l2923 0C4C                              l3651 0DF5                              l2931 07E5  
                            l2843 04C0                              l2835 04A2                              l3387 032A  
                            l3395 033C                              l3299 0089                              l2909 0D57  
                            l2941 0C53                              l3653 0E08                              l2933 07EC  
                            l2925 07D0                              l2861 04F3                              l2837 04B1  
                            l2917 0BFC                              l3397 0342                              l3389 032C  
                            l3645 01B9                              ?_map 0034                              l2943 0C57  
                            l3655 07AC                              l2935 07F2                              l2927 07D4  
                            l2871 050F                              l2863 04FB                              l2855 04C6  
                            l2839 04BE                              l2919 0C01                              l3399 0346  
                            l3647 031A                              l3657 05FB                              l2945 0C5B  
                            l2961 063E                              l2953 061B                              l3649 0DD6  
                            l2929 07D8                              l2857 04DA                              l2849 04C2  
                            l2947 0C5D                              l2939 0C52                              l2971 0662  
                            l2963 0642                              l2955 061E                              l2891 0551  
                            l2883 0517                              l2867 04FC                              l2859 04E0  
                            l2949 0C64                              l2981 0690                              l2973 0666  
                            l2965 064A                              l2957 0622                              l2885 052B  
                            l2877 0513                              l2869 0502                              l2983 0699  
                            l2975 066F                              l2967 0652                              l2959 0633  
                            l2895 0552                              l2887 0531                              l2993 0F29  
                            l2977 0681                              l2969 0655                              l2985 069F  
                            l2897 0558                              l2889 0544                              l2995 0F2C  
                            l2987 06A4                              l2979 068F                              l2899 0565  
                            l2997 0F30                              l2989 06AF                              l2999 0F35  
                            u2200 0565                              u2201 0564                              u2130 04ED  
                            u2131 04EC                              u2115 04B4                              u2300 0633  
                            u2140 04F3                              u2124 04D2                              u2220 0C00  
                            u2301 0632                              u2205 0561                              u2141 04F2  
                            u2125 04D0                              u2221 0BFF                              u2310 0652  
                            u2230 07D8                              u2150 050F                              u2215 0D4C  
                            u2311 0651                              u2231 07D7                              u2151 050E  
                            u2135 04E9                              u2400 0F3B                              u2401 0F3A  
                            u2410 0F4C                              u2330 0666                              u2170 053E  
                            u2411 0F4B                              u2331 0665                              u2171 053D  
                            u2155 050B                              u2500 0E7B                              u2260 07F2  
                            u2180 0544                              u2164 0523                              u2501 0E7A  
                            u2325 0657                              u2261 07F1                              u2245 07DF  
                            u2181 0543                              u2165 0521                              u2430 0F5E  
                            u2510 0E86                              u2270 0C57                              u2350 0681  
                            u2431 0F5D                              u2511 0E85                              u2271 0C56  
                            u2351 0680                              u2255 07E6                              u2175 053A  
                            u2600 0610                              u2280 0C64                              u2425 0F50  
                            u2601 060F                              u2281 0C63                              u2345 0668  
                            u2450 0F6F                              u2530 0E98                              u2610 061A  
                            u2370 069F                              u2290 0622                              u2194 054A  
                            u2451 0F6E                              u2531 0E97                              u2611 0619  
                            u2371 069E                              u2355 067D                              u2291 0621  
                            u2195 0548                              u2540 0EA2                              u2620 0F9C  
                            u2700 0778                              u2380 06A4                              u2445 0F5F  
                            u2541 0EA1                              u2525 0E8A                              u2621 0F9B  
                            u2701 0777                              u2381 06A3                              u2365 0691  
                            u2470 0F83                              u2390 0F30                              u2471 0F82  
                            u2455 0F6B                              u2391 0F2F                              u2480 0F88  
                            u2560 0EB5                              u2640 0D09                              u2800 0309  
                            u2481 0F87                              u2465 0F77                              u2561 0EB4  
                            u2545 0E9E                              u2801 0308                              u2570 0EBA  
                            u2490 0E70                              u2650 0CBC                              u2810 0328  
                            u2571 0EB9                              u2555 0EA9                              u2491 0E6F  
                            u2635 0FC2                              u2651 0CBB                              u2811 0327  
                            u2580 06ED                              u2900 0490                              u2820 0330  
                            u2740 008E                              u2581 06EC                              u2645 0D04  
                            u2901 048F                              u2821 032F                              u2741 008D  
                            u2670 0C83                              u2590 0570                              u2910 0496  
                            u2830 0342                              u2750 01DC                              u2671 0C82  
                            u2591 056F                              u2911 0495                              u2831 0341  
                            u2751 01DB                              u2680 075A                              u2920 049A  
                            u2840 0346                              u2760 0202                              u2665 0C6C  
                            u2585 06E9                              u2681 0759                              u2921 0499  
                            u2841 0345                              u2761 0201                              u2690 0773  
                            u2850 0375                              u2770 0218                              u2691 0772  
                            u2851 0374                              u2771 0217                              u2755 01D8  
                            u2860 03D5                              u2780 02EB                              u2861 03D4  
                            u2781 02EA                              u2765 01FE                              u2870 03F0  
                            u2790 0300                              u2871 03EF                              u2791 02FF  
                            u2880 0436                              u2881 0435                              u2890 048C  
                            u2947 0C23                              u2891 048B                              _RCIF 0065  
                            u2957 0C79                              _TMR0 0001                              _TXIF 0064  
                    __CFG_WRT$OFF 0000                              _disp 0053                              _main 003F  
                            _time 00A0                              map@x 0034                              btemp 007E  
                __end_of_ADC_Read 0C8C                     __CFG_BOREN$ON 0000                       main@umidita 01E5  
                            start 0010                   __end_of_GetTime 0D72                 ___bmul@multiplier 0027  
                           ??_ISR 0020         __size_of_conteggioVeicoli 0065                             ??_map 003E  
                 __end_of___aldiv 06B8                             ?_main 0070                   __end_of___awdiv 0F92  
                   __CFG_WDTE$OFF 0000                   __end_of___awmod 0EC4                   ___awdiv@divisor 002B  
                           _T1CON 0010                             i1l303 07F7                             i1l305 07FD  
                           i1l306 07FF                             i1l322 0F28                             i1l173 0DBD  
                           i1l361 0E60                   ___awdiv@counter 0030                             _RCREG 001A  
                           _TMR1H 000F                             _TMR1L 000E                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _TRISE 0089  
                           _TXREG 0019                     __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A  
              __size_of_UART_Read 0009                   __end_of_display 0811                             _count 004D  
                           _unita 0066                             main@i 01ED                             _truck 0058  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 0013                      __end_of_main 049F         __size_of_SetReceivedTimes 006E  
              __size_of_GetDigits 009C                            ??_main 0040                 SetDefaultTimers@i 0032  
               SetDefaultTimers@l 0033                __size_of_BuildByte 00C8                        _SetDisplay 0C3A  
                          _ADCON0 001F                            _ADCON1 009F                __size_of_Conteggio 004C  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 002D  
                          i1l2031 0D94                            i1l2033 0DA4                            i1l2025 0D72  
                          i1l2035 0DAD                            i1l2027 0D7B                            i1l2029 0D8B  
                          i1l2601 0E11                            i1l2611 0E22                            i1l2603 0E15  
                          i1l2381 0EEE                            i1l2373 0EC4                            i1l2621 0E3D  
                          i1l2613 0E26                            i1l2605 0E19                            i1l2367 07F7  
                          i1l2391 0F22                            i1l2383 0EF7                            i1l2375 0EE4  
                          i1l2631 0E4C                            i1l2623 0E3E                            i1l2615 0E34  
                          i1l2607 0E1C                            u210_20 0E56                            i1l2369 07FE  
                          i1l2385 0EFF                            i1l2641 0E5C                            u210_21 0E55  
                          i1l2633 0E50                            i1l2625 0E43                            i1l2617 0E38  
                          i1l2609 0E1E                            i1l2387 0F1A                            i1l2379 0EE5  
                          i1l2643 0E5E                            i1l2635 0E56                            i1l2627 0E47  
                          i1l2619 0E39                            i1l2389 0F1E                            i1l2637 0E57  
                          i1l2629 0E4B                            i1l2639 0E58                            u204_20 0E15  
                          u204_21 0E14                            u125_20 0D7B                            u205_20 0E19  
                          u125_21 0D7A                            u205_21 0E18                            u126_20 0D94  
                          u206_20 0E22                            u126_21 0D93                            u206_21 0E21  
                          u127_20 0DAD                            u207_20 0E26                            u127_21 0DAC  
                          u207_21 0E25                            u208_20 0E3D                            u208_21 0E3C  
                          u209_20 0E4B                            _INTCON 000B                            u209_21 0E4A  
                          u180_20 0F28                            u180_21 0F27                            u177_20 07FD  
                          u177_21 07FC                            u178_20 0EEE                            u178_21 0EED  
                          u179_20 0EFF                            u179_21 0EFE                            _TMR0IF 005A  
                          _TMR1IF 0060                         ??_GetTime 0026                      ?_UART_TxChar 0070  
               __end_of_UART_Init 0D2C                 __end_of_UART_Read 0800                            ___bmul 0C4F  
                       ??___aldiv 002C                   GetTime@shortInt 0029                            ___wmul 07D0  
                       ??___awdiv 002F                            _decine 0065                         ??___awmod 0028  
                __end_of_init_ADC 0C27                            _cycled 0054                  ___awdiv@quotient 0032  
                 ___awmod@divisor 0024                   ___awmod@counter 0029                  __end_of_sendByte 0CBD  
                 GetDigits@decine 0034                     main@pressione 01E6                         ?_ADC_Read 0024  
                          saved_w 007E           __end_of__initialization 003B                 __end_of_GetDigits 0754  
       __size_of_SetDefaultTimers 00B4               ___bmul@multiplicand 0024                    __pcstackCOMMON 0070  
               __end_of_BuildByte 0567                      __pidataBANK1 0C04                  _conteggioVeicoli 0EC4  
               __end_of_Conteggio 0DBE                     ?_luciSemaforo 0024                        ??_ADC_Read 0026  
          SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024  
                   GetDigits@Time 0036              _dataFromGatewayIndex 0050              _timerReadFromGateway 004F  
                      __pbssBANK0 004D                        __pbssBANK1 00A0                        __pbssBANK3 0190  
                      __pmaintext 003F                           ?___bmul 0024                           ?___wmul 0024  
                  ??_luciSemaforo 0025                     sendByte@byte0 003D                     sendByte@byte1 0038  
                      __pintentry 0004                  _SetReceivedTimes 0F92       __end_of_ShowDigitsOnDisplay 07D0  
                      __stringtab 0800                         ?_init_ADC 0070                           _GetTime 0D2C  
                 BuildByte@valore 0025                   BuildByte@txByte 0029           GetTime@_dataFromGateway 0024  
                       ?_sendByte 0038                        _n_semafori 0811              __size_of_UART_TxChar 000B  
                         ___aldiv 061B                   __size_of___bmul 0017                           ___awdiv 0F29  
                         ___awmod 0E69               __size_of_SetDisplay 0015                   __size_of___wmul 0027  
               conteggioVeicoli@i 007D                           __ptext1 0C8C                           __ptext2 0BF9  
                         __ptext3 049F                           __ptext4 0CBD                           __ptext5 07D0  
                         __ptext6 0DBE                           __ptext7 0C14                           __ptext8 0CF2  
                         __ptext9 061B                           _comando 0051                           _display 0806  
                    __size_of_ISR 0058                      __size_of_map 0035                  ___awmod@dividend 0026  
                ___aldiv@dividend 0028              BuildByte@sommaColumn 002F                           clrloop0 0BF2  
            end_of_initialization 003B                        ??_init_ADC 0024                    main@lux_select 01E9  
                      ??_sendByte 003A                  _SetDefaultTimers 0567                         _RCSTAbits 0018  
                ___aldiv@quotient 002F                        _motorcycle 0060                         _UART_Init 0CF2  
                       _UART_Read 07F7             SetReceivedTimes@index 0038                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                      SetDisplay@d1 0027  
                    SetDisplay@d2 0024                      SetDisplay@d3 0025                         _TRISCbits 0087  
               __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0F29              __end_of_luciSemaforo 0E11  
                      map@out_max 003C                        map@out_min 003A  SetReceivedTimes@_dataFromGateway 0037  
                       _TXSTAbits 0098                         _GetDigits 06B8                    __end_of___bmul 0C66  
                  __end_of___wmul 07F7                        ?_UART_Init 0033                        ?_UART_Read 0070  
                       _BuildByte 049F                         _Conteggio 0D72                 BuildByte@sommaRow 002E  
             start_initialization 0013                       __end_of_ISR 0E69                      ??_SetDisplay 0027  
                     __end_of_map 0CF2          __end_of_SetReceivedTimes 1000                        ?_GetDigits 0034  
                        ??___bmul 0025                    ADC_Read@canale 0027                          ??___wmul 0028  
                      init_fetch0 0C27                       __pdataBANK1 00DF                __end_of_SetDisplay 0C4F  
                      ?_BuildByte 0024                    GetDigits@unita 0035                        ?_Conteggio 0070  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK3 01E4  
                        ?_GetTime 0024             SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024  
               __size_of_init_ADC 0013                         _centinaia 0064                 __size_of_sendByte 0031  
                        ?___aldiv 0024                          ?___awdiv 002B                          ?___awmod 0024  
                     ??_UART_Init 0035                       ??_UART_Read 0070                    BuildByte@i_355 0036  
                       __pstrings 0800                    BuildByte@y_356 0032                    sendByte@valore 0039  
                  sendByte@txByte 003E                    BuildByte@byte0 0028                    BuildByte@byte1 0024  
        __end_of_SetDefaultTimers 061B                          _ADC_Read 0C66             __size_of_luciSemaforo 0053  
                       _count_lux 0052                     UART_TxChar@ch 0024      __size_of_ShowDigitsOnDisplay 007C  
                 ___aldiv@divisor 0024                 SetReceivedTimes@i 0039                 interrupt_function 0004  
                 ___aldiv@counter 002D                    ___wmul@product 0028        SetReceivedTimes@semaforoId 0035  
                       clear_ram0 0BF1                          _PIE1bits 008C                     ??_UART_TxChar 0024  
                     ??_GetDigits 0038                          _GO_nDONE 00FA                      _luciSemaforo 0DBE  
               UART_Init@baudrate 0033                       ??_BuildByte 0026                         map@in_max 0038  
                       map@in_min 0036                       __stringbase 0805                         main@i_503 01EA  
                       main@i_504 01E7                         main@i_506 01E8                         main@i_508 01EC  
                     ??_Conteggio 0076                 ___wmul@multiplier 0024                      GetTime@index 0028  
                    _RoadsSensors 00B0                 ?_conteggioVeicoli 0070                      _secondPassed 0055  
              ??_conteggioVeicoli 0079                  __size_of_GetTime 0046                          _Semafori 00DF  
              GetDigits@centinaia 003B                       _readGateway 0056                  __size_of___aldiv 009D  
             __end_of_UART_TxChar 0C04                  __size_of___awdiv 0069                  __size_of___awmod 005B  
              __end_of__stringtab 0806                         sendByte@i 003F                          __ptext10 0754  
                        __ptext11 0C3A                          __ptext20 0E11                          __ptext12 0F92  
                        __ptext21 0EC4                          __ptext13 0C4F                          __ptext22 0D72  
                        __ptext14 0D2C                          __ptext23 07F7                          __ptext15 0567  
                        __ptext16 06B8                          __ptext17 0E69                          __ptext18 0F29  
                        __ptext19 0C66                __end_of_n_semafori 0812                          _init_ADC 0C14  
               ?_SetReceivedTimes 002C                     __size_of_main 0460                   _dataFromGateway 00B4  
                        _sendByte 0C8C                ??_SetReceivedTimes 002D                          main@temp 01E4  
                      _INTCONbits 000B                          init_ram0 0C2B              Conteggio@_motorcycle 0072  
                        intlevel1 0000                   _readGatewayDone 0057                         stringcode 0800  
                     _UART_TxChar 0BF9           SetReceivedTimes@colorId 0036                        GetTime@tmp 002A  
             _ShowDigitsOnDisplay 0754                        _OPTION_REG 0081                   SetDisplay@value 0026  
                        stringdir 0800                          stringtab 0800                 ?_SetDefaultTimers 0024  
                    ___aldiv@sign 002E                ??_SetDefaultTimers 002B              ?_ShowDigitsOnDisplay 0070  
                      BuildByte@i 0034                        BuildByte@y 0030         SetDefaultTimers@_semafori 002A  
                 Conteggio@_count 0070                     Conteggio@_car 0073                   Conteggio@_truck 0074  
                  Conteggio@index 0075  
