

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun 28 11:35:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK3
   199  0CE9                     __pidataBANK3:	
   200                           
   201                           ;initializer for _Semafori
   202  0CE9  34E3               	retlw	low (_s0| 0)
   203  0CEA  3400               	retlw	high (_s0| 0)
   204  0CEB  34DD               	retlw	low (_s1| 0)
   205  0CEC  3400               	retlw	high (_s1| 0)
   206  0CED  34D7               	retlw	low (_s2| 0)
   207  0CEE  3400               	retlw	high (_s2| 0)
   208  0CEF  34D1               	retlw	low (_s3| 0)
   209  0CF0  3400               	retlw	high (_s3| 0)
   210  0CF1  34CB               	retlw	low (_s4| 0)
   211  0CF2  3400               	retlw	high (_s4| 0)
   212  0CF3  34C5               	retlw	low (_s5| 0)
   213  0CF4  3400               	retlw	high (_s5| 0)
   214  0CF5  34BF               	retlw	low (_s6| 0)
   215  0CF6  3400               	retlw	high (_s6| 0)
   216  0CF7  34B9               	retlw	low (_s7| 0)
   217  0CF8  3400               	retlw	high (_s7| 0)
   218  0CF9  34B3               	retlw	low (_s8| 0)
   219  0CFA  3400               	retlw	high (_s8| 0)
   220  0CFB  34AD               	retlw	low (_s9| 0)
   221  0CFC  3400               	retlw	high (_s9| 0)
   222  0CFD  34A7               	retlw	low (_s10| 0)
   223  0CFE  3400               	retlw	high (_s10| 0)
   224  0CFF  34B7               	retlw	low (_s11| (0+256))
   225  0D00  3401               	retlw	high (_s11| (0+256))
   226  0D01  34B1               	retlw	low (_s12| (0+256))
   227  0D02  3401               	retlw	high (_s12| (0+256))
   228  0D03  34AB               	retlw	low (_s13| (0+256))
   229  0D04  3401               	retlw	high (_s13| (0+256))
   230  0D05  34A5               	retlw	low (_s14| (0+256))
   231  0D06  3401               	retlw	high (_s14| (0+256))
   232  0D07  349F               	retlw	low (_s15| (0+256))
   233  0D08  3401               	retlw	high (_s15| (0+256))
   234                           
   235                           	psect	strings
   236  0800                     __pstrings:	
   237  0800                     stringtab:	
   238  0800                     __stringtab:	
   239  0800                     stringcode:	
   240                           ;	String table - string pointers are 1 byte each
   241                           
   242  0800                     stringdir:	
   243  0800  3008               	movlw	high stringdir
   244  0801  008A               	movwf	10
   245  0802  0804               	movf	4,w
   246  0803  0A84               	incf	4,f
   247  0804  0782               	addwf	2,f
   248  0805                     __stringbase:	
   249  0805  3400               	retlw	0
   250  0806                     __end_of__stringtab:	
   251  0806                     _display:	
   252  0806  343F               	retlw	63
   253  0807  3406               	retlw	6
   254  0808  345B               	retlw	91
   255  0809  344F               	retlw	79
   256  080A  3466               	retlw	102
   257  080B  346D               	retlw	109
   258  080C  347D               	retlw	125
   259  080D  3407               	retlw	7
   260  080E  347F               	retlw	127
   261  080F  346F               	retlw	111
   262  0810  3400               	retlw	0
   263  0811                     __end_of_display:	
   264  0006                     _PORTBbits	set	6
   265  0008                     _PORTD	set	8
   266  0005                     _PORTAbits	set	5
   267  001A                     _RCREG	set	26
   268  0019                     _TXREG	set	25
   269  000B                     _INTCONbits	set	11
   270  0018                     _RCSTAbits	set	24
   271  001E                     _ADRESH	set	30
   272  001F                     _ADCON0	set	31
   273  000E                     _TMR1L	set	14
   274  000F                     _TMR1H	set	15
   275  0010                     _T1CON	set	16
   276  0001                     _TMR0	set	1
   277  000B                     _INTCON	set	11
   278  0060                     _TMR1IF	set	96
   279  005A                     _TMR0IF	set	90
   280  0065                     _RCIF	set	101
   281  0064                     _TXIF	set	100
   282  00FA                     _GO_nDONE	set	250
   283  008C                     _PIE1bits	set	140
   284  0099                     _SPBRG	set	153
   285  0098                     _TXSTAbits	set	152
   286  0087                     _TRISCbits	set	135
   287  009E                     _ADRESL	set	158
   288  009F                     _ADCON1	set	159
   289  0085                     _TRISA	set	133
   290  0081                     _OPTION_REG	set	129
   291  0089                     _TRISE	set	137
   292  0088                     _TRISD	set	136
   293  0087                     _TRISC	set	135
   294  0086                     _TRISB	set	134
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  0013                     start_initialization:	
   300  0013                     __initialization:	
   301                           
   302                           ; Initialize objects allocated to BANK3
   303  0013  1783               	bsf	3,7	;select IRP bank2
   304  0014  30DD               	movlw	low (__pdataBANK3+32)
   305  0015  00FD               	movwf	btemp+-1
   306  0016  300C               	movlw	high __pidataBANK3
   307  0017  00FE               	movwf	btemp
   308  0018  30E9               	movlw	low __pidataBANK3
   309  0019  00FF               	movwf	btemp+1
   310  001A  30BD               	movlw	low __pdataBANK3
   311  001B  0084               	movwf	4
   312  001C  120A  158A  24AE  120A  118A  	fcall	init_ram0
   313                           
   314                           ; Clear objects allocated to BANK3
   315  0021  3090               	movlw	low __pbssBANK3
   316  0022  0084               	movwf	4
   317  0023  30BD               	movlw	low (__pbssBANK3+45)
   318  0024  120A  158A  247B  120A  118A  	fcall	clear_ram0
   319                           
   320                           ; Clear objects allocated to BANK1
   321  0029  1383               	bcf	3,7	;select IRP bank0
   322  002A  30A0               	movlw	low __pbssBANK1
   323  002B  0084               	movwf	4
   324  002C  30ED               	movlw	low (__pbssBANK1+77)
   325  002D  120A  158A  247B  120A  118A  	fcall	clear_ram0
   326                           
   327                           ; Clear objects allocated to BANK0
   328  0032  304A               	movlw	low __pbssBANK0
   329  0033  0084               	movwf	4
   330  0034  3062               	movlw	low (__pbssBANK0+24)
   331  0035  120A  158A  247B  120A  118A  	fcall	clear_ram0
   332                           
   333                           ; Clear objects allocated to COMMON
   334  003A  01FD               	clrf	__pbssCOMMON& (0+127)
   335  003B                     end_of_initialization:	
   336                           ;End of C runtime variable initialization code
   337                           
   338  003B                     __end_of__initialization:	
   339  003B  0183               	clrf	3
   340  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   341                           
   342                           	psect	bssCOMMON
   343  007D                     __pbssCOMMON:	
   344  007D                     _count_lux:	
   345  007D                     	ds	1
   346                           
   347                           	psect	bssBANK0
   348  004A                     __pbssBANK0:	
   349  004A                     _count:	
   350  004A                     	ds	2
   351  004C                     _timerReadFromGateway:	
   352  004C                     	ds	1
   353  004D                     _dataFromGatewayIndex:	
   354  004D                     	ds	1
   355  004E                     _time:	
   356  004E                     	ds	1
   357  004F                     _comando:	
   358  004F                     	ds	1
   359  0050                     _disp:	
   360  0050                     	ds	1
   361  0051                     _old_disp:	
   362  0051                     	ds	1
   363  0052                     _cycled:	
   364  0052                     	ds	1
   365  0053                     _secondPassed:	
   366  0053                     	ds	1
   367  0054                     _readGateway:	
   368  0054                     	ds	1
   369  0055                     _readGatewayDone:	
   370  0055                     	ds	1
   371  0056                     _car:	
   372  0056                     	ds	4
   373  005A                     _motorcycle:	
   374  005A                     	ds	4
   375  005E                     _id_semaforo:	
   376  005E                     	ds	1
   377  005F                     _centinaia:	
   378  005F                     	ds	1
   379  0060                     _decine:	
   380  0060                     	ds	1
   381  0061                     _unita:	
   382  0061                     	ds	1
   383                           
   384                           	psect	bssBANK1
   385  00A0                     __pbssBANK1:	
   386  00A0                     _to_update:	
   387  00A0                     	ds	7
   388  00A7                     _s10:	
   389  00A7                     	ds	6
   390  00AD                     _s9:	
   391  00AD                     	ds	6
   392  00B3                     _s8:	
   393  00B3                     	ds	6
   394  00B9                     _s7:	
   395  00B9                     	ds	6
   396  00BF                     _s6:	
   397  00BF                     	ds	6
   398  00C5                     _s5:	
   399  00C5                     	ds	6
   400  00CB                     _s4:	
   401  00CB                     	ds	6
   402  00D1                     _s3:	
   403  00D1                     	ds	6
   404  00D7                     _s2:	
   405  00D7                     	ds	6
   406  00DD                     _s1:	
   407  00DD                     	ds	6
   408  00E3                     _s0:	
   409  00E3                     	ds	6
   410  00E9                     _truck:	
   411  00E9                     	ds	4
   412                           
   413                           	psect	bssBANK3
   414  0190                     __pbssBANK3:	
   415  0190                     _dataFromGateway:	
   416  0190                     	ds	15
   417  019F                     _s15:	
   418  019F                     	ds	6
   419  01A5                     _s14:	
   420  01A5                     	ds	6
   421  01AB                     _s13:	
   422  01AB                     	ds	6
   423  01B1                     _s12:	
   424  01B1                     	ds	6
   425  01B7                     _s11:	
   426  01B7                     	ds	6
   427                           
   428                           	psect	dataBANK3
   429  01BD                     __pdataBANK3:	
   430  01BD                     _Semafori:	
   431  01BD                     	ds	32
   432                           
   433                           	psect	inittext
   434  0CAA                     init_fetch0:	
   435                           ;	Called with low address in FSR and high address in W
   436                           
   437  0CAA  087E               	movf	btemp,w
   438  0CAB  008A               	movwf	10
   439  0CAC  087F               	movf	btemp+1,w
   440  0CAD  0082               	movwf	2
   441  0CAE                     init_ram0:	
   442                           ;Called with:
   443                           ;	high address of idata address in btemp 
   444                           ;	low address of idata address in btemp+1 
   445                           ;	low address of data in FSR
   446                           ;	high address + 1 of data in btemp-1
   447                           
   448  0CAE  120A  158A  24AA  120A  158A  	fcall	init_fetch0
   449  0CB3  0080               	movwf	0
   450  0CB4  0A84               	incf	4,f
   451  0CB5  0804               	movf	4,w
   452  0CB6  067D               	xorwf	btemp+-1,w
   453  0CB7  1903               	btfsc	3,2
   454  0CB8  3400               	retlw	0
   455  0CB9  0AFF               	incf	btemp+1,f
   456  0CBA  1903               	btfsc	3,2
   457  0CBB  0AFE               	incf	btemp,f
   458  0CBC  2CAE               	goto	init_ram0
   459                           
   460                           	psect	clrtext
   461  0C7B                     clear_ram0:	
   462                           ;	Called with FSR containing the base address, and
   463                           ;	W with the last address+1
   464                           
   465  0C7B  0064               	clrwdt	;clear the watchdog before getting into this loop
   466  0C7C                     clrloop0:	
   467  0C7C  0180               	clrf	0	;clear RAM location pointed to by FSR
   468  0C7D  0A84               	incf	4,f	;increment pointer
   469  0C7E  0604               	xorwf	4,w	;XOR with final address
   470  0C7F  1903               	btfsc	3,2	;have we reached the end yet?
   471  0C80  3400               	retlw	0	;all done for this memory range, return
   472  0C81  0604               	xorwf	4,w	;XOR again to restore value
   473  0C82  2C7C               	goto	clrloop0	;do the next byte
   474                           
   475                           	psect	cstackBANK3
   476  01DD                     __pcstackBANK3:	
   477  01DD                     main@temp:	
   478                           
   479                           ; 1 bytes @ 0x0
   480  01DD                     	ds	1
   481  01DE                     main@umidita:	
   482                           
   483                           ; 1 bytes @ 0x1
   484  01DE                     	ds	1
   485  01DF                     main@pressione:	
   486                           
   487                           ; 1 bytes @ 0x2
   488  01DF                     	ds	1
   489  01E0                     main@colorId:	
   490                           
   491                           ; 1 bytes @ 0x3
   492  01E0                     	ds	1
   493  01E1                     main@time:	
   494                           
   495                           ; 2 bytes @ 0x4
   496  01E1                     	ds	2
   497  01E3                     main@tmp:	
   498                           
   499                           ; 1 bytes @ 0x6
   500  01E3                     	ds	1
   501  01E4                     main@semaforoId:	
   502                           
   503                           ; 1 bytes @ 0x7
   504  01E4                     	ds	1
   505  01E5                     main@i_444:	
   506                           
   507                           ; 1 bytes @ 0x8
   508  01E5                     	ds	1
   509  01E6                     main@i_446:	
   510                           
   511                           ; 1 bytes @ 0x9
   512  01E6                     	ds	1
   513  01E7                     main@i_447:	
   514                           
   515                           ; 1 bytes @ 0xA
   516  01E7                     	ds	1
   517  01E8                     main@index:	
   518                           
   519                           ; 1 bytes @ 0xB
   520  01E8                     	ds	1
   521  01E9                     main@i_443:	
   522                           
   523                           ; 2 bytes @ 0xC
   524  01E9                     	ds	2
   525  01EB                     main@lux_select:	
   526                           
   527                           ; 1 bytes @ 0xE
   528  01EB                     	ds	1
   529  01EC                     main@i:	
   530                           
   531                           ; 2 bytes @ 0xF
   532  01EC                     	ds	2
   533                           
   534                           	psect	cstackCOMMON
   535  0070                     __pcstackCOMMON:	
   536  0070                     ?_init_ADC:	
   537  0070                     ?_Conteggio:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_main:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_UART_TxChar:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_UART_Read:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_UART_Read:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_conteggioVeicoli:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_ISR:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     Conteggio@_count:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 2 bytes @ 0x0
   563  0070                     	ds	2
   564  0072                     Conteggio@_motorcycle:	
   565                           
   566                           ; 1 bytes @ 0x2
   567  0072                     	ds	1
   568  0073                     Conteggio@_car:	
   569                           
   570                           ; 1 bytes @ 0x3
   571  0073                     	ds	1
   572  0074                     Conteggio@_truck:	
   573                           
   574                           ; 1 bytes @ 0x4
   575  0074                     	ds	1
   576  0075                     Conteggio@index:	
   577                           
   578                           ; 1 bytes @ 0x5
   579  0075                     	ds	1
   580  0076                     ??_Conteggio:	
   581                           
   582                           ; 1 bytes @ 0x6
   583  0076                     	ds	3
   584  0079                     ??_conteggioVeicoli:	
   585                           
   586                           ; 1 bytes @ 0x9
   587  0079                     	ds	4
   588                           
   589                           	psect	cstackBANK0
   590  0020                     __pcstackBANK0:	
   591  0020                     ??_ISR:	
   592                           
   593                           ; 1 bytes @ 0x0
   594  0020                     	ds	4
   595  0024                     ??_init_ADC:	
   596  0024                     ?_SetDisplay:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0024                     ?_BuildByte:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0024                     ?_UpdateTimes:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0024                     ?_SetDefaultTimers:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0024                     ??_UART_TxChar:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0024                     ?___bmul:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0024                     ?_ADC_Read:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0024                     ?_GetTime:	
   618                           ; 2 bytes @ 0x4
   619                           
   620  0024                     ?___wmul:	
   621                           ; 2 bytes @ 0x4
   622                           
   623  0024                     ?___awmod:	
   624                           ; 2 bytes @ 0x4
   625                           
   626  0024                     ?___aldiv:	
   627                           ; 2 bytes @ 0x4
   628                           
   629  0024                     BuildByte@byte1:	
   630                           ; 4 bytes @ 0x4
   631                           
   632  0024                     UpdateTimes@_to_update:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0024                     GetTime@_dataFromGateway:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0024                     UART_TxChar@ch:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0024                     SetDisplay@d2:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0024                     ___bmul@multiplicand:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0024                     SetDefaultTimers@rosso:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0024                     ___wmul@multiplier:	
   651                           ; 2 bytes @ 0x4
   652                           
   653  0024                     ___awmod@divisor:	
   654                           ; 2 bytes @ 0x4
   655                           
   656  0024                     ___aldiv@divisor:	
   657                           ; 2 bytes @ 0x4
   658                           
   659                           
   660                           ; 4 bytes @ 0x4
   661  0024                     	ds	1
   662  0025                     ??_UpdateTimes:	
   663  0025                     ??___bmul:	
   664                           ; 1 bytes @ 0x5
   665                           
   666  0025                     BuildByte@valore:	
   667                           ; 1 bytes @ 0x5
   668                           
   669  0025                     SetDisplay@d3:	
   670                           ; 1 bytes @ 0x5
   671                           
   672                           
   673                           ; 1 bytes @ 0x5
   674  0025                     	ds	1
   675  0026                     ??_ADC_Read:	
   676  0026                     ??_BuildByte:	
   677                           ; 1 bytes @ 0x6
   678                           
   679  0026                     ??_GetTime:	
   680                           ; 1 bytes @ 0x6
   681                           
   682  0026                     SetDisplay@value:	
   683                           ; 1 bytes @ 0x6
   684                           
   685  0026                     ___bmul@product:	
   686                           ; 1 bytes @ 0x6
   687                           
   688  0026                     SetDefaultTimers@verde:	
   689                           ; 1 bytes @ 0x6
   690                           
   691  0026                     ___wmul@multiplicand:	
   692                           ; 2 bytes @ 0x6
   693                           
   694  0026                     ___awmod@dividend:	
   695                           ; 2 bytes @ 0x6
   696                           
   697                           
   698                           ; 2 bytes @ 0x6
   699  0026                     	ds	1
   700  0027                     ??_SetDisplay:	
   701  0027                     ADC_Read@canale:	
   702                           ; 1 bytes @ 0x7
   703                           
   704  0027                     SetDisplay@d1:	
   705                           ; 1 bytes @ 0x7
   706                           
   707  0027                     ___bmul@multiplier:	
   708                           ; 1 bytes @ 0x7
   709                           
   710                           
   711                           ; 1 bytes @ 0x7
   712  0027                     	ds	1
   713  0028                     ??___wmul:	
   714  0028                     ??___awmod:	
   715                           ; 1 bytes @ 0x8
   716                           
   717  0028                     BuildByte@byte0:	
   718                           ; 1 bytes @ 0x8
   719                           
   720  0028                     GetTime@index:	
   721                           ; 1 bytes @ 0x8
   722                           
   723  0028                     SetDefaultTimers@giallo:	
   724                           ; 1 bytes @ 0x8
   725                           
   726  0028                     ___wmul@product:	
   727                           ; 2 bytes @ 0x8
   728                           
   729  0028                     ___aldiv@dividend:	
   730                           ; 2 bytes @ 0x8
   731                           
   732                           
   733                           ; 4 bytes @ 0x8
   734  0028                     	ds	1
   735  0029                     GetTime@shortInt:	
   736  0029                     ___awmod@counter:	
   737                           ; 1 bytes @ 0x9
   738                           
   739  0029                     BuildByte@txByte:	
   740                           ; 1 bytes @ 0x9
   741                           
   742                           
   743                           ; 5 bytes @ 0x9
   744  0029                     	ds	1
   745  002A                     SetDefaultTimers@_semafori:	
   746  002A                     ___awmod@sign:	
   747                           ; 1 bytes @ 0xA
   748                           
   749  002A                     GetTime@tmp:	
   750                           ; 1 bytes @ 0xA
   751                           
   752                           
   753                           ; 2 bytes @ 0xA
   754  002A                     	ds	1
   755  002B                     ?_ChangeTrafficLight:	
   756  002B                     ??_SetDefaultTimers:	
   757                           ; 1 bytes @ 0xB
   758                           
   759  002B                     ?___awdiv:	
   760                           ; 1 bytes @ 0xB
   761                           
   762  002B                     ChangeTrafficLight@_n_semafori:	
   763                           ; 2 bytes @ 0xB
   764                           
   765  002B                     ___awdiv@divisor:	
   766                           ; 1 bytes @ 0xB
   767                           
   768                           
   769                           ; 2 bytes @ 0xB
   770  002B                     	ds	1
   771  002C                     ??_ChangeTrafficLight:	
   772  002C                     ??___aldiv:	
   773                           ; 1 bytes @ 0xC
   774                           
   775                           
   776                           ; 1 bytes @ 0xC
   777  002C                     	ds	1
   778  002D                     ___aldiv@counter:	
   779  002D                     ___awdiv@dividend:	
   780                           ; 1 bytes @ 0xD
   781                           
   782                           
   783                           ; 2 bytes @ 0xD
   784  002D                     	ds	1
   785  002E                     BuildByte@sommaRow:	
   786  002E                     ___aldiv@sign:	
   787                           ; 1 bytes @ 0xE
   788                           
   789                           
   790                           ; 1 bytes @ 0xE
   791  002E                     	ds	1
   792  002F                     ??___awdiv:	
   793  002F                     BuildByte@sommaColumn:	
   794                           ; 1 bytes @ 0xF
   795                           
   796  002F                     ___aldiv@quotient:	
   797                           ; 1 bytes @ 0xF
   798                           
   799                           
   800                           ; 4 bytes @ 0xF
   801  002F                     	ds	1
   802  0030                     UpdateTimes@_semafori:	
   803  0030                     ___awdiv@counter:	
   804                           ; 1 bytes @ 0x10
   805                           
   806  0030                     BuildByte@y:	
   807                           ; 1 bytes @ 0x10
   808                           
   809                           
   810                           ; 2 bytes @ 0x10
   811  0030                     	ds	1
   812  0031                     UpdateTimes@l:	
   813  0031                     ___awdiv@sign:	
   814                           ; 1 bytes @ 0x11
   815                           
   816                           
   817                           ; 1 bytes @ 0x11
   818  0031                     	ds	1
   819  0032                     UpdateTimes@i:	
   820  0032                     ChangeTrafficLight@_semafori:	
   821                           ; 1 bytes @ 0x12
   822                           
   823  0032                     SetDefaultTimers@l:	
   824                           ; 1 bytes @ 0x12
   825                           
   826  0032                     BuildByte@y_333:	
   827                           ; 1 bytes @ 0x12
   828                           
   829  0032                     ___awdiv@quotient:	
   830                           ; 2 bytes @ 0x12
   831                           
   832                           
   833                           ; 2 bytes @ 0x12
   834  0032                     	ds	1
   835  0033                     ?_UART_Init:	
   836  0033                     SetDefaultTimers@i:	
   837                           ; 1 bytes @ 0x13
   838                           
   839  0033                     UART_Init@baudrate:	
   840                           ; 1 bytes @ 0x13
   841                           
   842                           
   843                           ; 2 bytes @ 0x13
   844  0033                     	ds	1
   845  0034                     ?_GetDigits:	
   846  0034                     ?_map:	
   847                           ; 1 bytes @ 0x14
   848                           
   849  0034                     GetDigits@decine:	
   850                           ; 2 bytes @ 0x14
   851                           
   852  0034                     map@x:	
   853                           ; 1 bytes @ 0x14
   854                           
   855  0034                     BuildByte@i:	
   856                           ; 2 bytes @ 0x14
   857                           
   858                           
   859                           ; 2 bytes @ 0x14
   860  0034                     	ds	1
   861  0035                     ??_UART_Init:	
   862  0035                     GetDigits@unita:	
   863                           ; 1 bytes @ 0x15
   864                           
   865                           
   866                           ; 1 bytes @ 0x15
   867  0035                     	ds	1
   868  0036                     map@in_min:	
   869  0036                     GetDigits@Time:	
   870                           ; 2 bytes @ 0x16
   871                           
   872  0036                     BuildByte@i_332:	
   873                           ; 2 bytes @ 0x16
   874                           
   875                           
   876                           ; 2 bytes @ 0x16
   877  0036                     	ds	2
   878  0038                     ?_sendByte:	
   879  0038                     ??_GetDigits:	
   880                           ; 1 bytes @ 0x18
   881                           
   882  0038                     sendByte@byte1:	
   883                           ; 1 bytes @ 0x18
   884                           
   885  0038                     map@in_max:	
   886                           ; 1 bytes @ 0x18
   887                           
   888                           
   889                           ; 2 bytes @ 0x18
   890  0038                     	ds	1
   891  0039                     sendByte@valore:	
   892  0039                     _GetDigits$1159:	
   893                           ; 1 bytes @ 0x19
   894                           
   895                           
   896                           ; 2 bytes @ 0x19
   897  0039                     	ds	1
   898  003A                     ??_sendByte:	
   899  003A                     map@out_min:	
   900                           ; 1 bytes @ 0x1A
   901                           
   902                           
   903                           ; 2 bytes @ 0x1A
   904  003A                     	ds	1
   905  003B                     GetDigits@centinaia:	
   906                           
   907                           ; 1 bytes @ 0x1B
   908  003B                     	ds	1
   909  003C                     map@out_max:	
   910                           
   911                           ; 2 bytes @ 0x1C
   912  003C                     	ds	1
   913  003D                     sendByte@byte0:	
   914                           
   915                           ; 1 bytes @ 0x1D
   916  003D                     	ds	1
   917  003E                     ??_map:	
   918  003E                     sendByte@txByte:	
   919                           ; 1 bytes @ 0x1E
   920                           
   921                           
   922                           ; 1 bytes @ 0x1E
   923  003E                     	ds	1
   924  003F                     sendByte@i:	
   925                           
   926                           ; 1 bytes @ 0x1F
   927  003F                     	ds	1
   928  0040                     ??_main:	
   929                           
   930                           ; 1 bytes @ 0x20
   931  0040                     	ds	10
   932                           
   933                           	psect	maintext
   934  003F                     __pmaintext:	
   935 ;;
   936 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   937 ;;
   938 ;; *************** function _main *****************
   939 ;; Defined at:
   940 ;;		line 120 in file "debug.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  index           1   11[BANK3 ] unsigned char 
   945 ;;  semaforoId      1    7[BANK3 ] unsigned char 
   946 ;;  tmp             1    6[BANK3 ] unsigned char 
   947 ;;  colorId         1    3[BANK3 ] unsigned char 
   948 ;;  i               1   10[BANK3 ] unsigned char 
   949 ;;  i               1    9[BANK3 ] unsigned char 
   950 ;;  i               1    8[BANK3 ] unsigned char 
   951 ;;  i               2   12[BANK3 ] int 
   952 ;;  i               2   15[BANK3 ] int 
   953 ;;  time            2    4[BANK3 ] int 
   954 ;;  lux_select      1   14[BANK3 ] unsigned char 
   955 ;;  pressione       1    2[BANK3 ] unsigned char 
   956 ;;  umidita         1    1[BANK3 ] unsigned char 
   957 ;;  temp            1    0[BANK3 ] unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : B00/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0      17       0
   969 ;;      Temps:          0      10       0       0       0
   970 ;;      Totals:         0      10       0      17       0
   971 ;;Total ram usage:       27 bytes
   972 ;; Hardware stack levels required when called:    5
   973 ;; This function calls:
   974 ;;		_ADC_Read
   975 ;;		_ChangeTrafficLight
   976 ;;		_GetDigits
   977 ;;		_GetTime
   978 ;;		_SetDefaultTimers
   979 ;;		_SetDisplay
   980 ;;		_UART_Init
   981 ;;		_UpdateTimes
   982 ;;		___awmod
   983 ;;		___bmul
   984 ;;		_init_ADC
   985 ;;		_map
   986 ;;		_sendByte
   987 ;; This function is called by:
   988 ;;		Startup code after reset
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _main
   994  003F                     _main:	
   995  003F                     l2888:	
   996                           ;incstack = 0
   997                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   998                           
   999                           
  1000                           ;debug.c: 122:     TRISB = 0x1F;
  1001  003F  301F               	movlw	31
  1002  0040  1683               	bsf	3,5	;RP0=1, select bank1
  1003  0041  1303               	bcf	3,6	;RP1=0, select bank1
  1004  0042  0086               	movwf	6	;volatile
  1005                           
  1006                           ;debug.c: 123:     TRISC = 0x80;
  1007  0043  3080               	movlw	128
  1008  0044  0087               	movwf	7	;volatile
  1009  0045                     l2890:	
  1010                           
  1011                           ;debug.c: 124:     TRISD = 0x00;
  1012  0045  0188               	clrf	8	;volatile
  1013  0046                     l2892:	
  1014                           
  1015                           ;debug.c: 125:     TRISE = 0x01;
  1016  0046  3001               	movlw	1
  1017  0047  0089               	movwf	9	;volatile
  1018  0048                     l2894:	
  1019                           
  1020                           ;debug.c: 126:     INTCON = 0xE0;
  1021  0048  30E0               	movlw	224
  1022  0049  008B               	movwf	11	;volatile
  1023  004A                     l2896:	
  1024                           
  1025                           ;debug.c: 127:     OPTION_REG = 0x04;
  1026  004A  3004               	movlw	4
  1027  004B  0081               	movwf	1	;volatile
  1028  004C                     l2898:	
  1029                           
  1030                           ;debug.c: 128:     TMR0 = 6;
  1031  004C  3006               	movlw	6
  1032  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1033  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1034  004F  0081               	movwf	1	;volatile
  1035  0050                     l2900:	
  1036                           
  1037                           ;debug.c: 129:     T1CON = 0x31;
  1038  0050  3031               	movlw	49
  1039  0051  0090               	movwf	16	;volatile
  1040  0052                     l2902:	
  1041                           
  1042                           ;debug.c: 131:     TMR1H = 60;
  1043  0052  303C               	movlw	60
  1044  0053  008F               	movwf	15	;volatile
  1045  0054                     l2904:	
  1046                           
  1047                           ;debug.c: 132:     TMR1L = 176;
  1048  0054  30B0               	movlw	176
  1049  0055  008E               	movwf	14	;volatile
  1050                           
  1051                           ;debug.c: 135:     int time;;debug.c: 136:     unsigned char lux_select = 0;
  1052  0056  1683               	bsf	3,5	;RP0=1, select bank3
  1053  0057  1703               	bsf	3,6	;RP1=1, select bank3
  1054  0058  01EB               	clrf	main@lux_select^(0+384)
  1055                           
  1056                           ;debug.c: 137:     disp = 0;
  1057  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1058  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1059  005B  01D0               	clrf	_disp
  1060                           
  1061                           ;debug.c: 139:     unsigned char umidita = 0;
  1062  005C  1683               	bsf	3,5	;RP0=1, select bank3
  1063  005D  1703               	bsf	3,6	;RP1=1, select bank3
  1064  005E  01DE               	clrf	main@umidita^(0+384)
  1065                           
  1066                           ;debug.c: 140:     unsigned char pressione = 0;
  1067  005F  01DF               	clrf	main@pressione^(0+384)
  1068  0060                     l2906:	
  1069                           
  1070                           ;debug.c: 142:     init_ADC();
  1071  0060  120A  158A  2497  120A  118A  	fcall	_init_ADC
  1072  0065                     l2908:	
  1073                           
  1074                           ;debug.c: 143:     UART_Init(9600);
  1075  0065  3080               	movlw	128
  1076  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0068  00B3               	movwf	UART_Init@baudrate
  1079  0069  3025               	movlw	37
  1080  006A  00B4               	movwf	UART_Init@baudrate+1
  1081  006B  120A  158A  25BC  120A  118A  	fcall	_UART_Init
  1082  0070                     l2910:	
  1083                           
  1084                           ;debug.c: 144:     SetDefaultTimers(1,1,1, Semafori);
  1085  0070  3001               	movlw	1
  1086  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0073  00A4               	movwf	SetDefaultTimers@rosso
  1089  0074  3000               	movlw	0
  1090  0075  00A5               	movwf	SetDefaultTimers@rosso+1
  1091  0076  3001               	movlw	1
  1092  0077  00A6               	movwf	SetDefaultTimers@verde
  1093  0078  3000               	movlw	0
  1094  0079  00A7               	movwf	SetDefaultTimers@verde+1
  1095  007A  3001               	movlw	1
  1096  007B  00A8               	movwf	SetDefaultTimers@giallo
  1097  007C  3000               	movlw	0
  1098  007D  00A9               	movwf	SetDefaultTimers@giallo+1
  1099  007E  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  1100  007F  00C0               	movwf	??_main
  1101  0080  0840               	movf	??_main,w
  1102  0081  00AA               	movwf	SetDefaultTimers@_semafori
  1103  0082  120A  118A  26BD  120A  118A  	fcall	_SetDefaultTimers
  1104  0087                     l2912:	
  1105                           
  1106                           ;debug.c: 147:     {;debug.c: 149:         if (readGateway.Bit)
  1107  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0089  1C54               	btfss	_readGateway,0
  1110  008A  288C               	goto	u2821
  1111  008B  288D               	goto	u2820
  1112  008C                     u2821:	
  1113  008C  2A67               	goto	l245
  1114  008D                     u2820:	
  1115  008D  2A52               	goto	l2982
  1116  008E                     l247:	
  1117                           ;debug.c: 152:             {;debug.c: 153:             case 0x08:
  1118                           
  1119                           
  1120                           ;debug.c: 154:                 readGatewayDone.Bit = 1;
  1121  008E  1455               	bsf	_readGatewayDone,0
  1122                           
  1123                           ;debug.c: 155:                 readGateway.Bit = 0;
  1124  008F  1054               	bcf	_readGateway,0
  1125  0090                     l2916:	
  1126                           
  1127                           ;debug.c: 157:                 for (int i = 0; i < 4; i++)
  1128  0090  1683               	bsf	3,5	;RP0=1, select bank3
  1129  0091  1703               	bsf	3,6	;RP1=1, select bank3
  1130  0092  01EC               	clrf	main@i^(0+384)
  1131  0093  01ED               	clrf	(main@i+1)^(0+384)
  1132  0094                     l2918:	
  1133  0094  086D               	movf	(main@i+1)^(0+384),w
  1134  0095  3A80               	xorlw	128
  1135  0096  00FF               	movwf	btemp+1
  1136  0097  3080               	movlw	128
  1137  0098  027F               	subwf	btemp+1,w
  1138  0099  1D03               	skipz
  1139  009A  289D               	goto	u2835
  1140  009B  3004               	movlw	4
  1141  009C  026C               	subwf	main@i^(0+384),w
  1142  009D                     u2835:	
  1143  009D  1C03               	skipc
  1144  009E  28A0               	goto	u2831
  1145  009F  28A1               	goto	u2830
  1146  00A0                     u2831:	
  1147  00A0  28A2               	goto	l2922
  1148  00A1                     u2830:	
  1149  00A1  2921               	goto	l2928
  1150  00A2                     l2922:	
  1151                           
  1152                           ;debug.c: 158:                 {;debug.c: 159:                     sendByte((0x01 << (i 
      +                          + 1))|0x01, 0x01, motorcycle[i]);
  1153  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1154  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1155  00A4  01B8               	clrf	sendByte@byte1
  1156  00A5  0AB8               	incf	sendByte@byte1,f
  1157  00A6  1683               	bsf	3,5	;RP0=1, select bank3
  1158  00A7  1703               	bsf	3,6	;RP1=1, select bank3
  1159  00A8  086C               	movf	main@i^(0+384),w
  1160  00A9  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1161  00AA  0084               	movwf	4
  1162  00AB  1383               	bcf	3,7	;select IRP bank0
  1163  00AC  0800               	movf	0,w
  1164  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1165  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1166  00AF  00C0               	movwf	??_main
  1167  00B0  0840               	movf	??_main,w
  1168  00B1  00B9               	movwf	sendByte@valore
  1169  00B2  3001               	movlw	1
  1170  00B3  00C1               	movwf	??_main+1
  1171  00B4  1683               	bsf	3,5	;RP0=1, select bank3
  1172  00B5  1703               	bsf	3,6	;RP1=1, select bank3
  1173  00B6  086C               	movf	main@i^(0+384),w
  1174  00B7  3E01               	addlw	1
  1175  00B8  3E01               	addlw	1
  1176  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1177  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1178  00BB  28BE               	goto	u2844
  1179  00BC                     u2845:	
  1180  00BC  1003               	clrc
  1181  00BD  0DC1               	rlf	??_main+1,f
  1182  00BE                     u2844:	
  1183  00BE  3EFF               	addlw	-1
  1184  00BF  1D03               	skipz
  1185  00C0  28BC               	goto	u2845
  1186  00C1  0841               	movf	??_main+1,w
  1187  00C2  3801               	iorlw	1
  1188  00C3  120A  158A  2556  120A  118A  	fcall	_sendByte
  1189                           
  1190                           ;debug.c: 160:                     sendByte((0x01 << (i + 1))|0x01, 0x10, car[i]);
  1191  00C8  3010               	movlw	16
  1192  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1193  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1194  00CB  00C0               	movwf	??_main
  1195  00CC  0840               	movf	??_main,w
  1196  00CD  00B8               	movwf	sendByte@byte1
  1197  00CE  1683               	bsf	3,5	;RP0=1, select bank3
  1198  00CF  1703               	bsf	3,6	;RP1=1, select bank3
  1199  00D0  086C               	movf	main@i^(0+384),w
  1200  00D1  3E56               	addlw	(low (_car| 0))& (0+255)
  1201  00D2  0084               	movwf	4
  1202  00D3  1383               	bcf	3,7	;select IRP bank0
  1203  00D4  0800               	movf	0,w
  1204  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1205  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1206  00D7  00C1               	movwf	??_main+1
  1207  00D8  0841               	movf	??_main+1,w
  1208  00D9  00B9               	movwf	sendByte@valore
  1209  00DA  3001               	movlw	1
  1210  00DB  00C2               	movwf	??_main+2
  1211  00DC  1683               	bsf	3,5	;RP0=1, select bank3
  1212  00DD  1703               	bsf	3,6	;RP1=1, select bank3
  1213  00DE  086C               	movf	main@i^(0+384),w
  1214  00DF  3E01               	addlw	1
  1215  00E0  3E01               	addlw	1
  1216  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1217  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1218  00E3  28E6               	goto	u2854
  1219  00E4                     u2855:	
  1220  00E4  1003               	clrc
  1221  00E5  0DC2               	rlf	??_main+2,f
  1222  00E6                     u2854:	
  1223  00E6  3EFF               	addlw	-1
  1224  00E7  1D03               	skipz
  1225  00E8  28E4               	goto	u2855
  1226  00E9  0842               	movf	??_main+2,w
  1227  00EA  3801               	iorlw	1
  1228  00EB  120A  158A  2556  120A  118A  	fcall	_sendByte
  1229                           
  1230                           ;debug.c: 161:                     sendByte((0x01 << (i + 1))|0x01, 0x11, truck[i]);
  1231  00F0  3011               	movlw	17
  1232  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1233  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1234  00F3  00C0               	movwf	??_main
  1235  00F4  0840               	movf	??_main,w
  1236  00F5  00B8               	movwf	sendByte@byte1
  1237  00F6  1683               	bsf	3,5	;RP0=1, select bank3
  1238  00F7  1703               	bsf	3,6	;RP1=1, select bank3
  1239  00F8  086C               	movf	main@i^(0+384),w
  1240  00F9  3EE9               	addlw	(low (_truck| 0))& (0+255)
  1241  00FA  0084               	movwf	4
  1242  00FB  1383               	bcf	3,7	;select IRP bank1
  1243  00FC  0800               	movf	0,w
  1244  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1245  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1246  00FF  00C1               	movwf	??_main+1
  1247  0100  0841               	movf	??_main+1,w
  1248  0101  00B9               	movwf	sendByte@valore
  1249  0102  3001               	movlw	1
  1250  0103  00C2               	movwf	??_main+2
  1251  0104  1683               	bsf	3,5	;RP0=1, select bank3
  1252  0105  1703               	bsf	3,6	;RP1=1, select bank3
  1253  0106  086C               	movf	main@i^(0+384),w
  1254  0107  3E01               	addlw	1
  1255  0108  3E01               	addlw	1
  1256  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1257  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1258  010B  290E               	goto	u2864
  1259  010C                     u2865:	
  1260  010C  1003               	clrc
  1261  010D  0DC2               	rlf	??_main+2,f
  1262  010E                     u2864:	
  1263  010E  3EFF               	addlw	-1
  1264  010F  1D03               	skipz
  1265  0110  290C               	goto	u2865
  1266  0111  0842               	movf	??_main+2,w
  1267  0112  3801               	iorlw	1
  1268  0113  120A  158A  2556  120A  118A  	fcall	_sendByte
  1269  0118                     l2924:	
  1270                           
  1271                           ;debug.c: 162:                 }
  1272  0118  3001               	movlw	1
  1273  0119  1683               	bsf	3,5	;RP0=1, select bank3
  1274  011A  1703               	bsf	3,6	;RP1=1, select bank3
  1275  011B  07EC               	addwf	main@i^(0+384),f
  1276  011C  1803               	skipnc
  1277  011D  0AED               	incf	(main@i+1)^(0+384),f
  1278  011E  3000               	movlw	0
  1279  011F  07ED               	addwf	(main@i+1)^(0+384),f
  1280  0120  2894               	goto	l2918
  1281  0121                     l2928:	
  1282                           
  1283                           ;debug.c: 164:                 for (int i = 0; i < 4; i++)
  1284  0121  1683               	bsf	3,5	;RP0=1, select bank3
  1285  0122  1703               	bsf	3,6	;RP1=1, select bank3
  1286  0123  01E9               	clrf	main@i_443^(0+384)
  1287  0124  01EA               	clrf	(main@i_443+1)^(0+384)
  1288  0125                     l2934:	
  1289                           
  1290                           ;debug.c: 165:                 {;debug.c: 166:                     motorcycle[i] = 0;
  1291  0125  1683               	bsf	3,5	;RP0=1, select bank3
  1292  0126  1703               	bsf	3,6	;RP1=1, select bank3
  1293  0127  0869               	movf	main@i_443^(0+384),w
  1294  0128  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1295  0129  0084               	movwf	4
  1296  012A  1383               	bcf	3,7	;select IRP bank0
  1297  012B  0180               	clrf	0
  1298                           
  1299                           ;debug.c: 167:                     car[i] = 0;
  1300  012C  0869               	movf	main@i_443^(0+384),w
  1301  012D  3E56               	addlw	(low (_car| 0))& (0+255)
  1302  012E  0084               	movwf	4
  1303  012F  0180               	clrf	0
  1304                           
  1305                           ;debug.c: 168:                     truck[i] = 0;
  1306  0130  0869               	movf	main@i_443^(0+384),w
  1307  0131  3EE9               	addlw	(low (_truck| 0))& (0+255)
  1308  0132  0084               	movwf	4
  1309  0133  0180               	clrf	0
  1310  0134                     l2936:	
  1311                           
  1312                           ;debug.c: 169:                 }
  1313  0134  3001               	movlw	1
  1314  0135  07E9               	addwf	main@i_443^(0+384),f
  1315  0136  1803               	skipnc
  1316  0137  0AEA               	incf	(main@i_443+1)^(0+384),f
  1317  0138  3000               	movlw	0
  1318  0139  07EA               	addwf	(main@i_443+1)^(0+384),f
  1319  013A                     l2938:	
  1320  013A  086A               	movf	(main@i_443+1)^(0+384),w
  1321  013B  3A80               	xorlw	128
  1322  013C  00FF               	movwf	btemp+1
  1323  013D  3080               	movlw	128
  1324  013E  027F               	subwf	btemp+1,w
  1325  013F  1D03               	skipz
  1326  0140  2943               	goto	u2875
  1327  0141  3004               	movlw	4
  1328  0142  0269               	subwf	main@i_443^(0+384),w
  1329  0143                     u2875:	
  1330  0143  1C03               	skipc
  1331  0144  2946               	goto	u2871
  1332  0145  2947               	goto	u2870
  1333  0146                     u2871:	
  1334  0146  2925               	goto	l2934
  1335  0147                     u2870:	
  1336  0147                     l2940:	
  1337                           
  1338                           ;debug.c: 171:                 for (unsigned char i = 0; i < 5; i++)
  1339  0147  1683               	bsf	3,5	;RP0=1, select bank3
  1340  0148  1703               	bsf	3,6	;RP1=1, select bank3
  1341  0149  01E5               	clrf	main@i_444^(0+384)
  1342  014A                     l2946:	
  1343                           
  1344                           ;debug.c: 172:                 {;debug.c: 173:                     dataFromGateway[i] = 
      +                          0;
  1345  014A  0865               	movf	main@i_444^(0+384),w
  1346  014B  3E90               	addlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1347  014C  0084               	movwf	4
  1348  014D  1783               	bsf	3,7	;select IRP bank3
  1349  014E  0180               	clrf	0
  1350  014F                     l2948:	
  1351                           
  1352                           ;debug.c: 174:                 }
  1353  014F  3001               	movlw	1
  1354  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0152  00C0               	movwf	??_main
  1357  0153  0840               	movf	??_main,w
  1358  0154  1683               	bsf	3,5	;RP0=1, select bank3
  1359  0155  1703               	bsf	3,6	;RP1=1, select bank3
  1360  0156  07E5               	addwf	main@i_444^(0+384),f
  1361  0157                     l2950:	
  1362  0157  3005               	movlw	5
  1363  0158  0265               	subwf	main@i_444^(0+384),w
  1364  0159  1C03               	skipc
  1365  015A  295C               	goto	u2881
  1366  015B  295D               	goto	u2880
  1367  015C                     u2881:	
  1368  015C  294A               	goto	l2946
  1369  015D                     u2880:	
  1370  015D  2A67               	goto	l245
  1371  015E                     l255:	
  1372                           ;debug.c: 176:             case 0x0A:
  1373                           
  1374                           
  1375                           ;debug.c: 177:                 readGatewayDone.Bit = 1;
  1376  015E  1455               	bsf	_readGatewayDone,0
  1377                           
  1378                           ;debug.c: 178:                 readGateway.Bit = 0;
  1379  015F  1054               	bcf	_readGateway,0
  1380  0160                     l2952:	
  1381                           
  1382                           ;debug.c: 180:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1383  0160  3000               	movlw	0
  1384  0161  120A  158A  2509  120A  118A  	fcall	_ADC_Read
  1385  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0168  0824               	movf	?_ADC_Read,w
  1388  0169  00C0               	movwf	??_main
  1389  016A  0825               	movf	?_ADC_Read+1,w
  1390  016B  00C1               	movwf	??_main+1
  1391  016C  0D41               	rlf	??_main+1,w
  1392  016D  0CC1               	rrf	??_main+1,f
  1393  016E  0CC0               	rrf	??_main,f
  1394  016F  0D41               	rlf	??_main+1,w
  1395  0170  0CC1               	rrf	??_main+1,f
  1396  0171  0CC0               	rrf	??_main,f
  1397  0172  0840               	movf	??_main,w
  1398  0173  00B4               	movwf	map@x
  1399  0174  0841               	movf	??_main+1,w
  1400  0175  00B5               	movwf	map@x+1
  1401  0176  3000               	movlw	0
  1402  0177  00B6               	movwf	map@in_min
  1403  0178  00B7               	movwf	map@in_min+1
  1404  0179  30FF               	movlw	255
  1405  017A  00B8               	movwf	map@in_max
  1406  017B  3000               	movlw	0
  1407  017C  00B9               	movwf	map@in_max+1
  1408  017D  30EC               	movlw	236
  1409  017E  00BA               	movwf	map@out_min
  1410  017F  30FF               	movlw	255
  1411  0180  00BB               	movwf	map@out_min+1
  1412  0181  303C               	movlw	60
  1413  0182  00BC               	movwf	map@out_max
  1414  0183  3000               	movlw	0
  1415  0184  00BD               	movwf	map@out_max+1
  1416  0185  120A  158A  2587  120A  118A  	fcall	_map
  1417  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1418  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1419  018C  0834               	movf	?_map,w
  1420  018D  00C2               	movwf	??_main+2
  1421  018E  0842               	movf	??_main+2,w
  1422  018F  1683               	bsf	3,5	;RP0=1, select bank3
  1423  0190  1703               	bsf	3,6	;RP1=1, select bank3
  1424  0191  00DD               	movwf	main@temp^(0+384)
  1425                           
  1426                           ;debug.c: 181:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1427  0192  3001               	movlw	1
  1428  0193  120A  158A  2509  120A  118A  	fcall	_ADC_Read
  1429  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1431  019A  0824               	movf	?_ADC_Read,w
  1432  019B  00C0               	movwf	??_main
  1433  019C  0825               	movf	?_ADC_Read+1,w
  1434  019D  00C1               	movwf	??_main+1
  1435  019E  0D41               	rlf	??_main+1,w
  1436  019F  0CC1               	rrf	??_main+1,f
  1437  01A0  0CC0               	rrf	??_main,f
  1438  01A1  0D41               	rlf	??_main+1,w
  1439  01A2  0CC1               	rrf	??_main+1,f
  1440  01A3  0CC0               	rrf	??_main,f
  1441  01A4  0840               	movf	??_main,w
  1442  01A5  00B4               	movwf	map@x
  1443  01A6  0841               	movf	??_main+1,w
  1444  01A7  00B5               	movwf	map@x+1
  1445  01A8  3000               	movlw	0
  1446  01A9  00B6               	movwf	map@in_min
  1447  01AA  00B7               	movwf	map@in_min+1
  1448  01AB  30FF               	movlw	255
  1449  01AC  00B8               	movwf	map@in_max
  1450  01AD  3000               	movlw	0
  1451  01AE  00B9               	movwf	map@in_max+1
  1452  01AF  3000               	movlw	0
  1453  01B0  00BA               	movwf	map@out_min
  1454  01B1  00BB               	movwf	map@out_min+1
  1455  01B2  3064               	movlw	100
  1456  01B3  00BC               	movwf	map@out_max
  1457  01B4  3000               	movlw	0
  1458  01B5  00BD               	movwf	map@out_max+1
  1459  01B6  120A  158A  2587  120A  118A  	fcall	_map
  1460  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1461  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1462  01BD  0834               	movf	?_map,w
  1463  01BE  00C2               	movwf	??_main+2
  1464  01BF  0842               	movf	??_main+2,w
  1465  01C0  1683               	bsf	3,5	;RP0=1, select bank3
  1466  01C1  1703               	bsf	3,6	;RP1=1, select bank3
  1467  01C2  00DE               	movwf	main@umidita^(0+384)
  1468                           
  1469                           ;debug.c: 182:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100)
      +                          ;
  1470  01C3  3005               	movlw	5
  1471  01C4  120A  158A  2509  120A  118A  	fcall	_ADC_Read
  1472  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1473  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1474  01CB  0824               	movf	?_ADC_Read,w
  1475  01CC  00C0               	movwf	??_main
  1476  01CD  0825               	movf	?_ADC_Read+1,w
  1477  01CE  00C1               	movwf	??_main+1
  1478  01CF  0D41               	rlf	??_main+1,w
  1479  01D0  0CC1               	rrf	??_main+1,f
  1480  01D1  0CC0               	rrf	??_main,f
  1481  01D2  0D41               	rlf	??_main+1,w
  1482  01D3  0CC1               	rrf	??_main+1,f
  1483  01D4  0CC0               	rrf	??_main,f
  1484  01D5  0840               	movf	??_main,w
  1485  01D6  00B4               	movwf	map@x
  1486  01D7  0841               	movf	??_main+1,w
  1487  01D8  00B5               	movwf	map@x+1
  1488  01D9  3000               	movlw	0
  1489  01DA  00B6               	movwf	map@in_min
  1490  01DB  00B7               	movwf	map@in_min+1
  1491  01DC  30FF               	movlw	255
  1492  01DD  00B8               	movwf	map@in_max
  1493  01DE  3000               	movlw	0
  1494  01DF  00B9               	movwf	map@in_max+1
  1495  01E0  3000               	movlw	0
  1496  01E1  00BA               	movwf	map@out_min
  1497  01E2  00BB               	movwf	map@out_min+1
  1498  01E3  3064               	movlw	100
  1499  01E4  00BC               	movwf	map@out_max
  1500  01E5  3000               	movlw	0
  1501  01E6  00BD               	movwf	map@out_max+1
  1502  01E7  120A  158A  2587  120A  118A  	fcall	_map
  1503  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1504  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1505  01EE  0834               	movf	?_map,w
  1506  01EF  00C2               	movwf	??_main+2
  1507  01F0  0842               	movf	??_main+2,w
  1508  01F1  1683               	bsf	3,5	;RP0=1, select bank3
  1509  01F2  1703               	bsf	3,6	;RP1=1, select bank3
  1510  01F3  00DF               	movwf	main@pressione^(0+384)
  1511  01F4                     l2954:	
  1512                           
  1513                           ;debug.c: 183:                 sendByte(0x02, 0x00, temp);
  1514  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1515  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1516  01F6  01B8               	clrf	sendByte@byte1
  1517  01F7  1683               	bsf	3,5	;RP0=1, select bank3
  1518  01F8  1703               	bsf	3,6	;RP1=1, select bank3
  1519  01F9  085D               	movf	main@temp^(0+384),w
  1520  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1521  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1522  01FC  00C0               	movwf	??_main
  1523  01FD  0840               	movf	??_main,w
  1524  01FE  00B9               	movwf	sendByte@valore
  1525  01FF  3002               	movlw	2
  1526  0200  120A  158A  2556  120A  118A  	fcall	_sendByte
  1527  0205                     l2956:	
  1528                           
  1529                           ;debug.c: 184:                 sendByte(0x04, 0x00, umidita);
  1530  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0207  01B8               	clrf	sendByte@byte1
  1533  0208  1683               	bsf	3,5	;RP0=1, select bank3
  1534  0209  1703               	bsf	3,6	;RP1=1, select bank3
  1535  020A  085E               	movf	main@umidita^(0+384),w
  1536  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1537  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1538  020D  00C0               	movwf	??_main
  1539  020E  0840               	movf	??_main,w
  1540  020F  00B9               	movwf	sendByte@valore
  1541  0210  3004               	movlw	4
  1542  0211  120A  158A  2556  120A  118A  	fcall	_sendByte
  1543  0216                     l2958:	
  1544                           
  1545                           ;debug.c: 185:                 sendByte(0x06, 0x00, pressione);
  1546  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0218  01B8               	clrf	sendByte@byte1
  1549  0219  1683               	bsf	3,5	;RP0=1, select bank3
  1550  021A  1703               	bsf	3,6	;RP1=1, select bank3
  1551  021B  085F               	movf	main@pressione^(0+384),w
  1552  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1553  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1554  021E  00C0               	movwf	??_main
  1555  021F  0840               	movf	??_main,w
  1556  0220  00B9               	movwf	sendByte@valore
  1557  0221  3006               	movlw	6
  1558  0222  120A  158A  2556  120A  118A  	fcall	_sendByte
  1559  0227                     l2960:	
  1560                           
  1561                           ;debug.c: 187:                 for (unsigned char i = 0; i < 5; i++)
  1562  0227  1683               	bsf	3,5	;RP0=1, select bank3
  1563  0228  1703               	bsf	3,6	;RP1=1, select bank3
  1564  0229  01E6               	clrf	main@i_446^(0+384)
  1565  022A                     l2962:	
  1566  022A  3005               	movlw	5
  1567  022B  0266               	subwf	main@i_446^(0+384),w
  1568  022C  1C03               	skipc
  1569  022D  2A2F               	goto	u2891
  1570  022E  2A30               	goto	u2890
  1571  022F                     u2891:	
  1572  022F  2A31               	goto	l2966
  1573  0230                     u2890:	
  1574  0230  2A67               	goto	l245
  1575  0231                     l2966:	
  1576                           
  1577                           ;debug.c: 188:                 {;debug.c: 189:                     dataFromGateway[i] = 
      +                          0;
  1578  0231  0866               	movf	main@i_446^(0+384),w
  1579  0232  3E90               	addlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1580  0233  0084               	movwf	4
  1581  0234  1783               	bsf	3,7	;select IRP bank3
  1582  0235  0180               	clrf	0
  1583  0236                     l2968:	
  1584                           
  1585                           ;debug.c: 190:                 }
  1586  0236  3001               	movlw	1
  1587  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0239  00C0               	movwf	??_main
  1590  023A  0840               	movf	??_main,w
  1591  023B  1683               	bsf	3,5	;RP0=1, select bank3
  1592  023C  1703               	bsf	3,6	;RP1=1, select bank3
  1593  023D  07E6               	addwf	main@i_446^(0+384),f
  1594  023E  2A2A               	goto	l2962
  1595  023F                     l2972:	
  1596                           
  1597                           ;debug.c: 194:                 if (timerReadFromGateway >= 4)
  1598  023F  3004               	movlw	4
  1599  0240  024C               	subwf	_timerReadFromGateway,w
  1600  0241  1C03               	skipc
  1601  0242  2A44               	goto	u2901
  1602  0243  2A45               	goto	u2900
  1603  0244                     u2901:	
  1604  0244  2A48               	goto	l2976
  1605  0245                     u2900:	
  1606  0245                     l2974:	
  1607                           
  1608                           ;debug.c: 195:                 {;debug.c: 196:                     readGatewayDone.Bit =
      +                           1;
  1609  0245  1455               	bsf	_readGatewayDone,0
  1610                           
  1611                           ;debug.c: 197:                     readGatewayDone.Timeout = 1;
  1612  0246  14D5               	bsf	_readGatewayDone,1
  1613                           
  1614                           ;debug.c: 198:                     readGateway.Bit = 0;
  1615  0247  1054               	bcf	_readGateway,0
  1616  0248                     l2976:	
  1617                           
  1618                           ;debug.c: 201:                 if (dataFromGatewayIndex >= 15)
  1619  0248  300F               	movlw	15
  1620  0249  024D               	subwf	_dataFromGatewayIndex,w
  1621  024A  1C03               	skipc
  1622  024B  2A4D               	goto	u2911
  1623  024C  2A4E               	goto	u2910
  1624  024D                     u2911:	
  1625  024D  2A67               	goto	l245
  1626  024E                     u2910:	
  1627  024E                     l2978:	
  1628                           
  1629                           ;debug.c: 202:                 {;debug.c: 203:                     readGatewayDone.Bit =
      +                           1;
  1630  024E  1455               	bsf	_readGatewayDone,0
  1631                           
  1632                           ;debug.c: 204:                     readGatewayDone.Timeout = 0;
  1633  024F  10D5               	bcf	_readGatewayDone,1
  1634                           
  1635                           ;debug.c: 205:                     readGateway.Bit = 0;
  1636  0250  1054               	bcf	_readGateway,0
  1637  0251  2A67               	goto	l245
  1638  0252                     l2982:	
  1639  0252  1683               	bsf	3,5	;RP0=1, select bank3
  1640  0253  1703               	bsf	3,6	;RP1=1, select bank3
  1641  0254  0810               	movf	_dataFromGateway^(0+384),w
  1642  0255  397F               	andlw	127
  1643  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0258  00C0               	movwf	??_main
  1646  0259  01C1               	clrf	??_main+1
  1647                           
  1648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1649                           ; Switch size 1, requested type "simple"
  1650                           ; Number of cases is 1, Range of values is 0 to 0
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte            4     3 (average)
  1654                           ; direct_byte           11     8 (fixed)
  1655                           ; jumptable            260     6 (fixed)
  1656                           ;	Chosen strategy is simple_byte
  1657  025A  0841               	movf	??_main+1,w
  1658  025B  3A00               	xorlw	0	; case 0
  1659  025C  1903               	skipnz
  1660  025D  2A5F               	goto	l3174
  1661  025E  2A3F               	goto	l2972
  1662  025F                     l3174:	
  1663                           
  1664                           ; Switch size 1, requested type "simple"
  1665                           ; Number of cases is 2, Range of values is 8 to 10
  1666                           ; switch strategies available:
  1667                           ; Name         Instructions Cycles
  1668                           ; simple_byte            7     4 (average)
  1669                           ; direct_byte           20    11 (fixed)
  1670                           ; jumptable            263     9 (fixed)
  1671                           ;	Chosen strategy is simple_byte
  1672  025F  0840               	movf	??_main,w
  1673  0260  3A08               	xorlw	8	; case 8
  1674  0261  1903               	skipnz
  1675  0262  288E               	goto	l247
  1676  0263  3A02               	xorlw	2	; case 10
  1677  0264  1903               	skipnz
  1678  0265  295E               	goto	l255
  1679  0266  2A3F               	goto	l2972
  1680  0267                     l245:	
  1681                           ;debug.c: 209:         }
  1682                           
  1683                           
  1684                           ;debug.c: 212:         if (readGatewayDone.Bit)
  1685  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0269  1C55               	btfss	_readGatewayDone,0
  1688  026A  2A6C               	goto	u2921
  1689  026B  2A6D               	goto	u2920
  1690  026C                     u2921:	
  1691  026C  2B2D               	goto	l261
  1692  026D                     u2920:	
  1693  026D                     l2984:	
  1694                           
  1695                           ;debug.c: 213:         {;debug.c: 215:             readGateway.Bit = 0;
  1696  026D  1054               	bcf	_readGateway,0
  1697  026E                     l2986:	
  1698                           
  1699                           ;debug.c: 216:             dataFromGatewayIndex = 0;
  1700  026E  01CD               	clrf	_dataFromGatewayIndex
  1701  026F                     l2988:	
  1702                           
  1703                           ;debug.c: 217:             readGatewayDone.Bit = 0;
  1704  026F  1055               	bcf	_readGatewayDone,0
  1705                           
  1706                           ;debug.c: 218:             timerReadFromGateway = 0;
  1707  0270  01CC               	clrf	_timerReadFromGateway
  1708  0271                     l2990:	
  1709                           
  1710                           ;debug.c: 221:             if (readGatewayDone.Timeout)
  1711  0271  1CD5               	btfss	_readGatewayDone,1
  1712  0272  2A74               	goto	u2931
  1713  0273  2A75               	goto	u2930
  1714  0274                     u2931:	
  1715  0274  2A77               	goto	l2994
  1716  0275                     u2930:	
  1717  0275                     l2992:	
  1718                           
  1719                           ;debug.c: 222:             {;debug.c: 223:                 readGatewayDone.Timeout = 0;
  1720  0275  10D5               	bcf	_readGatewayDone,1
  1721                           
  1722                           ;debug.c: 224:             }
  1723  0276  2B2D               	goto	l261
  1724  0277                     l2994:	
  1725                           
  1726                           ;debug.c: 227:             {;debug.c: 230:                 for (unsigned char i = 0; i <
      +                           3; i++)
  1727  0277  1683               	bsf	3,5	;RP0=1, select bank3
  1728  0278  1703               	bsf	3,6	;RP1=1, select bank3
  1729  0279  01E7               	clrf	main@i_447^(0+384)
  1730  027A                     l2996:	
  1731  027A  3003               	movlw	3
  1732  027B  0267               	subwf	main@i_447^(0+384),w
  1733  027C  1C03               	skipc
  1734  027D  2A7F               	goto	u2941
  1735  027E  2A80               	goto	u2940
  1736  027F                     u2941:	
  1737  027F  2A81               	goto	l3000
  1738  0280                     u2940:	
  1739  0280  2B2D               	goto	l261
  1740  0281                     l3000:	
  1741                           
  1742                           ;debug.c: 231:                 {;debug.c: 232:                     unsigned char tmp;;de
      +                          bug.c: 233:                     unsigned char index = i * 5;
  1743  0281  3005               	movlw	5
  1744  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0284  00C0               	movwf	??_main
  1747  0285  0840               	movf	??_main,w
  1748  0286  00A4               	movwf	___bmul@multiplicand
  1749  0287  1683               	bsf	3,5	;RP0=1, select bank3
  1750  0288  1703               	bsf	3,6	;RP1=1, select bank3
  1751  0289  0867               	movf	main@i_447^(0+384),w
  1752  028A  120A  158A  24D2  120A  118A  	fcall	___bmul
  1753  028F  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0290  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0291  00C1               	movwf	??_main+1
  1756  0292  0841               	movf	??_main+1,w
  1757  0293  1683               	bsf	3,5	;RP0=1, select bank3
  1758  0294  1703               	bsf	3,6	;RP1=1, select bank3
  1759  0295  00E8               	movwf	main@index^(0+384)
  1760  0296                     l3002:	
  1761                           
  1762                           ;debug.c: 241:                     tmp=index;
  1763  0296  0868               	movf	main@index^(0+384),w
  1764  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0299  00C0               	movwf	??_main
  1767  029A  0840               	movf	??_main,w
  1768  029B  1683               	bsf	3,5	;RP0=1, select bank3
  1769  029C  1703               	bsf	3,6	;RP1=1, select bank3
  1770  029D  00E3               	movwf	main@tmp^(0+384)
  1771  029E                     l3004:	
  1772                           
  1773                           ;debug.c: 242:                     unsigned char semaforoId = (tmp >> 1) & 0x0F;
  1774  029E  0863               	movf	main@tmp^(0+384),w
  1775  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1776  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1777  02A1  00C0               	movwf	??_main
  1778  02A2  1003               	clrc
  1779  02A3  0C40               	rrf	??_main,w
  1780  02A4  390F               	andlw	15
  1781  02A5  00C1               	movwf	??_main+1
  1782  02A6  0841               	movf	??_main+1,w
  1783  02A7  1683               	bsf	3,5	;RP0=1, select bank3
  1784  02A8  1703               	bsf	3,6	;RP1=1, select bank3
  1785  02A9  00E4               	movwf	main@semaforoId^(0+384)
  1786  02AA                     l3006:	
  1787                           
  1788                           ;debug.c: 243:                     tmp=index;
  1789  02AA  0868               	movf	main@index^(0+384),w
  1790  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1791  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1792  02AD  00C0               	movwf	??_main
  1793  02AE  0840               	movf	??_main,w
  1794  02AF  1683               	bsf	3,5	;RP0=1, select bank3
  1795  02B0  1703               	bsf	3,6	;RP1=1, select bank3
  1796  02B1  00E3               	movwf	main@tmp^(0+384)
  1797  02B2                     l3008:	
  1798                           
  1799                           ;debug.c: 244:                     unsigned char colorId = ((tmp >> 5) & 0x03) - 1;
  1800  02B2  0863               	movf	main@tmp^(0+384),w
  1801  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1802  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1803  02B5  00C0               	movwf	??_main
  1804  02B6  3005               	movlw	5
  1805  02B7                     u2955:	
  1806  02B7  1003               	clrc
  1807  02B8  0CC0               	rrf	??_main,f
  1808  02B9  3EFF               	addlw	-1
  1809  02BA  1D03               	skipz
  1810  02BB  2AB7               	goto	u2955
  1811  02BC  0840               	movf	??_main,w
  1812  02BD  3903               	andlw	3
  1813  02BE  3EFF               	addlw	255
  1814  02BF  00C1               	movwf	??_main+1
  1815  02C0  0841               	movf	??_main+1,w
  1816  02C1  1683               	bsf	3,5	;RP0=1, select bank3
  1817  02C2  1703               	bsf	3,6	;RP1=1, select bank3
  1818  02C3  00E0               	movwf	main@colorId^(0+384)
  1819  02C4                     l3010:	
  1820                           
  1821                           ;debug.c: 246:                     if(semaforoId!=id_semaforo)
  1822  02C4  0864               	movf	main@semaforoId^(0+384),w
  1823  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1824  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1825  02C7  065E               	xorwf	_id_semaforo,w
  1826  02C8  1903               	skipnz
  1827  02C9  2ACB               	goto	u2961
  1828  02CA  2ACC               	goto	u2960
  1829  02CB                     u2961:	
  1830  02CB  2AFF               	goto	l3014
  1831  02CC                     u2960:	
  1832  02CC                     l3012:	
  1833                           
  1834                           ;debug.c: 247:                     {;debug.c: 248:                         (*Semafori[se
      +                          maforoId]).times[colorId] = GetTime(index, dataFromGateway);
  1835  02CC  3090               	movlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1836  02CD  00C0               	movwf	??_main
  1837  02CE  0840               	movf	??_main,w
  1838  02CF  00A4               	movwf	GetTime@_dataFromGateway
  1839  02D0  1683               	bsf	3,5	;RP0=1, select bank3
  1840  02D1  1703               	bsf	3,6	;RP1=1, select bank3
  1841  02D2  0868               	movf	main@index^(0+384),w
  1842  02D3  120A  118A  27B6  120A  118A  	fcall	_GetTime
  1843  02D8  1683               	bsf	3,5	;RP0=1, select bank3
  1844  02D9  1703               	bsf	3,6	;RP1=1, select bank3
  1845  02DA  0864               	movf	main@semaforoId^(0+384),w
  1846  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1847  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1848  02DD  00C1               	movwf	??_main+1
  1849  02DE  0741               	addwf	??_main+1,w
  1850  02DF  3EBD               	addlw	(low (_Semafori| (0+256)))& (0+255)
  1851  02E0  0084               	movwf	4
  1852  02E1  1783               	bsf	3,7	;select IRP bank3
  1853  02E2  0800               	movf	0,w
  1854  02E3  00C2               	movwf	??_main+2
  1855  02E4  0A84               	incf	4,f
  1856  02E5  0800               	movf	0,w
  1857  02E6  00C3               	movwf	??_main+3
  1858  02E7  1683               	bsf	3,5	;RP0=1, select bank3
  1859  02E8  1703               	bsf	3,6	;RP1=1, select bank3
  1860  02E9  0860               	movf	main@colorId^(0+384),w
  1861  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1862  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1863  02EC  00C4               	movwf	??_main+4
  1864  02ED  0744               	addwf	??_main+4,w
  1865  02EE  0742               	addwf	??_main+2,w
  1866  02EF  00C5               	movwf	??_main+5
  1867  02F0  0843               	movf	??_main+3,w
  1868  02F1  1803               	skipnc
  1869  02F2  3E01               	addlw	1
  1870  02F3  00C6               	movwf	??_main+6
  1871  02F4  0845               	movf	??_main+5,w
  1872  02F5  0084               	movwf	4
  1873  02F6  1783               	bsf	3,7
  1874  02F7  1C46               	btfss	??_main+6,0
  1875  02F8  1383               	bcf	3,7
  1876  02F9  0824               	movf	?_GetTime,w
  1877  02FA  0080               	movwf	0
  1878  02FB  0A84               	incf	4,f
  1879  02FC  0825               	movf	?_GetTime+1,w
  1880  02FD  0080               	movwf	0
  1881                           
  1882                           ;debug.c: 249:                     }
  1883  02FE  2B26               	goto	l3018
  1884  02FF                     l3014:	
  1885                           
  1886                           ;debug.c: 251:                     {;debug.c: 252:                         to_update.id=
      +                          semaforoId;
  1887  02FF  1683               	bsf	3,5	;RP0=1, select bank3
  1888  0300  1703               	bsf	3,6	;RP1=1, select bank3
  1889  0301  0864               	movf	main@semaforoId^(0+384),w
  1890  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0304  00C0               	movwf	??_main
  1893  0305  0840               	movf	??_main,w
  1894  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1895  0307  1303               	bcf	3,6	;RP1=0, select bank1
  1896  0308  00A6               	movwf	(_to_update^(0+128)+6)
  1897  0309                     l3016:	
  1898                           
  1899                           ;debug.c: 253:                         to_update.new_times[colorId]=GetTime(index, dataF
      +                          romGateway);
  1900  0309  3090               	movlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1901  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1902  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1903  030C  00C0               	movwf	??_main
  1904  030D  0840               	movf	??_main,w
  1905  030E  00A4               	movwf	GetTime@_dataFromGateway
  1906  030F  1683               	bsf	3,5	;RP0=1, select bank3
  1907  0310  1703               	bsf	3,6	;RP1=1, select bank3
  1908  0311  0868               	movf	main@index^(0+384),w
  1909  0312  120A  118A  27B6  120A  118A  	fcall	_GetTime
  1910  0317  1683               	bsf	3,5	;RP0=1, select bank3
  1911  0318  1703               	bsf	3,6	;RP1=1, select bank3
  1912  0319  0860               	movf	main@colorId^(0+384),w
  1913  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1914  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1915  031C  00C1               	movwf	??_main+1
  1916  031D  0741               	addwf	??_main+1,w
  1917  031E  3EA0               	addlw	(low (_to_update| 0))& (0+255)
  1918  031F  0084               	movwf	4
  1919  0320  0824               	movf	?_GetTime,w
  1920  0321  1383               	bcf	3,7	;select IRP bank1
  1921  0322  0080               	movwf	0
  1922  0323  0A84               	incf	4,f
  1923  0324  0825               	movf	?_GetTime+1,w
  1924  0325  0080               	movwf	0
  1925  0326                     l3018:	
  1926                           
  1927                           ;debug.c: 255:                 }
  1928  0326  3001               	movlw	1
  1929  0327  00C0               	movwf	??_main
  1930  0328  0840               	movf	??_main,w
  1931  0329  1683               	bsf	3,5	;RP0=1, select bank3
  1932  032A  1703               	bsf	3,6	;RP1=1, select bank3
  1933  032B  07E7               	addwf	main@i_447^(0+384),f
  1934  032C  2A7A               	goto	l2996
  1935  032D                     l261:	
  1936                           ;debug.c: 257:         }
  1937                           
  1938                           
  1939                           ;debug.c: 262:         if (secondPassed.Bit && cycled.Bit)
  1940  032D  1283               	bcf	3,5	;RP0=0, select bank0
  1941  032E  1303               	bcf	3,6	;RP1=0, select bank0
  1942  032F  1C53               	btfss	_secondPassed,0
  1943  0330  2B32               	goto	u2971
  1944  0331  2B33               	goto	u2970
  1945  0332                     u2971:	
  1946  0332  2BE2               	goto	l3042
  1947  0333                     u2970:	
  1948  0333                     l3022:	
  1949  0333  1C52               	btfss	_cycled,0
  1950  0334  2B36               	goto	u2981
  1951  0335  2B37               	goto	u2980
  1952  0336                     u2981:	
  1953  0336  2BE2               	goto	l3042
  1954  0337                     u2980:	
  1955  0337                     l3024:	
  1956                           
  1957                           ;debug.c: 263:         {;debug.c: 264:             time++;
  1958  0337  3001               	movlw	1
  1959  0338  1683               	bsf	3,5	;RP0=1, select bank3
  1960  0339  1703               	bsf	3,6	;RP1=1, select bank3
  1961  033A  07E1               	addwf	main@time^(0+384),f
  1962  033B  1803               	skipnc
  1963  033C  0AE2               	incf	(main@time+1)^(0+384),f
  1964  033D  3000               	movlw	0
  1965  033E  07E2               	addwf	(main@time+1)^(0+384),f
  1966  033F                     l3026:	
  1967                           
  1968                           ;debug.c: 266:             if ((*Semafori[id_semaforo]).times[lux_select] - time < 0)
  1969  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0341  085E               	movf	_id_semaforo,w
  1972  0342  00C0               	movwf	??_main
  1973  0343  0740               	addwf	??_main,w
  1974  0344  3EBD               	addlw	(low (_Semafori| (0+256)))& (0+255)
  1975  0345  0084               	movwf	4
  1976  0346  1783               	bsf	3,7	;select IRP bank3
  1977  0347  0800               	movf	0,w
  1978  0348  00C1               	movwf	??_main+1
  1979  0349  0A84               	incf	4,f
  1980  034A  0800               	movf	0,w
  1981  034B  00C2               	movwf	??_main+2
  1982  034C  1683               	bsf	3,5	;RP0=1, select bank3
  1983  034D  1703               	bsf	3,6	;RP1=1, select bank3
  1984  034E  086B               	movf	main@lux_select^(0+384),w
  1985  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0351  00C3               	movwf	??_main+3
  1988  0352  0743               	addwf	??_main+3,w
  1989  0353  0741               	addwf	??_main+1,w
  1990  0354  00C4               	movwf	??_main+4
  1991  0355  0842               	movf	??_main+2,w
  1992  0356  1803               	skipnc
  1993  0357  3E01               	addlw	1
  1994  0358  00C5               	movwf	??_main+5
  1995  0359  0844               	movf	??_main+4,w
  1996  035A  0084               	movwf	4
  1997  035B  1783               	bsf	3,7
  1998  035C  1C45               	btfss	??_main+5,0
  1999  035D  1383               	bcf	3,7
  2000  035E  0800               	movf	0,w
  2001  035F  00C6               	movwf	??_main+6
  2002  0360  0A84               	incf	4,f
  2003  0361  0800               	movf	0,w
  2004  0362  00C7               	movwf	??_main+7
  2005  0363  1683               	bsf	3,5	;RP0=1, select bank3
  2006  0364  1703               	bsf	3,6	;RP1=1, select bank3
  2007  0365  0861               	movf	main@time^(0+384),w
  2008  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0368  0246               	subwf	??_main+6,w
  2011  0369  00C8               	movwf	??_main+8
  2012  036A  1683               	bsf	3,5	;RP0=1, select bank3
  2013  036B  1703               	bsf	3,6	;RP1=1, select bank3
  2014  036C  0862               	movf	(main@time+1)^(0+384),w
  2015  036D  1C03               	skipc
  2016  036E  0A62               	incf	(main@time+1)^(0+384),w
  2017  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0371  0247               	subwf	??_main+7,w
  2020  0372  00C9               	movwf	??_main+9
  2021  0373  1FC9               	btfss	??_main+9,7
  2022  0374  2B76               	goto	u2991
  2023  0375  2B77               	goto	u2990
  2024  0376                     u2991:	
  2025  0376  2BA0               	goto	l3040
  2026  0377                     u2990:	
  2027  0377                     l3028:	
  2028                           
  2029                           ;debug.c: 267:             {;debug.c: 268:                 lux_select++;
  2030  0377  3001               	movlw	1
  2031  0378  00C0               	movwf	??_main
  2032  0379  0840               	movf	??_main,w
  2033  037A  1683               	bsf	3,5	;RP0=1, select bank3
  2034  037B  1703               	bsf	3,6	;RP1=1, select bank3
  2035  037C  07EB               	addwf	main@lux_select^(0+384),f
  2036  037D                     l3030:	
  2037                           
  2038                           ;debug.c: 269:                 time=1;
  2039  037D  3001               	movlw	1
  2040  037E  00E1               	movwf	main@time^(0+384)
  2041  037F  3000               	movlw	0
  2042  0380  00E2               	movwf	(main@time^(0+384)+1)
  2043  0381                     l3032:	
  2044                           
  2045                           ;debug.c: 271:                 if (lux_select >= 3)
  2046  0381  3003               	movlw	3
  2047  0382  026B               	subwf	main@lux_select^(0+384),w
  2048  0383  1C03               	skipc
  2049  0384  2B86               	goto	u3001
  2050  0385  2B87               	goto	u3000
  2051  0386                     u3001:	
  2052  0386  2BA0               	goto	l3040
  2053  0387                     u3000:	
  2054  0387                     l3034:	
  2055                           
  2056                           ;debug.c: 272:                 {;debug.c: 273:                     lux_select=0;
  2057  0387  01EB               	clrf	main@lux_select^(0+384)
  2058  0388                     l3036:	
  2059                           
  2060                           ;debug.c: 276:                     UpdateTimes(Semafori, &to_update);
  2061  0388  30A0               	movlw	(low (_to_update| 0))& (0+255)
  2062  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2063  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2064  038B  00C0               	movwf	??_main
  2065  038C  0840               	movf	??_main,w
  2066  038D  00A4               	movwf	UpdateTimes@_to_update
  2067  038E  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  2068  038F  120A  158A  2642  120A  118A  	fcall	_UpdateTimes
  2069  0394                     l3038:	
  2070                           
  2071                           ;debug.c: 277:                     ChangeTrafficLight(Semafori, &id_semaforo);
  2072  0394  305E               	movlw	(low (_id_semaforo| 0))& (0+255)
  2073  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0397  00C0               	movwf	??_main
  2076  0398  0840               	movf	??_main,w
  2077  0399  00AB               	movwf	ChangeTrafficLight@_n_semafori
  2078  039A  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  2079  039B  120A  158A  2693  120A  118A  	fcall	_ChangeTrafficLight
  2080  03A0                     l3040:	
  2081                           
  2082                           ;debug.c: 281:             GetDigits(&centinaia, &decine, &unita, (*Semafori[id_semaforo
      +                          ]).times[lux_select] - time);
  2083  03A0  3060               	movlw	(low (_decine| 0))& (0+255)
  2084  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2085  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2086  03A3  00C0               	movwf	??_main
  2087  03A4  0840               	movf	??_main,w
  2088  03A5  00B4               	movwf	GetDigits@decine
  2089  03A6  3061               	movlw	(low (_unita| 0))& (0+255)
  2090  03A7  00C1               	movwf	??_main+1
  2091  03A8  0841               	movf	??_main+1,w
  2092  03A9  00B5               	movwf	GetDigits@unita
  2093  03AA  085E               	movf	_id_semaforo,w
  2094  03AB  00C2               	movwf	??_main+2
  2095  03AC  0742               	addwf	??_main+2,w
  2096  03AD  3EBD               	addlw	(low (_Semafori| (0+256)))& (0+255)
  2097  03AE  0084               	movwf	4
  2098  03AF  1783               	bsf	3,7	;select IRP bank3
  2099  03B0  0800               	movf	0,w
  2100  03B1  00C3               	movwf	??_main+3
  2101  03B2  0A84               	incf	4,f
  2102  03B3  0800               	movf	0,w
  2103  03B4  00C4               	movwf	??_main+4
  2104  03B5  1683               	bsf	3,5	;RP0=1, select bank3
  2105  03B6  1703               	bsf	3,6	;RP1=1, select bank3
  2106  03B7  086B               	movf	main@lux_select^(0+384),w
  2107  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2108  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2109  03BA  00C5               	movwf	??_main+5
  2110  03BB  0745               	addwf	??_main+5,w
  2111  03BC  0743               	addwf	??_main+3,w
  2112  03BD  00C6               	movwf	??_main+6
  2113  03BE  0844               	movf	??_main+4,w
  2114  03BF  1803               	skipnc
  2115  03C0  3E01               	addlw	1
  2116  03C1  00C7               	movwf	??_main+7
  2117  03C2  0846               	movf	??_main+6,w
  2118  03C3  0084               	movwf	4
  2119  03C4  1783               	bsf	3,7
  2120  03C5  1C47               	btfss	??_main+7,0
  2121  03C6  1383               	bcf	3,7
  2122  03C7  0800               	movf	0,w
  2123  03C8  00C8               	movwf	??_main+8
  2124  03C9  0A84               	incf	4,f
  2125  03CA  0800               	movf	0,w
  2126  03CB  00C9               	movwf	??_main+9
  2127  03CC  1683               	bsf	3,5	;RP0=1, select bank3
  2128  03CD  1703               	bsf	3,6	;RP1=1, select bank3
  2129  03CE  0861               	movf	main@time^(0+384),w
  2130  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2131  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2132  03D1  0248               	subwf	??_main+8,w
  2133  03D2  00B6               	movwf	GetDigits@Time
  2134  03D3  1683               	bsf	3,5	;RP0=1, select bank3
  2135  03D4  1703               	bsf	3,6	;RP1=1, select bank3
  2136  03D5  0862               	movf	(main@time+1)^(0+384),w
  2137  03D6  1C03               	skipc
  2138  03D7  0A62               	incf	(main@time+1)^(0+384),w
  2139  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2140  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2141  03DA  0249               	subwf	??_main+9,w
  2142  03DB  00B7               	movwf	GetDigits@Time+1
  2143  03DC  305F               	movlw	(low (_centinaia| 0))& (0+255)
  2144  03DD  120A  158A  2798  120A  118A  	fcall	_GetDigits
  2145  03E2                     l3042:	
  2146                           
  2147                           ;debug.c: 285:         if (disp != old_disp)
  2148  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2149  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2150  03E4  0850               	movf	_disp,w
  2151  03E5  0651               	xorwf	_old_disp,w
  2152  03E6  1903               	skipnz
  2153  03E7  2BE9               	goto	u3011
  2154  03E8  2BEA               	goto	u3010
  2155  03E9                     u3011:	
  2156  03E9  2C7B               	goto	l3062
  2157  03EA                     u3010:	
  2158  03EA                     l3044:	
  2159                           
  2160                           ;debug.c: 286:         {;debug.c: 287:             old_disp = disp;
  2161  03EA  0850               	movf	_disp,w
  2162  03EB  00C0               	movwf	??_main
  2163  03EC  0840               	movf	??_main,w
  2164  03ED  00D1               	movwf	_old_disp
  2165                           
  2166                           ;debug.c: 288:             switch (disp)
  2167  03EE  2C68               	goto	l3060
  2168  03EF                     l3046:	
  2169                           
  2170                           ;debug.c: 291:                 if (centinaia > 0)
  2171  03EF  085F               	movf	_centinaia,w
  2172  03F0  1903               	btfsc	3,2
  2173  03F1  2BF3               	goto	u3021
  2174  03F2  2BF4               	goto	u3020
  2175  03F3                     u3021:	
  2176  03F3  2C07               	goto	l274
  2177  03F4                     u3020:	
  2178  03F4                     l3048:	
  2179                           
  2180                           ;debug.c: 292:                 {;debug.c: 293:                     SetDisplay(1, 0, 0, d
      +                          isplay[centinaia]);
  2181  03F4  01A4               	clrf	SetDisplay@d2
  2182  03F5  01A5               	clrf	SetDisplay@d3
  2183  03F6  085F               	movf	_centinaia,w
  2184  03F7  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2185  03F8  0084               	movwf	4
  2186  03F9  120A  158A  2000  120A  118A  	fcall	stringdir
  2187  03FE  00C0               	movwf	??_main
  2188  03FF  0840               	movf	??_main,w
  2189  0400  00A6               	movwf	SetDisplay@value
  2190  0401  3001               	movlw	1
  2191  0402  120A  158A  24BD  120A  118A  	fcall	_SetDisplay
  2192  0407                     l274:	
  2193                           ;debug.c: 294:                 }
  2194                           
  2195                           
  2196                           ;debug.c: 296:                 SetDisplay(1, 0, 0, display[id_semaforo]);
  2197  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0409  01A4               	clrf	SetDisplay@d2
  2200  040A  01A5               	clrf	SetDisplay@d3
  2201  040B  085E               	movf	_id_semaforo,w
  2202  040C  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2203  040D  0084               	movwf	4
  2204  040E  120A  158A  2000  120A  118A  	fcall	stringdir
  2205  0413  00C0               	movwf	??_main
  2206  0414  0840               	movf	??_main,w
  2207  0415  00A6               	movwf	SetDisplay@value
  2208  0416  3001               	movlw	1
  2209  0417  120A  158A  24BD  120A  118A  	fcall	_SetDisplay
  2210                           
  2211                           ;debug.c: 297:                 break;
  2212  041C  2C7B               	goto	l3062
  2213  041D                     l3050:	
  2214  041D                     l3054:	
  2215                           
  2216                           ;debug.c: 303:                 SetDisplay(0, 1, 0, display[(*Semafori[id_semaforo]).time
      +                          s[lux_select]]);
  2217  041D  01A4               	clrf	SetDisplay@d2
  2218  041E  0AA4               	incf	SetDisplay@d2,f
  2219  041F  01A5               	clrf	SetDisplay@d3
  2220  0420  085E               	movf	_id_semaforo,w
  2221  0421  00C0               	movwf	??_main
  2222  0422  0740               	addwf	??_main,w
  2223  0423  3EBD               	addlw	(low (_Semafori| (0+256)))& (0+255)
  2224  0424  0084               	movwf	4
  2225  0425  1783               	bsf	3,7	;select IRP bank3
  2226  0426  0800               	movf	0,w
  2227  0427  00C1               	movwf	??_main+1
  2228  0428  0A84               	incf	4,f
  2229  0429  0800               	movf	0,w
  2230  042A  00C2               	movwf	??_main+2
  2231  042B  1683               	bsf	3,5	;RP0=1, select bank3
  2232  042C  1703               	bsf	3,6	;RP1=1, select bank3
  2233  042D  086B               	movf	main@lux_select^(0+384),w
  2234  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2235  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0430  00C3               	movwf	??_main+3
  2237  0431  0743               	addwf	??_main+3,w
  2238  0432  0741               	addwf	??_main+1,w
  2239  0433  00C4               	movwf	??_main+4
  2240  0434  0842               	movf	??_main+2,w
  2241  0435  1803               	skipnc
  2242  0436  3E01               	addlw	1
  2243  0437  00C5               	movwf	??_main+5
  2244  0438  0844               	movf	??_main+4,w
  2245  0439  0084               	movwf	4
  2246  043A  1783               	bsf	3,7
  2247  043B  1C45               	btfss	??_main+5,0
  2248  043C  1383               	bcf	3,7
  2249  043D  0800               	movf	0,w
  2250  043E  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2251  043F  0084               	movwf	4
  2252  0440  120A  158A  2000  120A  118A  	fcall	stringdir
  2253  0445  00C6               	movwf	??_main+6
  2254  0446  0846               	movf	??_main+6,w
  2255  0447  00A6               	movwf	SetDisplay@value
  2256  0448  3000               	movlw	0
  2257  0449  120A  158A  24BD  120A  118A  	fcall	_SetDisplay
  2258                           
  2259                           ;debug.c: 304:                 break;
  2260  044E  2C7B               	goto	l3062
  2261  044F                     l3056:	
  2262                           
  2263                           ;debug.c: 306:                 SetDisplay(0, 0, 1, display[lux_select]);
  2264  044F  01A4               	clrf	SetDisplay@d2
  2265  0450  01A5               	clrf	SetDisplay@d3
  2266  0451  0AA5               	incf	SetDisplay@d3,f
  2267  0452  1683               	bsf	3,5	;RP0=1, select bank3
  2268  0453  1703               	bsf	3,6	;RP1=1, select bank3
  2269  0454  086B               	movf	main@lux_select^(0+384),w
  2270  0455  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2271  0456  0084               	movwf	4
  2272  0457  120A  158A  2000  120A  118A  	fcall	stringdir
  2273  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2274  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2275  045E  00C0               	movwf	??_main
  2276  045F  0840               	movf	??_main,w
  2277  0460  00A6               	movwf	SetDisplay@value
  2278  0461  3000               	movlw	0
  2279  0462  120A  158A  24BD  120A  118A  	fcall	_SetDisplay
  2280                           
  2281                           ;debug.c: 308:                 break;
  2282  0467  2C7B               	goto	l3062
  2283  0468                     l3060:	
  2284  0468  0850               	movf	_disp,w
  2285  0469  00C0               	movwf	??_main
  2286  046A  01C1               	clrf	??_main+1
  2287                           
  2288                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2289                           ; Switch size 1, requested type "simple"
  2290                           ; Number of cases is 1, Range of values is 0 to 0
  2291                           ; switch strategies available:
  2292                           ; Name         Instructions Cycles
  2293                           ; simple_byte            4     3 (average)
  2294                           ; direct_byte           11     8 (fixed)
  2295                           ; jumptable            260     6 (fixed)
  2296                           ;	Chosen strategy is simple_byte
  2297  046B  0841               	movf	??_main+1,w
  2298  046C  3A00               	xorlw	0	; case 0
  2299  046D  1903               	skipnz
  2300  046E  2C70               	goto	l3176
  2301  046F  2C7B               	goto	l3062
  2302  0470                     l3176:	
  2303                           
  2304                           ; Switch size 1, requested type "simple"
  2305                           ; Number of cases is 3, Range of values is 0 to 2
  2306                           ; switch strategies available:
  2307                           ; Name         Instructions Cycles
  2308                           ; simple_byte           10     6 (average)
  2309                           ; direct_byte           17     8 (fixed)
  2310                           ; jumptable            260     6 (fixed)
  2311                           ;	Chosen strategy is simple_byte
  2312  0470  0840               	movf	??_main,w
  2313  0471  3A00               	xorlw	0	; case 0
  2314  0472  1903               	skipnz
  2315  0473  2BEF               	goto	l3046
  2316  0474  3A01               	xorlw	1	; case 1
  2317  0475  1903               	skipnz
  2318  0476  2C1D               	goto	l3050
  2319  0477  3A03               	xorlw	3	; case 2
  2320  0478  1903               	skipnz
  2321  0479  2C4F               	goto	l3056
  2322  047A  2C7B               	goto	l3062
  2323  047B                     l3062:	
  2324                           
  2325                           ;debug.c: 311:         disp = (disp + 1) % 3;
  2326  047B  3003               	movlw	3
  2327  047C  1283               	bcf	3,5	;RP0=0, select bank0
  2328  047D  1303               	bcf	3,6	;RP1=0, select bank0
  2329  047E  00A4               	movwf	___awmod@divisor
  2330  047F  3000               	movlw	0
  2331  0480  00A5               	movwf	___awmod@divisor+1
  2332  0481  0850               	movf	_disp,w
  2333  0482  3E01               	addlw	1
  2334  0483  00A6               	movwf	___awmod@dividend
  2335  0484  3000               	movlw	0
  2336  0485  1803               	skipnc
  2337  0486  3001               	movlw	1
  2338  0487  00A7               	movwf	___awmod@dividend+1
  2339  0488  120A  158A  273D  120A  118A  	fcall	___awmod
  2340  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2341  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2342  048F  0824               	movf	?___awmod,w
  2343  0490  00C0               	movwf	??_main
  2344  0491  0840               	movf	??_main,w
  2345  0492  00D0               	movwf	_disp
  2346  0493                     l3064:	
  2347                           
  2348                           ;debug.c: 317:         if (secondPassed.Bit && cycled.Bit)
  2349  0493  1C53               	btfss	_secondPassed,0
  2350  0494  2C96               	goto	u3031
  2351  0495  2C97               	goto	u3030
  2352  0496                     u3031:	
  2353  0496  2C9D               	goto	l281
  2354  0497                     u3030:	
  2355  0497                     l3066:	
  2356  0497  1C52               	btfss	_cycled,0
  2357  0498  2C9A               	goto	u3041
  2358  0499  2C9B               	goto	u3040
  2359  049A                     u3041:	
  2360  049A  2C9D               	goto	l281
  2361  049B                     u3040:	
  2362  049B                     l3068:	
  2363                           
  2364                           ;debug.c: 318:         {;debug.c: 319:             secondPassed.Bit = 0;
  2365  049B  1053               	bcf	_secondPassed,0
  2366                           
  2367                           ;debug.c: 320:             cycled.Bit = 0;
  2368  049C  1052               	bcf	_cycled,0
  2369  049D                     l281:	
  2370                           ;debug.c: 321:         }
  2371                           
  2372                           
  2373                           ;debug.c: 322:         if (secondPassed.Bit && !cycled.Bit)
  2374  049D  1C53               	btfss	_secondPassed,0
  2375  049E  2CA0               	goto	u3051
  2376  049F  2CA1               	goto	u3050
  2377  04A0                     u3051:	
  2378  04A0  2887               	goto	l2912
  2379  04A1                     u3050:	
  2380  04A1                     l3070:	
  2381  04A1  1852               	btfsc	_cycled,0
  2382  04A2  2CA4               	goto	u3061
  2383  04A3  2CA5               	goto	u3060
  2384  04A4                     u3061:	
  2385  04A4  2887               	goto	l2912
  2386  04A5                     u3060:	
  2387  04A5                     l3072:	
  2388                           
  2389                           ;debug.c: 323:         {;debug.c: 324:             cycled.Bit = 1;
  2390  04A5  1452               	bsf	_cycled,0
  2391  04A6  2887               	goto	l2912
  2392  04A7  120A  118A  2810   	ljmp	start
  2393  04AA                     __end_of_main:	
  2394                           
  2395                           	psect	text1
  2396  0D56                     __ptext1:	
  2397 ;; *************** function _sendByte *****************
  2398 ;; Defined at:
  2399 ;;		line 388 in file "debug.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  byte0           1    wreg     unsigned char 
  2402 ;;  byte1           1   24[BANK0 ] unsigned char 
  2403 ;;  valore          1   25[BANK0 ] unsigned char 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  byte0           1   29[BANK0 ] unsigned char 
  2406 ;;  i               1   31[BANK0 ] unsigned char 
  2407 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2408 ;;		 -> BuildByte@txByte(5), 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         0       2       0       0       0
  2419 ;;      Locals:         0       3       0       0       0
  2420 ;;      Temps:          0       3       0       0       0
  2421 ;;      Totals:         0       8       0       0       0
  2422 ;;Total ram usage:        8 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    4
  2425 ;; This function calls:
  2426 ;;		_BuildByte
  2427 ;;		_UART_TxChar
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function _sendByte
  2435  0D56                     _sendByte:	
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2439                           ;sendByte@byte0 stored from wreg
  2440  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0D58  00BD               	movwf	sendByte@byte0
  2443  0D59                     l2832:	
  2444                           
  2445                           ;debug.c: 388: void sendByte(char byte0, char byte1, char valore);debug.c: 389: {;debug.
      +                          c: 390:     char *txByte;;debug.c: 391:     txByte = BuildByte(byte0, byte1, valore);
  2446  0D59  0838               	movf	sendByte@byte1,w
  2447  0D5A  00BA               	movwf	??_sendByte
  2448  0D5B  083A               	movf	??_sendByte,w
  2449  0D5C  00A4               	movwf	BuildByte@byte1
  2450  0D5D  0839               	movf	sendByte@valore,w
  2451  0D5E  00BB               	movwf	??_sendByte+1
  2452  0D5F  083B               	movf	??_sendByte+1,w
  2453  0D60  00A5               	movwf	BuildByte@valore
  2454  0D61  083D               	movf	sendByte@byte0,w
  2455  0D62  120A  118A  24AA  120A  158A  	fcall	_BuildByte
  2456  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0D68  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0D69  00BC               	movwf	??_sendByte+2
  2459  0D6A  083C               	movf	??_sendByte+2,w
  2460  0D6B  00BE               	movwf	sendByte@txByte
  2461  0D6C                     l2834:	
  2462                           
  2463                           ;debug.c: 393:     for (unsigned char i = 0; i < 5; i++)
  2464  0D6C  01BF               	clrf	sendByte@i
  2465  0D6D                     l2840:	
  2466                           
  2467                           ;debug.c: 394:     {;debug.c: 395:         UART_TxChar(*(txByte++));
  2468  0D6D  083E               	movf	sendByte@txByte,w
  2469  0D6E  0084               	movwf	4
  2470  0D6F  1383               	bcf	3,7	;select IRP bank0
  2471  0D70  0800               	movf	0,w
  2472  0D71  120A  158A  248C  120A  158A  	fcall	_UART_TxChar
  2473  0D76                     l2842:	
  2474  0D76  3001               	movlw	1
  2475  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0D79  00BA               	movwf	??_sendByte
  2478  0D7A  083A               	movf	??_sendByte,w
  2479  0D7B  07BE               	addwf	sendByte@txByte,f
  2480  0D7C                     l2844:	
  2481                           
  2482                           ;debug.c: 396:     }
  2483  0D7C  3001               	movlw	1
  2484  0D7D  00BA               	movwf	??_sendByte
  2485  0D7E  083A               	movf	??_sendByte,w
  2486  0D7F  07BF               	addwf	sendByte@i,f
  2487  0D80                     l2846:	
  2488  0D80  3005               	movlw	5
  2489  0D81  023F               	subwf	sendByte@i,w
  2490  0D82  1C03               	skipc
  2491  0D83  2D85               	goto	u2761
  2492  0D84  2D86               	goto	u2760
  2493  0D85                     u2761:	
  2494  0D85  2D6D               	goto	l2840
  2495  0D86                     u2760:	
  2496  0D86                     l320:	
  2497  0D86  0008               	return
  2498  0D87                     __end_of_sendByte:	
  2499                           
  2500                           	psect	text2
  2501  0C8C                     __ptext2:	
  2502 ;; *************** function _UART_TxChar *****************
  2503 ;; Defined at:
  2504 ;;		line 363 in file "debug.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  ch              1    wreg     unsigned char 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  ch              1    4[BANK0 ] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         0       0       0       0       0
  2519 ;;      Locals:         0       1       0       0       0
  2520 ;;      Temps:          0       0       0       0       0
  2521 ;;      Totals:         0       1       0       0       0
  2522 ;;Total ram usage:        1 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    3
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_sendByte
  2529 ;;		_UART_Write_Text
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function _UART_TxChar
  2535  0C8C                     _UART_TxChar:	
  2536                           
  2537                           ;incstack = 0
  2538                           ; Regs used in _UART_TxChar: [wreg]
  2539                           ;UART_TxChar@ch stored from wreg
  2540  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0C8E  00A4               	movwf	UART_TxChar@ch
  2543  0C8F                     l2586:	
  2544  0C8F                     l300:	
  2545                           ;debug.c: 366:         ;
  2546                           
  2547                           
  2548                           ;debug.c: 365:     while (!TXIF)
  2549  0C8F  1E0C               	btfss	12,4	;volatile
  2550  0C90  2C92               	goto	u2331
  2551  0C91  2C93               	goto	u2330
  2552  0C92                     u2331:	
  2553  0C92  2C8F               	goto	l300
  2554  0C93                     u2330:	
  2555  0C93                     l302:	
  2556                           
  2557                           ;debug.c: 367:     TXIF = 0;
  2558  0C93  120C               	bcf	12,4	;volatile
  2559  0C94                     l2588:	
  2560                           
  2561                           ;debug.c: 368:     TXREG = ch;
  2562  0C94  0824               	movf	UART_TxChar@ch,w
  2563  0C95  0099               	movwf	25	;volatile
  2564  0C96                     l303:	
  2565  0C96  0008               	return
  2566  0C97                     __end_of_UART_TxChar:	
  2567                           
  2568                           	psect	text3
  2569  04AA                     __ptext3:	
  2570 ;; *************** function _BuildByte *****************
  2571 ;; Defined at:
  2572 ;;		line 2 in file "./CustomLib/Serial.h"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  byte0           1    wreg     unsigned char 
  2575 ;;  byte1           1    4[BANK0 ] unsigned char 
  2576 ;;  valore          1    5[BANK0 ] unsigned char 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  byte0           1    8[BANK0 ] unsigned char 
  2579 ;;  y               2   18[BANK0 ] int 
  2580 ;;  y               2   16[BANK0 ] int 
  2581 ;;  i               2   22[BANK0 ] int 
  2582 ;;  i               2   20[BANK0 ] int 
  2583 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2584 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2585 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      PTR unsigned char 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       2       0       0       0
  2596 ;;      Locals:         0      16       0       0       0
  2597 ;;      Temps:          0       2       0       0       0
  2598 ;;      Totals:         0      20       0       0       0
  2599 ;;Total ram usage:       20 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    3
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_sendByte
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           
  2610                           ;psect for function _BuildByte
  2611  04AA                     _BuildByte:	
  2612                           
  2613                           ;incstack = 0
  2614                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2615                           ;BuildByte@byte0 stored from wreg
  2616  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2617  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2618  04AC  00A8               	movwf	BuildByte@byte0
  2619  04AD                     l2518:	
  2620                           
  2621                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2622  04AD  0828               	movf	BuildByte@byte0,w
  2623  04AE  397F               	andlw	127
  2624  04AF  00A6               	movwf	??_BuildByte
  2625  04B0  0826               	movf	??_BuildByte,w
  2626  04B1  00A9               	movwf	BuildByte@txByte
  2627                           
  2628                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2629  04B2  0824               	movf	BuildByte@byte1,w
  2630  04B3  397F               	andlw	127
  2631  04B4  00A6               	movwf	??_BuildByte
  2632  04B5  0826               	movf	??_BuildByte,w
  2633  04B6  00AA               	movwf	BuildByte@txByte+1
  2634                           
  2635                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2636  04B7  0825               	movf	BuildByte@valore,w
  2637  04B8  397F               	andlw	127
  2638  04B9  00A6               	movwf	??_BuildByte
  2639  04BA  0826               	movf	??_BuildByte,w
  2640  04BB  00AB               	movwf	BuildByte@txByte+2
  2641  04BC                     l2520:	
  2642                           
  2643                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2644  04BC  0825               	movf	BuildByte@valore,w
  2645  04BD  00A6               	movwf	??_BuildByte
  2646  04BE  3007               	movlw	7
  2647  04BF                     u2235:	
  2648  04BF  1003               	clrc
  2649  04C0  0CA6               	rrf	??_BuildByte,f
  2650  04C1  3EFF               	addlw	-1
  2651  04C2  1D03               	skipz
  2652  04C3  2CBF               	goto	u2235
  2653  04C4  0826               	movf	??_BuildByte,w
  2654  04C5  397F               	andlw	127
  2655  04C6  00A7               	movwf	??_BuildByte+1
  2656  04C7  0827               	movf	??_BuildByte+1,w
  2657  04C8  00AC               	movwf	BuildByte@txByte+3
  2658  04C9                     l2522:	
  2659                           
  2660                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2661  04C9  01AE               	clrf	BuildByte@sommaRow
  2662  04CA                     l2524:	
  2663                           
  2664                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2665  04CA  01AF               	clrf	BuildByte@sommaColumn
  2666  04CB                     l2526:	
  2667                           
  2668                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2669  04CB  01B4               	clrf	BuildByte@i
  2670  04CC  01B5               	clrf	BuildByte@i+1
  2671  04CD                     l2532:	
  2672                           
  2673                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2674  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2675  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2676  04CF  01B0               	clrf	BuildByte@y
  2677  04D0  01B1               	clrf	BuildByte@y+1
  2678  04D1                     l2538:	
  2679                           
  2680                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2681  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2682  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2683  04D3  0834               	movf	BuildByte@i,w
  2684  04D4  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2685  04D5  0084               	movwf	4
  2686  04D6  1383               	bcf	3,7	;select IRP bank0
  2687  04D7  0800               	movf	0,w
  2688  04D8  00A6               	movwf	??_BuildByte
  2689  04D9  0A30               	incf	BuildByte@y,w
  2690  04DA  2CDD               	goto	u2244
  2691  04DB                     u2245:	
  2692  04DB  1003               	clrc
  2693  04DC  0CA6               	rrf	??_BuildByte,f
  2694  04DD                     u2244:	
  2695  04DD  3EFF               	addlw	-1
  2696  04DE  1D03               	skipz
  2697  04DF  2CDB               	goto	u2245
  2698  04E0  0826               	movf	??_BuildByte,w
  2699  04E1  3901               	andlw	1
  2700  04E2  00A7               	movwf	??_BuildByte+1
  2701  04E3  0827               	movf	??_BuildByte+1,w
  2702  04E4  07AE               	addwf	BuildByte@sommaRow,f
  2703  04E5                     l2540:	
  2704                           
  2705                           ;./CustomLib/Serial.h: 18:         }
  2706  04E5  3001               	movlw	1
  2707  04E6  07B0               	addwf	BuildByte@y,f
  2708  04E7  1803               	skipnc
  2709  04E8  0AB1               	incf	BuildByte@y+1,f
  2710  04E9  3000               	movlw	0
  2711  04EA  07B1               	addwf	BuildByte@y+1,f
  2712  04EB                     l2542:	
  2713  04EB  0831               	movf	BuildByte@y+1,w
  2714  04EC  3A80               	xorlw	128
  2715  04ED  00FF               	movwf	btemp+1
  2716  04EE  3080               	movlw	128
  2717  04EF  027F               	subwf	btemp+1,w
  2718  04F0  1D03               	skipz
  2719  04F1  2CF4               	goto	u2255
  2720  04F2  3008               	movlw	8
  2721  04F3  0230               	subwf	BuildByte@y,w
  2722  04F4                     u2255:	
  2723  04F4  1C03               	skipc
  2724  04F5  2CF7               	goto	u2251
  2725  04F6  2CF8               	goto	u2250
  2726  04F7                     u2251:	
  2727  04F7  2CD1               	goto	l2538
  2728  04F8                     u2250:	
  2729  04F8                     l116:	
  2730                           
  2731                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2732  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2733  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2734  04FA  1C2E               	btfss	BuildByte@sommaRow,0
  2735  04FB  2CFD               	goto	u2261
  2736  04FC  2CFE               	goto	u2260
  2737  04FD                     u2261:	
  2738  04FD  2D06               	goto	l2546
  2739  04FE                     u2260:	
  2740  04FE                     l2544:	
  2741                           
  2742                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2743  04FE  3080               	movlw	128
  2744  04FF  00A6               	movwf	??_BuildByte
  2745  0500  0834               	movf	BuildByte@i,w
  2746  0501  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2747  0502  0084               	movwf	4
  2748  0503  0826               	movf	??_BuildByte,w
  2749  0504  1383               	bcf	3,7	;select IRP bank0
  2750  0505  0780               	addwf	0,f
  2751  0506                     l2546:	
  2752                           
  2753                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2754  0506  01AE               	clrf	BuildByte@sommaRow
  2755  0507                     l2550:	
  2756                           ;./CustomLib/Serial.h: 23:         }
  2757                           
  2758                           
  2759                           ;./CustomLib/Serial.h: 28:     }
  2760  0507  3001               	movlw	1
  2761  0508  07B4               	addwf	BuildByte@i,f
  2762  0509  1803               	skipnc
  2763  050A  0AB5               	incf	BuildByte@i+1,f
  2764  050B  3000               	movlw	0
  2765  050C  07B5               	addwf	BuildByte@i+1,f
  2766  050D                     l2552:	
  2767  050D  0835               	movf	BuildByte@i+1,w
  2768  050E  3A80               	xorlw	128
  2769  050F  00FF               	movwf	btemp+1
  2770  0510  3080               	movlw	128
  2771  0511  027F               	subwf	btemp+1,w
  2772  0512  1D03               	skipz
  2773  0513  2D16               	goto	u2275
  2774  0514  3004               	movlw	4
  2775  0515  0234               	subwf	BuildByte@i,w
  2776  0516                     u2275:	
  2777  0516  1C03               	skipc
  2778  0517  2D19               	goto	u2271
  2779  0518  2D1A               	goto	u2270
  2780  0519                     u2271:	
  2781  0519  2CCD               	goto	l2532
  2782  051A                     u2270:	
  2783  051A                     l2554:	
  2784                           
  2785                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2786  051A  1283               	bcf	3,5	;RP0=0, select bank0
  2787  051B  1303               	bcf	3,6	;RP1=0, select bank0
  2788  051C  01B6               	clrf	BuildByte@i_332
  2789  051D  01B7               	clrf	BuildByte@i_332+1
  2790  051E                     l2560:	
  2791                           
  2792                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2793  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2794  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0520  01B2               	clrf	BuildByte@y_333
  2796  0521  01B3               	clrf	BuildByte@y_333+1
  2797  0522                     l2566:	
  2798                           
  2799                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2800  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0523  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0524  0832               	movf	BuildByte@y_333,w
  2803  0525  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2804  0526  0084               	movwf	4
  2805  0527  1383               	bcf	3,7	;select IRP bank0
  2806  0528  0800               	movf	0,w
  2807  0529  00A6               	movwf	??_BuildByte
  2808  052A  0A36               	incf	BuildByte@i_332,w
  2809  052B  2D2E               	goto	u2284
  2810  052C                     u2285:	
  2811  052C  1003               	clrc
  2812  052D  0CA6               	rrf	??_BuildByte,f
  2813  052E                     u2284:	
  2814  052E  3EFF               	addlw	-1
  2815  052F  1D03               	skipz
  2816  0530  2D2C               	goto	u2285
  2817  0531  0826               	movf	??_BuildByte,w
  2818  0532  3901               	andlw	1
  2819  0533  00A7               	movwf	??_BuildByte+1
  2820  0534  0827               	movf	??_BuildByte+1,w
  2821  0535  07AF               	addwf	BuildByte@sommaColumn,f
  2822  0536                     l2568:	
  2823                           
  2824                           ;./CustomLib/Serial.h: 37:         }
  2825  0536  3001               	movlw	1
  2826  0537  07B2               	addwf	BuildByte@y_333,f
  2827  0538  1803               	skipnc
  2828  0539  0AB3               	incf	BuildByte@y_333+1,f
  2829  053A  3000               	movlw	0
  2830  053B  07B3               	addwf	BuildByte@y_333+1,f
  2831  053C                     l2570:	
  2832  053C  0833               	movf	BuildByte@y_333+1,w
  2833  053D  3A80               	xorlw	128
  2834  053E  00FF               	movwf	btemp+1
  2835  053F  3080               	movlw	128
  2836  0540  027F               	subwf	btemp+1,w
  2837  0541  1D03               	skipz
  2838  0542  2D45               	goto	u2295
  2839  0543  3004               	movlw	4
  2840  0544  0232               	subwf	BuildByte@y_333,w
  2841  0545                     u2295:	
  2842  0545  1C03               	skipc
  2843  0546  2D48               	goto	u2291
  2844  0547  2D49               	goto	u2290
  2845  0548                     u2291:	
  2846  0548  2D22               	goto	l2566
  2847  0549                     u2290:	
  2848  0549                     l122:	
  2849                           
  2850                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2851  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2852  054A  1303               	bcf	3,6	;RP1=0, select bank0
  2853  054B  1C2F               	btfss	BuildByte@sommaColumn,0
  2854  054C  2D4E               	goto	u2301
  2855  054D  2D4F               	goto	u2300
  2856  054E                     u2301:	
  2857  054E  2D5C               	goto	l2574
  2858  054F                     u2300:	
  2859  054F                     l2572:	
  2860                           
  2861                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2862  054F  3001               	movlw	1
  2863  0550  00A6               	movwf	??_BuildByte
  2864  0551  0A36               	incf	BuildByte@i_332,w
  2865  0552  2D55               	goto	u2314
  2866  0553                     u2315:	
  2867  0553  1003               	clrc
  2868  0554  0DA6               	rlf	??_BuildByte,f
  2869  0555                     u2314:	
  2870  0555  3EFF               	addlw	-1
  2871  0556  1D03               	skipz
  2872  0557  2D53               	goto	u2315
  2873  0558  0826               	movf	??_BuildByte,w
  2874  0559  00A7               	movwf	??_BuildByte+1
  2875  055A  0827               	movf	??_BuildByte+1,w
  2876  055B  07AD               	addwf	BuildByte@txByte+4,f
  2877  055C                     l2574:	
  2878                           
  2879                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2880  055C  01AF               	clrf	BuildByte@sommaColumn
  2881  055D                     l2578:	
  2882                           ;./CustomLib/Serial.h: 42:         }
  2883                           
  2884                           
  2885                           ;./CustomLib/Serial.h: 47:     }
  2886  055D  3001               	movlw	1
  2887  055E  07B6               	addwf	BuildByte@i_332,f
  2888  055F  1803               	skipnc
  2889  0560  0AB7               	incf	BuildByte@i_332+1,f
  2890  0561  3000               	movlw	0
  2891  0562  07B7               	addwf	BuildByte@i_332+1,f
  2892  0563                     l2580:	
  2893  0563  0837               	movf	BuildByte@i_332+1,w
  2894  0564  3A80               	xorlw	128
  2895  0565  00FF               	movwf	btemp+1
  2896  0566  3080               	movlw	128
  2897  0567  027F               	subwf	btemp+1,w
  2898  0568  1D03               	skipz
  2899  0569  2D6C               	goto	u2325
  2900  056A  3008               	movlw	8
  2901  056B  0236               	subwf	BuildByte@i_332,w
  2902  056C                     u2325:	
  2903  056C  1C03               	skipc
  2904  056D  2D6F               	goto	u2321
  2905  056E  2D70               	goto	u2320
  2906  056F                     u2321:	
  2907  056F  2D1E               	goto	l2560
  2908  0570                     u2320:	
  2909  0570                     l2582:	
  2910                           
  2911                           ;./CustomLib/Serial.h: 49:     return txByte;
  2912  0570  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2913  0571                     l125:	
  2914  0571  0008               	return
  2915  0572                     __end_of_BuildByte:	
  2916                           
  2917                           	psect	text4
  2918  0D87                     __ptext4:	
  2919 ;; *************** function _map *****************
  2920 ;; Defined at:
  2921 ;;		line 1 in file "./CustomLib/Conversions.h"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  x               2   20[BANK0 ] int 
  2924 ;;  in_min          2   22[BANK0 ] int 
  2925 ;;  in_max          2   24[BANK0 ] int 
  2926 ;;  out_min         2   26[BANK0 ] int 
  2927 ;;  out_max         2   28[BANK0 ] int 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2   20[BANK0 ] int 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0      10       0       0       0
  2940 ;;      Locals:         0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0
  2942 ;;      Totals:         0      10       0       0       0
  2943 ;;Total ram usage:       10 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    4
  2946 ;; This function calls:
  2947 ;;		___awdiv
  2948 ;;		___wmul
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function _map
  2956  0D87                     _map:	
  2957  0D87                     l2726:	
  2958                           ;incstack = 0
  2959                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2960                           
  2961                           
  2962                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2963  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0D89  0836               	movf	map@in_min,w
  2966  0D8A  0238               	subwf	map@in_max,w
  2967  0D8B  00AB               	movwf	___awdiv@divisor
  2968  0D8C  0837               	movf	map@in_min+1,w
  2969  0D8D  1C03               	skipc
  2970  0D8E  0A37               	incf	map@in_min+1,w
  2971  0D8F  0239               	subwf	map@in_max+1,w
  2972  0D90  00AC               	movwf	___awdiv@divisor+1
  2973  0D91  0836               	movf	map@in_min,w
  2974  0D92  0234               	subwf	map@x,w
  2975  0D93  00A4               	movwf	___wmul@multiplier
  2976  0D94  0837               	movf	map@in_min+1,w
  2977  0D95  1C03               	skipc
  2978  0D96  0A37               	incf	map@in_min+1,w
  2979  0D97  0235               	subwf	map@x+1,w
  2980  0D98  00A5               	movwf	___wmul@multiplier+1
  2981  0D99  083A               	movf	map@out_min,w
  2982  0D9A  023C               	subwf	map@out_max,w
  2983  0D9B  00A6               	movwf	___wmul@multiplicand
  2984  0D9C  083B               	movf	map@out_min+1,w
  2985  0D9D  1C03               	skipc
  2986  0D9E  0A3B               	incf	map@out_min+1,w
  2987  0D9F  023D               	subwf	map@out_max+1,w
  2988  0DA0  00A7               	movwf	___wmul@multiplicand+1
  2989  0DA1  120A  158A  252F  120A  158A  	fcall	___wmul
  2990  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0DA8  0825               	movf	?___wmul+1,w
  2993  0DA9  00AE               	movwf	___awdiv@dividend+1
  2994  0DAA  0824               	movf	?___wmul,w
  2995  0DAB  00AD               	movwf	___awdiv@dividend
  2996  0DAC  120A  118A  274D  120A  158A  	fcall	___awdiv
  2997  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0DB3  083A               	movf	map@out_min,w
  3000  0DB4  072B               	addwf	?___awdiv,w
  3001  0DB5  00B4               	movwf	?_map
  3002  0DB6  083B               	movf	map@out_min+1,w
  3003  0DB7  1803               	skipnc
  3004  0DB8  0A3B               	incf	map@out_min+1,w
  3005  0DB9  072C               	addwf	?___awdiv+1,w
  3006  0DBA  00B5               	movwf	?_map+1
  3007  0DBB                     l77:	
  3008  0DBB  0008               	return
  3009  0DBC                     __end_of_map:	
  3010                           
  3011                           	psect	text5
  3012  0D2F                     __ptext5:	
  3013 ;; *************** function ___wmul *****************
  3014 ;; Defined at:
  3015 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3018 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  product         2    8[BANK0 ] unsigned int 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  2    4[BANK0 ] unsigned int 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       4       0       0       0
  3031 ;;      Locals:         0       2       0       0       0
  3032 ;;      Temps:          0       0       0       0       0
  3033 ;;      Totals:         0       6       0       0       0
  3034 ;;Total ram usage:        6 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    3
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_map
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function ___wmul
  3046  0D2F                     ___wmul:	
  3047  0D2F                     l2590:	
  3048                           ;incstack = 0
  3049                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3050                           
  3051  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0D31  01A8               	clrf	___wmul@product
  3054  0D32  01A9               	clrf	___wmul@product+1
  3055  0D33                     l2592:	
  3056  0D33  1C24               	btfss	___wmul@multiplier,0
  3057  0D34  2D36               	goto	u2341
  3058  0D35  2D37               	goto	u2340
  3059  0D36                     u2341:	
  3060  0D36  2D3D               	goto	l434
  3061  0D37                     u2340:	
  3062  0D37                     l2594:	
  3063  0D37  0826               	movf	___wmul@multiplicand,w
  3064  0D38  07A8               	addwf	___wmul@product,f
  3065  0D39  1803               	skipnc
  3066  0D3A  0AA9               	incf	___wmul@product+1,f
  3067  0D3B  0827               	movf	___wmul@multiplicand+1,w
  3068  0D3C  07A9               	addwf	___wmul@product+1,f
  3069  0D3D                     l434:	
  3070  0D3D  3001               	movlw	1
  3071  0D3E                     u2355:	
  3072  0D3E  1003               	clrc
  3073  0D3F  0DA6               	rlf	___wmul@multiplicand,f
  3074  0D40  0DA7               	rlf	___wmul@multiplicand+1,f
  3075  0D41  3EFF               	addlw	-1
  3076  0D42  1D03               	skipz
  3077  0D43  2D3E               	goto	u2355
  3078  0D44                     l2596:	
  3079  0D44  3001               	movlw	1
  3080  0D45                     u2365:	
  3081  0D45  1003               	clrc
  3082  0D46  0CA5               	rrf	___wmul@multiplier+1,f
  3083  0D47  0CA4               	rrf	___wmul@multiplier,f
  3084  0D48  3EFF               	addlw	-1
  3085  0D49  1D03               	skipz
  3086  0D4A  2D45               	goto	u2365
  3087  0D4B                     l2598:	
  3088  0D4B  0824               	movf	___wmul@multiplier,w
  3089  0D4C  0425               	iorwf	___wmul@multiplier+1,w
  3090  0D4D  1D03               	btfss	3,2
  3091  0D4E  2D50               	goto	u2371
  3092  0D4F  2D51               	goto	u2370
  3093  0D50                     u2371:	
  3094  0D50  2D33               	goto	l2592
  3095  0D51                     u2370:	
  3096  0D51                     l2600:	
  3097  0D51  0829               	movf	___wmul@product+1,w
  3098  0D52  00A5               	movwf	?___wmul+1
  3099  0D53  0828               	movf	___wmul@product,w
  3100  0D54  00A4               	movwf	?___wmul
  3101  0D55                     l436:	
  3102  0D55  0008               	return
  3103  0D56                     __end_of___wmul:	
  3104                           
  3105                           	psect	text6
  3106  0C97                     __ptext6:	
  3107 ;; *************** function _init_ADC *****************
  3108 ;; Defined at:
  3109 ;;		line 332 in file "debug.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0
  3125 ;;      Temps:          0       1       0       0       0
  3126 ;;      Totals:         0       1       0       0       0
  3127 ;;Total ram usage:        1 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    3
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _init_ADC
  3139  0C97                     _init_ADC:	
  3140  0C97                     l2814:	
  3141                           ;incstack = 0
  3142                           ; Regs used in _init_ADC: [wreg+status,2]
  3143                           
  3144                           
  3145                           ;debug.c: 334:     TRISA = 0xE3;
  3146  0C97  30E3               	movlw	227
  3147  0C98  1683               	bsf	3,5	;RP0=1, select bank1
  3148  0C99  1303               	bcf	3,6	;RP1=0, select bank1
  3149  0C9A  0085               	movwf	5	;volatile
  3150  0C9B                     l2816:	
  3151                           
  3152                           ;debug.c: 335:     ADCON0 = 0x00;
  3153  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  3155  0C9D  019F               	clrf	31	;volatile
  3156  0C9E                     l2818:	
  3157                           
  3158                           ;debug.c: 336:     ADCON1 = 0x80;
  3159  0C9E  3080               	movlw	128
  3160  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  3161  0CA0  1303               	bcf	3,6	;RP1=0, select bank1
  3162  0CA1  009F               	movwf	31	;volatile
  3163  0CA2                     l2820:	
  3164                           
  3165                           ;debug.c: 337:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3166  0CA2  3019               	movlw	25
  3167  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  3168  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  3169  0CA5  00A4               	movwf	??_init_ADC
  3170  0CA6                     u3087:	
  3171  0CA6  0BA4               	decfsz	??_init_ADC,f
  3172  0CA7  2CA6               	goto	u3087
  3173  0CA8  2CA9               	nop2
  3174  0CA9                     l288:	
  3175  0CA9  0008               	return
  3176  0CAA                     __end_of_init_ADC:	
  3177                           
  3178                           	psect	text7
  3179  0CD2                     __ptext7:	
  3180 ;; *************** function ___bmul *****************
  3181 ;; Defined at:
  3182 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  multiplier      1    wreg     unsigned char 
  3185 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  multiplier      1    7[BANK0 ] unsigned char 
  3188 ;;  product         1    6[BANK0 ] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      unsigned char 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3198 ;;      Params:         0       1       0       0       0
  3199 ;;      Locals:         0       2       0       0       0
  3200 ;;      Temps:          0       1       0       0       0
  3201 ;;      Totals:         0       4       0       0       0
  3202 ;;Total ram usage:        4 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    3
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           
  3213                           ;psect for function ___bmul
  3214  0CD2                     ___bmul:	
  3215                           
  3216                           ;incstack = 0
  3217                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3218                           ;___bmul@multiplier stored from wreg
  3219  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0CD4  00A7               	movwf	___bmul@multiplier
  3222  0CD5                     l2862:	
  3223  0CD5  01A6               	clrf	___bmul@product
  3224  0CD6                     l2864:	
  3225  0CD6  1C27               	btfss	___bmul@multiplier,0
  3226  0CD7  2CD9               	goto	u2791
  3227  0CD8  2CDA               	goto	u2790
  3228  0CD9                     u2791:	
  3229  0CD9  2CDE               	goto	l2868
  3230  0CDA                     u2790:	
  3231  0CDA                     l2866:	
  3232  0CDA  0824               	movf	___bmul@multiplicand,w
  3233  0CDB  00A5               	movwf	??___bmul
  3234  0CDC  0825               	movf	??___bmul,w
  3235  0CDD  07A6               	addwf	___bmul@product,f
  3236  0CDE                     l2868:	
  3237  0CDE  1003               	clrc
  3238  0CDF  0DA4               	rlf	___bmul@multiplicand,f
  3239  0CE0                     l2870:	
  3240  0CE0  1003               	clrc
  3241  0CE1  0CA7               	rrf	___bmul@multiplier,f
  3242  0CE2  0827               	movf	___bmul@multiplier,w
  3243  0CE3  1D03               	btfss	3,2
  3244  0CE4  2CE6               	goto	u2801
  3245  0CE5  2CE7               	goto	u2800
  3246  0CE6                     u2801:	
  3247  0CE6  2CD6               	goto	l2864
  3248  0CE7                     u2800:	
  3249  0CE7                     l2872:	
  3250  0CE7  0826               	movf	___bmul@product,w
  3251  0CE8                     l460:	
  3252  0CE8  0008               	return
  3253  0CE9                     __end_of___bmul:	
  3254                           
  3255                           	psect	text8
  3256  0E42                     __ptext8:	
  3257 ;; *************** function _UpdateTimes *****************
  3258 ;; Defined at:
  3259 ;;		line 3 in file "./CustomLib/TrafficLight.h"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  _semafori       1    wreg     PTR PTR struct .
  3262 ;;		 -> Semafori(32), 
  3263 ;;  _to_update      1    4[BANK0 ] PTR struct .
  3264 ;;		 -> to_update(7), 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  _semafori       1   16[BANK0 ] PTR PTR struct .
  3267 ;;		 -> Semafori(32), 
  3268 ;;  i               1   18[BANK0 ] unsigned char 
  3269 ;;  l               1   17[BANK0 ] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3279 ;;      Params:         0       1       0       0       0
  3280 ;;      Locals:         0       3       0       0       0
  3281 ;;      Temps:          0      11       0       0       0
  3282 ;;      Totals:         0      15       0       0       0
  3283 ;;Total ram usage:       15 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    3
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_main
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           
  3294                           ;psect for function _UpdateTimes
  3295  0E42                     _UpdateTimes:	
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3299                           ;UpdateTimes@_semafori stored from wreg
  3300  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  3302  0E44  00B0               	movwf	UpdateTimes@_semafori
  3303  0E45                     l2736:	
  3304                           
  3305                           ;./CustomLib/TrafficLight.h: 3: void UpdateTimes(_Semafori _semafori, Update *_to_update
      +                          );./CustomLib/TrafficLight.h: 4: {;./CustomLib/TrafficLight.h: 6:     for (unsigned char
      +                           l = 0; l < 16; l++)
  3306  0E45  01B1               	clrf	UpdateTimes@l
  3307  0E46                     l2742:	
  3308                           
  3309                           ;./CustomLib/TrafficLight.h: 7:     {;./CustomLib/TrafficLight.h: 8:         if( l == (*
      +                          _to_update).id )
  3310  0E46  0824               	movf	UpdateTimes@_to_update,w
  3311  0E47  3E06               	addlw	6
  3312  0E48  0084               	movwf	4
  3313  0E49  1383               	bcf	3,7	;select IRP bank0
  3314  0E4A  0800               	movf	0,w
  3315  0E4B  0631               	xorwf	UpdateTimes@l,w
  3316  0E4C  1D03               	skipz
  3317  0E4D  2E4F               	goto	u2671
  3318  0E4E  2E50               	goto	u2670
  3319  0E4F                     u2671:	
  3320  0E4F  2E88               	goto	l2756
  3321  0E50                     u2670:	
  3322  0E50                     l2744:	
  3323                           
  3324                           ;./CustomLib/TrafficLight.h: 9:         {;./CustomLib/TrafficLight.h: 10:             fo
      +                          r(unsigned char i = 0; i < 3; i++)
  3325  0E50  01B2               	clrf	UpdateTimes@i
  3326  0E51                     l2750:	
  3327                           
  3328                           ;./CustomLib/TrafficLight.h: 11:             {;./CustomLib/TrafficLight.h: 12:          
      +                                (*(_semafori)[l]).times[i] = (*_to_update).new_times[i];
  3329  0E51  0832               	movf	UpdateTimes@i,w
  3330  0E52  00A5               	movwf	??_UpdateTimes
  3331  0E53  0725               	addwf	??_UpdateTimes,w
  3332  0E54  0724               	addwf	UpdateTimes@_to_update,w
  3333  0E55  00A6               	movwf	??_UpdateTimes+1
  3334  0E56  0826               	movf	??_UpdateTimes+1,w
  3335  0E57  0084               	movwf	4
  3336  0E58  1383               	bcf	3,7	;select IRP bank0
  3337  0E59  0800               	movf	0,w
  3338  0E5A  00A7               	movwf	??_UpdateTimes+2
  3339  0E5B  0A84               	incf	4,f
  3340  0E5C  0800               	movf	0,w
  3341  0E5D  00A8               	movwf	??_UpdateTimes+3
  3342  0E5E  0831               	movf	UpdateTimes@l,w
  3343  0E5F  00A9               	movwf	??_UpdateTimes+4
  3344  0E60  0729               	addwf	??_UpdateTimes+4,w
  3345  0E61  0730               	addwf	UpdateTimes@_semafori,w
  3346  0E62  00AA               	movwf	??_UpdateTimes+5
  3347  0E63  082A               	movf	??_UpdateTimes+5,w
  3348  0E64  0084               	movwf	4
  3349  0E65  1783               	bsf	3,7	;select IRP bank2
  3350  0E66  0800               	movf	0,w
  3351  0E67  00AB               	movwf	??_UpdateTimes+6
  3352  0E68  0A84               	incf	4,f
  3353  0E69  0800               	movf	0,w
  3354  0E6A  00AC               	movwf	??_UpdateTimes+7
  3355  0E6B  0832               	movf	UpdateTimes@i,w
  3356  0E6C  00AD               	movwf	??_UpdateTimes+8
  3357  0E6D  072D               	addwf	??_UpdateTimes+8,w
  3358  0E6E  072B               	addwf	??_UpdateTimes+6,w
  3359  0E6F  00AE               	movwf	??_UpdateTimes+9
  3360  0E70  082C               	movf	??_UpdateTimes+7,w
  3361  0E71  1803               	skipnc
  3362  0E72  3E01               	addlw	1
  3363  0E73  00AF               	movwf	??_UpdateTimes+10
  3364  0E74  082E               	movf	??_UpdateTimes+9,w
  3365  0E75  0084               	movwf	4
  3366  0E76  1783               	bsf	3,7
  3367  0E77  1C2F               	btfss	??_UpdateTimes+10,0
  3368  0E78  1383               	bcf	3,7
  3369  0E79  0827               	movf	??_UpdateTimes+2,w
  3370  0E7A  0080               	movwf	0
  3371  0E7B  0A84               	incf	4,f
  3372  0E7C  0828               	movf	??_UpdateTimes+3,w
  3373  0E7D  0080               	movwf	0
  3374  0E7E                     l2752:	
  3375                           
  3376                           ;./CustomLib/TrafficLight.h: 13:             }
  3377  0E7E  3001               	movlw	1
  3378  0E7F  00A5               	movwf	??_UpdateTimes
  3379  0E80  0825               	movf	??_UpdateTimes,w
  3380  0E81  07B2               	addwf	UpdateTimes@i,f
  3381  0E82                     l2754:	
  3382  0E82  3003               	movlw	3
  3383  0E83  0232               	subwf	UpdateTimes@i,w
  3384  0E84  1C03               	skipc
  3385  0E85  2E87               	goto	u2681
  3386  0E86  2E88               	goto	u2680
  3387  0E87                     u2681:	
  3388  0E87  2E51               	goto	l2750
  3389  0E88                     u2680:	
  3390  0E88                     l2756:	
  3391                           
  3392                           ;./CustomLib/TrafficLight.h: 15:     }
  3393  0E88  3001               	movlw	1
  3394  0E89  00A5               	movwf	??_UpdateTimes
  3395  0E8A  0825               	movf	??_UpdateTimes,w
  3396  0E8B  07B1               	addwf	UpdateTimes@l,f
  3397  0E8C                     l2758:	
  3398  0E8C  3010               	movlw	16
  3399  0E8D  0231               	subwf	UpdateTimes@l,w
  3400  0E8E  1C03               	skipc
  3401  0E8F  2E91               	goto	u2691
  3402  0E90  2E92               	goto	u2690
  3403  0E91                     u2691:	
  3404  0E91  2E46               	goto	l2742
  3405  0E92                     u2690:	
  3406  0E92                     l133:	
  3407  0E92  0008               	return
  3408  0E93                     __end_of_UpdateTimes:	
  3409                           
  3410                           	psect	text9
  3411  0DBC                     __ptext9:	
  3412 ;; *************** function _UART_Init *****************
  3413 ;; Defined at:
  3414 ;;		line 351 in file "debug.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  baudrate        2   19[BANK0 ] int 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3428 ;;      Params:         0       2       0       0       0
  3429 ;;      Locals:         0       0       0       0       0
  3430 ;;      Temps:          0       4       0       0       0
  3431 ;;      Totals:         0       6       0       0       0
  3432 ;;Total ram usage:        6 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    4
  3435 ;; This function calls:
  3436 ;;		___aldiv
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _UART_Init
  3444  0DBC                     _UART_Init:	
  3445  0DBC                     l2822:	
  3446                           ;incstack = 0
  3447                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3448                           
  3449                           
  3450                           ;debug.c: 351: void UART_Init(int baudrate);debug.c: 352: {;debug.c: 353:     TRISCbits.
      +                          TRISC6 = 0;
  3451  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  3452  0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  3453  0DBE  1307               	bcf	7,6	;volatile
  3454                           
  3455                           ;debug.c: 354:     TXSTAbits.TXEN = 1;
  3456  0DBF  1698               	bsf	24,5	;volatile
  3457                           
  3458                           ;debug.c: 355:     RCSTAbits.SPEN = 1;
  3459  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0DC2  1798               	bsf	24,7	;volatile
  3462                           
  3463                           ;debug.c: 356:     RCSTAbits.CREN = 1;
  3464  0DC3  1618               	bsf	24,4	;volatile
  3465  0DC4                     l2824:	
  3466                           
  3467                           ;debug.c: 357:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3468  0DC4  0833               	movf	UART_Init@baudrate,w
  3469  0DC5  00B5               	movwf	??_UART_Init
  3470  0DC6  0834               	movf	UART_Init@baudrate+1,w
  3471  0DC7  00B6               	movwf	??_UART_Init+1
  3472  0DC8  3000               	movlw	0
  3473  0DC9  1BB6               	btfsc	??_UART_Init+1,7
  3474  0DCA  30FF               	movlw	255
  3475  0DCB  00B7               	movwf	??_UART_Init+2
  3476  0DCC  00B8               	movwf	??_UART_Init+3
  3477  0DCD  3006               	movlw	6
  3478  0DCE                     u2755:	
  3479  0DCE  1003               	clrc
  3480  0DCF  0DB5               	rlf	??_UART_Init,f
  3481  0DD0  0DB6               	rlf	??_UART_Init+1,f
  3482  0DD1  0DB7               	rlf	??_UART_Init+2,f
  3483  0DD2  0DB8               	rlf	??_UART_Init+3,f
  3484  0DD3                     u2750:	
  3485  0DD3  3EFF               	addlw	-1
  3486  0DD4  1D03               	skipz
  3487  0DD5  2DCE               	goto	u2755
  3488  0DD6  0838               	movf	??_UART_Init+3,w
  3489  0DD7  00A7               	movwf	___aldiv@divisor+3
  3490  0DD8  0837               	movf	??_UART_Init+2,w
  3491  0DD9  00A6               	movwf	___aldiv@divisor+2
  3492  0DDA  0836               	movf	??_UART_Init+1,w
  3493  0DDB  00A5               	movwf	___aldiv@divisor+1
  3494  0DDC  0835               	movf	??_UART_Init,w
  3495  0DDD  00A4               	movwf	___aldiv@divisor
  3496  0DDE  3001               	movlw	1
  3497  0DDF  00AB               	movwf	___aldiv@dividend+3
  3498  0DE0  30E8               	movlw	232
  3499  0DE1  00AA               	movwf	___aldiv@dividend+2
  3500  0DE2  3048               	movlw	72
  3501  0DE3  00A9               	movwf	___aldiv@dividend+1
  3502  0DE4  3000               	movlw	0
  3503  0DE5  00A8               	movwf	___aldiv@dividend
  3504  0DE6  120A  118A  2620  120A  158A  	fcall	___aldiv
  3505  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0DED  0824               	movf	?___aldiv,w
  3508  0DEE  3EFF               	addlw	255
  3509  0DEF  1683               	bsf	3,5	;RP0=1, select bank1
  3510  0DF0  1303               	bcf	3,6	;RP1=0, select bank1
  3511  0DF1  0099               	movwf	25	;volatile
  3512  0DF2                     l2826:	
  3513                           
  3514                           ;debug.c: 358:     INTCONbits.GIE = 1;
  3515  0DF2  178B               	bsf	11,7	;volatile
  3516  0DF3                     l2828:	
  3517                           
  3518                           ;debug.c: 359:     INTCONbits.PEIE = 1;
  3519  0DF3  170B               	bsf	11,6	;volatile
  3520  0DF4                     l2830:	
  3521                           
  3522                           ;debug.c: 360:     PIE1bits.RCIE = 1;
  3523  0DF4  168C               	bsf	12,5	;volatile
  3524  0DF5                     l297:	
  3525  0DF5  0008               	return
  3526  0DF6                     __end_of_UART_Init:	
  3527                           
  3528                           	psect	text10
  3529  0620                     __ptext10:	
  3530 ;; *************** function ___aldiv *****************
  3531 ;; Defined at:
  3532 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  divisor         4    4[BANK0 ] long 
  3535 ;;  dividend        4    8[BANK0 ] long 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  quotient        4   15[BANK0 ] long 
  3538 ;;  sign            1   14[BANK0 ] unsigned char 
  3539 ;;  counter         1   13[BANK0 ] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  4    4[BANK0 ] long 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3549 ;;      Params:         0       8       0       0       0
  3550 ;;      Locals:         0       6       0       0       0
  3551 ;;      Temps:          0       1       0       0       0
  3552 ;;      Totals:         0      15       0       0       0
  3553 ;;Total ram usage:       15 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    3
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_UART_Init
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           
  3564                           ;psect for function ___aldiv
  3565  0620                     ___aldiv:	
  3566  0620                     l2604:	
  3567                           ;incstack = 0
  3568                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3569                           
  3570  0620  1283               	bcf	3,5	;RP0=0, select bank0
  3571  0621  1303               	bcf	3,6	;RP1=0, select bank0
  3572  0622  01AE               	clrf	___aldiv@sign
  3573  0623                     l2606:	
  3574  0623  1FA7               	btfss	___aldiv@divisor+3,7
  3575  0624  2E26               	goto	u2381
  3576  0625  2E27               	goto	u2380
  3577  0626                     u2381:	
  3578  0626  2E34               	goto	l499
  3579  0627                     u2380:	
  3580  0627                     l2608:	
  3581  0627  09A4               	comf	___aldiv@divisor,f
  3582  0628  09A5               	comf	___aldiv@divisor+1,f
  3583  0629  09A6               	comf	___aldiv@divisor+2,f
  3584  062A  09A7               	comf	___aldiv@divisor+3,f
  3585  062B  0AA4               	incf	___aldiv@divisor,f
  3586  062C  1903               	skipnz
  3587  062D  0AA5               	incf	___aldiv@divisor+1,f
  3588  062E  1903               	skipnz
  3589  062F  0AA6               	incf	___aldiv@divisor+2,f
  3590  0630  1903               	skipnz
  3591  0631  0AA7               	incf	___aldiv@divisor+3,f
  3592  0632  01AE               	clrf	___aldiv@sign
  3593  0633  0AAE               	incf	___aldiv@sign,f
  3594  0634                     l499:	
  3595  0634  1FAB               	btfss	___aldiv@dividend+3,7
  3596  0635  2E37               	goto	u2391
  3597  0636  2E38               	goto	u2390
  3598  0637                     u2391:	
  3599  0637  2E47               	goto	l2614
  3600  0638                     u2390:	
  3601  0638                     l2610:	
  3602  0638  09A8               	comf	___aldiv@dividend,f
  3603  0639  09A9               	comf	___aldiv@dividend+1,f
  3604  063A  09AA               	comf	___aldiv@dividend+2,f
  3605  063B  09AB               	comf	___aldiv@dividend+3,f
  3606  063C  0AA8               	incf	___aldiv@dividend,f
  3607  063D  1903               	skipnz
  3608  063E  0AA9               	incf	___aldiv@dividend+1,f
  3609  063F  1903               	skipnz
  3610  0640  0AAA               	incf	___aldiv@dividend+2,f
  3611  0641  1903               	skipnz
  3612  0642  0AAB               	incf	___aldiv@dividend+3,f
  3613  0643                     l2612:	
  3614  0643  3001               	movlw	1
  3615  0644  00AC               	movwf	??___aldiv
  3616  0645  082C               	movf	??___aldiv,w
  3617  0646  06AE               	xorwf	___aldiv@sign,f
  3618  0647                     l2614:	
  3619  0647  3000               	movlw	0
  3620  0648  00B2               	movwf	___aldiv@quotient+3
  3621  0649  3000               	movlw	0
  3622  064A  00B1               	movwf	___aldiv@quotient+2
  3623  064B  3000               	movlw	0
  3624  064C  00B0               	movwf	___aldiv@quotient+1
  3625  064D  3000               	movlw	0
  3626  064E  00AF               	movwf	___aldiv@quotient
  3627  064F                     l2616:	
  3628  064F  0827               	movf	___aldiv@divisor+3,w
  3629  0650  0426               	iorwf	___aldiv@divisor+2,w
  3630  0651  0425               	iorwf	___aldiv@divisor+1,w
  3631  0652  0424               	iorwf	___aldiv@divisor,w
  3632  0653  1903               	skipnz
  3633  0654  2E56               	goto	u2401
  3634  0655  2E57               	goto	u2400
  3635  0656                     u2401:	
  3636  0656  2EA4               	goto	l2636
  3637  0657                     u2400:	
  3638  0657                     l2618:	
  3639  0657  01AD               	clrf	___aldiv@counter
  3640  0658  0AAD               	incf	___aldiv@counter,f
  3641  0659  2E67               	goto	l2622
  3642  065A                     l2620:	
  3643  065A  3001               	movlw	1
  3644  065B  00AC               	movwf	??___aldiv
  3645  065C                     u2415:	
  3646  065C  1003               	clrc
  3647  065D  0DA4               	rlf	___aldiv@divisor,f
  3648  065E  0DA5               	rlf	___aldiv@divisor+1,f
  3649  065F  0DA6               	rlf	___aldiv@divisor+2,f
  3650  0660  0DA7               	rlf	___aldiv@divisor+3,f
  3651  0661  0BAC               	decfsz	??___aldiv,f
  3652  0662  2E5C               	goto	u2415
  3653  0663  3001               	movlw	1
  3654  0664  00AC               	movwf	??___aldiv
  3655  0665  082C               	movf	??___aldiv,w
  3656  0666  07AD               	addwf	___aldiv@counter,f
  3657  0667                     l2622:	
  3658  0667  1FA7               	btfss	___aldiv@divisor+3,7
  3659  0668  2E6A               	goto	u2421
  3660  0669  2E6B               	goto	u2420
  3661  066A                     u2421:	
  3662  066A  2E5A               	goto	l2620
  3663  066B                     u2420:	
  3664  066B                     l2624:	
  3665  066B  3001               	movlw	1
  3666  066C  00AC               	movwf	??___aldiv
  3667  066D                     u2435:	
  3668  066D  1003               	clrc
  3669  066E  0DAF               	rlf	___aldiv@quotient,f
  3670  066F  0DB0               	rlf	___aldiv@quotient+1,f
  3671  0670  0DB1               	rlf	___aldiv@quotient+2,f
  3672  0671  0DB2               	rlf	___aldiv@quotient+3,f
  3673  0672  0BAC               	decfsz	??___aldiv,f
  3674  0673  2E6D               	goto	u2435
  3675  0674                     l2626:	
  3676  0674  0827               	movf	___aldiv@divisor+3,w
  3677  0675  022B               	subwf	___aldiv@dividend+3,w
  3678  0676  1D03               	skipz
  3679  0677  2E82               	goto	u2445
  3680  0678  0826               	movf	___aldiv@divisor+2,w
  3681  0679  022A               	subwf	___aldiv@dividend+2,w
  3682  067A  1D03               	skipz
  3683  067B  2E82               	goto	u2445
  3684  067C  0825               	movf	___aldiv@divisor+1,w
  3685  067D  0229               	subwf	___aldiv@dividend+1,w
  3686  067E  1D03               	skipz
  3687  067F  2E82               	goto	u2445
  3688  0680  0824               	movf	___aldiv@divisor,w
  3689  0681  0228               	subwf	___aldiv@dividend,w
  3690  0682                     u2445:	
  3691  0682  1C03               	skipc
  3692  0683  2E85               	goto	u2441
  3693  0684  2E86               	goto	u2440
  3694  0685                     u2441:	
  3695  0685  2E95               	goto	l2632
  3696  0686                     u2440:	
  3697  0686                     l2628:	
  3698  0686  0824               	movf	___aldiv@divisor,w
  3699  0687  02A8               	subwf	___aldiv@dividend,f
  3700  0688  0825               	movf	___aldiv@divisor+1,w
  3701  0689  1C03               	skipc
  3702  068A  0F25               	incfsz	___aldiv@divisor+1,w
  3703  068B  02A9               	subwf	___aldiv@dividend+1,f
  3704  068C  0826               	movf	___aldiv@divisor+2,w
  3705  068D  1C03               	skipc
  3706  068E  0F26               	incfsz	___aldiv@divisor+2,w
  3707  068F  02AA               	subwf	___aldiv@dividend+2,f
  3708  0690  0827               	movf	___aldiv@divisor+3,w
  3709  0691  1C03               	skipc
  3710  0692  0F27               	incfsz	___aldiv@divisor+3,w
  3711  0693  02AB               	subwf	___aldiv@dividend+3,f
  3712  0694                     l2630:	
  3713  0694  142F               	bsf	___aldiv@quotient,0
  3714  0695                     l2632:	
  3715  0695  3001               	movlw	1
  3716  0696                     u2455:	
  3717  0696  1003               	clrc
  3718  0697  0CA7               	rrf	___aldiv@divisor+3,f
  3719  0698  0CA6               	rrf	___aldiv@divisor+2,f
  3720  0699  0CA5               	rrf	___aldiv@divisor+1,f
  3721  069A  0CA4               	rrf	___aldiv@divisor,f
  3722  069B  3EFF               	addlw	-1
  3723  069C  1D03               	skipz
  3724  069D  2E96               	goto	u2455
  3725  069E                     l2634:	
  3726  069E  3001               	movlw	1
  3727  069F  02AD               	subwf	___aldiv@counter,f
  3728  06A0  1D03               	btfss	3,2
  3729  06A1  2EA3               	goto	u2461
  3730  06A2  2EA4               	goto	u2460
  3731  06A3                     u2461:	
  3732  06A3  2E6B               	goto	l2624
  3733  06A4                     u2460:	
  3734  06A4                     l2636:	
  3735  06A4  082E               	movf	___aldiv@sign,w
  3736  06A5  1903               	btfsc	3,2
  3737  06A6  2EA8               	goto	u2471
  3738  06A7  2EA9               	goto	u2470
  3739  06A8                     u2471:	
  3740  06A8  2EB4               	goto	l2640
  3741  06A9                     u2470:	
  3742  06A9                     l2638:	
  3743  06A9  09AF               	comf	___aldiv@quotient,f
  3744  06AA  09B0               	comf	___aldiv@quotient+1,f
  3745  06AB  09B1               	comf	___aldiv@quotient+2,f
  3746  06AC  09B2               	comf	___aldiv@quotient+3,f
  3747  06AD  0AAF               	incf	___aldiv@quotient,f
  3748  06AE  1903               	skipnz
  3749  06AF  0AB0               	incf	___aldiv@quotient+1,f
  3750  06B0  1903               	skipnz
  3751  06B1  0AB1               	incf	___aldiv@quotient+2,f
  3752  06B2  1903               	skipnz
  3753  06B3  0AB2               	incf	___aldiv@quotient+3,f
  3754  06B4                     l2640:	
  3755  06B4  0832               	movf	___aldiv@quotient+3,w
  3756  06B5  00A7               	movwf	?___aldiv+3
  3757  06B6  0831               	movf	___aldiv@quotient+2,w
  3758  06B7  00A6               	movwf	?___aldiv+2
  3759  06B8  0830               	movf	___aldiv@quotient+1,w
  3760  06B9  00A5               	movwf	?___aldiv+1
  3761  06BA  082F               	movf	___aldiv@quotient,w
  3762  06BB  00A4               	movwf	?___aldiv
  3763  06BC                     l509:	
  3764  06BC  0008               	return
  3765  06BD                     __end_of___aldiv:	
  3766                           
  3767                           	psect	text11
  3768  0CBD                     __ptext11:	
  3769 ;; *************** function _SetDisplay *****************
  3770 ;; Defined at:
  3771 ;;		line 399 in file "debug.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  d1              1    wreg     unsigned char 
  3774 ;;  d2              1    4[BANK0 ] unsigned char 
  3775 ;;  d3              1    5[BANK0 ] unsigned char 
  3776 ;;  value           1    6[BANK0 ] unsigned char 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  d1              1    7[BANK0 ] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3788 ;;      Params:         0       3       0       0       0
  3789 ;;      Locals:         0       1       0       0       0
  3790 ;;      Temps:          0       0       0       0       0
  3791 ;;      Totals:         0       4       0       0       0
  3792 ;;Total ram usage:        4 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    3
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function _SetDisplay
  3804  0CBD                     _SetDisplay:	
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in _SetDisplay: [wreg+status,0]
  3808                           ;SetDisplay@d1 stored from wreg
  3809  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0CBF  00A7               	movwf	SetDisplay@d1
  3812  0CC0                     l2858:	
  3813                           
  3814                           ;debug.c: 399: void SetDisplay(char d1, char d2, char d3, char value);debug.c: 400: {;de
      +                          bug.c: 401:     PORTAbits.RA2 = d1;
  3815  0CC0  0C27               	rrf	SetDisplay@d1,w
  3816  0CC1  1C03               	skipc
  3817  0CC2  1105               	bcf	5,2	;volatile
  3818  0CC3  1803               	skipnc
  3819  0CC4  1505               	bsf	5,2	;volatile
  3820                           
  3821                           ;debug.c: 402:     PORTAbits.RA3 = d2;
  3822  0CC5  0C24               	rrf	SetDisplay@d2,w
  3823  0CC6  1C03               	skipc
  3824  0CC7  1185               	bcf	5,3	;volatile
  3825  0CC8  1803               	skipnc
  3826  0CC9  1585               	bsf	5,3	;volatile
  3827                           
  3828                           ;debug.c: 403:     PORTAbits.RA4 = d3;
  3829  0CCA  0C25               	rrf	SetDisplay@d3,w
  3830  0CCB  1C03               	skipc
  3831  0CCC  1205               	bcf	5,4	;volatile
  3832  0CCD  1803               	skipnc
  3833  0CCE  1605               	bsf	5,4	;volatile
  3834  0CCF                     l2860:	
  3835                           
  3836                           ;debug.c: 404:     PORTD = value;
  3837  0CCF  0826               	movf	SetDisplay@value,w
  3838  0CD0  0088               	movwf	8	;volatile
  3839  0CD1                     l323:	
  3840  0CD1  0008               	return
  3841  0CD2                     __end_of_SetDisplay:	
  3842                           
  3843                           	psect	text12
  3844  06BD                     __ptext12:	
  3845 ;; *************** function _SetDefaultTimers *****************
  3846 ;; Defined at:
  3847 ;;		line 52 in file "./CustomLib/TrafficLight.h"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  rosso           2    4[BANK0 ] int 
  3850 ;;  verde           2    6[BANK0 ] int 
  3851 ;;  giallo          2    8[BANK0 ] int 
  3852 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  3853 ;;		 -> Semafori(32), 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  i               1   19[BANK0 ] unsigned char 
  3856 ;;  l               1   18[BANK0 ] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3866 ;;      Params:         0       7       0       0       0
  3867 ;;      Locals:         0       2       0       0       0
  3868 ;;      Temps:          0       7       0       0       0
  3869 ;;      Totals:         0      16       0       0       0
  3870 ;;Total ram usage:       16 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    3
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           
  3881                           ;psect for function _SetDefaultTimers
  3882  06BD                     _SetDefaultTimers:	
  3883  06BD                     l2780:	
  3884                           ;incstack = 0
  3885                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  3886                           
  3887                           
  3888                           ;./CustomLib/TrafficLight.h: 52: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 53: {;./CustomLib/TrafficLight.h: 54: 
      +                              for (unsigned char l = 0; l < 16; l++)
  3889  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  3890  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  3891  06BF  01B2               	clrf	SetDefaultTimers@l
  3892  06C0                     l2786:	
  3893                           
  3894                           ;./CustomLib/TrafficLight.h: 55:     {;./CustomLib/TrafficLight.h: 56:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  3895  06C0  01B3               	clrf	SetDefaultTimers@i
  3896  06C1  2F25               	goto	l2800
  3897  06C2                     l2792:	
  3898                           
  3899                           ;./CustomLib/TrafficLight.h: 61:                 (*(_semafori)[l]).times[i] = rosso;
  3900  06C2  0832               	movf	SetDefaultTimers@l,w
  3901  06C3  00AB               	movwf	??_SetDefaultTimers
  3902  06C4  072B               	addwf	??_SetDefaultTimers,w
  3903  06C5  072A               	addwf	SetDefaultTimers@_semafori,w
  3904  06C6  00AC               	movwf	??_SetDefaultTimers+1
  3905  06C7  082C               	movf	??_SetDefaultTimers+1,w
  3906  06C8  0084               	movwf	4
  3907  06C9  1783               	bsf	3,7	;select IRP bank2
  3908  06CA  0800               	movf	0,w
  3909  06CB  00AD               	movwf	??_SetDefaultTimers+2
  3910  06CC  0A84               	incf	4,f
  3911  06CD  0800               	movf	0,w
  3912  06CE  00AE               	movwf	??_SetDefaultTimers+3
  3913  06CF  0833               	movf	SetDefaultTimers@i,w
  3914  06D0  00AF               	movwf	??_SetDefaultTimers+4
  3915  06D1  072F               	addwf	??_SetDefaultTimers+4,w
  3916  06D2  072D               	addwf	??_SetDefaultTimers+2,w
  3917  06D3  00B0               	movwf	??_SetDefaultTimers+5
  3918  06D4  082E               	movf	??_SetDefaultTimers+3,w
  3919  06D5  1803               	skipnc
  3920  06D6  3E01               	addlw	1
  3921  06D7  00B1               	movwf	??_SetDefaultTimers+6
  3922  06D8  0830               	movf	??_SetDefaultTimers+5,w
  3923  06D9  0084               	movwf	4
  3924  06DA  1783               	bsf	3,7
  3925  06DB  1C31               	btfss	??_SetDefaultTimers+6,0
  3926  06DC  1383               	bcf	3,7
  3927  06DD  0824               	movf	SetDefaultTimers@rosso,w
  3928  06DE  0080               	movwf	0
  3929  06DF  0A84               	incf	4,f
  3930  06E0  0825               	movf	SetDefaultTimers@rosso+1,w
  3931  06E1  0080               	movwf	0
  3932                           
  3933                           ;./CustomLib/TrafficLight.h: 62:                 break;
  3934  06E2  2F38               	goto	l2802
  3935  06E3                     l2794:	
  3936                           
  3937                           ;./CustomLib/TrafficLight.h: 64:                 (*(_semafori)[l]).times[i] = verde;
  3938  06E3  0832               	movf	SetDefaultTimers@l,w
  3939  06E4  00AB               	movwf	??_SetDefaultTimers
  3940  06E5  072B               	addwf	??_SetDefaultTimers,w
  3941  06E6  072A               	addwf	SetDefaultTimers@_semafori,w
  3942  06E7  00AC               	movwf	??_SetDefaultTimers+1
  3943  06E8  082C               	movf	??_SetDefaultTimers+1,w
  3944  06E9  0084               	movwf	4
  3945  06EA  1783               	bsf	3,7	;select IRP bank2
  3946  06EB  0800               	movf	0,w
  3947  06EC  00AD               	movwf	??_SetDefaultTimers+2
  3948  06ED  0A84               	incf	4,f
  3949  06EE  0800               	movf	0,w
  3950  06EF  00AE               	movwf	??_SetDefaultTimers+3
  3951  06F0  0833               	movf	SetDefaultTimers@i,w
  3952  06F1  00AF               	movwf	??_SetDefaultTimers+4
  3953  06F2  072F               	addwf	??_SetDefaultTimers+4,w
  3954  06F3  072D               	addwf	??_SetDefaultTimers+2,w
  3955  06F4  00B0               	movwf	??_SetDefaultTimers+5
  3956  06F5  082E               	movf	??_SetDefaultTimers+3,w
  3957  06F6  1803               	skipnc
  3958  06F7  3E01               	addlw	1
  3959  06F8  00B1               	movwf	??_SetDefaultTimers+6
  3960  06F9  0830               	movf	??_SetDefaultTimers+5,w
  3961  06FA  0084               	movwf	4
  3962  06FB  1783               	bsf	3,7
  3963  06FC  1C31               	btfss	??_SetDefaultTimers+6,0
  3964  06FD  1383               	bcf	3,7
  3965  06FE  0826               	movf	SetDefaultTimers@verde,w
  3966  06FF  0080               	movwf	0
  3967  0700  0A84               	incf	4,f
  3968  0701  0827               	movf	SetDefaultTimers@verde+1,w
  3969  0702  0080               	movwf	0
  3970                           
  3971                           ;./CustomLib/TrafficLight.h: 65:                 break;
  3972  0703  2F38               	goto	l2802
  3973  0704                     l2796:	
  3974                           
  3975                           ;./CustomLib/TrafficLight.h: 67:                 (*(_semafori)[l]).times[i] = giallo;
  3976  0704  0832               	movf	SetDefaultTimers@l,w
  3977  0705  00AB               	movwf	??_SetDefaultTimers
  3978  0706  072B               	addwf	??_SetDefaultTimers,w
  3979  0707  072A               	addwf	SetDefaultTimers@_semafori,w
  3980  0708  00AC               	movwf	??_SetDefaultTimers+1
  3981  0709  082C               	movf	??_SetDefaultTimers+1,w
  3982  070A  0084               	movwf	4
  3983  070B  1783               	bsf	3,7	;select IRP bank2
  3984  070C  0800               	movf	0,w
  3985  070D  00AD               	movwf	??_SetDefaultTimers+2
  3986  070E  0A84               	incf	4,f
  3987  070F  0800               	movf	0,w
  3988  0710  00AE               	movwf	??_SetDefaultTimers+3
  3989  0711  0833               	movf	SetDefaultTimers@i,w
  3990  0712  00AF               	movwf	??_SetDefaultTimers+4
  3991  0713  072F               	addwf	??_SetDefaultTimers+4,w
  3992  0714  072D               	addwf	??_SetDefaultTimers+2,w
  3993  0715  00B0               	movwf	??_SetDefaultTimers+5
  3994  0716  082E               	movf	??_SetDefaultTimers+3,w
  3995  0717  1803               	skipnc
  3996  0718  3E01               	addlw	1
  3997  0719  00B1               	movwf	??_SetDefaultTimers+6
  3998  071A  0830               	movf	??_SetDefaultTimers+5,w
  3999  071B  0084               	movwf	4
  4000  071C  1783               	bsf	3,7
  4001  071D  1C31               	btfss	??_SetDefaultTimers+6,0
  4002  071E  1383               	bcf	3,7
  4003  071F  0828               	movf	SetDefaultTimers@giallo,w
  4004  0720  0080               	movwf	0
  4005  0721  0A84               	incf	4,f
  4006  0722  0829               	movf	SetDefaultTimers@giallo+1,w
  4007  0723  0080               	movwf	0
  4008                           
  4009                           ;./CustomLib/TrafficLight.h: 68:                 break;
  4010  0724  2F38               	goto	l2802
  4011  0725                     l2800:	
  4012  0725  0833               	movf	SetDefaultTimers@i,w
  4013  0726  00AB               	movwf	??_SetDefaultTimers
  4014  0727  01AC               	clrf	??_SetDefaultTimers+1
  4015                           
  4016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4017                           ; Switch size 1, requested type "simple"
  4018                           ; Number of cases is 1, Range of values is 0 to 0
  4019                           ; switch strategies available:
  4020                           ; Name         Instructions Cycles
  4021                           ; simple_byte            4     3 (average)
  4022                           ; direct_byte           11     8 (fixed)
  4023                           ; jumptable            260     6 (fixed)
  4024                           ;	Chosen strategy is simple_byte
  4025  0728  082C               	movf	??_SetDefaultTimers+1,w
  4026  0729  3A00               	xorlw	0	; case 0
  4027  072A  1903               	skipnz
  4028  072B  2F2D               	goto	l3178
  4029  072C  2F38               	goto	l2802
  4030  072D                     l3178:	
  4031                           
  4032                           ; Switch size 1, requested type "simple"
  4033                           ; Number of cases is 3, Range of values is 0 to 2
  4034                           ; switch strategies available:
  4035                           ; Name         Instructions Cycles
  4036                           ; simple_byte           10     6 (average)
  4037                           ; direct_byte           17     8 (fixed)
  4038                           ; jumptable            260     6 (fixed)
  4039                           ;	Chosen strategy is simple_byte
  4040  072D  082B               	movf	??_SetDefaultTimers,w
  4041  072E  3A00               	xorlw	0	; case 0
  4042  072F  1903               	skipnz
  4043  0730  2EC2               	goto	l2792
  4044  0731  3A01               	xorlw	1	; case 1
  4045  0732  1903               	skipnz
  4046  0733  2EE3               	goto	l2794
  4047  0734  3A03               	xorlw	3	; case 2
  4048  0735  1903               	skipnz
  4049  0736  2F04               	goto	l2796
  4050  0737  2F38               	goto	l2802
  4051  0738                     l2802:	
  4052                           
  4053                           ;./CustomLib/TrafficLight.h: 70:         }
  4054  0738  3001               	movlw	1
  4055  0739  00AB               	movwf	??_SetDefaultTimers
  4056  073A  082B               	movf	??_SetDefaultTimers,w
  4057  073B  07B3               	addwf	SetDefaultTimers@i,f
  4058  073C                     l2804:	
  4059  073C  3003               	movlw	3
  4060  073D  0233               	subwf	SetDefaultTimers@i,w
  4061  073E  1C03               	skipc
  4062  073F  2F41               	goto	u2731
  4063  0740  2F42               	goto	u2730
  4064  0741                     u2731:	
  4065  0741  2F25               	goto	l2800
  4066  0742                     u2730:	
  4067  0742                     l2806:	
  4068                           
  4069                           ;./CustomLib/TrafficLight.h: 71:     }
  4070  0742  3001               	movlw	1
  4071  0743  00AB               	movwf	??_SetDefaultTimers
  4072  0744  082B               	movf	??_SetDefaultTimers,w
  4073  0745  07B2               	addwf	SetDefaultTimers@l,f
  4074  0746                     l2808:	
  4075  0746  3010               	movlw	16
  4076  0747  0232               	subwf	SetDefaultTimers@l,w
  4077  0748  1C03               	skipc
  4078  0749  2F4B               	goto	u2741
  4079  074A  2F4C               	goto	u2740
  4080  074B                     u2741:	
  4081  074B  2EC0               	goto	l2786
  4082  074C                     u2740:	
  4083  074C                     l155:	
  4084  074C  0008               	return
  4085  074D                     __end_of_SetDefaultTimers:	
  4086                           
  4087                           	psect	text13
  4088  07B6                     __ptext13:	
  4089 ;; *************** function _GetTime *****************
  4090 ;; Defined at:
  4091 ;;		line 32 in file "./CustomLib/TrafficLight.h"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  index           1    wreg     unsigned char 
  4094 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4095 ;;		 -> dataFromGateway(15), 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  index           1    8[BANK0 ] unsigned char 
  4098 ;;  tmp             2   10[BANK0 ] int 
  4099 ;;  shortInt        1    9[BANK0 ] struct .
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  2    4[BANK0 ] int 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4109 ;;      Params:         0       2       0       0       0
  4110 ;;      Locals:         0       4       0       0       0
  4111 ;;      Temps:          0       2       0       0       0
  4112 ;;      Totals:         0       8       0       0       0
  4113 ;;Total ram usage:        8 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    3
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           
  4124                           ;psect for function _GetTime
  4125  07B6                     _GetTime:	
  4126                           
  4127                           ;incstack = 0
  4128                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4129                           ;GetTime@index stored from wreg
  4130  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  4131  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  4132  07B8  00A8               	movwf	GetTime@index
  4133  07B9                     l2766:	
  4134                           
  4135                           ;./CustomLib/TrafficLight.h: 32: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 33: {;./CustomLib/TrafficLight.h: 34:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 38:     } shortInt;;./CustomLib/TrafficLight.h: 40:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4136  07B9  0828               	movf	GetTime@index,w
  4137  07BA  0724               	addwf	GetTime@_dataFromGateway,w
  4138  07BB  00A6               	movwf	??_GetTime
  4139  07BC  0826               	movf	??_GetTime,w
  4140  07BD  3E03               	addlw	3
  4141  07BE  0084               	movwf	4
  4142  07BF  307F               	movlw	127
  4143  07C0  1783               	bsf	3,7	;select IRP bank2
  4144  07C1  0500               	andwf	0,w
  4145  07C2  00A7               	movwf	??_GetTime+1
  4146  07C3  0829               	movf	GetTime@shortInt,w
  4147  07C4  0627               	xorwf	??_GetTime+1,w
  4148  07C5  3980               	andlw	-128
  4149  07C6  0627               	xorwf	??_GetTime+1,w
  4150  07C7  00A9               	movwf	GetTime@shortInt
  4151  07C8                     l2768:	
  4152                           
  4153                           ;./CustomLib/TrafficLight.h: 41:     tmp = shortInt.Val;
  4154  07C8  0829               	movf	GetTime@shortInt,w
  4155  07C9  397F               	andlw	127
  4156  07CA  00A6               	movwf	??_GetTime
  4157  07CB  01A7               	clrf	??_GetTime+1
  4158  07CC  0826               	movf	??_GetTime,w
  4159  07CD  00AA               	movwf	GetTime@tmp
  4160  07CE  0827               	movf	??_GetTime+1,w
  4161  07CF  00AB               	movwf	GetTime@tmp+1
  4162  07D0                     l2770:	
  4163                           
  4164                           ;./CustomLib/TrafficLight.h: 42:     tmp = (tmp << 7) & 0x80;
  4165  07D0  082B               	movf	GetTime@tmp+1,w
  4166  07D1  00A7               	movwf	??_GetTime+1
  4167  07D2  082A               	movf	GetTime@tmp,w
  4168  07D3  00A6               	movwf	??_GetTime
  4169  07D4  3007               	movlw	7
  4170  07D5  00FF               	movwf	btemp+1
  4171  07D6                     u2725:	
  4172  07D6  1003               	clrc
  4173  07D7  0DA6               	rlf	??_GetTime,f
  4174  07D8  0DA7               	rlf	??_GetTime+1,f
  4175  07D9  0BFF               	decfsz	btemp+1,f
  4176  07DA  2FD6               	goto	u2725
  4177  07DB  3080               	movlw	128
  4178  07DC  0526               	andwf	??_GetTime,w
  4179  07DD  00AA               	movwf	GetTime@tmp
  4180  07DE  3000               	movlw	0
  4181  07DF  0527               	andwf	??_GetTime+1,w
  4182  07E0  00AB               	movwf	GetTime@tmp+1
  4183  07E1                     l2772:	
  4184                           
  4185                           ;./CustomLib/TrafficLight.h: 44:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4186  07E1  0828               	movf	GetTime@index,w
  4187  07E2  0724               	addwf	GetTime@_dataFromGateway,w
  4188  07E3  00A6               	movwf	??_GetTime
  4189  07E4  0826               	movf	??_GetTime,w
  4190  07E5  3E02               	addlw	2
  4191  07E6  0084               	movwf	4
  4192  07E7  307F               	movlw	127
  4193  07E8  0500               	andwf	0,w
  4194  07E9  00A7               	movwf	??_GetTime+1
  4195  07EA  0829               	movf	GetTime@shortInt,w
  4196  07EB  0627               	xorwf	??_GetTime+1,w
  4197  07EC  3980               	andlw	-128
  4198  07ED  0627               	xorwf	??_GetTime+1,w
  4199  07EE  00A9               	movwf	GetTime@shortInt
  4200  07EF                     l2774:	
  4201                           
  4202                           ;./CustomLib/TrafficLight.h: 45:     tmp = tmp | shortInt.Val;
  4203  07EF  0829               	movf	GetTime@shortInt,w
  4204  07F0  397F               	andlw	127
  4205  07F1  00A6               	movwf	??_GetTime
  4206  07F2  082A               	movf	GetTime@tmp,w
  4207  07F3  0426               	iorwf	??_GetTime,w
  4208  07F4  00AA               	movwf	GetTime@tmp
  4209  07F5  082B               	movf	GetTime@tmp+1,w
  4210  07F6  00AB               	movwf	GetTime@tmp+1
  4211  07F7                     l2776:	
  4212                           
  4213                           ;./CustomLib/TrafficLight.h: 47:     return tmp;
  4214  07F7  082B               	movf	GetTime@tmp+1,w
  4215  07F8  00A5               	movwf	?_GetTime+1
  4216  07F9  082A               	movf	GetTime@tmp,w
  4217  07FA  00A4               	movwf	?_GetTime
  4218  07FB                     l143:	
  4219  07FB  0008               	return
  4220  07FC                     __end_of_GetTime:	
  4221                           
  4222                           	psect	text14
  4223  0F98                     __ptext14:	
  4224 ;; *************** function _GetDigits *****************
  4225 ;; Defined at:
  4226 ;;		line 29 in file "./CustomLib/Conversions.h"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  centinaia       1    wreg     PTR unsigned char 
  4229 ;;		 -> centinaia(1), 
  4230 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  4231 ;;		 -> decine(1), 
  4232 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  4233 ;;		 -> unita(1), 
  4234 ;;  Time            2   22[BANK0 ] int 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  4237 ;;		 -> centinaia(1), 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4247 ;;      Params:         0       4       0       0       0
  4248 ;;      Locals:         0       3       0       0       0
  4249 ;;      Temps:          0       1       0       0       0
  4250 ;;      Totals:         0       8       0       0       0
  4251 ;;Total ram usage:        8 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    4
  4254 ;; This function calls:
  4255 ;;		___awdiv
  4256 ;;		___awmod
  4257 ;; This function is called by:
  4258 ;;		_main
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _GetDigits
  4264  0F98                     _GetDigits:	
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4268                           ;GetDigits@centinaia stored from wreg
  4269  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0F9A  00BB               	movwf	GetDigits@centinaia
  4272  0F9B                     l2730:	
  4273                           
  4274                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     *centinaia = Time / 100;
  4275  0F9B  3064               	movlw	100
  4276  0F9C  00AB               	movwf	___awdiv@divisor
  4277  0F9D  3000               	movlw	0
  4278  0F9E  00AC               	movwf	___awdiv@divisor+1
  4279  0F9F  0837               	movf	GetDigits@Time+1,w
  4280  0FA0  00AE               	movwf	___awdiv@dividend+1
  4281  0FA1  0836               	movf	GetDigits@Time,w
  4282  0FA2  00AD               	movwf	___awdiv@dividend
  4283  0FA3  120A  118A  274D  120A  158A  	fcall	___awdiv
  4284  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  4286  0FAA  082B               	movf	?___awdiv,w
  4287  0FAB  00B8               	movwf	??_GetDigits
  4288  0FAC  083B               	movf	GetDigits@centinaia,w
  4289  0FAD  0084               	movwf	4
  4290  0FAE  0838               	movf	??_GetDigits,w
  4291  0FAF  1383               	bcf	3,7	;select IRP bank0
  4292  0FB0  0080               	movwf	0
  4293                           
  4294                           ;./CustomLib/Conversions.h: 32:     *decine = (Time % 100) / 10;
  4295  0FB1  300A               	movlw	10
  4296  0FB2  00AB               	movwf	___awdiv@divisor
  4297  0FB3  3000               	movlw	0
  4298  0FB4  00AC               	movwf	___awdiv@divisor+1
  4299  0FB5  0837               	movf	GetDigits@Time+1,w
  4300  0FB6  00A7               	movwf	___awmod@dividend+1
  4301  0FB7  0836               	movf	GetDigits@Time,w
  4302  0FB8  00A6               	movwf	___awmod@dividend
  4303  0FB9  3064               	movlw	100
  4304  0FBA  00A4               	movwf	___awmod@divisor
  4305  0FBB  3000               	movlw	0
  4306  0FBC  00A5               	movwf	___awmod@divisor+1
  4307  0FBD  120A  158A  273D  120A  158A  	fcall	___awmod
  4308  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4309  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4310  0FC4  0825               	movf	?___awmod+1,w
  4311  0FC5  00AE               	movwf	___awdiv@dividend+1
  4312  0FC6  0824               	movf	?___awmod,w
  4313  0FC7  00AD               	movwf	___awdiv@dividend
  4314  0FC8  120A  118A  274D  120A  158A  	fcall	___awdiv
  4315  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  4317  0FCF  082B               	movf	?___awdiv,w
  4318  0FD0  00B8               	movwf	??_GetDigits
  4319  0FD1  0834               	movf	GetDigits@decine,w
  4320  0FD2  0084               	movwf	4
  4321  0FD3  0838               	movf	??_GetDigits,w
  4322  0FD4  1383               	bcf	3,7	;select IRP bank0
  4323  0FD5  0080               	movwf	0
  4324  0FD6                     l2732:	
  4325                           
  4326                           ;./CustomLib/Conversions.h: 33:     *unita = (Time % 100) % 10;
  4327  0FD6  0837               	movf	GetDigits@Time+1,w
  4328  0FD7  00A7               	movwf	___awmod@dividend+1
  4329  0FD8  0836               	movf	GetDigits@Time,w
  4330  0FD9  00A6               	movwf	___awmod@dividend
  4331  0FDA  3064               	movlw	100
  4332  0FDB  00A4               	movwf	___awmod@divisor
  4333  0FDC  3000               	movlw	0
  4334  0FDD  00A5               	movwf	___awmod@divisor+1
  4335  0FDE  120A  158A  273D  120A  158A  	fcall	___awmod
  4336  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0FE5  0825               	movf	?___awmod+1,w
  4339  0FE6  00BA               	movwf	_GetDigits$1159+1
  4340  0FE7  0824               	movf	?___awmod,w
  4341  0FE8  00B9               	movwf	_GetDigits$1159
  4342  0FE9                     l2734:	
  4343                           
  4344                           ;./CustomLib/Conversions.h: 33:     *unita = (Time % 100) % 10;
  4345  0FE9  300A               	movlw	10
  4346  0FEA  00A4               	movwf	___awmod@divisor
  4347  0FEB  3000               	movlw	0
  4348  0FEC  00A5               	movwf	___awmod@divisor+1
  4349  0FED  083A               	movf	_GetDigits$1159+1,w
  4350  0FEE  00A7               	movwf	___awmod@dividend+1
  4351  0FEF  0839               	movf	_GetDigits$1159,w
  4352  0FF0  00A6               	movwf	___awmod@dividend
  4353  0FF1  120A  158A  273D  120A  158A  	fcall	___awmod
  4354  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0FF8  0824               	movf	?___awmod,w
  4357  0FF9  00B8               	movwf	??_GetDigits
  4358  0FFA  0835               	movf	GetDigits@unita,w
  4359  0FFB  0084               	movwf	4
  4360  0FFC  0838               	movf	??_GetDigits,w
  4361  0FFD  1383               	bcf	3,7	;select IRP bank0
  4362  0FFE  0080               	movwf	0
  4363  0FFF                     l91:	
  4364  0FFF  0008               	return
  4365  1000                     __end_of_GetDigits:	
  4366                           
  4367                           	psect	text15
  4368  074D                     __ptext15:	
  4369 ;; *************** function ___awdiv *****************
  4370 ;; Defined at:
  4371 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  divisor         2   11[BANK0 ] int 
  4374 ;;  dividend        2   13[BANK0 ] int 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  quotient        2   18[BANK0 ] int 
  4377 ;;  sign            1   17[BANK0 ] unsigned char 
  4378 ;;  counter         1   16[BANK0 ] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2   11[BANK0 ] int 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4388 ;;      Params:         0       4       0       0       0
  4389 ;;      Locals:         0       4       0       0       0
  4390 ;;      Temps:          0       1       0       0       0
  4391 ;;      Totals:         0       9       0       0       0
  4392 ;;Total ram usage:        9 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    3
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_map
  4399 ;;		_GetDigits
  4400 ;;		_intToString
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function ___awdiv
  4406  074D                     ___awdiv:	
  4407  074D                     l2644:	
  4408                           ;incstack = 0
  4409                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4410                           
  4411  074D  1283               	bcf	3,5	;RP0=0, select bank0
  4412  074E  1303               	bcf	3,6	;RP1=0, select bank0
  4413  074F  01B1               	clrf	___awdiv@sign
  4414  0750                     l2646:	
  4415  0750  1FAC               	btfss	___awdiv@divisor+1,7
  4416  0751  2F53               	goto	u2481
  4417  0752  2F54               	goto	u2480
  4418  0753                     u2481:	
  4419  0753  2F5B               	goto	l2652
  4420  0754                     u2480:	
  4421  0754                     l2648:	
  4422  0754  09AB               	comf	___awdiv@divisor,f
  4423  0755  09AC               	comf	___awdiv@divisor+1,f
  4424  0756  0AAB               	incf	___awdiv@divisor,f
  4425  0757  1903               	skipnz
  4426  0758  0AAC               	incf	___awdiv@divisor+1,f
  4427  0759                     l2650:	
  4428  0759  01B1               	clrf	___awdiv@sign
  4429  075A  0AB1               	incf	___awdiv@sign,f
  4430  075B                     l2652:	
  4431  075B  1FAE               	btfss	___awdiv@dividend+1,7
  4432  075C  2F5E               	goto	u2491
  4433  075D  2F5F               	goto	u2490
  4434  075E                     u2491:	
  4435  075E  2F68               	goto	l2658
  4436  075F                     u2490:	
  4437  075F                     l2654:	
  4438  075F  09AD               	comf	___awdiv@dividend,f
  4439  0760  09AE               	comf	___awdiv@dividend+1,f
  4440  0761  0AAD               	incf	___awdiv@dividend,f
  4441  0762  1903               	skipnz
  4442  0763  0AAE               	incf	___awdiv@dividend+1,f
  4443  0764                     l2656:	
  4444  0764  3001               	movlw	1
  4445  0765  00AF               	movwf	??___awdiv
  4446  0766  082F               	movf	??___awdiv,w
  4447  0767  06B1               	xorwf	___awdiv@sign,f
  4448  0768                     l2658:	
  4449  0768  01B2               	clrf	___awdiv@quotient
  4450  0769  01B3               	clrf	___awdiv@quotient+1
  4451  076A                     l2660:	
  4452  076A  082B               	movf	___awdiv@divisor,w
  4453  076B  042C               	iorwf	___awdiv@divisor+1,w
  4454  076C  1903               	btfsc	3,2
  4455  076D  2F6F               	goto	u2501
  4456  076E  2F70               	goto	u2500
  4457  076F                     u2501:	
  4458  076F  2FA7               	goto	l2680
  4459  0770                     u2500:	
  4460  0770                     l2662:	
  4461  0770  01B0               	clrf	___awdiv@counter
  4462  0771  0AB0               	incf	___awdiv@counter,f
  4463  0772  2F7E               	goto	l2668
  4464  0773                     l2664:	
  4465  0773  3001               	movlw	1
  4466  0774                     u2515:	
  4467  0774  1003               	clrc
  4468  0775  0DAB               	rlf	___awdiv@divisor,f
  4469  0776  0DAC               	rlf	___awdiv@divisor+1,f
  4470  0777  3EFF               	addlw	-1
  4471  0778  1D03               	skipz
  4472  0779  2F74               	goto	u2515
  4473  077A                     l2666:	
  4474  077A  3001               	movlw	1
  4475  077B  00AF               	movwf	??___awdiv
  4476  077C  082F               	movf	??___awdiv,w
  4477  077D  07B0               	addwf	___awdiv@counter,f
  4478  077E                     l2668:	
  4479  077E  1FAC               	btfss	___awdiv@divisor+1,7
  4480  077F  2F81               	goto	u2521
  4481  0780  2F82               	goto	u2520
  4482  0781                     u2521:	
  4483  0781  2F73               	goto	l2664
  4484  0782                     u2520:	
  4485  0782                     l2670:	
  4486  0782  3001               	movlw	1
  4487  0783                     u2535:	
  4488  0783  1003               	clrc
  4489  0784  0DB2               	rlf	___awdiv@quotient,f
  4490  0785  0DB3               	rlf	___awdiv@quotient+1,f
  4491  0786  3EFF               	addlw	-1
  4492  0787  1D03               	skipz
  4493  0788  2F83               	goto	u2535
  4494  0789  082C               	movf	___awdiv@divisor+1,w
  4495  078A  022E               	subwf	___awdiv@dividend+1,w
  4496  078B  1D03               	skipz
  4497  078C  2F8F               	goto	u2545
  4498  078D  082B               	movf	___awdiv@divisor,w
  4499  078E  022D               	subwf	___awdiv@dividend,w
  4500  078F                     u2545:	
  4501  078F  1C03               	skipc
  4502  0790  2F92               	goto	u2541
  4503  0791  2F93               	goto	u2540
  4504  0792                     u2541:	
  4505  0792  2F9A               	goto	l2676
  4506  0793                     u2540:	
  4507  0793                     l2672:	
  4508  0793  082B               	movf	___awdiv@divisor,w
  4509  0794  02AD               	subwf	___awdiv@dividend,f
  4510  0795  082C               	movf	___awdiv@divisor+1,w
  4511  0796  1C03               	skipc
  4512  0797  03AE               	decf	___awdiv@dividend+1,f
  4513  0798  02AE               	subwf	___awdiv@dividend+1,f
  4514  0799                     l2674:	
  4515  0799  1432               	bsf	___awdiv@quotient,0
  4516  079A                     l2676:	
  4517  079A  3001               	movlw	1
  4518  079B                     u2555:	
  4519  079B  1003               	clrc
  4520  079C  0CAC               	rrf	___awdiv@divisor+1,f
  4521  079D  0CAB               	rrf	___awdiv@divisor,f
  4522  079E  3EFF               	addlw	-1
  4523  079F  1D03               	skipz
  4524  07A0  2F9B               	goto	u2555
  4525  07A1                     l2678:	
  4526  07A1  3001               	movlw	1
  4527  07A2  02B0               	subwf	___awdiv@counter,f
  4528  07A3  1D03               	btfss	3,2
  4529  07A4  2FA6               	goto	u2561
  4530  07A5  2FA7               	goto	u2560
  4531  07A6                     u2561:	
  4532  07A6  2F82               	goto	l2670
  4533  07A7                     u2560:	
  4534  07A7                     l2680:	
  4535  07A7  0831               	movf	___awdiv@sign,w
  4536  07A8  1903               	btfsc	3,2
  4537  07A9  2FAB               	goto	u2571
  4538  07AA  2FAC               	goto	u2570
  4539  07AB                     u2571:	
  4540  07AB  2FB1               	goto	l2684
  4541  07AC                     u2570:	
  4542  07AC                     l2682:	
  4543  07AC  09B2               	comf	___awdiv@quotient,f
  4544  07AD  09B3               	comf	___awdiv@quotient+1,f
  4545  07AE  0AB2               	incf	___awdiv@quotient,f
  4546  07AF  1903               	skipnz
  4547  07B0  0AB3               	incf	___awdiv@quotient+1,f
  4548  07B1                     l2684:	
  4549  07B1  0833               	movf	___awdiv@quotient+1,w
  4550  07B2  00AC               	movwf	?___awdiv+1
  4551  07B3  0832               	movf	___awdiv@quotient,w
  4552  07B4  00AB               	movwf	?___awdiv
  4553  07B5                     l587:	
  4554  07B5  0008               	return
  4555  07B6                     __end_of___awdiv:	
  4556                           
  4557                           	psect	text16
  4558  0E93                     __ptext16:	
  4559 ;; *************** function _ChangeTrafficLight *****************
  4560 ;; Defined at:
  4561 ;;		line 18 in file "./CustomLib/TrafficLight.h"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  _semafori       1    wreg     PTR PTR struct .
  4564 ;;		 -> Semafori(32), 
  4565 ;;  _n_semafori     1   11[BANK0 ] PTR unsigned char 
  4566 ;;		 -> id_semaforo(1), 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  _semafori       1   18[BANK0 ] PTR PTR struct .
  4569 ;;		 -> Semafori(32), 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4579 ;;      Params:         0       1       0       0       0
  4580 ;;      Locals:         0       1       0       0       0
  4581 ;;      Temps:          0       6       0       0       0
  4582 ;;      Totals:         0       8       0       0       0
  4583 ;;Total ram usage:        8 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    4
  4586 ;; This function calls:
  4587 ;;		___awmod
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function _ChangeTrafficLight
  4595  0E93                     _ChangeTrafficLight:	
  4596                           
  4597                           ;incstack = 0
  4598                           ; Regs used in _ChangeTrafficLight: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4599                           ;ChangeTrafficLight@_semafori stored from wreg
  4600  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  4601  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  4602  0E95  00B2               	movwf	ChangeTrafficLight@_semafori
  4603  0E96                     l136:	
  4604                           ;./CustomLib/TrafficLight.h: 18: void ChangeTrafficLight(_Semafori _semafori, unsigned c
      +                          har *_n_semafori);./CustomLib/TrafficLight.h: 19: {;./CustomLib/TrafficLight.h: 22:     
      +                          do
  4605                           
  4606  0E96                     l2760:	
  4607                           
  4608                           ;./CustomLib/TrafficLight.h: 23:     {;./CustomLib/TrafficLight.h: 24:         *_n_semaf
      +                          ori = ((*_n_semafori) + 1);
  4609  0E96  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4610  0E97  0084               	movwf	4
  4611  0E98  1383               	bcf	3,7	;select IRP bank0
  4612  0E99  0800               	movf	0,w
  4613  0E9A  3E01               	addlw	1
  4614  0E9B  00AC               	movwf	??_ChangeTrafficLight
  4615  0E9C  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4616  0E9D  0084               	movwf	4
  4617  0E9E  082C               	movf	??_ChangeTrafficLight,w
  4618  0E9F  0080               	movwf	0
  4619                           
  4620                           ;./CustomLib/TrafficLight.h: 25:     }while( (*(_semafori)[*_n_semafori]).times[0] == 0 
      +                          && *_n_semafori<10);
  4621  0EA0  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4622  0EA1  0084               	movwf	4
  4623  0EA2  0800               	movf	0,w
  4624  0EA3  00AC               	movwf	??_ChangeTrafficLight
  4625  0EA4  072C               	addwf	??_ChangeTrafficLight,w
  4626  0EA5  0732               	addwf	ChangeTrafficLight@_semafori,w
  4627  0EA6  00AD               	movwf	??_ChangeTrafficLight+1
  4628  0EA7  082D               	movf	??_ChangeTrafficLight+1,w
  4629  0EA8  0084               	movwf	4
  4630  0EA9  1783               	bsf	3,7	;select IRP bank2
  4631  0EAA  0800               	movf	0,w
  4632  0EAB  00AE               	movwf	??_ChangeTrafficLight+2
  4633  0EAC  0A84               	incf	4,f
  4634  0EAD  0800               	movf	0,w
  4635  0EAE  00AF               	movwf	??_ChangeTrafficLight+3
  4636  0EAF  082E               	movf	??_ChangeTrafficLight+2,w
  4637  0EB0  0084               	movwf	4
  4638  0EB1  1783               	bsf	3,7
  4639  0EB2  1C2F               	btfss	??_ChangeTrafficLight+3,0
  4640  0EB3  1383               	bcf	3,7
  4641  0EB4  0800               	movf	0,w
  4642  0EB5  00B0               	movwf	??_ChangeTrafficLight+4
  4643  0EB6  0A84               	incf	4,f
  4644  0EB7  0800               	movf	0,w
  4645  0EB8  00B1               	movwf	??_ChangeTrafficLight+5
  4646  0EB9  0830               	movf	??_ChangeTrafficLight+4,w
  4647  0EBA  0431               	iorwf	??_ChangeTrafficLight+5,w
  4648  0EBB  1D03               	btfss	3,2
  4649  0EBC  2EBE               	goto	u2701
  4650  0EBD  2EBF               	goto	u2700
  4651  0EBE                     u2701:	
  4652  0EBE  2EC8               	goto	l2764
  4653  0EBF                     u2700:	
  4654  0EBF                     l2762:	
  4655  0EBF  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4656  0EC0  0084               	movwf	4
  4657  0EC1  300A               	movlw	10
  4658  0EC2  1383               	bcf	3,7	;select IRP bank0
  4659  0EC3  0200               	subwf	0,w
  4660  0EC4  1C03               	skipc
  4661  0EC5  2EC7               	goto	u2711
  4662  0EC6  2EC8               	goto	u2710
  4663  0EC7                     u2711:	
  4664  0EC7  2E96               	goto	l136
  4665  0EC8                     u2710:	
  4666  0EC8                     l2764:	
  4667                           
  4668                           ;./CustomLib/TrafficLight.h: 27:     *_n_semafori=(*_n_semafori)%10;
  4669  0EC8  300A               	movlw	10
  4670  0EC9  00A4               	movwf	___awmod@divisor
  4671  0ECA  3000               	movlw	0
  4672  0ECB  00A5               	movwf	___awmod@divisor+1
  4673  0ECC  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4674  0ECD  0084               	movwf	4
  4675  0ECE  1383               	bcf	3,7	;select IRP bank0
  4676  0ECF  0800               	movf	0,w
  4677  0ED0  00AC               	movwf	??_ChangeTrafficLight
  4678  0ED1  01AD               	clrf	??_ChangeTrafficLight+1
  4679  0ED2  082C               	movf	??_ChangeTrafficLight,w
  4680  0ED3  00A6               	movwf	___awmod@dividend
  4681  0ED4  082D               	movf	??_ChangeTrafficLight+1,w
  4682  0ED5  00A7               	movwf	___awmod@dividend+1
  4683  0ED6  120A  158A  273D  120A  158A  	fcall	___awmod
  4684  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  4685  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  4686  0EDD  0824               	movf	?___awmod,w
  4687  0EDE  00AE               	movwf	??_ChangeTrafficLight+2
  4688  0EDF  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4689  0EE0  0084               	movwf	4
  4690  0EE1  082E               	movf	??_ChangeTrafficLight+2,w
  4691  0EE2  1383               	bcf	3,7	;select IRP bank0
  4692  0EE3  0080               	movwf	0
  4693  0EE4                     l140:	
  4694  0EE4  0008               	return
  4695  0EE5                     __end_of_ChangeTrafficLight:	
  4696                           
  4697                           	psect	text17
  4698  0F3D                     __ptext17:	
  4699 ;; *************** function ___awmod *****************
  4700 ;; Defined at:
  4701 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  divisor         2    4[BANK0 ] int 
  4704 ;;  dividend        2    6[BANK0 ] int 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  sign            1   10[BANK0 ] unsigned char 
  4707 ;;  counter         1    9[BANK0 ] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  2    4[BANK0 ] int 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4717 ;;      Params:         0       4       0       0       0
  4718 ;;      Locals:         0       2       0       0       0
  4719 ;;      Temps:          0       1       0       0       0
  4720 ;;      Totals:         0       7       0       0       0
  4721 ;;Total ram usage:        7 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    3
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_GetDigits
  4728 ;;		_ChangeTrafficLight
  4729 ;;		_main
  4730 ;;		_intToString
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           
  4735                           ;psect for function ___awmod
  4736  0F3D                     ___awmod:	
  4737  0F3D                     l2688:	
  4738                           ;incstack = 0
  4739                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4740                           
  4741  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0F3F  01AA               	clrf	___awmod@sign
  4744  0F40                     l2690:	
  4745  0F40  1FA7               	btfss	___awmod@dividend+1,7
  4746  0F41  2F43               	goto	u2581
  4747  0F42  2F44               	goto	u2580
  4748  0F43                     u2581:	
  4749  0F43  2F4B               	goto	l2696
  4750  0F44                     u2580:	
  4751  0F44                     l2692:	
  4752  0F44  09A6               	comf	___awmod@dividend,f
  4753  0F45  09A7               	comf	___awmod@dividend+1,f
  4754  0F46  0AA6               	incf	___awmod@dividend,f
  4755  0F47  1903               	skipnz
  4756  0F48  0AA7               	incf	___awmod@dividend+1,f
  4757  0F49                     l2694:	
  4758  0F49  01AA               	clrf	___awmod@sign
  4759  0F4A  0AAA               	incf	___awmod@sign,f
  4760  0F4B                     l2696:	
  4761  0F4B  1FA5               	btfss	___awmod@divisor+1,7
  4762  0F4C  2F4E               	goto	u2591
  4763  0F4D  2F4F               	goto	u2590
  4764  0F4E                     u2591:	
  4765  0F4E  2F54               	goto	l2700
  4766  0F4F                     u2590:	
  4767  0F4F                     l2698:	
  4768  0F4F  09A4               	comf	___awmod@divisor,f
  4769  0F50  09A5               	comf	___awmod@divisor+1,f
  4770  0F51  0AA4               	incf	___awmod@divisor,f
  4771  0F52  1903               	skipnz
  4772  0F53  0AA5               	incf	___awmod@divisor+1,f
  4773  0F54                     l2700:	
  4774  0F54  0824               	movf	___awmod@divisor,w
  4775  0F55  0425               	iorwf	___awmod@divisor+1,w
  4776  0F56  1903               	btfsc	3,2
  4777  0F57  2F59               	goto	u2601
  4778  0F58  2F5A               	goto	u2600
  4779  0F59                     u2601:	
  4780  0F59  2F89               	goto	l2718
  4781  0F5A                     u2600:	
  4782  0F5A                     l2702:	
  4783  0F5A  01A9               	clrf	___awmod@counter
  4784  0F5B  0AA9               	incf	___awmod@counter,f
  4785  0F5C  2F68               	goto	l2708
  4786  0F5D                     l2704:	
  4787  0F5D  3001               	movlw	1
  4788  0F5E                     u2615:	
  4789  0F5E  1003               	clrc
  4790  0F5F  0DA4               	rlf	___awmod@divisor,f
  4791  0F60  0DA5               	rlf	___awmod@divisor+1,f
  4792  0F61  3EFF               	addlw	-1
  4793  0F62  1D03               	skipz
  4794  0F63  2F5E               	goto	u2615
  4795  0F64                     l2706:	
  4796  0F64  3001               	movlw	1
  4797  0F65  00A8               	movwf	??___awmod
  4798  0F66  0828               	movf	??___awmod,w
  4799  0F67  07A9               	addwf	___awmod@counter,f
  4800  0F68                     l2708:	
  4801  0F68  1FA5               	btfss	___awmod@divisor+1,7
  4802  0F69  2F6B               	goto	u2621
  4803  0F6A  2F6C               	goto	u2620
  4804  0F6B                     u2621:	
  4805  0F6B  2F5D               	goto	l2704
  4806  0F6C                     u2620:	
  4807  0F6C                     l2710:	
  4808  0F6C  0825               	movf	___awmod@divisor+1,w
  4809  0F6D  0227               	subwf	___awmod@dividend+1,w
  4810  0F6E  1D03               	skipz
  4811  0F6F  2F72               	goto	u2635
  4812  0F70  0824               	movf	___awmod@divisor,w
  4813  0F71  0226               	subwf	___awmod@dividend,w
  4814  0F72                     u2635:	
  4815  0F72  1C03               	skipc
  4816  0F73  2F75               	goto	u2631
  4817  0F74  2F76               	goto	u2630
  4818  0F75                     u2631:	
  4819  0F75  2F7C               	goto	l2714
  4820  0F76                     u2630:	
  4821  0F76                     l2712:	
  4822  0F76  0824               	movf	___awmod@divisor,w
  4823  0F77  02A6               	subwf	___awmod@dividend,f
  4824  0F78  0825               	movf	___awmod@divisor+1,w
  4825  0F79  1C03               	skipc
  4826  0F7A  03A7               	decf	___awmod@dividend+1,f
  4827  0F7B  02A7               	subwf	___awmod@dividend+1,f
  4828  0F7C                     l2714:	
  4829  0F7C  3001               	movlw	1
  4830  0F7D                     u2645:	
  4831  0F7D  1003               	clrc
  4832  0F7E  0CA5               	rrf	___awmod@divisor+1,f
  4833  0F7F  0CA4               	rrf	___awmod@divisor,f
  4834  0F80  3EFF               	addlw	-1
  4835  0F81  1D03               	skipz
  4836  0F82  2F7D               	goto	u2645
  4837  0F83                     l2716:	
  4838  0F83  3001               	movlw	1
  4839  0F84  02A9               	subwf	___awmod@counter,f
  4840  0F85  1D03               	btfss	3,2
  4841  0F86  2F88               	goto	u2651
  4842  0F87  2F89               	goto	u2650
  4843  0F88                     u2651:	
  4844  0F88  2F6C               	goto	l2710
  4845  0F89                     u2650:	
  4846  0F89                     l2718:	
  4847  0F89  082A               	movf	___awmod@sign,w
  4848  0F8A  1903               	btfsc	3,2
  4849  0F8B  2F8D               	goto	u2661
  4850  0F8C  2F8E               	goto	u2660
  4851  0F8D                     u2661:	
  4852  0F8D  2F93               	goto	l2722
  4853  0F8E                     u2660:	
  4854  0F8E                     l2720:	
  4855  0F8E  09A6               	comf	___awmod@dividend,f
  4856  0F8F  09A7               	comf	___awmod@dividend+1,f
  4857  0F90  0AA6               	incf	___awmod@dividend,f
  4858  0F91  1903               	skipnz
  4859  0F92  0AA7               	incf	___awmod@dividend+1,f
  4860  0F93                     l2722:	
  4861  0F93  0827               	movf	___awmod@dividend+1,w
  4862  0F94  00A5               	movwf	?___awmod+1
  4863  0F95  0826               	movf	___awmod@dividend,w
  4864  0F96  00A4               	movwf	?___awmod
  4865  0F97                     l600:	
  4866  0F97  0008               	return
  4867  0F98                     __end_of___awmod:	
  4868                           
  4869                           	psect	text18
  4870  0D09                     __ptext18:	
  4871 ;; *************** function _ADC_Read *****************
  4872 ;; Defined at:
  4873 ;;		line 341 in file "debug.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  canale          1    wreg     unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  canale          1    7[BANK0 ] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  2    4[BANK0 ] int 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         0       2       0       0       0
  4888 ;;      Locals:         0       1       0       0       0
  4889 ;;      Temps:          0       1       0       0       0
  4890 ;;      Totals:         0       4       0       0       0
  4891 ;;Total ram usage:        4 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    3
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_main
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function _ADC_Read
  4903  0D09                     _ADC_Read:	
  4904                           
  4905                           ;incstack = 0
  4906                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  4907                           ;ADC_Read@canale stored from wreg
  4908  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4909  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4910  0D0B  00A7               	movwf	ADC_Read@canale
  4911  0D0C                     l2848:	
  4912                           
  4913                           ;debug.c: 341: int ADC_Read(char canale);debug.c: 342: {;debug.c: 343:     ADCON0 = (1 <
      +                          < 0) | (canale << 3);
  4914  0D0C  0827               	movf	ADC_Read@canale,w
  4915  0D0D  00A6               	movwf	??_ADC_Read
  4916  0D0E  3002               	movlw	2
  4917  0D0F                     u2775:	
  4918  0D0F  1003               	clrc
  4919  0D10  0DA6               	rlf	??_ADC_Read,f
  4920  0D11  3EFF               	addlw	-1
  4921  0D12  1D03               	skipz
  4922  0D13  2D0F               	goto	u2775
  4923  0D14  1003               	clrc
  4924  0D15  0D26               	rlf	??_ADC_Read,w
  4925  0D16  3801               	iorlw	1
  4926  0D17  009F               	movwf	31	;volatile
  4927  0D18                     l2850:	
  4928                           
  4929                           ;debug.c: 344:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  4930  0D18  3004               	movlw	4
  4931  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0D1B  00A6               	movwf	??_ADC_Read
  4934  0D1C                     u3097:	
  4935  0D1C  0BA6               	decfsz	??_ADC_Read,f
  4936  0D1D  2D1C               	goto	u3097
  4937  0D1E  0000               	nop
  4938  0D1F                     l2852:	
  4939                           
  4940                           ;debug.c: 345:     GO_nDONE = 1;
  4941  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  4942  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  4943  0D21  151F               	bsf	31,2	;volatile
  4944  0D22                     l291:	
  4945                           ;debug.c: 347:         ;
  4946                           
  4947                           
  4948                           ;debug.c: 346:     while (GO_nDONE)
  4949  0D22  191F               	btfsc	31,2	;volatile
  4950  0D23  2D25               	goto	u2781
  4951  0D24  2D26               	goto	u2780
  4952  0D25                     u2781:	
  4953  0D25  2D22               	goto	l291
  4954  0D26                     u2780:	
  4955  0D26                     l2854:	
  4956                           
  4957                           ;debug.c: 348:     return ADRESL + (ADRESH << 8);
  4958  0D26  081E               	movf	30,w	;volatile
  4959  0D27  00A5               	movwf	?_ADC_Read+1
  4960  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  4961  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  4962  0D2A  081E               	movf	30,w	;volatile
  4963  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  4964  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  4965  0D2D  00A4               	movwf	?_ADC_Read
  4966  0D2E                     l294:	
  4967  0D2E  0008               	return
  4968  0D2F                     __end_of_ADC_Read:	
  4969                           
  4970                           	psect	text19
  4971  0EE5                     __ptext19:	
  4972 ;; *************** function _ISR *****************
  4973 ;; Defined at:
  4974 ;;		line 453 in file "debug.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;		None
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4988 ;;      Params:         0       0       0       0       0
  4989 ;;      Locals:         0       0       0       0       0
  4990 ;;      Temps:          0       4       0       0       0
  4991 ;;      Totals:         0       4       0       0       0
  4992 ;;Total ram usage:        4 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    2
  4995 ;; This function calls:
  4996 ;;		_UART_Read
  4997 ;;		_conteggioVeicoli
  4998 ;; This function is called by:
  4999 ;;		Interrupt level 1
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           
  5004                           ;psect for function _ISR
  5005  0EE5                     _ISR:	
  5006  0EE5                     i1l2394:	
  5007                           
  5008                           ;debug.c: 456:     if (RCIF && readGateway.Bit == 0)
  5009  0EE5  1E8C               	btfss	12,5	;volatile
  5010  0EE6  2EE8               	goto	u216_21
  5011  0EE7  2EE9               	goto	u216_20
  5012  0EE8                     u216_21:	
  5013  0EE8  2EF2               	goto	i1l2402
  5014  0EE9                     u216_20:	
  5015  0EE9                     i1l2396:	
  5016  0EE9  1854               	btfsc	_readGateway,0
  5017  0EEA  2EEC               	goto	u217_21
  5018  0EEB  2EED               	goto	u217_20
  5019  0EEC                     u217_21:	
  5020  0EEC  2EF2               	goto	i1l2402
  5021  0EED                     u217_20:	
  5022  0EED                     i1l2398:	
  5023                           
  5024                           ;debug.c: 457:     {;debug.c: 458:         readGateway.Bit = 1;
  5025  0EED  1454               	bsf	_readGateway,0
  5026                           
  5027                           ;debug.c: 459:         readGatewayDone.Bit = 0;
  5028  0EEE  1055               	bcf	_readGatewayDone,0
  5029                           
  5030                           ;debug.c: 460:         readGatewayDone.Timeout = 0;
  5031  0EEF  10D5               	bcf	_readGatewayDone,1
  5032  0EF0                     i1l2400:	
  5033                           
  5034                           ;debug.c: 461:         dataFromGatewayIndex = 0;
  5035  0EF0  01CD               	clrf	_dataFromGatewayIndex
  5036                           
  5037                           ;debug.c: 462:         timerReadFromGateway = 0;
  5038  0EF1  01CC               	clrf	_timerReadFromGateway
  5039  0EF2                     i1l2402:	
  5040                           
  5041                           ;debug.c: 464:     if (RCIF && readGateway.Bit == 1)
  5042  0EF2  1E8C               	btfss	12,5	;volatile
  5043  0EF3  2EF5               	goto	u218_21
  5044  0EF4  2EF6               	goto	u218_20
  5045  0EF5                     u218_21:	
  5046  0EF5  2F0D               	goto	i1l2412
  5047  0EF6                     u218_20:	
  5048  0EF6                     i1l2404:	
  5049  0EF6  1C54               	btfss	_readGateway,0
  5050  0EF7  2EF9               	goto	u219_21
  5051  0EF8  2EFA               	goto	u219_20
  5052  0EF9                     u219_21:	
  5053  0EF9  2F0D               	goto	i1l2412
  5054  0EFA                     u219_20:	
  5055  0EFA                     i1l2406:	
  5056                           
  5057                           ;debug.c: 465:     {;debug.c: 466:         dataFromGateway[dataFromGatewayIndex] = UART_
      +                          Read();
  5058  0EFA  120A  158A  2483  120A  158A  	fcall	_UART_Read
  5059  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0F01  00A0               	movwf	??_ISR
  5062  0F02  084D               	movf	_dataFromGatewayIndex,w
  5063  0F03  3E90               	addlw	(low (_dataFromGateway| (0+256)))& (0+255)
  5064  0F04  0084               	movwf	4
  5065  0F05  0820               	movf	??_ISR,w
  5066  0F06  1783               	bsf	3,7	;select IRP bank3
  5067  0F07  0080               	movwf	0
  5068  0F08                     i1l2408:	
  5069                           
  5070                           ;debug.c: 467:         dataFromGatewayIndex++;
  5071  0F08  3001               	movlw	1
  5072  0F09  00A0               	movwf	??_ISR
  5073  0F0A  0820               	movf	??_ISR,w
  5074  0F0B  07CD               	addwf	_dataFromGatewayIndex,f
  5075  0F0C                     i1l2410:	
  5076                           
  5077                           ;debug.c: 468:         timerReadFromGateway = 0;
  5078  0F0C  01CC               	clrf	_timerReadFromGateway
  5079  0F0D                     i1l2412:	
  5080                           
  5081                           ;debug.c: 473:     if (TMR0IF)
  5082  0F0D  1D0B               	btfss	11,2	;volatile
  5083  0F0E  2F10               	goto	u220_21
  5084  0F0F  2F11               	goto	u220_20
  5085  0F10                     u220_21:	
  5086  0F10  2F1B               	goto	i1l2420
  5087  0F11                     u220_20:	
  5088  0F11                     i1l2414:	
  5089                           
  5090                           ;debug.c: 474:     {;debug.c: 475:         TMR0IF = 0;
  5091  0F11  110B               	bcf	11,2	;volatile
  5092  0F12                     i1l2416:	
  5093                           
  5094                           ;debug.c: 476:         conteggioVeicoli();
  5095  0F12  120A  118A  2572  120A  158A  	fcall	_conteggioVeicoli
  5096  0F17                     i1l2418:	
  5097                           
  5098                           ;debug.c: 477:         TMR0 = 6;
  5099  0F17  3006               	movlw	6
  5100  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  5101  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  5102  0F1A  0081               	movwf	1	;volatile
  5103  0F1B                     i1l2420:	
  5104                           
  5105                           ;debug.c: 480:     if (TMR1IF)
  5106  0F1B  1C0C               	btfss	12,0	;volatile
  5107  0F1C  2F1E               	goto	u221_21
  5108  0F1D  2F1F               	goto	u221_20
  5109  0F1E                     u221_21:	
  5110  0F1E  2F34               	goto	i1l348
  5111  0F1F                     u221_20:	
  5112  0F1F                     i1l2422:	
  5113                           
  5114                           ;debug.c: 481:     {;debug.c: 482:         TMR1IF = 0;
  5115  0F1F  100C               	bcf	12,0	;volatile
  5116  0F20                     i1l2424:	
  5117                           
  5118                           ;debug.c: 483:         count_lux++;
  5119  0F20  3001               	movlw	1
  5120  0F21  00A0               	movwf	??_ISR
  5121  0F22  0820               	movf	??_ISR,w
  5122  0F23  07FD               	addwf	_count_lux,f
  5123  0F24                     i1l2426:	
  5124                           
  5125                           ;debug.c: 485:         if (count_lux >= 20)
  5126  0F24  3014               	movlw	20
  5127  0F25  027D               	subwf	_count_lux,w
  5128  0F26  1C03               	skipc
  5129  0F27  2F29               	goto	u222_21
  5130  0F28  2F2A               	goto	u222_20
  5131  0F29                     u222_21:	
  5132  0F29  2F30               	goto	i1l2434
  5133  0F2A                     u222_20:	
  5134  0F2A                     i1l2428:	
  5135                           
  5136                           ;debug.c: 486:         {;debug.c: 487:             secondPassed.Bit = 1;
  5137  0F2A  1453               	bsf	_secondPassed,0
  5138  0F2B                     i1l2430:	
  5139                           
  5140                           ;debug.c: 488:             count_lux = 0;
  5141  0F2B  01FD               	clrf	_count_lux
  5142  0F2C                     i1l2432:	
  5143                           
  5144                           ;debug.c: 489:             timerReadFromGateway++;
  5145  0F2C  3001               	movlw	1
  5146  0F2D  00A0               	movwf	??_ISR
  5147  0F2E  0820               	movf	??_ISR,w
  5148  0F2F  07CC               	addwf	_timerReadFromGateway,f
  5149  0F30                     i1l2434:	
  5150                           
  5151                           ;debug.c: 492:         TMR1H = 60;
  5152  0F30  303C               	movlw	60
  5153  0F31  008F               	movwf	15	;volatile
  5154  0F32                     i1l2436:	
  5155                           
  5156                           ;debug.c: 493:         TMR1L = 176;
  5157  0F32  30B0               	movlw	176
  5158  0F33  008E               	movwf	14	;volatile
  5159  0F34                     i1l348:	
  5160  0F34  0823               	movf	??_ISR+3,w
  5161  0F35  008A               	movwf	10
  5162  0F36  0822               	movf	??_ISR+2,w
  5163  0F37  0084               	movwf	4
  5164  0F38  0E21               	swapf	(??_ISR+1)^0,w
  5165  0F39  0083               	movwf	3
  5166  0F3A  0EFE               	swapf	btemp,f
  5167  0F3B  0E7E               	swapf	btemp,w
  5168  0F3C  0009               	retfie
  5169  0F3D                     __end_of_ISR:	
  5170                           
  5171                           	psect	intentry
  5172  0004                     __pintentry:	
  5173                           ;incstack = 0
  5174                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5175                           
  5176  0004                     interrupt_function:	
  5177  007E                     saved_w	set	btemp
  5178  0004  00FE               	movwf	btemp
  5179  0005  0E03               	swapf	3,w
  5180  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5181  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5182  0008  00A1               	movwf	??_ISR+1
  5183  0009  0804               	movf	4,w
  5184  000A  00A2               	movwf	??_ISR+2
  5185  000B  080A               	movf	10,w
  5186  000C  00A3               	movwf	??_ISR+3
  5187  000D  120A  158A  2EE5   	ljmp	_ISR
  5188                           
  5189                           	psect	text20
  5190  0572                     __ptext20:	
  5191 ;; *************** function _conteggioVeicoli *****************
  5192 ;; Defined at:
  5193 ;;		line 408 in file "debug.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         0       0       0       0       0
  5208 ;;      Locals:         0       0       0       0       0
  5209 ;;      Temps:          4       0       0       0       0
  5210 ;;      Totals:         4       0       0       0       0
  5211 ;;Total ram usage:        4 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:    1
  5214 ;; This function calls:
  5215 ;;		_Conteggio
  5216 ;; This function is called by:
  5217 ;;		_ISR
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           
  5222                           ;psect for function _conteggioVeicoli
  5223  0572                     _conteggioVeicoli:	
  5224  0572                     i1l2130:	
  5225                           ;incstack = 0
  5226                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5227                           
  5228                           
  5229                           ;debug.c: 411:     if (!PORTBbits.RB3)
  5230  0572  1283               	bcf	3,5	;RP0=0, select bank0
  5231  0573  1303               	bcf	3,6	;RP1=0, select bank0
  5232  0574  1986               	btfsc	6,3	;volatile
  5233  0575  2D77               	goto	u179_21
  5234  0576  2D78               	goto	u179_20
  5235  0577                     u179_21:	
  5236  0577  2D7F               	goto	i1l326
  5237  0578                     u179_20:	
  5238  0578                     i1l2132:	
  5239                           
  5240                           ;debug.c: 412:     {;debug.c: 413:         count++;
  5241  0578  3001               	movlw	1
  5242  0579  07CA               	addwf	_count,f
  5243  057A  1803               	skipnc
  5244  057B  0ACB               	incf	_count+1,f
  5245  057C  3000               	movlw	0
  5246  057D  07CB               	addwf	_count+1,f
  5247                           
  5248                           ;debug.c: 414:     }
  5249  057E  2D9D               	goto	i1l2138
  5250  057F                     i1l326:	
  5251                           ;debug.c: 415:     else if (PORTBbits.RB3)
  5252                           
  5253  057F  1D86               	btfss	6,3	;volatile
  5254  0580  2D82               	goto	u180_21
  5255  0581  2D83               	goto	u180_20
  5256  0582                     u180_21:	
  5257  0582  2D9D               	goto	i1l2138
  5258  0583                     u180_20:	
  5259  0583                     i1l2134:	
  5260                           
  5261                           ;debug.c: 416:     {;debug.c: 417:         Conteggio(count, motorcycle, car, truck, 0);
  5262  0583  084B               	movf	_count+1,w
  5263  0584  00F1               	movwf	Conteggio@_count+1
  5264  0585  084A               	movf	_count,w
  5265  0586  00F0               	movwf	Conteggio@_count
  5266  0587  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  5267  0588  00F9               	movwf	??_conteggioVeicoli
  5268  0589  0879               	movf	??_conteggioVeicoli,w
  5269  058A  00F2               	movwf	Conteggio@_motorcycle
  5270  058B  3056               	movlw	(low (_car| 0))& (0+255)
  5271  058C  00FA               	movwf	??_conteggioVeicoli+1
  5272  058D  087A               	movf	??_conteggioVeicoli+1,w
  5273  058E  00F3               	movwf	Conteggio@_car
  5274  058F  30E9               	movlw	(low (_truck| 0))& (0+255)
  5275  0590  00FB               	movwf	??_conteggioVeicoli+2
  5276  0591  087B               	movf	??_conteggioVeicoli+2,w
  5277  0592  00F4               	movwf	Conteggio@_truck
  5278  0593  01F5               	clrf	Conteggio@index
  5279  0594  120A  158A  25F6  120A  118A  	fcall	_Conteggio
  5280  0599                     i1l2136:	
  5281                           
  5282                           ;debug.c: 418:         count = 0;
  5283  0599  1283               	bcf	3,5	;RP0=0, select bank0
  5284  059A  1303               	bcf	3,6	;RP1=0, select bank0
  5285  059B  01CA               	clrf	_count
  5286  059C  01CB               	clrf	_count+1
  5287  059D                     i1l2138:	
  5288                           
  5289                           ;debug.c: 421:     if (!PORTBbits.RB4)
  5290  059D  1A06               	btfsc	6,4	;volatile
  5291  059E  2DA0               	goto	u181_21
  5292  059F  2DA1               	goto	u181_20
  5293  05A0                     u181_21:	
  5294  05A0  2DA8               	goto	i1l329
  5295  05A1                     u181_20:	
  5296  05A1                     i1l2140:	
  5297                           
  5298                           ;debug.c: 422:     {;debug.c: 423:         count++;
  5299  05A1  3001               	movlw	1
  5300  05A2  07CA               	addwf	_count,f
  5301  05A3  1803               	skipnc
  5302  05A4  0ACB               	incf	_count+1,f
  5303  05A5  3000               	movlw	0
  5304  05A6  07CB               	addwf	_count+1,f
  5305                           
  5306                           ;debug.c: 424:     }
  5307  05A7  2DC7               	goto	i1l2146
  5308  05A8                     i1l329:	
  5309                           ;debug.c: 425:     else if (PORTBbits.RB4)
  5310                           
  5311  05A8  1E06               	btfss	6,4	;volatile
  5312  05A9  2DAB               	goto	u182_21
  5313  05AA  2DAC               	goto	u182_20
  5314  05AB                     u182_21:	
  5315  05AB  2DC7               	goto	i1l2146
  5316  05AC                     u182_20:	
  5317  05AC                     i1l2142:	
  5318                           
  5319                           ;debug.c: 426:     {;debug.c: 427:         Conteggio(count, motorcycle, car, truck, 1);
  5320  05AC  084B               	movf	_count+1,w
  5321  05AD  00F1               	movwf	Conteggio@_count+1
  5322  05AE  084A               	movf	_count,w
  5323  05AF  00F0               	movwf	Conteggio@_count
  5324  05B0  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  5325  05B1  00F9               	movwf	??_conteggioVeicoli
  5326  05B2  0879               	movf	??_conteggioVeicoli,w
  5327  05B3  00F2               	movwf	Conteggio@_motorcycle
  5328  05B4  3056               	movlw	(low (_car| 0))& (0+255)
  5329  05B5  00FA               	movwf	??_conteggioVeicoli+1
  5330  05B6  087A               	movf	??_conteggioVeicoli+1,w
  5331  05B7  00F3               	movwf	Conteggio@_car
  5332  05B8  30E9               	movlw	(low (_truck| 0))& (0+255)
  5333  05B9  00FB               	movwf	??_conteggioVeicoli+2
  5334  05BA  087B               	movf	??_conteggioVeicoli+2,w
  5335  05BB  00F4               	movwf	Conteggio@_truck
  5336  05BC  01F5               	clrf	Conteggio@index
  5337  05BD  0AF5               	incf	Conteggio@index,f
  5338  05BE  120A  158A  25F6  120A  118A  	fcall	_Conteggio
  5339  05C3                     i1l2144:	
  5340                           
  5341                           ;debug.c: 428:         count = 0;
  5342  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  5343  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  5344  05C5  01CA               	clrf	_count
  5345  05C6  01CB               	clrf	_count+1
  5346  05C7                     i1l2146:	
  5347                           
  5348                           ;debug.c: 431:     if (!PORTBbits.RB5)
  5349  05C7  1A86               	btfsc	6,5	;volatile
  5350  05C8  2DCA               	goto	u183_21
  5351  05C9  2DCB               	goto	u183_20
  5352  05CA                     u183_21:	
  5353  05CA  2DD2               	goto	i1l332
  5354  05CB                     u183_20:	
  5355  05CB                     i1l2148:	
  5356                           
  5357                           ;debug.c: 432:     {;debug.c: 433:         count++;
  5358  05CB  3001               	movlw	1
  5359  05CC  07CA               	addwf	_count,f
  5360  05CD  1803               	skipnc
  5361  05CE  0ACB               	incf	_count+1,f
  5362  05CF  3000               	movlw	0
  5363  05D0  07CB               	addwf	_count+1,f
  5364                           
  5365                           ;debug.c: 434:     }
  5366  05D1  2DF3               	goto	i1l2154
  5367  05D2                     i1l332:	
  5368                           ;debug.c: 435:     else if (PORTBbits.RB5)
  5369                           
  5370  05D2  1E86               	btfss	6,5	;volatile
  5371  05D3  2DD5               	goto	u184_21
  5372  05D4  2DD6               	goto	u184_20
  5373  05D5                     u184_21:	
  5374  05D5  2DF3               	goto	i1l2154
  5375  05D6                     u184_20:	
  5376  05D6                     i1l2150:	
  5377                           
  5378                           ;debug.c: 436:     {;debug.c: 437:         Conteggio(count, motorcycle, car, truck, 2);
  5379  05D6  084B               	movf	_count+1,w
  5380  05D7  00F1               	movwf	Conteggio@_count+1
  5381  05D8  084A               	movf	_count,w
  5382  05D9  00F0               	movwf	Conteggio@_count
  5383  05DA  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  5384  05DB  00F9               	movwf	??_conteggioVeicoli
  5385  05DC  0879               	movf	??_conteggioVeicoli,w
  5386  05DD  00F2               	movwf	Conteggio@_motorcycle
  5387  05DE  3056               	movlw	(low (_car| 0))& (0+255)
  5388  05DF  00FA               	movwf	??_conteggioVeicoli+1
  5389  05E0  087A               	movf	??_conteggioVeicoli+1,w
  5390  05E1  00F3               	movwf	Conteggio@_car
  5391  05E2  30E9               	movlw	(low (_truck| 0))& (0+255)
  5392  05E3  00FB               	movwf	??_conteggioVeicoli+2
  5393  05E4  087B               	movf	??_conteggioVeicoli+2,w
  5394  05E5  00F4               	movwf	Conteggio@_truck
  5395  05E6  3002               	movlw	2
  5396  05E7  00FC               	movwf	??_conteggioVeicoli+3
  5397  05E8  087C               	movf	??_conteggioVeicoli+3,w
  5398  05E9  00F5               	movwf	Conteggio@index
  5399  05EA  120A  158A  25F6  120A  118A  	fcall	_Conteggio
  5400  05EF                     i1l2152:	
  5401                           
  5402                           ;debug.c: 438:         count = 0;
  5403  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  5404  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  5405  05F1  01CA               	clrf	_count
  5406  05F2  01CB               	clrf	_count+1
  5407  05F3                     i1l2154:	
  5408                           
  5409                           ;debug.c: 441:     if (!PORTAbits.RA5)
  5410  05F3  1A85               	btfsc	5,5	;volatile
  5411  05F4  2DF6               	goto	u185_21
  5412  05F5  2DF7               	goto	u185_20
  5413  05F6                     u185_21:	
  5414  05F6  2DFE               	goto	i1l335
  5415  05F7                     u185_20:	
  5416  05F7                     i1l2156:	
  5417                           
  5418                           ;debug.c: 442:     {;debug.c: 443:         count++;
  5419  05F7  3001               	movlw	1
  5420  05F8  07CA               	addwf	_count,f
  5421  05F9  1803               	skipnc
  5422  05FA  0ACB               	incf	_count+1,f
  5423  05FB  3000               	movlw	0
  5424  05FC  07CB               	addwf	_count+1,f
  5425                           
  5426                           ;debug.c: 444:     }
  5427  05FD  2E1F               	goto	i1l338
  5428  05FE                     i1l335:	
  5429                           ;debug.c: 445:     else if (PORTAbits.RA5)
  5430                           
  5431  05FE  1E85               	btfss	5,5	;volatile
  5432  05FF  2E01               	goto	u186_21
  5433  0600  2E02               	goto	u186_20
  5434  0601                     u186_21:	
  5435  0601  2E1F               	goto	i1l338
  5436  0602                     u186_20:	
  5437  0602                     i1l2158:	
  5438                           
  5439                           ;debug.c: 446:     {;debug.c: 447:         Conteggio(count, motorcycle, car, truck, 3);
  5440  0602  084B               	movf	_count+1,w
  5441  0603  00F1               	movwf	Conteggio@_count+1
  5442  0604  084A               	movf	_count,w
  5443  0605  00F0               	movwf	Conteggio@_count
  5444  0606  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  5445  0607  00F9               	movwf	??_conteggioVeicoli
  5446  0608  0879               	movf	??_conteggioVeicoli,w
  5447  0609  00F2               	movwf	Conteggio@_motorcycle
  5448  060A  3056               	movlw	(low (_car| 0))& (0+255)
  5449  060B  00FA               	movwf	??_conteggioVeicoli+1
  5450  060C  087A               	movf	??_conteggioVeicoli+1,w
  5451  060D  00F3               	movwf	Conteggio@_car
  5452  060E  30E9               	movlw	(low (_truck| 0))& (0+255)
  5453  060F  00FB               	movwf	??_conteggioVeicoli+2
  5454  0610  087B               	movf	??_conteggioVeicoli+2,w
  5455  0611  00F4               	movwf	Conteggio@_truck
  5456  0612  3003               	movlw	3
  5457  0613  00FC               	movwf	??_conteggioVeicoli+3
  5458  0614  087C               	movf	??_conteggioVeicoli+3,w
  5459  0615  00F5               	movwf	Conteggio@index
  5460  0616  120A  158A  25F6  120A  118A  	fcall	_Conteggio
  5461  061B                     i1l2160:	
  5462                           
  5463                           ;debug.c: 448:         count = 0;
  5464  061B  1283               	bcf	3,5	;RP0=0, select bank0
  5465  061C  1303               	bcf	3,6	;RP1=0, select bank0
  5466  061D  01CA               	clrf	_count
  5467  061E  01CB               	clrf	_count+1
  5468  061F                     i1l338:	
  5469  061F  0008               	return
  5470  0620                     __end_of_conteggioVeicoli:	
  5471                           
  5472                           	psect	text21
  5473  0DF6                     __ptext21:	
  5474 ;; *************** function _Conteggio *****************
  5475 ;; Defined at:
  5476 ;;		line 77 in file "./CustomLib/TrafficLight.h"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  _count          2    0[COMMON] unsigned int 
  5479 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5480 ;;		 -> motorcycle(4), 
  5481 ;;  _car            1    3[COMMON] PTR unsigned char 
  5482 ;;		 -> car(4), 
  5483 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5484 ;;		 -> truck(4), 
  5485 ;;  index           1    5[COMMON] unsigned char 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;		None
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  1    wreg      void 
  5490 ;; Registers used:
  5491 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5497 ;;      Params:         6       0       0       0       0
  5498 ;;      Locals:         0       0       0       0       0
  5499 ;;      Temps:          3       0       0       0       0
  5500 ;;      Totals:         9       0       0       0       0
  5501 ;;Total ram usage:        9 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_conteggioVeicoli
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           
  5511                           ;psect for function _Conteggio
  5512  0DF6                     _Conteggio:	
  5513  0DF6                     i1l1836:	
  5514                           ;incstack = 0
  5515                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5516                           
  5517                           
  5518                           ;./CustomLib/TrafficLight.h: 77: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 78: {;./CustomLib/TrafficLight.h: 79:         if (_count >= 500)
  5519  0DF6  3001               	movlw	1
  5520  0DF7  0271               	subwf	Conteggio@_count+1,w
  5521  0DF8  30F4               	movlw	244
  5522  0DF9  1903               	skipnz
  5523  0DFA  0270               	subwf	Conteggio@_count,w
  5524  0DFB  1C03               	skipc
  5525  0DFC  2DFE               	goto	u129_21
  5526  0DFD  2DFF               	goto	u129_20
  5527  0DFE                     u129_21:	
  5528  0DFE  2E0F               	goto	i1l1840
  5529  0DFF                     u129_20:	
  5530  0DFF                     i1l1838:	
  5531                           
  5532                           ;./CustomLib/TrafficLight.h: 80:         {;./CustomLib/TrafficLight.h: 81:             _
      +                          motorcycle[index]=_motorcycle[index]+1;
  5533  0DFF  0875               	movf	Conteggio@index,w
  5534  0E00  0772               	addwf	Conteggio@_motorcycle,w
  5535  0E01  00F6               	movwf	??_Conteggio
  5536  0E02  0876               	movf	??_Conteggio,w
  5537  0E03  0084               	movwf	4
  5538  0E04  1383               	bcf	3,7	;select IRP bank0
  5539  0E05  0800               	movf	0,w
  5540  0E06  3E01               	addlw	1
  5541  0E07  00F7               	movwf	??_Conteggio+1
  5542  0E08  0875               	movf	Conteggio@index,w
  5543  0E09  0772               	addwf	Conteggio@_motorcycle,w
  5544  0E0A  00F8               	movwf	??_Conteggio+2
  5545  0E0B  0878               	movf	??_Conteggio+2,w
  5546  0E0C  0084               	movwf	4
  5547  0E0D  0877               	movf	??_Conteggio+1,w
  5548  0E0E  0080               	movwf	0
  5549  0E0F                     i1l1840:	
  5550                           
  5551                           ;./CustomLib/TrafficLight.h: 83:         if (_count >= 1500)
  5552  0E0F  3005               	movlw	5
  5553  0E10  0271               	subwf	Conteggio@_count+1,w
  5554  0E11  30DC               	movlw	220
  5555  0E12  1903               	skipnz
  5556  0E13  0270               	subwf	Conteggio@_count,w
  5557  0E14  1C03               	skipc
  5558  0E15  2E17               	goto	u130_21
  5559  0E16  2E18               	goto	u130_20
  5560  0E17                     u130_21:	
  5561  0E17  2E28               	goto	i1l1844
  5562  0E18                     u130_20:	
  5563  0E18                     i1l1842:	
  5564                           
  5565                           ;./CustomLib/TrafficLight.h: 84:         {;./CustomLib/TrafficLight.h: 85:             _
      +                          car[index]=_car[index]+1;
  5566  0E18  0875               	movf	Conteggio@index,w
  5567  0E19  0773               	addwf	Conteggio@_car,w
  5568  0E1A  00F6               	movwf	??_Conteggio
  5569  0E1B  0876               	movf	??_Conteggio,w
  5570  0E1C  0084               	movwf	4
  5571  0E1D  1383               	bcf	3,7	;select IRP bank0
  5572  0E1E  0800               	movf	0,w
  5573  0E1F  3E01               	addlw	1
  5574  0E20  00F7               	movwf	??_Conteggio+1
  5575  0E21  0875               	movf	Conteggio@index,w
  5576  0E22  0773               	addwf	Conteggio@_car,w
  5577  0E23  00F8               	movwf	??_Conteggio+2
  5578  0E24  0878               	movf	??_Conteggio+2,w
  5579  0E25  0084               	movwf	4
  5580  0E26  0877               	movf	??_Conteggio+1,w
  5581  0E27  0080               	movwf	0
  5582  0E28                     i1l1844:	
  5583                           
  5584                           ;./CustomLib/TrafficLight.h: 87:         if (_count >= 3000)
  5585  0E28  300B               	movlw	11
  5586  0E29  0271               	subwf	Conteggio@_count+1,w
  5587  0E2A  30B8               	movlw	184
  5588  0E2B  1903               	skipnz
  5589  0E2C  0270               	subwf	Conteggio@_count,w
  5590  0E2D  1C03               	skipc
  5591  0E2E  2E30               	goto	u131_21
  5592  0E2F  2E31               	goto	u131_20
  5593  0E30                     u131_21:	
  5594  0E30  2E41               	goto	i1l161
  5595  0E31                     u131_20:	
  5596  0E31                     i1l1846:	
  5597                           
  5598                           ;./CustomLib/TrafficLight.h: 88:         {;./CustomLib/TrafficLight.h: 89:             _
      +                          truck[index]=_truck[index]+1;
  5599  0E31  0875               	movf	Conteggio@index,w
  5600  0E32  0774               	addwf	Conteggio@_truck,w
  5601  0E33  00F6               	movwf	??_Conteggio
  5602  0E34  0876               	movf	??_Conteggio,w
  5603  0E35  0084               	movwf	4
  5604  0E36  1383               	bcf	3,7	;select IRP bank0
  5605  0E37  0800               	movf	0,w
  5606  0E38  3E01               	addlw	1
  5607  0E39  00F7               	movwf	??_Conteggio+1
  5608  0E3A  0875               	movf	Conteggio@index,w
  5609  0E3B  0774               	addwf	Conteggio@_truck,w
  5610  0E3C  00F8               	movwf	??_Conteggio+2
  5611  0E3D  0878               	movf	??_Conteggio+2,w
  5612  0E3E  0084               	movwf	4
  5613  0E3F  0877               	movf	??_Conteggio+1,w
  5614  0E40  0080               	movwf	0
  5615  0E41                     i1l161:	
  5616  0E41  0008               	return
  5617  0E42                     __end_of_Conteggio:	
  5618                           
  5619                           	psect	text22
  5620  0C83                     __ptext22:	
  5621 ;; *************** function _UART_Read *****************
  5622 ;; Defined at:
  5623 ;;		line 380 in file "debug.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      unsigned char 
  5630 ;; Registers used:
  5631 ;;		wreg
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5637 ;;      Params:         0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0
  5640 ;;      Totals:         0       0       0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; This function calls:
  5644 ;;		Nothing
  5645 ;; This function is called by:
  5646 ;;		_ISR
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           
  5651                           ;psect for function _UART_Read
  5652  0C83                     _UART_Read:	
  5653  0C83                     i1l2124:	
  5654                           ;incstack = 0
  5655                           ; Regs used in _UART_Read: [wreg]
  5656                           
  5657  0C83                     i1l312:	
  5658                           ;debug.c: 383:         ;
  5659                           
  5660                           
  5661                           ;debug.c: 382:     while (!RCIF)
  5662  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  5663  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  5664  0C85  1E8C               	btfss	12,5	;volatile
  5665  0C86  2C88               	goto	u178_21
  5666  0C87  2C89               	goto	u178_20
  5667  0C88                     u178_21:	
  5668  0C88  2C83               	goto	i1l312
  5669  0C89                     u178_20:	
  5670  0C89                     i1l314:	
  5671                           
  5672                           ;debug.c: 384:     RCIF = 0;
  5673  0C89  128C               	bcf	12,5	;volatile
  5674  0C8A                     i1l2126:	
  5675                           
  5676                           ;debug.c: 385:     return RCREG;
  5677  0C8A  081A               	movf	26,w	;volatile
  5678  0C8B                     i1l315:	
  5679  0C8B  0008               	return
  5680  0C8C                     __end_of_UART_Read:	
  5681  007E                     btemp	set	126	;btemp
  5682  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    11
    Data        32
    BSS         147
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     42      66
    BANK1            80      0      77
    BANK3            96     17      94
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[16] size(2) Largest target is 6
		 -> s15(BANK3[6]), s14(BANK3[6]), s13(BANK3[6]), s12(BANK3[6]), 
		 -> s11(BANK3[6]), s10(BANK1[6]), s9(BANK1[6]), s8(BANK1[6]), 
		 -> s7(BANK1[6]), s6(BANK1[6]), s5(BANK1[6]), s4(BANK1[6]), 
		 -> s3(BANK1[6]), s2(BANK1[6]), s1(BANK1[6]), s0(BANK1[6]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK3[15]), 

    ChangeTrafficLight@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    ChangeTrafficLight@_n_semafori	PTR unsigned char  size(1) Largest target is 1
		 -> id_semaforo(BANK0[1]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    UpdateTimes@_to_update	PTR struct . size(1) Largest target is 7
		 -> to_update(BANK1[7]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _GetDigits->___awdiv
    ___awdiv->___awmod
    _ChangeTrafficLight->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   18378
                                             32 BANK0     10    10      0
                                              0 BANK3     17    17      0
                           _ADC_Read
                 _ChangeTrafficLight
                          _GetDigits
                            _GetTime
                   _SetDefaultTimers
                         _SetDisplay
                          _UART_Init
                        _UpdateTimes
                            ___awmod
                             ___bmul
                           _init_ADC
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    2447
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    3738
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1006
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     376
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         15    14      1     479
                                              4 BANK0     15    14      1
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _SetDisplay                                           4     1      3    1204
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7     899
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetTime                                              8     6      2     474
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    3204
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ChangeTrafficLight                                   8     7      1    1856
                                             11 BANK0      8     7      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1513
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0    1850
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     4     4      0    1850
                                              9 COMMON     4     4      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6    1850
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _ChangeTrafficLight
     ___awmod
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _GetTime
   _SetDefaultTimers
   _SetDisplay
   _UART_Init
     ___aldiv
   _UpdateTimes
   ___awmod
   ___bmul
   _init_ADC
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     11      5E       9       97.9%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      FB      12        0.0%
ABS                  0      0      FB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun 28 11:35:07 2020

                            pc 0002                 ___bmul@product 0026                    __CFG_CP$OFF 0000  
                           l91 0FFF                             l77 0DBB                   ___awdiv@sign 0031  
                           _s0 00E3                             _s1 00DD                             _s2 00D7  
                           _s3 00D1                             _s4 00CB                             _s5 00C5  
                           _s6 00BF                             _s7 00B9                             _s8 00B3  
                           _s9 00AD                             fsr 0004            ___wmul@multiplicand 0026  
               _GetDigits$1159 0039                    __CFG_LVP$ON 0000                            l122 0549  
                          l140 0EE4                            l116 04F8                            l300 0C8F  
                          l133 0E92                            l125 0571                            l302 0C93  
                          l143 07FB                            l303 0C96                            l136 0E96  
                          l320 0D86                            l155 074C                            l323 0CD1  
                          l261 032D                            l245 0267                            l255 015E  
                          l247 008E                            l600 0F97                            l281 049D  
                          l434 0D3D                            l274 0407                            l291 0D22  
                          l460 0CE8                            l436 0D55                            l509 06BC  
                          l294 0D2E                            l288 0CA9                            l297 0DF5  
                          l587 07B5                            l499 0634                   __CFG_CPD$OFF 0000  
                          _ISR 0EE5                            _s10 00A7                            _s11 01B7  
                          _s12 01B1                            _s13 01AB                            _s14 01A5  
                          _s15 019F                            _car 0056                            _map 0D87  
                          fsr0 0004                            indf 0000                   ___awmod@sign 002A  
                 __CFG_FOSC$HS 0000                           ?_ISR 0070                    main@colorId 01E0  
                         l3000 0281                           l3010 02C4                           l3002 0296  
                         l3012 02CC                           l3004 029E                           l3030 037D  
                         l3022 0333                           l3014 02FF                           l3006 02AA  
                         l3032 0381                           l3040 03A0                           l3024 0337  
                         l3016 0309                           l3008 02B2                           l3050 041D  
                         l3034 0387                           l3026 033F                           l3042 03E2  
                         l3018 0326                           l3060 0468                           l3044 03EA  
                         l3036 0388                           l3028 0377                           l3070 04A1  
                         l3054 041D                           l3046 03EF                           l3062 047B  
                         l3038 0394                           l2600 0D51                           l2520 04BC  
                         l3072 04A5                           l3064 0493                           l3056 044F  
                         l3048 03F4                           l2610 0638                           l2522 04C9  
                         l3066 0497                           l2700 0F54                           l2620 065A  
                         l2612 0643                           l2604 0620                           l2540 04E5  
                         l2532 04CD                           l2524 04CA                           l3068 049B  
                         l2710 0F6C                           l2702 0F5A                           l2630 0694  
                         l2622 0667                           l2614 0647                           l2606 0623  
                         l2550 0507                           l2542 04EB                           l2526 04CB  
                         l2518 04AD                           l3174 025F                           l2720 0F8E  
                         l2712 0F76                           l2704 0F5D                           l2800 0725  
                         l2640 06B4                           l2632 0695                           l2624 066B  
                         l2616 064F                           l2608 0627                           l2560 051E  
                         l2552 050D                           l2544 04FE                           l3176 0470  
                         l2722 0F93                           l2714 0F7C                           l2706 0F64  
                         l2650 0759                           l2730 0F9B                           l3178 072D  
                         l2802 0738                           l2634 069E                           l2626 0674  
                         l2618 0657                           l2570 053C                           l2554 051A  
                         l2546 0506                           l2538 04D1                           l2716 0F83  
                         l2708 0F68                           l2660 076A                           l2652 075B  
                         l2644 074D                           l2732 0FD6                           l2804 073C  
                         l2628 0686                           l2636 06A4                           l2820 0CA2  
                         l2580 0563                           l2572 054F                           l2900 0050  
                         l2718 0F89                           l2670 0782                           l2662 0770  
                         l2654 075F                           l2646 0750                           l2734 0FE9  
                         l2806 0742                           l2638 06A9                           l2830 0DF4  
                         l2822 0DBC                           l2750 0E51                           l2742 0E46  
                         l2814 0C97                           l2590 0D2F                           l2726 0D87  
                         l2582 0570                           l2574 055C                           l2566 0522  
                         l2910 0070                           l2902 0052                           l2760 0E96  
                         l2672 0793                           l2664 0773                           l2680 07A7  
                         l2656 0764                           l2648 0754                           l2808 0746  
                         l2824 0DC4                           l2752 0E7E                           l2744 0E50  
                         l2736 0E45                           l2816 0C9B                           l2592 0D33  
                         l2568 0536                           l2840 0D6D                           l2832 0D59  
                         l2912 0087                           l2904 0054                           l2850 0D18  
                         l2690 0F40                           l2762 0EBF                           l2682 07AC  
                         l2674 0799                           l2666 077A                           l2658 0768  
                         l2770 07D0                           l2826 0DF2                           l2754 0E82  
                         l2818 0C9E                           l2594 0D37                           l2578 055D  
                         l2586 0C8F                           l2842 0D76                           l2834 0D6C  
                         l2922 00A2                           l2906 0060                           l2852 0D1F  
                         l2692 0F44                           l2764 0EC8                           l2684 07B1  
                         l2676 079A                           l2668 077E                           l2772 07E1  
                         l2780 06BD                           l2860 0CCF                           l2828 0DF3  
                         l2756 0E88                           l2596 0D44                           l2588 0C94  
                         l2844 0D7C                           l2940 0147                           l2924 0118  
                         l2916 0090                           l2908 0065                           l2854 0D26  
                         l2694 0F49                           l2678 07A1                           l2774 07EF  
                         l2766 07B9                           l2758 0E8C                           l2870 0CE0  
                         l2862 0CD5                           l2598 0D4B                           l2846 0D80  
                         l2950 0157                           l2934 0125                           l2918 0094  
                         ?_map 0034                           l2848 0D0C                           l2696 0F4B  
                         l2688 0F3D                           l2776 07F7                           l2768 07C8  
                         l2792 06C2                           l2872 0CE7                           l2864 0CD6  
                         l2960 0227                           l2952 0160                           l2936 0134  
                         l2928 0121                           l2698 0F4F                           l2794 06E3  
                         l2786 06C0                           l2858 0CC0                           l2866 0CDA  
                         l2962 022A                           l2954 01F4                           l2946 014A  
                         l2938 013A                           l2890 0045                           l2796 0704  
                         l2868 0CDE                           l2972 023F                           l2956 0205  
                         l2948 014F                           l2892 0046                           l2990 0271  
                         l2974 0245                           l2966 0231                           l2958 0216  
                         l2982 0252                           l2894 0048                           l2992 0275  
                         l2984 026D                           l2976 0248                           l2968 0236  
                         l2896 004A                           l2888 003F                           l2994 0277  
                         l2986 026E                           l2978 024E                           l2898 004C  
                         l2996 027A                           l2988 026F                           u3000 0387  
                         u3001 0386                           u3010 03EA                           u3011 03E9  
                         u2300 054F                           u3020 03F4                           u2301 054E  
                         u3021 03F3                           u3030 0497                           u3031 0496  
                         u2400 0657                           u2320 0570                           u3040 049B  
                         u2401 0656                           u2321 056F                           u3041 049A  
                         u2314 0555                           u2250 04F8                           u2330 0C93  
                         u3050 04A1                           u2315 0553                           u2251 04F7  
                         u2235 04BF                           u2331 0C92                           u3051 04A0  
                         u2500 0770                           u2420 066B                           u2340 0D37  
                         u2260 04FE                           u2244 04DD                           u3060 04A5  
                         u2501 076F                           u2421 066A                           u2341 0D36  
                         u2325 056C                           u2261 04FD                           u2245 04DB  
                         u3061 04A4                           u2270 051A                           u2415 065C  
                         u2271 0519                           u2255 04F4                           u2600 0F5A  
                         u2520 0782                           u2440 0686                           u2601 0F59  
                         u2521 0781                           u2441 0685                           u2370 0D51  
                         u2290 0549                           u2515 0774                           u2435 066D  
                         u2371 0D50                           u2355 0D3E                           u2291 0548  
                         u2275 0516                           u2620 0F6C                           u2700 0EBF  
                         u2540 0793                           u2460 06A4                           u2380 0627  
                         u2284 052E                           u2621 0F6B                           u2701 0EBE  
                         u2541 0792                           u2461 06A3                           u2445 0682  
                         u2381 0626                           u2365 0D45                           u2285 052C  
                         u2630 0F76                           u2710 0EC8                           u2470 06A9  
                         u2390 0638                           u2631 0F75                           u2615 0F5E  
                         u2711 0EC7                           u2535 0783                           u2471 06A8  
                         u2455 0696                           u2391 0637                           u3087 0CA6  
                         u2295 0545                           u2560 07A7                           u2480 0754  
                         u2800 0CE7                           u3097 0D1C                           u2561 07A6  
                         u2545 078F                           u2481 0753                           u2801 0CE6  
                         u2650 0F89                           u2570 07AC                           u2490 075F  
                         u2730 0742                           u2651 0F88                           u2635 0F72  
                         u2571 07AB                           u2555 079B                           u2491 075E  
                         u2731 0741                           u2660 0F8E                           u2580 0F44  
                         u2740 074C                           u2900 0245                           u2820 008D  
                         u2661 0F8D                           u2645 0F7D                           u2581 0F43  
                         u2725 07D6                           u2741 074B                           u2901 0244  
                         u2821 008C                           u2590 0F4F                           u2750 0DD3  
                         u2670 0E50                           u2910 024E                           u2830 00A1  
                         u2591 0F4E                           u2671 0E4F                           u2911 024D  
                         u2831 00A0                           u2680 0E88                           u2760 0D86  
                         u2920 026D                           u2681 0E87                           u2761 0D85  
                         u2921 026C                           u2690 0E92                           u2930 0275  
                         u2755 0DCE                           u2691 0E91                           u2931 0274  
                         u2835 009D                           u2780 0D26                           u2940 0280  
                         u2844 00BE                           u2781 0D25                           u2941 027F  
                         u2845 00BC                           u2790 0CDA                           u2870 0147  
                         u2854 00E6                           u2775 0D0F                           u2791 0CD9  
                         u2871 0146                           u2855 00E4                           u2960 02CC  
                         u2880 015D                           u2864 010E                           u2961 02CB  
                         u2881 015C                           u2865 010C                           u2970 0333  
                         u2890 0230                           u2971 0332                           u2955 02B7  
                         u2891 022F                           u2875 0143                           u2980 0337  
                         _RCIF 0065                           u2981 0336                           u2990 0377  
                         u2991 0376                           _TMR0 0001                           _TXIF 0064  
                 __CFG_WRT$OFF 0000                           _disp 0050                           _main 003F  
                         _time 004E                           map@x 0034                           btemp 007E  
             __end_of_ADC_Read 0D2F                  __CFG_BOREN$ON 0000                    main@umidita 01DE  
                         start 0010                __end_of_GetTime 07FC              ___bmul@multiplier 0027  
                        ??_ISR 0020      __size_of_conteggioVeicoli 00AE                          ??_map 003E  
              __end_of___aldiv 06BD                          ?_main 0070                __end_of___awdiv 07B6  
                __CFG_WDTE$OFF 0000                __end_of___awmod 0F98                ___awdiv@divisor 002B  
                        _T1CON 0010                          i1l312 0C83                          i1l161 0E41  
                        i1l314 0C89                          i1l315 0C8B                          i1l332 05D2  
                        i1l326 057F                          i1l335 05FE                          i1l329 05A8  
                        i1l338 061F                          i1l348 0F34                ___awdiv@counter 0030  
                        _RCREG 001A           UpdateTimes@_semafori 0030                          _TMR1H 000F  
                        _TMR1L 000E                          _SPBRG 0099                          _PORTD 0008  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089                          _TXREG 0019  
           _ChangeTrafficLight 0E93                  __CFG_PWRTE$ON 0000             __size_of_UART_Init 003A  
           __size_of_UART_Read 0009                __end_of_display 0811                          _count 004A  
                        _unita 0061                          main@i 01EC                          _truck 00E9  
          ?_ChangeTrafficLight 002B                          pclath 000A                          status 0003  
                        wtemp0 007E                __initialization 0013                   __end_of_main 04AA  
         ??_ChangeTrafficLight 002C             __size_of_GetDigits 0068                         ??_main 0040  
            SetDefaultTimers@i 0033              SetDefaultTimers@l 0032             __size_of_BuildByte 00C8  
                   _SetDisplay 0CBD                         _ADCON0 001F                         _ADCON1 009F  
           __size_of_Conteggio 004C                         _ADRESH 001E                         _ADRESL 009E  
             ___awdiv@dividend 002D                         i1l2130 0572                         i1l2124 0C83  
                       i1l2140 05A1                         i1l2132 0578                         i1l2126 0C8A  
                       i1l2150 05D6                         i1l2142 05AC                         i1l2134 0583  
                       i1l2160 061B                         i1l2152 05EF                         i1l2144 05C3  
                       i1l2136 0599                         i1l2400 0EF0                         i1l2154 05F3  
                       i1l2146 05C7                         i1l2138 059D                         i1l2410 0F0C  
                       i1l2402 0EF2                         i1l2156 05F7                         i1l2148 05CB  
                       i1l2420 0F1B                         i1l2404 0EF6                         i1l2412 0F0D  
                       i1l2158 0602                         i1l2430 0F2B                         i1l2422 0F1F  
                       i1l2414 0F11                         i1l2406 0EFA                         i1l2432 0F2C  
                       i1l2424 0F20                         i1l2416 0F12                         i1l2408 0F08  
                       i1l2434 0F30                         i1l2426 0F24                         i1l2418 0F17  
                       i1l2436 0F32                         i1l2428 0F2A                         u130_20 0E18  
                       i1l1840 0E0F                         u130_21 0E17                         i1l1842 0E18  
                       i1l2394 0EE5                         i1l1844 0E28                         i1l1836 0DF6  
                       i1l2396 0EE9                         i1l1846 0E31                         i1l1838 0DFF  
                       i1l2398 0EED                         u131_20 0E31                         u131_21 0E30  
                       u220_20 0F11                         u220_21 0F10                         u221_20 0F1F  
                       u221_21 0F1E                         u222_20 0F2A                         u222_21 0F29  
                       u216_20 0EE9                         u216_21 0EE8                         u129_20 0DFF  
                       u217_20 0EED                         _INTCON 000B                         u129_21 0DFE  
                       u217_21 0EEC                         u218_20 0EF6                         u218_21 0EF5  
                       u219_20 0EFA                         u219_21 0EF9                         u180_20 0583  
                       u180_21 0582                         u181_20 05A1                         u181_21 05A0  
                       u182_20 05AC                         u182_21 05AB                         u183_20 05CB  
                       u183_21 05CA                         u184_20 05D6                         u184_21 05D5  
                       u185_20 05F7                         u185_21 05F6                         u178_20 0C89  
                       u186_20 0602                         u178_21 0C88                         u186_21 0601  
                       u179_20 0578                         u179_21 0577                         _TMR0IF 005A  
                       _TMR1IF 0060                      ??_GetTime 0026  ChangeTrafficLight@_n_semafori 002B  
                 ?_UART_TxChar 0070              __end_of_UART_Init 0DF6              __end_of_UART_Read 0C8C  
                       ___bmul 0CD2                      ??___aldiv 002C          UpdateTimes@_to_update 0024  
              GetTime@shortInt 0029                         ___wmul 0D2F                      ??___awdiv 002F  
                       _decine 0060                      ??___awmod 0028               __end_of_init_ADC 0CAA  
                       _cycled 0052               ___awdiv@quotient 0032                ___awmod@divisor 0024  
              ___awmod@counter 0029               __end_of_sendByte 0D87                GetDigits@decine 0034  
                main@pressione 01DF                      ?_ADC_Read 0024                         saved_w 007E  
      __end_of__initialization 003B              __end_of_GetDigits 1000                  ??_UpdateTimes 0025  
    __size_of_SetDefaultTimers 0090            ___bmul@multiplicand 0024                 __pcstackCOMMON 0070  
            __end_of_BuildByte 0572                   __pidataBANK3 0CE9               _conteggioVeicoli 0572  
            __end_of_Conteggio 0E42                     ??_ADC_Read 0026         SetDefaultTimers@giallo 0028  
                  ?_SetDisplay 0024                  GetDigits@Time 0036           _dataFromGatewayIndex 004D  
         _timerReadFromGateway 004C                     __pbssBANK0 004A                     __pbssBANK1 00A0  
                   __pbssBANK3 0190                     __pmaintext 003F                        ?___bmul 0024  
                      ?___wmul 0024            __end_of_UpdateTimes 0E93                  sendByte@byte0 003D  
                sendByte@byte1 0038                     __pintentry 0004                     __stringtab 0800  
                    ?_init_ADC 0070                        _GetTime 07B6                BuildByte@valore 0025  
              BuildByte@txByte 0029        GetTime@_dataFromGateway 0024                      ?_sendByte 0038  
         __size_of_UART_TxChar 000B                        ___aldiv 0620                __size_of___bmul 0017  
                      ___awdiv 074D                        ___awmod 0F3D            __size_of_SetDisplay 0015  
              __size_of___wmul 0027                        __ptext1 0D56                        __ptext2 0C8C  
                      __ptext3 04AA                        __ptext4 0D87                        __ptext5 0D2F  
                      __ptext6 0C97                        __ptext7 0CD2                        __ptext8 0E42  
                      __ptext9 0DBC                 main@semaforoId 01E4                        _comando 004F  
                      _display 0806                   __size_of_ISR 0058                   __size_of_map 0035  
             ___awmod@dividend 0026               ___aldiv@dividend 0028           BuildByte@sommaColumn 002F  
                      clrloop0 0C7C                        main@tmp 01E3           end_of_initialization 003B  
                   ??_init_ADC 0024                 main@lux_select 01EB                    _UpdateTimes 0E42  
                   ??_sendByte 003A               _SetDefaultTimers 06BD                      _RCSTAbits 0018  
             ___aldiv@quotient 002F    __size_of_ChangeTrafficLight 0052                     _motorcycle 005A  
                    _UART_Init 0DBC                      _UART_Read 0C83                      _PORTAbits 0005  
                    _PORTBbits 0006                   SetDisplay@d1 0027                   SetDisplay@d2 0024  
                 SetDisplay@d3 0025                      _TRISCbits 0087              __size_of_ADC_Read 0026  
     __end_of_conteggioVeicoli 0620                     map@out_max 003C                     map@out_min 003A  
                    _TXSTAbits 0098                      _GetDigits 0F98                 __end_of___bmul 0CE9  
               __end_of___wmul 0D56                     ?_UART_Init 0033                     ?_UART_Read 0070  
                    _BuildByte 04AA                      _Conteggio 0DF6              BuildByte@sommaRow 002E  
          start_initialization 0013                    __end_of_ISR 0F3D                   ??_SetDisplay 0027  
                  __end_of_map 0DBC                     ?_GetDigits 0034                       ??___bmul 0025  
               ADC_Read@canale 0027                       ??___wmul 0028                     init_fetch0 0CAA  
                  __pdataBANK3 01BD             __end_of_SetDisplay 0CD2                     ?_BuildByte 0024  
               GetDigits@unita 0035                     ?_Conteggio 0070                    __pbssCOMMON 007D  
                    ___latbits 0002                  __pcstackBANK0 0020                  __pcstackBANK3 01DD  
                     ?_GetTime 0024          SetDefaultTimers@verde 0026          SetDefaultTimers@rosso 0024  
            __size_of_init_ADC 0013    ChangeTrafficLight@_semafori 0032                      _centinaia 005F  
            __size_of_sendByte 0031                       ?___aldiv 0024                       ?___awdiv 002B  
                     ?___awmod 0024                    ??_UART_Init 0035                    ??_UART_Read 0070  
               BuildByte@i_332 0036                      __pstrings 0800                 BuildByte@y_333 0032  
               sendByte@valore 0039                 sendByte@txByte 003E                 BuildByte@byte0 0028  
               BuildByte@byte1 0024       __end_of_SetDefaultTimers 074D                       _ADC_Read 0D09  
                    _count_lux 007D                  UART_TxChar@ch 0024                    _id_semaforo 005E  
              ___aldiv@divisor 0024              interrupt_function 0004                ___aldiv@counter 002D  
               ___wmul@product 0028                   ?_UpdateTimes 0024                      clear_ram0 0C7B  
                     _PIE1bits 008C                  ??_UART_TxChar 0024                    ??_GetDigits 0038  
                     _GO_nDONE 00FA              UART_Init@baudrate 0033                      _to_update 00A0  
                  ??_BuildByte 0026                      map@in_max 0038                      map@in_min 0036  
                  __stringbase 0805                      main@i_443 01E9                      main@i_444 01E5  
                    main@i_446 01E6                      main@i_447 01E7                    ??_Conteggio 0076  
            ___wmul@multiplier 0024                      main@index 01E8                   GetTime@index 0028  
            ?_conteggioVeicoli 0070                   _secondPassed 0053             ??_conteggioVeicoli 0079  
             __size_of_GetTime 0046                       _Semafori 01BD             GetDigits@centinaia 003B  
   __end_of_ChangeTrafficLight 0EE5                    _readGateway 0054               __size_of___aldiv 009D  
          __end_of_UART_TxChar 0C97               __size_of___awdiv 0069               __size_of___awmod 005B  
           __end_of__stringtab 0806                      sendByte@i 003F                       __ptext10 0620  
                     __ptext11 0CBD                       __ptext20 0572                       __ptext12 06BD  
                     __ptext21 0DF6                       __ptext13 07B6                       __ptext22 0C83  
                     __ptext14 0F98                       __ptext15 074D                       __ptext16 0E93  
                     __ptext17 0F3D                       __ptext18 0D09                       __ptext19 0EE5  
                     _init_ADC 0C97                  __size_of_main 046B                _dataFromGateway 0190  
                     _old_disp 0051                       _sendByte 0D56                       main@temp 01DD  
                     main@time 01E1                     _INTCONbits 000B                       init_ram0 0CAE  
         Conteggio@_motorcycle 0072                       intlevel1 0000                _readGatewayDone 0055  
                    stringcode 0800                    _UART_TxChar 0C8C           __size_of_UpdateTimes 0051  
                   GetTime@tmp 002A                     _OPTION_REG 0081                SetDisplay@value 0026  
                     stringdir 0800                       stringtab 0800                   UpdateTimes@i 0032  
                 UpdateTimes@l 0031              ?_SetDefaultTimers 0024                   ___aldiv@sign 002E  
           ??_SetDefaultTimers 002B                     BuildByte@i 0034                     BuildByte@y 0030  
    SetDefaultTimers@_semafori 002A                Conteggio@_count 0070                  Conteggio@_car 0073  
              Conteggio@_truck 0074                 Conteggio@index 0075  
