

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jun 26 10:17:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK3
   199  0CFE                     __pidataBANK3:	
   200                           
   201                           ;initializer for _Semafori
   202  0CFE  34E3               	retlw	low (_s0| 0)
   203  0CFF  3400               	retlw	high (_s0| 0)
   204  0D00  34DD               	retlw	low (_s1| 0)
   205  0D01  3400               	retlw	high (_s1| 0)
   206  0D02  34D7               	retlw	low (_s2| 0)
   207  0D03  3400               	retlw	high (_s2| 0)
   208  0D04  34D1               	retlw	low (_s3| 0)
   209  0D05  3400               	retlw	high (_s3| 0)
   210  0D06  34CB               	retlw	low (_s4| 0)
   211  0D07  3400               	retlw	high (_s4| 0)
   212  0D08  34C5               	retlw	low (_s5| 0)
   213  0D09  3400               	retlw	high (_s5| 0)
   214  0D0A  34BF               	retlw	low (_s6| 0)
   215  0D0B  3400               	retlw	high (_s6| 0)
   216  0D0C  34B9               	retlw	low (_s7| 0)
   217  0D0D  3400               	retlw	high (_s7| 0)
   218  0D0E  34B3               	retlw	low (_s8| 0)
   219  0D0F  3400               	retlw	high (_s8| 0)
   220  0D10  34AD               	retlw	low (_s9| 0)
   221  0D11  3400               	retlw	high (_s9| 0)
   222  0D12  34A7               	retlw	low (_s10| 0)
   223  0D13  3400               	retlw	high (_s10| 0)
   224  0D14  34B7               	retlw	low (_s11| (0+256))
   225  0D15  3401               	retlw	high (_s11| (0+256))
   226  0D16  34B1               	retlw	low (_s12| (0+256))
   227  0D17  3401               	retlw	high (_s12| (0+256))
   228  0D18  34AB               	retlw	low (_s13| (0+256))
   229  0D19  3401               	retlw	high (_s13| (0+256))
   230  0D1A  34A5               	retlw	low (_s14| (0+256))
   231  0D1B  3401               	retlw	high (_s14| (0+256))
   232  0D1C  349F               	retlw	low (_s15| (0+256))
   233  0D1D  3401               	retlw	high (_s15| (0+256))
   234                           
   235                           	psect	strings
   236  0800                     __pstrings:	
   237  0800                     stringtab:	
   238  0800                     __stringtab:	
   239  0800                     stringcode:	
   240                           ;	String table - string pointers are 1 byte each
   241                           
   242  0800                     stringdir:	
   243  0800  3008               	movlw	high stringdir
   244  0801  008A               	movwf	10
   245  0802  0804               	movf	4,w
   246  0803  0A84               	incf	4,f
   247  0804  0782               	addwf	2,f
   248  0805                     __stringbase:	
   249  0805  3400               	retlw	0
   250  0806                     __end_of__stringtab:	
   251  0806                     _display:	
   252  0806  343F               	retlw	63
   253  0807  3406               	retlw	6
   254  0808  345B               	retlw	91
   255  0809  344F               	retlw	79
   256  080A  3466               	retlw	102
   257  080B  346D               	retlw	109
   258  080C  347D               	retlw	125
   259  080D  3407               	retlw	7
   260  080E  347F               	retlw	127
   261  080F  346F               	retlw	111
   262  0810  3400               	retlw	0
   263  0811                     __end_of_display:	
   264  0006                     _PORTBbits	set	6
   265  0008                     _PORTD	set	8
   266  0005                     _PORTAbits	set	5
   267  001A                     _RCREG	set	26
   268  0019                     _TXREG	set	25
   269  000B                     _INTCONbits	set	11
   270  0018                     _RCSTAbits	set	24
   271  001E                     _ADRESH	set	30
   272  001F                     _ADCON0	set	31
   273  000E                     _TMR1L	set	14
   274  000F                     _TMR1H	set	15
   275  0010                     _T1CON	set	16
   276  0001                     _TMR0	set	1
   277  000B                     _INTCON	set	11
   278  0060                     _TMR1IF	set	96
   279  005A                     _TMR0IF	set	90
   280  0065                     _RCIF	set	101
   281  0064                     _TXIF	set	100
   282  00FA                     _GO_nDONE	set	250
   283  008C                     _PIE1bits	set	140
   284  0099                     _SPBRG	set	153
   285  0098                     _TXSTAbits	set	152
   286  0087                     _TRISCbits	set	135
   287  009E                     _ADRESL	set	158
   288  009F                     _ADCON1	set	159
   289  0085                     _TRISA	set	133
   290  0081                     _OPTION_REG	set	129
   291  0089                     _TRISE	set	137
   292  0088                     _TRISD	set	136
   293  0087                     _TRISC	set	135
   294  0086                     _TRISB	set	134
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  0013                     start_initialization:	
   300  0013                     __initialization:	
   301                           
   302                           ; Initialize objects allocated to BANK3
   303  0013  1783               	bsf	3,7	;select IRP bank2
   304  0014  30DD               	movlw	low (__pdataBANK3+32)
   305  0015  00FD               	movwf	btemp+-1
   306  0016  300C               	movlw	high __pidataBANK3
   307  0017  00FE               	movwf	btemp
   308  0018  30FE               	movlw	low __pidataBANK3
   309  0019  00FF               	movwf	btemp+1
   310  001A  30BD               	movlw	low __pdataBANK3
   311  001B  0084               	movwf	4
   312  001C  120A  158A  24C3  120A  118A  	fcall	init_ram0
   313                           
   314                           ; Clear objects allocated to BANK3
   315  0021  3090               	movlw	low __pbssBANK3
   316  0022  0084               	movwf	4
   317  0023  30BD               	movlw	low (__pbssBANK3+45)
   318  0024  120A  158A  2490  120A  118A  	fcall	clear_ram0
   319                           
   320                           ; Clear objects allocated to BANK1
   321  0029  1383               	bcf	3,7	;select IRP bank0
   322  002A  30A0               	movlw	low __pbssBANK1
   323  002B  0084               	movwf	4
   324  002C  30ED               	movlw	low (__pbssBANK1+77)
   325  002D  120A  158A  2490  120A  118A  	fcall	clear_ram0
   326                           
   327                           ; Clear objects allocated to BANK0
   328  0032  304A               	movlw	low __pbssBANK0
   329  0033  0084               	movwf	4
   330  0034  3062               	movlw	low (__pbssBANK0+24)
   331  0035  120A  158A  2490  120A  118A  	fcall	clear_ram0
   332                           
   333                           ; Clear objects allocated to COMMON
   334  003A  01FD               	clrf	__pbssCOMMON& (0+127)
   335  003B                     end_of_initialization:	
   336                           ;End of C runtime variable initialization code
   337                           
   338  003B                     __end_of__initialization:	
   339  003B  0183               	clrf	3
   340  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   341                           
   342                           	psect	bssCOMMON
   343  007D                     __pbssCOMMON:	
   344  007D                     _count_lux:	
   345  007D                     	ds	1
   346                           
   347                           	psect	bssBANK0
   348  004A                     __pbssBANK0:	
   349  004A                     _count:	
   350  004A                     	ds	2
   351  004C                     _timerReadFromGateway:	
   352  004C                     	ds	1
   353  004D                     _dataFromGatewayIndex:	
   354  004D                     	ds	1
   355  004E                     _time:	
   356  004E                     	ds	1
   357  004F                     _comando:	
   358  004F                     	ds	1
   359  0050                     _disp:	
   360  0050                     	ds	1
   361  0051                     _old_disp:	
   362  0051                     	ds	1
   363  0052                     _cycled:	
   364  0052                     	ds	1
   365  0053                     _secondPassed:	
   366  0053                     	ds	1
   367  0054                     _readGateway:	
   368  0054                     	ds	1
   369  0055                     _readGatewayDone:	
   370  0055                     	ds	1
   371  0056                     _car:	
   372  0056                     	ds	4
   373  005A                     _motorcycle:	
   374  005A                     	ds	4
   375  005E                     _id_semaforo:	
   376  005E                     	ds	1
   377  005F                     _centinaia:	
   378  005F                     	ds	1
   379  0060                     _decine:	
   380  0060                     	ds	1
   381  0061                     _unita:	
   382  0061                     	ds	1
   383                           
   384                           	psect	bssBANK1
   385  00A0                     __pbssBANK1:	
   386  00A0                     _to_update:	
   387  00A0                     	ds	7
   388  00A7                     _s10:	
   389  00A7                     	ds	6
   390  00AD                     _s9:	
   391  00AD                     	ds	6
   392  00B3                     _s8:	
   393  00B3                     	ds	6
   394  00B9                     _s7:	
   395  00B9                     	ds	6
   396  00BF                     _s6:	
   397  00BF                     	ds	6
   398  00C5                     _s5:	
   399  00C5                     	ds	6
   400  00CB                     _s4:	
   401  00CB                     	ds	6
   402  00D1                     _s3:	
   403  00D1                     	ds	6
   404  00D7                     _s2:	
   405  00D7                     	ds	6
   406  00DD                     _s1:	
   407  00DD                     	ds	6
   408  00E3                     _s0:	
   409  00E3                     	ds	6
   410  00E9                     _truck:	
   411  00E9                     	ds	4
   412                           
   413                           	psect	bssBANK3
   414  0190                     __pbssBANK3:	
   415  0190                     _dataFromGateway:	
   416  0190                     	ds	15
   417  019F                     _s15:	
   418  019F                     	ds	6
   419  01A5                     _s14:	
   420  01A5                     	ds	6
   421  01AB                     _s13:	
   422  01AB                     	ds	6
   423  01B1                     _s12:	
   424  01B1                     	ds	6
   425  01B7                     _s11:	
   426  01B7                     	ds	6
   427                           
   428                           	psect	dataBANK3
   429  01BD                     __pdataBANK3:	
   430  01BD                     _Semafori:	
   431  01BD                     	ds	32
   432                           
   433                           	psect	inittext
   434  0CBF                     init_fetch0:	
   435                           ;	Called with low address in FSR and high address in W
   436                           
   437  0CBF  087E               	movf	btemp,w
   438  0CC0  008A               	movwf	10
   439  0CC1  087F               	movf	btemp+1,w
   440  0CC2  0082               	movwf	2
   441  0CC3                     init_ram0:	
   442                           ;Called with:
   443                           ;	high address of idata address in btemp 
   444                           ;	low address of idata address in btemp+1 
   445                           ;	low address of data in FSR
   446                           ;	high address + 1 of data in btemp-1
   447                           
   448  0CC3  120A  158A  24BF  120A  158A  	fcall	init_fetch0
   449  0CC8  0080               	movwf	0
   450  0CC9  0A84               	incf	4,f
   451  0CCA  0804               	movf	4,w
   452  0CCB  067D               	xorwf	btemp+-1,w
   453  0CCC  1903               	btfsc	3,2
   454  0CCD  3400               	retlw	0
   455  0CCE  0AFF               	incf	btemp+1,f
   456  0CCF  1903               	btfsc	3,2
   457  0CD0  0AFE               	incf	btemp,f
   458  0CD1  2CC3               	goto	init_ram0
   459                           
   460                           	psect	clrtext
   461  0C90                     clear_ram0:	
   462                           ;	Called with FSR containing the base address, and
   463                           ;	W with the last address+1
   464                           
   465  0C90  0064               	clrwdt	;clear the watchdog before getting into this loop
   466  0C91                     clrloop0:	
   467  0C91  0180               	clrf	0	;clear RAM location pointed to by FSR
   468  0C92  0A84               	incf	4,f	;increment pointer
   469  0C93  0604               	xorwf	4,w	;XOR with final address
   470  0C94  1903               	btfsc	3,2	;have we reached the end yet?
   471  0C95  3400               	retlw	0	;all done for this memory range, return
   472  0C96  0604               	xorwf	4,w	;XOR again to restore value
   473  0C97  2C91               	goto	clrloop0	;do the next byte
   474                           
   475                           	psect	cstackBANK3
   476  01DD                     __pcstackBANK3:	
   477  01DD                     main@temp:	
   478                           
   479                           ; 1 bytes @ 0x0
   480  01DD                     	ds	1
   481  01DE                     main@umidita:	
   482                           
   483                           ; 1 bytes @ 0x1
   484  01DE                     	ds	1
   485  01DF                     main@pressione:	
   486                           
   487                           ; 1 bytes @ 0x2
   488  01DF                     	ds	1
   489  01E0                     main@colorId:	
   490                           
   491                           ; 1 bytes @ 0x3
   492  01E0                     	ds	1
   493  01E1                     main@time:	
   494                           
   495                           ; 2 bytes @ 0x4
   496  01E1                     	ds	2
   497  01E3                     main@tmp:	
   498                           
   499                           ; 1 bytes @ 0x6
   500  01E3                     	ds	1
   501  01E4                     main@semaforoId:	
   502                           
   503                           ; 1 bytes @ 0x7
   504  01E4                     	ds	1
   505  01E5                     main@i_444:	
   506                           
   507                           ; 1 bytes @ 0x8
   508  01E5                     	ds	1
   509  01E6                     main@i_446:	
   510                           
   511                           ; 1 bytes @ 0x9
   512  01E6                     	ds	1
   513  01E7                     main@i_447:	
   514                           
   515                           ; 1 bytes @ 0xA
   516  01E7                     	ds	1
   517  01E8                     main@lux_select:	
   518                           
   519                           ; 1 bytes @ 0xB
   520  01E8                     	ds	1
   521  01E9                     main@index:	
   522                           
   523                           ; 1 bytes @ 0xC
   524  01E9                     	ds	1
   525  01EA                     main@i_443:	
   526                           
   527                           ; 2 bytes @ 0xD
   528  01EA                     	ds	2
   529  01EC                     main@i:	
   530                           
   531                           ; 2 bytes @ 0xF
   532  01EC                     	ds	2
   533                           
   534                           	psect	cstackCOMMON
   535  0070                     __pcstackCOMMON:	
   536  0070                     ?_init_ADC:	
   537  0070                     ?_Conteggio:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_main:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_UART_TxChar:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_UART_Read:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_UART_Read:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_conteggioVeicoli:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_ISR:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     Conteggio@_count:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 2 bytes @ 0x0
   563  0070                     	ds	2
   564  0072                     Conteggio@_motorcycle:	
   565                           
   566                           ; 1 bytes @ 0x2
   567  0072                     	ds	1
   568  0073                     Conteggio@_car:	
   569                           
   570                           ; 1 bytes @ 0x3
   571  0073                     	ds	1
   572  0074                     Conteggio@_truck:	
   573                           
   574                           ; 1 bytes @ 0x4
   575  0074                     	ds	1
   576  0075                     Conteggio@index:	
   577                           
   578                           ; 1 bytes @ 0x5
   579  0075                     	ds	1
   580  0076                     ??_Conteggio:	
   581                           
   582                           ; 1 bytes @ 0x6
   583  0076                     	ds	3
   584  0079                     ??_conteggioVeicoli:	
   585                           
   586                           ; 1 bytes @ 0x9
   587  0079                     	ds	4
   588                           
   589                           	psect	cstackBANK0
   590  0020                     __pcstackBANK0:	
   591  0020                     ??_ISR:	
   592                           
   593                           ; 1 bytes @ 0x0
   594  0020                     	ds	4
   595  0024                     ??_init_ADC:	
   596  0024                     ?_SetDisplay:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0024                     ?_BuildByte:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0024                     ?_UpdateTimes:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0024                     ?_SetDefaultTimers:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0024                     ??_UART_TxChar:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0024                     ?___bmul:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0024                     ?_ADC_Read:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0024                     ?_GetTime:	
   618                           ; 2 bytes @ 0x4
   619                           
   620  0024                     ?___wmul:	
   621                           ; 2 bytes @ 0x4
   622                           
   623  0024                     ?___awmod:	
   624                           ; 2 bytes @ 0x4
   625                           
   626  0024                     ?___aldiv:	
   627                           ; 2 bytes @ 0x4
   628                           
   629  0024                     BuildByte@byte1:	
   630                           ; 4 bytes @ 0x4
   631                           
   632  0024                     UpdateTimes@_to_update:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0024                     GetTime@_dataFromGateway:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0024                     UART_TxChar@ch:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0024                     SetDisplay@d2:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0024                     ___bmul@multiplicand:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0024                     SetDefaultTimers@rosso:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0024                     ___wmul@multiplier:	
   651                           ; 2 bytes @ 0x4
   652                           
   653  0024                     ___awmod@divisor:	
   654                           ; 2 bytes @ 0x4
   655                           
   656  0024                     ___aldiv@divisor:	
   657                           ; 2 bytes @ 0x4
   658                           
   659                           
   660                           ; 4 bytes @ 0x4
   661  0024                     	ds	1
   662  0025                     ??_UpdateTimes:	
   663  0025                     ??___bmul:	
   664                           ; 1 bytes @ 0x5
   665                           
   666  0025                     BuildByte@valore:	
   667                           ; 1 bytes @ 0x5
   668                           
   669  0025                     SetDisplay@d3:	
   670                           ; 1 bytes @ 0x5
   671                           
   672                           
   673                           ; 1 bytes @ 0x5
   674  0025                     	ds	1
   675  0026                     ??_ADC_Read:	
   676  0026                     ??_BuildByte:	
   677                           ; 1 bytes @ 0x6
   678                           
   679  0026                     ??_GetTime:	
   680                           ; 1 bytes @ 0x6
   681                           
   682  0026                     SetDisplay@value:	
   683                           ; 1 bytes @ 0x6
   684                           
   685  0026                     ___bmul@product:	
   686                           ; 1 bytes @ 0x6
   687                           
   688  0026                     SetDefaultTimers@verde:	
   689                           ; 1 bytes @ 0x6
   690                           
   691  0026                     ___wmul@multiplicand:	
   692                           ; 2 bytes @ 0x6
   693                           
   694  0026                     ___awmod@dividend:	
   695                           ; 2 bytes @ 0x6
   696                           
   697                           
   698                           ; 2 bytes @ 0x6
   699  0026                     	ds	1
   700  0027                     ??_SetDisplay:	
   701  0027                     ADC_Read@canale:	
   702                           ; 1 bytes @ 0x7
   703                           
   704  0027                     SetDisplay@d1:	
   705                           ; 1 bytes @ 0x7
   706                           
   707  0027                     ___bmul@multiplier:	
   708                           ; 1 bytes @ 0x7
   709                           
   710                           
   711                           ; 1 bytes @ 0x7
   712  0027                     	ds	1
   713  0028                     ??___wmul:	
   714  0028                     ??___awmod:	
   715                           ; 1 bytes @ 0x8
   716                           
   717  0028                     BuildByte@byte0:	
   718                           ; 1 bytes @ 0x8
   719                           
   720  0028                     GetTime@index:	
   721                           ; 1 bytes @ 0x8
   722                           
   723  0028                     SetDefaultTimers@giallo:	
   724                           ; 1 bytes @ 0x8
   725                           
   726  0028                     ___wmul@product:	
   727                           ; 2 bytes @ 0x8
   728                           
   729  0028                     ___aldiv@dividend:	
   730                           ; 2 bytes @ 0x8
   731                           
   732                           
   733                           ; 4 bytes @ 0x8
   734  0028                     	ds	1
   735  0029                     GetTime@shortInt:	
   736  0029                     ___awmod@counter:	
   737                           ; 1 bytes @ 0x9
   738                           
   739  0029                     BuildByte@txByte:	
   740                           ; 1 bytes @ 0x9
   741                           
   742                           
   743                           ; 5 bytes @ 0x9
   744  0029                     	ds	1
   745  002A                     SetDefaultTimers@_semafori:	
   746  002A                     ___awmod@sign:	
   747                           ; 1 bytes @ 0xA
   748                           
   749  002A                     GetTime@tmp:	
   750                           ; 1 bytes @ 0xA
   751                           
   752                           
   753                           ; 2 bytes @ 0xA
   754  002A                     	ds	1
   755  002B                     ?_ChangeTrafficLight:	
   756  002B                     ??_SetDefaultTimers:	
   757                           ; 1 bytes @ 0xB
   758                           
   759  002B                     ?___awdiv:	
   760                           ; 1 bytes @ 0xB
   761                           
   762  002B                     ChangeTrafficLight@_n_semafori:	
   763                           ; 2 bytes @ 0xB
   764                           
   765  002B                     ___awdiv@divisor:	
   766                           ; 1 bytes @ 0xB
   767                           
   768                           
   769                           ; 2 bytes @ 0xB
   770  002B                     	ds	1
   771  002C                     ??_ChangeTrafficLight:	
   772  002C                     ??___aldiv:	
   773                           ; 1 bytes @ 0xC
   774                           
   775                           
   776                           ; 1 bytes @ 0xC
   777  002C                     	ds	1
   778  002D                     ___aldiv@counter:	
   779  002D                     ___awdiv@dividend:	
   780                           ; 1 bytes @ 0xD
   781                           
   782                           
   783                           ; 2 bytes @ 0xD
   784  002D                     	ds	1
   785  002E                     BuildByte@sommaRow:	
   786  002E                     ___aldiv@sign:	
   787                           ; 1 bytes @ 0xE
   788                           
   789                           
   790                           ; 1 bytes @ 0xE
   791  002E                     	ds	1
   792  002F                     ??___awdiv:	
   793  002F                     BuildByte@sommaColumn:	
   794                           ; 1 bytes @ 0xF
   795                           
   796  002F                     ___aldiv@quotient:	
   797                           ; 1 bytes @ 0xF
   798                           
   799                           
   800                           ; 4 bytes @ 0xF
   801  002F                     	ds	1
   802  0030                     UpdateTimes@_semafori:	
   803  0030                     ___awdiv@counter:	
   804                           ; 1 bytes @ 0x10
   805                           
   806  0030                     BuildByte@y:	
   807                           ; 1 bytes @ 0x10
   808                           
   809                           
   810                           ; 2 bytes @ 0x10
   811  0030                     	ds	1
   812  0031                     UpdateTimes@l:	
   813  0031                     ___awdiv@sign:	
   814                           ; 1 bytes @ 0x11
   815                           
   816                           
   817                           ; 1 bytes @ 0x11
   818  0031                     	ds	1
   819  0032                     UpdateTimes@i:	
   820  0032                     ChangeTrafficLight@_semafori:	
   821                           ; 1 bytes @ 0x12
   822                           
   823  0032                     SetDefaultTimers@l:	
   824                           ; 1 bytes @ 0x12
   825                           
   826  0032                     BuildByte@y_333:	
   827                           ; 1 bytes @ 0x12
   828                           
   829  0032                     ___awdiv@quotient:	
   830                           ; 2 bytes @ 0x12
   831                           
   832                           
   833                           ; 2 bytes @ 0x12
   834  0032                     	ds	1
   835  0033                     ?_UART_Init:	
   836  0033                     SetDefaultTimers@i:	
   837                           ; 1 bytes @ 0x13
   838                           
   839  0033                     UART_Init@baudrate:	
   840                           ; 1 bytes @ 0x13
   841                           
   842                           
   843                           ; 2 bytes @ 0x13
   844  0033                     	ds	1
   845  0034                     ?_GetDigits:	
   846  0034                     ?_map:	
   847                           ; 1 bytes @ 0x14
   848                           
   849  0034                     GetDigits@decine:	
   850                           ; 2 bytes @ 0x14
   851                           
   852  0034                     map@x:	
   853                           ; 1 bytes @ 0x14
   854                           
   855  0034                     BuildByte@i:	
   856                           ; 2 bytes @ 0x14
   857                           
   858                           
   859                           ; 2 bytes @ 0x14
   860  0034                     	ds	1
   861  0035                     ??_UART_Init:	
   862  0035                     GetDigits@unita:	
   863                           ; 1 bytes @ 0x15
   864                           
   865                           
   866                           ; 1 bytes @ 0x15
   867  0035                     	ds	1
   868  0036                     map@in_min:	
   869  0036                     GetDigits@Time:	
   870                           ; 2 bytes @ 0x16
   871                           
   872  0036                     BuildByte@i_332:	
   873                           ; 2 bytes @ 0x16
   874                           
   875                           
   876                           ; 2 bytes @ 0x16
   877  0036                     	ds	2
   878  0038                     ?_sendByte:	
   879  0038                     ??_GetDigits:	
   880                           ; 1 bytes @ 0x18
   881                           
   882  0038                     sendByte@byte1:	
   883                           ; 1 bytes @ 0x18
   884                           
   885  0038                     map@in_max:	
   886                           ; 1 bytes @ 0x18
   887                           
   888                           
   889                           ; 2 bytes @ 0x18
   890  0038                     	ds	1
   891  0039                     sendByte@valore:	
   892  0039                     _GetDigits$1159:	
   893                           ; 1 bytes @ 0x19
   894                           
   895                           
   896                           ; 2 bytes @ 0x19
   897  0039                     	ds	1
   898  003A                     ??_sendByte:	
   899  003A                     map@out_min:	
   900                           ; 1 bytes @ 0x1A
   901                           
   902                           
   903                           ; 2 bytes @ 0x1A
   904  003A                     	ds	1
   905  003B                     GetDigits@centinaia:	
   906                           
   907                           ; 1 bytes @ 0x1B
   908  003B                     	ds	1
   909  003C                     map@out_max:	
   910                           
   911                           ; 2 bytes @ 0x1C
   912  003C                     	ds	1
   913  003D                     sendByte@byte0:	
   914                           
   915                           ; 1 bytes @ 0x1D
   916  003D                     	ds	1
   917  003E                     ??_map:	
   918  003E                     sendByte@txByte:	
   919                           ; 1 bytes @ 0x1E
   920                           
   921                           
   922                           ; 1 bytes @ 0x1E
   923  003E                     	ds	1
   924  003F                     sendByte@i:	
   925                           
   926                           ; 1 bytes @ 0x1F
   927  003F                     	ds	1
   928  0040                     ??_main:	
   929                           
   930                           ; 1 bytes @ 0x20
   931  0040                     	ds	10
   932                           
   933                           	psect	maintext
   934  003F                     __pmaintext:	
   935 ;;
   936 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   937 ;;
   938 ;; *************** function _main *****************
   939 ;; Defined at:
   940 ;;		line 119 in file "debug.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  index           1   12[BANK3 ] unsigned char 
   945 ;;  semaforoId      1    7[BANK3 ] unsigned char 
   946 ;;  tmp             1    6[BANK3 ] unsigned char 
   947 ;;  colorId         1    3[BANK3 ] unsigned char 
   948 ;;  i               1   10[BANK3 ] unsigned char 
   949 ;;  i               1    9[BANK3 ] unsigned char 
   950 ;;  i               1    8[BANK3 ] unsigned char 
   951 ;;  i               2   13[BANK3 ] int 
   952 ;;  i               2   15[BANK3 ] int 
   953 ;;  time            2    4[BANK3 ] int 
   954 ;;  lux_select      1   11[BANK3 ] unsigned char 
   955 ;;  pressione       1    2[BANK3 ] unsigned char 
   956 ;;  umidita         1    1[BANK3 ] unsigned char 
   957 ;;  temp            1    0[BANK3 ] unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : B00/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0      17       0
   969 ;;      Temps:          0      10       0       0       0
   970 ;;      Totals:         0      10       0      17       0
   971 ;;Total ram usage:       27 bytes
   972 ;; Hardware stack levels required when called:    5
   973 ;; This function calls:
   974 ;;		_ADC_Read
   975 ;;		_ChangeTrafficLight
   976 ;;		_GetDigits
   977 ;;		_GetTime
   978 ;;		_SetDefaultTimers
   979 ;;		_SetDisplay
   980 ;;		_UART_Init
   981 ;;		_UpdateTimes
   982 ;;		___awmod
   983 ;;		___bmul
   984 ;;		_init_ADC
   985 ;;		_map
   986 ;;		_sendByte
   987 ;; This function is called by:
   988 ;;		Startup code after reset
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _main
   994  003F                     _main:	
   995  003F                     l2888:	
   996                           ;incstack = 0
   997                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   998                           
   999                           
  1000                           ;debug.c: 121:     TRISB = 0x1F;
  1001  003F  301F               	movlw	31
  1002  0040  1683               	bsf	3,5	;RP0=1, select bank1
  1003  0041  1303               	bcf	3,6	;RP1=0, select bank1
  1004  0042  0086               	movwf	6	;volatile
  1005                           
  1006                           ;debug.c: 122:     TRISC = 0x80;
  1007  0043  3080               	movlw	128
  1008  0044  0087               	movwf	7	;volatile
  1009  0045                     l2890:	
  1010                           
  1011                           ;debug.c: 123:     TRISD = 0x00;
  1012  0045  0188               	clrf	8	;volatile
  1013  0046                     l2892:	
  1014                           
  1015                           ;debug.c: 124:     TRISE = 0x01;
  1016  0046  3001               	movlw	1
  1017  0047  0089               	movwf	9	;volatile
  1018  0048                     l2894:	
  1019                           
  1020                           ;debug.c: 125:     INTCON = 0xE0;
  1021  0048  30E0               	movlw	224
  1022  0049  008B               	movwf	11	;volatile
  1023  004A                     l2896:	
  1024                           
  1025                           ;debug.c: 126:     OPTION_REG = 0x04;
  1026  004A  3004               	movlw	4
  1027  004B  0081               	movwf	1	;volatile
  1028  004C                     l2898:	
  1029                           
  1030                           ;debug.c: 127:     TMR0 = 6;
  1031  004C  3006               	movlw	6
  1032  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1033  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1034  004F  0081               	movwf	1	;volatile
  1035  0050                     l2900:	
  1036                           
  1037                           ;debug.c: 128:     T1CON = 0x31;
  1038  0050  3031               	movlw	49
  1039  0051  0090               	movwf	16	;volatile
  1040  0052                     l2902:	
  1041                           
  1042                           ;debug.c: 130:     TMR1H = 60;
  1043  0052  303C               	movlw	60
  1044  0053  008F               	movwf	15	;volatile
  1045  0054                     l2904:	
  1046                           
  1047                           ;debug.c: 131:     TMR1L = 176;
  1048  0054  30B0               	movlw	176
  1049  0055  008E               	movwf	14	;volatile
  1050                           
  1051                           ;debug.c: 134:     int time;;debug.c: 135:     unsigned char lux_select = 0;
  1052  0056  1683               	bsf	3,5	;RP0=1, select bank3
  1053  0057  1703               	bsf	3,6	;RP1=1, select bank3
  1054  0058  01E8               	clrf	main@lux_select^(0+384)
  1055                           
  1056                           ;debug.c: 136:     disp = 0;
  1057  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1058  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1059  005B  01D0               	clrf	_disp
  1060                           
  1061                           ;debug.c: 138:     unsigned char umidita = 0;
  1062  005C  1683               	bsf	3,5	;RP0=1, select bank3
  1063  005D  1703               	bsf	3,6	;RP1=1, select bank3
  1064  005E  01DE               	clrf	main@umidita^(0+384)
  1065                           
  1066                           ;debug.c: 139:     unsigned char pressione = 0;
  1067  005F  01DF               	clrf	main@pressione^(0+384)
  1068  0060                     l2906:	
  1069                           
  1070                           ;debug.c: 141:     init_ADC();
  1071  0060  120A  158A  24AC  120A  118A  	fcall	_init_ADC
  1072  0065                     l2908:	
  1073                           
  1074                           ;debug.c: 142:     UART_Init(9600);
  1075  0065  3080               	movlw	128
  1076  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0068  00B3               	movwf	UART_Init@baudrate
  1079  0069  3025               	movlw	37
  1080  006A  00B4               	movwf	UART_Init@baudrate+1
  1081  006B  120A  158A  25D1  120A  118A  	fcall	_UART_Init
  1082  0070                     l2910:	
  1083                           
  1084                           ;debug.c: 143:     SetDefaultTimers(1,1,1, Semafori);
  1085  0070  3001               	movlw	1
  1086  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0073  00A4               	movwf	SetDefaultTimers@rosso
  1089  0074  3000               	movlw	0
  1090  0075  00A5               	movwf	SetDefaultTimers@rosso+1
  1091  0076  3001               	movlw	1
  1092  0077  00A6               	movwf	SetDefaultTimers@verde
  1093  0078  3000               	movlw	0
  1094  0079  00A7               	movwf	SetDefaultTimers@verde+1
  1095  007A  3001               	movlw	1
  1096  007B  00A8               	movwf	SetDefaultTimers@giallo
  1097  007C  3000               	movlw	0
  1098  007D  00A9               	movwf	SetDefaultTimers@giallo+1
  1099  007E  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  1100  007F  00C0               	movwf	??_main
  1101  0080  0840               	movf	??_main,w
  1102  0081  00AA               	movwf	SetDefaultTimers@_semafori
  1103  0082  120A  118A  26A6  120A  118A  	fcall	_SetDefaultTimers
  1104  0087                     l2912:	
  1105                           
  1106                           ;debug.c: 146:     {;debug.c: 148:         if (readGateway.Bit)
  1107  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0089  1C54               	btfss	_readGateway,0
  1110  008A  288C               	goto	u2861
  1111  008B  288D               	goto	u2860
  1112  008C                     u2861:	
  1113  008C  2A67               	goto	l245
  1114  008D                     u2860:	
  1115  008D  2A52               	goto	l2982
  1116  008E                     l247:	
  1117                           ;debug.c: 151:             {;debug.c: 152:             case 0x08:
  1118                           
  1119                           
  1120                           ;debug.c: 153:                 readGatewayDone.Bit = 1;
  1121  008E  1455               	bsf	_readGatewayDone,0
  1122                           
  1123                           ;debug.c: 154:                 readGateway.Bit = 0;
  1124  008F  1054               	bcf	_readGateway,0
  1125  0090                     l2916:	
  1126                           
  1127                           ;debug.c: 156:                 for (int i = 0; i < 4; i++)
  1128  0090  1683               	bsf	3,5	;RP0=1, select bank3
  1129  0091  1703               	bsf	3,6	;RP1=1, select bank3
  1130  0092  01EC               	clrf	main@i^(0+384)
  1131  0093  01ED               	clrf	(main@i+1)^(0+384)
  1132  0094                     l2918:	
  1133  0094  086D               	movf	(main@i+1)^(0+384),w
  1134  0095  3A80               	xorlw	128
  1135  0096  00FF               	movwf	btemp+1
  1136  0097  3080               	movlw	128
  1137  0098  027F               	subwf	btemp+1,w
  1138  0099  1D03               	skipz
  1139  009A  289D               	goto	u2875
  1140  009B  3004               	movlw	4
  1141  009C  026C               	subwf	main@i^(0+384),w
  1142  009D                     u2875:	
  1143  009D  1C03               	skipc
  1144  009E  28A0               	goto	u2871
  1145  009F  28A1               	goto	u2870
  1146  00A0                     u2871:	
  1147  00A0  28A2               	goto	l2922
  1148  00A1                     u2870:	
  1149  00A1  2921               	goto	l2928
  1150  00A2                     l2922:	
  1151                           
  1152                           ;debug.c: 157:                 {;debug.c: 158:                     sendByte((0x01 << (i 
      +                          + 1))|0x01, 0x01, motorcycle[i]);
  1153  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1154  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1155  00A4  01B8               	clrf	sendByte@byte1
  1156  00A5  0AB8               	incf	sendByte@byte1,f
  1157  00A6  1683               	bsf	3,5	;RP0=1, select bank3
  1158  00A7  1703               	bsf	3,6	;RP1=1, select bank3
  1159  00A8  086C               	movf	main@i^(0+384),w
  1160  00A9  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1161  00AA  0084               	movwf	4
  1162  00AB  1383               	bcf	3,7	;select IRP bank0
  1163  00AC  0800               	movf	0,w
  1164  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1165  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1166  00AF  00C0               	movwf	??_main
  1167  00B0  0840               	movf	??_main,w
  1168  00B1  00B9               	movwf	sendByte@valore
  1169  00B2  3001               	movlw	1
  1170  00B3  00C1               	movwf	??_main+1
  1171  00B4  1683               	bsf	3,5	;RP0=1, select bank3
  1172  00B5  1703               	bsf	3,6	;RP1=1, select bank3
  1173  00B6  086C               	movf	main@i^(0+384),w
  1174  00B7  3E01               	addlw	1
  1175  00B8  3E01               	addlw	1
  1176  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1177  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1178  00BB  28BE               	goto	u2884
  1179  00BC                     u2885:	
  1180  00BC  1003               	clrc
  1181  00BD  0DC1               	rlf	??_main+1,f
  1182  00BE                     u2884:	
  1183  00BE  3EFF               	addlw	-1
  1184  00BF  1D03               	skipz
  1185  00C0  28BC               	goto	u2885
  1186  00C1  0841               	movf	??_main+1,w
  1187  00C2  3801               	iorlw	1
  1188  00C3  120A  158A  256B  120A  118A  	fcall	_sendByte
  1189                           
  1190                           ;debug.c: 159:                     sendByte((0x01 << (i + 1))|0x01, 0x10, car[i]);
  1191  00C8  3010               	movlw	16
  1192  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1193  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1194  00CB  00C0               	movwf	??_main
  1195  00CC  0840               	movf	??_main,w
  1196  00CD  00B8               	movwf	sendByte@byte1
  1197  00CE  1683               	bsf	3,5	;RP0=1, select bank3
  1198  00CF  1703               	bsf	3,6	;RP1=1, select bank3
  1199  00D0  086C               	movf	main@i^(0+384),w
  1200  00D1  3E56               	addlw	(low (_car| 0))& (0+255)
  1201  00D2  0084               	movwf	4
  1202  00D3  1383               	bcf	3,7	;select IRP bank0
  1203  00D4  0800               	movf	0,w
  1204  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1205  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1206  00D7  00C1               	movwf	??_main+1
  1207  00D8  0841               	movf	??_main+1,w
  1208  00D9  00B9               	movwf	sendByte@valore
  1209  00DA  3001               	movlw	1
  1210  00DB  00C2               	movwf	??_main+2
  1211  00DC  1683               	bsf	3,5	;RP0=1, select bank3
  1212  00DD  1703               	bsf	3,6	;RP1=1, select bank3
  1213  00DE  086C               	movf	main@i^(0+384),w
  1214  00DF  3E01               	addlw	1
  1215  00E0  3E01               	addlw	1
  1216  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1217  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1218  00E3  28E6               	goto	u2894
  1219  00E4                     u2895:	
  1220  00E4  1003               	clrc
  1221  00E5  0DC2               	rlf	??_main+2,f
  1222  00E6                     u2894:	
  1223  00E6  3EFF               	addlw	-1
  1224  00E7  1D03               	skipz
  1225  00E8  28E4               	goto	u2895
  1226  00E9  0842               	movf	??_main+2,w
  1227  00EA  3801               	iorlw	1
  1228  00EB  120A  158A  256B  120A  118A  	fcall	_sendByte
  1229                           
  1230                           ;debug.c: 160:                     sendByte((0x01 << (i + 1))|0x01, 0x11, truck[i]);
  1231  00F0  3011               	movlw	17
  1232  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1233  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1234  00F3  00C0               	movwf	??_main
  1235  00F4  0840               	movf	??_main,w
  1236  00F5  00B8               	movwf	sendByte@byte1
  1237  00F6  1683               	bsf	3,5	;RP0=1, select bank3
  1238  00F7  1703               	bsf	3,6	;RP1=1, select bank3
  1239  00F8  086C               	movf	main@i^(0+384),w
  1240  00F9  3EE9               	addlw	(low (_truck| 0))& (0+255)
  1241  00FA  0084               	movwf	4
  1242  00FB  1383               	bcf	3,7	;select IRP bank1
  1243  00FC  0800               	movf	0,w
  1244  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1245  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1246  00FF  00C1               	movwf	??_main+1
  1247  0100  0841               	movf	??_main+1,w
  1248  0101  00B9               	movwf	sendByte@valore
  1249  0102  3001               	movlw	1
  1250  0103  00C2               	movwf	??_main+2
  1251  0104  1683               	bsf	3,5	;RP0=1, select bank3
  1252  0105  1703               	bsf	3,6	;RP1=1, select bank3
  1253  0106  086C               	movf	main@i^(0+384),w
  1254  0107  3E01               	addlw	1
  1255  0108  3E01               	addlw	1
  1256  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1257  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1258  010B  290E               	goto	u2904
  1259  010C                     u2905:	
  1260  010C  1003               	clrc
  1261  010D  0DC2               	rlf	??_main+2,f
  1262  010E                     u2904:	
  1263  010E  3EFF               	addlw	-1
  1264  010F  1D03               	skipz
  1265  0110  290C               	goto	u2905
  1266  0111  0842               	movf	??_main+2,w
  1267  0112  3801               	iorlw	1
  1268  0113  120A  158A  256B  120A  118A  	fcall	_sendByte
  1269  0118                     l2924:	
  1270                           
  1271                           ;debug.c: 161:                 }
  1272  0118  3001               	movlw	1
  1273  0119  1683               	bsf	3,5	;RP0=1, select bank3
  1274  011A  1703               	bsf	3,6	;RP1=1, select bank3
  1275  011B  07EC               	addwf	main@i^(0+384),f
  1276  011C  1803               	skipnc
  1277  011D  0AED               	incf	(main@i+1)^(0+384),f
  1278  011E  3000               	movlw	0
  1279  011F  07ED               	addwf	(main@i+1)^(0+384),f
  1280  0120  2894               	goto	l2918
  1281  0121                     l2928:	
  1282                           
  1283                           ;debug.c: 163:                 for (int i = 0; i < 4; i++)
  1284  0121  1683               	bsf	3,5	;RP0=1, select bank3
  1285  0122  1703               	bsf	3,6	;RP1=1, select bank3
  1286  0123  01EA               	clrf	main@i_443^(0+384)
  1287  0124  01EB               	clrf	(main@i_443+1)^(0+384)
  1288  0125                     l2934:	
  1289                           
  1290                           ;debug.c: 164:                 {;debug.c: 165:                     motorcycle[i] = 0;
  1291  0125  1683               	bsf	3,5	;RP0=1, select bank3
  1292  0126  1703               	bsf	3,6	;RP1=1, select bank3
  1293  0127  086A               	movf	main@i_443^(0+384),w
  1294  0128  3E5A               	addlw	(low (_motorcycle| 0))& (0+255)
  1295  0129  0084               	movwf	4
  1296  012A  1383               	bcf	3,7	;select IRP bank0
  1297  012B  0180               	clrf	0
  1298                           
  1299                           ;debug.c: 166:                     car[i] = 0;
  1300  012C  086A               	movf	main@i_443^(0+384),w
  1301  012D  3E56               	addlw	(low (_car| 0))& (0+255)
  1302  012E  0084               	movwf	4
  1303  012F  0180               	clrf	0
  1304                           
  1305                           ;debug.c: 167:                     truck[i] = 0;
  1306  0130  086A               	movf	main@i_443^(0+384),w
  1307  0131  3EE9               	addlw	(low (_truck| 0))& (0+255)
  1308  0132  0084               	movwf	4
  1309  0133  0180               	clrf	0
  1310  0134                     l2936:	
  1311                           
  1312                           ;debug.c: 168:                 }
  1313  0134  3001               	movlw	1
  1314  0135  07EA               	addwf	main@i_443^(0+384),f
  1315  0136  1803               	skipnc
  1316  0137  0AEB               	incf	(main@i_443+1)^(0+384),f
  1317  0138  3000               	movlw	0
  1318  0139  07EB               	addwf	(main@i_443+1)^(0+384),f
  1319  013A                     l2938:	
  1320  013A  086B               	movf	(main@i_443+1)^(0+384),w
  1321  013B  3A80               	xorlw	128
  1322  013C  00FF               	movwf	btemp+1
  1323  013D  3080               	movlw	128
  1324  013E  027F               	subwf	btemp+1,w
  1325  013F  1D03               	skipz
  1326  0140  2943               	goto	u2915
  1327  0141  3004               	movlw	4
  1328  0142  026A               	subwf	main@i_443^(0+384),w
  1329  0143                     u2915:	
  1330  0143  1C03               	skipc
  1331  0144  2946               	goto	u2911
  1332  0145  2947               	goto	u2910
  1333  0146                     u2911:	
  1334  0146  2925               	goto	l2934
  1335  0147                     u2910:	
  1336  0147                     l2940:	
  1337                           
  1338                           ;debug.c: 170:                 for (unsigned char i = 0; i < 5; i++)
  1339  0147  1683               	bsf	3,5	;RP0=1, select bank3
  1340  0148  1703               	bsf	3,6	;RP1=1, select bank3
  1341  0149  01E5               	clrf	main@i_444^(0+384)
  1342  014A                     l2946:	
  1343                           
  1344                           ;debug.c: 171:                 {;debug.c: 172:                     dataFromGateway[i] = 
      +                          0;
  1345  014A  0865               	movf	main@i_444^(0+384),w
  1346  014B  3E90               	addlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1347  014C  0084               	movwf	4
  1348  014D  1783               	bsf	3,7	;select IRP bank3
  1349  014E  0180               	clrf	0
  1350  014F                     l2948:	
  1351                           
  1352                           ;debug.c: 173:                 }
  1353  014F  3001               	movlw	1
  1354  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0152  00C0               	movwf	??_main
  1357  0153  0840               	movf	??_main,w
  1358  0154  1683               	bsf	3,5	;RP0=1, select bank3
  1359  0155  1703               	bsf	3,6	;RP1=1, select bank3
  1360  0156  07E5               	addwf	main@i_444^(0+384),f
  1361  0157                     l2950:	
  1362  0157  3005               	movlw	5
  1363  0158  0265               	subwf	main@i_444^(0+384),w
  1364  0159  1C03               	skipc
  1365  015A  295C               	goto	u2921
  1366  015B  295D               	goto	u2920
  1367  015C                     u2921:	
  1368  015C  294A               	goto	l2946
  1369  015D                     u2920:	
  1370  015D  2A67               	goto	l245
  1371  015E                     l255:	
  1372                           ;debug.c: 175:             case 0x0A:
  1373                           
  1374                           
  1375                           ;debug.c: 176:                 readGatewayDone.Bit = 1;
  1376  015E  1455               	bsf	_readGatewayDone,0
  1377                           
  1378                           ;debug.c: 177:                 readGateway.Bit = 0;
  1379  015F  1054               	bcf	_readGateway,0
  1380  0160                     l2952:	
  1381                           
  1382                           ;debug.c: 179:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1383  0160  3000               	movlw	0
  1384  0161  120A  158A  251E  120A  118A  	fcall	_ADC_Read
  1385  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0168  0824               	movf	?_ADC_Read,w
  1388  0169  00C0               	movwf	??_main
  1389  016A  0825               	movf	?_ADC_Read+1,w
  1390  016B  00C1               	movwf	??_main+1
  1391  016C  0D41               	rlf	??_main+1,w
  1392  016D  0CC1               	rrf	??_main+1,f
  1393  016E  0CC0               	rrf	??_main,f
  1394  016F  0D41               	rlf	??_main+1,w
  1395  0170  0CC1               	rrf	??_main+1,f
  1396  0171  0CC0               	rrf	??_main,f
  1397  0172  0840               	movf	??_main,w
  1398  0173  00B4               	movwf	map@x
  1399  0174  0841               	movf	??_main+1,w
  1400  0175  00B5               	movwf	map@x+1
  1401  0176  3000               	movlw	0
  1402  0177  00B6               	movwf	map@in_min
  1403  0178  00B7               	movwf	map@in_min+1
  1404  0179  30FF               	movlw	255
  1405  017A  00B8               	movwf	map@in_max
  1406  017B  3000               	movlw	0
  1407  017C  00B9               	movwf	map@in_max+1
  1408  017D  30EC               	movlw	236
  1409  017E  00BA               	movwf	map@out_min
  1410  017F  30FF               	movlw	255
  1411  0180  00BB               	movwf	map@out_min+1
  1412  0181  303C               	movlw	60
  1413  0182  00BC               	movwf	map@out_max
  1414  0183  3000               	movlw	0
  1415  0184  00BD               	movwf	map@out_max+1
  1416  0185  120A  158A  259C  120A  118A  	fcall	_map
  1417  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1418  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1419  018C  0834               	movf	?_map,w
  1420  018D  00C2               	movwf	??_main+2
  1421  018E  0842               	movf	??_main+2,w
  1422  018F  1683               	bsf	3,5	;RP0=1, select bank3
  1423  0190  1703               	bsf	3,6	;RP1=1, select bank3
  1424  0191  00DD               	movwf	main@temp^(0+384)
  1425                           
  1426                           ;debug.c: 180:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1427  0192  3001               	movlw	1
  1428  0193  120A  158A  251E  120A  118A  	fcall	_ADC_Read
  1429  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1431  019A  0824               	movf	?_ADC_Read,w
  1432  019B  00C0               	movwf	??_main
  1433  019C  0825               	movf	?_ADC_Read+1,w
  1434  019D  00C1               	movwf	??_main+1
  1435  019E  0D41               	rlf	??_main+1,w
  1436  019F  0CC1               	rrf	??_main+1,f
  1437  01A0  0CC0               	rrf	??_main,f
  1438  01A1  0D41               	rlf	??_main+1,w
  1439  01A2  0CC1               	rrf	??_main+1,f
  1440  01A3  0CC0               	rrf	??_main,f
  1441  01A4  0840               	movf	??_main,w
  1442  01A5  00B4               	movwf	map@x
  1443  01A6  0841               	movf	??_main+1,w
  1444  01A7  00B5               	movwf	map@x+1
  1445  01A8  3000               	movlw	0
  1446  01A9  00B6               	movwf	map@in_min
  1447  01AA  00B7               	movwf	map@in_min+1
  1448  01AB  30FF               	movlw	255
  1449  01AC  00B8               	movwf	map@in_max
  1450  01AD  3000               	movlw	0
  1451  01AE  00B9               	movwf	map@in_max+1
  1452  01AF  3000               	movlw	0
  1453  01B0  00BA               	movwf	map@out_min
  1454  01B1  00BB               	movwf	map@out_min+1
  1455  01B2  3064               	movlw	100
  1456  01B3  00BC               	movwf	map@out_max
  1457  01B4  3000               	movlw	0
  1458  01B5  00BD               	movwf	map@out_max+1
  1459  01B6  120A  158A  259C  120A  118A  	fcall	_map
  1460  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1461  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1462  01BD  0834               	movf	?_map,w
  1463  01BE  00C2               	movwf	??_main+2
  1464  01BF  0842               	movf	??_main+2,w
  1465  01C0  1683               	bsf	3,5	;RP0=1, select bank3
  1466  01C1  1703               	bsf	3,6	;RP1=1, select bank3
  1467  01C2  00DE               	movwf	main@umidita^(0+384)
  1468                           
  1469                           ;debug.c: 181:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100)
      +                          ;
  1470  01C3  3005               	movlw	5
  1471  01C4  120A  158A  251E  120A  118A  	fcall	_ADC_Read
  1472  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1473  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1474  01CB  0824               	movf	?_ADC_Read,w
  1475  01CC  00C0               	movwf	??_main
  1476  01CD  0825               	movf	?_ADC_Read+1,w
  1477  01CE  00C1               	movwf	??_main+1
  1478  01CF  0D41               	rlf	??_main+1,w
  1479  01D0  0CC1               	rrf	??_main+1,f
  1480  01D1  0CC0               	rrf	??_main,f
  1481  01D2  0D41               	rlf	??_main+1,w
  1482  01D3  0CC1               	rrf	??_main+1,f
  1483  01D4  0CC0               	rrf	??_main,f
  1484  01D5  0840               	movf	??_main,w
  1485  01D6  00B4               	movwf	map@x
  1486  01D7  0841               	movf	??_main+1,w
  1487  01D8  00B5               	movwf	map@x+1
  1488  01D9  3000               	movlw	0
  1489  01DA  00B6               	movwf	map@in_min
  1490  01DB  00B7               	movwf	map@in_min+1
  1491  01DC  30FF               	movlw	255
  1492  01DD  00B8               	movwf	map@in_max
  1493  01DE  3000               	movlw	0
  1494  01DF  00B9               	movwf	map@in_max+1
  1495  01E0  3000               	movlw	0
  1496  01E1  00BA               	movwf	map@out_min
  1497  01E2  00BB               	movwf	map@out_min+1
  1498  01E3  3064               	movlw	100
  1499  01E4  00BC               	movwf	map@out_max
  1500  01E5  3000               	movlw	0
  1501  01E6  00BD               	movwf	map@out_max+1
  1502  01E7  120A  158A  259C  120A  118A  	fcall	_map
  1503  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1504  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1505  01EE  0834               	movf	?_map,w
  1506  01EF  00C2               	movwf	??_main+2
  1507  01F0  0842               	movf	??_main+2,w
  1508  01F1  1683               	bsf	3,5	;RP0=1, select bank3
  1509  01F2  1703               	bsf	3,6	;RP1=1, select bank3
  1510  01F3  00DF               	movwf	main@pressione^(0+384)
  1511  01F4                     l2954:	
  1512                           
  1513                           ;debug.c: 182:                 sendByte(0x02, 0x00, temp);
  1514  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1515  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1516  01F6  01B8               	clrf	sendByte@byte1
  1517  01F7  1683               	bsf	3,5	;RP0=1, select bank3
  1518  01F8  1703               	bsf	3,6	;RP1=1, select bank3
  1519  01F9  085D               	movf	main@temp^(0+384),w
  1520  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1521  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1522  01FC  00C0               	movwf	??_main
  1523  01FD  0840               	movf	??_main,w
  1524  01FE  00B9               	movwf	sendByte@valore
  1525  01FF  3002               	movlw	2
  1526  0200  120A  158A  256B  120A  118A  	fcall	_sendByte
  1527  0205                     l2956:	
  1528                           
  1529                           ;debug.c: 183:                 sendByte(0x04, 0x00, umidita);
  1530  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0207  01B8               	clrf	sendByte@byte1
  1533  0208  1683               	bsf	3,5	;RP0=1, select bank3
  1534  0209  1703               	bsf	3,6	;RP1=1, select bank3
  1535  020A  085E               	movf	main@umidita^(0+384),w
  1536  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1537  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1538  020D  00C0               	movwf	??_main
  1539  020E  0840               	movf	??_main,w
  1540  020F  00B9               	movwf	sendByte@valore
  1541  0210  3004               	movlw	4
  1542  0211  120A  158A  256B  120A  118A  	fcall	_sendByte
  1543  0216                     l2958:	
  1544                           
  1545                           ;debug.c: 184:                 sendByte(0x06, 0x00, pressione);
  1546  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0218  01B8               	clrf	sendByte@byte1
  1549  0219  1683               	bsf	3,5	;RP0=1, select bank3
  1550  021A  1703               	bsf	3,6	;RP1=1, select bank3
  1551  021B  085F               	movf	main@pressione^(0+384),w
  1552  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1553  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1554  021E  00C0               	movwf	??_main
  1555  021F  0840               	movf	??_main,w
  1556  0220  00B9               	movwf	sendByte@valore
  1557  0221  3006               	movlw	6
  1558  0222  120A  158A  256B  120A  118A  	fcall	_sendByte
  1559  0227                     l2960:	
  1560                           
  1561                           ;debug.c: 186:                 for (unsigned char i = 0; i < 5; i++)
  1562  0227  1683               	bsf	3,5	;RP0=1, select bank3
  1563  0228  1703               	bsf	3,6	;RP1=1, select bank3
  1564  0229  01E6               	clrf	main@i_446^(0+384)
  1565  022A                     l2962:	
  1566  022A  3005               	movlw	5
  1567  022B  0266               	subwf	main@i_446^(0+384),w
  1568  022C  1C03               	skipc
  1569  022D  2A2F               	goto	u2931
  1570  022E  2A30               	goto	u2930
  1571  022F                     u2931:	
  1572  022F  2A31               	goto	l2966
  1573  0230                     u2930:	
  1574  0230  2A67               	goto	l245
  1575  0231                     l2966:	
  1576                           
  1577                           ;debug.c: 187:                 {;debug.c: 188:                     dataFromGateway[i] = 
      +                          0;
  1578  0231  0866               	movf	main@i_446^(0+384),w
  1579  0232  3E90               	addlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1580  0233  0084               	movwf	4
  1581  0234  1783               	bsf	3,7	;select IRP bank3
  1582  0235  0180               	clrf	0
  1583  0236                     l2968:	
  1584                           
  1585                           ;debug.c: 189:                 }
  1586  0236  3001               	movlw	1
  1587  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0239  00C0               	movwf	??_main
  1590  023A  0840               	movf	??_main,w
  1591  023B  1683               	bsf	3,5	;RP0=1, select bank3
  1592  023C  1703               	bsf	3,6	;RP1=1, select bank3
  1593  023D  07E6               	addwf	main@i_446^(0+384),f
  1594  023E  2A2A               	goto	l2962
  1595  023F                     l2972:	
  1596                           
  1597                           ;debug.c: 193:                 if (timerReadFromGateway >= 4)
  1598  023F  3004               	movlw	4
  1599  0240  024C               	subwf	_timerReadFromGateway,w
  1600  0241  1C03               	skipc
  1601  0242  2A44               	goto	u2941
  1602  0243  2A45               	goto	u2940
  1603  0244                     u2941:	
  1604  0244  2A48               	goto	l2976
  1605  0245                     u2940:	
  1606  0245                     l2974:	
  1607                           
  1608                           ;debug.c: 194:                 {;debug.c: 195:                     readGatewayDone.Bit =
      +                           1;
  1609  0245  1455               	bsf	_readGatewayDone,0
  1610                           
  1611                           ;debug.c: 196:                     readGatewayDone.Timeout = 1;
  1612  0246  14D5               	bsf	_readGatewayDone,1
  1613                           
  1614                           ;debug.c: 197:                     readGateway.Bit = 0;
  1615  0247  1054               	bcf	_readGateway,0
  1616  0248                     l2976:	
  1617                           
  1618                           ;debug.c: 200:                 if (dataFromGatewayIndex >= 15)
  1619  0248  300F               	movlw	15
  1620  0249  024D               	subwf	_dataFromGatewayIndex,w
  1621  024A  1C03               	skipc
  1622  024B  2A4D               	goto	u2951
  1623  024C  2A4E               	goto	u2950
  1624  024D                     u2951:	
  1625  024D  2A67               	goto	l245
  1626  024E                     u2950:	
  1627  024E                     l2978:	
  1628                           
  1629                           ;debug.c: 201:                 {;debug.c: 202:                     readGatewayDone.Bit =
      +                           1;
  1630  024E  1455               	bsf	_readGatewayDone,0
  1631                           
  1632                           ;debug.c: 203:                     readGatewayDone.Timeout = 0;
  1633  024F  10D5               	bcf	_readGatewayDone,1
  1634                           
  1635                           ;debug.c: 204:                     readGateway.Bit = 0;
  1636  0250  1054               	bcf	_readGateway,0
  1637  0251  2A67               	goto	l245
  1638  0252                     l2982:	
  1639  0252  1683               	bsf	3,5	;RP0=1, select bank3
  1640  0253  1703               	bsf	3,6	;RP1=1, select bank3
  1641  0254  0810               	movf	_dataFromGateway^(0+384),w
  1642  0255  397F               	andlw	127
  1643  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0258  00C0               	movwf	??_main
  1646  0259  01C1               	clrf	??_main+1
  1647                           
  1648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1649                           ; Switch size 1, requested type "simple"
  1650                           ; Number of cases is 1, Range of values is 0 to 0
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte            4     3 (average)
  1654                           ; direct_byte           11     8 (fixed)
  1655                           ; jumptable            260     6 (fixed)
  1656                           ;	Chosen strategy is simple_byte
  1657  025A  0841               	movf	??_main+1,w
  1658  025B  3A00               	xorlw	0	; case 0
  1659  025C  1903               	skipnz
  1660  025D  2A5F               	goto	l3174
  1661  025E  2A3F               	goto	l2972
  1662  025F                     l3174:	
  1663                           
  1664                           ; Switch size 1, requested type "simple"
  1665                           ; Number of cases is 2, Range of values is 8 to 10
  1666                           ; switch strategies available:
  1667                           ; Name         Instructions Cycles
  1668                           ; simple_byte            7     4 (average)
  1669                           ; direct_byte           20    11 (fixed)
  1670                           ; jumptable            263     9 (fixed)
  1671                           ;	Chosen strategy is simple_byte
  1672  025F  0840               	movf	??_main,w
  1673  0260  3A08               	xorlw	8	; case 8
  1674  0261  1903               	skipnz
  1675  0262  288E               	goto	l247
  1676  0263  3A02               	xorlw	2	; case 10
  1677  0264  1903               	skipnz
  1678  0265  295E               	goto	l255
  1679  0266  2A3F               	goto	l2972
  1680  0267                     l245:	
  1681                           ;debug.c: 208:         }
  1682                           
  1683                           
  1684                           ;debug.c: 211:         if (readGatewayDone.Bit)
  1685  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0269  1C55               	btfss	_readGatewayDone,0
  1688  026A  2A6C               	goto	u2961
  1689  026B  2A6D               	goto	u2960
  1690  026C                     u2961:	
  1691  026C  2B2D               	goto	l261
  1692  026D                     u2960:	
  1693  026D                     l2984:	
  1694                           
  1695                           ;debug.c: 212:         {;debug.c: 214:             readGateway.Bit = 0;
  1696  026D  1054               	bcf	_readGateway,0
  1697  026E                     l2986:	
  1698                           
  1699                           ;debug.c: 215:             dataFromGatewayIndex = 0;
  1700  026E  01CD               	clrf	_dataFromGatewayIndex
  1701  026F                     l2988:	
  1702                           
  1703                           ;debug.c: 216:             readGatewayDone.Bit = 0;
  1704  026F  1055               	bcf	_readGatewayDone,0
  1705                           
  1706                           ;debug.c: 217:             timerReadFromGateway = 0;
  1707  0270  01CC               	clrf	_timerReadFromGateway
  1708  0271                     l2990:	
  1709                           
  1710                           ;debug.c: 220:             if (readGatewayDone.Timeout)
  1711  0271  1CD5               	btfss	_readGatewayDone,1
  1712  0272  2A74               	goto	u2971
  1713  0273  2A75               	goto	u2970
  1714  0274                     u2971:	
  1715  0274  2A77               	goto	l2994
  1716  0275                     u2970:	
  1717  0275                     l2992:	
  1718                           
  1719                           ;debug.c: 221:             {;debug.c: 222:                 readGatewayDone.Timeout = 0;
  1720  0275  10D5               	bcf	_readGatewayDone,1
  1721                           
  1722                           ;debug.c: 223:             }
  1723  0276  2B2D               	goto	l261
  1724  0277                     l2994:	
  1725                           
  1726                           ;debug.c: 226:             {;debug.c: 229:                 for (unsigned char i = 0; i <
      +                           3; i++)
  1727  0277  1683               	bsf	3,5	;RP0=1, select bank3
  1728  0278  1703               	bsf	3,6	;RP1=1, select bank3
  1729  0279  01E7               	clrf	main@i_447^(0+384)
  1730  027A                     l2996:	
  1731  027A  3003               	movlw	3
  1732  027B  0267               	subwf	main@i_447^(0+384),w
  1733  027C  1C03               	skipc
  1734  027D  2A7F               	goto	u2981
  1735  027E  2A80               	goto	u2980
  1736  027F                     u2981:	
  1737  027F  2A81               	goto	l3000
  1738  0280                     u2980:	
  1739  0280  2B2D               	goto	l261
  1740  0281                     l3000:	
  1741                           
  1742                           ;debug.c: 230:                 {;debug.c: 231:                     unsigned char tmp;;de
      +                          bug.c: 232:                     unsigned char index = i * 5;
  1743  0281  3005               	movlw	5
  1744  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0284  00C0               	movwf	??_main
  1747  0285  0840               	movf	??_main,w
  1748  0286  00A4               	movwf	___bmul@multiplicand
  1749  0287  1683               	bsf	3,5	;RP0=1, select bank3
  1750  0288  1703               	bsf	3,6	;RP1=1, select bank3
  1751  0289  0867               	movf	main@i_447^(0+384),w
  1752  028A  120A  158A  24E7  120A  118A  	fcall	___bmul
  1753  028F  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0290  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0291  00C1               	movwf	??_main+1
  1756  0292  0841               	movf	??_main+1,w
  1757  0293  1683               	bsf	3,5	;RP0=1, select bank3
  1758  0294  1703               	bsf	3,6	;RP1=1, select bank3
  1759  0295  00E9               	movwf	main@index^(0+384)
  1760  0296                     l3002:	
  1761                           
  1762                           ;debug.c: 240:                     tmp=index;
  1763  0296  0869               	movf	main@index^(0+384),w
  1764  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0299  00C0               	movwf	??_main
  1767  029A  0840               	movf	??_main,w
  1768  029B  1683               	bsf	3,5	;RP0=1, select bank3
  1769  029C  1703               	bsf	3,6	;RP1=1, select bank3
  1770  029D  00E3               	movwf	main@tmp^(0+384)
  1771  029E                     l3004:	
  1772                           
  1773                           ;debug.c: 241:                     unsigned char semaforoId = (tmp >> 1) & 0x0F;
  1774  029E  0863               	movf	main@tmp^(0+384),w
  1775  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1776  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1777  02A1  00C0               	movwf	??_main
  1778  02A2  1003               	clrc
  1779  02A3  0C40               	rrf	??_main,w
  1780  02A4  390F               	andlw	15
  1781  02A5  00C1               	movwf	??_main+1
  1782  02A6  0841               	movf	??_main+1,w
  1783  02A7  1683               	bsf	3,5	;RP0=1, select bank3
  1784  02A8  1703               	bsf	3,6	;RP1=1, select bank3
  1785  02A9  00E4               	movwf	main@semaforoId^(0+384)
  1786  02AA                     l3006:	
  1787                           
  1788                           ;debug.c: 242:                     tmp=index;
  1789  02AA  0869               	movf	main@index^(0+384),w
  1790  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1791  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1792  02AD  00C0               	movwf	??_main
  1793  02AE  0840               	movf	??_main,w
  1794  02AF  1683               	bsf	3,5	;RP0=1, select bank3
  1795  02B0  1703               	bsf	3,6	;RP1=1, select bank3
  1796  02B1  00E3               	movwf	main@tmp^(0+384)
  1797  02B2                     l3008:	
  1798                           
  1799                           ;debug.c: 243:                     unsigned char colorId = ((tmp >> 5) & 0x03) - 1;
  1800  02B2  0863               	movf	main@tmp^(0+384),w
  1801  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1802  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1803  02B5  00C0               	movwf	??_main
  1804  02B6  3005               	movlw	5
  1805  02B7                     u2995:	
  1806  02B7  1003               	clrc
  1807  02B8  0CC0               	rrf	??_main,f
  1808  02B9  3EFF               	addlw	-1
  1809  02BA  1D03               	skipz
  1810  02BB  2AB7               	goto	u2995
  1811  02BC  0840               	movf	??_main,w
  1812  02BD  3903               	andlw	3
  1813  02BE  3EFF               	addlw	255
  1814  02BF  00C1               	movwf	??_main+1
  1815  02C0  0841               	movf	??_main+1,w
  1816  02C1  1683               	bsf	3,5	;RP0=1, select bank3
  1817  02C2  1703               	bsf	3,6	;RP1=1, select bank3
  1818  02C3  00E0               	movwf	main@colorId^(0+384)
  1819  02C4                     l3010:	
  1820                           
  1821                           ;debug.c: 245:                     if(semaforoId!=id_semaforo)
  1822  02C4  0864               	movf	main@semaforoId^(0+384),w
  1823  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1824  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1825  02C7  065E               	xorwf	_id_semaforo,w
  1826  02C8  1903               	skipnz
  1827  02C9  2ACB               	goto	u3001
  1828  02CA  2ACC               	goto	u3000
  1829  02CB                     u3001:	
  1830  02CB  2AFF               	goto	l3014
  1831  02CC                     u3000:	
  1832  02CC                     l3012:	
  1833                           
  1834                           ;debug.c: 246:                     {;debug.c: 247:                         (*Semafori[se
      +                          maforoId]).times[colorId] = GetTime(index, dataFromGateway);
  1835  02CC  3090               	movlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1836  02CD  00C0               	movwf	??_main
  1837  02CE  0840               	movf	??_main,w
  1838  02CF  00A4               	movwf	GetTime@_dataFromGateway
  1839  02D0  1683               	bsf	3,5	;RP0=1, select bank3
  1840  02D1  1703               	bsf	3,6	;RP1=1, select bank3
  1841  02D2  0869               	movf	main@index^(0+384),w
  1842  02D3  120A  158A  260B  120A  118A  	fcall	_GetTime
  1843  02D8  1683               	bsf	3,5	;RP0=1, select bank3
  1844  02D9  1703               	bsf	3,6	;RP1=1, select bank3
  1845  02DA  0864               	movf	main@semaforoId^(0+384),w
  1846  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1847  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1848  02DD  00C1               	movwf	??_main+1
  1849  02DE  0741               	addwf	??_main+1,w
  1850  02DF  3EBD               	addlw	(low (_Semafori| (0+256)))& (0+255)
  1851  02E0  0084               	movwf	4
  1852  02E1  1783               	bsf	3,7	;select IRP bank3
  1853  02E2  0800               	movf	0,w
  1854  02E3  00C2               	movwf	??_main+2
  1855  02E4  0A84               	incf	4,f
  1856  02E5  0800               	movf	0,w
  1857  02E6  00C3               	movwf	??_main+3
  1858  02E7  1683               	bsf	3,5	;RP0=1, select bank3
  1859  02E8  1703               	bsf	3,6	;RP1=1, select bank3
  1860  02E9  0860               	movf	main@colorId^(0+384),w
  1861  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1862  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1863  02EC  00C4               	movwf	??_main+4
  1864  02ED  0744               	addwf	??_main+4,w
  1865  02EE  0742               	addwf	??_main+2,w
  1866  02EF  00C5               	movwf	??_main+5
  1867  02F0  0843               	movf	??_main+3,w
  1868  02F1  1803               	skipnc
  1869  02F2  3E01               	addlw	1
  1870  02F3  00C6               	movwf	??_main+6
  1871  02F4  0845               	movf	??_main+5,w
  1872  02F5  0084               	movwf	4
  1873  02F6  1783               	bsf	3,7
  1874  02F7  1C46               	btfss	??_main+6,0
  1875  02F8  1383               	bcf	3,7
  1876  02F9  0824               	movf	?_GetTime,w
  1877  02FA  0080               	movwf	0
  1878  02FB  0A84               	incf	4,f
  1879  02FC  0825               	movf	?_GetTime+1,w
  1880  02FD  0080               	movwf	0
  1881                           
  1882                           ;debug.c: 248:                     }
  1883  02FE  2B26               	goto	l3018
  1884  02FF                     l3014:	
  1885                           
  1886                           ;debug.c: 250:                     {;debug.c: 251:                         to_update.id=
      +                          semaforoId;
  1887  02FF  1683               	bsf	3,5	;RP0=1, select bank3
  1888  0300  1703               	bsf	3,6	;RP1=1, select bank3
  1889  0301  0864               	movf	main@semaforoId^(0+384),w
  1890  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0304  00C0               	movwf	??_main
  1893  0305  0840               	movf	??_main,w
  1894  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1895  0307  1303               	bcf	3,6	;RP1=0, select bank1
  1896  0308  00A6               	movwf	(_to_update^(0+128)+6)
  1897  0309                     l3016:	
  1898                           
  1899                           ;debug.c: 252:                         to_update.new_times[colorId]=GetTime(index, dataF
      +                          romGateway);
  1900  0309  3090               	movlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1901  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1902  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1903  030C  00C0               	movwf	??_main
  1904  030D  0840               	movf	??_main,w
  1905  030E  00A4               	movwf	GetTime@_dataFromGateway
  1906  030F  1683               	bsf	3,5	;RP0=1, select bank3
  1907  0310  1703               	bsf	3,6	;RP1=1, select bank3
  1908  0311  0869               	movf	main@index^(0+384),w
  1909  0312  120A  158A  260B  120A  118A  	fcall	_GetTime
  1910  0317  1683               	bsf	3,5	;RP0=1, select bank3
  1911  0318  1703               	bsf	3,6	;RP1=1, select bank3
  1912  0319  0860               	movf	main@colorId^(0+384),w
  1913  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1914  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1915  031C  00C1               	movwf	??_main+1
  1916  031D  0741               	addwf	??_main+1,w
  1917  031E  3EA0               	addlw	(low (_to_update| 0))& (0+255)
  1918  031F  0084               	movwf	4
  1919  0320  0824               	movf	?_GetTime,w
  1920  0321  1383               	bcf	3,7	;select IRP bank1
  1921  0322  0080               	movwf	0
  1922  0323  0A84               	incf	4,f
  1923  0324  0825               	movf	?_GetTime+1,w
  1924  0325  0080               	movwf	0
  1925  0326                     l3018:	
  1926                           
  1927                           ;debug.c: 254:                 }
  1928  0326  3001               	movlw	1
  1929  0327  00C0               	movwf	??_main
  1930  0328  0840               	movf	??_main,w
  1931  0329  1683               	bsf	3,5	;RP0=1, select bank3
  1932  032A  1703               	bsf	3,6	;RP1=1, select bank3
  1933  032B  07E7               	addwf	main@i_447^(0+384),f
  1934  032C  2A7A               	goto	l2996
  1935  032D                     l261:	
  1936                           ;debug.c: 256:         }
  1937                           
  1938                           
  1939                           ;debug.c: 261:         if (secondPassed.Bit && cycled.Bit)
  1940  032D  1283               	bcf	3,5	;RP0=0, select bank0
  1941  032E  1303               	bcf	3,6	;RP1=0, select bank0
  1942  032F  1C53               	btfss	_secondPassed,0
  1943  0330  2B32               	goto	u3011
  1944  0331  2B33               	goto	u3010
  1945  0332                     u3011:	
  1946  0332  2BE2               	goto	l3042
  1947  0333                     u3010:	
  1948  0333                     l3022:	
  1949  0333  1C52               	btfss	_cycled,0
  1950  0334  2B36               	goto	u3021
  1951  0335  2B37               	goto	u3020
  1952  0336                     u3021:	
  1953  0336  2BE2               	goto	l3042
  1954  0337                     u3020:	
  1955  0337                     l3024:	
  1956                           
  1957                           ;debug.c: 262:         {;debug.c: 263:             time++;
  1958  0337  3001               	movlw	1
  1959  0338  1683               	bsf	3,5	;RP0=1, select bank3
  1960  0339  1703               	bsf	3,6	;RP1=1, select bank3
  1961  033A  07E1               	addwf	main@time^(0+384),f
  1962  033B  1803               	skipnc
  1963  033C  0AE2               	incf	(main@time+1)^(0+384),f
  1964  033D  3000               	movlw	0
  1965  033E  07E2               	addwf	(main@time+1)^(0+384),f
  1966  033F                     l3026:	
  1967                           
  1968                           ;debug.c: 265:             if ((*Semafori[id_semaforo]).times[lux_select] - time < 0)
  1969  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0341  085E               	movf	_id_semaforo,w
  1972  0342  00C0               	movwf	??_main
  1973  0343  0740               	addwf	??_main,w
  1974  0344  3EBD               	addlw	(low (_Semafori| (0+256)))& (0+255)
  1975  0345  0084               	movwf	4
  1976  0346  1783               	bsf	3,7	;select IRP bank3
  1977  0347  0800               	movf	0,w
  1978  0348  00C1               	movwf	??_main+1
  1979  0349  0A84               	incf	4,f
  1980  034A  0800               	movf	0,w
  1981  034B  00C2               	movwf	??_main+2
  1982  034C  1683               	bsf	3,5	;RP0=1, select bank3
  1983  034D  1703               	bsf	3,6	;RP1=1, select bank3
  1984  034E  0868               	movf	main@lux_select^(0+384),w
  1985  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0351  00C3               	movwf	??_main+3
  1988  0352  0743               	addwf	??_main+3,w
  1989  0353  0741               	addwf	??_main+1,w
  1990  0354  00C4               	movwf	??_main+4
  1991  0355  0842               	movf	??_main+2,w
  1992  0356  1803               	skipnc
  1993  0357  3E01               	addlw	1
  1994  0358  00C5               	movwf	??_main+5
  1995  0359  0844               	movf	??_main+4,w
  1996  035A  0084               	movwf	4
  1997  035B  1783               	bsf	3,7
  1998  035C  1C45               	btfss	??_main+5,0
  1999  035D  1383               	bcf	3,7
  2000  035E  0800               	movf	0,w
  2001  035F  00C6               	movwf	??_main+6
  2002  0360  0A84               	incf	4,f
  2003  0361  0800               	movf	0,w
  2004  0362  00C7               	movwf	??_main+7
  2005  0363  1683               	bsf	3,5	;RP0=1, select bank3
  2006  0364  1703               	bsf	3,6	;RP1=1, select bank3
  2007  0365  0861               	movf	main@time^(0+384),w
  2008  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0368  0246               	subwf	??_main+6,w
  2011  0369  00C8               	movwf	??_main+8
  2012  036A  1683               	bsf	3,5	;RP0=1, select bank3
  2013  036B  1703               	bsf	3,6	;RP1=1, select bank3
  2014  036C  0862               	movf	(main@time+1)^(0+384),w
  2015  036D  1C03               	skipc
  2016  036E  0A62               	incf	(main@time+1)^(0+384),w
  2017  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0371  0247               	subwf	??_main+7,w
  2020  0372  00C9               	movwf	??_main+9
  2021  0373  1FC9               	btfss	??_main+9,7
  2022  0374  2B76               	goto	u3031
  2023  0375  2B77               	goto	u3030
  2024  0376                     u3031:	
  2025  0376  2BA0               	goto	l3040
  2026  0377                     u3030:	
  2027  0377                     l3028:	
  2028                           
  2029                           ;debug.c: 266:             {;debug.c: 267:                 lux_select++;
  2030  0377  3001               	movlw	1
  2031  0378  00C0               	movwf	??_main
  2032  0379  0840               	movf	??_main,w
  2033  037A  1683               	bsf	3,5	;RP0=1, select bank3
  2034  037B  1703               	bsf	3,6	;RP1=1, select bank3
  2035  037C  07E8               	addwf	main@lux_select^(0+384),f
  2036  037D                     l3030:	
  2037                           
  2038                           ;debug.c: 268:                 time=1;
  2039  037D  3001               	movlw	1
  2040  037E  00E1               	movwf	main@time^(0+384)
  2041  037F  3000               	movlw	0
  2042  0380  00E2               	movwf	(main@time^(0+384)+1)
  2043  0381                     l3032:	
  2044                           
  2045                           ;debug.c: 270:                 if (lux_select >= 3)
  2046  0381  3003               	movlw	3
  2047  0382  0268               	subwf	main@lux_select^(0+384),w
  2048  0383  1C03               	skipc
  2049  0384  2B86               	goto	u3041
  2050  0385  2B87               	goto	u3040
  2051  0386                     u3041:	
  2052  0386  2BA0               	goto	l3040
  2053  0387                     u3040:	
  2054  0387                     l3034:	
  2055                           
  2056                           ;debug.c: 271:                 {;debug.c: 272:                     lux_select=0;
  2057  0387  01E8               	clrf	main@lux_select^(0+384)
  2058  0388                     l3036:	
  2059                           
  2060                           ;debug.c: 275:                     UpdateTimes(Semafori, &to_update);
  2061  0388  30A0               	movlw	(low (_to_update| 0))& (0+255)
  2062  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2063  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2064  038B  00C0               	movwf	??_main
  2065  038C  0840               	movf	??_main,w
  2066  038D  00A4               	movwf	UpdateTimes@_to_update
  2067  038E  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  2068  038F  120A  158A  269D  120A  118A  	fcall	_UpdateTimes
  2069  0394                     l3038:	
  2070                           
  2071                           ;debug.c: 276:                     ChangeTrafficLight(Semafori, &id_semaforo);
  2072  0394  305E               	movlw	(low (_id_semaforo| 0))& (0+255)
  2073  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0397  00C0               	movwf	??_main
  2076  0398  0840               	movf	??_main,w
  2077  0399  00AB               	movwf	ChangeTrafficLight@_n_semafori
  2078  039A  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  2079  039B  120A  158A  26EE  120A  118A  	fcall	_ChangeTrafficLight
  2080  03A0                     l3040:	
  2081                           
  2082                           ;debug.c: 280:             GetDigits(&centinaia, &decine, &unita, (*Semafori[id_semaforo
      +                          ]).times[lux_select] - time);
  2083  03A0  3060               	movlw	(low (_decine| 0))& (0+255)
  2084  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2085  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2086  03A3  00C0               	movwf	??_main
  2087  03A4  0840               	movf	??_main,w
  2088  03A5  00B4               	movwf	GetDigits@decine
  2089  03A6  3061               	movlw	(low (_unita| 0))& (0+255)
  2090  03A7  00C1               	movwf	??_main+1
  2091  03A8  0841               	movf	??_main+1,w
  2092  03A9  00B5               	movwf	GetDigits@unita
  2093  03AA  085E               	movf	_id_semaforo,w
  2094  03AB  00C2               	movwf	??_main+2
  2095  03AC  0742               	addwf	??_main+2,w
  2096  03AD  3EBD               	addlw	(low (_Semafori| (0+256)))& (0+255)
  2097  03AE  0084               	movwf	4
  2098  03AF  1783               	bsf	3,7	;select IRP bank3
  2099  03B0  0800               	movf	0,w
  2100  03B1  00C3               	movwf	??_main+3
  2101  03B2  0A84               	incf	4,f
  2102  03B3  0800               	movf	0,w
  2103  03B4  00C4               	movwf	??_main+4
  2104  03B5  1683               	bsf	3,5	;RP0=1, select bank3
  2105  03B6  1703               	bsf	3,6	;RP1=1, select bank3
  2106  03B7  0868               	movf	main@lux_select^(0+384),w
  2107  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2108  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2109  03BA  00C5               	movwf	??_main+5
  2110  03BB  0745               	addwf	??_main+5,w
  2111  03BC  0743               	addwf	??_main+3,w
  2112  03BD  00C6               	movwf	??_main+6
  2113  03BE  0844               	movf	??_main+4,w
  2114  03BF  1803               	skipnc
  2115  03C0  3E01               	addlw	1
  2116  03C1  00C7               	movwf	??_main+7
  2117  03C2  0846               	movf	??_main+6,w
  2118  03C3  0084               	movwf	4
  2119  03C4  1783               	bsf	3,7
  2120  03C5  1C47               	btfss	??_main+7,0
  2121  03C6  1383               	bcf	3,7
  2122  03C7  0800               	movf	0,w
  2123  03C8  00C8               	movwf	??_main+8
  2124  03C9  0A84               	incf	4,f
  2125  03CA  0800               	movf	0,w
  2126  03CB  00C9               	movwf	??_main+9
  2127  03CC  1683               	bsf	3,5	;RP0=1, select bank3
  2128  03CD  1703               	bsf	3,6	;RP1=1, select bank3
  2129  03CE  0861               	movf	main@time^(0+384),w
  2130  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2131  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2132  03D1  0248               	subwf	??_main+8,w
  2133  03D2  00B6               	movwf	GetDigits@Time
  2134  03D3  1683               	bsf	3,5	;RP0=1, select bank3
  2135  03D4  1703               	bsf	3,6	;RP1=1, select bank3
  2136  03D5  0862               	movf	(main@time+1)^(0+384),w
  2137  03D6  1C03               	skipc
  2138  03D7  0A62               	incf	(main@time+1)^(0+384),w
  2139  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2140  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2141  03DA  0249               	subwf	??_main+9,w
  2142  03DB  00B7               	movwf	GetDigits@Time+1
  2143  03DC  305F               	movlw	(low (_centinaia| 0))& (0+255)
  2144  03DD  120A  158A  2798  120A  118A  	fcall	_GetDigits
  2145  03E2                     l3042:	
  2146                           
  2147                           ;debug.c: 284:         if (disp != old_disp)
  2148  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2149  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2150  03E4  0850               	movf	_disp,w
  2151  03E5  0651               	xorwf	_old_disp,w
  2152  03E6  1903               	skipnz
  2153  03E7  2BE9               	goto	u3051
  2154  03E8  2BEA               	goto	u3050
  2155  03E9                     u3051:	
  2156  03E9  2C64               	goto	l3062
  2157  03EA                     u3050:	
  2158  03EA                     l3044:	
  2159                           
  2160                           ;debug.c: 285:         {;debug.c: 286:             old_disp = disp;
  2161  03EA  0850               	movf	_disp,w
  2162  03EB  00C0               	movwf	??_main
  2163  03EC  0840               	movf	??_main,w
  2164  03ED  00D1               	movwf	_old_disp
  2165                           
  2166                           ;debug.c: 287:             switch (disp)
  2167  03EE  2C51               	goto	l3060
  2168  03EF                     l3046:	
  2169                           
  2170                           ;debug.c: 290:                 if (centinaia > 0)
  2171  03EF  085F               	movf	_centinaia,w
  2172  03F0  1903               	btfsc	3,2
  2173  03F1  2BF3               	goto	u3061
  2174  03F2  2BF4               	goto	u3060
  2175  03F3                     u3061:	
  2176  03F3  2C07               	goto	l274
  2177  03F4                     u3060:	
  2178  03F4                     l3048:	
  2179                           
  2180                           ;debug.c: 291:                 {;debug.c: 292:                     SetDisplay(1, 0, 0, d
      +                          isplay[centinaia]);
  2181  03F4  01A4               	clrf	SetDisplay@d2
  2182  03F5  01A5               	clrf	SetDisplay@d3
  2183  03F6  085F               	movf	_centinaia,w
  2184  03F7  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2185  03F8  0084               	movwf	4
  2186  03F9  120A  158A  2000  120A  118A  	fcall	stringdir
  2187  03FE  00C0               	movwf	??_main
  2188  03FF  0840               	movf	??_main,w
  2189  0400  00A6               	movwf	SetDisplay@value
  2190  0401  3001               	movlw	1
  2191  0402  120A  158A  24D2  120A  118A  	fcall	_SetDisplay
  2192  0407                     l274:	
  2193                           ;debug.c: 293:                 }
  2194                           
  2195                           
  2196                           ;debug.c: 295:                 SetDisplay(1, 0, 0, display[id_semaforo]);
  2197  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0409  01A4               	clrf	SetDisplay@d2
  2200  040A  01A5               	clrf	SetDisplay@d3
  2201  040B  085E               	movf	_id_semaforo,w
  2202  040C  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2203  040D  0084               	movwf	4
  2204  040E  120A  158A  2000  120A  118A  	fcall	stringdir
  2205  0413  00C0               	movwf	??_main
  2206  0414  0840               	movf	??_main,w
  2207  0415  00A6               	movwf	SetDisplay@value
  2208  0416  3001               	movlw	1
  2209  0417  120A  158A  24D2  120A  118A  	fcall	_SetDisplay
  2210                           
  2211                           ;debug.c: 296:                 break;
  2212  041C  2C64               	goto	l3062
  2213  041D                     l3050:	
  2214                           
  2215                           ;debug.c: 298:                 if (decine > 0 || centinaia > 0)
  2216  041D  0860               	movf	_decine,w
  2217  041E  1D03               	btfss	3,2
  2218  041F  2C21               	goto	u3071
  2219  0420  2C22               	goto	u3070
  2220  0421                     u3071:	
  2221  0421  2C27               	goto	l3054
  2222  0422                     u3070:	
  2223  0422                     l3052:	
  2224  0422  085F               	movf	_centinaia,w
  2225  0423  1903               	btfsc	3,2
  2226  0424  2C26               	goto	u3081
  2227  0425  2C27               	goto	u3080
  2228  0426                     u3081:	
  2229  0426  2C64               	goto	l3062
  2230  0427                     u3080:	
  2231  0427                     l3054:	
  2232                           
  2233                           ;debug.c: 299:                 {;debug.c: 300:                     SetDisplay(0, 1, 0, d
      +                          isplay[decine]);
  2234  0427  01A4               	clrf	SetDisplay@d2
  2235  0428  0AA4               	incf	SetDisplay@d2,f
  2236  0429  01A5               	clrf	SetDisplay@d3
  2237  042A  0860               	movf	_decine,w
  2238  042B  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2239  042C  0084               	movwf	4
  2240  042D  120A  158A  2000  120A  118A  	fcall	stringdir
  2241  0432  00C0               	movwf	??_main
  2242  0433  0840               	movf	??_main,w
  2243  0434  00A6               	movwf	SetDisplay@value
  2244  0435  3000               	movlw	0
  2245  0436  120A  158A  24D2  120A  118A  	fcall	_SetDisplay
  2246  043B  2C64               	goto	l3062
  2247  043C                     l3056:	
  2248                           
  2249                           ;debug.c: 305:                 SetDisplay(0, 0, 1, display[unita]);
  2250  043C  01A4               	clrf	SetDisplay@d2
  2251  043D  01A5               	clrf	SetDisplay@d3
  2252  043E  0AA5               	incf	SetDisplay@d3,f
  2253  043F  0861               	movf	_unita,w
  2254  0440  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2255  0441  0084               	movwf	4
  2256  0442  120A  158A  2000  120A  118A  	fcall	stringdir
  2257  0447  00C0               	movwf	??_main
  2258  0448  0840               	movf	??_main,w
  2259  0449  00A6               	movwf	SetDisplay@value
  2260  044A  3000               	movlw	0
  2261  044B  120A  158A  24D2  120A  118A  	fcall	_SetDisplay
  2262                           
  2263                           ;debug.c: 307:                 break;
  2264  0450  2C64               	goto	l3062
  2265  0451                     l3060:	
  2266  0451  0850               	movf	_disp,w
  2267  0452  00C0               	movwf	??_main
  2268  0453  01C1               	clrf	??_main+1
  2269                           
  2270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2271                           ; Switch size 1, requested type "simple"
  2272                           ; Number of cases is 1, Range of values is 0 to 0
  2273                           ; switch strategies available:
  2274                           ; Name         Instructions Cycles
  2275                           ; simple_byte            4     3 (average)
  2276                           ; direct_byte           11     8 (fixed)
  2277                           ; jumptable            260     6 (fixed)
  2278                           ;	Chosen strategy is simple_byte
  2279  0454  0841               	movf	??_main+1,w
  2280  0455  3A00               	xorlw	0	; case 0
  2281  0456  1903               	skipnz
  2282  0457  2C59               	goto	l3176
  2283  0458  2C64               	goto	l3062
  2284  0459                     l3176:	
  2285                           
  2286                           ; Switch size 1, requested type "simple"
  2287                           ; Number of cases is 3, Range of values is 0 to 2
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte           10     6 (average)
  2291                           ; direct_byte           17     8 (fixed)
  2292                           ; jumptable            260     6 (fixed)
  2293                           ;	Chosen strategy is simple_byte
  2294  0459  0840               	movf	??_main,w
  2295  045A  3A00               	xorlw	0	; case 0
  2296  045B  1903               	skipnz
  2297  045C  2BEF               	goto	l3046
  2298  045D  3A01               	xorlw	1	; case 1
  2299  045E  1903               	skipnz
  2300  045F  2C1D               	goto	l3050
  2301  0460  3A03               	xorlw	3	; case 2
  2302  0461  1903               	skipnz
  2303  0462  2C3C               	goto	l3056
  2304  0463  2C64               	goto	l3062
  2305  0464                     l3062:	
  2306                           
  2307                           ;debug.c: 310:         disp = (disp + 1) % 3;
  2308  0464  3003               	movlw	3
  2309  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0467  00A4               	movwf	___awmod@divisor
  2312  0468  3000               	movlw	0
  2313  0469  00A5               	movwf	___awmod@divisor+1
  2314  046A  0850               	movf	_disp,w
  2315  046B  3E01               	addlw	1
  2316  046C  00A6               	movwf	___awmod@dividend
  2317  046D  3000               	movlw	0
  2318  046E  1803               	skipnc
  2319  046F  3001               	movlw	1
  2320  0470  00A7               	movwf	___awmod@dividend+1
  2321  0471  120A  118A  279F  120A  118A  	fcall	___awmod
  2322  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0478  0824               	movf	?___awmod,w
  2325  0479  00C0               	movwf	??_main
  2326  047A  0840               	movf	??_main,w
  2327  047B  00D0               	movwf	_disp
  2328  047C                     l3064:	
  2329                           
  2330                           ;debug.c: 316:         if (secondPassed.Bit && cycled.Bit)
  2331  047C  1C53               	btfss	_secondPassed,0
  2332  047D  2C7F               	goto	u3091
  2333  047E  2C80               	goto	u3090
  2334  047F                     u3091:	
  2335  047F  2C86               	goto	l281
  2336  0480                     u3090:	
  2337  0480                     l3066:	
  2338  0480  1C52               	btfss	_cycled,0
  2339  0481  2C83               	goto	u3101
  2340  0482  2C84               	goto	u3100
  2341  0483                     u3101:	
  2342  0483  2C86               	goto	l281
  2343  0484                     u3100:	
  2344  0484                     l3068:	
  2345                           
  2346                           ;debug.c: 317:         {;debug.c: 318:             secondPassed.Bit = 0;
  2347  0484  1053               	bcf	_secondPassed,0
  2348                           
  2349                           ;debug.c: 319:             cycled.Bit = 0;
  2350  0485  1052               	bcf	_cycled,0
  2351  0486                     l281:	
  2352                           ;debug.c: 320:         }
  2353                           
  2354                           
  2355                           ;debug.c: 321:         if (secondPassed.Bit && !cycled.Bit)
  2356  0486  1C53               	btfss	_secondPassed,0
  2357  0487  2C89               	goto	u3111
  2358  0488  2C8A               	goto	u3110
  2359  0489                     u3111:	
  2360  0489  2887               	goto	l2912
  2361  048A                     u3110:	
  2362  048A                     l3070:	
  2363  048A  1852               	btfsc	_cycled,0
  2364  048B  2C8D               	goto	u3121
  2365  048C  2C8E               	goto	u3120
  2366  048D                     u3121:	
  2367  048D  2887               	goto	l2912
  2368  048E                     u3120:	
  2369  048E                     l3072:	
  2370                           
  2371                           ;debug.c: 322:         {;debug.c: 323:             cycled.Bit = 1;
  2372  048E  1452               	bsf	_cycled,0
  2373  048F  2887               	goto	l2912
  2374  0490  120A  118A  2810   	ljmp	start
  2375  0493                     __end_of_main:	
  2376                           
  2377                           	psect	text1
  2378  0D6B                     __ptext1:	
  2379 ;; *************** function _sendByte *****************
  2380 ;; Defined at:
  2381 ;;		line 387 in file "debug.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  byte0           1    wreg     unsigned char 
  2384 ;;  byte1           1   24[BANK0 ] unsigned char 
  2385 ;;  valore          1   25[BANK0 ] unsigned char 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  byte0           1   29[BANK0 ] unsigned char 
  2388 ;;  i               1   31[BANK0 ] unsigned char 
  2389 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2390 ;;		 -> BuildByte@txByte(5), 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       2       0       0       0
  2401 ;;      Locals:         0       3       0       0       0
  2402 ;;      Temps:          0       3       0       0       0
  2403 ;;      Totals:         0       8       0       0       0
  2404 ;;Total ram usage:        8 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    4
  2407 ;; This function calls:
  2408 ;;		_BuildByte
  2409 ;;		_UART_TxChar
  2410 ;; This function is called by:
  2411 ;;		_main
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function _sendByte
  2417  0D6B                     _sendByte:	
  2418                           
  2419                           ;incstack = 0
  2420                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2421                           ;sendByte@byte0 stored from wreg
  2422  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0D6D  00BD               	movwf	sendByte@byte0
  2425  0D6E                     l2832:	
  2426                           
  2427                           ;debug.c: 387: void sendByte(char byte0, char byte1, char valore);debug.c: 388: {;debug.
      +                          c: 389:     char *txByte;;debug.c: 390:     txByte = BuildByte(byte0, byte1, valore);
  2428  0D6E  0838               	movf	sendByte@byte1,w
  2429  0D6F  00BA               	movwf	??_sendByte
  2430  0D70  083A               	movf	??_sendByte,w
  2431  0D71  00A4               	movwf	BuildByte@byte1
  2432  0D72  0839               	movf	sendByte@valore,w
  2433  0D73  00BB               	movwf	??_sendByte+1
  2434  0D74  083B               	movf	??_sendByte+1,w
  2435  0D75  00A5               	movwf	BuildByte@valore
  2436  0D76  083D               	movf	sendByte@byte0,w
  2437  0D77  120A  118A  2493  120A  158A  	fcall	_BuildByte
  2438  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0D7E  00BC               	movwf	??_sendByte+2
  2441  0D7F  083C               	movf	??_sendByte+2,w
  2442  0D80  00BE               	movwf	sendByte@txByte
  2443  0D81                     l2834:	
  2444                           
  2445                           ;debug.c: 392:     for (unsigned char i = 0; i < 5; i++)
  2446  0D81  01BF               	clrf	sendByte@i
  2447  0D82                     l2840:	
  2448                           
  2449                           ;debug.c: 393:     {;debug.c: 394:         UART_TxChar(*(txByte++));
  2450  0D82  083E               	movf	sendByte@txByte,w
  2451  0D83  0084               	movwf	4
  2452  0D84  1383               	bcf	3,7	;select IRP bank0
  2453  0D85  0800               	movf	0,w
  2454  0D86  120A  158A  24A1  120A  158A  	fcall	_UART_TxChar
  2455  0D8B                     l2842:	
  2456  0D8B  3001               	movlw	1
  2457  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2459  0D8E  00BA               	movwf	??_sendByte
  2460  0D8F  083A               	movf	??_sendByte,w
  2461  0D90  07BE               	addwf	sendByte@txByte,f
  2462  0D91                     l2844:	
  2463                           
  2464                           ;debug.c: 395:     }
  2465  0D91  3001               	movlw	1
  2466  0D92  00BA               	movwf	??_sendByte
  2467  0D93  083A               	movf	??_sendByte,w
  2468  0D94  07BF               	addwf	sendByte@i,f
  2469  0D95                     l2846:	
  2470  0D95  3005               	movlw	5
  2471  0D96  023F               	subwf	sendByte@i,w
  2472  0D97  1C03               	skipc
  2473  0D98  2D9A               	goto	u2801
  2474  0D99  2D9B               	goto	u2800
  2475  0D9A                     u2801:	
  2476  0D9A  2D82               	goto	l2840
  2477  0D9B                     u2800:	
  2478  0D9B                     l320:	
  2479  0D9B  0008               	return
  2480  0D9C                     __end_of_sendByte:	
  2481                           
  2482                           	psect	text2
  2483  0CA1                     __ptext2:	
  2484 ;; *************** function _UART_TxChar *****************
  2485 ;; Defined at:
  2486 ;;		line 362 in file "debug.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  ch              1    wreg     unsigned char 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  ch              1    4[BANK0 ] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2500 ;;      Params:         0       0       0       0       0
  2501 ;;      Locals:         0       1       0       0       0
  2502 ;;      Temps:          0       0       0       0       0
  2503 ;;      Totals:         0       1       0       0       0
  2504 ;;Total ram usage:        1 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    3
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_sendByte
  2511 ;;		_UART_Write_Text
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           
  2516                           ;psect for function _UART_TxChar
  2517  0CA1                     _UART_TxChar:	
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _UART_TxChar: [wreg]
  2521                           ;UART_TxChar@ch stored from wreg
  2522  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0CA3  00A4               	movwf	UART_TxChar@ch
  2525  0CA4                     l2586:	
  2526  0CA4                     l300:	
  2527                           ;debug.c: 365:         ;
  2528                           
  2529                           
  2530                           ;debug.c: 364:     while (!TXIF)
  2531  0CA4  1E0C               	btfss	12,4	;volatile
  2532  0CA5  2CA7               	goto	u2371
  2533  0CA6  2CA8               	goto	u2370
  2534  0CA7                     u2371:	
  2535  0CA7  2CA4               	goto	l300
  2536  0CA8                     u2370:	
  2537  0CA8                     l302:	
  2538                           
  2539                           ;debug.c: 366:     TXIF = 0;
  2540  0CA8  120C               	bcf	12,4	;volatile
  2541  0CA9                     l2588:	
  2542                           
  2543                           ;debug.c: 367:     TXREG = ch;
  2544  0CA9  0824               	movf	UART_TxChar@ch,w
  2545  0CAA  0099               	movwf	25	;volatile
  2546  0CAB                     l303:	
  2547  0CAB  0008               	return
  2548  0CAC                     __end_of_UART_TxChar:	
  2549                           
  2550                           	psect	text3
  2551  0493                     __ptext3:	
  2552 ;; *************** function _BuildByte *****************
  2553 ;; Defined at:
  2554 ;;		line 2 in file "./CustomLib/Serial.h"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  byte0           1    wreg     unsigned char 
  2557 ;;  byte1           1    4[BANK0 ] unsigned char 
  2558 ;;  valore          1    5[BANK0 ] unsigned char 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  byte0           1    8[BANK0 ] unsigned char 
  2561 ;;  y               2   18[BANK0 ] int 
  2562 ;;  y               2   16[BANK0 ] int 
  2563 ;;  i               2   22[BANK0 ] int 
  2564 ;;  i               2   20[BANK0 ] int 
  2565 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2566 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2567 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      PTR unsigned char 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         0       2       0       0       0
  2578 ;;      Locals:         0      16       0       0       0
  2579 ;;      Temps:          0       2       0       0       0
  2580 ;;      Totals:         0      20       0       0       0
  2581 ;;Total ram usage:       20 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    3
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_sendByte
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _BuildByte
  2593  0493                     _BuildByte:	
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2597                           ;BuildByte@byte0 stored from wreg
  2598  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0495  00A8               	movwf	BuildByte@byte0
  2601  0496                     l2518:	
  2602                           
  2603                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2604  0496  0828               	movf	BuildByte@byte0,w
  2605  0497  397F               	andlw	127
  2606  0498  00A6               	movwf	??_BuildByte
  2607  0499  0826               	movf	??_BuildByte,w
  2608  049A  00A9               	movwf	BuildByte@txByte
  2609                           
  2610                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2611  049B  0824               	movf	BuildByte@byte1,w
  2612  049C  397F               	andlw	127
  2613  049D  00A6               	movwf	??_BuildByte
  2614  049E  0826               	movf	??_BuildByte,w
  2615  049F  00AA               	movwf	BuildByte@txByte+1
  2616                           
  2617                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2618  04A0  0825               	movf	BuildByte@valore,w
  2619  04A1  397F               	andlw	127
  2620  04A2  00A6               	movwf	??_BuildByte
  2621  04A3  0826               	movf	??_BuildByte,w
  2622  04A4  00AB               	movwf	BuildByte@txByte+2
  2623  04A5                     l2520:	
  2624                           
  2625                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2626  04A5  0825               	movf	BuildByte@valore,w
  2627  04A6  00A6               	movwf	??_BuildByte
  2628  04A7  3007               	movlw	7
  2629  04A8                     u2275:	
  2630  04A8  1003               	clrc
  2631  04A9  0CA6               	rrf	??_BuildByte,f
  2632  04AA  3EFF               	addlw	-1
  2633  04AB  1D03               	skipz
  2634  04AC  2CA8               	goto	u2275
  2635  04AD  0826               	movf	??_BuildByte,w
  2636  04AE  397F               	andlw	127
  2637  04AF  00A7               	movwf	??_BuildByte+1
  2638  04B0  0827               	movf	??_BuildByte+1,w
  2639  04B1  00AC               	movwf	BuildByte@txByte+3
  2640  04B2                     l2522:	
  2641                           
  2642                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2643  04B2  01AE               	clrf	BuildByte@sommaRow
  2644  04B3                     l2524:	
  2645                           
  2646                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2647  04B3  01AF               	clrf	BuildByte@sommaColumn
  2648  04B4                     l2526:	
  2649                           
  2650                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2651  04B4  01B4               	clrf	BuildByte@i
  2652  04B5  01B5               	clrf	BuildByte@i+1
  2653  04B6                     l2532:	
  2654                           
  2655                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2656  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2657  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2658  04B8  01B0               	clrf	BuildByte@y
  2659  04B9  01B1               	clrf	BuildByte@y+1
  2660  04BA                     l2538:	
  2661                           
  2662                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2663  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2664  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2665  04BC  0834               	movf	BuildByte@i,w
  2666  04BD  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2667  04BE  0084               	movwf	4
  2668  04BF  1383               	bcf	3,7	;select IRP bank0
  2669  04C0  0800               	movf	0,w
  2670  04C1  00A6               	movwf	??_BuildByte
  2671  04C2  0A30               	incf	BuildByte@y,w
  2672  04C3  2CC6               	goto	u2284
  2673  04C4                     u2285:	
  2674  04C4  1003               	clrc
  2675  04C5  0CA6               	rrf	??_BuildByte,f
  2676  04C6                     u2284:	
  2677  04C6  3EFF               	addlw	-1
  2678  04C7  1D03               	skipz
  2679  04C8  2CC4               	goto	u2285
  2680  04C9  0826               	movf	??_BuildByte,w
  2681  04CA  3901               	andlw	1
  2682  04CB  00A7               	movwf	??_BuildByte+1
  2683  04CC  0827               	movf	??_BuildByte+1,w
  2684  04CD  07AE               	addwf	BuildByte@sommaRow,f
  2685  04CE                     l2540:	
  2686                           
  2687                           ;./CustomLib/Serial.h: 18:         }
  2688  04CE  3001               	movlw	1
  2689  04CF  07B0               	addwf	BuildByte@y,f
  2690  04D0  1803               	skipnc
  2691  04D1  0AB1               	incf	BuildByte@y+1,f
  2692  04D2  3000               	movlw	0
  2693  04D3  07B1               	addwf	BuildByte@y+1,f
  2694  04D4                     l2542:	
  2695  04D4  0831               	movf	BuildByte@y+1,w
  2696  04D5  3A80               	xorlw	128
  2697  04D6  00FF               	movwf	btemp+1
  2698  04D7  3080               	movlw	128
  2699  04D8  027F               	subwf	btemp+1,w
  2700  04D9  1D03               	skipz
  2701  04DA  2CDD               	goto	u2295
  2702  04DB  3008               	movlw	8
  2703  04DC  0230               	subwf	BuildByte@y,w
  2704  04DD                     u2295:	
  2705  04DD  1C03               	skipc
  2706  04DE  2CE0               	goto	u2291
  2707  04DF  2CE1               	goto	u2290
  2708  04E0                     u2291:	
  2709  04E0  2CBA               	goto	l2538
  2710  04E1                     u2290:	
  2711  04E1                     l116:	
  2712                           
  2713                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2714  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2715  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2716  04E3  1C2E               	btfss	BuildByte@sommaRow,0
  2717  04E4  2CE6               	goto	u2301
  2718  04E5  2CE7               	goto	u2300
  2719  04E6                     u2301:	
  2720  04E6  2CEF               	goto	l2546
  2721  04E7                     u2300:	
  2722  04E7                     l2544:	
  2723                           
  2724                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2725  04E7  3080               	movlw	128
  2726  04E8  00A6               	movwf	??_BuildByte
  2727  04E9  0834               	movf	BuildByte@i,w
  2728  04EA  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2729  04EB  0084               	movwf	4
  2730  04EC  0826               	movf	??_BuildByte,w
  2731  04ED  1383               	bcf	3,7	;select IRP bank0
  2732  04EE  0780               	addwf	0,f
  2733  04EF                     l2546:	
  2734                           
  2735                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2736  04EF  01AE               	clrf	BuildByte@sommaRow
  2737  04F0                     l2550:	
  2738                           ;./CustomLib/Serial.h: 23:         }
  2739                           
  2740                           
  2741                           ;./CustomLib/Serial.h: 28:     }
  2742  04F0  3001               	movlw	1
  2743  04F1  07B4               	addwf	BuildByte@i,f
  2744  04F2  1803               	skipnc
  2745  04F3  0AB5               	incf	BuildByte@i+1,f
  2746  04F4  3000               	movlw	0
  2747  04F5  07B5               	addwf	BuildByte@i+1,f
  2748  04F6                     l2552:	
  2749  04F6  0835               	movf	BuildByte@i+1,w
  2750  04F7  3A80               	xorlw	128
  2751  04F8  00FF               	movwf	btemp+1
  2752  04F9  3080               	movlw	128
  2753  04FA  027F               	subwf	btemp+1,w
  2754  04FB  1D03               	skipz
  2755  04FC  2CFF               	goto	u2315
  2756  04FD  3004               	movlw	4
  2757  04FE  0234               	subwf	BuildByte@i,w
  2758  04FF                     u2315:	
  2759  04FF  1C03               	skipc
  2760  0500  2D02               	goto	u2311
  2761  0501  2D03               	goto	u2310
  2762  0502                     u2311:	
  2763  0502  2CB6               	goto	l2532
  2764  0503                     u2310:	
  2765  0503                     l2554:	
  2766                           
  2767                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2768  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0505  01B6               	clrf	BuildByte@i_332
  2771  0506  01B7               	clrf	BuildByte@i_332+1
  2772  0507                     l2560:	
  2773                           
  2774                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2775  0507  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0508  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0509  01B2               	clrf	BuildByte@y_333
  2778  050A  01B3               	clrf	BuildByte@y_333+1
  2779  050B                     l2566:	
  2780                           
  2781                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2782  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2783  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2784  050D  0832               	movf	BuildByte@y_333,w
  2785  050E  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2786  050F  0084               	movwf	4
  2787  0510  1383               	bcf	3,7	;select IRP bank0
  2788  0511  0800               	movf	0,w
  2789  0512  00A6               	movwf	??_BuildByte
  2790  0513  0A36               	incf	BuildByte@i_332,w
  2791  0514  2D17               	goto	u2324
  2792  0515                     u2325:	
  2793  0515  1003               	clrc
  2794  0516  0CA6               	rrf	??_BuildByte,f
  2795  0517                     u2324:	
  2796  0517  3EFF               	addlw	-1
  2797  0518  1D03               	skipz
  2798  0519  2D15               	goto	u2325
  2799  051A  0826               	movf	??_BuildByte,w
  2800  051B  3901               	andlw	1
  2801  051C  00A7               	movwf	??_BuildByte+1
  2802  051D  0827               	movf	??_BuildByte+1,w
  2803  051E  07AF               	addwf	BuildByte@sommaColumn,f
  2804  051F                     l2568:	
  2805                           
  2806                           ;./CustomLib/Serial.h: 37:         }
  2807  051F  3001               	movlw	1
  2808  0520  07B2               	addwf	BuildByte@y_333,f
  2809  0521  1803               	skipnc
  2810  0522  0AB3               	incf	BuildByte@y_333+1,f
  2811  0523  3000               	movlw	0
  2812  0524  07B3               	addwf	BuildByte@y_333+1,f
  2813  0525                     l2570:	
  2814  0525  0833               	movf	BuildByte@y_333+1,w
  2815  0526  3A80               	xorlw	128
  2816  0527  00FF               	movwf	btemp+1
  2817  0528  3080               	movlw	128
  2818  0529  027F               	subwf	btemp+1,w
  2819  052A  1D03               	skipz
  2820  052B  2D2E               	goto	u2335
  2821  052C  3004               	movlw	4
  2822  052D  0232               	subwf	BuildByte@y_333,w
  2823  052E                     u2335:	
  2824  052E  1C03               	skipc
  2825  052F  2D31               	goto	u2331
  2826  0530  2D32               	goto	u2330
  2827  0531                     u2331:	
  2828  0531  2D0B               	goto	l2566
  2829  0532                     u2330:	
  2830  0532                     l122:	
  2831                           
  2832                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2833  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2834  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2835  0534  1C2F               	btfss	BuildByte@sommaColumn,0
  2836  0535  2D37               	goto	u2341
  2837  0536  2D38               	goto	u2340
  2838  0537                     u2341:	
  2839  0537  2D45               	goto	l2574
  2840  0538                     u2340:	
  2841  0538                     l2572:	
  2842                           
  2843                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2844  0538  3001               	movlw	1
  2845  0539  00A6               	movwf	??_BuildByte
  2846  053A  0A36               	incf	BuildByte@i_332,w
  2847  053B  2D3E               	goto	u2354
  2848  053C                     u2355:	
  2849  053C  1003               	clrc
  2850  053D  0DA6               	rlf	??_BuildByte,f
  2851  053E                     u2354:	
  2852  053E  3EFF               	addlw	-1
  2853  053F  1D03               	skipz
  2854  0540  2D3C               	goto	u2355
  2855  0541  0826               	movf	??_BuildByte,w
  2856  0542  00A7               	movwf	??_BuildByte+1
  2857  0543  0827               	movf	??_BuildByte+1,w
  2858  0544  07AD               	addwf	BuildByte@txByte+4,f
  2859  0545                     l2574:	
  2860                           
  2861                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2862  0545  01AF               	clrf	BuildByte@sommaColumn
  2863  0546                     l2578:	
  2864                           ;./CustomLib/Serial.h: 42:         }
  2865                           
  2866                           
  2867                           ;./CustomLib/Serial.h: 47:     }
  2868  0546  3001               	movlw	1
  2869  0547  07B6               	addwf	BuildByte@i_332,f
  2870  0548  1803               	skipnc
  2871  0549  0AB7               	incf	BuildByte@i_332+1,f
  2872  054A  3000               	movlw	0
  2873  054B  07B7               	addwf	BuildByte@i_332+1,f
  2874  054C                     l2580:	
  2875  054C  0837               	movf	BuildByte@i_332+1,w
  2876  054D  3A80               	xorlw	128
  2877  054E  00FF               	movwf	btemp+1
  2878  054F  3080               	movlw	128
  2879  0550  027F               	subwf	btemp+1,w
  2880  0551  1D03               	skipz
  2881  0552  2D55               	goto	u2365
  2882  0553  3008               	movlw	8
  2883  0554  0236               	subwf	BuildByte@i_332,w
  2884  0555                     u2365:	
  2885  0555  1C03               	skipc
  2886  0556  2D58               	goto	u2361
  2887  0557  2D59               	goto	u2360
  2888  0558                     u2361:	
  2889  0558  2D07               	goto	l2560
  2890  0559                     u2360:	
  2891  0559                     l2582:	
  2892                           
  2893                           ;./CustomLib/Serial.h: 49:     return txByte;
  2894  0559  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2895  055A                     l125:	
  2896  055A  0008               	return
  2897  055B                     __end_of_BuildByte:	
  2898                           
  2899                           	psect	text4
  2900  0D9C                     __ptext4:	
  2901 ;; *************** function _map *****************
  2902 ;; Defined at:
  2903 ;;		line 1 in file "./CustomLib/Conversions.h"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  x               2   20[BANK0 ] int 
  2906 ;;  in_min          2   22[BANK0 ] int 
  2907 ;;  in_max          2   24[BANK0 ] int 
  2908 ;;  out_min         2   26[BANK0 ] int 
  2909 ;;  out_max         2   28[BANK0 ] int 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2   20[BANK0 ] int 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0      10       0       0       0
  2922 ;;      Locals:         0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0
  2924 ;;      Totals:         0      10       0       0       0
  2925 ;;Total ram usage:       10 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    4
  2928 ;; This function calls:
  2929 ;;		___awdiv
  2930 ;;		___wmul
  2931 ;; This function is called by:
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function _map
  2938  0D9C                     _map:	
  2939  0D9C                     l2726:	
  2940                           ;incstack = 0
  2941                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2942                           
  2943                           
  2944                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2945  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  2946  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  2947  0D9E  0836               	movf	map@in_min,w
  2948  0D9F  0238               	subwf	map@in_max,w
  2949  0DA0  00AB               	movwf	___awdiv@divisor
  2950  0DA1  0837               	movf	map@in_min+1,w
  2951  0DA2  1C03               	skipc
  2952  0DA3  0A37               	incf	map@in_min+1,w
  2953  0DA4  0239               	subwf	map@in_max+1,w
  2954  0DA5  00AC               	movwf	___awdiv@divisor+1
  2955  0DA6  0836               	movf	map@in_min,w
  2956  0DA7  0234               	subwf	map@x,w
  2957  0DA8  00A4               	movwf	___wmul@multiplier
  2958  0DA9  0837               	movf	map@in_min+1,w
  2959  0DAA  1C03               	skipc
  2960  0DAB  0A37               	incf	map@in_min+1,w
  2961  0DAC  0235               	subwf	map@x+1,w
  2962  0DAD  00A5               	movwf	___wmul@multiplier+1
  2963  0DAE  083A               	movf	map@out_min,w
  2964  0DAF  023C               	subwf	map@out_max,w
  2965  0DB0  00A6               	movwf	___wmul@multiplicand
  2966  0DB1  083B               	movf	map@out_min+1,w
  2967  0DB2  1C03               	skipc
  2968  0DB3  0A3B               	incf	map@out_min+1,w
  2969  0DB4  023D               	subwf	map@out_max+1,w
  2970  0DB5  00A7               	movwf	___wmul@multiplicand+1
  2971  0DB6  120A  158A  2544  120A  158A  	fcall	___wmul
  2972  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0DBD  0825               	movf	?___wmul+1,w
  2975  0DBE  00AE               	movwf	___awdiv@dividend+1
  2976  0DBF  0824               	movf	?___wmul,w
  2977  0DC0  00AD               	movwf	___awdiv@dividend
  2978  0DC1  120A  118A  2736  120A  158A  	fcall	___awdiv
  2979  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0DC8  083A               	movf	map@out_min,w
  2982  0DC9  072B               	addwf	?___awdiv,w
  2983  0DCA  00B4               	movwf	?_map
  2984  0DCB  083B               	movf	map@out_min+1,w
  2985  0DCC  1803               	skipnc
  2986  0DCD  0A3B               	incf	map@out_min+1,w
  2987  0DCE  072C               	addwf	?___awdiv+1,w
  2988  0DCF  00B5               	movwf	?_map+1
  2989  0DD0                     l77:	
  2990  0DD0  0008               	return
  2991  0DD1                     __end_of_map:	
  2992                           
  2993                           	psect	text5
  2994  0D44                     __ptext5:	
  2995 ;; *************** function ___wmul *****************
  2996 ;; Defined at:
  2997 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3000 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  product         2    8[BANK0 ] unsigned int 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2    4[BANK0 ] unsigned int 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3012 ;;      Params:         0       4       0       0       0
  3013 ;;      Locals:         0       2       0       0       0
  3014 ;;      Temps:          0       0       0       0       0
  3015 ;;      Totals:         0       6       0       0       0
  3016 ;;Total ram usage:        6 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    3
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_map
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           
  3027                           ;psect for function ___wmul
  3028  0D44                     ___wmul:	
  3029  0D44                     l2590:	
  3030                           ;incstack = 0
  3031                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3032                           
  3033  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0D46  01A8               	clrf	___wmul@product
  3036  0D47  01A9               	clrf	___wmul@product+1
  3037  0D48                     l2592:	
  3038  0D48  1C24               	btfss	___wmul@multiplier,0
  3039  0D49  2D4B               	goto	u2381
  3040  0D4A  2D4C               	goto	u2380
  3041  0D4B                     u2381:	
  3042  0D4B  2D52               	goto	l434
  3043  0D4C                     u2380:	
  3044  0D4C                     l2594:	
  3045  0D4C  0826               	movf	___wmul@multiplicand,w
  3046  0D4D  07A8               	addwf	___wmul@product,f
  3047  0D4E  1803               	skipnc
  3048  0D4F  0AA9               	incf	___wmul@product+1,f
  3049  0D50  0827               	movf	___wmul@multiplicand+1,w
  3050  0D51  07A9               	addwf	___wmul@product+1,f
  3051  0D52                     l434:	
  3052  0D52  3001               	movlw	1
  3053  0D53                     u2395:	
  3054  0D53  1003               	clrc
  3055  0D54  0DA6               	rlf	___wmul@multiplicand,f
  3056  0D55  0DA7               	rlf	___wmul@multiplicand+1,f
  3057  0D56  3EFF               	addlw	-1
  3058  0D57  1D03               	skipz
  3059  0D58  2D53               	goto	u2395
  3060  0D59                     l2596:	
  3061  0D59  3001               	movlw	1
  3062  0D5A                     u2405:	
  3063  0D5A  1003               	clrc
  3064  0D5B  0CA5               	rrf	___wmul@multiplier+1,f
  3065  0D5C  0CA4               	rrf	___wmul@multiplier,f
  3066  0D5D  3EFF               	addlw	-1
  3067  0D5E  1D03               	skipz
  3068  0D5F  2D5A               	goto	u2405
  3069  0D60                     l2598:	
  3070  0D60  0824               	movf	___wmul@multiplier,w
  3071  0D61  0425               	iorwf	___wmul@multiplier+1,w
  3072  0D62  1D03               	btfss	3,2
  3073  0D63  2D65               	goto	u2411
  3074  0D64  2D66               	goto	u2410
  3075  0D65                     u2411:	
  3076  0D65  2D48               	goto	l2592
  3077  0D66                     u2410:	
  3078  0D66                     l2600:	
  3079  0D66  0829               	movf	___wmul@product+1,w
  3080  0D67  00A5               	movwf	?___wmul+1
  3081  0D68  0828               	movf	___wmul@product,w
  3082  0D69  00A4               	movwf	?___wmul
  3083  0D6A                     l436:	
  3084  0D6A  0008               	return
  3085  0D6B                     __end_of___wmul:	
  3086                           
  3087                           	psect	text6
  3088  0CAC                     __ptext6:	
  3089 ;; *************** function _init_ADC *****************
  3090 ;; Defined at:
  3091 ;;		line 331 in file "debug.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3105 ;;      Params:         0       0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0
  3107 ;;      Temps:          0       1       0       0       0
  3108 ;;      Totals:         0       1       0       0       0
  3109 ;;Total ram usage:        1 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    3
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function _init_ADC
  3121  0CAC                     _init_ADC:	
  3122  0CAC                     l2814:	
  3123                           ;incstack = 0
  3124                           ; Regs used in _init_ADC: [wreg+status,2]
  3125                           
  3126                           
  3127                           ;debug.c: 333:     TRISA = 0xE3;
  3128  0CAC  30E3               	movlw	227
  3129  0CAD  1683               	bsf	3,5	;RP0=1, select bank1
  3130  0CAE  1303               	bcf	3,6	;RP1=0, select bank1
  3131  0CAF  0085               	movwf	5	;volatile
  3132  0CB0                     l2816:	
  3133                           
  3134                           ;debug.c: 334:     ADCON0 = 0x00;
  3135  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0CB2  019F               	clrf	31	;volatile
  3138  0CB3                     l2818:	
  3139                           
  3140                           ;debug.c: 335:     ADCON1 = 0x80;
  3141  0CB3  3080               	movlw	128
  3142  0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  3143  0CB5  1303               	bcf	3,6	;RP1=0, select bank1
  3144  0CB6  009F               	movwf	31	;volatile
  3145  0CB7                     l2820:	
  3146                           
  3147                           ;debug.c: 336:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3148  0CB7  3019               	movlw	25
  3149  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0CBA  00A4               	movwf	??_init_ADC
  3152  0CBB                     u3147:	
  3153  0CBB  0BA4               	decfsz	??_init_ADC,f
  3154  0CBC  2CBB               	goto	u3147
  3155  0CBD  2CBE               	nop2
  3156  0CBE                     l288:	
  3157  0CBE  0008               	return
  3158  0CBF                     __end_of_init_ADC:	
  3159                           
  3160                           	psect	text7
  3161  0CE7                     __ptext7:	
  3162 ;; *************** function ___bmul *****************
  3163 ;; Defined at:
  3164 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  multiplier      1    wreg     unsigned char 
  3167 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  multiplier      1    7[BANK0 ] unsigned char 
  3170 ;;  product         1    6[BANK0 ] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      unsigned char 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         0       1       0       0       0
  3181 ;;      Locals:         0       2       0       0       0
  3182 ;;      Temps:          0       1       0       0       0
  3183 ;;      Totals:         0       4       0       0       0
  3184 ;;Total ram usage:        4 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    3
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function ___bmul
  3196  0CE7                     ___bmul:	
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3200                           ;___bmul@multiplier stored from wreg
  3201  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0CE9  00A7               	movwf	___bmul@multiplier
  3204  0CEA                     l2862:	
  3205  0CEA  01A6               	clrf	___bmul@product
  3206  0CEB                     l2864:	
  3207  0CEB  1C27               	btfss	___bmul@multiplier,0
  3208  0CEC  2CEE               	goto	u2831
  3209  0CED  2CEF               	goto	u2830
  3210  0CEE                     u2831:	
  3211  0CEE  2CF3               	goto	l2868
  3212  0CEF                     u2830:	
  3213  0CEF                     l2866:	
  3214  0CEF  0824               	movf	___bmul@multiplicand,w
  3215  0CF0  00A5               	movwf	??___bmul
  3216  0CF1  0825               	movf	??___bmul,w
  3217  0CF2  07A6               	addwf	___bmul@product,f
  3218  0CF3                     l2868:	
  3219  0CF3  1003               	clrc
  3220  0CF4  0DA4               	rlf	___bmul@multiplicand,f
  3221  0CF5                     l2870:	
  3222  0CF5  1003               	clrc
  3223  0CF6  0CA7               	rrf	___bmul@multiplier,f
  3224  0CF7  0827               	movf	___bmul@multiplier,w
  3225  0CF8  1D03               	btfss	3,2
  3226  0CF9  2CFB               	goto	u2841
  3227  0CFA  2CFC               	goto	u2840
  3228  0CFB                     u2841:	
  3229  0CFB  2CEB               	goto	l2864
  3230  0CFC                     u2840:	
  3231  0CFC                     l2872:	
  3232  0CFC  0826               	movf	___bmul@product,w
  3233  0CFD                     l460:	
  3234  0CFD  0008               	return
  3235  0CFE                     __end_of___bmul:	
  3236                           
  3237                           	psect	text8
  3238  0E9D                     __ptext8:	
  3239 ;; *************** function _UpdateTimes *****************
  3240 ;; Defined at:
  3241 ;;		line 3 in file "./CustomLib/TrafficLight.h"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  _semafori       1    wreg     PTR PTR struct .
  3244 ;;		 -> Semafori(32), 
  3245 ;;  _to_update      1    4[BANK0 ] PTR struct .
  3246 ;;		 -> to_update(7), 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  _semafori       1   16[BANK0 ] PTR PTR struct .
  3249 ;;		 -> Semafori(32), 
  3250 ;;  i               1   18[BANK0 ] unsigned char 
  3251 ;;  l               1   17[BANK0 ] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3261 ;;      Params:         0       1       0       0       0
  3262 ;;      Locals:         0       3       0       0       0
  3263 ;;      Temps:          0      11       0       0       0
  3264 ;;      Totals:         0      15       0       0       0
  3265 ;;Total ram usage:       15 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    3
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _UpdateTimes
  3277  0E9D                     _UpdateTimes:	
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3281                           ;UpdateTimes@_semafori stored from wreg
  3282  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3284  0E9F  00B0               	movwf	UpdateTimes@_semafori
  3285  0EA0                     l2736:	
  3286                           
  3287                           ;./CustomLib/TrafficLight.h: 3: void UpdateTimes(_Semafori _semafori, Update *_to_update
      +                          );./CustomLib/TrafficLight.h: 4: {;./CustomLib/TrafficLight.h: 6:     for (unsigned char
      +                           l = 0; l < 16; l++)
  3288  0EA0  01B1               	clrf	UpdateTimes@l
  3289  0EA1                     l2742:	
  3290                           
  3291                           ;./CustomLib/TrafficLight.h: 7:     {;./CustomLib/TrafficLight.h: 8:         if( l == (*
      +                          _to_update).id )
  3292  0EA1  0824               	movf	UpdateTimes@_to_update,w
  3293  0EA2  3E06               	addlw	6
  3294  0EA3  0084               	movwf	4
  3295  0EA4  1383               	bcf	3,7	;select IRP bank0
  3296  0EA5  0800               	movf	0,w
  3297  0EA6  0631               	xorwf	UpdateTimes@l,w
  3298  0EA7  1D03               	skipz
  3299  0EA8  2EAA               	goto	u2711
  3300  0EA9  2EAB               	goto	u2710
  3301  0EAA                     u2711:	
  3302  0EAA  2EE3               	goto	l2756
  3303  0EAB                     u2710:	
  3304  0EAB                     l2744:	
  3305                           
  3306                           ;./CustomLib/TrafficLight.h: 9:         {;./CustomLib/TrafficLight.h: 10:             fo
      +                          r(unsigned char i = 0; i < 3; i++)
  3307  0EAB  01B2               	clrf	UpdateTimes@i
  3308  0EAC                     l2750:	
  3309                           
  3310                           ;./CustomLib/TrafficLight.h: 11:             {;./CustomLib/TrafficLight.h: 12:          
      +                                (*(_semafori)[l]).times[i] = (*_to_update).new_times[i];
  3311  0EAC  0832               	movf	UpdateTimes@i,w
  3312  0EAD  00A5               	movwf	??_UpdateTimes
  3313  0EAE  0725               	addwf	??_UpdateTimes,w
  3314  0EAF  0724               	addwf	UpdateTimes@_to_update,w
  3315  0EB0  00A6               	movwf	??_UpdateTimes+1
  3316  0EB1  0826               	movf	??_UpdateTimes+1,w
  3317  0EB2  0084               	movwf	4
  3318  0EB3  1383               	bcf	3,7	;select IRP bank0
  3319  0EB4  0800               	movf	0,w
  3320  0EB5  00A7               	movwf	??_UpdateTimes+2
  3321  0EB6  0A84               	incf	4,f
  3322  0EB7  0800               	movf	0,w
  3323  0EB8  00A8               	movwf	??_UpdateTimes+3
  3324  0EB9  0831               	movf	UpdateTimes@l,w
  3325  0EBA  00A9               	movwf	??_UpdateTimes+4
  3326  0EBB  0729               	addwf	??_UpdateTimes+4,w
  3327  0EBC  0730               	addwf	UpdateTimes@_semafori,w
  3328  0EBD  00AA               	movwf	??_UpdateTimes+5
  3329  0EBE  082A               	movf	??_UpdateTimes+5,w
  3330  0EBF  0084               	movwf	4
  3331  0EC0  1783               	bsf	3,7	;select IRP bank2
  3332  0EC1  0800               	movf	0,w
  3333  0EC2  00AB               	movwf	??_UpdateTimes+6
  3334  0EC3  0A84               	incf	4,f
  3335  0EC4  0800               	movf	0,w
  3336  0EC5  00AC               	movwf	??_UpdateTimes+7
  3337  0EC6  0832               	movf	UpdateTimes@i,w
  3338  0EC7  00AD               	movwf	??_UpdateTimes+8
  3339  0EC8  072D               	addwf	??_UpdateTimes+8,w
  3340  0EC9  072B               	addwf	??_UpdateTimes+6,w
  3341  0ECA  00AE               	movwf	??_UpdateTimes+9
  3342  0ECB  082C               	movf	??_UpdateTimes+7,w
  3343  0ECC  1803               	skipnc
  3344  0ECD  3E01               	addlw	1
  3345  0ECE  00AF               	movwf	??_UpdateTimes+10
  3346  0ECF  082E               	movf	??_UpdateTimes+9,w
  3347  0ED0  0084               	movwf	4
  3348  0ED1  1783               	bsf	3,7
  3349  0ED2  1C2F               	btfss	??_UpdateTimes+10,0
  3350  0ED3  1383               	bcf	3,7
  3351  0ED4  0827               	movf	??_UpdateTimes+2,w
  3352  0ED5  0080               	movwf	0
  3353  0ED6  0A84               	incf	4,f
  3354  0ED7  0828               	movf	??_UpdateTimes+3,w
  3355  0ED8  0080               	movwf	0
  3356  0ED9                     l2752:	
  3357                           
  3358                           ;./CustomLib/TrafficLight.h: 13:             }
  3359  0ED9  3001               	movlw	1
  3360  0EDA  00A5               	movwf	??_UpdateTimes
  3361  0EDB  0825               	movf	??_UpdateTimes,w
  3362  0EDC  07B2               	addwf	UpdateTimes@i,f
  3363  0EDD                     l2754:	
  3364  0EDD  3003               	movlw	3
  3365  0EDE  0232               	subwf	UpdateTimes@i,w
  3366  0EDF  1C03               	skipc
  3367  0EE0  2EE2               	goto	u2721
  3368  0EE1  2EE3               	goto	u2720
  3369  0EE2                     u2721:	
  3370  0EE2  2EAC               	goto	l2750
  3371  0EE3                     u2720:	
  3372  0EE3                     l2756:	
  3373                           
  3374                           ;./CustomLib/TrafficLight.h: 15:     }
  3375  0EE3  3001               	movlw	1
  3376  0EE4  00A5               	movwf	??_UpdateTimes
  3377  0EE5  0825               	movf	??_UpdateTimes,w
  3378  0EE6  07B1               	addwf	UpdateTimes@l,f
  3379  0EE7                     l2758:	
  3380  0EE7  3010               	movlw	16
  3381  0EE8  0231               	subwf	UpdateTimes@l,w
  3382  0EE9  1C03               	skipc
  3383  0EEA  2EEC               	goto	u2731
  3384  0EEB  2EED               	goto	u2730
  3385  0EEC                     u2731:	
  3386  0EEC  2EA1               	goto	l2742
  3387  0EED                     u2730:	
  3388  0EED                     l133:	
  3389  0EED  0008               	return
  3390  0EEE                     __end_of_UpdateTimes:	
  3391                           
  3392                           	psect	text9
  3393  0DD1                     __ptext9:	
  3394 ;; *************** function _UART_Init *****************
  3395 ;; Defined at:
  3396 ;;		line 350 in file "debug.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  baudrate        2   19[BANK0 ] int 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0, pclath, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3410 ;;      Params:         0       2       0       0       0
  3411 ;;      Locals:         0       0       0       0       0
  3412 ;;      Temps:          0       4       0       0       0
  3413 ;;      Totals:         0       6       0       0       0
  3414 ;;Total ram usage:        6 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    4
  3417 ;; This function calls:
  3418 ;;		___aldiv
  3419 ;; This function is called by:
  3420 ;;		_main
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _UART_Init
  3426  0DD1                     _UART_Init:	
  3427  0DD1                     l2822:	
  3428                           ;incstack = 0
  3429                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3430                           
  3431                           
  3432                           ;debug.c: 350: void UART_Init(int baudrate);debug.c: 351: {;debug.c: 352:     TRISCbits.
      +                          TRISC6 = 0;
  3433  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  3434  0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  3435  0DD3  1307               	bcf	7,6	;volatile
  3436                           
  3437                           ;debug.c: 353:     TXSTAbits.TXEN = 1;
  3438  0DD4  1698               	bsf	24,5	;volatile
  3439                           
  3440                           ;debug.c: 354:     RCSTAbits.SPEN = 1;
  3441  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0DD7  1798               	bsf	24,7	;volatile
  3444                           
  3445                           ;debug.c: 355:     RCSTAbits.CREN = 1;
  3446  0DD8  1618               	bsf	24,4	;volatile
  3447  0DD9                     l2824:	
  3448                           
  3449                           ;debug.c: 356:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3450  0DD9  0833               	movf	UART_Init@baudrate,w
  3451  0DDA  00B5               	movwf	??_UART_Init
  3452  0DDB  0834               	movf	UART_Init@baudrate+1,w
  3453  0DDC  00B6               	movwf	??_UART_Init+1
  3454  0DDD  3000               	movlw	0
  3455  0DDE  1BB6               	btfsc	??_UART_Init+1,7
  3456  0DDF  30FF               	movlw	255
  3457  0DE0  00B7               	movwf	??_UART_Init+2
  3458  0DE1  00B8               	movwf	??_UART_Init+3
  3459  0DE2  3006               	movlw	6
  3460  0DE3                     u2795:	
  3461  0DE3  1003               	clrc
  3462  0DE4  0DB5               	rlf	??_UART_Init,f
  3463  0DE5  0DB6               	rlf	??_UART_Init+1,f
  3464  0DE6  0DB7               	rlf	??_UART_Init+2,f
  3465  0DE7  0DB8               	rlf	??_UART_Init+3,f
  3466  0DE8                     u2790:	
  3467  0DE8  3EFF               	addlw	-1
  3468  0DE9  1D03               	skipz
  3469  0DEA  2DE3               	goto	u2795
  3470  0DEB  0838               	movf	??_UART_Init+3,w
  3471  0DEC  00A7               	movwf	___aldiv@divisor+3
  3472  0DED  0837               	movf	??_UART_Init+2,w
  3473  0DEE  00A6               	movwf	___aldiv@divisor+2
  3474  0DEF  0836               	movf	??_UART_Init+1,w
  3475  0DF0  00A5               	movwf	___aldiv@divisor+1
  3476  0DF1  0835               	movf	??_UART_Init,w
  3477  0DF2  00A4               	movwf	___aldiv@divisor
  3478  0DF3  3001               	movlw	1
  3479  0DF4  00AB               	movwf	___aldiv@dividend+3
  3480  0DF5  30E8               	movlw	232
  3481  0DF6  00AA               	movwf	___aldiv@dividend+2
  3482  0DF7  3048               	movlw	72
  3483  0DF8  00A9               	movwf	___aldiv@dividend+1
  3484  0DF9  3000               	movlw	0
  3485  0DFA  00A8               	movwf	___aldiv@dividend
  3486  0DFB  120A  118A  2609  120A  158A  	fcall	___aldiv
  3487  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0E02  0824               	movf	?___aldiv,w
  3490  0E03  3EFF               	addlw	255
  3491  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  3492  0E05  1303               	bcf	3,6	;RP1=0, select bank1
  3493  0E06  0099               	movwf	25	;volatile
  3494  0E07                     l2826:	
  3495                           
  3496                           ;debug.c: 357:     INTCONbits.GIE = 1;
  3497  0E07  178B               	bsf	11,7	;volatile
  3498  0E08                     l2828:	
  3499                           
  3500                           ;debug.c: 358:     INTCONbits.PEIE = 1;
  3501  0E08  170B               	bsf	11,6	;volatile
  3502  0E09                     l2830:	
  3503                           
  3504                           ;debug.c: 359:     PIE1bits.RCIE = 1;
  3505  0E09  168C               	bsf	12,5	;volatile
  3506  0E0A                     l297:	
  3507  0E0A  0008               	return
  3508  0E0B                     __end_of_UART_Init:	
  3509                           
  3510                           	psect	text10
  3511  0609                     __ptext10:	
  3512 ;; *************** function ___aldiv *****************
  3513 ;; Defined at:
  3514 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  divisor         4    4[BANK0 ] long 
  3517 ;;  dividend        4    8[BANK0 ] long 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  quotient        4   15[BANK0 ] long 
  3520 ;;  sign            1   14[BANK0 ] unsigned char 
  3521 ;;  counter         1   13[BANK0 ] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  4    4[BANK0 ] long 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3531 ;;      Params:         0       8       0       0       0
  3532 ;;      Locals:         0       6       0       0       0
  3533 ;;      Temps:          0       1       0       0       0
  3534 ;;      Totals:         0      15       0       0       0
  3535 ;;Total ram usage:       15 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    3
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_UART_Init
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           
  3546                           ;psect for function ___aldiv
  3547  0609                     ___aldiv:	
  3548  0609                     l2604:	
  3549                           ;incstack = 0
  3550                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3551                           
  3552  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3553  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3554  060B  01AE               	clrf	___aldiv@sign
  3555  060C                     l2606:	
  3556  060C  1FA7               	btfss	___aldiv@divisor+3,7
  3557  060D  2E0F               	goto	u2421
  3558  060E  2E10               	goto	u2420
  3559  060F                     u2421:	
  3560  060F  2E1D               	goto	l499
  3561  0610                     u2420:	
  3562  0610                     l2608:	
  3563  0610  09A4               	comf	___aldiv@divisor,f
  3564  0611  09A5               	comf	___aldiv@divisor+1,f
  3565  0612  09A6               	comf	___aldiv@divisor+2,f
  3566  0613  09A7               	comf	___aldiv@divisor+3,f
  3567  0614  0AA4               	incf	___aldiv@divisor,f
  3568  0615  1903               	skipnz
  3569  0616  0AA5               	incf	___aldiv@divisor+1,f
  3570  0617  1903               	skipnz
  3571  0618  0AA6               	incf	___aldiv@divisor+2,f
  3572  0619  1903               	skipnz
  3573  061A  0AA7               	incf	___aldiv@divisor+3,f
  3574  061B  01AE               	clrf	___aldiv@sign
  3575  061C  0AAE               	incf	___aldiv@sign,f
  3576  061D                     l499:	
  3577  061D  1FAB               	btfss	___aldiv@dividend+3,7
  3578  061E  2E20               	goto	u2431
  3579  061F  2E21               	goto	u2430
  3580  0620                     u2431:	
  3581  0620  2E30               	goto	l2614
  3582  0621                     u2430:	
  3583  0621                     l2610:	
  3584  0621  09A8               	comf	___aldiv@dividend,f
  3585  0622  09A9               	comf	___aldiv@dividend+1,f
  3586  0623  09AA               	comf	___aldiv@dividend+2,f
  3587  0624  09AB               	comf	___aldiv@dividend+3,f
  3588  0625  0AA8               	incf	___aldiv@dividend,f
  3589  0626  1903               	skipnz
  3590  0627  0AA9               	incf	___aldiv@dividend+1,f
  3591  0628  1903               	skipnz
  3592  0629  0AAA               	incf	___aldiv@dividend+2,f
  3593  062A  1903               	skipnz
  3594  062B  0AAB               	incf	___aldiv@dividend+3,f
  3595  062C                     l2612:	
  3596  062C  3001               	movlw	1
  3597  062D  00AC               	movwf	??___aldiv
  3598  062E  082C               	movf	??___aldiv,w
  3599  062F  06AE               	xorwf	___aldiv@sign,f
  3600  0630                     l2614:	
  3601  0630  3000               	movlw	0
  3602  0631  00B2               	movwf	___aldiv@quotient+3
  3603  0632  3000               	movlw	0
  3604  0633  00B1               	movwf	___aldiv@quotient+2
  3605  0634  3000               	movlw	0
  3606  0635  00B0               	movwf	___aldiv@quotient+1
  3607  0636  3000               	movlw	0
  3608  0637  00AF               	movwf	___aldiv@quotient
  3609  0638                     l2616:	
  3610  0638  0827               	movf	___aldiv@divisor+3,w
  3611  0639  0426               	iorwf	___aldiv@divisor+2,w
  3612  063A  0425               	iorwf	___aldiv@divisor+1,w
  3613  063B  0424               	iorwf	___aldiv@divisor,w
  3614  063C  1903               	skipnz
  3615  063D  2E3F               	goto	u2441
  3616  063E  2E40               	goto	u2440
  3617  063F                     u2441:	
  3618  063F  2E8D               	goto	l2636
  3619  0640                     u2440:	
  3620  0640                     l2618:	
  3621  0640  01AD               	clrf	___aldiv@counter
  3622  0641  0AAD               	incf	___aldiv@counter,f
  3623  0642  2E50               	goto	l2622
  3624  0643                     l2620:	
  3625  0643  3001               	movlw	1
  3626  0644  00AC               	movwf	??___aldiv
  3627  0645                     u2455:	
  3628  0645  1003               	clrc
  3629  0646  0DA4               	rlf	___aldiv@divisor,f
  3630  0647  0DA5               	rlf	___aldiv@divisor+1,f
  3631  0648  0DA6               	rlf	___aldiv@divisor+2,f
  3632  0649  0DA7               	rlf	___aldiv@divisor+3,f
  3633  064A  0BAC               	decfsz	??___aldiv,f
  3634  064B  2E45               	goto	u2455
  3635  064C  3001               	movlw	1
  3636  064D  00AC               	movwf	??___aldiv
  3637  064E  082C               	movf	??___aldiv,w
  3638  064F  07AD               	addwf	___aldiv@counter,f
  3639  0650                     l2622:	
  3640  0650  1FA7               	btfss	___aldiv@divisor+3,7
  3641  0651  2E53               	goto	u2461
  3642  0652  2E54               	goto	u2460
  3643  0653                     u2461:	
  3644  0653  2E43               	goto	l2620
  3645  0654                     u2460:	
  3646  0654                     l2624:	
  3647  0654  3001               	movlw	1
  3648  0655  00AC               	movwf	??___aldiv
  3649  0656                     u2475:	
  3650  0656  1003               	clrc
  3651  0657  0DAF               	rlf	___aldiv@quotient,f
  3652  0658  0DB0               	rlf	___aldiv@quotient+1,f
  3653  0659  0DB1               	rlf	___aldiv@quotient+2,f
  3654  065A  0DB2               	rlf	___aldiv@quotient+3,f
  3655  065B  0BAC               	decfsz	??___aldiv,f
  3656  065C  2E56               	goto	u2475
  3657  065D                     l2626:	
  3658  065D  0827               	movf	___aldiv@divisor+3,w
  3659  065E  022B               	subwf	___aldiv@dividend+3,w
  3660  065F  1D03               	skipz
  3661  0660  2E6B               	goto	u2485
  3662  0661  0826               	movf	___aldiv@divisor+2,w
  3663  0662  022A               	subwf	___aldiv@dividend+2,w
  3664  0663  1D03               	skipz
  3665  0664  2E6B               	goto	u2485
  3666  0665  0825               	movf	___aldiv@divisor+1,w
  3667  0666  0229               	subwf	___aldiv@dividend+1,w
  3668  0667  1D03               	skipz
  3669  0668  2E6B               	goto	u2485
  3670  0669  0824               	movf	___aldiv@divisor,w
  3671  066A  0228               	subwf	___aldiv@dividend,w
  3672  066B                     u2485:	
  3673  066B  1C03               	skipc
  3674  066C  2E6E               	goto	u2481
  3675  066D  2E6F               	goto	u2480
  3676  066E                     u2481:	
  3677  066E  2E7E               	goto	l2632
  3678  066F                     u2480:	
  3679  066F                     l2628:	
  3680  066F  0824               	movf	___aldiv@divisor,w
  3681  0670  02A8               	subwf	___aldiv@dividend,f
  3682  0671  0825               	movf	___aldiv@divisor+1,w
  3683  0672  1C03               	skipc
  3684  0673  0F25               	incfsz	___aldiv@divisor+1,w
  3685  0674  02A9               	subwf	___aldiv@dividend+1,f
  3686  0675  0826               	movf	___aldiv@divisor+2,w
  3687  0676  1C03               	skipc
  3688  0677  0F26               	incfsz	___aldiv@divisor+2,w
  3689  0678  02AA               	subwf	___aldiv@dividend+2,f
  3690  0679  0827               	movf	___aldiv@divisor+3,w
  3691  067A  1C03               	skipc
  3692  067B  0F27               	incfsz	___aldiv@divisor+3,w
  3693  067C  02AB               	subwf	___aldiv@dividend+3,f
  3694  067D                     l2630:	
  3695  067D  142F               	bsf	___aldiv@quotient,0
  3696  067E                     l2632:	
  3697  067E  3001               	movlw	1
  3698  067F                     u2495:	
  3699  067F  1003               	clrc
  3700  0680  0CA7               	rrf	___aldiv@divisor+3,f
  3701  0681  0CA6               	rrf	___aldiv@divisor+2,f
  3702  0682  0CA5               	rrf	___aldiv@divisor+1,f
  3703  0683  0CA4               	rrf	___aldiv@divisor,f
  3704  0684  3EFF               	addlw	-1
  3705  0685  1D03               	skipz
  3706  0686  2E7F               	goto	u2495
  3707  0687                     l2634:	
  3708  0687  3001               	movlw	1
  3709  0688  02AD               	subwf	___aldiv@counter,f
  3710  0689  1D03               	btfss	3,2
  3711  068A  2E8C               	goto	u2501
  3712  068B  2E8D               	goto	u2500
  3713  068C                     u2501:	
  3714  068C  2E54               	goto	l2624
  3715  068D                     u2500:	
  3716  068D                     l2636:	
  3717  068D  082E               	movf	___aldiv@sign,w
  3718  068E  1903               	btfsc	3,2
  3719  068F  2E91               	goto	u2511
  3720  0690  2E92               	goto	u2510
  3721  0691                     u2511:	
  3722  0691  2E9D               	goto	l2640
  3723  0692                     u2510:	
  3724  0692                     l2638:	
  3725  0692  09AF               	comf	___aldiv@quotient,f
  3726  0693  09B0               	comf	___aldiv@quotient+1,f
  3727  0694  09B1               	comf	___aldiv@quotient+2,f
  3728  0695  09B2               	comf	___aldiv@quotient+3,f
  3729  0696  0AAF               	incf	___aldiv@quotient,f
  3730  0697  1903               	skipnz
  3731  0698  0AB0               	incf	___aldiv@quotient+1,f
  3732  0699  1903               	skipnz
  3733  069A  0AB1               	incf	___aldiv@quotient+2,f
  3734  069B  1903               	skipnz
  3735  069C  0AB2               	incf	___aldiv@quotient+3,f
  3736  069D                     l2640:	
  3737  069D  0832               	movf	___aldiv@quotient+3,w
  3738  069E  00A7               	movwf	?___aldiv+3
  3739  069F  0831               	movf	___aldiv@quotient+2,w
  3740  06A0  00A6               	movwf	?___aldiv+2
  3741  06A1  0830               	movf	___aldiv@quotient+1,w
  3742  06A2  00A5               	movwf	?___aldiv+1
  3743  06A3  082F               	movf	___aldiv@quotient,w
  3744  06A4  00A4               	movwf	?___aldiv
  3745  06A5                     l509:	
  3746  06A5  0008               	return
  3747  06A6                     __end_of___aldiv:	
  3748                           
  3749                           	psect	text11
  3750  0CD2                     __ptext11:	
  3751 ;; *************** function _SetDisplay *****************
  3752 ;; Defined at:
  3753 ;;		line 398 in file "debug.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  d1              1    wreg     unsigned char 
  3756 ;;  d2              1    4[BANK0 ] unsigned char 
  3757 ;;  d3              1    5[BANK0 ] unsigned char 
  3758 ;;  value           1    6[BANK0 ] unsigned char 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  d1              1    7[BANK0 ] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      void 
  3763 ;; Registers used:
  3764 ;;		wreg, status,0
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3770 ;;      Params:         0       3       0       0       0
  3771 ;;      Locals:         0       1       0       0       0
  3772 ;;      Temps:          0       0       0       0       0
  3773 ;;      Totals:         0       4       0       0       0
  3774 ;;Total ram usage:        4 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    3
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_main
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _SetDisplay
  3786  0CD2                     _SetDisplay:	
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in _SetDisplay: [wreg+status,0]
  3790                           ;SetDisplay@d1 stored from wreg
  3791  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0CD4  00A7               	movwf	SetDisplay@d1
  3794  0CD5                     l2858:	
  3795                           
  3796                           ;debug.c: 398: void SetDisplay(char d1, char d2, char d3, char value);debug.c: 399: {;de
      +                          bug.c: 400:     PORTAbits.RA2 = d1;
  3797  0CD5  0C27               	rrf	SetDisplay@d1,w
  3798  0CD6  1C03               	skipc
  3799  0CD7  1105               	bcf	5,2	;volatile
  3800  0CD8  1803               	skipnc
  3801  0CD9  1505               	bsf	5,2	;volatile
  3802                           
  3803                           ;debug.c: 401:     PORTAbits.RA3 = d2;
  3804  0CDA  0C24               	rrf	SetDisplay@d2,w
  3805  0CDB  1C03               	skipc
  3806  0CDC  1185               	bcf	5,3	;volatile
  3807  0CDD  1803               	skipnc
  3808  0CDE  1585               	bsf	5,3	;volatile
  3809                           
  3810                           ;debug.c: 402:     PORTAbits.RA4 = d3;
  3811  0CDF  0C25               	rrf	SetDisplay@d3,w
  3812  0CE0  1C03               	skipc
  3813  0CE1  1205               	bcf	5,4	;volatile
  3814  0CE2  1803               	skipnc
  3815  0CE3  1605               	bsf	5,4	;volatile
  3816  0CE4                     l2860:	
  3817                           
  3818                           ;debug.c: 403:     PORTD = value;
  3819  0CE4  0826               	movf	SetDisplay@value,w
  3820  0CE5  0088               	movwf	8	;volatile
  3821  0CE6                     l323:	
  3822  0CE6  0008               	return
  3823  0CE7                     __end_of_SetDisplay:	
  3824                           
  3825                           	psect	text12
  3826  06A6                     __ptext12:	
  3827 ;; *************** function _SetDefaultTimers *****************
  3828 ;; Defined at:
  3829 ;;		line 52 in file "./CustomLib/TrafficLight.h"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  rosso           2    4[BANK0 ] int 
  3832 ;;  verde           2    6[BANK0 ] int 
  3833 ;;  giallo          2    8[BANK0 ] int 
  3834 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  3835 ;;		 -> Semafori(32), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  i               1   19[BANK0 ] unsigned char 
  3838 ;;  l               1   18[BANK0 ] unsigned char 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3848 ;;      Params:         0       7       0       0       0
  3849 ;;      Locals:         0       2       0       0       0
  3850 ;;      Temps:          0       7       0       0       0
  3851 ;;      Totals:         0      16       0       0       0
  3852 ;;Total ram usage:       16 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    3
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           
  3863                           ;psect for function _SetDefaultTimers
  3864  06A6                     _SetDefaultTimers:	
  3865  06A6                     l2780:	
  3866                           ;incstack = 0
  3867                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  3868                           
  3869                           
  3870                           ;./CustomLib/TrafficLight.h: 52: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 53: {;./CustomLib/TrafficLight.h: 54: 
      +                              for (unsigned char l = 0; l < 16; l++)
  3871  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  3872  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  3873  06A8  01B2               	clrf	SetDefaultTimers@l
  3874  06A9                     l2786:	
  3875                           
  3876                           ;./CustomLib/TrafficLight.h: 55:     {;./CustomLib/TrafficLight.h: 56:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  3877  06A9  01B3               	clrf	SetDefaultTimers@i
  3878  06AA  2F0E               	goto	l2800
  3879  06AB                     l2792:	
  3880                           
  3881                           ;./CustomLib/TrafficLight.h: 61:                 (*(_semafori)[l]).times[i] = rosso;
  3882  06AB  0832               	movf	SetDefaultTimers@l,w
  3883  06AC  00AB               	movwf	??_SetDefaultTimers
  3884  06AD  072B               	addwf	??_SetDefaultTimers,w
  3885  06AE  072A               	addwf	SetDefaultTimers@_semafori,w
  3886  06AF  00AC               	movwf	??_SetDefaultTimers+1
  3887  06B0  082C               	movf	??_SetDefaultTimers+1,w
  3888  06B1  0084               	movwf	4
  3889  06B2  1783               	bsf	3,7	;select IRP bank2
  3890  06B3  0800               	movf	0,w
  3891  06B4  00AD               	movwf	??_SetDefaultTimers+2
  3892  06B5  0A84               	incf	4,f
  3893  06B6  0800               	movf	0,w
  3894  06B7  00AE               	movwf	??_SetDefaultTimers+3
  3895  06B8  0833               	movf	SetDefaultTimers@i,w
  3896  06B9  00AF               	movwf	??_SetDefaultTimers+4
  3897  06BA  072F               	addwf	??_SetDefaultTimers+4,w
  3898  06BB  072D               	addwf	??_SetDefaultTimers+2,w
  3899  06BC  00B0               	movwf	??_SetDefaultTimers+5
  3900  06BD  082E               	movf	??_SetDefaultTimers+3,w
  3901  06BE  1803               	skipnc
  3902  06BF  3E01               	addlw	1
  3903  06C0  00B1               	movwf	??_SetDefaultTimers+6
  3904  06C1  0830               	movf	??_SetDefaultTimers+5,w
  3905  06C2  0084               	movwf	4
  3906  06C3  1783               	bsf	3,7
  3907  06C4  1C31               	btfss	??_SetDefaultTimers+6,0
  3908  06C5  1383               	bcf	3,7
  3909  06C6  0824               	movf	SetDefaultTimers@rosso,w
  3910  06C7  0080               	movwf	0
  3911  06C8  0A84               	incf	4,f
  3912  06C9  0825               	movf	SetDefaultTimers@rosso+1,w
  3913  06CA  0080               	movwf	0
  3914                           
  3915                           ;./CustomLib/TrafficLight.h: 62:                 break;
  3916  06CB  2F21               	goto	l2802
  3917  06CC                     l2794:	
  3918                           
  3919                           ;./CustomLib/TrafficLight.h: 64:                 (*(_semafori)[l]).times[i] = verde;
  3920  06CC  0832               	movf	SetDefaultTimers@l,w
  3921  06CD  00AB               	movwf	??_SetDefaultTimers
  3922  06CE  072B               	addwf	??_SetDefaultTimers,w
  3923  06CF  072A               	addwf	SetDefaultTimers@_semafori,w
  3924  06D0  00AC               	movwf	??_SetDefaultTimers+1
  3925  06D1  082C               	movf	??_SetDefaultTimers+1,w
  3926  06D2  0084               	movwf	4
  3927  06D3  1783               	bsf	3,7	;select IRP bank2
  3928  06D4  0800               	movf	0,w
  3929  06D5  00AD               	movwf	??_SetDefaultTimers+2
  3930  06D6  0A84               	incf	4,f
  3931  06D7  0800               	movf	0,w
  3932  06D8  00AE               	movwf	??_SetDefaultTimers+3
  3933  06D9  0833               	movf	SetDefaultTimers@i,w
  3934  06DA  00AF               	movwf	??_SetDefaultTimers+4
  3935  06DB  072F               	addwf	??_SetDefaultTimers+4,w
  3936  06DC  072D               	addwf	??_SetDefaultTimers+2,w
  3937  06DD  00B0               	movwf	??_SetDefaultTimers+5
  3938  06DE  082E               	movf	??_SetDefaultTimers+3,w
  3939  06DF  1803               	skipnc
  3940  06E0  3E01               	addlw	1
  3941  06E1  00B1               	movwf	??_SetDefaultTimers+6
  3942  06E2  0830               	movf	??_SetDefaultTimers+5,w
  3943  06E3  0084               	movwf	4
  3944  06E4  1783               	bsf	3,7
  3945  06E5  1C31               	btfss	??_SetDefaultTimers+6,0
  3946  06E6  1383               	bcf	3,7
  3947  06E7  0826               	movf	SetDefaultTimers@verde,w
  3948  06E8  0080               	movwf	0
  3949  06E9  0A84               	incf	4,f
  3950  06EA  0827               	movf	SetDefaultTimers@verde+1,w
  3951  06EB  0080               	movwf	0
  3952                           
  3953                           ;./CustomLib/TrafficLight.h: 65:                 break;
  3954  06EC  2F21               	goto	l2802
  3955  06ED                     l2796:	
  3956                           
  3957                           ;./CustomLib/TrafficLight.h: 67:                 (*(_semafori)[l]).times[i] = giallo;
  3958  06ED  0832               	movf	SetDefaultTimers@l,w
  3959  06EE  00AB               	movwf	??_SetDefaultTimers
  3960  06EF  072B               	addwf	??_SetDefaultTimers,w
  3961  06F0  072A               	addwf	SetDefaultTimers@_semafori,w
  3962  06F1  00AC               	movwf	??_SetDefaultTimers+1
  3963  06F2  082C               	movf	??_SetDefaultTimers+1,w
  3964  06F3  0084               	movwf	4
  3965  06F4  1783               	bsf	3,7	;select IRP bank2
  3966  06F5  0800               	movf	0,w
  3967  06F6  00AD               	movwf	??_SetDefaultTimers+2
  3968  06F7  0A84               	incf	4,f
  3969  06F8  0800               	movf	0,w
  3970  06F9  00AE               	movwf	??_SetDefaultTimers+3
  3971  06FA  0833               	movf	SetDefaultTimers@i,w
  3972  06FB  00AF               	movwf	??_SetDefaultTimers+4
  3973  06FC  072F               	addwf	??_SetDefaultTimers+4,w
  3974  06FD  072D               	addwf	??_SetDefaultTimers+2,w
  3975  06FE  00B0               	movwf	??_SetDefaultTimers+5
  3976  06FF  082E               	movf	??_SetDefaultTimers+3,w
  3977  0700  1803               	skipnc
  3978  0701  3E01               	addlw	1
  3979  0702  00B1               	movwf	??_SetDefaultTimers+6
  3980  0703  0830               	movf	??_SetDefaultTimers+5,w
  3981  0704  0084               	movwf	4
  3982  0705  1783               	bsf	3,7
  3983  0706  1C31               	btfss	??_SetDefaultTimers+6,0
  3984  0707  1383               	bcf	3,7
  3985  0708  0828               	movf	SetDefaultTimers@giallo,w
  3986  0709  0080               	movwf	0
  3987  070A  0A84               	incf	4,f
  3988  070B  0829               	movf	SetDefaultTimers@giallo+1,w
  3989  070C  0080               	movwf	0
  3990                           
  3991                           ;./CustomLib/TrafficLight.h: 68:                 break;
  3992  070D  2F21               	goto	l2802
  3993  070E                     l2800:	
  3994  070E  0833               	movf	SetDefaultTimers@i,w
  3995  070F  00AB               	movwf	??_SetDefaultTimers
  3996  0710  01AC               	clrf	??_SetDefaultTimers+1
  3997                           
  3998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3999                           ; Switch size 1, requested type "simple"
  4000                           ; Number of cases is 1, Range of values is 0 to 0
  4001                           ; switch strategies available:
  4002                           ; Name         Instructions Cycles
  4003                           ; simple_byte            4     3 (average)
  4004                           ; direct_byte           11     8 (fixed)
  4005                           ; jumptable            260     6 (fixed)
  4006                           ;	Chosen strategy is simple_byte
  4007  0711  082C               	movf	??_SetDefaultTimers+1,w
  4008  0712  3A00               	xorlw	0	; case 0
  4009  0713  1903               	skipnz
  4010  0714  2F16               	goto	l3178
  4011  0715  2F21               	goto	l2802
  4012  0716                     l3178:	
  4013                           
  4014                           ; Switch size 1, requested type "simple"
  4015                           ; Number of cases is 3, Range of values is 0 to 2
  4016                           ; switch strategies available:
  4017                           ; Name         Instructions Cycles
  4018                           ; simple_byte           10     6 (average)
  4019                           ; direct_byte           17     8 (fixed)
  4020                           ; jumptable            260     6 (fixed)
  4021                           ;	Chosen strategy is simple_byte
  4022  0716  082B               	movf	??_SetDefaultTimers,w
  4023  0717  3A00               	xorlw	0	; case 0
  4024  0718  1903               	skipnz
  4025  0719  2EAB               	goto	l2792
  4026  071A  3A01               	xorlw	1	; case 1
  4027  071B  1903               	skipnz
  4028  071C  2ECC               	goto	l2794
  4029  071D  3A03               	xorlw	3	; case 2
  4030  071E  1903               	skipnz
  4031  071F  2EED               	goto	l2796
  4032  0720  2F21               	goto	l2802
  4033  0721                     l2802:	
  4034                           
  4035                           ;./CustomLib/TrafficLight.h: 70:         }
  4036  0721  3001               	movlw	1
  4037  0722  00AB               	movwf	??_SetDefaultTimers
  4038  0723  082B               	movf	??_SetDefaultTimers,w
  4039  0724  07B3               	addwf	SetDefaultTimers@i,f
  4040  0725                     l2804:	
  4041  0725  3003               	movlw	3
  4042  0726  0233               	subwf	SetDefaultTimers@i,w
  4043  0727  1C03               	skipc
  4044  0728  2F2A               	goto	u2771
  4045  0729  2F2B               	goto	u2770
  4046  072A                     u2771:	
  4047  072A  2F0E               	goto	l2800
  4048  072B                     u2770:	
  4049  072B                     l2806:	
  4050                           
  4051                           ;./CustomLib/TrafficLight.h: 71:     }
  4052  072B  3001               	movlw	1
  4053  072C  00AB               	movwf	??_SetDefaultTimers
  4054  072D  082B               	movf	??_SetDefaultTimers,w
  4055  072E  07B2               	addwf	SetDefaultTimers@l,f
  4056  072F                     l2808:	
  4057  072F  3010               	movlw	16
  4058  0730  0232               	subwf	SetDefaultTimers@l,w
  4059  0731  1C03               	skipc
  4060  0732  2F34               	goto	u2781
  4061  0733  2F35               	goto	u2780
  4062  0734                     u2781:	
  4063  0734  2EA9               	goto	l2786
  4064  0735                     u2780:	
  4065  0735                     l155:	
  4066  0735  0008               	return
  4067  0736                     __end_of_SetDefaultTimers:	
  4068                           
  4069                           	psect	text13
  4070  0E0B                     __ptext13:	
  4071 ;; *************** function _GetTime *****************
  4072 ;; Defined at:
  4073 ;;		line 32 in file "./CustomLib/TrafficLight.h"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  index           1    wreg     unsigned char 
  4076 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4077 ;;		 -> dataFromGateway(15), 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  index           1    8[BANK0 ] unsigned char 
  4080 ;;  tmp             2   10[BANK0 ] int 
  4081 ;;  shortInt        1    9[BANK0 ] struct .
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  2    4[BANK0 ] int 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4091 ;;      Params:         0       2       0       0       0
  4092 ;;      Locals:         0       4       0       0       0
  4093 ;;      Temps:          0       2       0       0       0
  4094 ;;      Totals:         0       8       0       0       0
  4095 ;;Total ram usage:        8 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    3
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_main
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           
  4106                           ;psect for function _GetTime
  4107  0E0B                     _GetTime:	
  4108                           
  4109                           ;incstack = 0
  4110                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4111                           ;GetTime@index stored from wreg
  4112  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  4113  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  4114  0E0D  00A8               	movwf	GetTime@index
  4115  0E0E                     l2766:	
  4116                           
  4117                           ;./CustomLib/TrafficLight.h: 32: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 33: {;./CustomLib/TrafficLight.h: 34:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 38:     } shortInt;;./CustomLib/TrafficLight.h: 40:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4118  0E0E  0828               	movf	GetTime@index,w
  4119  0E0F  0724               	addwf	GetTime@_dataFromGateway,w
  4120  0E10  00A6               	movwf	??_GetTime
  4121  0E11  0826               	movf	??_GetTime,w
  4122  0E12  3E03               	addlw	3
  4123  0E13  0084               	movwf	4
  4124  0E14  307F               	movlw	127
  4125  0E15  1783               	bsf	3,7	;select IRP bank2
  4126  0E16  0500               	andwf	0,w
  4127  0E17  00A7               	movwf	??_GetTime+1
  4128  0E18  0829               	movf	GetTime@shortInt,w
  4129  0E19  0627               	xorwf	??_GetTime+1,w
  4130  0E1A  3980               	andlw	-128
  4131  0E1B  0627               	xorwf	??_GetTime+1,w
  4132  0E1C  00A9               	movwf	GetTime@shortInt
  4133  0E1D                     l2768:	
  4134                           
  4135                           ;./CustomLib/TrafficLight.h: 41:     tmp = shortInt.Val;
  4136  0E1D  0829               	movf	GetTime@shortInt,w
  4137  0E1E  397F               	andlw	127
  4138  0E1F  00A6               	movwf	??_GetTime
  4139  0E20  01A7               	clrf	??_GetTime+1
  4140  0E21  0826               	movf	??_GetTime,w
  4141  0E22  00AA               	movwf	GetTime@tmp
  4142  0E23  0827               	movf	??_GetTime+1,w
  4143  0E24  00AB               	movwf	GetTime@tmp+1
  4144  0E25                     l2770:	
  4145                           
  4146                           ;./CustomLib/TrafficLight.h: 42:     tmp = (tmp << 7) & 0x80;
  4147  0E25  082B               	movf	GetTime@tmp+1,w
  4148  0E26  00A7               	movwf	??_GetTime+1
  4149  0E27  082A               	movf	GetTime@tmp,w
  4150  0E28  00A6               	movwf	??_GetTime
  4151  0E29  3007               	movlw	7
  4152  0E2A  00FF               	movwf	btemp+1
  4153  0E2B                     u2765:	
  4154  0E2B  1003               	clrc
  4155  0E2C  0DA6               	rlf	??_GetTime,f
  4156  0E2D  0DA7               	rlf	??_GetTime+1,f
  4157  0E2E  0BFF               	decfsz	btemp+1,f
  4158  0E2F  2E2B               	goto	u2765
  4159  0E30  3080               	movlw	128
  4160  0E31  0526               	andwf	??_GetTime,w
  4161  0E32  00AA               	movwf	GetTime@tmp
  4162  0E33  3000               	movlw	0
  4163  0E34  0527               	andwf	??_GetTime+1,w
  4164  0E35  00AB               	movwf	GetTime@tmp+1
  4165  0E36                     l2772:	
  4166                           
  4167                           ;./CustomLib/TrafficLight.h: 44:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4168  0E36  0828               	movf	GetTime@index,w
  4169  0E37  0724               	addwf	GetTime@_dataFromGateway,w
  4170  0E38  00A6               	movwf	??_GetTime
  4171  0E39  0826               	movf	??_GetTime,w
  4172  0E3A  3E02               	addlw	2
  4173  0E3B  0084               	movwf	4
  4174  0E3C  307F               	movlw	127
  4175  0E3D  0500               	andwf	0,w
  4176  0E3E  00A7               	movwf	??_GetTime+1
  4177  0E3F  0829               	movf	GetTime@shortInt,w
  4178  0E40  0627               	xorwf	??_GetTime+1,w
  4179  0E41  3980               	andlw	-128
  4180  0E42  0627               	xorwf	??_GetTime+1,w
  4181  0E43  00A9               	movwf	GetTime@shortInt
  4182  0E44                     l2774:	
  4183                           
  4184                           ;./CustomLib/TrafficLight.h: 45:     tmp = tmp | shortInt.Val;
  4185  0E44  0829               	movf	GetTime@shortInt,w
  4186  0E45  397F               	andlw	127
  4187  0E46  00A6               	movwf	??_GetTime
  4188  0E47  082A               	movf	GetTime@tmp,w
  4189  0E48  0426               	iorwf	??_GetTime,w
  4190  0E49  00AA               	movwf	GetTime@tmp
  4191  0E4A  082B               	movf	GetTime@tmp+1,w
  4192  0E4B  00AB               	movwf	GetTime@tmp+1
  4193  0E4C                     l2776:	
  4194                           
  4195                           ;./CustomLib/TrafficLight.h: 47:     return tmp;
  4196  0E4C  082B               	movf	GetTime@tmp+1,w
  4197  0E4D  00A5               	movwf	?_GetTime+1
  4198  0E4E  082A               	movf	GetTime@tmp,w
  4199  0E4F  00A4               	movwf	?_GetTime
  4200  0E50                     l143:	
  4201  0E50  0008               	return
  4202  0E51                     __end_of_GetTime:	
  4203                           
  4204                           	psect	text14
  4205  0F98                     __ptext14:	
  4206 ;; *************** function _GetDigits *****************
  4207 ;; Defined at:
  4208 ;;		line 29 in file "./CustomLib/Conversions.h"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  centinaia       1    wreg     PTR unsigned char 
  4211 ;;		 -> centinaia(1), 
  4212 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  4213 ;;		 -> decine(1), 
  4214 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  4215 ;;		 -> unita(1), 
  4216 ;;  Time            2   22[BANK0 ] int 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  4219 ;;		 -> centinaia(1), 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      void 
  4222 ;; Registers used:
  4223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4229 ;;      Params:         0       4       0       0       0
  4230 ;;      Locals:         0       3       0       0       0
  4231 ;;      Temps:          0       1       0       0       0
  4232 ;;      Totals:         0       8       0       0       0
  4233 ;;Total ram usage:        8 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    4
  4236 ;; This function calls:
  4237 ;;		___awdiv
  4238 ;;		___awmod
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           
  4245                           ;psect for function _GetDigits
  4246  0F98                     _GetDigits:	
  4247                           
  4248                           ;incstack = 0
  4249                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4250                           ;GetDigits@centinaia stored from wreg
  4251  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0F9A  00BB               	movwf	GetDigits@centinaia
  4254  0F9B                     l2730:	
  4255                           
  4256                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     *centinaia = Time / 100;
  4257  0F9B  3064               	movlw	100
  4258  0F9C  00AB               	movwf	___awdiv@divisor
  4259  0F9D  3000               	movlw	0
  4260  0F9E  00AC               	movwf	___awdiv@divisor+1
  4261  0F9F  0837               	movf	GetDigits@Time+1,w
  4262  0FA0  00AE               	movwf	___awdiv@dividend+1
  4263  0FA1  0836               	movf	GetDigits@Time,w
  4264  0FA2  00AD               	movwf	___awdiv@dividend
  4265  0FA3  120A  118A  2736  120A  158A  	fcall	___awdiv
  4266  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  4267  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  4268  0FAA  082B               	movf	?___awdiv,w
  4269  0FAB  00B8               	movwf	??_GetDigits
  4270  0FAC  083B               	movf	GetDigits@centinaia,w
  4271  0FAD  0084               	movwf	4
  4272  0FAE  0838               	movf	??_GetDigits,w
  4273  0FAF  1383               	bcf	3,7	;select IRP bank0
  4274  0FB0  0080               	movwf	0
  4275                           
  4276                           ;./CustomLib/Conversions.h: 32:     *decine = (Time % 100) / 10;
  4277  0FB1  300A               	movlw	10
  4278  0FB2  00AB               	movwf	___awdiv@divisor
  4279  0FB3  3000               	movlw	0
  4280  0FB4  00AC               	movwf	___awdiv@divisor+1
  4281  0FB5  0837               	movf	GetDigits@Time+1,w
  4282  0FB6  00A7               	movwf	___awmod@dividend+1
  4283  0FB7  0836               	movf	GetDigits@Time,w
  4284  0FB8  00A6               	movwf	___awmod@dividend
  4285  0FB9  3064               	movlw	100
  4286  0FBA  00A4               	movwf	___awmod@divisor
  4287  0FBB  3000               	movlw	0
  4288  0FBC  00A5               	movwf	___awmod@divisor+1
  4289  0FBD  120A  118A  279F  120A  158A  	fcall	___awmod
  4290  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4291  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4292  0FC4  0825               	movf	?___awmod+1,w
  4293  0FC5  00AE               	movwf	___awdiv@dividend+1
  4294  0FC6  0824               	movf	?___awmod,w
  4295  0FC7  00AD               	movwf	___awdiv@dividend
  4296  0FC8  120A  118A  2736  120A  158A  	fcall	___awdiv
  4297  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  4298  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  4299  0FCF  082B               	movf	?___awdiv,w
  4300  0FD0  00B8               	movwf	??_GetDigits
  4301  0FD1  0834               	movf	GetDigits@decine,w
  4302  0FD2  0084               	movwf	4
  4303  0FD3  0838               	movf	??_GetDigits,w
  4304  0FD4  1383               	bcf	3,7	;select IRP bank0
  4305  0FD5  0080               	movwf	0
  4306  0FD6                     l2732:	
  4307                           
  4308                           ;./CustomLib/Conversions.h: 33:     *unita = (Time % 100) % 10;
  4309  0FD6  0837               	movf	GetDigits@Time+1,w
  4310  0FD7  00A7               	movwf	___awmod@dividend+1
  4311  0FD8  0836               	movf	GetDigits@Time,w
  4312  0FD9  00A6               	movwf	___awmod@dividend
  4313  0FDA  3064               	movlw	100
  4314  0FDB  00A4               	movwf	___awmod@divisor
  4315  0FDC  3000               	movlw	0
  4316  0FDD  00A5               	movwf	___awmod@divisor+1
  4317  0FDE  120A  118A  279F  120A  158A  	fcall	___awmod
  4318  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  4319  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  4320  0FE5  0825               	movf	?___awmod+1,w
  4321  0FE6  00BA               	movwf	_GetDigits$1159+1
  4322  0FE7  0824               	movf	?___awmod,w
  4323  0FE8  00B9               	movwf	_GetDigits$1159
  4324  0FE9                     l2734:	
  4325                           
  4326                           ;./CustomLib/Conversions.h: 33:     *unita = (Time % 100) % 10;
  4327  0FE9  300A               	movlw	10
  4328  0FEA  00A4               	movwf	___awmod@divisor
  4329  0FEB  3000               	movlw	0
  4330  0FEC  00A5               	movwf	___awmod@divisor+1
  4331  0FED  083A               	movf	_GetDigits$1159+1,w
  4332  0FEE  00A7               	movwf	___awmod@dividend+1
  4333  0FEF  0839               	movf	_GetDigits$1159,w
  4334  0FF0  00A6               	movwf	___awmod@dividend
  4335  0FF1  120A  118A  279F  120A  158A  	fcall	___awmod
  4336  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0FF8  0824               	movf	?___awmod,w
  4339  0FF9  00B8               	movwf	??_GetDigits
  4340  0FFA  0835               	movf	GetDigits@unita,w
  4341  0FFB  0084               	movwf	4
  4342  0FFC  0838               	movf	??_GetDigits,w
  4343  0FFD  1383               	bcf	3,7	;select IRP bank0
  4344  0FFE  0080               	movwf	0
  4345  0FFF                     l91:	
  4346  0FFF  0008               	return
  4347  1000                     __end_of_GetDigits:	
  4348                           
  4349                           	psect	text15
  4350  0736                     __ptext15:	
  4351 ;; *************** function ___awdiv *****************
  4352 ;; Defined at:
  4353 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  divisor         2   11[BANK0 ] int 
  4356 ;;  dividend        2   13[BANK0 ] int 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  quotient        2   18[BANK0 ] int 
  4359 ;;  sign            1   17[BANK0 ] unsigned char 
  4360 ;;  counter         1   16[BANK0 ] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2   11[BANK0 ] int 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4370 ;;      Params:         0       4       0       0       0
  4371 ;;      Locals:         0       4       0       0       0
  4372 ;;      Temps:          0       1       0       0       0
  4373 ;;      Totals:         0       9       0       0       0
  4374 ;;Total ram usage:        9 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    3
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_map
  4381 ;;		_GetDigits
  4382 ;;		_intToString
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function ___awdiv
  4388  0736                     ___awdiv:	
  4389  0736                     l2644:	
  4390                           ;incstack = 0
  4391                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4392                           
  4393  0736  1283               	bcf	3,5	;RP0=0, select bank0
  4394  0737  1303               	bcf	3,6	;RP1=0, select bank0
  4395  0738  01B1               	clrf	___awdiv@sign
  4396  0739                     l2646:	
  4397  0739  1FAC               	btfss	___awdiv@divisor+1,7
  4398  073A  2F3C               	goto	u2521
  4399  073B  2F3D               	goto	u2520
  4400  073C                     u2521:	
  4401  073C  2F44               	goto	l2652
  4402  073D                     u2520:	
  4403  073D                     l2648:	
  4404  073D  09AB               	comf	___awdiv@divisor,f
  4405  073E  09AC               	comf	___awdiv@divisor+1,f
  4406  073F  0AAB               	incf	___awdiv@divisor,f
  4407  0740  1903               	skipnz
  4408  0741  0AAC               	incf	___awdiv@divisor+1,f
  4409  0742                     l2650:	
  4410  0742  01B1               	clrf	___awdiv@sign
  4411  0743  0AB1               	incf	___awdiv@sign,f
  4412  0744                     l2652:	
  4413  0744  1FAE               	btfss	___awdiv@dividend+1,7
  4414  0745  2F47               	goto	u2531
  4415  0746  2F48               	goto	u2530
  4416  0747                     u2531:	
  4417  0747  2F51               	goto	l2658
  4418  0748                     u2530:	
  4419  0748                     l2654:	
  4420  0748  09AD               	comf	___awdiv@dividend,f
  4421  0749  09AE               	comf	___awdiv@dividend+1,f
  4422  074A  0AAD               	incf	___awdiv@dividend,f
  4423  074B  1903               	skipnz
  4424  074C  0AAE               	incf	___awdiv@dividend+1,f
  4425  074D                     l2656:	
  4426  074D  3001               	movlw	1
  4427  074E  00AF               	movwf	??___awdiv
  4428  074F  082F               	movf	??___awdiv,w
  4429  0750  06B1               	xorwf	___awdiv@sign,f
  4430  0751                     l2658:	
  4431  0751  01B2               	clrf	___awdiv@quotient
  4432  0752  01B3               	clrf	___awdiv@quotient+1
  4433  0753                     l2660:	
  4434  0753  082B               	movf	___awdiv@divisor,w
  4435  0754  042C               	iorwf	___awdiv@divisor+1,w
  4436  0755  1903               	btfsc	3,2
  4437  0756  2F58               	goto	u2541
  4438  0757  2F59               	goto	u2540
  4439  0758                     u2541:	
  4440  0758  2F90               	goto	l2680
  4441  0759                     u2540:	
  4442  0759                     l2662:	
  4443  0759  01B0               	clrf	___awdiv@counter
  4444  075A  0AB0               	incf	___awdiv@counter,f
  4445  075B  2F67               	goto	l2668
  4446  075C                     l2664:	
  4447  075C  3001               	movlw	1
  4448  075D                     u2555:	
  4449  075D  1003               	clrc
  4450  075E  0DAB               	rlf	___awdiv@divisor,f
  4451  075F  0DAC               	rlf	___awdiv@divisor+1,f
  4452  0760  3EFF               	addlw	-1
  4453  0761  1D03               	skipz
  4454  0762  2F5D               	goto	u2555
  4455  0763                     l2666:	
  4456  0763  3001               	movlw	1
  4457  0764  00AF               	movwf	??___awdiv
  4458  0765  082F               	movf	??___awdiv,w
  4459  0766  07B0               	addwf	___awdiv@counter,f
  4460  0767                     l2668:	
  4461  0767  1FAC               	btfss	___awdiv@divisor+1,7
  4462  0768  2F6A               	goto	u2561
  4463  0769  2F6B               	goto	u2560
  4464  076A                     u2561:	
  4465  076A  2F5C               	goto	l2664
  4466  076B                     u2560:	
  4467  076B                     l2670:	
  4468  076B  3001               	movlw	1
  4469  076C                     u2575:	
  4470  076C  1003               	clrc
  4471  076D  0DB2               	rlf	___awdiv@quotient,f
  4472  076E  0DB3               	rlf	___awdiv@quotient+1,f
  4473  076F  3EFF               	addlw	-1
  4474  0770  1D03               	skipz
  4475  0771  2F6C               	goto	u2575
  4476  0772  082C               	movf	___awdiv@divisor+1,w
  4477  0773  022E               	subwf	___awdiv@dividend+1,w
  4478  0774  1D03               	skipz
  4479  0775  2F78               	goto	u2585
  4480  0776  082B               	movf	___awdiv@divisor,w
  4481  0777  022D               	subwf	___awdiv@dividend,w
  4482  0778                     u2585:	
  4483  0778  1C03               	skipc
  4484  0779  2F7B               	goto	u2581
  4485  077A  2F7C               	goto	u2580
  4486  077B                     u2581:	
  4487  077B  2F83               	goto	l2676
  4488  077C                     u2580:	
  4489  077C                     l2672:	
  4490  077C  082B               	movf	___awdiv@divisor,w
  4491  077D  02AD               	subwf	___awdiv@dividend,f
  4492  077E  082C               	movf	___awdiv@divisor+1,w
  4493  077F  1C03               	skipc
  4494  0780  03AE               	decf	___awdiv@dividend+1,f
  4495  0781  02AE               	subwf	___awdiv@dividend+1,f
  4496  0782                     l2674:	
  4497  0782  1432               	bsf	___awdiv@quotient,0
  4498  0783                     l2676:	
  4499  0783  3001               	movlw	1
  4500  0784                     u2595:	
  4501  0784  1003               	clrc
  4502  0785  0CAC               	rrf	___awdiv@divisor+1,f
  4503  0786  0CAB               	rrf	___awdiv@divisor,f
  4504  0787  3EFF               	addlw	-1
  4505  0788  1D03               	skipz
  4506  0789  2F84               	goto	u2595
  4507  078A                     l2678:	
  4508  078A  3001               	movlw	1
  4509  078B  02B0               	subwf	___awdiv@counter,f
  4510  078C  1D03               	btfss	3,2
  4511  078D  2F8F               	goto	u2601
  4512  078E  2F90               	goto	u2600
  4513  078F                     u2601:	
  4514  078F  2F6B               	goto	l2670
  4515  0790                     u2600:	
  4516  0790                     l2680:	
  4517  0790  0831               	movf	___awdiv@sign,w
  4518  0791  1903               	btfsc	3,2
  4519  0792  2F94               	goto	u2611
  4520  0793  2F95               	goto	u2610
  4521  0794                     u2611:	
  4522  0794  2F9A               	goto	l2684
  4523  0795                     u2610:	
  4524  0795                     l2682:	
  4525  0795  09B2               	comf	___awdiv@quotient,f
  4526  0796  09B3               	comf	___awdiv@quotient+1,f
  4527  0797  0AB2               	incf	___awdiv@quotient,f
  4528  0798  1903               	skipnz
  4529  0799  0AB3               	incf	___awdiv@quotient+1,f
  4530  079A                     l2684:	
  4531  079A  0833               	movf	___awdiv@quotient+1,w
  4532  079B  00AC               	movwf	?___awdiv+1
  4533  079C  0832               	movf	___awdiv@quotient,w
  4534  079D  00AB               	movwf	?___awdiv
  4535  079E                     l587:	
  4536  079E  0008               	return
  4537  079F                     __end_of___awdiv:	
  4538                           
  4539                           	psect	text16
  4540  0EEE                     __ptext16:	
  4541 ;; *************** function _ChangeTrafficLight *****************
  4542 ;; Defined at:
  4543 ;;		line 18 in file "./CustomLib/TrafficLight.h"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  _semafori       1    wreg     PTR PTR struct .
  4546 ;;		 -> Semafori(32), 
  4547 ;;  _n_semafori     1   11[BANK0 ] PTR unsigned char 
  4548 ;;		 -> id_semaforo(1), 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  _semafori       1   18[BANK0 ] PTR PTR struct .
  4551 ;;		 -> Semafori(32), 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4561 ;;      Params:         0       1       0       0       0
  4562 ;;      Locals:         0       1       0       0       0
  4563 ;;      Temps:          0       6       0       0       0
  4564 ;;      Totals:         0       8       0       0       0
  4565 ;;Total ram usage:        8 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    4
  4568 ;; This function calls:
  4569 ;;		___awmod
  4570 ;; This function is called by:
  4571 ;;		_main
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           
  4576                           ;psect for function _ChangeTrafficLight
  4577  0EEE                     _ChangeTrafficLight:	
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _ChangeTrafficLight: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4581                           ;ChangeTrafficLight@_semafori stored from wreg
  4582  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  4584  0EF0  00B2               	movwf	ChangeTrafficLight@_semafori
  4585  0EF1                     l136:	
  4586                           ;./CustomLib/TrafficLight.h: 18: void ChangeTrafficLight(_Semafori _semafori, unsigned c
      +                          har *_n_semafori);./CustomLib/TrafficLight.h: 19: {;./CustomLib/TrafficLight.h: 22:     
      +                          do
  4587                           
  4588  0EF1                     l2760:	
  4589                           
  4590                           ;./CustomLib/TrafficLight.h: 23:     {;./CustomLib/TrafficLight.h: 24:         *_n_semaf
      +                          ori = ((*_n_semafori) + 1);
  4591  0EF1  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4592  0EF2  0084               	movwf	4
  4593  0EF3  1383               	bcf	3,7	;select IRP bank0
  4594  0EF4  0800               	movf	0,w
  4595  0EF5  3E01               	addlw	1
  4596  0EF6  00AC               	movwf	??_ChangeTrafficLight
  4597  0EF7  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4598  0EF8  0084               	movwf	4
  4599  0EF9  082C               	movf	??_ChangeTrafficLight,w
  4600  0EFA  0080               	movwf	0
  4601                           
  4602                           ;./CustomLib/TrafficLight.h: 25:     }while( (*(_semafori)[*_n_semafori]).times[0] == 0 
      +                          && *_n_semafori<10);
  4603  0EFB  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4604  0EFC  0084               	movwf	4
  4605  0EFD  0800               	movf	0,w
  4606  0EFE  00AC               	movwf	??_ChangeTrafficLight
  4607  0EFF  072C               	addwf	??_ChangeTrafficLight,w
  4608  0F00  0732               	addwf	ChangeTrafficLight@_semafori,w
  4609  0F01  00AD               	movwf	??_ChangeTrafficLight+1
  4610  0F02  082D               	movf	??_ChangeTrafficLight+1,w
  4611  0F03  0084               	movwf	4
  4612  0F04  1783               	bsf	3,7	;select IRP bank2
  4613  0F05  0800               	movf	0,w
  4614  0F06  00AE               	movwf	??_ChangeTrafficLight+2
  4615  0F07  0A84               	incf	4,f
  4616  0F08  0800               	movf	0,w
  4617  0F09  00AF               	movwf	??_ChangeTrafficLight+3
  4618  0F0A  082E               	movf	??_ChangeTrafficLight+2,w
  4619  0F0B  0084               	movwf	4
  4620  0F0C  1783               	bsf	3,7
  4621  0F0D  1C2F               	btfss	??_ChangeTrafficLight+3,0
  4622  0F0E  1383               	bcf	3,7
  4623  0F0F  0800               	movf	0,w
  4624  0F10  00B0               	movwf	??_ChangeTrafficLight+4
  4625  0F11  0A84               	incf	4,f
  4626  0F12  0800               	movf	0,w
  4627  0F13  00B1               	movwf	??_ChangeTrafficLight+5
  4628  0F14  0830               	movf	??_ChangeTrafficLight+4,w
  4629  0F15  0431               	iorwf	??_ChangeTrafficLight+5,w
  4630  0F16  1D03               	btfss	3,2
  4631  0F17  2F19               	goto	u2741
  4632  0F18  2F1A               	goto	u2740
  4633  0F19                     u2741:	
  4634  0F19  2F23               	goto	l2764
  4635  0F1A                     u2740:	
  4636  0F1A                     l2762:	
  4637  0F1A  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4638  0F1B  0084               	movwf	4
  4639  0F1C  300A               	movlw	10
  4640  0F1D  1383               	bcf	3,7	;select IRP bank0
  4641  0F1E  0200               	subwf	0,w
  4642  0F1F  1C03               	skipc
  4643  0F20  2F22               	goto	u2751
  4644  0F21  2F23               	goto	u2750
  4645  0F22                     u2751:	
  4646  0F22  2EF1               	goto	l136
  4647  0F23                     u2750:	
  4648  0F23                     l2764:	
  4649                           
  4650                           ;./CustomLib/TrafficLight.h: 27:     *_n_semafori=(*_n_semafori)%10;
  4651  0F23  300A               	movlw	10
  4652  0F24  00A4               	movwf	___awmod@divisor
  4653  0F25  3000               	movlw	0
  4654  0F26  00A5               	movwf	___awmod@divisor+1
  4655  0F27  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4656  0F28  0084               	movwf	4
  4657  0F29  1383               	bcf	3,7	;select IRP bank0
  4658  0F2A  0800               	movf	0,w
  4659  0F2B  00AC               	movwf	??_ChangeTrafficLight
  4660  0F2C  01AD               	clrf	??_ChangeTrafficLight+1
  4661  0F2D  082C               	movf	??_ChangeTrafficLight,w
  4662  0F2E  00A6               	movwf	___awmod@dividend
  4663  0F2F  082D               	movf	??_ChangeTrafficLight+1,w
  4664  0F30  00A7               	movwf	___awmod@dividend+1
  4665  0F31  120A  118A  279F  120A  158A  	fcall	___awmod
  4666  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  4667  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  4668  0F38  0824               	movf	?___awmod,w
  4669  0F39  00AE               	movwf	??_ChangeTrafficLight+2
  4670  0F3A  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4671  0F3B  0084               	movwf	4
  4672  0F3C  082E               	movf	??_ChangeTrafficLight+2,w
  4673  0F3D  1383               	bcf	3,7	;select IRP bank0
  4674  0F3E  0080               	movwf	0
  4675  0F3F                     l140:	
  4676  0F3F  0008               	return
  4677  0F40                     __end_of_ChangeTrafficLight:	
  4678                           
  4679                           	psect	text17
  4680  079F                     __ptext17:	
  4681 ;; *************** function ___awmod *****************
  4682 ;; Defined at:
  4683 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  divisor         2    4[BANK0 ] int 
  4686 ;;  dividend        2    6[BANK0 ] int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  sign            1   10[BANK0 ] unsigned char 
  4689 ;;  counter         1    9[BANK0 ] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  2    4[BANK0 ] int 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4699 ;;      Params:         0       4       0       0       0
  4700 ;;      Locals:         0       2       0       0       0
  4701 ;;      Temps:          0       1       0       0       0
  4702 ;;      Totals:         0       7       0       0       0
  4703 ;;Total ram usage:        7 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    3
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_GetDigits
  4710 ;;		_ChangeTrafficLight
  4711 ;;		_main
  4712 ;;		_intToString
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function ___awmod
  4718  079F                     ___awmod:	
  4719  079F                     l2688:	
  4720                           ;incstack = 0
  4721                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4722                           
  4723  079F  1283               	bcf	3,5	;RP0=0, select bank0
  4724  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  4725  07A1  01AA               	clrf	___awmod@sign
  4726  07A2                     l2690:	
  4727  07A2  1FA7               	btfss	___awmod@dividend+1,7
  4728  07A3  2FA5               	goto	u2621
  4729  07A4  2FA6               	goto	u2620
  4730  07A5                     u2621:	
  4731  07A5  2FAD               	goto	l2696
  4732  07A6                     u2620:	
  4733  07A6                     l2692:	
  4734  07A6  09A6               	comf	___awmod@dividend,f
  4735  07A7  09A7               	comf	___awmod@dividend+1,f
  4736  07A8  0AA6               	incf	___awmod@dividend,f
  4737  07A9  1903               	skipnz
  4738  07AA  0AA7               	incf	___awmod@dividend+1,f
  4739  07AB                     l2694:	
  4740  07AB  01AA               	clrf	___awmod@sign
  4741  07AC  0AAA               	incf	___awmod@sign,f
  4742  07AD                     l2696:	
  4743  07AD  1FA5               	btfss	___awmod@divisor+1,7
  4744  07AE  2FB0               	goto	u2631
  4745  07AF  2FB1               	goto	u2630
  4746  07B0                     u2631:	
  4747  07B0  2FB6               	goto	l2700
  4748  07B1                     u2630:	
  4749  07B1                     l2698:	
  4750  07B1  09A4               	comf	___awmod@divisor,f
  4751  07B2  09A5               	comf	___awmod@divisor+1,f
  4752  07B3  0AA4               	incf	___awmod@divisor,f
  4753  07B4  1903               	skipnz
  4754  07B5  0AA5               	incf	___awmod@divisor+1,f
  4755  07B6                     l2700:	
  4756  07B6  0824               	movf	___awmod@divisor,w
  4757  07B7  0425               	iorwf	___awmod@divisor+1,w
  4758  07B8  1903               	btfsc	3,2
  4759  07B9  2FBB               	goto	u2641
  4760  07BA  2FBC               	goto	u2640
  4761  07BB                     u2641:	
  4762  07BB  2FEB               	goto	l2718
  4763  07BC                     u2640:	
  4764  07BC                     l2702:	
  4765  07BC  01A9               	clrf	___awmod@counter
  4766  07BD  0AA9               	incf	___awmod@counter,f
  4767  07BE  2FCA               	goto	l2708
  4768  07BF                     l2704:	
  4769  07BF  3001               	movlw	1
  4770  07C0                     u2655:	
  4771  07C0  1003               	clrc
  4772  07C1  0DA4               	rlf	___awmod@divisor,f
  4773  07C2  0DA5               	rlf	___awmod@divisor+1,f
  4774  07C3  3EFF               	addlw	-1
  4775  07C4  1D03               	skipz
  4776  07C5  2FC0               	goto	u2655
  4777  07C6                     l2706:	
  4778  07C6  3001               	movlw	1
  4779  07C7  00A8               	movwf	??___awmod
  4780  07C8  0828               	movf	??___awmod,w
  4781  07C9  07A9               	addwf	___awmod@counter,f
  4782  07CA                     l2708:	
  4783  07CA  1FA5               	btfss	___awmod@divisor+1,7
  4784  07CB  2FCD               	goto	u2661
  4785  07CC  2FCE               	goto	u2660
  4786  07CD                     u2661:	
  4787  07CD  2FBF               	goto	l2704
  4788  07CE                     u2660:	
  4789  07CE                     l2710:	
  4790  07CE  0825               	movf	___awmod@divisor+1,w
  4791  07CF  0227               	subwf	___awmod@dividend+1,w
  4792  07D0  1D03               	skipz
  4793  07D1  2FD4               	goto	u2675
  4794  07D2  0824               	movf	___awmod@divisor,w
  4795  07D3  0226               	subwf	___awmod@dividend,w
  4796  07D4                     u2675:	
  4797  07D4  1C03               	skipc
  4798  07D5  2FD7               	goto	u2671
  4799  07D6  2FD8               	goto	u2670
  4800  07D7                     u2671:	
  4801  07D7  2FDE               	goto	l2714
  4802  07D8                     u2670:	
  4803  07D8                     l2712:	
  4804  07D8  0824               	movf	___awmod@divisor,w
  4805  07D9  02A6               	subwf	___awmod@dividend,f
  4806  07DA  0825               	movf	___awmod@divisor+1,w
  4807  07DB  1C03               	skipc
  4808  07DC  03A7               	decf	___awmod@dividend+1,f
  4809  07DD  02A7               	subwf	___awmod@dividend+1,f
  4810  07DE                     l2714:	
  4811  07DE  3001               	movlw	1
  4812  07DF                     u2685:	
  4813  07DF  1003               	clrc
  4814  07E0  0CA5               	rrf	___awmod@divisor+1,f
  4815  07E1  0CA4               	rrf	___awmod@divisor,f
  4816  07E2  3EFF               	addlw	-1
  4817  07E3  1D03               	skipz
  4818  07E4  2FDF               	goto	u2685
  4819  07E5                     l2716:	
  4820  07E5  3001               	movlw	1
  4821  07E6  02A9               	subwf	___awmod@counter,f
  4822  07E7  1D03               	btfss	3,2
  4823  07E8  2FEA               	goto	u2691
  4824  07E9  2FEB               	goto	u2690
  4825  07EA                     u2691:	
  4826  07EA  2FCE               	goto	l2710
  4827  07EB                     u2690:	
  4828  07EB                     l2718:	
  4829  07EB  082A               	movf	___awmod@sign,w
  4830  07EC  1903               	btfsc	3,2
  4831  07ED  2FEF               	goto	u2701
  4832  07EE  2FF0               	goto	u2700
  4833  07EF                     u2701:	
  4834  07EF  2FF5               	goto	l2722
  4835  07F0                     u2700:	
  4836  07F0                     l2720:	
  4837  07F0  09A6               	comf	___awmod@dividend,f
  4838  07F1  09A7               	comf	___awmod@dividend+1,f
  4839  07F2  0AA6               	incf	___awmod@dividend,f
  4840  07F3  1903               	skipnz
  4841  07F4  0AA7               	incf	___awmod@dividend+1,f
  4842  07F5                     l2722:	
  4843  07F5  0827               	movf	___awmod@dividend+1,w
  4844  07F6  00A5               	movwf	?___awmod+1
  4845  07F7  0826               	movf	___awmod@dividend,w
  4846  07F8  00A4               	movwf	?___awmod
  4847  07F9                     l600:	
  4848  07F9  0008               	return
  4849  07FA                     __end_of___awmod:	
  4850                           
  4851                           	psect	text18
  4852  0D1E                     __ptext18:	
  4853 ;; *************** function _ADC_Read *****************
  4854 ;; Defined at:
  4855 ;;		line 340 in file "debug.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  canale          1    wreg     unsigned char 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  canale          1    7[BANK0 ] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  2    4[BANK0 ] int 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4869 ;;      Params:         0       2       0       0       0
  4870 ;;      Locals:         0       1       0       0       0
  4871 ;;      Temps:          0       1       0       0       0
  4872 ;;      Totals:         0       4       0       0       0
  4873 ;;Total ram usage:        4 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    3
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function _ADC_Read
  4885  0D1E                     _ADC_Read:	
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  4889                           ;ADC_Read@canale stored from wreg
  4890  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  4891  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  4892  0D20  00A7               	movwf	ADC_Read@canale
  4893  0D21                     l2848:	
  4894                           
  4895                           ;debug.c: 340: int ADC_Read(char canale);debug.c: 341: {;debug.c: 342:     ADCON0 = (1 <
      +                          < 0) | (canale << 3);
  4896  0D21  0827               	movf	ADC_Read@canale,w
  4897  0D22  00A6               	movwf	??_ADC_Read
  4898  0D23  3002               	movlw	2
  4899  0D24                     u2815:	
  4900  0D24  1003               	clrc
  4901  0D25  0DA6               	rlf	??_ADC_Read,f
  4902  0D26  3EFF               	addlw	-1
  4903  0D27  1D03               	skipz
  4904  0D28  2D24               	goto	u2815
  4905  0D29  1003               	clrc
  4906  0D2A  0D26               	rlf	??_ADC_Read,w
  4907  0D2B  3801               	iorlw	1
  4908  0D2C  009F               	movwf	31	;volatile
  4909  0D2D                     l2850:	
  4910                           
  4911                           ;debug.c: 343:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  4912  0D2D  3004               	movlw	4
  4913  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  4914  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  4915  0D30  00A6               	movwf	??_ADC_Read
  4916  0D31                     u3157:	
  4917  0D31  0BA6               	decfsz	??_ADC_Read,f
  4918  0D32  2D31               	goto	u3157
  4919  0D33  0000               	nop
  4920  0D34                     l2852:	
  4921                           
  4922                           ;debug.c: 344:     GO_nDONE = 1;
  4923  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  4924  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  4925  0D36  151F               	bsf	31,2	;volatile
  4926  0D37                     l291:	
  4927                           ;debug.c: 346:         ;
  4928                           
  4929                           
  4930                           ;debug.c: 345:     while (GO_nDONE)
  4931  0D37  191F               	btfsc	31,2	;volatile
  4932  0D38  2D3A               	goto	u2821
  4933  0D39  2D3B               	goto	u2820
  4934  0D3A                     u2821:	
  4935  0D3A  2D37               	goto	l291
  4936  0D3B                     u2820:	
  4937  0D3B                     l2854:	
  4938                           
  4939                           ;debug.c: 347:     return ADRESL + (ADRESH << 8);
  4940  0D3B  081E               	movf	30,w	;volatile
  4941  0D3C  00A5               	movwf	?_ADC_Read+1
  4942  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  4943  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  4944  0D3F  081E               	movf	30,w	;volatile
  4945  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  4946  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  4947  0D42  00A4               	movwf	?_ADC_Read
  4948  0D43                     l294:	
  4949  0D43  0008               	return
  4950  0D44                     __end_of_ADC_Read:	
  4951                           
  4952                           	psect	text19
  4953  0F40                     __ptext19:	
  4954 ;; *************** function _ISR *****************
  4955 ;; Defined at:
  4956 ;;		line 451 in file "debug.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4970 ;;      Params:         0       0       0       0       0
  4971 ;;      Locals:         0       0       0       0       0
  4972 ;;      Temps:          0       4       0       0       0
  4973 ;;      Totals:         0       4       0       0       0
  4974 ;;Total ram usage:        4 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    2
  4977 ;; This function calls:
  4978 ;;		_UART_Read
  4979 ;;		_conteggioVeicoli
  4980 ;; This function is called by:
  4981 ;;		Interrupt level 1
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           
  4986                           ;psect for function _ISR
  4987  0F40                     _ISR:	
  4988  0F40                     i1l2394:	
  4989                           
  4990                           ;debug.c: 454:     if (RCIF && readGateway.Bit == 0)
  4991  0F40  1E8C               	btfss	12,5	;volatile
  4992  0F41  2F43               	goto	u220_21
  4993  0F42  2F44               	goto	u220_20
  4994  0F43                     u220_21:	
  4995  0F43  2F4D               	goto	i1l2402
  4996  0F44                     u220_20:	
  4997  0F44                     i1l2396:	
  4998  0F44  1854               	btfsc	_readGateway,0
  4999  0F45  2F47               	goto	u221_21
  5000  0F46  2F48               	goto	u221_20
  5001  0F47                     u221_21:	
  5002  0F47  2F4D               	goto	i1l2402
  5003  0F48                     u221_20:	
  5004  0F48                     i1l2398:	
  5005                           
  5006                           ;debug.c: 455:     {;debug.c: 456:         readGateway.Bit = 1;
  5007  0F48  1454               	bsf	_readGateway,0
  5008                           
  5009                           ;debug.c: 457:         readGatewayDone.Bit = 0;
  5010  0F49  1055               	bcf	_readGatewayDone,0
  5011                           
  5012                           ;debug.c: 458:         readGatewayDone.Timeout = 0;
  5013  0F4A  10D5               	bcf	_readGatewayDone,1
  5014  0F4B                     i1l2400:	
  5015                           
  5016                           ;debug.c: 459:         dataFromGatewayIndex = 0;
  5017  0F4B  01CD               	clrf	_dataFromGatewayIndex
  5018                           
  5019                           ;debug.c: 460:         timerReadFromGateway = 0;
  5020  0F4C  01CC               	clrf	_timerReadFromGateway
  5021  0F4D                     i1l2402:	
  5022                           
  5023                           ;debug.c: 462:     if (RCIF && readGateway.Bit == 1)
  5024  0F4D  1E8C               	btfss	12,5	;volatile
  5025  0F4E  2F50               	goto	u222_21
  5026  0F4F  2F51               	goto	u222_20
  5027  0F50                     u222_21:	
  5028  0F50  2F68               	goto	i1l2412
  5029  0F51                     u222_20:	
  5030  0F51                     i1l2404:	
  5031  0F51  1C54               	btfss	_readGateway,0
  5032  0F52  2F54               	goto	u223_21
  5033  0F53  2F55               	goto	u223_20
  5034  0F54                     u223_21:	
  5035  0F54  2F68               	goto	i1l2412
  5036  0F55                     u223_20:	
  5037  0F55                     i1l2406:	
  5038                           
  5039                           ;debug.c: 463:     {;debug.c: 464:         dataFromGateway[dataFromGatewayIndex] = UART_
      +                          Read();
  5040  0F55  120A  158A  2498  120A  158A  	fcall	_UART_Read
  5041  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  5042  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  5043  0F5C  00A0               	movwf	??_ISR
  5044  0F5D  084D               	movf	_dataFromGatewayIndex,w
  5045  0F5E  3E90               	addlw	(low (_dataFromGateway| (0+256)))& (0+255)
  5046  0F5F  0084               	movwf	4
  5047  0F60  0820               	movf	??_ISR,w
  5048  0F61  1783               	bsf	3,7	;select IRP bank3
  5049  0F62  0080               	movwf	0
  5050  0F63                     i1l2408:	
  5051                           
  5052                           ;debug.c: 465:         dataFromGatewayIndex++;
  5053  0F63  3001               	movlw	1
  5054  0F64  00A0               	movwf	??_ISR
  5055  0F65  0820               	movf	??_ISR,w
  5056  0F66  07CD               	addwf	_dataFromGatewayIndex,f
  5057  0F67                     i1l2410:	
  5058                           
  5059                           ;debug.c: 466:         timerReadFromGateway = 0;
  5060  0F67  01CC               	clrf	_timerReadFromGateway
  5061  0F68                     i1l2412:	
  5062                           
  5063                           ;debug.c: 471:     if (TMR0IF)
  5064  0F68  1D0B               	btfss	11,2	;volatile
  5065  0F69  2F6B               	goto	u224_21
  5066  0F6A  2F6C               	goto	u224_20
  5067  0F6B                     u224_21:	
  5068  0F6B  2F76               	goto	i1l2420
  5069  0F6C                     u224_20:	
  5070  0F6C                     i1l2414:	
  5071                           
  5072                           ;debug.c: 472:     {;debug.c: 473:         TMR0IF = 0;
  5073  0F6C  110B               	bcf	11,2	;volatile
  5074  0F6D                     i1l2416:	
  5075                           
  5076                           ;debug.c: 474:         conteggioVeicoli();
  5077  0F6D  120A  118A  255B  120A  158A  	fcall	_conteggioVeicoli
  5078  0F72                     i1l2418:	
  5079                           
  5080                           ;debug.c: 475:         TMR0 = 6;
  5081  0F72  3006               	movlw	6
  5082  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  5083  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  5084  0F75  0081               	movwf	1	;volatile
  5085  0F76                     i1l2420:	
  5086                           
  5087                           ;debug.c: 478:     if (TMR1IF)
  5088  0F76  1C0C               	btfss	12,0	;volatile
  5089  0F77  2F79               	goto	u225_21
  5090  0F78  2F7A               	goto	u225_20
  5091  0F79                     u225_21:	
  5092  0F79  2F8F               	goto	i1l348
  5093  0F7A                     u225_20:	
  5094  0F7A                     i1l2422:	
  5095                           
  5096                           ;debug.c: 479:     {;debug.c: 480:         TMR1IF = 0;
  5097  0F7A  100C               	bcf	12,0	;volatile
  5098  0F7B                     i1l2424:	
  5099                           
  5100                           ;debug.c: 481:         count_lux++;
  5101  0F7B  3001               	movlw	1
  5102  0F7C  00A0               	movwf	??_ISR
  5103  0F7D  0820               	movf	??_ISR,w
  5104  0F7E  07FD               	addwf	_count_lux,f
  5105  0F7F                     i1l2426:	
  5106                           
  5107                           ;debug.c: 483:         if (count_lux >= 20)
  5108  0F7F  3014               	movlw	20
  5109  0F80  027D               	subwf	_count_lux,w
  5110  0F81  1C03               	skipc
  5111  0F82  2F84               	goto	u226_21
  5112  0F83  2F85               	goto	u226_20
  5113  0F84                     u226_21:	
  5114  0F84  2F8B               	goto	i1l2434
  5115  0F85                     u226_20:	
  5116  0F85                     i1l2428:	
  5117                           
  5118                           ;debug.c: 484:         {;debug.c: 485:             secondPassed.Bit = 1;
  5119  0F85  1453               	bsf	_secondPassed,0
  5120  0F86                     i1l2430:	
  5121                           
  5122                           ;debug.c: 486:             count_lux = 0;
  5123  0F86  01FD               	clrf	_count_lux
  5124  0F87                     i1l2432:	
  5125                           
  5126                           ;debug.c: 487:             timerReadFromGateway++;
  5127  0F87  3001               	movlw	1
  5128  0F88  00A0               	movwf	??_ISR
  5129  0F89  0820               	movf	??_ISR,w
  5130  0F8A  07CC               	addwf	_timerReadFromGateway,f
  5131  0F8B                     i1l2434:	
  5132                           
  5133                           ;debug.c: 490:         TMR1H = 60;
  5134  0F8B  303C               	movlw	60
  5135  0F8C  008F               	movwf	15	;volatile
  5136  0F8D                     i1l2436:	
  5137                           
  5138                           ;debug.c: 491:         TMR1L = 176;
  5139  0F8D  30B0               	movlw	176
  5140  0F8E  008E               	movwf	14	;volatile
  5141  0F8F                     i1l348:	
  5142  0F8F  0823               	movf	??_ISR+3,w
  5143  0F90  008A               	movwf	10
  5144  0F91  0822               	movf	??_ISR+2,w
  5145  0F92  0084               	movwf	4
  5146  0F93  0E21               	swapf	(??_ISR+1)^0,w
  5147  0F94  0083               	movwf	3
  5148  0F95  0EFE               	swapf	btemp,f
  5149  0F96  0E7E               	swapf	btemp,w
  5150  0F97  0009               	retfie
  5151  0F98                     __end_of_ISR:	
  5152                           
  5153                           	psect	intentry
  5154  0004                     __pintentry:	
  5155                           ;incstack = 0
  5156                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5157                           
  5158  0004                     interrupt_function:	
  5159  007E                     saved_w	set	btemp
  5160  0004  00FE               	movwf	btemp
  5161  0005  0E03               	swapf	3,w
  5162  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5163  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5164  0008  00A1               	movwf	??_ISR+1
  5165  0009  0804               	movf	4,w
  5166  000A  00A2               	movwf	??_ISR+2
  5167  000B  080A               	movf	10,w
  5168  000C  00A3               	movwf	??_ISR+3
  5169  000D  120A  158A  2F40   	ljmp	_ISR
  5170                           
  5171                           	psect	text20
  5172  055B                     __ptext20:	
  5173 ;; *************** function _conteggioVeicoli *****************
  5174 ;; Defined at:
  5175 ;;		line 407 in file "debug.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5189 ;;      Params:         0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0
  5191 ;;      Temps:          4       0       0       0       0
  5192 ;;      Totals:         4       0       0       0       0
  5193 ;;Total ram usage:        4 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    1
  5196 ;; This function calls:
  5197 ;;		_Conteggio
  5198 ;; This function is called by:
  5199 ;;		_ISR
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           
  5204                           ;psect for function _conteggioVeicoli
  5205  055B                     _conteggioVeicoli:	
  5206  055B                     i1l2130:	
  5207                           ;incstack = 0
  5208                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5209                           
  5210                           
  5211                           ;debug.c: 410:     if (!PORTBbits.RB3)
  5212  055B  1283               	bcf	3,5	;RP0=0, select bank0
  5213  055C  1303               	bcf	3,6	;RP1=0, select bank0
  5214  055D  1986               	btfsc	6,3	;volatile
  5215  055E  2D60               	goto	u181_21
  5216  055F  2D61               	goto	u181_20
  5217  0560                     u181_21:	
  5218  0560  2D68               	goto	i1l326
  5219  0561                     u181_20:	
  5220  0561                     i1l2132:	
  5221                           
  5222                           ;debug.c: 411:     {;debug.c: 412:         count++;
  5223  0561  3001               	movlw	1
  5224  0562  07CA               	addwf	_count,f
  5225  0563  1803               	skipnc
  5226  0564  0ACB               	incf	_count+1,f
  5227  0565  3000               	movlw	0
  5228  0566  07CB               	addwf	_count+1,f
  5229                           
  5230                           ;debug.c: 413:     }
  5231  0567  2D86               	goto	i1l2138
  5232  0568                     i1l326:	
  5233                           ;debug.c: 414:     else if (PORTBbits.RB3)
  5234                           
  5235  0568  1D86               	btfss	6,3	;volatile
  5236  0569  2D6B               	goto	u182_21
  5237  056A  2D6C               	goto	u182_20
  5238  056B                     u182_21:	
  5239  056B  2D86               	goto	i1l2138
  5240  056C                     u182_20:	
  5241  056C                     i1l2134:	
  5242                           
  5243                           ;debug.c: 415:     {;debug.c: 416:         Conteggio(count, motorcycle, car, truck, 0);
  5244  056C  084B               	movf	_count+1,w
  5245  056D  00F1               	movwf	Conteggio@_count+1
  5246  056E  084A               	movf	_count,w
  5247  056F  00F0               	movwf	Conteggio@_count
  5248  0570  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  5249  0571  00F9               	movwf	??_conteggioVeicoli
  5250  0572  0879               	movf	??_conteggioVeicoli,w
  5251  0573  00F2               	movwf	Conteggio@_motorcycle
  5252  0574  3056               	movlw	(low (_car| 0))& (0+255)
  5253  0575  00FA               	movwf	??_conteggioVeicoli+1
  5254  0576  087A               	movf	??_conteggioVeicoli+1,w
  5255  0577  00F3               	movwf	Conteggio@_car
  5256  0578  30E9               	movlw	(low (_truck| 0))& (0+255)
  5257  0579  00FB               	movwf	??_conteggioVeicoli+2
  5258  057A  087B               	movf	??_conteggioVeicoli+2,w
  5259  057B  00F4               	movwf	Conteggio@_truck
  5260  057C  01F5               	clrf	Conteggio@index
  5261  057D  120A  158A  2651  120A  118A  	fcall	_Conteggio
  5262  0582                     i1l2136:	
  5263                           
  5264                           ;debug.c: 417:         count = 0;
  5265  0582  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0583  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0584  01CA               	clrf	_count
  5268  0585  01CB               	clrf	_count+1
  5269  0586                     i1l2138:	
  5270                           
  5271                           ;debug.c: 420:     if (!PORTBbits.RB4)
  5272  0586  1A06               	btfsc	6,4	;volatile
  5273  0587  2D89               	goto	u183_21
  5274  0588  2D8A               	goto	u183_20
  5275  0589                     u183_21:	
  5276  0589  2D91               	goto	i1l329
  5277  058A                     u183_20:	
  5278  058A                     i1l2140:	
  5279                           
  5280                           ;debug.c: 421:     {;debug.c: 422:         count++;
  5281  058A  3001               	movlw	1
  5282  058B  07CA               	addwf	_count,f
  5283  058C  1803               	skipnc
  5284  058D  0ACB               	incf	_count+1,f
  5285  058E  3000               	movlw	0
  5286  058F  07CB               	addwf	_count+1,f
  5287                           
  5288                           ;debug.c: 423:     }
  5289  0590  2DB0               	goto	i1l2146
  5290  0591                     i1l329:	
  5291                           ;debug.c: 424:     else if (PORTBbits.RB4)
  5292                           
  5293  0591  1E06               	btfss	6,4	;volatile
  5294  0592  2D94               	goto	u184_21
  5295  0593  2D95               	goto	u184_20
  5296  0594                     u184_21:	
  5297  0594  2DB0               	goto	i1l2146
  5298  0595                     u184_20:	
  5299  0595                     i1l2142:	
  5300                           
  5301                           ;debug.c: 425:     {;debug.c: 426:         Conteggio(count, motorcycle, car, truck, 1);
  5302  0595  084B               	movf	_count+1,w
  5303  0596  00F1               	movwf	Conteggio@_count+1
  5304  0597  084A               	movf	_count,w
  5305  0598  00F0               	movwf	Conteggio@_count
  5306  0599  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  5307  059A  00F9               	movwf	??_conteggioVeicoli
  5308  059B  0879               	movf	??_conteggioVeicoli,w
  5309  059C  00F2               	movwf	Conteggio@_motorcycle
  5310  059D  3056               	movlw	(low (_car| 0))& (0+255)
  5311  059E  00FA               	movwf	??_conteggioVeicoli+1
  5312  059F  087A               	movf	??_conteggioVeicoli+1,w
  5313  05A0  00F3               	movwf	Conteggio@_car
  5314  05A1  30E9               	movlw	(low (_truck| 0))& (0+255)
  5315  05A2  00FB               	movwf	??_conteggioVeicoli+2
  5316  05A3  087B               	movf	??_conteggioVeicoli+2,w
  5317  05A4  00F4               	movwf	Conteggio@_truck
  5318  05A5  01F5               	clrf	Conteggio@index
  5319  05A6  0AF5               	incf	Conteggio@index,f
  5320  05A7  120A  158A  2651  120A  118A  	fcall	_Conteggio
  5321  05AC                     i1l2144:	
  5322                           
  5323                           ;debug.c: 427:         count = 0;
  5324  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  5325  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  5326  05AE  01CA               	clrf	_count
  5327  05AF  01CB               	clrf	_count+1
  5328  05B0                     i1l2146:	
  5329                           
  5330                           ;debug.c: 430:     if (!PORTBbits.RB5)
  5331  05B0  1A86               	btfsc	6,5	;volatile
  5332  05B1  2DB3               	goto	u185_21
  5333  05B2  2DB4               	goto	u185_20
  5334  05B3                     u185_21:	
  5335  05B3  2DBB               	goto	i1l332
  5336  05B4                     u185_20:	
  5337  05B4                     i1l2148:	
  5338                           
  5339                           ;debug.c: 431:     {;debug.c: 432:         count++;
  5340  05B4  3001               	movlw	1
  5341  05B5  07CA               	addwf	_count,f
  5342  05B6  1803               	skipnc
  5343  05B7  0ACB               	incf	_count+1,f
  5344  05B8  3000               	movlw	0
  5345  05B9  07CB               	addwf	_count+1,f
  5346                           
  5347                           ;debug.c: 433:     }
  5348  05BA  2DDC               	goto	i1l2154
  5349  05BB                     i1l332:	
  5350                           ;debug.c: 434:     else if (PORTBbits.RB5)
  5351                           
  5352  05BB  1E86               	btfss	6,5	;volatile
  5353  05BC  2DBE               	goto	u186_21
  5354  05BD  2DBF               	goto	u186_20
  5355  05BE                     u186_21:	
  5356  05BE  2DDC               	goto	i1l2154
  5357  05BF                     u186_20:	
  5358  05BF                     i1l2150:	
  5359                           
  5360                           ;debug.c: 435:     {;debug.c: 436:         Conteggio(count, motorcycle, car, truck, 2);
  5361  05BF  084B               	movf	_count+1,w
  5362  05C0  00F1               	movwf	Conteggio@_count+1
  5363  05C1  084A               	movf	_count,w
  5364  05C2  00F0               	movwf	Conteggio@_count
  5365  05C3  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  5366  05C4  00F9               	movwf	??_conteggioVeicoli
  5367  05C5  0879               	movf	??_conteggioVeicoli,w
  5368  05C6  00F2               	movwf	Conteggio@_motorcycle
  5369  05C7  3056               	movlw	(low (_car| 0))& (0+255)
  5370  05C8  00FA               	movwf	??_conteggioVeicoli+1
  5371  05C9  087A               	movf	??_conteggioVeicoli+1,w
  5372  05CA  00F3               	movwf	Conteggio@_car
  5373  05CB  30E9               	movlw	(low (_truck| 0))& (0+255)
  5374  05CC  00FB               	movwf	??_conteggioVeicoli+2
  5375  05CD  087B               	movf	??_conteggioVeicoli+2,w
  5376  05CE  00F4               	movwf	Conteggio@_truck
  5377  05CF  3002               	movlw	2
  5378  05D0  00FC               	movwf	??_conteggioVeicoli+3
  5379  05D1  087C               	movf	??_conteggioVeicoli+3,w
  5380  05D2  00F5               	movwf	Conteggio@index
  5381  05D3  120A  158A  2651  120A  118A  	fcall	_Conteggio
  5382  05D8                     i1l2152:	
  5383                           
  5384                           ;debug.c: 437:         count = 0;
  5385  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  5386  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  5387  05DA  01CA               	clrf	_count
  5388  05DB  01CB               	clrf	_count+1
  5389  05DC                     i1l2154:	
  5390                           
  5391                           ;debug.c: 440:     if (!PORTAbits.RA5)
  5392  05DC  1A85               	btfsc	5,5	;volatile
  5393  05DD  2DDF               	goto	u187_21
  5394  05DE  2DE0               	goto	u187_20
  5395  05DF                     u187_21:	
  5396  05DF  2DE7               	goto	i1l335
  5397  05E0                     u187_20:	
  5398  05E0                     i1l2156:	
  5399                           
  5400                           ;debug.c: 441:     {;debug.c: 442:         count++;
  5401  05E0  3001               	movlw	1
  5402  05E1  07CA               	addwf	_count,f
  5403  05E2  1803               	skipnc
  5404  05E3  0ACB               	incf	_count+1,f
  5405  05E4  3000               	movlw	0
  5406  05E5  07CB               	addwf	_count+1,f
  5407                           
  5408                           ;debug.c: 443:     }
  5409  05E6  2E08               	goto	i1l338
  5410  05E7                     i1l335:	
  5411                           ;debug.c: 444:     else if (PORTAbits.RA5)
  5412                           
  5413  05E7  1E85               	btfss	5,5	;volatile
  5414  05E8  2DEA               	goto	u188_21
  5415  05E9  2DEB               	goto	u188_20
  5416  05EA                     u188_21:	
  5417  05EA  2E08               	goto	i1l338
  5418  05EB                     u188_20:	
  5419  05EB                     i1l2158:	
  5420                           
  5421                           ;debug.c: 445:     {;debug.c: 446:         Conteggio(count, motorcycle, car, truck, 3);
  5422  05EB  084B               	movf	_count+1,w
  5423  05EC  00F1               	movwf	Conteggio@_count+1
  5424  05ED  084A               	movf	_count,w
  5425  05EE  00F0               	movwf	Conteggio@_count
  5426  05EF  305A               	movlw	(low (_motorcycle| 0))& (0+255)
  5427  05F0  00F9               	movwf	??_conteggioVeicoli
  5428  05F1  0879               	movf	??_conteggioVeicoli,w
  5429  05F2  00F2               	movwf	Conteggio@_motorcycle
  5430  05F3  3056               	movlw	(low (_car| 0))& (0+255)
  5431  05F4  00FA               	movwf	??_conteggioVeicoli+1
  5432  05F5  087A               	movf	??_conteggioVeicoli+1,w
  5433  05F6  00F3               	movwf	Conteggio@_car
  5434  05F7  30E9               	movlw	(low (_truck| 0))& (0+255)
  5435  05F8  00FB               	movwf	??_conteggioVeicoli+2
  5436  05F9  087B               	movf	??_conteggioVeicoli+2,w
  5437  05FA  00F4               	movwf	Conteggio@_truck
  5438  05FB  3003               	movlw	3
  5439  05FC  00FC               	movwf	??_conteggioVeicoli+3
  5440  05FD  087C               	movf	??_conteggioVeicoli+3,w
  5441  05FE  00F5               	movwf	Conteggio@index
  5442  05FF  120A  158A  2651  120A  118A  	fcall	_Conteggio
  5443  0604                     i1l2160:	
  5444                           
  5445                           ;debug.c: 447:         count = 0;
  5446  0604  1283               	bcf	3,5	;RP0=0, select bank0
  5447  0605  1303               	bcf	3,6	;RP1=0, select bank0
  5448  0606  01CA               	clrf	_count
  5449  0607  01CB               	clrf	_count+1
  5450  0608                     i1l338:	
  5451  0608  0008               	return
  5452  0609                     __end_of_conteggioVeicoli:	
  5453                           
  5454                           	psect	text21
  5455  0E51                     __ptext21:	
  5456 ;; *************** function _Conteggio *****************
  5457 ;; Defined at:
  5458 ;;		line 77 in file "./CustomLib/TrafficLight.h"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  _count          2    0[COMMON] unsigned int 
  5461 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5462 ;;		 -> motorcycle(4), 
  5463 ;;  _car            1    3[COMMON] PTR unsigned char 
  5464 ;;		 -> car(4), 
  5465 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5466 ;;		 -> truck(4), 
  5467 ;;  index           1    5[COMMON] unsigned char 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5479 ;;      Params:         6       0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0
  5481 ;;      Temps:          3       0       0       0       0
  5482 ;;      Totals:         9       0       0       0       0
  5483 ;;Total ram usage:        9 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_conteggioVeicoli
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function _Conteggio
  5494  0E51                     _Conteggio:	
  5495  0E51                     i1l1836:	
  5496                           ;incstack = 0
  5497                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5498                           
  5499                           
  5500                           ;./CustomLib/TrafficLight.h: 77: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 78: {;./CustomLib/TrafficLight.h: 79:         if (_count >= 500)
  5501  0E51  3001               	movlw	1
  5502  0E52  0271               	subwf	Conteggio@_count+1,w
  5503  0E53  30F4               	movlw	244
  5504  0E54  1903               	skipnz
  5505  0E55  0270               	subwf	Conteggio@_count,w
  5506  0E56  1C03               	skipc
  5507  0E57  2E59               	goto	u131_21
  5508  0E58  2E5A               	goto	u131_20
  5509  0E59                     u131_21:	
  5510  0E59  2E6A               	goto	i1l1840
  5511  0E5A                     u131_20:	
  5512  0E5A                     i1l1838:	
  5513                           
  5514                           ;./CustomLib/TrafficLight.h: 80:         {;./CustomLib/TrafficLight.h: 81:             _
      +                          motorcycle[index]=_motorcycle[index]+1;
  5515  0E5A  0875               	movf	Conteggio@index,w
  5516  0E5B  0772               	addwf	Conteggio@_motorcycle,w
  5517  0E5C  00F6               	movwf	??_Conteggio
  5518  0E5D  0876               	movf	??_Conteggio,w
  5519  0E5E  0084               	movwf	4
  5520  0E5F  1383               	bcf	3,7	;select IRP bank0
  5521  0E60  0800               	movf	0,w
  5522  0E61  3E01               	addlw	1
  5523  0E62  00F7               	movwf	??_Conteggio+1
  5524  0E63  0875               	movf	Conteggio@index,w
  5525  0E64  0772               	addwf	Conteggio@_motorcycle,w
  5526  0E65  00F8               	movwf	??_Conteggio+2
  5527  0E66  0878               	movf	??_Conteggio+2,w
  5528  0E67  0084               	movwf	4
  5529  0E68  0877               	movf	??_Conteggio+1,w
  5530  0E69  0080               	movwf	0
  5531  0E6A                     i1l1840:	
  5532                           
  5533                           ;./CustomLib/TrafficLight.h: 83:         if (_count >= 1500)
  5534  0E6A  3005               	movlw	5
  5535  0E6B  0271               	subwf	Conteggio@_count+1,w
  5536  0E6C  30DC               	movlw	220
  5537  0E6D  1903               	skipnz
  5538  0E6E  0270               	subwf	Conteggio@_count,w
  5539  0E6F  1C03               	skipc
  5540  0E70  2E72               	goto	u132_21
  5541  0E71  2E73               	goto	u132_20
  5542  0E72                     u132_21:	
  5543  0E72  2E83               	goto	i1l1844
  5544  0E73                     u132_20:	
  5545  0E73                     i1l1842:	
  5546                           
  5547                           ;./CustomLib/TrafficLight.h: 84:         {;./CustomLib/TrafficLight.h: 85:             _
      +                          car[index]=_car[index]+1;
  5548  0E73  0875               	movf	Conteggio@index,w
  5549  0E74  0773               	addwf	Conteggio@_car,w
  5550  0E75  00F6               	movwf	??_Conteggio
  5551  0E76  0876               	movf	??_Conteggio,w
  5552  0E77  0084               	movwf	4
  5553  0E78  1383               	bcf	3,7	;select IRP bank0
  5554  0E79  0800               	movf	0,w
  5555  0E7A  3E01               	addlw	1
  5556  0E7B  00F7               	movwf	??_Conteggio+1
  5557  0E7C  0875               	movf	Conteggio@index,w
  5558  0E7D  0773               	addwf	Conteggio@_car,w
  5559  0E7E  00F8               	movwf	??_Conteggio+2
  5560  0E7F  0878               	movf	??_Conteggio+2,w
  5561  0E80  0084               	movwf	4
  5562  0E81  0877               	movf	??_Conteggio+1,w
  5563  0E82  0080               	movwf	0
  5564  0E83                     i1l1844:	
  5565                           
  5566                           ;./CustomLib/TrafficLight.h: 87:         if (_count >= 3000)
  5567  0E83  300B               	movlw	11
  5568  0E84  0271               	subwf	Conteggio@_count+1,w
  5569  0E85  30B8               	movlw	184
  5570  0E86  1903               	skipnz
  5571  0E87  0270               	subwf	Conteggio@_count,w
  5572  0E88  1C03               	skipc
  5573  0E89  2E8B               	goto	u133_21
  5574  0E8A  2E8C               	goto	u133_20
  5575  0E8B                     u133_21:	
  5576  0E8B  2E9C               	goto	i1l161
  5577  0E8C                     u133_20:	
  5578  0E8C                     i1l1846:	
  5579                           
  5580                           ;./CustomLib/TrafficLight.h: 88:         {;./CustomLib/TrafficLight.h: 89:             _
      +                          truck[index]=_truck[index]+1;
  5581  0E8C  0875               	movf	Conteggio@index,w
  5582  0E8D  0774               	addwf	Conteggio@_truck,w
  5583  0E8E  00F6               	movwf	??_Conteggio
  5584  0E8F  0876               	movf	??_Conteggio,w
  5585  0E90  0084               	movwf	4
  5586  0E91  1383               	bcf	3,7	;select IRP bank0
  5587  0E92  0800               	movf	0,w
  5588  0E93  3E01               	addlw	1
  5589  0E94  00F7               	movwf	??_Conteggio+1
  5590  0E95  0875               	movf	Conteggio@index,w
  5591  0E96  0774               	addwf	Conteggio@_truck,w
  5592  0E97  00F8               	movwf	??_Conteggio+2
  5593  0E98  0878               	movf	??_Conteggio+2,w
  5594  0E99  0084               	movwf	4
  5595  0E9A  0877               	movf	??_Conteggio+1,w
  5596  0E9B  0080               	movwf	0
  5597  0E9C                     i1l161:	
  5598  0E9C  0008               	return
  5599  0E9D                     __end_of_Conteggio:	
  5600                           
  5601                           	psect	text22
  5602  0C98                     __ptext22:	
  5603 ;; *************** function _UART_Read *****************
  5604 ;; Defined at:
  5605 ;;		line 379 in file "debug.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      unsigned char 
  5612 ;; Registers used:
  5613 ;;		wreg
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5619 ;;      Params:         0       0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0
  5621 ;;      Temps:          0       0       0       0       0
  5622 ;;      Totals:         0       0       0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_ISR
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           
  5633                           ;psect for function _UART_Read
  5634  0C98                     _UART_Read:	
  5635  0C98                     i1l2124:	
  5636                           ;incstack = 0
  5637                           ; Regs used in _UART_Read: [wreg]
  5638                           
  5639  0C98                     i1l312:	
  5640                           ;debug.c: 382:         ;
  5641                           
  5642                           
  5643                           ;debug.c: 381:     while (!RCIF)
  5644  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  5645  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  5646  0C9A  1E8C               	btfss	12,5	;volatile
  5647  0C9B  2C9D               	goto	u180_21
  5648  0C9C  2C9E               	goto	u180_20
  5649  0C9D                     u180_21:	
  5650  0C9D  2C98               	goto	i1l312
  5651  0C9E                     u180_20:	
  5652  0C9E                     i1l314:	
  5653                           
  5654                           ;debug.c: 383:     RCIF = 0;
  5655  0C9E  128C               	bcf	12,5	;volatile
  5656  0C9F                     i1l2126:	
  5657                           
  5658                           ;debug.c: 384:     return RCREG;
  5659  0C9F  081A               	movf	26,w	;volatile
  5660  0CA0                     i1l315:	
  5661  0CA0  0008               	return
  5662  0CA1                     __end_of_UART_Read:	
  5663  007E                     btemp	set	126	;btemp
  5664  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    11
    Data        32
    BSS         147
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     42      66
    BANK1            80      0      77
    BANK3            96     17      94
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[16] size(2) Largest target is 6
		 -> s15(BANK3[6]), s14(BANK3[6]), s13(BANK3[6]), s12(BANK3[6]), 
		 -> s11(BANK3[6]), s10(BANK1[6]), s9(BANK1[6]), s8(BANK1[6]), 
		 -> s7(BANK1[6]), s6(BANK1[6]), s5(BANK1[6]), s4(BANK1[6]), 
		 -> s3(BANK1[6]), s2(BANK1[6]), s1(BANK1[6]), s0(BANK1[6]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK3[15]), 

    ChangeTrafficLight@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    ChangeTrafficLight@_n_semafori	PTR unsigned char  size(1) Largest target is 1
		 -> id_semaforo(BANK0[1]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    UpdateTimes@_to_update	PTR struct . size(1) Largest target is 7
		 -> to_update(BANK1[7]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _GetDigits->___awdiv
    ___awdiv->___awmod
    _ChangeTrafficLight->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   18206
                                             32 BANK0     10    10      0
                                              0 BANK3     17    17      0
                           _ADC_Read
                 _ChangeTrafficLight
                          _GetDigits
                            _GetTime
                   _SetDefaultTimers
                         _SetDisplay
                          _UART_Init
                        _UpdateTimes
                            ___awmod
                             ___bmul
                           _init_ADC
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    2447
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    3628
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     896
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     376
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         15    14      1     479
                                              4 BANK0     15    14      1
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _SetDisplay                                           4     1      3    1204
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7     899
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetTime                                              8     6      2     474
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    3204
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ChangeTrafficLight                                   8     7      1    1856
                                             11 BANK0      8     7      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1513
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0    1850
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     4     4      0    1850
                                              9 COMMON     4     4      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6    1850
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _ChangeTrafficLight
     ___awmod
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _GetTime
   _SetDefaultTimers
   _SetDisplay
   _UART_Init
     ___aldiv
   _UpdateTimes
   ___awmod
   ___bmul
   _init_ADC
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     11      5E       9       97.9%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      FB      12        0.0%
ABS                  0      0      FB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jun 26 10:17:39 2020

                            pc 0002                 ___bmul@product 0026                    __CFG_CP$OFF 0000  
                           l91 0FFF                             l77 0DD0                   ___awdiv@sign 0031  
                           _s0 00E3                             _s1 00DD                             _s2 00D7  
                           _s3 00D1                             _s4 00CB                             _s5 00C5  
                           _s6 00BF                             _s7 00B9                             _s8 00B3  
                           _s9 00AD                             fsr 0004            ___wmul@multiplicand 0026  
               _GetDigits$1159 0039                    __CFG_LVP$ON 0000                            l122 0532  
                          l140 0F3F                            l116 04E1                            l300 0CA4  
                          l133 0EED                            l125 055A                            l302 0CA8  
                          l143 0E50                            l303 0CAB                            l136 0EF1  
                          l320 0D9B                            l155 0735                            l323 0CE6  
                          l261 032D                            l245 0267                            l255 015E  
                          l247 008E                            l600 07F9                            l281 0486  
                          l434 0D52                            l274 0407                            l291 0D37  
                          l460 0CFD                            l436 0D6A                            l509 06A5  
                          l294 0D43                            l288 0CBE                            l297 0E0A  
                          l587 079E                            l499 061D                   __CFG_CPD$OFF 0000  
                          _ISR 0F40                            _s10 00A7                            _s11 01B7  
                          _s12 01B1                            _s13 01AB                            _s14 01A5  
                          _s15 019F                            _car 0056                            _map 0D9C  
                          fsr0 0004                            indf 0000                   ___awmod@sign 002A  
                 __CFG_FOSC$HS 0000                           ?_ISR 0070                    main@colorId 01E0  
                         l3000 0281                           l3010 02C4                           l3002 0296  
                         l3012 02CC                           l3004 029E                           l3030 037D  
                         l3022 0333                           l3014 02FF                           l3006 02AA  
                         l3032 0381                           l3040 03A0                           l3024 0337  
                         l3016 0309                           l3008 02B2                           l3050 041D  
                         l3034 0387                           l3026 033F                           l3042 03E2  
                         l3018 0326                           l3052 0422                           l3060 0451  
                         l3044 03EA                           l3036 0388                           l3028 0377  
                         l3070 048A                           l3054 0427                           l3046 03EF  
                         l3062 0464                           l3038 0394                           l2600 0D66  
                         l2520 04A5                           l3072 048E                           l3064 047C  
                         l3056 043C                           l3048 03F4                           l2610 0621  
                         l2522 04B2                           l3066 0480                           l2700 07B6  
                         l2620 0643                           l2612 062C                           l2604 0609  
                         l2540 04CE                           l2532 04B6                           l2524 04B3  
                         l3068 0484                           l2710 07CE                           l2702 07BC  
                         l2630 067D                           l2622 0650                           l2614 0630  
                         l2606 060C                           l2550 04F0                           l2542 04D4  
                         l2526 04B4                           l2518 0496                           l3174 025F  
                         l2720 07F0                           l2712 07D8                           l2704 07BF  
                         l2800 070E                           l2640 069D                           l2632 067E  
                         l2624 0654                           l2616 0638                           l2608 0610  
                         l2560 0507                           l2552 04F6                           l2544 04E7  
                         l3176 0459                           l2722 07F5                           l2714 07DE  
                         l2706 07C6                           l2650 0742                           l2730 0F9B  
                         l3178 0716                           l2802 0721                           l2634 0687  
                         l2626 065D                           l2618 0640                           l2570 0525  
                         l2554 0503                           l2546 04EF                           l2538 04BA  
                         l2716 07E5                           l2708 07CA                           l2660 0753  
                         l2652 0744                           l2644 0736                           l2732 0FD6  
                         l2804 0725                           l2628 066F                           l2636 068D  
                         l2820 0CB7                           l2580 054C                           l2572 0538  
                         l2900 0050                           l2718 07EB                           l2670 076B  
                         l2662 0759                           l2654 0748                           l2646 0739  
                         l2734 0FE9                           l2806 072B                           l2638 0692  
                         l2830 0E09                           l2822 0DD1                           l2750 0EAC  
                         l2742 0EA1                           l2814 0CAC                           l2590 0D44  
                         l2726 0D9C                           l2582 0559                           l2574 0545  
                         l2566 050B                           l2910 0070                           l2902 0052  
                         l2760 0EF1                           l2672 077C                           l2664 075C  
                         l2680 0790                           l2656 074D                           l2648 073D  
                         l2808 072F                           l2824 0DD9                           l2752 0ED9  
                         l2744 0EAB                           l2736 0EA0                           l2816 0CB0  
                         l2592 0D48                           l2568 051F                           l2840 0D82  
                         l2832 0D6E                           l2912 0087                           l2904 0054  
                         l2850 0D2D                           l2690 07A2                           l2762 0F1A  
                         l2682 0795                           l2674 0782                           l2666 0763  
                         l2658 0751                           l2770 0E25                           l2826 0E07  
                         l2754 0EDD                           l2818 0CB3                           l2594 0D4C  
                         l2578 0546                           l2586 0CA4                           l2842 0D8B  
                         l2834 0D81                           l2922 00A2                           l2906 0060  
                         l2852 0D34                           l2692 07A6                           l2764 0F23  
                         l2684 079A                           l2676 0783                           l2668 0767  
                         l2772 0E36                           l2780 06A6                           l2860 0CE4  
                         l2828 0E08                           l2756 0EE3                           l2596 0D59  
                         l2588 0CA9                           l2844 0D91                           l2940 0147  
                         l2924 0118                           l2916 0090                           l2908 0065  
                         l2854 0D3B                           l2694 07AB                           l2678 078A  
                         l2774 0E44                           l2766 0E0E                           l2758 0EE7  
                         l2870 0CF5                           l2862 0CEA                           l2598 0D60  
                         l2846 0D95                           l2950 0157                           l2934 0125  
                         l2918 0094                           ?_map 0034                           l2848 0D21  
                         l2696 07AD                           l2688 079F                           l2776 0E4C  
                         l2768 0E1D                           l2792 06AB                           l2872 0CFC  
                         l2864 0CEB                           l2960 0227                           l2952 0160  
                         l2936 0134                           l2928 0121                           l2698 07B1  
                         l2794 06CC                           l2786 06A9                           l2858 0CD5  
                         l2866 0CEF                           l2962 022A                           l2954 01F4  
                         l2946 014A                           l2938 013A                           l2890 0045  
                         l2796 06ED                           l2868 0CF3                           l2972 023F  
                         l2956 0205                           l2948 014F                           l2892 0046  
                         l2990 0271                           l2974 0245                           l2966 0231  
                         l2958 0216                           l2982 0252                           l2894 0048  
                         l2992 0275                           l2984 026D                           l2976 0248  
                         l2968 0236                           l2896 004A                           l2888 003F  
                         l2994 0277                           l2986 026E                           l2978 024E  
                         l2898 004C                           l2996 027A                           l2988 026F  
                         u3000 02CC                           u3001 02CB                           u3010 0333  
                         u3011 0332                           u2300 04E7                           u3100 0484  
                         u3020 0337                           u2301 04E6                           u3101 0483  
                         u3021 0336                           u2310 0503                           u3110 048A  
                         u3030 0377                           u2311 0502                           u3111 0489  
                         u3031 0376                           u3120 048E                           u3040 0387  
                         u3121 048D                           u3041 0386                           u2410 0D66  
                         u2330 0532                           u3050 03EA                           u2411 0D65  
                         u2331 0531                           u2315 04FF                           u3051 03E9  
                         u2500 068D                           u2420 0610                           u2340 0538  
                         u2324 0517                           u3060 03F4                           u2501 068C  
                         u2421 060F                           u2405 0D5A                           u2341 0537  
                         u2325 0515                           u3061 03F3                           u2510 0692  
                         u2430 0621                           u3070 0422                           u2511 0691  
                         u2431 0620                           u2335 052E                           u3071 0421  
                         u2600 0790                           u2520 073D                           u2440 0640  
                         u2360 0559                           u3080 0427                           u2601 078F  
                         u2521 073C                           u2441 063F                           u2361 0558  
                         u3081 0426                           u2610 0795                           u2530 0748  
                         u2354 053E                           u2290 04E1                           u2370 0CA8  
                         u3090 0480                           u2611 0794                           u2531 0747  
                         u3147 0CBB                           u2355 053C                           u2291 04E0  
                         u2275 04A8                           u2371 0CA7                           u3091 047F  
                         u2700 07F0                           u2620 07A6                           u2540 0759  
                         u2460 0654                           u2380 0D4C                           u2284 04C6  
                         u3157 0D31                           u2701 07EF                           u2621 07A5  
                         u2541 0758                           u2461 0653                           u2381 0D4B  
                         u2365 0555                           u2285 04C4                           u2630 07B1  
                         u2710 0EAB                           u2631 07B0                           u2455 0645  
                         u2711 0EAA                           u2295 04DD                           u2640 07BC  
                         u2560 076B                           u2480 066F                           u2720 0EE3  
                         u2800 0D9B                           u2641 07BB                           u2561 076A  
                         u2481 066E                           u2721 0EE2                           u2801 0D9A  
                         u2730 0EED                           u2555 075D                           u2475 0656  
                         u2731 0EEC                           u2395 0D53                           u2820 0D3B  
                         u2660 07CE                           u2740 0F1A                           u2580 077C  
                         u2821 0D3A                           u2661 07CD                           u2741 0F19  
                         u2581 077B                           u2485 066B                           u2670 07D8  
                         u2750 0F23                           u2830 0CEF                           u2910 0147  
                         u2815 0D24                           u2671 07D7                           u2655 07C0  
                         u2751 0F22                           u2575 076C                           u2495 067F  
                         u2831 0CEE                           u2911 0146                           u2840 0CFC  
                         u2920 015D                           u2904 010E                           u2585 0778  
                         u2841 0CFB                           u2921 015C                           u2905 010C  
                         u2690 07EB                           u2770 072B                           u2930 0230  
                         u2691 07EA                           u2675 07D4                           u2595 0784  
                         u2771 072A                           u2931 022F                           u2915 0143  
                         u2780 0735                           u2940 0245                           u2860 008D  
                         u2685 07DF                           u2765 0E2B                           u2781 0734  
                         u2941 0244                           u2861 008C                           u2790 0DE8  
                         u2950 024E                           u2870 00A1                           u2951 024D  
                         u2871 00A0                           u2960 026D                           u2961 026C  
                         u2970 0275                           u2795 0DE3                           u2971 0274  
                         u2875 009D                           u2980 0280                           u2884 00BE  
                         _RCIF 0065                           u2981 027F                           u2885 00BC  
                         u2894 00E6                           u2895 00E4                           u2995 02B7  
                         _TMR0 0001                           _TXIF 0064                   __CFG_WRT$OFF 0000  
                         _disp 0050                           _main 003F                           _time 004E  
                         map@x 0034                           btemp 007E               __end_of_ADC_Read 0D44  
                __CFG_BOREN$ON 0000                    main@umidita 01DE                           start 0010  
              __end_of_GetTime 0E51              ___bmul@multiplier 0027                          ??_ISR 0020  
    __size_of_conteggioVeicoli 00AE                          ??_map 003E                __end_of___aldiv 06A6  
                        ?_main 0070                __end_of___awdiv 079F                  __CFG_WDTE$OFF 0000  
              __end_of___awmod 07FA                ___awdiv@divisor 002B                          _T1CON 0010  
                        i1l312 0C98                          i1l161 0E9C                          i1l314 0C9E  
                        i1l315 0CA0                          i1l332 05BB                          i1l326 0568  
                        i1l335 05E7                          i1l329 0591                          i1l338 0608  
                        i1l348 0F8F                ___awdiv@counter 0030                          _RCREG 001A  
         UpdateTimes@_semafori 0030                          _TMR1H 000F                          _TMR1L 000E  
                        _SPBRG 0099                          _PORTD 0008                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _TRISE 0089                          _TXREG 0019             _ChangeTrafficLight 0EEE  
                __CFG_PWRTE$ON 0000             __size_of_UART_Init 003A             __size_of_UART_Read 0009  
              __end_of_display 0811                          _count 004A                          _unita 0061  
                        main@i 01EC                          _truck 00E9            ?_ChangeTrafficLight 002B  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __initialization 0013                   __end_of_main 0493           ??_ChangeTrafficLight 002C  
           __size_of_GetDigits 0068                         ??_main 0040              SetDefaultTimers@i 0033  
            SetDefaultTimers@l 0032             __size_of_BuildByte 00C8                     _SetDisplay 0CD2  
                       _ADCON0 001F                         _ADCON1 009F             __size_of_Conteggio 004C  
                       _ADRESH 001E                         _ADRESL 009E               ___awdiv@dividend 002D  
                       i1l2130 055B                         i1l2124 0C98                         i1l2140 058A  
                       i1l2132 0561                         i1l2126 0C9F                         i1l2150 05BF  
                       i1l2142 0595                         i1l2134 056C                         i1l2160 0604  
                       i1l2152 05D8                         i1l2144 05AC                         i1l2136 0582  
                       i1l2400 0F4B                         i1l2154 05DC                         i1l2146 05B0  
                       i1l2138 0586                         i1l2410 0F67                         i1l2402 0F4D  
                       i1l2156 05E0                         i1l2148 05B4                         i1l2420 0F76  
                       i1l2404 0F51                         i1l2412 0F68                         i1l2158 05EB  
                       i1l2430 0F86                         i1l2422 0F7A                         i1l2414 0F6C  
                       i1l2406 0F55                         i1l2432 0F87                         i1l2424 0F7B  
                       i1l2416 0F6D                         i1l2408 0F63                         i1l2434 0F8B  
                       i1l2426 0F7F                         i1l2418 0F72                         i1l2436 0F8D  
                       i1l2428 0F85                         i1l1840 0E6A                         i1l1842 0E73  
                       i1l2394 0F40                         i1l1844 0E83                         i1l1836 0E51  
                       i1l2396 0F44                         i1l1846 0E8C                         i1l1838 0E5A  
                       i1l2398 0F48                         u131_20 0E5A                         u131_21 0E59  
                       u132_20 0E73                         u220_20 0F44                         u132_21 0E72  
                       u220_21 0F43                         u133_20 0E8C                         u221_20 0F48  
                       u133_21 0E8B                         u221_21 0F47                         u222_20 0F51  
                       u222_21 0F50                         u223_20 0F55                         u223_21 0F54  
                       u224_20 0F6C                         u224_21 0F6B                         u225_20 0F7A  
                       _INTCON 000B                         u225_21 0F79                         u226_20 0F85  
                       u226_21 0F84                         u180_20 0C9E                         u180_21 0C9D  
                       u181_20 0561                         u181_21 0560                         u182_20 056C  
                       u182_21 056B                         u183_20 058A                         u183_21 0589  
                       u184_20 0595                         u184_21 0594                         u185_20 05B4  
                       u185_21 05B3                         u186_20 05BF                         u186_21 05BE  
                       u187_20 05E0                         u187_21 05DF                         u188_20 05EB  
                       u188_21 05EA                         _TMR0IF 005A                         _TMR1IF 0060  
                    ??_GetTime 0026  ChangeTrafficLight@_n_semafori 002B                   ?_UART_TxChar 0070  
            __end_of_UART_Init 0E0B              __end_of_UART_Read 0CA1                         ___bmul 0CE7  
                    ??___aldiv 002C          UpdateTimes@_to_update 0024                GetTime@shortInt 0029  
                       ___wmul 0D44                      ??___awdiv 002F                         _decine 0060  
                    ??___awmod 0028               __end_of_init_ADC 0CBF                         _cycled 0052  
             ___awdiv@quotient 0032                ___awmod@divisor 0024                ___awmod@counter 0029  
             __end_of_sendByte 0D9C                GetDigits@decine 0034                  main@pressione 01DF  
                    ?_ADC_Read 0024                         saved_w 007E        __end_of__initialization 003B  
            __end_of_GetDigits 1000                  ??_UpdateTimes 0025      __size_of_SetDefaultTimers 0090  
          ___bmul@multiplicand 0024                 __pcstackCOMMON 0070              __end_of_BuildByte 055B  
                 __pidataBANK3 0CFE               _conteggioVeicoli 055B              __end_of_Conteggio 0E9D  
                   ??_ADC_Read 0026         SetDefaultTimers@giallo 0028                    ?_SetDisplay 0024  
                GetDigits@Time 0036           _dataFromGatewayIndex 004D           _timerReadFromGateway 004C  
                   __pbssBANK0 004A                     __pbssBANK1 00A0                     __pbssBANK3 0190  
                   __pmaintext 003F                        ?___bmul 0024                        ?___wmul 0024  
          __end_of_UpdateTimes 0EEE                  sendByte@byte0 003D                  sendByte@byte1 0038  
                   __pintentry 0004                     __stringtab 0800                      ?_init_ADC 0070  
                      _GetTime 0E0B                BuildByte@valore 0025                BuildByte@txByte 0029  
      GetTime@_dataFromGateway 0024                      ?_sendByte 0038           __size_of_UART_TxChar 000B  
                      ___aldiv 0609                __size_of___bmul 0017                        ___awdiv 0736  
                      ___awmod 079F            __size_of_SetDisplay 0015                __size_of___wmul 0027  
                      __ptext1 0D6B                        __ptext2 0CA1                        __ptext3 0493  
                      __ptext4 0D9C                        __ptext5 0D44                        __ptext6 0CAC  
                      __ptext7 0CE7                        __ptext8 0E9D                        __ptext9 0DD1  
               main@semaforoId 01E4                        _comando 004F                        _display 0806  
                 __size_of_ISR 0058                   __size_of_map 0035               ___awmod@dividend 0026  
             ___aldiv@dividend 0028           BuildByte@sommaColumn 002F                        clrloop0 0C91  
                      main@tmp 01E3           end_of_initialization 003B                     ??_init_ADC 0024  
               main@lux_select 01E8                    _UpdateTimes 0E9D                     ??_sendByte 003A  
             _SetDefaultTimers 06A6                      _RCSTAbits 0018               ___aldiv@quotient 002F  
  __size_of_ChangeTrafficLight 0052                     _motorcycle 005A                      _UART_Init 0DD1  
                    _UART_Read 0C98                      _PORTAbits 0005                      _PORTBbits 0006  
                 SetDisplay@d1 0027                   SetDisplay@d2 0024                   SetDisplay@d3 0025  
                    _TRISCbits 0087              __size_of_ADC_Read 0026       __end_of_conteggioVeicoli 0609  
                   map@out_max 003C                     map@out_min 003A                      _TXSTAbits 0098  
                    _GetDigits 0F98                 __end_of___bmul 0CFE                 __end_of___wmul 0D6B  
                   ?_UART_Init 0033                     ?_UART_Read 0070                      _BuildByte 0493  
                    _Conteggio 0E51              BuildByte@sommaRow 002E            start_initialization 0013  
                  __end_of_ISR 0F98                   ??_SetDisplay 0027                    __end_of_map 0DD1  
                   ?_GetDigits 0034                       ??___bmul 0025                 ADC_Read@canale 0027  
                     ??___wmul 0028                     init_fetch0 0CBF                    __pdataBANK3 01BD  
           __end_of_SetDisplay 0CE7                     ?_BuildByte 0024                 GetDigits@unita 0035  
                   ?_Conteggio 0070                    __pbssCOMMON 007D                      ___latbits 0002  
                __pcstackBANK0 0020                  __pcstackBANK3 01DD                       ?_GetTime 0024  
        SetDefaultTimers@verde 0026          SetDefaultTimers@rosso 0024              __size_of_init_ADC 0013  
  ChangeTrafficLight@_semafori 0032                      _centinaia 005F              __size_of_sendByte 0031  
                     ?___aldiv 0024                       ?___awdiv 002B                       ?___awmod 0024  
                  ??_UART_Init 0035                    ??_UART_Read 0070                 BuildByte@i_332 0036  
                    __pstrings 0800                 BuildByte@y_333 0032                 sendByte@valore 0039  
               sendByte@txByte 003E                 BuildByte@byte0 0028                 BuildByte@byte1 0024  
     __end_of_SetDefaultTimers 0736                       _ADC_Read 0D1E                      _count_lux 007D  
                UART_TxChar@ch 0024                    _id_semaforo 005E                ___aldiv@divisor 0024  
            interrupt_function 0004                ___aldiv@counter 002D                 ___wmul@product 0028  
                 ?_UpdateTimes 0024                      clear_ram0 0C90                       _PIE1bits 008C  
                ??_UART_TxChar 0024                    ??_GetDigits 0038                       _GO_nDONE 00FA  
            UART_Init@baudrate 0033                      _to_update 00A0                    ??_BuildByte 0026  
                    map@in_max 0038                      map@in_min 0036                    __stringbase 0805  
                    main@i_443 01EA                      main@i_444 01E5                      main@i_446 01E6  
                    main@i_447 01E7                    ??_Conteggio 0076              ___wmul@multiplier 0024  
                    main@index 01E9                   GetTime@index 0028              ?_conteggioVeicoli 0070  
                 _secondPassed 0053             ??_conteggioVeicoli 0079               __size_of_GetTime 0046  
                     _Semafori 01BD             GetDigits@centinaia 003B     __end_of_ChangeTrafficLight 0F40  
                  _readGateway 0054               __size_of___aldiv 009D            __end_of_UART_TxChar 0CAC  
             __size_of___awdiv 0069               __size_of___awmod 005B             __end_of__stringtab 0806  
                    sendByte@i 003F                       __ptext10 0609                       __ptext11 0CD2  
                     __ptext20 055B                       __ptext12 06A6                       __ptext21 0E51  
                     __ptext13 0E0B                       __ptext22 0C98                       __ptext14 0F98  
                     __ptext15 0736                       __ptext16 0EEE                       __ptext17 079F  
                     __ptext18 0D1E                       __ptext19 0F40                       _init_ADC 0CAC  
                __size_of_main 0454                _dataFromGateway 0190                       _old_disp 0051  
                     _sendByte 0D6B                       main@temp 01DD                       main@time 01E1  
                   _INTCONbits 000B                       init_ram0 0CC3           Conteggio@_motorcycle 0072  
                     intlevel1 0000                _readGatewayDone 0055                      stringcode 0800  
                  _UART_TxChar 0CA1           __size_of_UpdateTimes 0051                     GetTime@tmp 002A  
                   _OPTION_REG 0081                SetDisplay@value 0026                       stringdir 0800  
                     stringtab 0800                   UpdateTimes@i 0032                   UpdateTimes@l 0031  
            ?_SetDefaultTimers 0024                   ___aldiv@sign 002E             ??_SetDefaultTimers 002B  
                   BuildByte@i 0034                     BuildByte@y 0030      SetDefaultTimers@_semafori 002A  
              Conteggio@_count 0070                  Conteggio@_car 0073                Conteggio@_truck 0074  
               Conteggio@index 0075  
