

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jul 03 16:53:42 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK1
   199  0BB1                     __pidataBANK1:	
   200                           
   201                           ;initializer for _Semafori
   202  0BB1  34CF               	retlw	low (_s0| 0)
   203  0BB2  3400               	retlw	high (_s0| 0)
   204  0BB3  34C1               	retlw	low (_s1| 0)
   205  0BB4  3400               	retlw	high (_s1| 0)
   206  0BB5  34B3               	retlw	low (_s2| 0)
   207  0BB6  3400               	retlw	high (_s2| 0)
   208  0BB7  34C8               	retlw	low (_s3| (0+256))
   209  0BB8  3401               	retlw	high (_s3| (0+256))
   210  0BB9  34BA               	retlw	low (_s4| (0+256))
   211  0BBA  3401               	retlw	high (_s4| (0+256))
   212  0BBB  34AC               	retlw	low (_s5| (0+256))
   213  0BBC  3401               	retlw	high (_s5| (0+256))
   214  0BBD  349E               	retlw	low (_s6| (0+256))
   215  0BBE  3401               	retlw	high (_s6| (0+256))
   216  0BBF  3490               	retlw	low (_s7| (0+256))
   217  0BC0  3401               	retlw	high (_s7| (0+256))
   218                           
   219                           	psect	strings
   220  0800                     __pstrings:	
   221  0800                     stringtab:	
   222  0800                     __stringtab:	
   223  0800                     stringcode:	
   224                           ;	String table - string pointers are 1 byte each
   225                           
   226  0800                     stringdir:	
   227  0800  3008               	movlw	high stringdir
   228  0801  008A               	movwf	10
   229  0802  0804               	movf	4,w
   230  0803  0A84               	incf	4,f
   231  0804  0782               	addwf	2,f
   232  0805                     __stringbase:	
   233  0805  3400               	retlw	0
   234  0806                     __end_of__stringtab:	
   235  0806                     _display:	
   236  0806  343F               	retlw	63
   237  0807  3406               	retlw	6
   238  0808  345B               	retlw	91
   239  0809  344F               	retlw	79
   240  080A  3466               	retlw	102
   241  080B  346D               	retlw	109
   242  080C  347D               	retlw	125
   243  080D  3407               	retlw	7
   244  080E  347F               	retlw	127
   245  080F  346F               	retlw	111
   246  0810  3400               	retlw	0
   247  0811                     __end_of_display:	
   248  0811                     _n_semafori:	
   249  0811  3408               	retlw	8
   250  0812                     __end_of_n_semafori:	
   251  0007                     _PORTCbits	set	7
   252  0006                     _PORTBbits	set	6
   253  0008                     _PORTD	set	8
   254  0005                     _PORTAbits	set	5
   255  001A                     _RCREG	set	26
   256  0019                     _TXREG	set	25
   257  000B                     _INTCONbits	set	11
   258  0018                     _RCSTAbits	set	24
   259  001E                     _ADRESH	set	30
   260  001F                     _ADCON0	set	31
   261  000E                     _TMR1L	set	14
   262  000F                     _TMR1H	set	15
   263  0010                     _T1CON	set	16
   264  0001                     _TMR0	set	1
   265  000B                     _INTCON	set	11
   266  0060                     _TMR1IF	set	96
   267  005A                     _TMR0IF	set	90
   268  0065                     _RCIF	set	101
   269  0064                     _TXIF	set	100
   270  00FA                     _GO_nDONE	set	250
   271  008C                     _PIE1bits	set	140
   272  0099                     _SPBRG	set	153
   273  0098                     _TXSTAbits	set	152
   274  0087                     _TRISCbits	set	135
   275  009E                     _ADRESL	set	158
   276  009F                     _ADCON1	set	159
   277  0085                     _TRISA	set	133
   278  0081                     _OPTION_REG	set	129
   279  0089                     _TRISE	set	137
   280  0088                     _TRISD	set	136
   281  0087                     _TRISC	set	135
   282  0086                     _TRISB	set	134
   283                           
   284                           ; #config settings
   285  0000                     
   286                           	psect	cinit
   287  0013                     start_initialization:	
   288  0013                     __initialization:	
   289                           
   290                           ; Initialize objects allocated to BANK1
   291  0013  1383               	bcf	3,7	;select IRP bank0
   292  0014  30ED               	movlw	low (__pdataBANK1+16)
   293  0015  00FD               	movwf	btemp+-1
   294  0016  300B               	movlw	high __pidataBANK1
   295  0017  00FE               	movwf	btemp
   296  0018  30B1               	movlw	low __pidataBANK1
   297  0019  00FF               	movwf	btemp+1
   298  001A  30DD               	movlw	low __pdataBANK1
   299  001B  0084               	movwf	4
   300  001C  120A  158A  23D8  120A  118A  	fcall	init_ram0
   301                           
   302                           ; Clear objects allocated to BANK3
   303  0021  1783               	bsf	3,7	;select IRP bank2
   304  0022  3090               	movlw	low __pbssBANK3
   305  0023  0084               	movwf	4
   306  0024  30D6               	movlw	low (__pbssBANK3+70)
   307  0025  120A  158A  2395  120A  118A  	fcall	clear_ram0
   308                           
   309                           ; Clear objects allocated to BANK1
   310  002A  1383               	bcf	3,7	;select IRP bank0
   311  002B  30A0               	movlw	low __pbssBANK1
   312  002C  0084               	movwf	4
   313  002D  30DD               	movlw	low (__pbssBANK1+61)
   314  002E  120A  158A  2395  120A  118A  	fcall	clear_ram0
   315                           
   316                           ; Clear objects allocated to BANK0
   317  0033  304A               	movlw	low __pbssBANK0
   318  0034  0084               	movwf	4
   319  0035  3065               	movlw	low (__pbssBANK0+27)
   320  0036  120A  158A  2395  120A  118A  	fcall	clear_ram0
   321  003B                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  003B                     __end_of__initialization:	
   325  003B  0183               	clrf	3
   326  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   327                           
   328                           	psect	bssBANK0
   329  004A                     __pbssBANK0:	
   330  004A                     _count:	
   331  004A                     	ds	2
   332  004C                     _timerReadFromGateway:	
   333  004C                     	ds	1
   334  004D                     _dataFromGatewayIndex:	
   335  004D                     	ds	1
   336  004E                     _time:	
   337  004E                     	ds	1
   338  004F                     _comando:	
   339  004F                     	ds	1
   340  0050                     _count_lux:	
   341  0050                     	ds	1
   342  0051                     _disp:	
   343  0051                     	ds	1
   344  0052                     _cycled:	
   345  0052                     	ds	1
   346  0053                     _secondPassed:	
   347  0053                     	ds	1
   348  0054                     _readGateway:	
   349  0054                     	ds	1
   350  0055                     _readGatewayDone:	
   351  0055                     	ds	1
   352  0056                     _truck:	
   353  0056                     	ds	4
   354  005A                     _car:	
   355  005A                     	ds	4
   356  005E                     _motorcycle:	
   357  005E                     	ds	4
   358  0062                     _centinaia:	
   359  0062                     	ds	1
   360  0063                     _decine:	
   361  0063                     	ds	1
   362  0064                     _unita:	
   363  0064                     	ds	1
   364                           
   365                           	psect	bssBANK1
   366  00A0                     __pbssBANK1:	
   367  00A0                     _RoadsSensors:	
   368  00A0                     	ds	4
   369  00A4                     _dataFromGateway:	
   370  00A4                     	ds	15
   371  00B3                     _s2:	
   372  00B3                     	ds	14
   373  00C1                     _s1:	
   374  00C1                     	ds	14
   375  00CF                     _s0:	
   376  00CF                     	ds	14
   377                           
   378                           	psect	dataBANK1
   379  00DD                     __pdataBANK1:	
   380  00DD                     _Semafori:	
   381  00DD                     	ds	16
   382                           
   383                           	psect	bssBANK3
   384  0190                     __pbssBANK3:	
   385  0190                     _s7:	
   386  0190                     	ds	14
   387  019E                     _s6:	
   388  019E                     	ds	14
   389  01AC                     _s5:	
   390  01AC                     	ds	14
   391  01BA                     _s4:	
   392  01BA                     	ds	14
   393  01C8                     _s3:	
   394  01C8                     	ds	14
   395                           
   396                           	psect	inittext
   397  0BD4                     init_fetch0:	
   398                           ;	Called with low address in FSR and high address in W
   399                           
   400  0BD4  087E               	movf	btemp,w
   401  0BD5  008A               	movwf	10
   402  0BD6  087F               	movf	btemp+1,w
   403  0BD7  0082               	movwf	2
   404  0BD8                     init_ram0:	
   405                           ;Called with:
   406                           ;	high address of idata address in btemp 
   407                           ;	low address of idata address in btemp+1 
   408                           ;	low address of data in FSR
   409                           ;	high address + 1 of data in btemp-1
   410                           
   411  0BD8  120A  158A  23D4  120A  158A  	fcall	init_fetch0
   412  0BDD  0080               	movwf	0
   413  0BDE  0A84               	incf	4,f
   414  0BDF  0804               	movf	4,w
   415  0BE0  067D               	xorwf	btemp+-1,w
   416  0BE1  1903               	btfsc	3,2
   417  0BE2  3400               	retlw	0
   418  0BE3  0AFF               	incf	btemp+1,f
   419  0BE4  1903               	btfsc	3,2
   420  0BE5  0AFE               	incf	btemp,f
   421  0BE6  2BD8               	goto	init_ram0
   422                           
   423                           	psect	clrtext
   424  0B95                     clear_ram0:	
   425                           ;	Called with FSR containing the base address, and
   426                           ;	W with the last address+1
   427                           
   428  0B95  0064               	clrwdt	;clear the watchdog before getting into this loop
   429  0B96                     clrloop0:	
   430  0B96  0180               	clrf	0	;clear RAM location pointed to by FSR
   431  0B97  0A84               	incf	4,f	;increment pointer
   432  0B98  0604               	xorwf	4,w	;XOR with final address
   433  0B99  1903               	btfsc	3,2	;have we reached the end yet?
   434  0B9A  3400               	retlw	0	;all done for this memory range, return
   435  0B9B  0604               	xorwf	4,w	;XOR again to restore value
   436  0B9C  2B96               	goto	clrloop0	;do the next byte
   437                           
   438                           	psect	cstackBANK3
   439  01D6                     __pcstackBANK3:	
   440  01D6                     main@temp:	
   441                           
   442                           ; 1 bytes @ 0x0
   443  01D6                     	ds	1
   444  01D7                     main@umidita:	
   445                           
   446                           ; 1 bytes @ 0x1
   447  01D7                     	ds	1
   448  01D8                     main@pressione:	
   449                           
   450                           ; 1 bytes @ 0x2
   451  01D8                     	ds	1
   452  01D9                     main@time:	
   453                           
   454                           ; 2 bytes @ 0x3
   455  01D9                     	ds	2
   456  01DB                     main@i_493:	
   457                           
   458                           ; 1 bytes @ 0x5
   459  01DB                     	ds	1
   460  01DC                     main@i_495:	
   461                           
   462                           ; 1 bytes @ 0x6
   463  01DC                     	ds	1
   464  01DD                     main@i_492:	
   465                           
   466                           ; 2 bytes @ 0x7
   467  01DD                     	ds	2
   468  01DF                     main@lux_select:	
   469                           
   470                           ; 1 bytes @ 0x9
   471  01DF                     	ds	1
   472  01E0                     main@i_497:	
   473                           
   474                           ; 1 bytes @ 0xA
   475  01E0                     	ds	1
   476  01E1                     main@i:	
   477                           
   478                           ; 2 bytes @ 0xB
   479  01E1                     	ds	2
   480                           
   481                           	psect	cstackCOMMON
   482  0070                     __pcstackCOMMON:	
   483  0070                     ?_init_ADC:	
   484  0070                     ?_UpdateTimes:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_Conteggio:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_main:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_UART_TxChar:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_UART_Read:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_UART_Read:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_conteggioVeicoli:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_ISR:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     Conteggio@_count:	
   509                           ; 1 bytes @ 0x0
   510                           
   511                           
   512                           ; 2 bytes @ 0x0
   513  0070                     	ds	2
   514  0072                     Conteggio@_motorcycle:	
   515                           
   516                           ; 1 bytes @ 0x2
   517  0072                     	ds	1
   518  0073                     Conteggio@_car:	
   519                           
   520                           ; 1 bytes @ 0x3
   521  0073                     	ds	1
   522  0074                     Conteggio@_truck:	
   523                           
   524                           ; 1 bytes @ 0x4
   525  0074                     	ds	1
   526  0075                     Conteggio@index:	
   527                           
   528                           ; 1 bytes @ 0x5
   529  0075                     	ds	1
   530  0076                     ??_Conteggio:	
   531                           
   532                           ; 1 bytes @ 0x6
   533  0076                     	ds	3
   534  0079                     ??_conteggioVeicoli:	
   535                           
   536                           ; 1 bytes @ 0x9
   537  0079                     	ds	4
   538  007D                     conteggioVeicoli@i:	
   539                           
   540                           ; 1 bytes @ 0xD
   541  007D                     	ds	1
   542                           
   543                           	psect	cstackBANK0
   544  0020                     __pcstackBANK0:	
   545  0020                     ??_ISR:	
   546                           
   547                           ; 1 bytes @ 0x0
   548  0020                     	ds	4
   549  0024                     ??_init_ADC:	
   550  0024                     ?_luciSemaforo:	
   551                           ; 1 bytes @ 0x4
   552                           
   553  0024                     ?_SetDisplay:	
   554                           ; 1 bytes @ 0x4
   555                           
   556  0024                     ?_BuildByte:	
   557                           ; 1 bytes @ 0x4
   558                           
   559  0024                     ??_UpdateTimes:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0024                     ?_SetDefaultTimers:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0024                     ??_UART_TxChar:	
   566                           ; 1 bytes @ 0x4
   567                           
   568  0024                     ?___bmul:	
   569                           ; 1 bytes @ 0x4
   570                           
   571  0024                     ?_ADC_Read:	
   572                           ; 1 bytes @ 0x4
   573                           
   574  0024                     ?_GetTime:	
   575                           ; 2 bytes @ 0x4
   576                           
   577  0024                     ?___wmul:	
   578                           ; 2 bytes @ 0x4
   579                           
   580  0024                     ?___awmod:	
   581                           ; 2 bytes @ 0x4
   582                           
   583  0024                     ?___aldiv:	
   584                           ; 2 bytes @ 0x4
   585                           
   586  0024                     BuildByte@byte1:	
   587                           ; 4 bytes @ 0x4
   588                           
   589  0024                     GetTime@_dataFromGateway:	
   590                           ; 1 bytes @ 0x4
   591                           
   592  0024                     UART_TxChar@ch:	
   593                           ; 1 bytes @ 0x4
   594                           
   595  0024                     SetDisplay@d2:	
   596                           ; 1 bytes @ 0x4
   597                           
   598  0024                     luciSemaforo@lux:	
   599                           ; 1 bytes @ 0x4
   600                           
   601  0024                     ___bmul@multiplicand:	
   602                           ; 1 bytes @ 0x4
   603                           
   604  0024                     SetDefaultTimers@rosso:	
   605                           ; 1 bytes @ 0x4
   606                           
   607  0024                     ___wmul@multiplier:	
   608                           ; 2 bytes @ 0x4
   609                           
   610  0024                     ___awmod@divisor:	
   611                           ; 2 bytes @ 0x4
   612                           
   613  0024                     ___aldiv@divisor:	
   614                           ; 2 bytes @ 0x4
   615                           
   616                           
   617                           ; 4 bytes @ 0x4
   618  0024                     	ds	1
   619  0025                     ??_luciSemaforo:	
   620  0025                     ??___bmul:	
   621                           ; 1 bytes @ 0x5
   622                           
   623  0025                     BuildByte@valore:	
   624                           ; 1 bytes @ 0x5
   625                           
   626  0025                     SetDisplay@d3:	
   627                           ; 1 bytes @ 0x5
   628                           
   629                           
   630                           ; 1 bytes @ 0x5
   631  0025                     	ds	1
   632  0026                     ??_ADC_Read:	
   633  0026                     ??_BuildByte:	
   634                           ; 1 bytes @ 0x6
   635                           
   636  0026                     ??_GetTime:	
   637                           ; 1 bytes @ 0x6
   638                           
   639  0026                     SetDisplay@value:	
   640                           ; 1 bytes @ 0x6
   641                           
   642  0026                     ___bmul@product:	
   643                           ; 1 bytes @ 0x6
   644                           
   645  0026                     SetDefaultTimers@verde:	
   646                           ; 1 bytes @ 0x6
   647                           
   648  0026                     ___wmul@multiplicand:	
   649                           ; 2 bytes @ 0x6
   650                           
   651  0026                     ___awmod@dividend:	
   652                           ; 2 bytes @ 0x6
   653                           
   654                           
   655                           ; 2 bytes @ 0x6
   656  0026                     	ds	1
   657  0027                     ??_SetDisplay:	
   658  0027                     ADC_Read@canale:	
   659                           ; 1 bytes @ 0x7
   660                           
   661  0027                     SetDisplay@d1:	
   662                           ; 1 bytes @ 0x7
   663                           
   664  0027                     luciSemaforo@index:	
   665                           ; 1 bytes @ 0x7
   666                           
   667  0027                     ___bmul@multiplier:	
   668                           ; 1 bytes @ 0x7
   669                           
   670                           
   671                           ; 1 bytes @ 0x7
   672  0027                     	ds	1
   673  0028                     ??___wmul:	
   674  0028                     ??___awmod:	
   675                           ; 1 bytes @ 0x8
   676                           
   677  0028                     BuildByte@byte0:	
   678                           ; 1 bytes @ 0x8
   679                           
   680  0028                     GetTime@index:	
   681                           ; 1 bytes @ 0x8
   682                           
   683  0028                     SetDefaultTimers@giallo:	
   684                           ; 1 bytes @ 0x8
   685                           
   686  0028                     ___wmul@product:	
   687                           ; 2 bytes @ 0x8
   688                           
   689  0028                     ___aldiv@dividend:	
   690                           ; 2 bytes @ 0x8
   691                           
   692                           
   693                           ; 4 bytes @ 0x8
   694  0028                     	ds	1
   695  0029                     GetTime@shortInt:	
   696  0029                     ___awmod@counter:	
   697                           ; 1 bytes @ 0x9
   698                           
   699  0029                     BuildByte@txByte:	
   700                           ; 1 bytes @ 0x9
   701                           
   702                           
   703                           ; 5 bytes @ 0x9
   704  0029                     	ds	1
   705  002A                     SetDefaultTimers@_semafori:	
   706  002A                     ___awmod@sign:	
   707                           ; 1 bytes @ 0xA
   708                           
   709  002A                     GetTime@tmp:	
   710                           ; 1 bytes @ 0xA
   711                           
   712                           
   713                           ; 2 bytes @ 0xA
   714  002A                     	ds	1
   715  002B                     ??_SetDefaultTimers:	
   716  002B                     ?___awdiv:	
   717                           ; 1 bytes @ 0xB
   718                           
   719  002B                     ___awdiv@divisor:	
   720                           ; 2 bytes @ 0xB
   721                           
   722                           
   723                           ; 2 bytes @ 0xB
   724  002B                     	ds	1
   725  002C                     ?_SetReceivedTimes:	
   726  002C                     ??___aldiv:	
   727                           ; 1 bytes @ 0xC
   728                           
   729  002C                     SetReceivedTimes@_semafori:	
   730                           ; 1 bytes @ 0xC
   731                           
   732                           
   733                           ; 1 bytes @ 0xC
   734  002C                     	ds	1
   735  002D                     ??_SetReceivedTimes:	
   736  002D                     ___aldiv@counter:	
   737                           ; 1 bytes @ 0xD
   738                           
   739  002D                     ___awdiv@dividend:	
   740                           ; 1 bytes @ 0xD
   741                           
   742                           
   743                           ; 2 bytes @ 0xD
   744  002D                     	ds	1
   745  002E                     BuildByte@sommaRow:	
   746  002E                     ___aldiv@sign:	
   747                           ; 1 bytes @ 0xE
   748                           
   749                           
   750                           ; 1 bytes @ 0xE
   751  002E                     	ds	1
   752  002F                     ??___awdiv:	
   753  002F                     BuildByte@sommaColumn:	
   754                           ; 1 bytes @ 0xF
   755                           
   756  002F                     ___aldiv@quotient:	
   757                           ; 1 bytes @ 0xF
   758                           
   759                           
   760                           ; 4 bytes @ 0xF
   761  002F                     	ds	1
   762  0030                     ___awdiv@counter:	
   763  0030                     BuildByte@y:	
   764                           ; 1 bytes @ 0x10
   765                           
   766                           
   767                           ; 2 bytes @ 0x10
   768  0030                     	ds	1
   769  0031                     ___awdiv@sign:	
   770                           
   771                           ; 1 bytes @ 0x11
   772  0031                     	ds	1
   773  0032                     SetDefaultTimers@l:	
   774  0032                     BuildByte@y_360:	
   775                           ; 1 bytes @ 0x12
   776                           
   777  0032                     ___awdiv@quotient:	
   778                           ; 2 bytes @ 0x12
   779                           
   780                           
   781                           ; 2 bytes @ 0x12
   782  0032                     	ds	1
   783  0033                     ?_UART_Init:	
   784  0033                     SetDefaultTimers@i:	
   785                           ; 1 bytes @ 0x13
   786                           
   787  0033                     UART_Init@baudrate:	
   788                           ; 1 bytes @ 0x13
   789                           
   790                           
   791                           ; 2 bytes @ 0x13
   792  0033                     	ds	1
   793  0034                     ?_GetDigits:	
   794  0034                     ?_map:	
   795                           ; 1 bytes @ 0x14
   796                           
   797  0034                     GetDigits@decine:	
   798                           ; 2 bytes @ 0x14
   799                           
   800  0034                     UpdateTimes@_semafori:	
   801                           ; 1 bytes @ 0x14
   802                           
   803  0034                     map@x:	
   804                           ; 1 bytes @ 0x14
   805                           
   806  0034                     BuildByte@i:	
   807                           ; 2 bytes @ 0x14
   808                           
   809                           
   810                           ; 2 bytes @ 0x14
   811  0034                     	ds	1
   812  0035                     ??_UART_Init:	
   813  0035                     GetDigits@unita:	
   814                           ; 1 bytes @ 0x15
   815                           
   816  0035                     UpdateTimes@l:	
   817                           ; 1 bytes @ 0x15
   818                           
   819  0035                     SetReceivedTimes@semaforoId:	
   820                           ; 1 bytes @ 0x15
   821                           
   822                           
   823                           ; 1 bytes @ 0x15
   824  0035                     	ds	1
   825  0036                     UpdateTimes@i:	
   826  0036                     SetReceivedTimes@colorId:	
   827                           ; 1 bytes @ 0x16
   828                           
   829  0036                     map@in_min:	
   830                           ; 1 bytes @ 0x16
   831                           
   832  0036                     GetDigits@Time:	
   833                           ; 2 bytes @ 0x16
   834                           
   835  0036                     BuildByte@i_359:	
   836                           ; 2 bytes @ 0x16
   837                           
   838                           
   839                           ; 2 bytes @ 0x16
   840  0036                     	ds	1
   841  0037                     SetReceivedTimes@_dataFromGateway:	
   842                           
   843                           ; 1 bytes @ 0x17
   844  0037                     	ds	1
   845  0038                     ?_sendByte:	
   846  0038                     ??_GetDigits:	
   847                           ; 1 bytes @ 0x18
   848                           
   849  0038                     SetReceivedTimes@index:	
   850                           ; 1 bytes @ 0x18
   851                           
   852  0038                     sendByte@byte1:	
   853                           ; 1 bytes @ 0x18
   854                           
   855  0038                     map@in_max:	
   856                           ; 1 bytes @ 0x18
   857                           
   858                           
   859                           ; 2 bytes @ 0x18
   860  0038                     	ds	1
   861  0039                     SetReceivedTimes@i:	
   862  0039                     sendByte@valore:	
   863                           ; 1 bytes @ 0x19
   864                           
   865  0039                     _GetDigits$1222:	
   866                           ; 1 bytes @ 0x19
   867                           
   868                           
   869                           ; 2 bytes @ 0x19
   870  0039                     	ds	1
   871  003A                     ??_sendByte:	
   872  003A                     map@out_min:	
   873                           ; 1 bytes @ 0x1A
   874                           
   875                           
   876                           ; 2 bytes @ 0x1A
   877  003A                     	ds	1
   878  003B                     GetDigits@centinaia:	
   879                           
   880                           ; 1 bytes @ 0x1B
   881  003B                     	ds	1
   882  003C                     map@out_max:	
   883                           
   884                           ; 2 bytes @ 0x1C
   885  003C                     	ds	1
   886  003D                     sendByte@byte0:	
   887                           
   888                           ; 1 bytes @ 0x1D
   889  003D                     	ds	1
   890  003E                     ??_map:	
   891  003E                     sendByte@txByte:	
   892                           ; 1 bytes @ 0x1E
   893                           
   894                           
   895                           ; 1 bytes @ 0x1E
   896  003E                     	ds	1
   897  003F                     sendByte@i:	
   898                           
   899                           ; 1 bytes @ 0x1F
   900  003F                     	ds	1
   901  0040                     ??_main:	
   902                           
   903                           ; 1 bytes @ 0x20
   904  0040                     	ds	10
   905                           
   906                           	psect	maintext
   907  003F                     __pmaintext:	
   908 ;;
   909 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   910 ;;
   911 ;; *************** function _main *****************
   912 ;; Defined at:
   913 ;;		line 124 in file "main.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  lux_select      1    9[BANK3 ] unsigned char 
   918 ;;  i               1    6[BANK3 ] unsigned char 
   919 ;;  i               1    5[BANK3 ] unsigned char 
   920 ;;  i               2    7[BANK3 ] int 
   921 ;;  i               2   11[BANK3 ] int 
   922 ;;  i               1   10[BANK3 ] unsigned char 
   923 ;;  time            2    3[BANK3 ] int 
   924 ;;  pressione       1    2[BANK3 ] unsigned char 
   925 ;;  umidita         1    1[BANK3 ] unsigned char 
   926 ;;  temp            1    0[BANK3 ] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : B00/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       0       0       0       0
   937 ;;      Locals:         0       0       0      13       0
   938 ;;      Temps:          0      10       0       0       0
   939 ;;      Totals:         0      10       0      13       0
   940 ;;Total ram usage:       23 bytes
   941 ;; Hardware stack levels required when called:    5
   942 ;; This function calls:
   943 ;;		_ADC_Read
   944 ;;		_GetDigits
   945 ;;		_SetDefaultTimers
   946 ;;		_SetDisplay
   947 ;;		_SetReceivedTimes
   948 ;;		_UART_Init
   949 ;;		_UpdateTimes
   950 ;;		___awmod
   951 ;;		_init_ADC
   952 ;;		_luciSemaforo
   953 ;;		_map
   954 ;;		_sendByte
   955 ;; This function is called by:
   956 ;;		Startup code after reset
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _main
   962  003F                     _main:	
   963  003F                     l3280:	
   964                           ;incstack = 0
   965                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   966                           
   967                           
   968                           ;main.c: 126:     TRISB = 0x1F;
   969  003F  301F               	movlw	31
   970  0040  1683               	bsf	3,5	;RP0=1, select bank1
   971  0041  1303               	bcf	3,6	;RP1=0, select bank1
   972  0042  0086               	movwf	6	;volatile
   973                           
   974                           ;main.c: 127:     TRISC = 0x80;
   975  0043  3080               	movlw	128
   976  0044  0087               	movwf	7	;volatile
   977  0045                     l3282:	
   978                           
   979                           ;main.c: 128:     TRISD = 0x00;
   980  0045  0188               	clrf	8	;volatile
   981  0046                     l3284:	
   982                           
   983                           ;main.c: 129:     TRISE = 0x01;
   984  0046  3001               	movlw	1
   985  0047  0089               	movwf	9	;volatile
   986  0048                     l3286:	
   987                           
   988                           ;main.c: 130:     INTCON = 0xE0;
   989  0048  30E0               	movlw	224
   990  0049  008B               	movwf	11	;volatile
   991  004A                     l3288:	
   992                           
   993                           ;main.c: 131:     OPTION_REG = 0x04;
   994  004A  3004               	movlw	4
   995  004B  0081               	movwf	1	;volatile
   996  004C                     l3290:	
   997                           
   998                           ;main.c: 132:     TMR0 = 6;
   999  004C  3006               	movlw	6
  1000  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1001  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1002  004F  0081               	movwf	1	;volatile
  1003  0050                     l3292:	
  1004                           
  1005                           ;main.c: 133:     T1CON = 0x31;
  1006  0050  3031               	movlw	49
  1007  0051  0090               	movwf	16	;volatile
  1008  0052                     l3294:	
  1009                           
  1010                           ;main.c: 135:     TMR1H = 60;
  1011  0052  303C               	movlw	60
  1012  0053  008F               	movwf	15	;volatile
  1013  0054                     l3296:	
  1014                           
  1015                           ;main.c: 136:     TMR1L = 176;
  1016  0054  30B0               	movlw	176
  1017  0055  008E               	movwf	14	;volatile
  1018                           
  1019                           ;main.c: 139:     int time;;main.c: 140:     disp = 0;
  1020  0056  01D1               	clrf	_disp
  1021                           
  1022                           ;main.c: 142:     unsigned char umidita = 0;
  1023  0057  1683               	bsf	3,5	;RP0=1, select bank3
  1024  0058  1703               	bsf	3,6	;RP1=1, select bank3
  1025  0059  01D7               	clrf	main@umidita^(0+384)
  1026                           
  1027                           ;main.c: 143:     unsigned char pressione = 0;
  1028  005A  01D8               	clrf	main@pressione^(0+384)
  1029  005B                     l3298:	
  1030                           
  1031                           ;main.c: 145:     init_ADC();
  1032  005B  120A  158A  23C1  120A  118A  	fcall	_init_ADC
  1033  0060                     l3300:	
  1034                           
  1035                           ;main.c: 146:     UART_Init(9600);
  1036  0060  3080               	movlw	128
  1037  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0063  00B3               	movwf	UART_Init@baudrate
  1040  0064  3025               	movlw	37
  1041  0065  00B4               	movwf	UART_Init@baudrate+1
  1042  0066  120A  158A  2491  120A  118A  	fcall	_UART_Init
  1043  006B                     l3302:	
  1044                           
  1045                           ;main.c: 147:     SetDefaultTimers(2,4,6, Semafori);
  1046  006B  3002               	movlw	2
  1047  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1048  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1049  006E  00A4               	movwf	SetDefaultTimers@rosso
  1050  006F  3000               	movlw	0
  1051  0070  00A5               	movwf	SetDefaultTimers@rosso+1
  1052  0071  3004               	movlw	4
  1053  0072  00A6               	movwf	SetDefaultTimers@verde
  1054  0073  3000               	movlw	0
  1055  0074  00A7               	movwf	SetDefaultTimers@verde+1
  1056  0075  3006               	movlw	6
  1057  0076  00A8               	movwf	SetDefaultTimers@giallo
  1058  0077  3000               	movlw	0
  1059  0078  00A9               	movwf	SetDefaultTimers@giallo+1
  1060  0079  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1061  007A  00C0               	movwf	??_main
  1062  007B  0840               	movf	??_main,w
  1063  007C  00AA               	movwf	SetDefaultTimers@_semafori
  1064  007D  120A  118A  2739  120A  118A  	fcall	_SetDefaultTimers
  1065  0082                     l3304:	
  1066                           
  1067                           ;main.c: 150:     {;main.c: 152:         if (readGateway.Bit)
  1068  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0084  1C54               	btfss	_readGateway,0
  1071  0085  2887               	goto	u2721
  1072  0086  2888               	goto	u2720
  1073  0087                     u2721:	
  1074  0087  2B1C               	goto	l238
  1075  0088                     u2720:	
  1076  0088  2B07               	goto	l3384
  1077  0089                     l240:	
  1078                           ;main.c: 155:             {;main.c: 156:             case 0x08:
  1079                           
  1080                           
  1081                           ;main.c: 157:                 readGatewayDone.Bit = 1;
  1082  0089  1455               	bsf	_readGatewayDone,0
  1083                           
  1084                           ;main.c: 158:                 readGateway.Bit = 0;
  1085  008A  1054               	bcf	_readGateway,0
  1086  008B                     l3308:	
  1087                           
  1088                           ;main.c: 160:                 for (int i = 0; i < 4; i++)
  1089  008B  1683               	bsf	3,5	;RP0=1, select bank3
  1090  008C  1703               	bsf	3,6	;RP1=1, select bank3
  1091  008D  01E1               	clrf	main@i^(0+384)
  1092  008E  01E2               	clrf	(main@i+1)^(0+384)
  1093  008F  29AC               	goto	l3324
  1094  0090                     l3314:	
  1095                           
  1096                           ;main.c: 165:                         sendByte(0x03, 0x01, motorcycle[i]);
  1097  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0092  01B8               	clrf	sendByte@byte1
  1100  0093  0AB8               	incf	sendByte@byte1,f
  1101  0094  1683               	bsf	3,5	;RP0=1, select bank3
  1102  0095  1703               	bsf	3,6	;RP1=1, select bank3
  1103  0096  0861               	movf	main@i^(0+384),w
  1104  0097  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1105  0098  0084               	movwf	4
  1106  0099  1383               	bcf	3,7	;select IRP bank0
  1107  009A  0800               	movf	0,w
  1108  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1109  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1110  009D  00C0               	movwf	??_main
  1111  009E  0840               	movf	??_main,w
  1112  009F  00B9               	movwf	sendByte@valore
  1113  00A0  3003               	movlw	3
  1114  00A1  120A  158A  2460  120A  118A  	fcall	_sendByte
  1115                           
  1116                           ;main.c: 166:                         sendByte(0x03, 0x02, car[i]);
  1117  00A6  3002               	movlw	2
  1118  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1119  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1120  00A9  00C0               	movwf	??_main
  1121  00AA  0840               	movf	??_main,w
  1122  00AB  00B8               	movwf	sendByte@byte1
  1123  00AC  1683               	bsf	3,5	;RP0=1, select bank3
  1124  00AD  1703               	bsf	3,6	;RP1=1, select bank3
  1125  00AE  0861               	movf	main@i^(0+384),w
  1126  00AF  3E5A               	addlw	(low (_car| 0))& (0+255)
  1127  00B0  0084               	movwf	4
  1128  00B1  1383               	bcf	3,7	;select IRP bank0
  1129  00B2  0800               	movf	0,w
  1130  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1131  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1132  00B5  00C1               	movwf	??_main+1
  1133  00B6  0841               	movf	??_main+1,w
  1134  00B7  00B9               	movwf	sendByte@valore
  1135  00B8  3003               	movlw	3
  1136  00B9  120A  158A  2460  120A  118A  	fcall	_sendByte
  1137                           
  1138                           ;main.c: 167:                         sendByte(0x03, 0x03, truck[i]);
  1139  00BE  3003               	movlw	3
  1140  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1141  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1142  00C1  00C0               	movwf	??_main
  1143  00C2  0840               	movf	??_main,w
  1144  00C3  00B8               	movwf	sendByte@byte1
  1145  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  1146  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  1147  00C6  0861               	movf	main@i^(0+384),w
  1148  00C7  3E56               	addlw	(low (_truck| 0))& (0+255)
  1149  00C8  0084               	movwf	4
  1150  00C9  1383               	bcf	3,7	;select IRP bank0
  1151  00CA  0800               	movf	0,w
  1152  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1153  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1154  00CD  00C1               	movwf	??_main+1
  1155  00CE  0841               	movf	??_main+1,w
  1156  00CF  00B9               	movwf	sendByte@valore
  1157  00D0  3003               	movlw	3
  1158  00D1  120A  158A  2460  120A  118A  	fcall	_sendByte
  1159                           
  1160                           ;main.c: 168:                         break;
  1161  00D6  29C1               	goto	l3326
  1162  00D7                     l3316:	
  1163                           
  1164                           ;main.c: 170:                         sendByte(0x05, 0x01, motorcycle[i]);
  1165  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1166  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1167  00D9  01B8               	clrf	sendByte@byte1
  1168  00DA  0AB8               	incf	sendByte@byte1,f
  1169  00DB  1683               	bsf	3,5	;RP0=1, select bank3
  1170  00DC  1703               	bsf	3,6	;RP1=1, select bank3
  1171  00DD  0861               	movf	main@i^(0+384),w
  1172  00DE  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1173  00DF  0084               	movwf	4
  1174  00E0  1383               	bcf	3,7	;select IRP bank0
  1175  00E1  0800               	movf	0,w
  1176  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1177  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1178  00E4  00C0               	movwf	??_main
  1179  00E5  0840               	movf	??_main,w
  1180  00E6  00B9               	movwf	sendByte@valore
  1181  00E7  3005               	movlw	5
  1182  00E8  120A  158A  2460  120A  118A  	fcall	_sendByte
  1183                           
  1184                           ;main.c: 171:                         sendByte(0x05, 0x02, car[i]);
  1185  00ED  3002               	movlw	2
  1186  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1187  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1188  00F0  00C0               	movwf	??_main
  1189  00F1  0840               	movf	??_main,w
  1190  00F2  00B8               	movwf	sendByte@byte1
  1191  00F3  1683               	bsf	3,5	;RP0=1, select bank3
  1192  00F4  1703               	bsf	3,6	;RP1=1, select bank3
  1193  00F5  0861               	movf	main@i^(0+384),w
  1194  00F6  3E5A               	addlw	(low (_car| 0))& (0+255)
  1195  00F7  0084               	movwf	4
  1196  00F8  1383               	bcf	3,7	;select IRP bank0
  1197  00F9  0800               	movf	0,w
  1198  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1199  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1200  00FC  00C1               	movwf	??_main+1
  1201  00FD  0841               	movf	??_main+1,w
  1202  00FE  00B9               	movwf	sendByte@valore
  1203  00FF  3005               	movlw	5
  1204  0100  120A  158A  2460  120A  118A  	fcall	_sendByte
  1205                           
  1206                           ;main.c: 172:                         sendByte(0x05, 0x03, truck[i]);
  1207  0105  3003               	movlw	3
  1208  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0108  00C0               	movwf	??_main
  1211  0109  0840               	movf	??_main,w
  1212  010A  00B8               	movwf	sendByte@byte1
  1213  010B  1683               	bsf	3,5	;RP0=1, select bank3
  1214  010C  1703               	bsf	3,6	;RP1=1, select bank3
  1215  010D  0861               	movf	main@i^(0+384),w
  1216  010E  3E56               	addlw	(low (_truck| 0))& (0+255)
  1217  010F  0084               	movwf	4
  1218  0110  1383               	bcf	3,7	;select IRP bank0
  1219  0111  0800               	movf	0,w
  1220  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0114  00C1               	movwf	??_main+1
  1223  0115  0841               	movf	??_main+1,w
  1224  0116  00B9               	movwf	sendByte@valore
  1225  0117  3005               	movlw	5
  1226  0118  120A  158A  2460  120A  118A  	fcall	_sendByte
  1227                           
  1228                           ;main.c: 173:                         break;
  1229  011D  29C1               	goto	l3326
  1230  011E                     l3318:	
  1231                           
  1232                           ;main.c: 175:                         sendByte(0x07, 0x01, motorcycle[i]);
  1233  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1234  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0120  01B8               	clrf	sendByte@byte1
  1236  0121  0AB8               	incf	sendByte@byte1,f
  1237  0122  1683               	bsf	3,5	;RP0=1, select bank3
  1238  0123  1703               	bsf	3,6	;RP1=1, select bank3
  1239  0124  0861               	movf	main@i^(0+384),w
  1240  0125  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1241  0126  0084               	movwf	4
  1242  0127  1383               	bcf	3,7	;select IRP bank0
  1243  0128  0800               	movf	0,w
  1244  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1245  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1246  012B  00C0               	movwf	??_main
  1247  012C  0840               	movf	??_main,w
  1248  012D  00B9               	movwf	sendByte@valore
  1249  012E  3007               	movlw	7
  1250  012F  120A  158A  2460  120A  118A  	fcall	_sendByte
  1251                           
  1252                           ;main.c: 176:                         sendByte(0x07, 0x02, car[i]);
  1253  0134  3002               	movlw	2
  1254  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0137  00C0               	movwf	??_main
  1257  0138  0840               	movf	??_main,w
  1258  0139  00B8               	movwf	sendByte@byte1
  1259  013A  1683               	bsf	3,5	;RP0=1, select bank3
  1260  013B  1703               	bsf	3,6	;RP1=1, select bank3
  1261  013C  0861               	movf	main@i^(0+384),w
  1262  013D  3E5A               	addlw	(low (_car| 0))& (0+255)
  1263  013E  0084               	movwf	4
  1264  013F  1383               	bcf	3,7	;select IRP bank0
  1265  0140  0800               	movf	0,w
  1266  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0143  00C1               	movwf	??_main+1
  1269  0144  0841               	movf	??_main+1,w
  1270  0145  00B9               	movwf	sendByte@valore
  1271  0146  3007               	movlw	7
  1272  0147  120A  158A  2460  120A  118A  	fcall	_sendByte
  1273                           
  1274                           ;main.c: 177:                         sendByte(0x07, 0x03, truck[i]);
  1275  014C  3003               	movlw	3
  1276  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1277  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1278  014F  00C0               	movwf	??_main
  1279  0150  0840               	movf	??_main,w
  1280  0151  00B8               	movwf	sendByte@byte1
  1281  0152  1683               	bsf	3,5	;RP0=1, select bank3
  1282  0153  1703               	bsf	3,6	;RP1=1, select bank3
  1283  0154  0861               	movf	main@i^(0+384),w
  1284  0155  3E56               	addlw	(low (_truck| 0))& (0+255)
  1285  0156  0084               	movwf	4
  1286  0157  1383               	bcf	3,7	;select IRP bank0
  1287  0158  0800               	movf	0,w
  1288  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1289  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1290  015B  00C1               	movwf	??_main+1
  1291  015C  0841               	movf	??_main+1,w
  1292  015D  00B9               	movwf	sendByte@valore
  1293  015E  3007               	movlw	7
  1294  015F  120A  158A  2460  120A  118A  	fcall	_sendByte
  1295                           
  1296                           ;main.c: 178:                         break;
  1297  0164  29C1               	goto	l3326
  1298  0165                     l3320:	
  1299                           
  1300                           ;main.c: 180:                         sendByte(0x09, 0x01, motorcycle[i]);
  1301  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0167  01B8               	clrf	sendByte@byte1
  1304  0168  0AB8               	incf	sendByte@byte1,f
  1305  0169  1683               	bsf	3,5	;RP0=1, select bank3
  1306  016A  1703               	bsf	3,6	;RP1=1, select bank3
  1307  016B  0861               	movf	main@i^(0+384),w
  1308  016C  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1309  016D  0084               	movwf	4
  1310  016E  1383               	bcf	3,7	;select IRP bank0
  1311  016F  0800               	movf	0,w
  1312  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0172  00C0               	movwf	??_main
  1315  0173  0840               	movf	??_main,w
  1316  0174  00B9               	movwf	sendByte@valore
  1317  0175  3009               	movlw	9
  1318  0176  120A  158A  2460  120A  118A  	fcall	_sendByte
  1319                           
  1320                           ;main.c: 181:                         sendByte(0x09, 0x02, car[i]);
  1321  017B  3002               	movlw	2
  1322  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1323  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1324  017E  00C0               	movwf	??_main
  1325  017F  0840               	movf	??_main,w
  1326  0180  00B8               	movwf	sendByte@byte1
  1327  0181  1683               	bsf	3,5	;RP0=1, select bank3
  1328  0182  1703               	bsf	3,6	;RP1=1, select bank3
  1329  0183  0861               	movf	main@i^(0+384),w
  1330  0184  3E5A               	addlw	(low (_car| 0))& (0+255)
  1331  0185  0084               	movwf	4
  1332  0186  1383               	bcf	3,7	;select IRP bank0
  1333  0187  0800               	movf	0,w
  1334  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1336  018A  00C1               	movwf	??_main+1
  1337  018B  0841               	movf	??_main+1,w
  1338  018C  00B9               	movwf	sendByte@valore
  1339  018D  3009               	movlw	9
  1340  018E  120A  158A  2460  120A  118A  	fcall	_sendByte
  1341                           
  1342                           ;main.c: 182:                         sendByte(0x09, 0x03, truck[i]);
  1343  0193  3003               	movlw	3
  1344  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0196  00C0               	movwf	??_main
  1347  0197  0840               	movf	??_main,w
  1348  0198  00B8               	movwf	sendByte@byte1
  1349  0199  1683               	bsf	3,5	;RP0=1, select bank3
  1350  019A  1703               	bsf	3,6	;RP1=1, select bank3
  1351  019B  0861               	movf	main@i^(0+384),w
  1352  019C  3E56               	addlw	(low (_truck| 0))& (0+255)
  1353  019D  0084               	movwf	4
  1354  019E  1383               	bcf	3,7	;select IRP bank0
  1355  019F  0800               	movf	0,w
  1356  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1357  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1358  01A2  00C1               	movwf	??_main+1
  1359  01A3  0841               	movf	??_main+1,w
  1360  01A4  00B9               	movwf	sendByte@valore
  1361  01A5  3009               	movlw	9
  1362  01A6  120A  158A  2460  120A  118A  	fcall	_sendByte
  1363                           
  1364                           ;main.c: 183:                         break;
  1365  01AB  29C1               	goto	l3326
  1366  01AC                     l3324:	
  1367                           
  1368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1369                           ; Switch size 1, requested type "simple"
  1370                           ; Number of cases is 1, Range of values is 0 to 0
  1371                           ; switch strategies available:
  1372                           ; Name         Instructions Cycles
  1373                           ; simple_byte            4     3 (average)
  1374                           ; direct_byte           11     8 (fixed)
  1375                           ; jumptable            260     6 (fixed)
  1376                           ;	Chosen strategy is simple_byte
  1377  01AC  1683               	bsf	3,5	;RP0=1, select bank3
  1378  01AD  1703               	bsf	3,6	;RP1=1, select bank3
  1379  01AE  0862               	movf	(main@i+1)^(0+384),w
  1380  01AF  3A00               	xorlw	0	; case 0
  1381  01B0  1903               	skipnz
  1382  01B1  29B3               	goto	l3688
  1383  01B2  29C1               	goto	l3326
  1384  01B3                     l3688:	
  1385                           
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 4, Range of values is 0 to 3
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte           13     7 (average)
  1391                           ; direct_byte           20     8 (fixed)
  1392                           ; jumptable            260     6 (fixed)
  1393                           ;	Chosen strategy is simple_byte
  1394  01B3  0861               	movf	main@i^(0+384),w
  1395  01B4  3A00               	xorlw	0	; case 0
  1396  01B5  1903               	skipnz
  1397  01B6  2890               	goto	l3314
  1398  01B7  3A01               	xorlw	1	; case 1
  1399  01B8  1903               	skipnz
  1400  01B9  28D7               	goto	l3316
  1401  01BA  3A03               	xorlw	3	; case 2
  1402  01BB  1903               	skipnz
  1403  01BC  291E               	goto	l3318
  1404  01BD  3A01               	xorlw	1	; case 3
  1405  01BE  1903               	skipnz
  1406  01BF  2965               	goto	l3320
  1407  01C0  29C1               	goto	l3326
  1408  01C1                     l3326:	
  1409                           
  1410                           ;main.c: 185:                 }
  1411  01C1  3001               	movlw	1
  1412  01C2  1683               	bsf	3,5	;RP0=1, select bank3
  1413  01C3  1703               	bsf	3,6	;RP1=1, select bank3
  1414  01C4  07E1               	addwf	main@i^(0+384),f
  1415  01C5  1803               	skipnc
  1416  01C6  0AE2               	incf	(main@i+1)^(0+384),f
  1417  01C7  3000               	movlw	0
  1418  01C8  07E2               	addwf	(main@i+1)^(0+384),f
  1419  01C9                     l3328:	
  1420  01C9  0862               	movf	(main@i+1)^(0+384),w
  1421  01CA  3A80               	xorlw	128
  1422  01CB  00FF               	movwf	btemp+1
  1423  01CC  3080               	movlw	128
  1424  01CD  027F               	subwf	btemp+1,w
  1425  01CE  1D03               	skipz
  1426  01CF  29D2               	goto	u2735
  1427  01D0  3004               	movlw	4
  1428  01D1  0261               	subwf	main@i^(0+384),w
  1429  01D2                     u2735:	
  1430  01D2  1C03               	skipc
  1431  01D3  29D5               	goto	u2731
  1432  01D4  29D6               	goto	u2730
  1433  01D5                     u2731:	
  1434  01D5  29AC               	goto	l3324
  1435  01D6                     u2730:	
  1436  01D6                     l3330:	
  1437                           
  1438                           ;main.c: 187:                 for (int i = 0; i < 4; i++)
  1439  01D6  1683               	bsf	3,5	;RP0=1, select bank3
  1440  01D7  1703               	bsf	3,6	;RP1=1, select bank3
  1441  01D8  01DD               	clrf	main@i_492^(0+384)
  1442  01D9  01DE               	clrf	(main@i_492+1)^(0+384)
  1443  01DA                     l3336:	
  1444                           
  1445                           ;main.c: 188:                 {;main.c: 189:                     motorcycle[i] = 0;
  1446  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  1447  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  1448  01DC  085D               	movf	main@i_492^(0+384),w
  1449  01DD  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1450  01DE  0084               	movwf	4
  1451  01DF  1383               	bcf	3,7	;select IRP bank0
  1452  01E0  0180               	clrf	0
  1453                           
  1454                           ;main.c: 190:                     car[i] = 0;
  1455  01E1  085D               	movf	main@i_492^(0+384),w
  1456  01E2  3E5A               	addlw	(low (_car| 0))& (0+255)
  1457  01E3  0084               	movwf	4
  1458  01E4  0180               	clrf	0
  1459                           
  1460                           ;main.c: 191:                     truck[i] = 0;
  1461  01E5  085D               	movf	main@i_492^(0+384),w
  1462  01E6  3E56               	addlw	(low (_truck| 0))& (0+255)
  1463  01E7  0084               	movwf	4
  1464  01E8  0180               	clrf	0
  1465  01E9                     l3338:	
  1466                           
  1467                           ;main.c: 192:                 }
  1468  01E9  3001               	movlw	1
  1469  01EA  07DD               	addwf	main@i_492^(0+384),f
  1470  01EB  1803               	skipnc
  1471  01EC  0ADE               	incf	(main@i_492+1)^(0+384),f
  1472  01ED  3000               	movlw	0
  1473  01EE  07DE               	addwf	(main@i_492+1)^(0+384),f
  1474  01EF                     l3340:	
  1475  01EF  085E               	movf	(main@i_492+1)^(0+384),w
  1476  01F0  3A80               	xorlw	128
  1477  01F1  00FF               	movwf	btemp+1
  1478  01F2  3080               	movlw	128
  1479  01F3  027F               	subwf	btemp+1,w
  1480  01F4  1D03               	skipz
  1481  01F5  29F8               	goto	u2745
  1482  01F6  3004               	movlw	4
  1483  01F7  025D               	subwf	main@i_492^(0+384),w
  1484  01F8                     u2745:	
  1485  01F8  1C03               	skipc
  1486  01F9  29FB               	goto	u2741
  1487  01FA  29FC               	goto	u2740
  1488  01FB                     u2741:	
  1489  01FB  29DA               	goto	l3336
  1490  01FC                     u2740:	
  1491  01FC                     l3342:	
  1492                           
  1493                           ;main.c: 194:                 for (unsigned char i = 0; i < 5; i++)
  1494  01FC  1683               	bsf	3,5	;RP0=1, select bank3
  1495  01FD  1703               	bsf	3,6	;RP1=1, select bank3
  1496  01FE  01DB               	clrf	main@i_493^(0+384)
  1497  01FF                     l3348:	
  1498                           
  1499                           ;main.c: 195:                 {;main.c: 196:                     dataFromGateway[i] = 0;
  1500  01FF  085B               	movf	main@i_493^(0+384),w
  1501  0200  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1502  0201  0084               	movwf	4
  1503  0202  1383               	bcf	3,7	;select IRP bank1
  1504  0203  0180               	clrf	0
  1505  0204                     l3350:	
  1506                           
  1507                           ;main.c: 197:                 }
  1508  0204  3001               	movlw	1
  1509  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0207  00C0               	movwf	??_main
  1512  0208  0840               	movf	??_main,w
  1513  0209  1683               	bsf	3,5	;RP0=1, select bank3
  1514  020A  1703               	bsf	3,6	;RP1=1, select bank3
  1515  020B  07DB               	addwf	main@i_493^(0+384),f
  1516  020C                     l3352:	
  1517  020C  3005               	movlw	5
  1518  020D  025B               	subwf	main@i_493^(0+384),w
  1519  020E  1C03               	skipc
  1520  020F  2A11               	goto	u2751
  1521  0210  2A12               	goto	u2750
  1522  0211                     u2751:	
  1523  0211  29FF               	goto	l3348
  1524  0212                     u2750:	
  1525  0212  2B1C               	goto	l238
  1526  0213                     l254:	
  1527                           ;main.c: 199:             case 0x0A:
  1528                           
  1529                           
  1530                           ;main.c: 200:                 readGatewayDone.Bit = 1;
  1531  0213  1455               	bsf	_readGatewayDone,0
  1532                           
  1533                           ;main.c: 201:                 readGateway.Bit = 0;
  1534  0214  1054               	bcf	_readGateway,0
  1535  0215                     l3354:	
  1536                           
  1537                           ;main.c: 203:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1538  0215  3000               	movlw	0
  1539  0216  120A  158A  2413  120A  118A  	fcall	_ADC_Read
  1540  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1541  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1542  021D  0824               	movf	?_ADC_Read,w
  1543  021E  00C0               	movwf	??_main
  1544  021F  0825               	movf	?_ADC_Read+1,w
  1545  0220  00C1               	movwf	??_main+1
  1546  0221  0D41               	rlf	??_main+1,w
  1547  0222  0CC1               	rrf	??_main+1,f
  1548  0223  0CC0               	rrf	??_main,f
  1549  0224  0D41               	rlf	??_main+1,w
  1550  0225  0CC1               	rrf	??_main+1,f
  1551  0226  0CC0               	rrf	??_main,f
  1552  0227  0840               	movf	??_main,w
  1553  0228  00B4               	movwf	map@x
  1554  0229  0841               	movf	??_main+1,w
  1555  022A  00B5               	movwf	map@x+1
  1556  022B  3000               	movlw	0
  1557  022C  00B6               	movwf	map@in_min
  1558  022D  00B7               	movwf	map@in_min+1
  1559  022E  30FF               	movlw	255
  1560  022F  00B8               	movwf	map@in_max
  1561  0230  3000               	movlw	0
  1562  0231  00B9               	movwf	map@in_max+1
  1563  0232  30EC               	movlw	236
  1564  0233  00BA               	movwf	map@out_min
  1565  0234  30FF               	movlw	255
  1566  0235  00BB               	movwf	map@out_min+1
  1567  0236  303C               	movlw	60
  1568  0237  00BC               	movwf	map@out_max
  1569  0238  3000               	movlw	0
  1570  0239  00BD               	movwf	map@out_max+1
  1571  023A  120A  118A  27C9  120A  118A  	fcall	_map
  1572  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0241  0834               	movf	?_map,w
  1575  0242  00C2               	movwf	??_main+2
  1576  0243  0842               	movf	??_main+2,w
  1577  0244  1683               	bsf	3,5	;RP0=1, select bank3
  1578  0245  1703               	bsf	3,6	;RP1=1, select bank3
  1579  0246  00D6               	movwf	main@temp^(0+384)
  1580                           
  1581                           ;main.c: 204:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1582  0247  3001               	movlw	1
  1583  0248  120A  158A  2413  120A  118A  	fcall	_ADC_Read
  1584  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1585  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1586  024F  0824               	movf	?_ADC_Read,w
  1587  0250  00C0               	movwf	??_main
  1588  0251  0825               	movf	?_ADC_Read+1,w
  1589  0252  00C1               	movwf	??_main+1
  1590  0253  0D41               	rlf	??_main+1,w
  1591  0254  0CC1               	rrf	??_main+1,f
  1592  0255  0CC0               	rrf	??_main,f
  1593  0256  0D41               	rlf	??_main+1,w
  1594  0257  0CC1               	rrf	??_main+1,f
  1595  0258  0CC0               	rrf	??_main,f
  1596  0259  0840               	movf	??_main,w
  1597  025A  00B4               	movwf	map@x
  1598  025B  0841               	movf	??_main+1,w
  1599  025C  00B5               	movwf	map@x+1
  1600  025D  3000               	movlw	0
  1601  025E  00B6               	movwf	map@in_min
  1602  025F  00B7               	movwf	map@in_min+1
  1603  0260  30FF               	movlw	255
  1604  0261  00B8               	movwf	map@in_max
  1605  0262  3000               	movlw	0
  1606  0263  00B9               	movwf	map@in_max+1
  1607  0264  3000               	movlw	0
  1608  0265  00BA               	movwf	map@out_min
  1609  0266  00BB               	movwf	map@out_min+1
  1610  0267  3064               	movlw	100
  1611  0268  00BC               	movwf	map@out_max
  1612  0269  3000               	movlw	0
  1613  026A  00BD               	movwf	map@out_max+1
  1614  026B  120A  118A  27C9  120A  118A  	fcall	_map
  1615  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0272  0834               	movf	?_map,w
  1618  0273  00C2               	movwf	??_main+2
  1619  0274  0842               	movf	??_main+2,w
  1620  0275  1683               	bsf	3,5	;RP0=1, select bank3
  1621  0276  1703               	bsf	3,6	;RP1=1, select bank3
  1622  0277  00D7               	movwf	main@umidita^(0+384)
  1623                           
  1624                           ;main.c: 205:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1625  0278  3005               	movlw	5
  1626  0279  120A  158A  2413  120A  118A  	fcall	_ADC_Read
  1627  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1628  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0280  0824               	movf	?_ADC_Read,w
  1630  0281  00C0               	movwf	??_main
  1631  0282  0825               	movf	?_ADC_Read+1,w
  1632  0283  00C1               	movwf	??_main+1
  1633  0284  0D41               	rlf	??_main+1,w
  1634  0285  0CC1               	rrf	??_main+1,f
  1635  0286  0CC0               	rrf	??_main,f
  1636  0287  0D41               	rlf	??_main+1,w
  1637  0288  0CC1               	rrf	??_main+1,f
  1638  0289  0CC0               	rrf	??_main,f
  1639  028A  0840               	movf	??_main,w
  1640  028B  00B4               	movwf	map@x
  1641  028C  0841               	movf	??_main+1,w
  1642  028D  00B5               	movwf	map@x+1
  1643  028E  3000               	movlw	0
  1644  028F  00B6               	movwf	map@in_min
  1645  0290  00B7               	movwf	map@in_min+1
  1646  0291  30FF               	movlw	255
  1647  0292  00B8               	movwf	map@in_max
  1648  0293  3000               	movlw	0
  1649  0294  00B9               	movwf	map@in_max+1
  1650  0295  3000               	movlw	0
  1651  0296  00BA               	movwf	map@out_min
  1652  0297  00BB               	movwf	map@out_min+1
  1653  0298  3064               	movlw	100
  1654  0299  00BC               	movwf	map@out_max
  1655  029A  3000               	movlw	0
  1656  029B  00BD               	movwf	map@out_max+1
  1657  029C  120A  118A  27C9  120A  118A  	fcall	_map
  1658  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1659  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1660  02A3  0834               	movf	?_map,w
  1661  02A4  00C2               	movwf	??_main+2
  1662  02A5  0842               	movf	??_main+2,w
  1663  02A6  1683               	bsf	3,5	;RP0=1, select bank3
  1664  02A7  1703               	bsf	3,6	;RP1=1, select bank3
  1665  02A8  00D8               	movwf	main@pressione^(0+384)
  1666  02A9                     l3356:	
  1667                           
  1668                           ;main.c: 206:                 sendByte(0x02, 0x00, temp);
  1669  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1670  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1671  02AB  01B8               	clrf	sendByte@byte1
  1672  02AC  1683               	bsf	3,5	;RP0=1, select bank3
  1673  02AD  1703               	bsf	3,6	;RP1=1, select bank3
  1674  02AE  0856               	movf	main@temp^(0+384),w
  1675  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1676  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1677  02B1  00C0               	movwf	??_main
  1678  02B2  0840               	movf	??_main,w
  1679  02B3  00B9               	movwf	sendByte@valore
  1680  02B4  3002               	movlw	2
  1681  02B5  120A  158A  2460  120A  118A  	fcall	_sendByte
  1682  02BA                     l3358:	
  1683                           
  1684                           ;main.c: 207:                 sendByte(0x04, 0x00, umidita);
  1685  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1686  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1687  02BC  01B8               	clrf	sendByte@byte1
  1688  02BD  1683               	bsf	3,5	;RP0=1, select bank3
  1689  02BE  1703               	bsf	3,6	;RP1=1, select bank3
  1690  02BF  0857               	movf	main@umidita^(0+384),w
  1691  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1692  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1693  02C2  00C0               	movwf	??_main
  1694  02C3  0840               	movf	??_main,w
  1695  02C4  00B9               	movwf	sendByte@valore
  1696  02C5  3004               	movlw	4
  1697  02C6  120A  158A  2460  120A  118A  	fcall	_sendByte
  1698  02CB                     l3360:	
  1699                           
  1700                           ;main.c: 208:                 sendByte(0x06, 0x00, pressione);
  1701  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1702  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1703  02CD  01B8               	clrf	sendByte@byte1
  1704  02CE  1683               	bsf	3,5	;RP0=1, select bank3
  1705  02CF  1703               	bsf	3,6	;RP1=1, select bank3
  1706  02D0  0858               	movf	main@pressione^(0+384),w
  1707  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1708  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1709  02D3  00C0               	movwf	??_main
  1710  02D4  0840               	movf	??_main,w
  1711  02D5  00B9               	movwf	sendByte@valore
  1712  02D6  3006               	movlw	6
  1713  02D7  120A  158A  2460  120A  118A  	fcall	_sendByte
  1714  02DC                     l3362:	
  1715                           
  1716                           ;main.c: 210:                 for (unsigned char i = 0; i < 5; i++)
  1717  02DC  1683               	bsf	3,5	;RP0=1, select bank3
  1718  02DD  1703               	bsf	3,6	;RP1=1, select bank3
  1719  02DE  01DC               	clrf	main@i_495^(0+384)
  1720  02DF                     l3364:	
  1721  02DF  3005               	movlw	5
  1722  02E0  025C               	subwf	main@i_495^(0+384),w
  1723  02E1  1C03               	skipc
  1724  02E2  2AE4               	goto	u2761
  1725  02E3  2AE5               	goto	u2760
  1726  02E4                     u2761:	
  1727  02E4  2AE6               	goto	l3368
  1728  02E5                     u2760:	
  1729  02E5  2B1C               	goto	l238
  1730  02E6                     l3368:	
  1731                           
  1732                           ;main.c: 211:                 {;main.c: 212:                     dataFromGateway[i] = 0;
  1733  02E6  085C               	movf	main@i_495^(0+384),w
  1734  02E7  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1735  02E8  0084               	movwf	4
  1736  02E9  1383               	bcf	3,7	;select IRP bank1
  1737  02EA  0180               	clrf	0
  1738  02EB                     l3370:	
  1739                           
  1740                           ;main.c: 213:                 }
  1741  02EB  3001               	movlw	1
  1742  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1743  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1744  02EE  00C0               	movwf	??_main
  1745  02EF  0840               	movf	??_main,w
  1746  02F0  1683               	bsf	3,5	;RP0=1, select bank3
  1747  02F1  1703               	bsf	3,6	;RP1=1, select bank3
  1748  02F2  07DC               	addwf	main@i_495^(0+384),f
  1749  02F3  2ADF               	goto	l3364
  1750  02F4                     l3374:	
  1751                           
  1752                           ;main.c: 217:                 if (timerReadFromGateway >= 4)
  1753  02F4  3004               	movlw	4
  1754  02F5  024C               	subwf	_timerReadFromGateway,w
  1755  02F6  1C03               	skipc
  1756  02F7  2AF9               	goto	u2771
  1757  02F8  2AFA               	goto	u2770
  1758  02F9                     u2771:	
  1759  02F9  2AFD               	goto	l3378
  1760  02FA                     u2770:	
  1761  02FA                     l3376:	
  1762                           
  1763                           ;main.c: 218:                 {;main.c: 219:                     readGatewayDone.Bit = 1
      +                          ;
  1764  02FA  1455               	bsf	_readGatewayDone,0
  1765                           
  1766                           ;main.c: 220:                     readGatewayDone.Timeout = 1;
  1767  02FB  14D5               	bsf	_readGatewayDone,1
  1768                           
  1769                           ;main.c: 221:                     readGateway.Bit = 0;
  1770  02FC  1054               	bcf	_readGateway,0
  1771  02FD                     l3378:	
  1772                           
  1773                           ;main.c: 224:                 if (dataFromGatewayIndex >= 15)
  1774  02FD  300F               	movlw	15
  1775  02FE  024D               	subwf	_dataFromGatewayIndex,w
  1776  02FF  1C03               	skipc
  1777  0300  2B02               	goto	u2781
  1778  0301  2B03               	goto	u2780
  1779  0302                     u2781:	
  1780  0302  2B1C               	goto	l238
  1781  0303                     u2780:	
  1782  0303                     l3380:	
  1783                           
  1784                           ;main.c: 225:                 {;main.c: 226:                     readGatewayDone.Bit = 1
      +                          ;
  1785  0303  1455               	bsf	_readGatewayDone,0
  1786                           
  1787                           ;main.c: 227:                     readGatewayDone.Timeout = 0;
  1788  0304  10D5               	bcf	_readGatewayDone,1
  1789                           
  1790                           ;main.c: 228:                     readGateway.Bit = 0;
  1791  0305  1054               	bcf	_readGateway,0
  1792  0306  2B1C               	goto	l238
  1793  0307                     l3384:	
  1794  0307  1683               	bsf	3,5	;RP0=1, select bank1
  1795  0308  1303               	bcf	3,6	;RP1=0, select bank1
  1796  0309  0824               	movf	_dataFromGateway^(0+128),w
  1797  030A  397F               	andlw	127
  1798  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1799  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1800  030D  00C0               	movwf	??_main
  1801  030E  01C1               	clrf	??_main+1
  1802                           
  1803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1804                           ; Switch size 1, requested type "simple"
  1805                           ; Number of cases is 1, Range of values is 0 to 0
  1806                           ; switch strategies available:
  1807                           ; Name         Instructions Cycles
  1808                           ; simple_byte            4     3 (average)
  1809                           ; direct_byte           11     8 (fixed)
  1810                           ; jumptable            260     6 (fixed)
  1811                           ;	Chosen strategy is simple_byte
  1812  030F  0841               	movf	??_main+1,w
  1813  0310  3A00               	xorlw	0	; case 0
  1814  0311  1903               	skipnz
  1815  0312  2B14               	goto	l3690
  1816  0313  2AF4               	goto	l3374
  1817  0314                     l3690:	
  1818                           
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 2, Range of values is 8 to 10
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte            7     4 (average)
  1824                           ; direct_byte           20    11 (fixed)
  1825                           ; jumptable            263     9 (fixed)
  1826                           ;	Chosen strategy is simple_byte
  1827  0314  0840               	movf	??_main,w
  1828  0315  3A08               	xorlw	8	; case 8
  1829  0316  1903               	skipnz
  1830  0317  2889               	goto	l240
  1831  0318  3A02               	xorlw	2	; case 10
  1832  0319  1903               	skipnz
  1833  031A  2A13               	goto	l254
  1834  031B  2AF4               	goto	l3374
  1835  031C                     l238:	
  1836                           ;main.c: 232:         }
  1837                           
  1838                           
  1839                           ;main.c: 235:         if (readGatewayDone.Bit)
  1840  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1841  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1842  031E  1C55               	btfss	_readGatewayDone,0
  1843  031F  2B21               	goto	u2791
  1844  0320  2B22               	goto	u2790
  1845  0321                     u2791:	
  1846  0321  2B36               	goto	l3398
  1847  0322                     u2790:	
  1848  0322                     l3386:	
  1849                           
  1850                           ;main.c: 236:         {;main.c: 238:             readGateway.Bit = 0;
  1851  0322  1054               	bcf	_readGateway,0
  1852  0323                     l3388:	
  1853                           
  1854                           ;main.c: 239:             dataFromGatewayIndex = 0;
  1855  0323  01CD               	clrf	_dataFromGatewayIndex
  1856  0324                     l3390:	
  1857                           
  1858                           ;main.c: 240:             readGatewayDone.Bit = 0;
  1859  0324  1055               	bcf	_readGatewayDone,0
  1860                           
  1861                           ;main.c: 241:             timerReadFromGateway = 0;
  1862  0325  01CC               	clrf	_timerReadFromGateway
  1863  0326                     l3392:	
  1864                           
  1865                           ;main.c: 244:             if (readGatewayDone.Timeout)
  1866  0326  1CD5               	btfss	_readGatewayDone,1
  1867  0327  2B29               	goto	u2801
  1868  0328  2B2A               	goto	u2800
  1869  0329                     u2801:	
  1870  0329  2B2C               	goto	l3396
  1871  032A                     u2800:	
  1872  032A                     l3394:	
  1873                           
  1874                           ;main.c: 245:             {;main.c: 246:                 readGatewayDone.Timeout = 0;
  1875  032A  10D5               	bcf	_readGatewayDone,1
  1876                           
  1877                           ;main.c: 247:             }
  1878  032B  2B36               	goto	l3398
  1879  032C                     l3396:	
  1880                           
  1881                           ;main.c: 250:             {;main.c: 252:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1882  032C  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1883  032D  00C0               	movwf	??_main
  1884  032E  0840               	movf	??_main,w
  1885  032F  00AC               	movwf	SetReceivedTimes@_semafori
  1886  0330  30A4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1887  0331  120A  158A  2792  120A  118A  	fcall	_SetReceivedTimes
  1888  0336                     l3398:	
  1889                           
  1890                           ;main.c: 259:         if (secondPassed.Bit && cycled.Bit)
  1891  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0338  1C53               	btfss	_secondPassed,0
  1894  0339  2B3B               	goto	u2811
  1895  033A  2B3C               	goto	u2810
  1896  033B                     u2811:	
  1897  033B  2C46               	goto	l3432
  1898  033C                     u2810:	
  1899  033C                     l3400:	
  1900  033C  1C52               	btfss	_cycled,0
  1901  033D  2B3F               	goto	u2821
  1902  033E  2B40               	goto	u2820
  1903  033F                     u2821:	
  1904  033F  2C46               	goto	l3432
  1905  0340                     u2820:	
  1906  0340                     l3402:	
  1907                           
  1908                           ;main.c: 260:         {;main.c: 261:             time++;
  1909  0340  3001               	movlw	1
  1910  0341  1683               	bsf	3,5	;RP0=1, select bank3
  1911  0342  1703               	bsf	3,6	;RP1=1, select bank3
  1912  0343  07D9               	addwf	main@time^(0+384),f
  1913  0344  1803               	skipnc
  1914  0345  0ADA               	incf	(main@time+1)^(0+384),f
  1915  0346  3000               	movlw	0
  1916  0347  07DA               	addwf	(main@time+1)^(0+384),f
  1917  0348                     l3404:	
  1918                           
  1919                           ;main.c: 263:             unsigned char i=0;
  1920  0348  01E0               	clrf	main@i_497^(0+384)
  1921                           
  1922                           ;main.c: 264:             while(i<2)
  1923  0349  2C40               	goto	l3430
  1924  034A                     l3406:	
  1925                           
  1926                           ;main.c: 265:             {;main.c: 266:                 if( (*Semafori[i]).times[0]==0 
      +                          )
  1927  034A  0860               	movf	main@i_497^(0+384),w
  1928  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1929  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1930  034D  00C0               	movwf	??_main
  1931  034E  0740               	addwf	??_main,w
  1932  034F  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1933  0350  0084               	movwf	4
  1934  0351  1383               	bcf	3,7	;select IRP bank1
  1935  0352  0800               	movf	0,w
  1936  0353  00C1               	movwf	??_main+1
  1937  0354  0A84               	incf	4,f
  1938  0355  0800               	movf	0,w
  1939  0356  00C2               	movwf	??_main+2
  1940  0357  0841               	movf	??_main+1,w
  1941  0358  0084               	movwf	4
  1942  0359  1783               	bsf	3,7
  1943  035A  1C42               	btfss	??_main+2,0
  1944  035B  1383               	bcf	3,7
  1945  035C  0800               	movf	0,w
  1946  035D  00C3               	movwf	??_main+3
  1947  035E  0A84               	incf	4,f
  1948  035F  0800               	movf	0,w
  1949  0360  00C4               	movwf	??_main+4
  1950  0361  0843               	movf	??_main+3,w
  1951  0362  0444               	iorwf	??_main+4,w
  1952  0363  1D03               	btfss	3,2
  1953  0364  2B66               	goto	u2831
  1954  0365  2B67               	goto	u2830
  1955  0366                     u2831:	
  1956  0366  2B70               	goto	l3410
  1957  0367                     u2830:	
  1958  0367                     l3408:	
  1959                           
  1960                           ;main.c: 267:                 {;main.c: 268:                     i++;
  1961  0367  3001               	movlw	1
  1962  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1964  036A  00C0               	movwf	??_main
  1965  036B  0840               	movf	??_main,w
  1966  036C  1683               	bsf	3,5	;RP0=1, select bank3
  1967  036D  1703               	bsf	3,6	;RP1=1, select bank3
  1968  036E  07E0               	addwf	main@i_497^(0+384),f
  1969                           
  1970                           ;main.c: 269:                 }
  1971  036F  2C40               	goto	l3430
  1972  0370                     l3410:	
  1973                           
  1974                           ;main.c: 271:                 {;main.c: 272:                     unsigned char lux_selec
      +                          t=(*Semafori[i]).lux_select;
  1975  0370  1683               	bsf	3,5	;RP0=1, select bank3
  1976  0371  1703               	bsf	3,6	;RP1=1, select bank3
  1977  0372  0860               	movf	main@i_497^(0+384),w
  1978  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0375  00C0               	movwf	??_main
  1981  0376  0740               	addwf	??_main,w
  1982  0377  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1983  0378  0084               	movwf	4
  1984  0379  1383               	bcf	3,7	;select IRP bank1
  1985  037A  0800               	movf	0,w
  1986  037B  00C1               	movwf	??_main+1
  1987  037C  0A84               	incf	4,f
  1988  037D  0800               	movf	0,w
  1989  037E  00C2               	movwf	??_main+2
  1990  037F  0841               	movf	??_main+1,w
  1991  0380  3E0C               	addlw	12
  1992  0381  00C3               	movwf	??_main+3
  1993  0382  0842               	movf	??_main+2,w
  1994  0383  1803               	skipnc
  1995  0384  3E01               	addlw	1
  1996  0385  3E00               	addlw	0
  1997  0386  00C4               	movwf	??_main+4
  1998  0387  0843               	movf	??_main+3,w
  1999  0388  0084               	movwf	4
  2000  0389  1783               	bsf	3,7
  2001  038A  1C44               	btfss	??_main+4,0
  2002  038B  1383               	bcf	3,7
  2003  038C  0800               	movf	0,w
  2004  038D  00C5               	movwf	??_main+5
  2005  038E  0845               	movf	??_main+5,w
  2006  038F  1683               	bsf	3,5	;RP0=1, select bank3
  2007  0390  1703               	bsf	3,6	;RP1=1, select bank3
  2008  0391  00DF               	movwf	main@lux_select^(0+384)
  2009                           
  2010                           ;main.c: 273:                     if ((*Semafori[i]).times[lux_select] - time < 0)
  2011  0392  0860               	movf	main@i_497^(0+384),w
  2012  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0395  00C0               	movwf	??_main
  2015  0396  0740               	addwf	??_main,w
  2016  0397  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2017  0398  0084               	movwf	4
  2018  0399  1383               	bcf	3,7	;select IRP bank1
  2019  039A  0800               	movf	0,w
  2020  039B  00C1               	movwf	??_main+1
  2021  039C  0A84               	incf	4,f
  2022  039D  0800               	movf	0,w
  2023  039E  00C2               	movwf	??_main+2
  2024  039F  1683               	bsf	3,5	;RP0=1, select bank3
  2025  03A0  1703               	bsf	3,6	;RP1=1, select bank3
  2026  03A1  085F               	movf	main@lux_select^(0+384),w
  2027  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2028  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2029  03A4  00C3               	movwf	??_main+3
  2030  03A5  0743               	addwf	??_main+3,w
  2031  03A6  0741               	addwf	??_main+1,w
  2032  03A7  00C4               	movwf	??_main+4
  2033  03A8  0842               	movf	??_main+2,w
  2034  03A9  1803               	skipnc
  2035  03AA  3E01               	addlw	1
  2036  03AB  00C5               	movwf	??_main+5
  2037  03AC  0844               	movf	??_main+4,w
  2038  03AD  0084               	movwf	4
  2039  03AE  1783               	bsf	3,7
  2040  03AF  1C45               	btfss	??_main+5,0
  2041  03B0  1383               	bcf	3,7
  2042  03B1  0800               	movf	0,w
  2043  03B2  00C6               	movwf	??_main+6
  2044  03B3  0A84               	incf	4,f
  2045  03B4  0800               	movf	0,w
  2046  03B5  00C7               	movwf	??_main+7
  2047  03B6  1683               	bsf	3,5	;RP0=1, select bank3
  2048  03B7  1703               	bsf	3,6	;RP1=1, select bank3
  2049  03B8  0859               	movf	main@time^(0+384),w
  2050  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2051  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2052  03BB  0246               	subwf	??_main+6,w
  2053  03BC  00C8               	movwf	??_main+8
  2054  03BD  1683               	bsf	3,5	;RP0=1, select bank3
  2055  03BE  1703               	bsf	3,6	;RP1=1, select bank3
  2056  03BF  085A               	movf	(main@time+1)^(0+384),w
  2057  03C0  1C03               	skipc
  2058  03C1  0A5A               	incf	(main@time+1)^(0+384),w
  2059  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2060  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2061  03C4  0247               	subwf	??_main+7,w
  2062  03C5  00C9               	movwf	??_main+9
  2063  03C6  1FC9               	btfss	??_main+9,7
  2064  03C7  2BC9               	goto	u2841
  2065  03C8  2BCA               	goto	u2840
  2066  03C9                     u2841:	
  2067  03C9  2C0B               	goto	l3426
  2068  03CA                     u2840:	
  2069  03CA                     l3412:	
  2070                           
  2071                           ;main.c: 274:                     {;main.c: 275:                         lux_select++;
  2072  03CA  3001               	movlw	1
  2073  03CB  00C0               	movwf	??_main
  2074  03CC  0840               	movf	??_main,w
  2075  03CD  1683               	bsf	3,5	;RP0=1, select bank3
  2076  03CE  1703               	bsf	3,6	;RP1=1, select bank3
  2077  03CF  07DF               	addwf	main@lux_select^(0+384),f
  2078  03D0                     l3414:	
  2079                           
  2080                           ;main.c: 276:                         time=1;
  2081  03D0  3001               	movlw	1
  2082  03D1  00D9               	movwf	main@time^(0+384)
  2083  03D2  3000               	movlw	0
  2084  03D3  00DA               	movwf	(main@time^(0+384)+1)
  2085  03D4                     l3416:	
  2086                           
  2087                           ;main.c: 277:                         if (lux_select >= 3)
  2088  03D4  3003               	movlw	3
  2089  03D5  025F               	subwf	main@lux_select^(0+384),w
  2090  03D6  1C03               	skipc
  2091  03D7  2BD9               	goto	u2851
  2092  03D8  2BDA               	goto	u2850
  2093  03D9                     u2851:	
  2094  03D9  2BE7               	goto	l3424
  2095  03DA                     u2850:	
  2096  03DA                     l3418:	
  2097                           
  2098                           ;main.c: 278:                         {;main.c: 279:                             lux_sel
      +                          ect=0;
  2099  03DA  01DF               	clrf	main@lux_select^(0+384)
  2100  03DB                     l3420:	
  2101  03DB  3007               	movlw	7
  2102  03DC  0660               	xorwf	main@i_497^(0+384),w
  2103  03DD  1D03               	btfss	3,2
  2104  03DE  2BE0               	goto	u2861
  2105  03DF  2BE1               	goto	u2860
  2106  03E0                     u2861:	
  2107  03E0  2BE7               	goto	l3424
  2108  03E1                     u2860:	
  2109  03E1                     l3422:	
  2110                           
  2111                           ;main.c: 281:                             {;main.c: 283:                                
      +                           UpdateTimes(Semafori);
  2112  03E1  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  2113  03E2  120A  158A  2669  120A  118A  	fcall	_UpdateTimes
  2114  03E7                     l3424:	
  2115                           
  2116                           ;main.c: 287:                         (*Semafori[i]).lux_select=lux_select;
  2117  03E7  1683               	bsf	3,5	;RP0=1, select bank3
  2118  03E8  1703               	bsf	3,6	;RP1=1, select bank3
  2119  03E9  085F               	movf	main@lux_select^(0+384),w
  2120  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2121  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2122  03EC  00C0               	movwf	??_main
  2123  03ED  1683               	bsf	3,5	;RP0=1, select bank3
  2124  03EE  1703               	bsf	3,6	;RP1=1, select bank3
  2125  03EF  0860               	movf	main@i_497^(0+384),w
  2126  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2127  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2128  03F2  00C1               	movwf	??_main+1
  2129  03F3  0741               	addwf	??_main+1,w
  2130  03F4  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2131  03F5  0084               	movwf	4
  2132  03F6  1383               	bcf	3,7	;select IRP bank1
  2133  03F7  0800               	movf	0,w
  2134  03F8  00C2               	movwf	??_main+2
  2135  03F9  0A84               	incf	4,f
  2136  03FA  0800               	movf	0,w
  2137  03FB  00C3               	movwf	??_main+3
  2138  03FC  0842               	movf	??_main+2,w
  2139  03FD  3E0C               	addlw	12
  2140  03FE  00C4               	movwf	??_main+4
  2141  03FF  0843               	movf	??_main+3,w
  2142  0400  1803               	skipnc
  2143  0401  3E01               	addlw	1
  2144  0402  3E00               	addlw	0
  2145  0403  00C5               	movwf	??_main+5
  2146  0404  0844               	movf	??_main+4,w
  2147  0405  0084               	movwf	4
  2148  0406  1783               	bsf	3,7
  2149  0407  1C45               	btfss	??_main+5,0
  2150  0408  1383               	bcf	3,7
  2151  0409  0840               	movf	??_main,w
  2152  040A  0080               	movwf	0
  2153  040B                     l3426:	
  2154                           
  2155                           ;main.c: 290:                     (*Semafori[i]).lux_select=lux_select;
  2156  040B  1683               	bsf	3,5	;RP0=1, select bank3
  2157  040C  1703               	bsf	3,6	;RP1=1, select bank3
  2158  040D  085F               	movf	main@lux_select^(0+384),w
  2159  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2160  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0410  00C0               	movwf	??_main
  2162  0411  1683               	bsf	3,5	;RP0=1, select bank3
  2163  0412  1703               	bsf	3,6	;RP1=1, select bank3
  2164  0413  0860               	movf	main@i_497^(0+384),w
  2165  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0416  00C1               	movwf	??_main+1
  2168  0417  0741               	addwf	??_main+1,w
  2169  0418  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2170  0419  0084               	movwf	4
  2171  041A  1383               	bcf	3,7	;select IRP bank1
  2172  041B  0800               	movf	0,w
  2173  041C  00C2               	movwf	??_main+2
  2174  041D  0A84               	incf	4,f
  2175  041E  0800               	movf	0,w
  2176  041F  00C3               	movwf	??_main+3
  2177  0420  0842               	movf	??_main+2,w
  2178  0421  3E0C               	addlw	12
  2179  0422  00C4               	movwf	??_main+4
  2180  0423  0843               	movf	??_main+3,w
  2181  0424  1803               	skipnc
  2182  0425  3E01               	addlw	1
  2183  0426  3E00               	addlw	0
  2184  0427  00C5               	movwf	??_main+5
  2185  0428  0844               	movf	??_main+4,w
  2186  0429  0084               	movwf	4
  2187  042A  1783               	bsf	3,7
  2188  042B  1C45               	btfss	??_main+5,0
  2189  042C  1383               	bcf	3,7
  2190  042D  0840               	movf	??_main,w
  2191  042E  0080               	movwf	0
  2192                           
  2193                           ;main.c: 293:                     luciSemaforo(i, lux_select);
  2194  042F  1683               	bsf	3,5	;RP0=1, select bank3
  2195  0430  1703               	bsf	3,6	;RP1=1, select bank3
  2196  0431  085F               	movf	main@lux_select^(0+384),w
  2197  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0434  00C0               	movwf	??_main
  2200  0435  0840               	movf	??_main,w
  2201  0436  00A4               	movwf	luciSemaforo@lux
  2202  0437  1683               	bsf	3,5	;RP0=1, select bank3
  2203  0438  1703               	bsf	3,6	;RP1=1, select bank3
  2204  0439  0860               	movf	main@i_497^(0+384),w
  2205  043A  120A  158A  25B5  120A  118A  	fcall	_luciSemaforo
  2206  043F  2B67               	goto	l3408
  2207  0440                     l3430:	
  2208                           
  2209                           ;main.c: 264:             while(i<2)
  2210  0440  3002               	movlw	2
  2211  0441  0260               	subwf	main@i_497^(0+384),w
  2212  0442  1C03               	skipc
  2213  0443  2C45               	goto	u2871
  2214  0444  2C46               	goto	u2870
  2215  0445                     u2871:	
  2216  0445  2B4A               	goto	l3406
  2217  0446                     u2870:	
  2218  0446                     l3432:	
  2219                           
  2220                           ;main.c: 302:         GetDigits(&centinaia, &decine, &unita, (*Semafori[0]).times[(*Sema
      +                          fori[0]).lux_select] - time);
  2221  0446  3063               	movlw	(low (_decine| 0))& (0+255)
  2222  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0449  00C0               	movwf	??_main
  2225  044A  0840               	movf	??_main,w
  2226  044B  00B4               	movwf	GetDigits@decine
  2227  044C  3064               	movlw	(low (_unita| 0))& (0+255)
  2228  044D  00C1               	movwf	??_main+1
  2229  044E  0841               	movf	??_main+1,w
  2230  044F  00B5               	movwf	GetDigits@unita
  2231  0450  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0451  1303               	bcf	3,6	;RP1=0, select bank1
  2233  0452  085D               	movf	_Semafori^(0+128),w
  2234  0453  3E0C               	addlw	12
  2235  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0455  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0456  00C2               	movwf	??_main+2
  2238  0457  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0458  1303               	bcf	3,6	;RP1=0, select bank1
  2240  0459  085E               	movf	(_Semafori+1)^(0+128),w
  2241  045A  1803               	skipnc
  2242  045B  3E01               	addlw	1
  2243  045C  3E00               	addlw	0
  2244  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2245  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2246  045F  00C3               	movwf	??_main+3
  2247  0460  0842               	movf	??_main+2,w
  2248  0461  0084               	movwf	4
  2249  0462  1783               	bsf	3,7
  2250  0463  1C43               	btfss	??_main+3,0
  2251  0464  1383               	bcf	3,7
  2252  0465  0800               	movf	0,w
  2253  0466  00C4               	movwf	??_main+4
  2254  0467  0744               	addwf	??_main+4,w
  2255  0468  1683               	bsf	3,5	;RP0=1, select bank1
  2256  0469  1303               	bcf	3,6	;RP1=0, select bank1
  2257  046A  075D               	addwf	_Semafori^(0+128),w
  2258  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2259  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2260  046D  00C5               	movwf	??_main+5
  2261  046E  1683               	bsf	3,5	;RP0=1, select bank1
  2262  046F  1303               	bcf	3,6	;RP1=0, select bank1
  2263  0470  085E               	movf	(_Semafori+1)^(0+128),w
  2264  0471  1803               	skipnc
  2265  0472  3E01               	addlw	1
  2266  0473  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0474  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0475  00C6               	movwf	??_main+6
  2269  0476  0845               	movf	??_main+5,w
  2270  0477  0084               	movwf	4
  2271  0478  1783               	bsf	3,7
  2272  0479  1C46               	btfss	??_main+6,0
  2273  047A  1383               	bcf	3,7
  2274  047B  0800               	movf	0,w
  2275  047C  00C7               	movwf	??_main+7
  2276  047D  0A84               	incf	4,f
  2277  047E  0800               	movf	0,w
  2278  047F  00C8               	movwf	??_main+8
  2279  0480  1683               	bsf	3,5	;RP0=1, select bank3
  2280  0481  1703               	bsf	3,6	;RP1=1, select bank3
  2281  0482  0859               	movf	main@time^(0+384),w
  2282  0483  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0484  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0485  0247               	subwf	??_main+7,w
  2285  0486  00B6               	movwf	GetDigits@Time
  2286  0487  1683               	bsf	3,5	;RP0=1, select bank3
  2287  0488  1703               	bsf	3,6	;RP1=1, select bank3
  2288  0489  085A               	movf	(main@time+1)^(0+384),w
  2289  048A  1C03               	skipc
  2290  048B  0A5A               	incf	(main@time+1)^(0+384),w
  2291  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2292  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2293  048E  0248               	subwf	??_main+8,w
  2294  048F  00B7               	movwf	GetDigits@Time+1
  2295  0490  3062               	movlw	(low (_centinaia| 0))& (0+255)
  2296  0491  120A  118A  269D  120A  118A  	fcall	_GetDigits
  2297                           
  2298                           ;main.c: 305:         switch (disp)
  2299  0496  2CF4               	goto	l3448
  2300  0497                     l3436:	
  2301                           
  2302                           ;main.c: 312:             SetDisplay(1, 0, 0, display[(*Semafori[0]).lux_select]);
  2303  0497  01A4               	clrf	SetDisplay@d2
  2304  0498  01A5               	clrf	SetDisplay@d3
  2305  0499  1683               	bsf	3,5	;RP0=1, select bank1
  2306  049A  1303               	bcf	3,6	;RP1=0, select bank1
  2307  049B  085D               	movf	_Semafori^(0+128),w
  2308  049C  3E0C               	addlw	12
  2309  049D  1283               	bcf	3,5	;RP0=0, select bank0
  2310  049E  1303               	bcf	3,6	;RP1=0, select bank0
  2311  049F  00C0               	movwf	??_main
  2312  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  2313  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  2314  04A2  085E               	movf	(_Semafori+1)^(0+128),w
  2315  04A3  1803               	skipnc
  2316  04A4  3E01               	addlw	1
  2317  04A5  3E00               	addlw	0
  2318  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2319  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2320  04A8  00C1               	movwf	??_main+1
  2321  04A9  0840               	movf	??_main,w
  2322  04AA  0084               	movwf	4
  2323  04AB  1783               	bsf	3,7
  2324  04AC  1C41               	btfss	??_main+1,0
  2325  04AD  1383               	bcf	3,7
  2326  04AE  0800               	movf	0,w
  2327  04AF  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2328  04B0  0084               	movwf	4
  2329  04B1  120A  158A  2000  120A  118A  	fcall	stringdir
  2330  04B6  00C2               	movwf	??_main+2
  2331  04B7  0842               	movf	??_main+2,w
  2332  04B8  00A6               	movwf	SetDisplay@value
  2333  04B9  3001               	movlw	1
  2334  04BA  120A  158A  23E7  120A  118A  	fcall	_SetDisplay
  2335                           
  2336                           ;main.c: 313:             break;
  2337  04BF  2D09               	goto	l3450
  2338  04C0                     l3438:	
  2339                           
  2340                           ;main.c: 315:             if (decine > 0 || centinaia > 0)
  2341  04C0  0863               	movf	_decine,w
  2342  04C1  1D03               	btfss	3,2
  2343  04C2  2CC4               	goto	u2881
  2344  04C3  2CC5               	goto	u2880
  2345  04C4                     u2881:	
  2346  04C4  2CCA               	goto	l3442
  2347  04C5                     u2880:	
  2348  04C5                     l3440:	
  2349  04C5  0862               	movf	_centinaia,w
  2350  04C6  1903               	btfsc	3,2
  2351  04C7  2CC9               	goto	u2891
  2352  04C8  2CCA               	goto	u2890
  2353  04C9                     u2891:	
  2354  04C9  2D09               	goto	l3450
  2355  04CA                     u2890:	
  2356  04CA                     l3442:	
  2357                           
  2358                           ;main.c: 316:             {;main.c: 317:                 SetDisplay(0, 1, 0, display[dec
      +                          ine]);
  2359  04CA  01A4               	clrf	SetDisplay@d2
  2360  04CB  0AA4               	incf	SetDisplay@d2,f
  2361  04CC  01A5               	clrf	SetDisplay@d3
  2362  04CD  0863               	movf	_decine,w
  2363  04CE  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2364  04CF  0084               	movwf	4
  2365  04D0  120A  158A  2000  120A  118A  	fcall	stringdir
  2366  04D5  00C0               	movwf	??_main
  2367  04D6  0840               	movf	??_main,w
  2368  04D7  00A6               	movwf	SetDisplay@value
  2369  04D8  3000               	movlw	0
  2370  04D9  120A  158A  23E7  120A  118A  	fcall	_SetDisplay
  2371  04DE  2D09               	goto	l3450
  2372  04DF                     l3444:	
  2373                           
  2374                           ;main.c: 321:             SetDisplay(0, 0, 1, display[unita]);
  2375  04DF  01A4               	clrf	SetDisplay@d2
  2376  04E0  01A5               	clrf	SetDisplay@d3
  2377  04E1  0AA5               	incf	SetDisplay@d3,f
  2378  04E2  0864               	movf	_unita,w
  2379  04E3  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2380  04E4  0084               	movwf	4
  2381  04E5  120A  158A  2000  120A  118A  	fcall	stringdir
  2382  04EA  00C0               	movwf	??_main
  2383  04EB  0840               	movf	??_main,w
  2384  04EC  00A6               	movwf	SetDisplay@value
  2385  04ED  3000               	movlw	0
  2386  04EE  120A  158A  23E7  120A  118A  	fcall	_SetDisplay
  2387                           
  2388                           ;main.c: 322:             break;
  2389  04F3  2D09               	goto	l3450
  2390  04F4                     l3448:	
  2391  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2392  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2393  04F6  0851               	movf	_disp,w
  2394  04F7  00C0               	movwf	??_main
  2395  04F8  01C1               	clrf	??_main+1
  2396                           
  2397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2398                           ; Switch size 1, requested type "simple"
  2399                           ; Number of cases is 1, Range of values is 0 to 0
  2400                           ; switch strategies available:
  2401                           ; Name         Instructions Cycles
  2402                           ; simple_byte            4     3 (average)
  2403                           ; direct_byte           11     8 (fixed)
  2404                           ; jumptable            260     6 (fixed)
  2405                           ;	Chosen strategy is simple_byte
  2406  04F9  0841               	movf	??_main+1,w
  2407  04FA  3A00               	xorlw	0	; case 0
  2408  04FB  1903               	skipnz
  2409  04FC  2CFE               	goto	l3692
  2410  04FD  2D09               	goto	l3450
  2411  04FE                     l3692:	
  2412                           
  2413                           ; Switch size 1, requested type "simple"
  2414                           ; Number of cases is 3, Range of values is 0 to 2
  2415                           ; switch strategies available:
  2416                           ; Name         Instructions Cycles
  2417                           ; simple_byte           10     6 (average)
  2418                           ; direct_byte           17     8 (fixed)
  2419                           ; jumptable            260     6 (fixed)
  2420                           ;	Chosen strategy is simple_byte
  2421  04FE  0840               	movf	??_main,w
  2422  04FF  3A00               	xorlw	0	; case 0
  2423  0500  1903               	skipnz
  2424  0501  2C97               	goto	l3436
  2425  0502  3A01               	xorlw	1	; case 1
  2426  0503  1903               	skipnz
  2427  0504  2CC0               	goto	l3438
  2428  0505  3A03               	xorlw	3	; case 2
  2429  0506  1903               	skipnz
  2430  0507  2CDF               	goto	l3444
  2431  0508  2D09               	goto	l3450
  2432  0509                     l3450:	
  2433                           
  2434                           ;main.c: 324:         disp = (disp + 1) % 3;
  2435  0509  3003               	movlw	3
  2436  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2437  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2438  050C  00A4               	movwf	___awmod@divisor
  2439  050D  3000               	movlw	0
  2440  050E  00A5               	movwf	___awmod@divisor+1
  2441  050F  0851               	movf	_disp,w
  2442  0510  3E01               	addlw	1
  2443  0511  00A6               	movwf	___awmod@dividend
  2444  0512  3000               	movlw	0
  2445  0513  1803               	skipnc
  2446  0514  3001               	movlw	1
  2447  0515  00A7               	movwf	___awmod@dividend+1
  2448  0516  120A  158A  260E  120A  118A  	fcall	___awmod
  2449  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2450  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2451  051D  0824               	movf	?___awmod,w
  2452  051E  00C0               	movwf	??_main
  2453  051F  0840               	movf	??_main,w
  2454  0520  00D1               	movwf	_disp
  2455  0521                     l3452:	
  2456                           
  2457                           ;main.c: 330:         if (secondPassed.Bit && cycled.Bit)
  2458  0521  1C53               	btfss	_secondPassed,0
  2459  0522  2D24               	goto	u2901
  2460  0523  2D25               	goto	u2900
  2461  0524                     u2901:	
  2462  0524  2D2B               	goto	l281
  2463  0525                     u2900:	
  2464  0525                     l3454:	
  2465  0525  1C52               	btfss	_cycled,0
  2466  0526  2D28               	goto	u2911
  2467  0527  2D29               	goto	u2910
  2468  0528                     u2911:	
  2469  0528  2D2B               	goto	l281
  2470  0529                     u2910:	
  2471  0529                     l3456:	
  2472                           
  2473                           ;main.c: 331:         {;main.c: 332:             secondPassed.Bit = 0;
  2474  0529  1053               	bcf	_secondPassed,0
  2475                           
  2476                           ;main.c: 333:             cycled.Bit = 0;
  2477  052A  1052               	bcf	_cycled,0
  2478  052B                     l281:	
  2479                           ;main.c: 334:         }
  2480                           
  2481                           
  2482                           ;main.c: 335:         if (secondPassed.Bit && !cycled.Bit)
  2483  052B  1C53               	btfss	_secondPassed,0
  2484  052C  2D2E               	goto	u2921
  2485  052D  2D2F               	goto	u2920
  2486  052E                     u2921:	
  2487  052E  2882               	goto	l3304
  2488  052F                     u2920:	
  2489  052F                     l3458:	
  2490  052F  1852               	btfsc	_cycled,0
  2491  0530  2D32               	goto	u2931
  2492  0531  2D33               	goto	u2930
  2493  0532                     u2931:	
  2494  0532  2882               	goto	l3304
  2495  0533                     u2930:	
  2496  0533                     l3460:	
  2497                           
  2498                           ;main.c: 336:         {;main.c: 337:             cycled.Bit = 1;
  2499  0533  1452               	bsf	_cycled,0
  2500  0534  2882               	goto	l3304
  2501  0535  120A  118A  2810   	ljmp	start
  2502  0538                     __end_of_main:	
  2503                           
  2504                           	psect	text1
  2505  0C60                     __ptext1:	
  2506 ;; *************** function _sendByte *****************
  2507 ;; Defined at:
  2508 ;;		line 402 in file "main.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  byte0           1    wreg     unsigned char 
  2511 ;;  byte1           1   24[BANK0 ] unsigned char 
  2512 ;;  valore          1   25[BANK0 ] unsigned char 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  byte0           1   29[BANK0 ] unsigned char 
  2515 ;;  i               1   31[BANK0 ] unsigned char 
  2516 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2517 ;;		 -> BuildByte@txByte(5), 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2527 ;;      Params:         0       2       0       0       0
  2528 ;;      Locals:         0       3       0       0       0
  2529 ;;      Temps:          0       3       0       0       0
  2530 ;;      Totals:         0       8       0       0       0
  2531 ;;Total ram usage:        8 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    4
  2534 ;; This function calls:
  2535 ;;		_BuildByte
  2536 ;;		_UART_TxChar
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           
  2543                           ;psect for function _sendByte
  2544  0C60                     _sendByte:	
  2545                           
  2546                           ;incstack = 0
  2547                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2548                           ;sendByte@byte0 stored from wreg
  2549  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0C62  00BD               	movwf	sendByte@byte0
  2552  0C63                     l3200:	
  2553                           
  2554                           ;main.c: 402: void sendByte(char byte0, char byte1, char valore);main.c: 403: {;main.c: 
      +                          404:     char *txByte;;main.c: 405:     txByte = BuildByte(byte0, byte1, valore);
  2555  0C63  0838               	movf	sendByte@byte1,w
  2556  0C64  00BA               	movwf	??_sendByte
  2557  0C65  083A               	movf	??_sendByte,w
  2558  0C66  00A4               	movwf	BuildByte@byte1
  2559  0C67  0839               	movf	sendByte@valore,w
  2560  0C68  00BB               	movwf	??_sendByte+1
  2561  0C69  083B               	movf	??_sendByte+1,w
  2562  0C6A  00A5               	movwf	BuildByte@valore
  2563  0C6B  083D               	movf	sendByte@byte0,w
  2564  0C6C  120A  118A  2538  120A  158A  	fcall	_BuildByte
  2565  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0C73  00BC               	movwf	??_sendByte+2
  2568  0C74  083C               	movf	??_sendByte+2,w
  2569  0C75  00BE               	movwf	sendByte@txByte
  2570  0C76                     l3202:	
  2571                           
  2572                           ;main.c: 407:     for (unsigned char i = 0; i < 5; i++)
  2573  0C76  01BF               	clrf	sendByte@i
  2574  0C77                     l3208:	
  2575                           
  2576                           ;main.c: 408:     {;main.c: 409:         UART_TxChar(*(txByte++));
  2577  0C77  083E               	movf	sendByte@txByte,w
  2578  0C78  0084               	movwf	4
  2579  0C79  1383               	bcf	3,7	;select IRP bank0
  2580  0C7A  0800               	movf	0,w
  2581  0C7B  120A  158A  23A6  120A  158A  	fcall	_UART_TxChar
  2582  0C80                     l3210:	
  2583  0C80  3001               	movlw	1
  2584  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0C83  00BA               	movwf	??_sendByte
  2587  0C84  083A               	movf	??_sendByte,w
  2588  0C85  07BE               	addwf	sendByte@txByte,f
  2589  0C86                     l3212:	
  2590                           
  2591                           ;main.c: 410:     }
  2592  0C86  3001               	movlw	1
  2593  0C87  00BA               	movwf	??_sendByte
  2594  0C88  083A               	movf	??_sendByte,w
  2595  0C89  07BF               	addwf	sendByte@i,f
  2596  0C8A                     l3214:	
  2597  0C8A  3005               	movlw	5
  2598  0C8B  023F               	subwf	sendByte@i,w
  2599  0C8C  1C03               	skipc
  2600  0C8D  2C8F               	goto	u2661
  2601  0C8E  2C90               	goto	u2660
  2602  0C8F                     u2661:	
  2603  0C8F  2C77               	goto	l3208
  2604  0C90                     u2660:	
  2605  0C90                     l320:	
  2606  0C90  0008               	return
  2607  0C91                     __end_of_sendByte:	
  2608                           
  2609                           	psect	text2
  2610  0BA6                     __ptext2:	
  2611 ;; *************** function _UART_TxChar *****************
  2612 ;; Defined at:
  2613 ;;		line 376 in file "main.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  ch              1    wreg     unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  ch              1    4[BANK0 ] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2627 ;;      Params:         0       0       0       0       0
  2628 ;;      Locals:         0       1       0       0       0
  2629 ;;      Temps:          0       0       0       0       0
  2630 ;;      Totals:         0       1       0       0       0
  2631 ;;Total ram usage:        1 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    3
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_sendByte
  2638 ;;		_UART_Write_Text
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _UART_TxChar
  2644  0BA6                     _UART_TxChar:	
  2645                           
  2646                           ;incstack = 0
  2647                           ; Regs used in _UART_TxChar: [wreg]
  2648                           ;UART_TxChar@ch stored from wreg
  2649  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0BA8  00A4               	movwf	UART_TxChar@ch
  2652  0BA9                     l2938:	
  2653  0BA9                     l300:	
  2654                           ;main.c: 379:         ;
  2655                           
  2656                           
  2657                           ;main.c: 378:     while (!TXIF)
  2658  0BA9  1E0C               	btfss	12,4	;volatile
  2659  0BAA  2BAC               	goto	u2221
  2660  0BAB  2BAD               	goto	u2220
  2661  0BAC                     u2221:	
  2662  0BAC  2BA9               	goto	l300
  2663  0BAD                     u2220:	
  2664  0BAD                     l302:	
  2665                           
  2666                           ;main.c: 380:     TXIF = 0;
  2667  0BAD  120C               	bcf	12,4	;volatile
  2668  0BAE                     l2940:	
  2669                           
  2670                           ;main.c: 381:     TXREG = ch;
  2671  0BAE  0824               	movf	UART_TxChar@ch,w
  2672  0BAF  0099               	movwf	25	;volatile
  2673  0BB0                     l303:	
  2674  0BB0  0008               	return
  2675  0BB1                     __end_of_UART_TxChar:	
  2676                           
  2677                           	psect	text3
  2678  0538                     __ptext3:	
  2679 ;; *************** function _BuildByte *****************
  2680 ;; Defined at:
  2681 ;;		line 2 in file "./CustomLib/Serial.h"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  byte0           1    wreg     unsigned char 
  2684 ;;  byte1           1    4[BANK0 ] unsigned char 
  2685 ;;  valore          1    5[BANK0 ] unsigned char 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  byte0           1    8[BANK0 ] unsigned char 
  2688 ;;  y               2   18[BANK0 ] int 
  2689 ;;  y               2   16[BANK0 ] int 
  2690 ;;  i               2   22[BANK0 ] int 
  2691 ;;  i               2   20[BANK0 ] int 
  2692 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2693 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2694 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      PTR unsigned char 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       2       0       0       0
  2705 ;;      Locals:         0      16       0       0       0
  2706 ;;      Temps:          0       2       0       0       0
  2707 ;;      Totals:         0      20       0       0       0
  2708 ;;Total ram usage:       20 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    3
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_sendByte
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _BuildByte
  2720  0538                     _BuildByte:	
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2724                           ;BuildByte@byte0 stored from wreg
  2725  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2726  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2727  053A  00A8               	movwf	BuildByte@byte0
  2728  053B                     l2856:	
  2729                           
  2730                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2731  053B  0828               	movf	BuildByte@byte0,w
  2732  053C  397F               	andlw	127
  2733  053D  00A6               	movwf	??_BuildByte
  2734  053E  0826               	movf	??_BuildByte,w
  2735  053F  00A9               	movwf	BuildByte@txByte
  2736                           
  2737                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2738  0540  0824               	movf	BuildByte@byte1,w
  2739  0541  397F               	andlw	127
  2740  0542  00A6               	movwf	??_BuildByte
  2741  0543  0826               	movf	??_BuildByte,w
  2742  0544  00AA               	movwf	BuildByte@txByte+1
  2743                           
  2744                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2745  0545  0825               	movf	BuildByte@valore,w
  2746  0546  397F               	andlw	127
  2747  0547  00A6               	movwf	??_BuildByte
  2748  0548  0826               	movf	??_BuildByte,w
  2749  0549  00AB               	movwf	BuildByte@txByte+2
  2750  054A                     l2858:	
  2751                           
  2752                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2753  054A  0825               	movf	BuildByte@valore,w
  2754  054B  00A6               	movwf	??_BuildByte
  2755  054C  3007               	movlw	7
  2756  054D                     u2115:	
  2757  054D  1003               	clrc
  2758  054E  0CA6               	rrf	??_BuildByte,f
  2759  054F  3EFF               	addlw	-1
  2760  0550  1D03               	skipz
  2761  0551  2D4D               	goto	u2115
  2762  0552  0826               	movf	??_BuildByte,w
  2763  0553  397F               	andlw	127
  2764  0554  00A7               	movwf	??_BuildByte+1
  2765  0555  0827               	movf	??_BuildByte+1,w
  2766  0556  00AC               	movwf	BuildByte@txByte+3
  2767  0557                     l2860:	
  2768                           
  2769                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2770  0557  01AE               	clrf	BuildByte@sommaRow
  2771  0558                     l2862:	
  2772                           
  2773                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2774  0558  01AF               	clrf	BuildByte@sommaColumn
  2775  0559                     l2864:	
  2776                           
  2777                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2778  0559  01B4               	clrf	BuildByte@i
  2779  055A  01B5               	clrf	BuildByte@i+1
  2780  055B                     l2870:	
  2781                           
  2782                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2783  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2784  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2785  055D  01B0               	clrf	BuildByte@y
  2786  055E  01B1               	clrf	BuildByte@y+1
  2787  055F                     l2876:	
  2788                           
  2789                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2790  055F  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0560  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0561  0834               	movf	BuildByte@i,w
  2793  0562  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2794  0563  0084               	movwf	4
  2795  0564  1383               	bcf	3,7	;select IRP bank0
  2796  0565  0800               	movf	0,w
  2797  0566  00A6               	movwf	??_BuildByte
  2798  0567  0A30               	incf	BuildByte@y,w
  2799  0568  2D6B               	goto	u2124
  2800  0569                     u2125:	
  2801  0569  1003               	clrc
  2802  056A  0CA6               	rrf	??_BuildByte,f
  2803  056B                     u2124:	
  2804  056B  3EFF               	addlw	-1
  2805  056C  1D03               	skipz
  2806  056D  2D69               	goto	u2125
  2807  056E  0826               	movf	??_BuildByte,w
  2808  056F  3901               	andlw	1
  2809  0570  00A7               	movwf	??_BuildByte+1
  2810  0571  0827               	movf	??_BuildByte+1,w
  2811  0572  07AE               	addwf	BuildByte@sommaRow,f
  2812  0573                     l2878:	
  2813                           
  2814                           ;./CustomLib/Serial.h: 18:         }
  2815  0573  3001               	movlw	1
  2816  0574  07B0               	addwf	BuildByte@y,f
  2817  0575  1803               	skipnc
  2818  0576  0AB1               	incf	BuildByte@y+1,f
  2819  0577  3000               	movlw	0
  2820  0578  07B1               	addwf	BuildByte@y+1,f
  2821  0579                     l2880:	
  2822  0579  0831               	movf	BuildByte@y+1,w
  2823  057A  3A80               	xorlw	128
  2824  057B  00FF               	movwf	btemp+1
  2825  057C  3080               	movlw	128
  2826  057D  027F               	subwf	btemp+1,w
  2827  057E  1D03               	skipz
  2828  057F  2D82               	goto	u2135
  2829  0580  3008               	movlw	8
  2830  0581  0230               	subwf	BuildByte@y,w
  2831  0582                     u2135:	
  2832  0582  1C03               	skipc
  2833  0583  2D85               	goto	u2131
  2834  0584  2D86               	goto	u2130
  2835  0585                     u2131:	
  2836  0585  2D5F               	goto	l2876
  2837  0586                     u2130:	
  2838  0586                     l123:	
  2839                           
  2840                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2841  0586  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0587  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0588  1C2E               	btfss	BuildByte@sommaRow,0
  2844  0589  2D8B               	goto	u2141
  2845  058A  2D8C               	goto	u2140
  2846  058B                     u2141:	
  2847  058B  2D94               	goto	l2884
  2848  058C                     u2140:	
  2849  058C                     l2882:	
  2850                           
  2851                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2852  058C  3080               	movlw	128
  2853  058D  00A6               	movwf	??_BuildByte
  2854  058E  0834               	movf	BuildByte@i,w
  2855  058F  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2856  0590  0084               	movwf	4
  2857  0591  0826               	movf	??_BuildByte,w
  2858  0592  1383               	bcf	3,7	;select IRP bank0
  2859  0593  0780               	addwf	0,f
  2860  0594                     l2884:	
  2861                           
  2862                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2863  0594  01AE               	clrf	BuildByte@sommaRow
  2864  0595                     l2888:	
  2865                           ;./CustomLib/Serial.h: 23:         }
  2866                           
  2867                           
  2868                           ;./CustomLib/Serial.h: 28:     }
  2869  0595  3001               	movlw	1
  2870  0596  07B4               	addwf	BuildByte@i,f
  2871  0597  1803               	skipnc
  2872  0598  0AB5               	incf	BuildByte@i+1,f
  2873  0599  3000               	movlw	0
  2874  059A  07B5               	addwf	BuildByte@i+1,f
  2875  059B                     l2890:	
  2876  059B  0835               	movf	BuildByte@i+1,w
  2877  059C  3A80               	xorlw	128
  2878  059D  00FF               	movwf	btemp+1
  2879  059E  3080               	movlw	128
  2880  059F  027F               	subwf	btemp+1,w
  2881  05A0  1D03               	skipz
  2882  05A1  2DA4               	goto	u2155
  2883  05A2  3004               	movlw	4
  2884  05A3  0234               	subwf	BuildByte@i,w
  2885  05A4                     u2155:	
  2886  05A4  1C03               	skipc
  2887  05A5  2DA7               	goto	u2151
  2888  05A6  2DA8               	goto	u2150
  2889  05A7                     u2151:	
  2890  05A7  2D5B               	goto	l2870
  2891  05A8                     u2150:	
  2892  05A8                     l2892:	
  2893                           
  2894                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2895  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2896  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2897  05AA  01B6               	clrf	BuildByte@i_359
  2898  05AB  01B7               	clrf	BuildByte@i_359+1
  2899  05AC                     l2898:	
  2900                           
  2901                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2902  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2903  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2904  05AE  01B2               	clrf	BuildByte@y_360
  2905  05AF  01B3               	clrf	BuildByte@y_360+1
  2906  05B0                     l2904:	
  2907                           
  2908                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2909  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2910  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2911  05B2  0832               	movf	BuildByte@y_360,w
  2912  05B3  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2913  05B4  0084               	movwf	4
  2914  05B5  1383               	bcf	3,7	;select IRP bank0
  2915  05B6  0800               	movf	0,w
  2916  05B7  00A6               	movwf	??_BuildByte
  2917  05B8  0A36               	incf	BuildByte@i_359,w
  2918  05B9  2DBC               	goto	u2164
  2919  05BA                     u2165:	
  2920  05BA  1003               	clrc
  2921  05BB  0CA6               	rrf	??_BuildByte,f
  2922  05BC                     u2164:	
  2923  05BC  3EFF               	addlw	-1
  2924  05BD  1D03               	skipz
  2925  05BE  2DBA               	goto	u2165
  2926  05BF  0826               	movf	??_BuildByte,w
  2927  05C0  3901               	andlw	1
  2928  05C1  00A7               	movwf	??_BuildByte+1
  2929  05C2  0827               	movf	??_BuildByte+1,w
  2930  05C3  07AF               	addwf	BuildByte@sommaColumn,f
  2931  05C4                     l2906:	
  2932                           
  2933                           ;./CustomLib/Serial.h: 37:         }
  2934  05C4  3001               	movlw	1
  2935  05C5  07B2               	addwf	BuildByte@y_360,f
  2936  05C6  1803               	skipnc
  2937  05C7  0AB3               	incf	BuildByte@y_360+1,f
  2938  05C8  3000               	movlw	0
  2939  05C9  07B3               	addwf	BuildByte@y_360+1,f
  2940  05CA                     l2908:	
  2941  05CA  0833               	movf	BuildByte@y_360+1,w
  2942  05CB  3A80               	xorlw	128
  2943  05CC  00FF               	movwf	btemp+1
  2944  05CD  3080               	movlw	128
  2945  05CE  027F               	subwf	btemp+1,w
  2946  05CF  1D03               	skipz
  2947  05D0  2DD3               	goto	u2175
  2948  05D1  3004               	movlw	4
  2949  05D2  0232               	subwf	BuildByte@y_360,w
  2950  05D3                     u2175:	
  2951  05D3  1C03               	skipc
  2952  05D4  2DD6               	goto	u2171
  2953  05D5  2DD7               	goto	u2170
  2954  05D6                     u2171:	
  2955  05D6  2DB0               	goto	l2904
  2956  05D7                     u2170:	
  2957  05D7                     l129:	
  2958                           
  2959                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2960  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2961  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2962  05D9  1C2F               	btfss	BuildByte@sommaColumn,0
  2963  05DA  2DDC               	goto	u2181
  2964  05DB  2DDD               	goto	u2180
  2965  05DC                     u2181:	
  2966  05DC  2DEA               	goto	l2912
  2967  05DD                     u2180:	
  2968  05DD                     l2910:	
  2969                           
  2970                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2971  05DD  3001               	movlw	1
  2972  05DE  00A6               	movwf	??_BuildByte
  2973  05DF  0A36               	incf	BuildByte@i_359,w
  2974  05E0  2DE3               	goto	u2194
  2975  05E1                     u2195:	
  2976  05E1  1003               	clrc
  2977  05E2  0DA6               	rlf	??_BuildByte,f
  2978  05E3                     u2194:	
  2979  05E3  3EFF               	addlw	-1
  2980  05E4  1D03               	skipz
  2981  05E5  2DE1               	goto	u2195
  2982  05E6  0826               	movf	??_BuildByte,w
  2983  05E7  00A7               	movwf	??_BuildByte+1
  2984  05E8  0827               	movf	??_BuildByte+1,w
  2985  05E9  07AD               	addwf	BuildByte@txByte+4,f
  2986  05EA                     l2912:	
  2987                           
  2988                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2989  05EA  01AF               	clrf	BuildByte@sommaColumn
  2990  05EB                     l2916:	
  2991                           ;./CustomLib/Serial.h: 42:         }
  2992                           
  2993                           
  2994                           ;./CustomLib/Serial.h: 47:     }
  2995  05EB  3001               	movlw	1
  2996  05EC  07B6               	addwf	BuildByte@i_359,f
  2997  05ED  1803               	skipnc
  2998  05EE  0AB7               	incf	BuildByte@i_359+1,f
  2999  05EF  3000               	movlw	0
  3000  05F0  07B7               	addwf	BuildByte@i_359+1,f
  3001  05F1                     l2918:	
  3002  05F1  0837               	movf	BuildByte@i_359+1,w
  3003  05F2  3A80               	xorlw	128
  3004  05F3  00FF               	movwf	btemp+1
  3005  05F4  3080               	movlw	128
  3006  05F5  027F               	subwf	btemp+1,w
  3007  05F6  1D03               	skipz
  3008  05F7  2DFA               	goto	u2205
  3009  05F8  3008               	movlw	8
  3010  05F9  0236               	subwf	BuildByte@i_359,w
  3011  05FA                     u2205:	
  3012  05FA  1C03               	skipc
  3013  05FB  2DFD               	goto	u2201
  3014  05FC  2DFE               	goto	u2200
  3015  05FD                     u2201:	
  3016  05FD  2DAC               	goto	l2898
  3017  05FE                     u2200:	
  3018  05FE                     l2920:	
  3019                           
  3020                           ;./CustomLib/Serial.h: 49:     return txByte;
  3021  05FE  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  3022  05FF                     l132:	
  3023  05FF  0008               	return
  3024  0600                     __end_of_BuildByte:	
  3025                           
  3026                           	psect	text4
  3027  07C9                     __ptext4:	
  3028 ;; *************** function _map *****************
  3029 ;; Defined at:
  3030 ;;		line 1 in file "./CustomLib/Conversions.h"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  x               2   20[BANK0 ] int 
  3033 ;;  in_min          2   22[BANK0 ] int 
  3034 ;;  in_max          2   24[BANK0 ] int 
  3035 ;;  out_min         2   26[BANK0 ] int 
  3036 ;;  out_max         2   28[BANK0 ] int 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  2   20[BANK0 ] int 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         0      10       0       0       0
  3049 ;;      Locals:         0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0
  3051 ;;      Totals:         0      10       0       0       0
  3052 ;;Total ram usage:       10 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    4
  3055 ;; This function calls:
  3056 ;;		___awdiv
  3057 ;;		___wmul
  3058 ;; This function is called by:
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           
  3064                           ;psect for function _map
  3065  07C9                     _map:	
  3066  07C9                     l3092:	
  3067                           ;incstack = 0
  3068                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3069                           
  3070                           
  3071                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3072  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  3073  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  3074  07CB  0836               	movf	map@in_min,w
  3075  07CC  0238               	subwf	map@in_max,w
  3076  07CD  00AB               	movwf	___awdiv@divisor
  3077  07CE  0837               	movf	map@in_min+1,w
  3078  07CF  1C03               	skipc
  3079  07D0  0A37               	incf	map@in_min+1,w
  3080  07D1  0239               	subwf	map@in_max+1,w
  3081  07D2  00AC               	movwf	___awdiv@divisor+1
  3082  07D3  0836               	movf	map@in_min,w
  3083  07D4  0234               	subwf	map@x,w
  3084  07D5  00A4               	movwf	___wmul@multiplier
  3085  07D6  0837               	movf	map@in_min+1,w
  3086  07D7  1C03               	skipc
  3087  07D8  0A37               	incf	map@in_min+1,w
  3088  07D9  0235               	subwf	map@x+1,w
  3089  07DA  00A5               	movwf	___wmul@multiplier+1
  3090  07DB  083A               	movf	map@out_min,w
  3091  07DC  023C               	subwf	map@out_max,w
  3092  07DD  00A6               	movwf	___wmul@multiplicand
  3093  07DE  083B               	movf	map@out_min+1,w
  3094  07DF  1C03               	skipc
  3095  07E0  0A3B               	incf	map@out_min+1,w
  3096  07E1  023D               	subwf	map@out_max+1,w
  3097  07E2  00A7               	movwf	___wmul@multiplicand+1
  3098  07E3  120A  158A  2439  120A  118A  	fcall	___wmul
  3099  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  3100  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  3101  07EA  0825               	movf	?___wmul+1,w
  3102  07EB  00AE               	movwf	___awdiv@dividend+1
  3103  07EC  0824               	movf	?___wmul,w
  3104  07ED  00AD               	movwf	___awdiv@dividend
  3105  07EE  120A  158A  2729  120A  118A  	fcall	___awdiv
  3106  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  3107  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  3108  07F5  083A               	movf	map@out_min,w
  3109  07F6  072B               	addwf	?___awdiv,w
  3110  07F7  00B4               	movwf	?_map
  3111  07F8  083B               	movf	map@out_min+1,w
  3112  07F9  1803               	skipnc
  3113  07FA  0A3B               	incf	map@out_min+1,w
  3114  07FB  072C               	addwf	?___awdiv+1,w
  3115  07FC  00B5               	movwf	?_map+1
  3116  07FD                     l81:	
  3117  07FD  0008               	return
  3118  07FE                     __end_of_map:	
  3119                           
  3120                           	psect	text5
  3121  0C39                     __ptext5:	
  3122 ;; *************** function ___wmul *****************
  3123 ;; Defined at:
  3124 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3127 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  product         2    8[BANK0 ] unsigned int 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  2    4[BANK0 ] unsigned int 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3139 ;;      Params:         0       4       0       0       0
  3140 ;;      Locals:         0       2       0       0       0
  3141 ;;      Temps:          0       0       0       0       0
  3142 ;;      Totals:         0       6       0       0       0
  3143 ;;Total ram usage:        6 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    3
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_map
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function ___wmul
  3155  0C39                     ___wmul:	
  3156  0C39                     l2942:	
  3157                           ;incstack = 0
  3158                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3159                           
  3160  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0C3B  01A8               	clrf	___wmul@product
  3163  0C3C  01A9               	clrf	___wmul@product+1
  3164  0C3D                     l2944:	
  3165  0C3D  1C24               	btfss	___wmul@multiplier,0
  3166  0C3E  2C40               	goto	u2231
  3167  0C3F  2C41               	goto	u2230
  3168  0C40                     u2231:	
  3169  0C40  2C47               	goto	l444
  3170  0C41                     u2230:	
  3171  0C41                     l2946:	
  3172  0C41  0826               	movf	___wmul@multiplicand,w
  3173  0C42  07A8               	addwf	___wmul@product,f
  3174  0C43  1803               	skipnc
  3175  0C44  0AA9               	incf	___wmul@product+1,f
  3176  0C45  0827               	movf	___wmul@multiplicand+1,w
  3177  0C46  07A9               	addwf	___wmul@product+1,f
  3178  0C47                     l444:	
  3179  0C47  3001               	movlw	1
  3180  0C48                     u2245:	
  3181  0C48  1003               	clrc
  3182  0C49  0DA6               	rlf	___wmul@multiplicand,f
  3183  0C4A  0DA7               	rlf	___wmul@multiplicand+1,f
  3184  0C4B  3EFF               	addlw	-1
  3185  0C4C  1D03               	skipz
  3186  0C4D  2C48               	goto	u2245
  3187  0C4E                     l2948:	
  3188  0C4E  3001               	movlw	1
  3189  0C4F                     u2255:	
  3190  0C4F  1003               	clrc
  3191  0C50  0CA5               	rrf	___wmul@multiplier+1,f
  3192  0C51  0CA4               	rrf	___wmul@multiplier,f
  3193  0C52  3EFF               	addlw	-1
  3194  0C53  1D03               	skipz
  3195  0C54  2C4F               	goto	u2255
  3196  0C55                     l2950:	
  3197  0C55  0824               	movf	___wmul@multiplier,w
  3198  0C56  0425               	iorwf	___wmul@multiplier+1,w
  3199  0C57  1D03               	btfss	3,2
  3200  0C58  2C5A               	goto	u2261
  3201  0C59  2C5B               	goto	u2260
  3202  0C5A                     u2261:	
  3203  0C5A  2C3D               	goto	l2944
  3204  0C5B                     u2260:	
  3205  0C5B                     l2952:	
  3206  0C5B  0829               	movf	___wmul@product+1,w
  3207  0C5C  00A5               	movwf	?___wmul+1
  3208  0C5D  0828               	movf	___wmul@product,w
  3209  0C5E  00A4               	movwf	?___wmul
  3210  0C5F                     l446:	
  3211  0C5F  0008               	return
  3212  0C60                     __end_of___wmul:	
  3213                           
  3214                           	psect	text6
  3215  0DB5                     __ptext6:	
  3216 ;; *************** function _luciSemaforo *****************
  3217 ;; Defined at:
  3218 ;;		line 491 in file "main.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  index           1    wreg     unsigned char 
  3221 ;;  lux             1    4[BANK0 ] unsigned char 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  index           1    7[BANK0 ] unsigned char 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3233 ;;      Params:         0       1       0       0       0
  3234 ;;      Locals:         0       1       0       0       0
  3235 ;;      Temps:          0       2       0       0       0
  3236 ;;      Totals:         0       4       0       0       0
  3237 ;;Total ram usage:        4 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    3
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_main
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           
  3248                           ;psect for function _luciSemaforo
  3249  0DB5                     _luciSemaforo:	
  3250                           
  3251                           ;incstack = 0
  3252                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3253                           ;luciSemaforo@index stored from wreg
  3254  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  3256  0DB7  00A7               	movwf	luciSemaforo@index
  3257  0DB8                     l3226:	
  3258                           
  3259                           ;main.c: 491: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 492: {;m
      +                          ain.c: 493:     switch (index)
  3260  0DB8  2DFD               	goto	l3238
  3261  0DB9                     l347:	
  3262                           ;main.c: 497:         {;main.c: 498:         case 0:
  3263                           
  3264                           
  3265                           ;main.c: 499:             PORTCbits.RC1 = 0;
  3266  0DB9  1087               	bcf	7,1	;volatile
  3267                           
  3268                           ;main.c: 500:             PORTCbits.RC2 = 0;
  3269  0DBA  1107               	bcf	7,2	;volatile
  3270                           
  3271                           ;main.c: 501:             PORTCbits.RC3 = 0;
  3272  0DBB  1187               	bcf	7,3	;volatile
  3273                           
  3274                           ;main.c: 502:             PORTCbits.RC0 = 1;
  3275  0DBC  1407               	bsf	7,0	;volatile
  3276                           
  3277                           ;main.c: 503:             break;
  3278  0DBD  2E0D               	goto	l358
  3279  0DBE                     l349:	
  3280                           ;main.c: 504:         case 1:
  3281                           
  3282                           
  3283                           ;main.c: 505:             PORTCbits.RC0 = 0;
  3284  0DBE  1007               	bcf	7,0	;volatile
  3285                           
  3286                           ;main.c: 506:             PORTCbits.RC2 = 0;
  3287  0DBF  1107               	bcf	7,2	;volatile
  3288                           
  3289                           ;main.c: 507:             PORTCbits.RC3 = 0;
  3290  0DC0  1187               	bcf	7,3	;volatile
  3291                           
  3292                           ;main.c: 508:             PORTCbits.RC1 = 1;
  3293  0DC1  1487               	bsf	7,1	;volatile
  3294                           
  3295                           ;main.c: 509:             break;
  3296  0DC2  2E0D               	goto	l358
  3297  0DC3                     l350:	
  3298                           ;main.c: 510:         case 2:
  3299                           
  3300                           
  3301                           ;main.c: 511:             PORTCbits.RC0 = 0;
  3302  0DC3  1007               	bcf	7,0	;volatile
  3303                           
  3304                           ;main.c: 512:             PORTCbits.RC1 = 0;
  3305  0DC4  1087               	bcf	7,1	;volatile
  3306                           
  3307                           ;main.c: 513:             PORTCbits.RC2 = 1;
  3308  0DC5  1507               	bsf	7,2	;volatile
  3309                           
  3310                           ;main.c: 514:             PORTCbits.RC3 = 1;
  3311  0DC6  1587               	bsf	7,3	;volatile
  3312                           
  3313                           ;main.c: 515:             break;
  3314  0DC7  2E0D               	goto	l358
  3315  0DC8                     l3230:	
  3316  0DC8  0824               	movf	luciSemaforo@lux,w
  3317  0DC9  00A5               	movwf	??_luciSemaforo
  3318  0DCA  01A6               	clrf	??_luciSemaforo+1
  3319                           
  3320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3321                           ; Switch size 1, requested type "simple"
  3322                           ; Number of cases is 1, Range of values is 0 to 0
  3323                           ; switch strategies available:
  3324                           ; Name         Instructions Cycles
  3325                           ; simple_byte            4     3 (average)
  3326                           ; direct_byte           11     8 (fixed)
  3327                           ; jumptable            260     6 (fixed)
  3328                           ;	Chosen strategy is simple_byte
  3329  0DCB  0826               	movf	??_luciSemaforo+1,w
  3330  0DCC  3A00               	xorlw	0	; case 0
  3331  0DCD  1903               	skipnz
  3332  0DCE  2DD0               	goto	l3694
  3333  0DCF  2E0D               	goto	l358
  3334  0DD0                     l3694:	
  3335                           
  3336                           ; Switch size 1, requested type "simple"
  3337                           ; Number of cases is 3, Range of values is 0 to 2
  3338                           ; switch strategies available:
  3339                           ; Name         Instructions Cycles
  3340                           ; simple_byte           10     6 (average)
  3341                           ; direct_byte           17     8 (fixed)
  3342                           ; jumptable            260     6 (fixed)
  3343                           ;	Chosen strategy is simple_byte
  3344  0DD0  0825               	movf	??_luciSemaforo,w
  3345  0DD1  3A00               	xorlw	0	; case 0
  3346  0DD2  1903               	skipnz
  3347  0DD3  2DB9               	goto	l347
  3348  0DD4  3A01               	xorlw	1	; case 1
  3349  0DD5  1903               	skipnz
  3350  0DD6  2DBE               	goto	l349
  3351  0DD7  3A03               	xorlw	3	; case 2
  3352  0DD8  1903               	skipnz
  3353  0DD9  2DC3               	goto	l350
  3354  0DDA  2E0D               	goto	l358
  3355  0DDB                     l354:	
  3356                           ;main.c: 520:         {;main.c: 521:         case 0:
  3357                           
  3358                           
  3359                           ;main.c: 522:             PORTBbits.RB1 = 0;
  3360  0DDB  1086               	bcf	6,1	;volatile
  3361                           
  3362                           ;main.c: 523:             PORTBbits.RB6 = 0;
  3363  0DDC  1306               	bcf	6,6	;volatile
  3364                           
  3365                           ;main.c: 524:             PORTBbits.RB7 = 0;
  3366  0DDD  1386               	bcf	6,7	;volatile
  3367                           
  3368                           ;main.c: 525:             PORTBbits.RB0 = 1;
  3369  0DDE  1406               	bsf	6,0	;volatile
  3370                           
  3371                           ;main.c: 526:             break;
  3372  0DDF  2E0D               	goto	l358
  3373  0DE0                     l356:	
  3374                           ;main.c: 527:         case 1:
  3375                           
  3376                           
  3377                           ;main.c: 528:             PORTBbits.RB0 = 0;
  3378  0DE0  1006               	bcf	6,0	;volatile
  3379                           
  3380                           ;main.c: 529:             PORTBbits.RB6 = 0;
  3381  0DE1  1306               	bcf	6,6	;volatile
  3382                           
  3383                           ;main.c: 530:             PORTBbits.RB7 = 0;
  3384  0DE2  1386               	bcf	6,7	;volatile
  3385                           
  3386                           ;main.c: 531:             PORTBbits.RB1 = 1;
  3387  0DE3  1486               	bsf	6,1	;volatile
  3388                           
  3389                           ;main.c: 532:             break;
  3390  0DE4  2E0D               	goto	l358
  3391  0DE5                     l357:	
  3392                           ;main.c: 533:         case 2:
  3393                           
  3394                           
  3395                           ;main.c: 534:             PORTBbits.RB0 = 0;
  3396  0DE5  1006               	bcf	6,0	;volatile
  3397                           
  3398                           ;main.c: 535:             PORTBbits.RB1 = 0;
  3399  0DE6  1086               	bcf	6,1	;volatile
  3400                           
  3401                           ;main.c: 536:             PORTBbits.RB6 = 1;
  3402  0DE7  1706               	bsf	6,6	;volatile
  3403                           
  3404                           ;main.c: 537:             PORTBbits.RB7 = 1;
  3405  0DE8  1786               	bsf	6,7	;volatile
  3406                           
  3407                           ;main.c: 538:             break;
  3408  0DE9  2E0D               	goto	l358
  3409  0DEA                     l3234:	
  3410  0DEA  0824               	movf	luciSemaforo@lux,w
  3411  0DEB  00A5               	movwf	??_luciSemaforo
  3412  0DEC  01A6               	clrf	??_luciSemaforo+1
  3413                           
  3414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3415                           ; Switch size 1, requested type "simple"
  3416                           ; Number of cases is 1, Range of values is 0 to 0
  3417                           ; switch strategies available:
  3418                           ; Name         Instructions Cycles
  3419                           ; simple_byte            4     3 (average)
  3420                           ; direct_byte           11     8 (fixed)
  3421                           ; jumptable            260     6 (fixed)
  3422                           ;	Chosen strategy is simple_byte
  3423  0DED  0826               	movf	??_luciSemaforo+1,w
  3424  0DEE  3A00               	xorlw	0	; case 0
  3425  0DEF  1903               	skipnz
  3426  0DF0  2DF2               	goto	l3696
  3427  0DF1  2E0D               	goto	l358
  3428  0DF2                     l3696:	
  3429                           
  3430                           ; Switch size 1, requested type "simple"
  3431                           ; Number of cases is 3, Range of values is 0 to 2
  3432                           ; switch strategies available:
  3433                           ; Name         Instructions Cycles
  3434                           ; simple_byte           10     6 (average)
  3435                           ; direct_byte           17     8 (fixed)
  3436                           ; jumptable            260     6 (fixed)
  3437                           ;	Chosen strategy is simple_byte
  3438  0DF2  0825               	movf	??_luciSemaforo,w
  3439  0DF3  3A00               	xorlw	0	; case 0
  3440  0DF4  1903               	skipnz
  3441  0DF5  2DDB               	goto	l354
  3442  0DF6  3A01               	xorlw	1	; case 1
  3443  0DF7  1903               	skipnz
  3444  0DF8  2DE0               	goto	l356
  3445  0DF9  3A03               	xorlw	3	; case 2
  3446  0DFA  1903               	skipnz
  3447  0DFB  2DE5               	goto	l357
  3448  0DFC  2E0D               	goto	l358
  3449  0DFD                     l3238:	
  3450  0DFD  0827               	movf	luciSemaforo@index,w
  3451  0DFE  00A5               	movwf	??_luciSemaforo
  3452  0DFF  01A6               	clrf	??_luciSemaforo+1
  3453                           
  3454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3455                           ; Switch size 1, requested type "simple"
  3456                           ; Number of cases is 1, Range of values is 0 to 0
  3457                           ; switch strategies available:
  3458                           ; Name         Instructions Cycles
  3459                           ; simple_byte            4     3 (average)
  3460                           ; direct_byte           11     8 (fixed)
  3461                           ; jumptable            260     6 (fixed)
  3462                           ;	Chosen strategy is simple_byte
  3463  0E00  0826               	movf	??_luciSemaforo+1,w
  3464  0E01  3A00               	xorlw	0	; case 0
  3465  0E02  1903               	skipnz
  3466  0E03  2E05               	goto	l3698
  3467  0E04  2E0D               	goto	l358
  3468  0E05                     l3698:	
  3469                           
  3470                           ; Switch size 1, requested type "simple"
  3471                           ; Number of cases is 2, Range of values is 0 to 1
  3472                           ; switch strategies available:
  3473                           ; Name         Instructions Cycles
  3474                           ; simple_byte            7     4 (average)
  3475                           ; direct_byte           14     8 (fixed)
  3476                           ; jumptable            260     6 (fixed)
  3477                           ;	Chosen strategy is simple_byte
  3478  0E05  0825               	movf	??_luciSemaforo,w
  3479  0E06  3A00               	xorlw	0	; case 0
  3480  0E07  1903               	skipnz
  3481  0E08  2DC8               	goto	l3230
  3482  0E09  3A01               	xorlw	1	; case 1
  3483  0E0A  1903               	skipnz
  3484  0E0B  2DEA               	goto	l3234
  3485  0E0C  2E0D               	goto	l358
  3486  0E0D                     l358:	
  3487  0E0D  0008               	return
  3488  0E0E                     __end_of_luciSemaforo:	
  3489                           
  3490                           	psect	text7
  3491  0BC1                     __ptext7:	
  3492 ;; *************** function _init_ADC *****************
  3493 ;; Defined at:
  3494 ;;		line 345 in file "main.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3508 ;;      Params:         0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0
  3510 ;;      Temps:          0       1       0       0       0
  3511 ;;      Totals:         0       1       0       0       0
  3512 ;;Total ram usage:        1 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    3
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           
  3523                           ;psect for function _init_ADC
  3524  0BC1                     _init_ADC:	
  3525  0BC1                     l3182:	
  3526                           ;incstack = 0
  3527                           ; Regs used in _init_ADC: [wreg+status,2]
  3528                           
  3529                           
  3530                           ;main.c: 347:     TRISA = 0xE3;
  3531  0BC1  30E3               	movlw	227
  3532  0BC2  1683               	bsf	3,5	;RP0=1, select bank1
  3533  0BC3  1303               	bcf	3,6	;RP1=0, select bank1
  3534  0BC4  0085               	movwf	5	;volatile
  3535  0BC5                     l3184:	
  3536                           
  3537                           ;main.c: 348:     ADCON0 = 0x00;
  3538  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0BC7  019F               	clrf	31	;volatile
  3541  0BC8                     l3186:	
  3542                           
  3543                           ;main.c: 349:     ADCON1 = 0x80;
  3544  0BC8  3080               	movlw	128
  3545  0BC9  1683               	bsf	3,5	;RP0=1, select bank1
  3546  0BCA  1303               	bcf	3,6	;RP1=0, select bank1
  3547  0BCB  009F               	movwf	31	;volatile
  3548  0BCC                     l3188:	
  3549                           
  3550                           ;main.c: 350:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3551  0BCC  3019               	movlw	25
  3552  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0BCF  00A4               	movwf	??_init_ADC
  3555  0BD0                     u2957:	
  3556  0BD0  0BA4               	decfsz	??_init_ADC,f
  3557  0BD1  2BD0               	goto	u2957
  3558  0BD2  2BD3               	nop2
  3559  0BD3                     l288:	
  3560  0BD3  0008               	return
  3561  0BD4                     __end_of_init_ADC:	
  3562                           
  3563                           	psect	text8
  3564  0E69                     __ptext8:	
  3565 ;; *************** function _UpdateTimes *****************
  3566 ;; Defined at:
  3567 ;;		line 3 in file "./CustomLib/TrafficLight.h"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  _semafori       1    wreg     PTR PTR struct .
  3570 ;;		 -> Semafori(16), 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  _semafori       1   20[BANK0 ] PTR PTR struct .
  3573 ;;		 -> Semafori(16), 
  3574 ;;  i               1   22[BANK0 ] unsigned char 
  3575 ;;  l               1   21[BANK0 ] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3585 ;;      Params:         0       0       0       0       0
  3586 ;;      Locals:         0       3       0       0       0
  3587 ;;      Temps:          0      16       0       0       0
  3588 ;;      Totals:         0      19       0       0       0
  3589 ;;Total ram usage:       19 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    3
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function _UpdateTimes
  3601  0E69                     _UpdateTimes:	
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3605                           ;UpdateTimes@_semafori stored from wreg
  3606  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0E6B  00B4               	movwf	UpdateTimes@_semafori
  3609  0E6C                     l3108:	
  3610                           
  3611                           ;./CustomLib/TrafficLight.h: 3: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 4: {;./CustomLib/TrafficLight.h: 6:     for (unsigned char l = 0; l < 16; l++)
  3612  0E6C  01B5               	clrf	UpdateTimes@l
  3613  0E6D                     l3114:	
  3614                           
  3615                           ;./CustomLib/TrafficLight.h: 7:     {;./CustomLib/TrafficLight.h: 8:         for(unsigne
      +                          d char i = 0; i < 3; i++)
  3616  0E6D  01B6               	clrf	UpdateTimes@i
  3617  0E6E                     l3120:	
  3618                           
  3619                           ;./CustomLib/TrafficLight.h: 9:         {;./CustomLib/TrafficLight.h: 10:             (*
      +                          (_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3620  0E6E  0835               	movf	UpdateTimes@l,w
  3621  0E6F  00A4               	movwf	??_UpdateTimes
  3622  0E70  0724               	addwf	??_UpdateTimes,w
  3623  0E71  0734               	addwf	UpdateTimes@_semafori,w
  3624  0E72  00A5               	movwf	??_UpdateTimes+1
  3625  0E73  0825               	movf	??_UpdateTimes+1,w
  3626  0E74  0084               	movwf	4
  3627  0E75  1383               	bcf	3,7	;select IRP bank0
  3628  0E76  0800               	movf	0,w
  3629  0E77  00A6               	movwf	??_UpdateTimes+2
  3630  0E78  0A84               	incf	4,f
  3631  0E79  0800               	movf	0,w
  3632  0E7A  00A7               	movwf	??_UpdateTimes+3
  3633  0E7B  0836               	movf	UpdateTimes@i,w
  3634  0E7C  00A8               	movwf	??_UpdateTimes+4
  3635  0E7D  0728               	addwf	??_UpdateTimes+4,w
  3636  0E7E  3E06               	addlw	6
  3637  0E7F  0726               	addwf	??_UpdateTimes+2,w
  3638  0E80  00A9               	movwf	??_UpdateTimes+5
  3639  0E81  0827               	movf	??_UpdateTimes+3,w
  3640  0E82  1803               	skipnc
  3641  0E83  3E01               	addlw	1
  3642  0E84  00AA               	movwf	??_UpdateTimes+6
  3643  0E85  0829               	movf	??_UpdateTimes+5,w
  3644  0E86  0084               	movwf	4
  3645  0E87  1783               	bsf	3,7
  3646  0E88  1C2A               	btfss	??_UpdateTimes+6,0
  3647  0E89  1383               	bcf	3,7
  3648  0E8A  0800               	movf	0,w
  3649  0E8B  00AB               	movwf	??_UpdateTimes+7
  3650  0E8C  0A84               	incf	4,f
  3651  0E8D  0800               	movf	0,w
  3652  0E8E  00AC               	movwf	??_UpdateTimes+8
  3653  0E8F  0835               	movf	UpdateTimes@l,w
  3654  0E90  00AD               	movwf	??_UpdateTimes+9
  3655  0E91  072D               	addwf	??_UpdateTimes+9,w
  3656  0E92  0734               	addwf	UpdateTimes@_semafori,w
  3657  0E93  00AE               	movwf	??_UpdateTimes+10
  3658  0E94  082E               	movf	??_UpdateTimes+10,w
  3659  0E95  0084               	movwf	4
  3660  0E96  1383               	bcf	3,7	;select IRP bank0
  3661  0E97  0800               	movf	0,w
  3662  0E98  00AF               	movwf	??_UpdateTimes+11
  3663  0E99  0A84               	incf	4,f
  3664  0E9A  0800               	movf	0,w
  3665  0E9B  00B0               	movwf	??_UpdateTimes+12
  3666  0E9C  0836               	movf	UpdateTimes@i,w
  3667  0E9D  00B1               	movwf	??_UpdateTimes+13
  3668  0E9E  0731               	addwf	??_UpdateTimes+13,w
  3669  0E9F  072F               	addwf	??_UpdateTimes+11,w
  3670  0EA0  00B2               	movwf	??_UpdateTimes+14
  3671  0EA1  0830               	movf	??_UpdateTimes+12,w
  3672  0EA2  1803               	skipnc
  3673  0EA3  3E01               	addlw	1
  3674  0EA4  00B3               	movwf	??_UpdateTimes+15
  3675  0EA5  0832               	movf	??_UpdateTimes+14,w
  3676  0EA6  0084               	movwf	4
  3677  0EA7  1783               	bsf	3,7
  3678  0EA8  1C33               	btfss	??_UpdateTimes+15,0
  3679  0EA9  1383               	bcf	3,7
  3680  0EAA  082B               	movf	??_UpdateTimes+7,w
  3681  0EAB  0080               	movwf	0
  3682  0EAC  0A84               	incf	4,f
  3683  0EAD  082C               	movf	??_UpdateTimes+8,w
  3684  0EAE  0080               	movwf	0
  3685  0EAF                     l3122:	
  3686                           
  3687                           ;./CustomLib/TrafficLight.h: 11:         }
  3688  0EAF  3001               	movlw	1
  3689  0EB0  00A4               	movwf	??_UpdateTimes
  3690  0EB1  0824               	movf	??_UpdateTimes,w
  3691  0EB2  07B6               	addwf	UpdateTimes@i,f
  3692  0EB3                     l3124:	
  3693  0EB3  3003               	movlw	3
  3694  0EB4  0236               	subwf	UpdateTimes@i,w
  3695  0EB5  1C03               	skipc
  3696  0EB6  2EB8               	goto	u2591
  3697  0EB7  2EB9               	goto	u2590
  3698  0EB8                     u2591:	
  3699  0EB8  2E6E               	goto	l3120
  3700  0EB9                     u2590:	
  3701  0EB9                     l3126:	
  3702                           
  3703                           ;./CustomLib/TrafficLight.h: 12:     }
  3704  0EB9  3001               	movlw	1
  3705  0EBA  00A4               	movwf	??_UpdateTimes
  3706  0EBB  0824               	movf	??_UpdateTimes,w
  3707  0EBC  07B5               	addwf	UpdateTimes@l,f
  3708  0EBD                     l3128:	
  3709  0EBD  3010               	movlw	16
  3710  0EBE  0235               	subwf	UpdateTimes@l,w
  3711  0EBF  1C03               	skipc
  3712  0EC0  2EC2               	goto	u2601
  3713  0EC1  2EC3               	goto	u2600
  3714  0EC2                     u2601:	
  3715  0EC2  2E6D               	goto	l3114
  3716  0EC3                     u2600:	
  3717  0EC3                     l139:	
  3718  0EC3  0008               	return
  3719  0EC4                     __end_of_UpdateTimes:	
  3720                           
  3721                           	psect	text9
  3722  0C91                     __ptext9:	
  3723 ;; *************** function _UART_Init *****************
  3724 ;; Defined at:
  3725 ;;		line 364 in file "main.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  baudrate        2   19[BANK0 ] int 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;		None
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      void 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0, pclath, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3739 ;;      Params:         0       2       0       0       0
  3740 ;;      Locals:         0       0       0       0       0
  3741 ;;      Temps:          0       4       0       0       0
  3742 ;;      Totals:         0       6       0       0       0
  3743 ;;Total ram usage:        6 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:    4
  3746 ;; This function calls:
  3747 ;;		___aldiv
  3748 ;; This function is called by:
  3749 ;;		_main
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _UART_Init
  3755  0C91                     _UART_Init:	
  3756  0C91                     l3190:	
  3757                           ;incstack = 0
  3758                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3759                           
  3760                           
  3761                           ;main.c: 364: void UART_Init(int baudrate);main.c: 365: {;main.c: 366:     TRISCbits.TRI
      +                          SC6 = 0;
  3762  0C91  1683               	bsf	3,5	;RP0=1, select bank1
  3763  0C92  1303               	bcf	3,6	;RP1=0, select bank1
  3764  0C93  1307               	bcf	7,6	;volatile
  3765                           
  3766                           ;main.c: 367:     TXSTAbits.TXEN = 1;
  3767  0C94  1698               	bsf	24,5	;volatile
  3768                           
  3769                           ;main.c: 368:     RCSTAbits.SPEN = 1;
  3770  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0C97  1798               	bsf	24,7	;volatile
  3773                           
  3774                           ;main.c: 369:     RCSTAbits.CREN = 1;
  3775  0C98  1618               	bsf	24,4	;volatile
  3776  0C99                     l3192:	
  3777                           
  3778                           ;main.c: 370:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3779  0C99  0833               	movf	UART_Init@baudrate,w
  3780  0C9A  00B5               	movwf	??_UART_Init
  3781  0C9B  0834               	movf	UART_Init@baudrate+1,w
  3782  0C9C  00B6               	movwf	??_UART_Init+1
  3783  0C9D  3000               	movlw	0
  3784  0C9E  1BB6               	btfsc	??_UART_Init+1,7
  3785  0C9F  30FF               	movlw	255
  3786  0CA0  00B7               	movwf	??_UART_Init+2
  3787  0CA1  00B8               	movwf	??_UART_Init+3
  3788  0CA2  3006               	movlw	6
  3789  0CA3                     u2655:	
  3790  0CA3  1003               	clrc
  3791  0CA4  0DB5               	rlf	??_UART_Init,f
  3792  0CA5  0DB6               	rlf	??_UART_Init+1,f
  3793  0CA6  0DB7               	rlf	??_UART_Init+2,f
  3794  0CA7  0DB8               	rlf	??_UART_Init+3,f
  3795  0CA8                     u2650:	
  3796  0CA8  3EFF               	addlw	-1
  3797  0CA9  1D03               	skipz
  3798  0CAA  2CA3               	goto	u2655
  3799  0CAB  0838               	movf	??_UART_Init+3,w
  3800  0CAC  00A7               	movwf	___aldiv@divisor+3
  3801  0CAD  0837               	movf	??_UART_Init+2,w
  3802  0CAE  00A6               	movwf	___aldiv@divisor+2
  3803  0CAF  0836               	movf	??_UART_Init+1,w
  3804  0CB0  00A5               	movwf	___aldiv@divisor+1
  3805  0CB1  0835               	movf	??_UART_Init,w
  3806  0CB2  00A4               	movwf	___aldiv@divisor
  3807  0CB3  3001               	movlw	1
  3808  0CB4  00AB               	movwf	___aldiv@dividend+3
  3809  0CB5  30E8               	movlw	232
  3810  0CB6  00AA               	movwf	___aldiv@dividend+2
  3811  0CB7  3048               	movlw	72
  3812  0CB8  00A9               	movwf	___aldiv@dividend+1
  3813  0CB9  3000               	movlw	0
  3814  0CBA  00A8               	movwf	___aldiv@dividend
  3815  0CBB  120A  118A  2600  120A  158A  	fcall	___aldiv
  3816  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3817  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3818  0CC2  0824               	movf	?___aldiv,w
  3819  0CC3  3EFF               	addlw	255
  3820  0CC4  1683               	bsf	3,5	;RP0=1, select bank1
  3821  0CC5  1303               	bcf	3,6	;RP1=0, select bank1
  3822  0CC6  0099               	movwf	25	;volatile
  3823  0CC7                     l3194:	
  3824                           
  3825                           ;main.c: 371:     INTCONbits.GIE = 1;
  3826  0CC7  178B               	bsf	11,7	;volatile
  3827  0CC8                     l3196:	
  3828                           
  3829                           ;main.c: 372:     INTCONbits.PEIE = 1;
  3830  0CC8  170B               	bsf	11,6	;volatile
  3831  0CC9                     l3198:	
  3832                           
  3833                           ;main.c: 373:     PIE1bits.RCIE = 1;
  3834  0CC9  168C               	bsf	12,5	;volatile
  3835  0CCA                     l297:	
  3836  0CCA  0008               	return
  3837  0CCB                     __end_of_UART_Init:	
  3838                           
  3839                           	psect	text10
  3840  0600                     __ptext10:	
  3841 ;; *************** function ___aldiv *****************
  3842 ;; Defined at:
  3843 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  divisor         4    4[BANK0 ] long 
  3846 ;;  dividend        4    8[BANK0 ] long 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  quotient        4   15[BANK0 ] long 
  3849 ;;  sign            1   14[BANK0 ] unsigned char 
  3850 ;;  counter         1   13[BANK0 ] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  4    4[BANK0 ] long 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3860 ;;      Params:         0       8       0       0       0
  3861 ;;      Locals:         0       6       0       0       0
  3862 ;;      Temps:          0       1       0       0       0
  3863 ;;      Totals:         0      15       0       0       0
  3864 ;;Total ram usage:       15 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    3
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_UART_Init
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function ___aldiv
  3876  0600                     ___aldiv:	
  3877  0600                     l2970:	
  3878                           ;incstack = 0
  3879                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3880                           
  3881  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3882  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3883  0602  01AE               	clrf	___aldiv@sign
  3884  0603                     l2972:	
  3885  0603  1FA7               	btfss	___aldiv@divisor+3,7
  3886  0604  2E06               	goto	u2291
  3887  0605  2E07               	goto	u2290
  3888  0606                     u2291:	
  3889  0606  2E14               	goto	l509
  3890  0607                     u2290:	
  3891  0607                     l2974:	
  3892  0607  09A4               	comf	___aldiv@divisor,f
  3893  0608  09A5               	comf	___aldiv@divisor+1,f
  3894  0609  09A6               	comf	___aldiv@divisor+2,f
  3895  060A  09A7               	comf	___aldiv@divisor+3,f
  3896  060B  0AA4               	incf	___aldiv@divisor,f
  3897  060C  1903               	skipnz
  3898  060D  0AA5               	incf	___aldiv@divisor+1,f
  3899  060E  1903               	skipnz
  3900  060F  0AA6               	incf	___aldiv@divisor+2,f
  3901  0610  1903               	skipnz
  3902  0611  0AA7               	incf	___aldiv@divisor+3,f
  3903  0612  01AE               	clrf	___aldiv@sign
  3904  0613  0AAE               	incf	___aldiv@sign,f
  3905  0614                     l509:	
  3906  0614  1FAB               	btfss	___aldiv@dividend+3,7
  3907  0615  2E17               	goto	u2301
  3908  0616  2E18               	goto	u2300
  3909  0617                     u2301:	
  3910  0617  2E27               	goto	l2980
  3911  0618                     u2300:	
  3912  0618                     l2976:	
  3913  0618  09A8               	comf	___aldiv@dividend,f
  3914  0619  09A9               	comf	___aldiv@dividend+1,f
  3915  061A  09AA               	comf	___aldiv@dividend+2,f
  3916  061B  09AB               	comf	___aldiv@dividend+3,f
  3917  061C  0AA8               	incf	___aldiv@dividend,f
  3918  061D  1903               	skipnz
  3919  061E  0AA9               	incf	___aldiv@dividend+1,f
  3920  061F  1903               	skipnz
  3921  0620  0AAA               	incf	___aldiv@dividend+2,f
  3922  0621  1903               	skipnz
  3923  0622  0AAB               	incf	___aldiv@dividend+3,f
  3924  0623                     l2978:	
  3925  0623  3001               	movlw	1
  3926  0624  00AC               	movwf	??___aldiv
  3927  0625  082C               	movf	??___aldiv,w
  3928  0626  06AE               	xorwf	___aldiv@sign,f
  3929  0627                     l2980:	
  3930  0627  3000               	movlw	0
  3931  0628  00B2               	movwf	___aldiv@quotient+3
  3932  0629  3000               	movlw	0
  3933  062A  00B1               	movwf	___aldiv@quotient+2
  3934  062B  3000               	movlw	0
  3935  062C  00B0               	movwf	___aldiv@quotient+1
  3936  062D  3000               	movlw	0
  3937  062E  00AF               	movwf	___aldiv@quotient
  3938  062F                     l2982:	
  3939  062F  0827               	movf	___aldiv@divisor+3,w
  3940  0630  0426               	iorwf	___aldiv@divisor+2,w
  3941  0631  0425               	iorwf	___aldiv@divisor+1,w
  3942  0632  0424               	iorwf	___aldiv@divisor,w
  3943  0633  1903               	skipnz
  3944  0634  2E36               	goto	u2311
  3945  0635  2E37               	goto	u2310
  3946  0636                     u2311:	
  3947  0636  2E84               	goto	l3002
  3948  0637                     u2310:	
  3949  0637                     l2984:	
  3950  0637  01AD               	clrf	___aldiv@counter
  3951  0638  0AAD               	incf	___aldiv@counter,f
  3952  0639  2E47               	goto	l2988
  3953  063A                     l2986:	
  3954  063A  3001               	movlw	1
  3955  063B  00AC               	movwf	??___aldiv
  3956  063C                     u2325:	
  3957  063C  1003               	clrc
  3958  063D  0DA4               	rlf	___aldiv@divisor,f
  3959  063E  0DA5               	rlf	___aldiv@divisor+1,f
  3960  063F  0DA6               	rlf	___aldiv@divisor+2,f
  3961  0640  0DA7               	rlf	___aldiv@divisor+3,f
  3962  0641  0BAC               	decfsz	??___aldiv,f
  3963  0642  2E3C               	goto	u2325
  3964  0643  3001               	movlw	1
  3965  0644  00AC               	movwf	??___aldiv
  3966  0645  082C               	movf	??___aldiv,w
  3967  0646  07AD               	addwf	___aldiv@counter,f
  3968  0647                     l2988:	
  3969  0647  1FA7               	btfss	___aldiv@divisor+3,7
  3970  0648  2E4A               	goto	u2331
  3971  0649  2E4B               	goto	u2330
  3972  064A                     u2331:	
  3973  064A  2E3A               	goto	l2986
  3974  064B                     u2330:	
  3975  064B                     l2990:	
  3976  064B  3001               	movlw	1
  3977  064C  00AC               	movwf	??___aldiv
  3978  064D                     u2345:	
  3979  064D  1003               	clrc
  3980  064E  0DAF               	rlf	___aldiv@quotient,f
  3981  064F  0DB0               	rlf	___aldiv@quotient+1,f
  3982  0650  0DB1               	rlf	___aldiv@quotient+2,f
  3983  0651  0DB2               	rlf	___aldiv@quotient+3,f
  3984  0652  0BAC               	decfsz	??___aldiv,f
  3985  0653  2E4D               	goto	u2345
  3986  0654                     l2992:	
  3987  0654  0827               	movf	___aldiv@divisor+3,w
  3988  0655  022B               	subwf	___aldiv@dividend+3,w
  3989  0656  1D03               	skipz
  3990  0657  2E62               	goto	u2355
  3991  0658  0826               	movf	___aldiv@divisor+2,w
  3992  0659  022A               	subwf	___aldiv@dividend+2,w
  3993  065A  1D03               	skipz
  3994  065B  2E62               	goto	u2355
  3995  065C  0825               	movf	___aldiv@divisor+1,w
  3996  065D  0229               	subwf	___aldiv@dividend+1,w
  3997  065E  1D03               	skipz
  3998  065F  2E62               	goto	u2355
  3999  0660  0824               	movf	___aldiv@divisor,w
  4000  0661  0228               	subwf	___aldiv@dividend,w
  4001  0662                     u2355:	
  4002  0662  1C03               	skipc
  4003  0663  2E65               	goto	u2351
  4004  0664  2E66               	goto	u2350
  4005  0665                     u2351:	
  4006  0665  2E75               	goto	l2998
  4007  0666                     u2350:	
  4008  0666                     l2994:	
  4009  0666  0824               	movf	___aldiv@divisor,w
  4010  0667  02A8               	subwf	___aldiv@dividend,f
  4011  0668  0825               	movf	___aldiv@divisor+1,w
  4012  0669  1C03               	skipc
  4013  066A  0F25               	incfsz	___aldiv@divisor+1,w
  4014  066B  02A9               	subwf	___aldiv@dividend+1,f
  4015  066C  0826               	movf	___aldiv@divisor+2,w
  4016  066D  1C03               	skipc
  4017  066E  0F26               	incfsz	___aldiv@divisor+2,w
  4018  066F  02AA               	subwf	___aldiv@dividend+2,f
  4019  0670  0827               	movf	___aldiv@divisor+3,w
  4020  0671  1C03               	skipc
  4021  0672  0F27               	incfsz	___aldiv@divisor+3,w
  4022  0673  02AB               	subwf	___aldiv@dividend+3,f
  4023  0674                     l2996:	
  4024  0674  142F               	bsf	___aldiv@quotient,0
  4025  0675                     l2998:	
  4026  0675  3001               	movlw	1
  4027  0676                     u2365:	
  4028  0676  1003               	clrc
  4029  0677  0CA7               	rrf	___aldiv@divisor+3,f
  4030  0678  0CA6               	rrf	___aldiv@divisor+2,f
  4031  0679  0CA5               	rrf	___aldiv@divisor+1,f
  4032  067A  0CA4               	rrf	___aldiv@divisor,f
  4033  067B  3EFF               	addlw	-1
  4034  067C  1D03               	skipz
  4035  067D  2E76               	goto	u2365
  4036  067E                     l3000:	
  4037  067E  3001               	movlw	1
  4038  067F  02AD               	subwf	___aldiv@counter,f
  4039  0680  1D03               	btfss	3,2
  4040  0681  2E83               	goto	u2371
  4041  0682  2E84               	goto	u2370
  4042  0683                     u2371:	
  4043  0683  2E4B               	goto	l2990
  4044  0684                     u2370:	
  4045  0684                     l3002:	
  4046  0684  082E               	movf	___aldiv@sign,w
  4047  0685  1903               	btfsc	3,2
  4048  0686  2E88               	goto	u2381
  4049  0687  2E89               	goto	u2380
  4050  0688                     u2381:	
  4051  0688  2E94               	goto	l3006
  4052  0689                     u2380:	
  4053  0689                     l3004:	
  4054  0689  09AF               	comf	___aldiv@quotient,f
  4055  068A  09B0               	comf	___aldiv@quotient+1,f
  4056  068B  09B1               	comf	___aldiv@quotient+2,f
  4057  068C  09B2               	comf	___aldiv@quotient+3,f
  4058  068D  0AAF               	incf	___aldiv@quotient,f
  4059  068E  1903               	skipnz
  4060  068F  0AB0               	incf	___aldiv@quotient+1,f
  4061  0690  1903               	skipnz
  4062  0691  0AB1               	incf	___aldiv@quotient+2,f
  4063  0692  1903               	skipnz
  4064  0693  0AB2               	incf	___aldiv@quotient+3,f
  4065  0694                     l3006:	
  4066  0694  0832               	movf	___aldiv@quotient+3,w
  4067  0695  00A7               	movwf	?___aldiv+3
  4068  0696  0831               	movf	___aldiv@quotient+2,w
  4069  0697  00A6               	movwf	?___aldiv+2
  4070  0698  0830               	movf	___aldiv@quotient+1,w
  4071  0699  00A5               	movwf	?___aldiv+1
  4072  069A  082F               	movf	___aldiv@quotient,w
  4073  069B  00A4               	movwf	?___aldiv
  4074  069C                     l519:	
  4075  069C  0008               	return
  4076  069D                     __end_of___aldiv:	
  4077                           
  4078                           	psect	text11
  4079  0F92                     __ptext11:	
  4080 ;; *************** function _SetReceivedTimes *****************
  4081 ;; Defined at:
  4082 ;;		line 73 in file "./CustomLib/TrafficLight.h"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4085 ;;		 -> dataFromGateway(15), 
  4086 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4087 ;;		 -> Semafori(16), 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  _dataFromGat    1   23[BANK0 ] PTR unsigned char 
  4090 ;;		 -> dataFromGateway(15), 
  4091 ;;  index           1   24[BANK0 ] unsigned char 
  4092 ;;  colorId         1   22[BANK0 ] unsigned char 
  4093 ;;  semaforoId      1   21[BANK0 ] unsigned char 
  4094 ;;  i               1   25[BANK0 ] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       1       0       0       0
  4105 ;;      Locals:         0       5       0       0       0
  4106 ;;      Temps:          0       8       0       0       0
  4107 ;;      Totals:         0      14       0       0       0
  4108 ;;Total ram usage:       14 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    4
  4111 ;; This function calls:
  4112 ;;		_GetTime
  4113 ;;		___bmul
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function _SetReceivedTimes
  4121  0F92                     _SetReceivedTimes:	
  4122                           
  4123                           ;incstack = 0
  4124                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4125                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4126  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0F94  00B7               	movwf	SetReceivedTimes@_dataFromGateway
  4129  0F95                     l3164:	
  4130                           
  4131                           ;./CustomLib/TrafficLight.h: 73: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 74: {;./CustomLib/TrafficLight.h: 75:   
      +                                        for (unsigned char i = 0; i < 3; i++)
  4132  0F95  01B9               	clrf	SetReceivedTimes@i
  4133  0F96                     l3166:	
  4134  0F96  3003               	movlw	3
  4135  0F97  0239               	subwf	SetReceivedTimes@i,w
  4136  0F98  1C03               	skipc
  4137  0F99  2F9B               	goto	u2631
  4138  0F9A  2F9C               	goto	u2630
  4139  0F9B                     u2631:	
  4140  0F9B  2F9D               	goto	l3170
  4141  0F9C                     u2630:	
  4142  0F9C  2FFF               	goto	l166
  4143  0F9D                     l3170:	
  4144                           
  4145                           ;./CustomLib/TrafficLight.h: 76:                 {;./CustomLib/TrafficLight.h: 77:      
      +                                         unsigned char index = i * 5;
  4146  0F9D  3005               	movlw	5
  4147  0F9E  00AD               	movwf	??_SetReceivedTimes
  4148  0F9F  082D               	movf	??_SetReceivedTimes,w
  4149  0FA0  00A4               	movwf	___bmul@multiplicand
  4150  0FA1  0839               	movf	SetReceivedTimes@i,w
  4151  0FA2  120A  158A  23FC  120A  158A  	fcall	___bmul
  4152  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0FA9  00AE               	movwf	??_SetReceivedTimes+1
  4155  0FAA  082E               	movf	??_SetReceivedTimes+1,w
  4156  0FAB  00B8               	movwf	SetReceivedTimes@index
  4157  0FAC                     l3172:	
  4158                           
  4159                           ;./CustomLib/TrafficLight.h: 78:                     unsigned char semaforoId = (_dataFr
      +                          omGateway[index] >> 1) & 0x0F;
  4160  0FAC  0838               	movf	SetReceivedTimes@index,w
  4161  0FAD  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4162  0FAE  00AD               	movwf	??_SetReceivedTimes
  4163  0FAF  082D               	movf	??_SetReceivedTimes,w
  4164  0FB0  0084               	movwf	4
  4165  0FB1  1383               	bcf	3,7	;select IRP bank0
  4166  0FB2  0800               	movf	0,w
  4167  0FB3  00AE               	movwf	??_SetReceivedTimes+1
  4168  0FB4  1003               	clrc
  4169  0FB5  0C2E               	rrf	??_SetReceivedTimes+1,w
  4170  0FB6  390F               	andlw	15
  4171  0FB7  00AF               	movwf	??_SetReceivedTimes+2
  4172  0FB8  082F               	movf	??_SetReceivedTimes+2,w
  4173  0FB9  00B5               	movwf	SetReceivedTimes@semaforoId
  4174  0FBA                     l3174:	
  4175                           
  4176                           ;./CustomLib/TrafficLight.h: 79:                     unsigned char colorId = ((_dataFrom
      +                          Gateway[index] >> 5) & 0x03) - 1;
  4177  0FBA  0838               	movf	SetReceivedTimes@index,w
  4178  0FBB  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4179  0FBC  00AD               	movwf	??_SetReceivedTimes
  4180  0FBD  082D               	movf	??_SetReceivedTimes,w
  4181  0FBE  0084               	movwf	4
  4182  0FBF  0800               	movf	0,w
  4183  0FC0  00AE               	movwf	??_SetReceivedTimes+1
  4184  0FC1  3005               	movlw	5
  4185  0FC2                     u2645:	
  4186  0FC2  1003               	clrc
  4187  0FC3  0CAE               	rrf	??_SetReceivedTimes+1,f
  4188  0FC4  3EFF               	addlw	-1
  4189  0FC5  1D03               	skipz
  4190  0FC6  2FC2               	goto	u2645
  4191  0FC7  082E               	movf	??_SetReceivedTimes+1,w
  4192  0FC8  3903               	andlw	3
  4193  0FC9  3EFF               	addlw	255
  4194  0FCA  00AF               	movwf	??_SetReceivedTimes+2
  4195  0FCB  082F               	movf	??_SetReceivedTimes+2,w
  4196  0FCC  00B6               	movwf	SetReceivedTimes@colorId
  4197  0FCD                     l3176:	
  4198                           
  4199                           ;./CustomLib/TrafficLight.h: 81:                     (*(_semafori)[semaforoId]).new_time
      +                          s[colorId]=GetTime(index, _dataFromGateway);
  4200  0FCD  0837               	movf	SetReceivedTimes@_dataFromGateway,w
  4201  0FCE  00AD               	movwf	??_SetReceivedTimes
  4202  0FCF  082D               	movf	??_SetReceivedTimes,w
  4203  0FD0  00A4               	movwf	GetTime@_dataFromGateway
  4204  0FD1  0838               	movf	SetReceivedTimes@index,w
  4205  0FD2  120A  158A  24CB  120A  158A  	fcall	_GetTime
  4206  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  4208  0FD9  0835               	movf	SetReceivedTimes@semaforoId,w
  4209  0FDA  00AE               	movwf	??_SetReceivedTimes+1
  4210  0FDB  072E               	addwf	??_SetReceivedTimes+1,w
  4211  0FDC  072C               	addwf	SetReceivedTimes@_semafori,w
  4212  0FDD  00AF               	movwf	??_SetReceivedTimes+2
  4213  0FDE  082F               	movf	??_SetReceivedTimes+2,w
  4214  0FDF  0084               	movwf	4
  4215  0FE0  1383               	bcf	3,7	;select IRP bank0
  4216  0FE1  0800               	movf	0,w
  4217  0FE2  00B0               	movwf	??_SetReceivedTimes+3
  4218  0FE3  0A84               	incf	4,f
  4219  0FE4  0800               	movf	0,w
  4220  0FE5  00B1               	movwf	??_SetReceivedTimes+4
  4221  0FE6  0836               	movf	SetReceivedTimes@colorId,w
  4222  0FE7  00B2               	movwf	??_SetReceivedTimes+5
  4223  0FE8  0732               	addwf	??_SetReceivedTimes+5,w
  4224  0FE9  3E06               	addlw	6
  4225  0FEA  0730               	addwf	??_SetReceivedTimes+3,w
  4226  0FEB  00B3               	movwf	??_SetReceivedTimes+6
  4227  0FEC  0831               	movf	??_SetReceivedTimes+4,w
  4228  0FED  1803               	skipnc
  4229  0FEE  3E01               	addlw	1
  4230  0FEF  00B4               	movwf	??_SetReceivedTimes+7
  4231  0FF0  0833               	movf	??_SetReceivedTimes+6,w
  4232  0FF1  0084               	movwf	4
  4233  0FF2  1783               	bsf	3,7
  4234  0FF3  1C34               	btfss	??_SetReceivedTimes+7,0
  4235  0FF4  1383               	bcf	3,7
  4236  0FF5  0824               	movf	?_GetTime,w
  4237  0FF6  0080               	movwf	0
  4238  0FF7  0A84               	incf	4,f
  4239  0FF8  0825               	movf	?_GetTime+1,w
  4240  0FF9  0080               	movwf	0
  4241  0FFA                     l3178:	
  4242                           
  4243                           ;./CustomLib/TrafficLight.h: 82:                 }
  4244  0FFA  3001               	movlw	1
  4245  0FFB  00AD               	movwf	??_SetReceivedTimes
  4246  0FFC  082D               	movf	??_SetReceivedTimes,w
  4247  0FFD  07B9               	addwf	SetReceivedTimes@i,f
  4248  0FFE  2F96               	goto	l3166
  4249  0FFF                     l166:	
  4250  0FFF  0008               	return
  4251  1000                     __end_of_SetReceivedTimes:	
  4252                           
  4253                           	psect	text12
  4254  0BFC                     __ptext12:	
  4255 ;; *************** function ___bmul *****************
  4256 ;; Defined at:
  4257 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  multiplier      1    wreg     unsigned char 
  4260 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4263 ;;  product         1    6[BANK0 ] unsigned char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      unsigned char 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4273 ;;      Params:         0       1       0       0       0
  4274 ;;      Locals:         0       2       0       0       0
  4275 ;;      Temps:          0       1       0       0       0
  4276 ;;      Totals:         0       4       0       0       0
  4277 ;;Total ram usage:        4 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    3
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_SetReceivedTimes
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function ___bmul
  4289  0BFC                     ___bmul:	
  4290                           
  4291                           ;incstack = 0
  4292                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4293                           ;___bmul@multiplier stored from wreg
  4294  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0BFE  00A7               	movwf	___bmul@multiplier
  4297  0BFF                     l2956:	
  4298  0BFF  01A6               	clrf	___bmul@product
  4299  0C00                     l2958:	
  4300  0C00  1C27               	btfss	___bmul@multiplier,0
  4301  0C01  2C03               	goto	u2271
  4302  0C02  2C04               	goto	u2270
  4303  0C03                     u2271:	
  4304  0C03  2C08               	goto	l2962
  4305  0C04                     u2270:	
  4306  0C04                     l2960:	
  4307  0C04  0824               	movf	___bmul@multiplicand,w
  4308  0C05  00A5               	movwf	??___bmul
  4309  0C06  0825               	movf	??___bmul,w
  4310  0C07  07A6               	addwf	___bmul@product,f
  4311  0C08                     l2962:	
  4312  0C08  1003               	clrc
  4313  0C09  0DA4               	rlf	___bmul@multiplicand,f
  4314  0C0A                     l2964:	
  4315  0C0A  1003               	clrc
  4316  0C0B  0CA7               	rrf	___bmul@multiplier,f
  4317  0C0C  0827               	movf	___bmul@multiplier,w
  4318  0C0D  1D03               	btfss	3,2
  4319  0C0E  2C10               	goto	u2281
  4320  0C0F  2C11               	goto	u2280
  4321  0C10                     u2281:	
  4322  0C10  2C00               	goto	l2958
  4323  0C11                     u2280:	
  4324  0C11                     l2966:	
  4325  0C11  0826               	movf	___bmul@product,w
  4326  0C12                     l470:	
  4327  0C12  0008               	return
  4328  0C13                     __end_of___bmul:	
  4329                           
  4330                           	psect	text13
  4331  0CCB                     __ptext13:	
  4332 ;; *************** function _GetTime *****************
  4333 ;; Defined at:
  4334 ;;		line 29 in file "./CustomLib/TrafficLight.h"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  index           1    wreg     unsigned char 
  4337 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4338 ;;		 -> dataFromGateway(15), 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  index           1    8[BANK0 ] unsigned char 
  4341 ;;  tmp             2   10[BANK0 ] int 
  4342 ;;  shortInt        1    9[BANK0 ] struct .
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  2    4[BANK0 ] int 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4352 ;;      Params:         0       2       0       0       0
  4353 ;;      Locals:         0       4       0       0       0
  4354 ;;      Temps:          0       2       0       0       0
  4355 ;;      Totals:         0       8       0       0       0
  4356 ;;Total ram usage:        8 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    3
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_SetReceivedTimes
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           
  4367                           ;psect for function _GetTime
  4368  0CCB                     _GetTime:	
  4369                           
  4370                           ;incstack = 0
  4371                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4372                           ;GetTime@index stored from wreg
  4373  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  4374  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  4375  0CCD  00A8               	movwf	GetTime@index
  4376  0CCE                     l2924:	
  4377                           
  4378                           ;./CustomLib/TrafficLight.h: 29: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 30: {;./CustomLib/TrafficLight.h: 31:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 35:     } shortInt;;./CustomLib/TrafficLight.h: 37:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4379  0CCE  0828               	movf	GetTime@index,w
  4380  0CCF  0724               	addwf	GetTime@_dataFromGateway,w
  4381  0CD0  00A6               	movwf	??_GetTime
  4382  0CD1  0826               	movf	??_GetTime,w
  4383  0CD2  3E03               	addlw	3
  4384  0CD3  0084               	movwf	4
  4385  0CD4  307F               	movlw	127
  4386  0CD5  1383               	bcf	3,7	;select IRP bank0
  4387  0CD6  0500               	andwf	0,w
  4388  0CD7  00A7               	movwf	??_GetTime+1
  4389  0CD8  0829               	movf	GetTime@shortInt,w
  4390  0CD9  0627               	xorwf	??_GetTime+1,w
  4391  0CDA  3980               	andlw	-128
  4392  0CDB  0627               	xorwf	??_GetTime+1,w
  4393  0CDC  00A9               	movwf	GetTime@shortInt
  4394  0CDD                     l2926:	
  4395                           
  4396                           ;./CustomLib/TrafficLight.h: 38:     tmp = shortInt.Val;
  4397  0CDD  0829               	movf	GetTime@shortInt,w
  4398  0CDE  397F               	andlw	127
  4399  0CDF  00A6               	movwf	??_GetTime
  4400  0CE0  01A7               	clrf	??_GetTime+1
  4401  0CE1  0826               	movf	??_GetTime,w
  4402  0CE2  00AA               	movwf	GetTime@tmp
  4403  0CE3  0827               	movf	??_GetTime+1,w
  4404  0CE4  00AB               	movwf	GetTime@tmp+1
  4405  0CE5                     l2928:	
  4406                           
  4407                           ;./CustomLib/TrafficLight.h: 39:     tmp = (tmp << 7) & 0x80;
  4408  0CE5  082B               	movf	GetTime@tmp+1,w
  4409  0CE6  00A7               	movwf	??_GetTime+1
  4410  0CE7  082A               	movf	GetTime@tmp,w
  4411  0CE8  00A6               	movwf	??_GetTime
  4412  0CE9  3007               	movlw	7
  4413  0CEA  00FF               	movwf	btemp+1
  4414  0CEB                     u2215:	
  4415  0CEB  1003               	clrc
  4416  0CEC  0DA6               	rlf	??_GetTime,f
  4417  0CED  0DA7               	rlf	??_GetTime+1,f
  4418  0CEE  0BFF               	decfsz	btemp+1,f
  4419  0CEF  2CEB               	goto	u2215
  4420  0CF0  3080               	movlw	128
  4421  0CF1  0526               	andwf	??_GetTime,w
  4422  0CF2  00AA               	movwf	GetTime@tmp
  4423  0CF3  3000               	movlw	0
  4424  0CF4  0527               	andwf	??_GetTime+1,w
  4425  0CF5  00AB               	movwf	GetTime@tmp+1
  4426  0CF6                     l2930:	
  4427                           
  4428                           ;./CustomLib/TrafficLight.h: 41:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4429  0CF6  0828               	movf	GetTime@index,w
  4430  0CF7  0724               	addwf	GetTime@_dataFromGateway,w
  4431  0CF8  00A6               	movwf	??_GetTime
  4432  0CF9  0826               	movf	??_GetTime,w
  4433  0CFA  3E02               	addlw	2
  4434  0CFB  0084               	movwf	4
  4435  0CFC  307F               	movlw	127
  4436  0CFD  0500               	andwf	0,w
  4437  0CFE  00A7               	movwf	??_GetTime+1
  4438  0CFF  0829               	movf	GetTime@shortInt,w
  4439  0D00  0627               	xorwf	??_GetTime+1,w
  4440  0D01  3980               	andlw	-128
  4441  0D02  0627               	xorwf	??_GetTime+1,w
  4442  0D03  00A9               	movwf	GetTime@shortInt
  4443  0D04                     l2932:	
  4444                           
  4445                           ;./CustomLib/TrafficLight.h: 42:     tmp = tmp | shortInt.Val;
  4446  0D04  0829               	movf	GetTime@shortInt,w
  4447  0D05  397F               	andlw	127
  4448  0D06  00A6               	movwf	??_GetTime
  4449  0D07  082A               	movf	GetTime@tmp,w
  4450  0D08  0426               	iorwf	??_GetTime,w
  4451  0D09  00AA               	movwf	GetTime@tmp
  4452  0D0A  082B               	movf	GetTime@tmp+1,w
  4453  0D0B  00AB               	movwf	GetTime@tmp+1
  4454  0D0C                     l2934:	
  4455                           
  4456                           ;./CustomLib/TrafficLight.h: 44:     return tmp;
  4457  0D0C  082B               	movf	GetTime@tmp+1,w
  4458  0D0D  00A5               	movwf	?_GetTime+1
  4459  0D0E  082A               	movf	GetTime@tmp,w
  4460  0D0F  00A4               	movwf	?_GetTime
  4461  0D10                     l149:	
  4462  0D10  0008               	return
  4463  0D11                     __end_of_GetTime:	
  4464                           
  4465                           	psect	text14
  4466  0BE7                     __ptext14:	
  4467 ;; *************** function _SetDisplay *****************
  4468 ;; Defined at:
  4469 ;;		line 414 in file "main.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  d1              1    wreg     unsigned char 
  4472 ;;  d2              1    4[BANK0 ] unsigned char 
  4473 ;;  d3              1    5[BANK0 ] unsigned char 
  4474 ;;  value           1    6[BANK0 ] unsigned char 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  d1              1    7[BANK0 ] unsigned char 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,0
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4486 ;;      Params:         0       3       0       0       0
  4487 ;;      Locals:         0       1       0       0       0
  4488 ;;      Temps:          0       0       0       0       0
  4489 ;;      Totals:         0       4       0       0       0
  4490 ;;Total ram usage:        4 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    3
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_main
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _SetDisplay
  4502  0BE7                     _SetDisplay:	
  4503                           
  4504                           ;incstack = 0
  4505                           ; Regs used in _SetDisplay: [wreg+status,0]
  4506                           ;SetDisplay@d1 stored from wreg
  4507  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  4508  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  4509  0BE9  00A7               	movwf	SetDisplay@d1
  4510  0BEA                     l3258:	
  4511                           
  4512                           ;main.c: 414: void SetDisplay(char d1, char d2, char d3, char value);main.c: 415: {;main
      +                          .c: 416:     PORTAbits.RA2 = d1;
  4513  0BEA  0C27               	rrf	SetDisplay@d1,w
  4514  0BEB  1C03               	skipc
  4515  0BEC  1105               	bcf	5,2	;volatile
  4516  0BED  1803               	skipnc
  4517  0BEE  1505               	bsf	5,2	;volatile
  4518                           
  4519                           ;main.c: 417:     PORTAbits.RA3 = d2;
  4520  0BEF  0C24               	rrf	SetDisplay@d2,w
  4521  0BF0  1C03               	skipc
  4522  0BF1  1185               	bcf	5,3	;volatile
  4523  0BF2  1803               	skipnc
  4524  0BF3  1585               	bsf	5,3	;volatile
  4525                           
  4526                           ;main.c: 418:     PORTAbits.RA4 = d3;
  4527  0BF4  0C25               	rrf	SetDisplay@d3,w
  4528  0BF5  1C03               	skipc
  4529  0BF6  1205               	bcf	5,4	;volatile
  4530  0BF7  1803               	skipnc
  4531  0BF8  1605               	bsf	5,4	;volatile
  4532  0BF9                     l3260:	
  4533                           
  4534                           ;main.c: 419:     PORTD = value;
  4535  0BF9  0826               	movf	SetDisplay@value,w
  4536  0BFA  0088               	movwf	8	;volatile
  4537  0BFB                     l323:	
  4538  0BFB  0008               	return
  4539  0BFC                     __end_of_SetDisplay:	
  4540                           
  4541                           	psect	text15
  4542  0739                     __ptext15:	
  4543 ;; *************** function _SetDefaultTimers *****************
  4544 ;; Defined at:
  4545 ;;		line 49 in file "./CustomLib/TrafficLight.h"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  rosso           2    4[BANK0 ] int 
  4548 ;;  verde           2    6[BANK0 ] int 
  4549 ;;  giallo          2    8[BANK0 ] int 
  4550 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4551 ;;		 -> Semafori(16), 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  i               1   19[BANK0 ] unsigned char 
  4554 ;;  l               1   18[BANK0 ] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4564 ;;      Params:         0       7       0       0       0
  4565 ;;      Locals:         0       2       0       0       0
  4566 ;;      Temps:          0       7       0       0       0
  4567 ;;      Totals:         0      16       0       0       0
  4568 ;;Total ram usage:       16 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:    3
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _SetDefaultTimers
  4580  0739                     _SetDefaultTimers:	
  4581  0739                     l3130:	
  4582                           ;incstack = 0
  4583                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4584                           
  4585                           
  4586                           ;./CustomLib/TrafficLight.h: 49: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 50: {;./CustomLib/TrafficLight.h: 51: 
      +                              for (unsigned char l = 0; l < 16; l++)
  4587  0739  1283               	bcf	3,5	;RP0=0, select bank0
  4588  073A  1303               	bcf	3,6	;RP1=0, select bank0
  4589  073B  01B2               	clrf	SetDefaultTimers@l
  4590  073C                     l3136:	
  4591                           
  4592                           ;./CustomLib/TrafficLight.h: 52:     {;./CustomLib/TrafficLight.h: 53:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4593  073C  01B3               	clrf	SetDefaultTimers@i
  4594  073D  2FA1               	goto	l3150
  4595  073E                     l3142:	
  4596                           
  4597                           ;./CustomLib/TrafficLight.h: 58:                 (*(_semafori)[l]).times[i] = rosso;
  4598  073E  0832               	movf	SetDefaultTimers@l,w
  4599  073F  00AB               	movwf	??_SetDefaultTimers
  4600  0740  072B               	addwf	??_SetDefaultTimers,w
  4601  0741  072A               	addwf	SetDefaultTimers@_semafori,w
  4602  0742  00AC               	movwf	??_SetDefaultTimers+1
  4603  0743  082C               	movf	??_SetDefaultTimers+1,w
  4604  0744  0084               	movwf	4
  4605  0745  1383               	bcf	3,7	;select IRP bank0
  4606  0746  0800               	movf	0,w
  4607  0747  00AD               	movwf	??_SetDefaultTimers+2
  4608  0748  0A84               	incf	4,f
  4609  0749  0800               	movf	0,w
  4610  074A  00AE               	movwf	??_SetDefaultTimers+3
  4611  074B  0833               	movf	SetDefaultTimers@i,w
  4612  074C  00AF               	movwf	??_SetDefaultTimers+4
  4613  074D  072F               	addwf	??_SetDefaultTimers+4,w
  4614  074E  072D               	addwf	??_SetDefaultTimers+2,w
  4615  074F  00B0               	movwf	??_SetDefaultTimers+5
  4616  0750  082E               	movf	??_SetDefaultTimers+3,w
  4617  0751  1803               	skipnc
  4618  0752  3E01               	addlw	1
  4619  0753  00B1               	movwf	??_SetDefaultTimers+6
  4620  0754  0830               	movf	??_SetDefaultTimers+5,w
  4621  0755  0084               	movwf	4
  4622  0756  1783               	bsf	3,7
  4623  0757  1C31               	btfss	??_SetDefaultTimers+6,0
  4624  0758  1383               	bcf	3,7
  4625  0759  0824               	movf	SetDefaultTimers@rosso,w
  4626  075A  0080               	movwf	0
  4627  075B  0A84               	incf	4,f
  4628  075C  0825               	movf	SetDefaultTimers@rosso+1,w
  4629  075D  0080               	movwf	0
  4630                           
  4631                           ;./CustomLib/TrafficLight.h: 59:                 break;
  4632  075E  2FB4               	goto	l3152
  4633  075F                     l3144:	
  4634                           
  4635                           ;./CustomLib/TrafficLight.h: 61:                 (*(_semafori)[l]).times[i] = verde;
  4636  075F  0832               	movf	SetDefaultTimers@l,w
  4637  0760  00AB               	movwf	??_SetDefaultTimers
  4638  0761  072B               	addwf	??_SetDefaultTimers,w
  4639  0762  072A               	addwf	SetDefaultTimers@_semafori,w
  4640  0763  00AC               	movwf	??_SetDefaultTimers+1
  4641  0764  082C               	movf	??_SetDefaultTimers+1,w
  4642  0765  0084               	movwf	4
  4643  0766  1383               	bcf	3,7	;select IRP bank0
  4644  0767  0800               	movf	0,w
  4645  0768  00AD               	movwf	??_SetDefaultTimers+2
  4646  0769  0A84               	incf	4,f
  4647  076A  0800               	movf	0,w
  4648  076B  00AE               	movwf	??_SetDefaultTimers+3
  4649  076C  0833               	movf	SetDefaultTimers@i,w
  4650  076D  00AF               	movwf	??_SetDefaultTimers+4
  4651  076E  072F               	addwf	??_SetDefaultTimers+4,w
  4652  076F  072D               	addwf	??_SetDefaultTimers+2,w
  4653  0770  00B0               	movwf	??_SetDefaultTimers+5
  4654  0771  082E               	movf	??_SetDefaultTimers+3,w
  4655  0772  1803               	skipnc
  4656  0773  3E01               	addlw	1
  4657  0774  00B1               	movwf	??_SetDefaultTimers+6
  4658  0775  0830               	movf	??_SetDefaultTimers+5,w
  4659  0776  0084               	movwf	4
  4660  0777  1783               	bsf	3,7
  4661  0778  1C31               	btfss	??_SetDefaultTimers+6,0
  4662  0779  1383               	bcf	3,7
  4663  077A  0826               	movf	SetDefaultTimers@verde,w
  4664  077B  0080               	movwf	0
  4665  077C  0A84               	incf	4,f
  4666  077D  0827               	movf	SetDefaultTimers@verde+1,w
  4667  077E  0080               	movwf	0
  4668                           
  4669                           ;./CustomLib/TrafficLight.h: 62:                 break;
  4670  077F  2FB4               	goto	l3152
  4671  0780                     l3146:	
  4672                           
  4673                           ;./CustomLib/TrafficLight.h: 64:                 (*(_semafori)[l]).times[i] = giallo;
  4674  0780  0832               	movf	SetDefaultTimers@l,w
  4675  0781  00AB               	movwf	??_SetDefaultTimers
  4676  0782  072B               	addwf	??_SetDefaultTimers,w
  4677  0783  072A               	addwf	SetDefaultTimers@_semafori,w
  4678  0784  00AC               	movwf	??_SetDefaultTimers+1
  4679  0785  082C               	movf	??_SetDefaultTimers+1,w
  4680  0786  0084               	movwf	4
  4681  0787  1383               	bcf	3,7	;select IRP bank0
  4682  0788  0800               	movf	0,w
  4683  0789  00AD               	movwf	??_SetDefaultTimers+2
  4684  078A  0A84               	incf	4,f
  4685  078B  0800               	movf	0,w
  4686  078C  00AE               	movwf	??_SetDefaultTimers+3
  4687  078D  0833               	movf	SetDefaultTimers@i,w
  4688  078E  00AF               	movwf	??_SetDefaultTimers+4
  4689  078F  072F               	addwf	??_SetDefaultTimers+4,w
  4690  0790  072D               	addwf	??_SetDefaultTimers+2,w
  4691  0791  00B0               	movwf	??_SetDefaultTimers+5
  4692  0792  082E               	movf	??_SetDefaultTimers+3,w
  4693  0793  1803               	skipnc
  4694  0794  3E01               	addlw	1
  4695  0795  00B1               	movwf	??_SetDefaultTimers+6
  4696  0796  0830               	movf	??_SetDefaultTimers+5,w
  4697  0797  0084               	movwf	4
  4698  0798  1783               	bsf	3,7
  4699  0799  1C31               	btfss	??_SetDefaultTimers+6,0
  4700  079A  1383               	bcf	3,7
  4701  079B  0828               	movf	SetDefaultTimers@giallo,w
  4702  079C  0080               	movwf	0
  4703  079D  0A84               	incf	4,f
  4704  079E  0829               	movf	SetDefaultTimers@giallo+1,w
  4705  079F  0080               	movwf	0
  4706                           
  4707                           ;./CustomLib/TrafficLight.h: 65:                 break;
  4708  07A0  2FB4               	goto	l3152
  4709  07A1                     l3150:	
  4710  07A1  0833               	movf	SetDefaultTimers@i,w
  4711  07A2  00AB               	movwf	??_SetDefaultTimers
  4712  07A3  01AC               	clrf	??_SetDefaultTimers+1
  4713                           
  4714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4715                           ; Switch size 1, requested type "simple"
  4716                           ; Number of cases is 1, Range of values is 0 to 0
  4717                           ; switch strategies available:
  4718                           ; Name         Instructions Cycles
  4719                           ; simple_byte            4     3 (average)
  4720                           ; direct_byte           11     8 (fixed)
  4721                           ; jumptable            260     6 (fixed)
  4722                           ;	Chosen strategy is simple_byte
  4723  07A4  082C               	movf	??_SetDefaultTimers+1,w
  4724  07A5  3A00               	xorlw	0	; case 0
  4725  07A6  1903               	skipnz
  4726  07A7  2FA9               	goto	l3700
  4727  07A8  2FB4               	goto	l3152
  4728  07A9                     l3700:	
  4729                           
  4730                           ; Switch size 1, requested type "simple"
  4731                           ; Number of cases is 3, Range of values is 0 to 2
  4732                           ; switch strategies available:
  4733                           ; Name         Instructions Cycles
  4734                           ; simple_byte           10     6 (average)
  4735                           ; direct_byte           17     8 (fixed)
  4736                           ; jumptable            260     6 (fixed)
  4737                           ;	Chosen strategy is simple_byte
  4738  07A9  082B               	movf	??_SetDefaultTimers,w
  4739  07AA  3A00               	xorlw	0	; case 0
  4740  07AB  1903               	skipnz
  4741  07AC  2F3E               	goto	l3142
  4742  07AD  3A01               	xorlw	1	; case 1
  4743  07AE  1903               	skipnz
  4744  07AF  2F5F               	goto	l3144
  4745  07B0  3A03               	xorlw	3	; case 2
  4746  07B1  1903               	skipnz
  4747  07B2  2F80               	goto	l3146
  4748  07B3  2FB4               	goto	l3152
  4749  07B4                     l3152:	
  4750                           
  4751                           ;./CustomLib/TrafficLight.h: 67:         }
  4752  07B4  3001               	movlw	1
  4753  07B5  00AB               	movwf	??_SetDefaultTimers
  4754  07B6  082B               	movf	??_SetDefaultTimers,w
  4755  07B7  07B3               	addwf	SetDefaultTimers@i,f
  4756  07B8                     l3154:	
  4757  07B8  3003               	movlw	3
  4758  07B9  0233               	subwf	SetDefaultTimers@i,w
  4759  07BA  1C03               	skipc
  4760  07BB  2FBD               	goto	u2611
  4761  07BC  2FBE               	goto	u2610
  4762  07BD                     u2611:	
  4763  07BD  2FA1               	goto	l3150
  4764  07BE                     u2610:	
  4765  07BE                     l3156:	
  4766                           
  4767                           ;./CustomLib/TrafficLight.h: 68:     }
  4768  07BE  3001               	movlw	1
  4769  07BF  00AB               	movwf	??_SetDefaultTimers
  4770  07C0  082B               	movf	??_SetDefaultTimers,w
  4771  07C1  07B2               	addwf	SetDefaultTimers@l,f
  4772  07C2                     l3158:	
  4773  07C2  3010               	movlw	16
  4774  07C3  0232               	subwf	SetDefaultTimers@l,w
  4775  07C4  1C03               	skipc
  4776  07C5  2FC7               	goto	u2621
  4777  07C6  2FC8               	goto	u2620
  4778  07C7                     u2621:	
  4779  07C7  2F3C               	goto	l3136
  4780  07C8                     u2620:	
  4781  07C8                     l161:	
  4782  07C8  0008               	return
  4783  07C9                     __end_of_SetDefaultTimers:	
  4784                           
  4785                           	psect	text16
  4786  069D                     __ptext16:	
  4787 ;; *************** function _GetDigits *****************
  4788 ;; Defined at:
  4789 ;;		line 29 in file "./CustomLib/Conversions.h"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  centinaia       1    wreg     PTR unsigned char 
  4792 ;;		 -> centinaia(1), 
  4793 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  4794 ;;		 -> decine(1), 
  4795 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  4796 ;;		 -> unita(1), 
  4797 ;;  Time            2   22[BANK0 ] int 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  4800 ;;		 -> centinaia(1), 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4810 ;;      Params:         0       4       0       0       0
  4811 ;;      Locals:         0       3       0       0       0
  4812 ;;      Temps:          0       1       0       0       0
  4813 ;;      Totals:         0       8       0       0       0
  4814 ;;Total ram usage:        8 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    4
  4817 ;; This function calls:
  4818 ;;		___awdiv
  4819 ;;		___awmod
  4820 ;; This function is called by:
  4821 ;;		_main
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           
  4826                           ;psect for function _GetDigits
  4827  069D                     _GetDigits:	
  4828                           
  4829                           ;incstack = 0
  4830                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4831                           ;GetDigits@centinaia stored from wreg
  4832  069D  1283               	bcf	3,5	;RP0=0, select bank0
  4833  069E  1303               	bcf	3,6	;RP1=0, select bank0
  4834  069F  00BB               	movwf	GetDigits@centinaia
  4835  06A0                     l3096:	
  4836                           
  4837                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     while(Time/1000>0)
  4838  06A0  2EB6               	goto	l3100
  4839  06A1                     l3098:	
  4840                           
  4841                           ;./CustomLib/Conversions.h: 32:     {;./CustomLib/Conversions.h: 33:         Time=Time/1
      +                          0;
  4842  06A1  300A               	movlw	10
  4843  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  4844  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  4845  06A4  00AB               	movwf	___awdiv@divisor
  4846  06A5  3000               	movlw	0
  4847  06A6  00AC               	movwf	___awdiv@divisor+1
  4848  06A7  0837               	movf	GetDigits@Time+1,w
  4849  06A8  00AE               	movwf	___awdiv@dividend+1
  4850  06A9  0836               	movf	GetDigits@Time,w
  4851  06AA  00AD               	movwf	___awdiv@dividend
  4852  06AB  120A  158A  2729  120A  118A  	fcall	___awdiv
  4853  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  4854  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  4855  06B2  082C               	movf	?___awdiv+1,w
  4856  06B3  00B7               	movwf	GetDigits@Time+1
  4857  06B4  082B               	movf	?___awdiv,w
  4858  06B5  00B6               	movwf	GetDigits@Time
  4859  06B6                     l3100:	
  4860                           
  4861                           ;./CustomLib/Conversions.h: 31:     while(Time/1000>0)
  4862  06B6  30E8               	movlw	232
  4863  06B7  00AB               	movwf	___awdiv@divisor
  4864  06B8  3003               	movlw	3
  4865  06B9  00AC               	movwf	___awdiv@divisor+1
  4866  06BA  0837               	movf	GetDigits@Time+1,w
  4867  06BB  00AE               	movwf	___awdiv@dividend+1
  4868  06BC  0836               	movf	GetDigits@Time,w
  4869  06BD  00AD               	movwf	___awdiv@dividend
  4870  06BE  120A  158A  2729  120A  118A  	fcall	___awdiv
  4871  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  4872  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  4873  06C5  082C               	movf	?___awdiv+1,w
  4874  06C6  3A80               	xorlw	128
  4875  06C7  00FF               	movwf	btemp+1
  4876  06C8  3080               	movlw	128
  4877  06C9  027F               	subwf	btemp+1,w
  4878  06CA  1D03               	skipz
  4879  06CB  2ECE               	goto	u2585
  4880  06CC  3001               	movlw	1
  4881  06CD  022B               	subwf	?___awdiv,w
  4882  06CE                     u2585:	
  4883  06CE  1803               	skipnc
  4884  06CF  2ED1               	goto	u2581
  4885  06D0  2ED2               	goto	u2580
  4886  06D1                     u2581:	
  4887  06D1  2EA1               	goto	l3098
  4888  06D2                     u2580:	
  4889  06D2                     l3102:	
  4890                           
  4891                           ;./CustomLib/Conversions.h: 36:     *centinaia = Time / 100;
  4892  06D2  3064               	movlw	100
  4893  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  4894  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  4895  06D5  00AB               	movwf	___awdiv@divisor
  4896  06D6  3000               	movlw	0
  4897  06D7  00AC               	movwf	___awdiv@divisor+1
  4898  06D8  0837               	movf	GetDigits@Time+1,w
  4899  06D9  00AE               	movwf	___awdiv@dividend+1
  4900  06DA  0836               	movf	GetDigits@Time,w
  4901  06DB  00AD               	movwf	___awdiv@dividend
  4902  06DC  120A  158A  2729  120A  118A  	fcall	___awdiv
  4903  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  4904  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  4905  06E3  082B               	movf	?___awdiv,w
  4906  06E4  00B8               	movwf	??_GetDigits
  4907  06E5  083B               	movf	GetDigits@centinaia,w
  4908  06E6  0084               	movwf	4
  4909  06E7  0838               	movf	??_GetDigits,w
  4910  06E8  1383               	bcf	3,7	;select IRP bank0
  4911  06E9  0080               	movwf	0
  4912                           
  4913                           ;./CustomLib/Conversions.h: 37:     *decine = (Time % 100) / 10;
  4914  06EA  300A               	movlw	10
  4915  06EB  00AB               	movwf	___awdiv@divisor
  4916  06EC  3000               	movlw	0
  4917  06ED  00AC               	movwf	___awdiv@divisor+1
  4918  06EE  0837               	movf	GetDigits@Time+1,w
  4919  06EF  00A7               	movwf	___awmod@dividend+1
  4920  06F0  0836               	movf	GetDigits@Time,w
  4921  06F1  00A6               	movwf	___awmod@dividend
  4922  06F2  3064               	movlw	100
  4923  06F3  00A4               	movwf	___awmod@divisor
  4924  06F4  3000               	movlw	0
  4925  06F5  00A5               	movwf	___awmod@divisor+1
  4926  06F6  120A  158A  260E  120A  118A  	fcall	___awmod
  4927  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  4928  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  4929  06FD  0825               	movf	?___awmod+1,w
  4930  06FE  00AE               	movwf	___awdiv@dividend+1
  4931  06FF  0824               	movf	?___awmod,w
  4932  0700  00AD               	movwf	___awdiv@dividend
  4933  0701  120A  158A  2729  120A  118A  	fcall	___awdiv
  4934  0706  1283               	bcf	3,5	;RP0=0, select bank0
  4935  0707  1303               	bcf	3,6	;RP1=0, select bank0
  4936  0708  082B               	movf	?___awdiv,w
  4937  0709  00B8               	movwf	??_GetDigits
  4938  070A  0834               	movf	GetDigits@decine,w
  4939  070B  0084               	movwf	4
  4940  070C  0838               	movf	??_GetDigits,w
  4941  070D  1383               	bcf	3,7	;select IRP bank0
  4942  070E  0080               	movwf	0
  4943  070F                     l3104:	
  4944                           
  4945                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4946  070F  0837               	movf	GetDigits@Time+1,w
  4947  0710  00A7               	movwf	___awmod@dividend+1
  4948  0711  0836               	movf	GetDigits@Time,w
  4949  0712  00A6               	movwf	___awmod@dividend
  4950  0713  3064               	movlw	100
  4951  0714  00A4               	movwf	___awmod@divisor
  4952  0715  3000               	movlw	0
  4953  0716  00A5               	movwf	___awmod@divisor+1
  4954  0717  120A  158A  260E  120A  118A  	fcall	___awmod
  4955  071C  1283               	bcf	3,5	;RP0=0, select bank0
  4956  071D  1303               	bcf	3,6	;RP1=0, select bank0
  4957  071E  0825               	movf	?___awmod+1,w
  4958  071F  00BA               	movwf	_GetDigits$1222+1
  4959  0720  0824               	movf	?___awmod,w
  4960  0721  00B9               	movwf	_GetDigits$1222
  4961  0722                     l3106:	
  4962                           
  4963                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4964  0722  300A               	movlw	10
  4965  0723  00A4               	movwf	___awmod@divisor
  4966  0724  3000               	movlw	0
  4967  0725  00A5               	movwf	___awmod@divisor+1
  4968  0726  083A               	movf	_GetDigits$1222+1,w
  4969  0727  00A7               	movwf	___awmod@dividend+1
  4970  0728  0839               	movf	_GetDigits$1222,w
  4971  0729  00A6               	movwf	___awmod@dividend
  4972  072A  120A  158A  260E  120A  118A  	fcall	___awmod
  4973  072F  1283               	bcf	3,5	;RP0=0, select bank0
  4974  0730  1303               	bcf	3,6	;RP1=0, select bank0
  4975  0731  0824               	movf	?___awmod,w
  4976  0732  00B8               	movwf	??_GetDigits
  4977  0733  0835               	movf	GetDigits@unita,w
  4978  0734  0084               	movwf	4
  4979  0735  0838               	movf	??_GetDigits,w
  4980  0736  1383               	bcf	3,7	;select IRP bank0
  4981  0737  0080               	movwf	0
  4982  0738                     l98:	
  4983  0738  0008               	return
  4984  0739                     __end_of_GetDigits:	
  4985                           
  4986                           	psect	text17
  4987  0E0E                     __ptext17:	
  4988 ;; *************** function ___awmod *****************
  4989 ;; Defined at:
  4990 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  divisor         2    4[BANK0 ] int 
  4993 ;;  dividend        2    6[BANK0 ] int 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  sign            1   10[BANK0 ] unsigned char 
  4996 ;;  counter         1    9[BANK0 ] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  2    4[BANK0 ] int 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5006 ;;      Params:         0       4       0       0       0
  5007 ;;      Locals:         0       2       0       0       0
  5008 ;;      Temps:          0       1       0       0       0
  5009 ;;      Totals:         0       7       0       0       0
  5010 ;;Total ram usage:        7 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    3
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_GetDigits
  5017 ;;		_main
  5018 ;;		_intToString
  5019 ;;		_ChangeTrafficLight
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           
  5024                           ;psect for function ___awmod
  5025  0E0E                     ___awmod:	
  5026  0E0E                     l3054:	
  5027                           ;incstack = 0
  5028                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5029                           
  5030  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  5031  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  5032  0E10  01AA               	clrf	___awmod@sign
  5033  0E11                     l3056:	
  5034  0E11  1FA7               	btfss	___awmod@dividend+1,7
  5035  0E12  2E14               	goto	u2491
  5036  0E13  2E15               	goto	u2490
  5037  0E14                     u2491:	
  5038  0E14  2E1C               	goto	l3062
  5039  0E15                     u2490:	
  5040  0E15                     l3058:	
  5041  0E15  09A6               	comf	___awmod@dividend,f
  5042  0E16  09A7               	comf	___awmod@dividend+1,f
  5043  0E17  0AA6               	incf	___awmod@dividend,f
  5044  0E18  1903               	skipnz
  5045  0E19  0AA7               	incf	___awmod@dividend+1,f
  5046  0E1A                     l3060:	
  5047  0E1A  01AA               	clrf	___awmod@sign
  5048  0E1B  0AAA               	incf	___awmod@sign,f
  5049  0E1C                     l3062:	
  5050  0E1C  1FA5               	btfss	___awmod@divisor+1,7
  5051  0E1D  2E1F               	goto	u2501
  5052  0E1E  2E20               	goto	u2500
  5053  0E1F                     u2501:	
  5054  0E1F  2E25               	goto	l3066
  5055  0E20                     u2500:	
  5056  0E20                     l3064:	
  5057  0E20  09A4               	comf	___awmod@divisor,f
  5058  0E21  09A5               	comf	___awmod@divisor+1,f
  5059  0E22  0AA4               	incf	___awmod@divisor,f
  5060  0E23  1903               	skipnz
  5061  0E24  0AA5               	incf	___awmod@divisor+1,f
  5062  0E25                     l3066:	
  5063  0E25  0824               	movf	___awmod@divisor,w
  5064  0E26  0425               	iorwf	___awmod@divisor+1,w
  5065  0E27  1903               	btfsc	3,2
  5066  0E28  2E2A               	goto	u2511
  5067  0E29  2E2B               	goto	u2510
  5068  0E2A                     u2511:	
  5069  0E2A  2E5A               	goto	l3084
  5070  0E2B                     u2510:	
  5071  0E2B                     l3068:	
  5072  0E2B  01A9               	clrf	___awmod@counter
  5073  0E2C  0AA9               	incf	___awmod@counter,f
  5074  0E2D  2E39               	goto	l3074
  5075  0E2E                     l3070:	
  5076  0E2E  3001               	movlw	1
  5077  0E2F                     u2525:	
  5078  0E2F  1003               	clrc
  5079  0E30  0DA4               	rlf	___awmod@divisor,f
  5080  0E31  0DA5               	rlf	___awmod@divisor+1,f
  5081  0E32  3EFF               	addlw	-1
  5082  0E33  1D03               	skipz
  5083  0E34  2E2F               	goto	u2525
  5084  0E35                     l3072:	
  5085  0E35  3001               	movlw	1
  5086  0E36  00A8               	movwf	??___awmod
  5087  0E37  0828               	movf	??___awmod,w
  5088  0E38  07A9               	addwf	___awmod@counter,f
  5089  0E39                     l3074:	
  5090  0E39  1FA5               	btfss	___awmod@divisor+1,7
  5091  0E3A  2E3C               	goto	u2531
  5092  0E3B  2E3D               	goto	u2530
  5093  0E3C                     u2531:	
  5094  0E3C  2E2E               	goto	l3070
  5095  0E3D                     u2530:	
  5096  0E3D                     l3076:	
  5097  0E3D  0825               	movf	___awmod@divisor+1,w
  5098  0E3E  0227               	subwf	___awmod@dividend+1,w
  5099  0E3F  1D03               	skipz
  5100  0E40  2E43               	goto	u2545
  5101  0E41  0824               	movf	___awmod@divisor,w
  5102  0E42  0226               	subwf	___awmod@dividend,w
  5103  0E43                     u2545:	
  5104  0E43  1C03               	skipc
  5105  0E44  2E46               	goto	u2541
  5106  0E45  2E47               	goto	u2540
  5107  0E46                     u2541:	
  5108  0E46  2E4D               	goto	l3080
  5109  0E47                     u2540:	
  5110  0E47                     l3078:	
  5111  0E47  0824               	movf	___awmod@divisor,w
  5112  0E48  02A6               	subwf	___awmod@dividend,f
  5113  0E49  0825               	movf	___awmod@divisor+1,w
  5114  0E4A  1C03               	skipc
  5115  0E4B  03A7               	decf	___awmod@dividend+1,f
  5116  0E4C  02A7               	subwf	___awmod@dividend+1,f
  5117  0E4D                     l3080:	
  5118  0E4D  3001               	movlw	1
  5119  0E4E                     u2555:	
  5120  0E4E  1003               	clrc
  5121  0E4F  0CA5               	rrf	___awmod@divisor+1,f
  5122  0E50  0CA4               	rrf	___awmod@divisor,f
  5123  0E51  3EFF               	addlw	-1
  5124  0E52  1D03               	skipz
  5125  0E53  2E4E               	goto	u2555
  5126  0E54                     l3082:	
  5127  0E54  3001               	movlw	1
  5128  0E55  02A9               	subwf	___awmod@counter,f
  5129  0E56  1D03               	btfss	3,2
  5130  0E57  2E59               	goto	u2561
  5131  0E58  2E5A               	goto	u2560
  5132  0E59                     u2561:	
  5133  0E59  2E3D               	goto	l3076
  5134  0E5A                     u2560:	
  5135  0E5A                     l3084:	
  5136  0E5A  082A               	movf	___awmod@sign,w
  5137  0E5B  1903               	btfsc	3,2
  5138  0E5C  2E5E               	goto	u2571
  5139  0E5D  2E5F               	goto	u2570
  5140  0E5E                     u2571:	
  5141  0E5E  2E64               	goto	l3088
  5142  0E5F                     u2570:	
  5143  0E5F                     l3086:	
  5144  0E5F  09A6               	comf	___awmod@dividend,f
  5145  0E60  09A7               	comf	___awmod@dividend+1,f
  5146  0E61  0AA6               	incf	___awmod@dividend,f
  5147  0E62  1903               	skipnz
  5148  0E63  0AA7               	incf	___awmod@dividend+1,f
  5149  0E64                     l3088:	
  5150  0E64  0827               	movf	___awmod@dividend+1,w
  5151  0E65  00A5               	movwf	?___awmod+1
  5152  0E66  0826               	movf	___awmod@dividend,w
  5153  0E67  00A4               	movwf	?___awmod
  5154  0E68                     l610:	
  5155  0E68  0008               	return
  5156  0E69                     __end_of___awmod:	
  5157                           
  5158                           	psect	text18
  5159  0F29                     __ptext18:	
  5160 ;; *************** function ___awdiv *****************
  5161 ;; Defined at:
  5162 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  divisor         2   11[BANK0 ] int 
  5165 ;;  dividend        2   13[BANK0 ] int 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  quotient        2   18[BANK0 ] int 
  5168 ;;  sign            1   17[BANK0 ] unsigned char 
  5169 ;;  counter         1   16[BANK0 ] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  2   11[BANK0 ] int 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5179 ;;      Params:         0       4       0       0       0
  5180 ;;      Locals:         0       4       0       0       0
  5181 ;;      Temps:          0       1       0       0       0
  5182 ;;      Totals:         0       9       0       0       0
  5183 ;;Total ram usage:        9 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    3
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_map
  5190 ;;		_GetDigits
  5191 ;;		_intToString
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function ___awdiv
  5197  0F29                     ___awdiv:	
  5198  0F29                     l3010:	
  5199                           ;incstack = 0
  5200                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5201                           
  5202  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  5203  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  5204  0F2B  01B1               	clrf	___awdiv@sign
  5205  0F2C                     l3012:	
  5206  0F2C  1FAC               	btfss	___awdiv@divisor+1,7
  5207  0F2D  2F2F               	goto	u2391
  5208  0F2E  2F30               	goto	u2390
  5209  0F2F                     u2391:	
  5210  0F2F  2F37               	goto	l3018
  5211  0F30                     u2390:	
  5212  0F30                     l3014:	
  5213  0F30  09AB               	comf	___awdiv@divisor,f
  5214  0F31  09AC               	comf	___awdiv@divisor+1,f
  5215  0F32  0AAB               	incf	___awdiv@divisor,f
  5216  0F33  1903               	skipnz
  5217  0F34  0AAC               	incf	___awdiv@divisor+1,f
  5218  0F35                     l3016:	
  5219  0F35  01B1               	clrf	___awdiv@sign
  5220  0F36  0AB1               	incf	___awdiv@sign,f
  5221  0F37                     l3018:	
  5222  0F37  1FAE               	btfss	___awdiv@dividend+1,7
  5223  0F38  2F3A               	goto	u2401
  5224  0F39  2F3B               	goto	u2400
  5225  0F3A                     u2401:	
  5226  0F3A  2F44               	goto	l3024
  5227  0F3B                     u2400:	
  5228  0F3B                     l3020:	
  5229  0F3B  09AD               	comf	___awdiv@dividend,f
  5230  0F3C  09AE               	comf	___awdiv@dividend+1,f
  5231  0F3D  0AAD               	incf	___awdiv@dividend,f
  5232  0F3E  1903               	skipnz
  5233  0F3F  0AAE               	incf	___awdiv@dividend+1,f
  5234  0F40                     l3022:	
  5235  0F40  3001               	movlw	1
  5236  0F41  00AF               	movwf	??___awdiv
  5237  0F42  082F               	movf	??___awdiv,w
  5238  0F43  06B1               	xorwf	___awdiv@sign,f
  5239  0F44                     l3024:	
  5240  0F44  01B2               	clrf	___awdiv@quotient
  5241  0F45  01B3               	clrf	___awdiv@quotient+1
  5242  0F46                     l3026:	
  5243  0F46  082B               	movf	___awdiv@divisor,w
  5244  0F47  042C               	iorwf	___awdiv@divisor+1,w
  5245  0F48  1903               	btfsc	3,2
  5246  0F49  2F4B               	goto	u2411
  5247  0F4A  2F4C               	goto	u2410
  5248  0F4B                     u2411:	
  5249  0F4B  2F83               	goto	l3046
  5250  0F4C                     u2410:	
  5251  0F4C                     l3028:	
  5252  0F4C  01B0               	clrf	___awdiv@counter
  5253  0F4D  0AB0               	incf	___awdiv@counter,f
  5254  0F4E  2F5A               	goto	l3034
  5255  0F4F                     l3030:	
  5256  0F4F  3001               	movlw	1
  5257  0F50                     u2425:	
  5258  0F50  1003               	clrc
  5259  0F51  0DAB               	rlf	___awdiv@divisor,f
  5260  0F52  0DAC               	rlf	___awdiv@divisor+1,f
  5261  0F53  3EFF               	addlw	-1
  5262  0F54  1D03               	skipz
  5263  0F55  2F50               	goto	u2425
  5264  0F56                     l3032:	
  5265  0F56  3001               	movlw	1
  5266  0F57  00AF               	movwf	??___awdiv
  5267  0F58  082F               	movf	??___awdiv,w
  5268  0F59  07B0               	addwf	___awdiv@counter,f
  5269  0F5A                     l3034:	
  5270  0F5A  1FAC               	btfss	___awdiv@divisor+1,7
  5271  0F5B  2F5D               	goto	u2431
  5272  0F5C  2F5E               	goto	u2430
  5273  0F5D                     u2431:	
  5274  0F5D  2F4F               	goto	l3030
  5275  0F5E                     u2430:	
  5276  0F5E                     l3036:	
  5277  0F5E  3001               	movlw	1
  5278  0F5F                     u2445:	
  5279  0F5F  1003               	clrc
  5280  0F60  0DB2               	rlf	___awdiv@quotient,f
  5281  0F61  0DB3               	rlf	___awdiv@quotient+1,f
  5282  0F62  3EFF               	addlw	-1
  5283  0F63  1D03               	skipz
  5284  0F64  2F5F               	goto	u2445
  5285  0F65  082C               	movf	___awdiv@divisor+1,w
  5286  0F66  022E               	subwf	___awdiv@dividend+1,w
  5287  0F67  1D03               	skipz
  5288  0F68  2F6B               	goto	u2455
  5289  0F69  082B               	movf	___awdiv@divisor,w
  5290  0F6A  022D               	subwf	___awdiv@dividend,w
  5291  0F6B                     u2455:	
  5292  0F6B  1C03               	skipc
  5293  0F6C  2F6E               	goto	u2451
  5294  0F6D  2F6F               	goto	u2450
  5295  0F6E                     u2451:	
  5296  0F6E  2F76               	goto	l3042
  5297  0F6F                     u2450:	
  5298  0F6F                     l3038:	
  5299  0F6F  082B               	movf	___awdiv@divisor,w
  5300  0F70  02AD               	subwf	___awdiv@dividend,f
  5301  0F71  082C               	movf	___awdiv@divisor+1,w
  5302  0F72  1C03               	skipc
  5303  0F73  03AE               	decf	___awdiv@dividend+1,f
  5304  0F74  02AE               	subwf	___awdiv@dividend+1,f
  5305  0F75                     l3040:	
  5306  0F75  1432               	bsf	___awdiv@quotient,0
  5307  0F76                     l3042:	
  5308  0F76  3001               	movlw	1
  5309  0F77                     u2465:	
  5310  0F77  1003               	clrc
  5311  0F78  0CAC               	rrf	___awdiv@divisor+1,f
  5312  0F79  0CAB               	rrf	___awdiv@divisor,f
  5313  0F7A  3EFF               	addlw	-1
  5314  0F7B  1D03               	skipz
  5315  0F7C  2F77               	goto	u2465
  5316  0F7D                     l3044:	
  5317  0F7D  3001               	movlw	1
  5318  0F7E  02B0               	subwf	___awdiv@counter,f
  5319  0F7F  1D03               	btfss	3,2
  5320  0F80  2F82               	goto	u2471
  5321  0F81  2F83               	goto	u2470
  5322  0F82                     u2471:	
  5323  0F82  2F5E               	goto	l3036
  5324  0F83                     u2470:	
  5325  0F83                     l3046:	
  5326  0F83  0831               	movf	___awdiv@sign,w
  5327  0F84  1903               	btfsc	3,2
  5328  0F85  2F87               	goto	u2481
  5329  0F86  2F88               	goto	u2480
  5330  0F87                     u2481:	
  5331  0F87  2F8D               	goto	l3050
  5332  0F88                     u2480:	
  5333  0F88                     l3048:	
  5334  0F88  09B2               	comf	___awdiv@quotient,f
  5335  0F89  09B3               	comf	___awdiv@quotient+1,f
  5336  0F8A  0AB2               	incf	___awdiv@quotient,f
  5337  0F8B  1903               	skipnz
  5338  0F8C  0AB3               	incf	___awdiv@quotient+1,f
  5339  0F8D                     l3050:	
  5340  0F8D  0833               	movf	___awdiv@quotient+1,w
  5341  0F8E  00AC               	movwf	?___awdiv+1
  5342  0F8F  0832               	movf	___awdiv@quotient,w
  5343  0F90  00AB               	movwf	?___awdiv
  5344  0F91                     l597:	
  5345  0F91  0008               	return
  5346  0F92                     __end_of___awdiv:	
  5347                           
  5348                           	psect	text19
  5349  0C13                     __ptext19:	
  5350 ;; *************** function _ADC_Read *****************
  5351 ;; Defined at:
  5352 ;;		line 354 in file "main.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  canale          1    wreg     unsigned char 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  canale          1    7[BANK0 ] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  2    4[BANK0 ] int 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5366 ;;      Params:         0       2       0       0       0
  5367 ;;      Locals:         0       1       0       0       0
  5368 ;;      Temps:          0       1       0       0       0
  5369 ;;      Totals:         0       4       0       0       0
  5370 ;;Total ram usage:        4 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    3
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_main
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           
  5381                           ;psect for function _ADC_Read
  5382  0C13                     _ADC_Read:	
  5383                           
  5384                           ;incstack = 0
  5385                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5386                           ;ADC_Read@canale stored from wreg
  5387  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  5388  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  5389  0C15  00A7               	movwf	ADC_Read@canale
  5390  0C16                     l3216:	
  5391                           
  5392                           ;main.c: 354: int ADC_Read(char canale);main.c: 355: {;main.c: 356:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5393  0C16  0827               	movf	ADC_Read@canale,w
  5394  0C17  00A6               	movwf	??_ADC_Read
  5395  0C18  3002               	movlw	2
  5396  0C19                     u2675:	
  5397  0C19  1003               	clrc
  5398  0C1A  0DA6               	rlf	??_ADC_Read,f
  5399  0C1B  3EFF               	addlw	-1
  5400  0C1C  1D03               	skipz
  5401  0C1D  2C19               	goto	u2675
  5402  0C1E  1003               	clrc
  5403  0C1F  0D26               	rlf	??_ADC_Read,w
  5404  0C20  3801               	iorlw	1
  5405  0C21  009F               	movwf	31	;volatile
  5406  0C22                     l3218:	
  5407                           
  5408                           ;main.c: 357:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5409  0C22  3004               	movlw	4
  5410  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  5411  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  5412  0C25  00A6               	movwf	??_ADC_Read
  5413  0C26                     u2967:	
  5414  0C26  0BA6               	decfsz	??_ADC_Read,f
  5415  0C27  2C26               	goto	u2967
  5416  0C28  0000               	nop
  5417  0C29                     l3220:	
  5418                           
  5419                           ;main.c: 358:     GO_nDONE = 1;
  5420  0C29  1283               	bcf	3,5	;RP0=0, select bank0
  5421  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
  5422  0C2B  151F               	bsf	31,2	;volatile
  5423  0C2C                     l291:	
  5424                           ;main.c: 360:         ;
  5425                           
  5426                           
  5427                           ;main.c: 359:     while (GO_nDONE)
  5428  0C2C  191F               	btfsc	31,2	;volatile
  5429  0C2D  2C2F               	goto	u2681
  5430  0C2E  2C30               	goto	u2680
  5431  0C2F                     u2681:	
  5432  0C2F  2C2C               	goto	l291
  5433  0C30                     u2680:	
  5434  0C30                     l3222:	
  5435                           
  5436                           ;main.c: 361:     return ADRESL + (ADRESH << 8);
  5437  0C30  081E               	movf	30,w	;volatile
  5438  0C31  00A5               	movwf	?_ADC_Read+1
  5439  0C32  1683               	bsf	3,5	;RP0=1, select bank1
  5440  0C33  1303               	bcf	3,6	;RP1=0, select bank1
  5441  0C34  081E               	movf	30,w	;volatile
  5442  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5443  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5444  0C37  00A4               	movwf	?_ADC_Read
  5445  0C38                     l294:	
  5446  0C38  0008               	return
  5447  0C39                     __end_of_ADC_Read:	
  5448                           
  5449                           	psect	text20
  5450  0D5D                     __ptext20:	
  5451 ;; *************** function _ISR *****************
  5452 ;; Defined at:
  5453 ;;		line 446 in file "main.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5467 ;;      Params:         0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0
  5469 ;;      Temps:          0       4       0       0       0
  5470 ;;      Totals:         0       4       0       0       0
  5471 ;;Total ram usage:        4 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    2
  5474 ;; This function calls:
  5475 ;;		_UART_Read
  5476 ;;		_conteggioVeicoli
  5477 ;; This function is called by:
  5478 ;;		Interrupt level 1
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function _ISR
  5484  0D5D                     _ISR:	
  5485  0D5D                     i1l2612:	
  5486                           
  5487                           ;main.c: 449:     if (RCIF && readGateway.Bit == 0)
  5488  0D5D  1E8C               	btfss	12,5	;volatile
  5489  0D5E  2D60               	goto	u204_21
  5490  0D5F  2D61               	goto	u204_20
  5491  0D60                     u204_21:	
  5492  0D60  2D6A               	goto	i1l2620
  5493  0D61                     u204_20:	
  5494  0D61                     i1l2614:	
  5495  0D61  1854               	btfsc	_readGateway,0
  5496  0D62  2D64               	goto	u205_21
  5497  0D63  2D65               	goto	u205_20
  5498  0D64                     u205_21:	
  5499  0D64  2D6A               	goto	i1l2620
  5500  0D65                     u205_20:	
  5501  0D65                     i1l2616:	
  5502                           
  5503                           ;main.c: 450:     {;main.c: 451:         readGateway.Bit = 1;
  5504  0D65  1454               	bsf	_readGateway,0
  5505                           
  5506                           ;main.c: 452:         readGatewayDone.Bit = 0;
  5507  0D66  1055               	bcf	_readGatewayDone,0
  5508                           
  5509                           ;main.c: 453:         readGatewayDone.Timeout = 0;
  5510  0D67  10D5               	bcf	_readGatewayDone,1
  5511  0D68                     i1l2618:	
  5512                           
  5513                           ;main.c: 454:         dataFromGatewayIndex = 0;
  5514  0D68  01CD               	clrf	_dataFromGatewayIndex
  5515                           
  5516                           ;main.c: 455:         timerReadFromGateway = 0;
  5517  0D69  01CC               	clrf	_timerReadFromGateway
  5518  0D6A                     i1l2620:	
  5519                           
  5520                           ;main.c: 457:     if (RCIF && readGateway.Bit == 1)
  5521  0D6A  1E8C               	btfss	12,5	;volatile
  5522  0D6B  2D6D               	goto	u206_21
  5523  0D6C  2D6E               	goto	u206_20
  5524  0D6D                     u206_21:	
  5525  0D6D  2D85               	goto	i1l2630
  5526  0D6E                     u206_20:	
  5527  0D6E                     i1l2622:	
  5528  0D6E  1C54               	btfss	_readGateway,0
  5529  0D6F  2D71               	goto	u207_21
  5530  0D70  2D72               	goto	u207_20
  5531  0D71                     u207_21:	
  5532  0D71  2D85               	goto	i1l2630
  5533  0D72                     u207_20:	
  5534  0D72                     i1l2624:	
  5535                           
  5536                           ;main.c: 458:     {;main.c: 459:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  5537  0D72  120A  158A  239D  120A  158A  	fcall	_UART_Read
  5538  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  5539  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  5540  0D79  00A0               	movwf	??_ISR
  5541  0D7A  084D               	movf	_dataFromGatewayIndex,w
  5542  0D7B  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  5543  0D7C  0084               	movwf	4
  5544  0D7D  0820               	movf	??_ISR,w
  5545  0D7E  1383               	bcf	3,7	;select IRP bank1
  5546  0D7F  0080               	movwf	0
  5547  0D80                     i1l2626:	
  5548                           
  5549                           ;main.c: 460:         dataFromGatewayIndex++;
  5550  0D80  3001               	movlw	1
  5551  0D81  00A0               	movwf	??_ISR
  5552  0D82  0820               	movf	??_ISR,w
  5553  0D83  07CD               	addwf	_dataFromGatewayIndex,f
  5554  0D84                     i1l2628:	
  5555                           
  5556                           ;main.c: 461:         timerReadFromGateway = 0;
  5557  0D84  01CC               	clrf	_timerReadFromGateway
  5558  0D85                     i1l2630:	
  5559                           
  5560                           ;main.c: 466:     if (TMR0IF)
  5561  0D85  1D0B               	btfss	11,2	;volatile
  5562  0D86  2D88               	goto	u208_21
  5563  0D87  2D89               	goto	u208_20
  5564  0D88                     u208_21:	
  5565  0D88  2D93               	goto	i1l2638
  5566  0D89                     u208_20:	
  5567  0D89                     i1l2632:	
  5568                           
  5569                           ;main.c: 467:     {;main.c: 468:         TMR0IF = 0;
  5570  0D89  110B               	bcf	11,2	;volatile
  5571  0D8A                     i1l2634:	
  5572                           
  5573                           ;main.c: 469:         conteggioVeicoli();
  5574  0D8A  120A  158A  26C4  120A  158A  	fcall	_conteggioVeicoli
  5575  0D8F                     i1l2636:	
  5576                           
  5577                           ;main.c: 470:         TMR0 = 6;
  5578  0D8F  3006               	movlw	6
  5579  0D90  1283               	bcf	3,5	;RP0=0, select bank0
  5580  0D91  1303               	bcf	3,6	;RP1=0, select bank0
  5581  0D92  0081               	movwf	1	;volatile
  5582  0D93                     i1l2638:	
  5583                           
  5584                           ;main.c: 473:     if (TMR1IF)
  5585  0D93  1C0C               	btfss	12,0	;volatile
  5586  0D94  2D96               	goto	u209_21
  5587  0D95  2D97               	goto	u209_20
  5588  0D96                     u209_21:	
  5589  0D96  2DAC               	goto	i1l341
  5590  0D97                     u209_20:	
  5591  0D97                     i1l2640:	
  5592                           
  5593                           ;main.c: 474:     {;main.c: 475:         TMR1IF = 0;
  5594  0D97  100C               	bcf	12,0	;volatile
  5595  0D98                     i1l2642:	
  5596                           
  5597                           ;main.c: 476:         count_lux++;
  5598  0D98  3001               	movlw	1
  5599  0D99  00A0               	movwf	??_ISR
  5600  0D9A  0820               	movf	??_ISR,w
  5601  0D9B  07D0               	addwf	_count_lux,f
  5602  0D9C                     i1l2644:	
  5603                           
  5604                           ;main.c: 478:         if (count_lux >= 20)
  5605  0D9C  3014               	movlw	20
  5606  0D9D  0250               	subwf	_count_lux,w
  5607  0D9E  1C03               	skipc
  5608  0D9F  2DA1               	goto	u210_21
  5609  0DA0  2DA2               	goto	u210_20
  5610  0DA1                     u210_21:	
  5611  0DA1  2DA8               	goto	i1l2652
  5612  0DA2                     u210_20:	
  5613  0DA2                     i1l2646:	
  5614                           
  5615                           ;main.c: 479:         {;main.c: 480:             secondPassed.Bit = 1;
  5616  0DA2  1453               	bsf	_secondPassed,0
  5617  0DA3                     i1l2648:	
  5618                           
  5619                           ;main.c: 481:             count_lux = 0;
  5620  0DA3  01D0               	clrf	_count_lux
  5621  0DA4                     i1l2650:	
  5622                           
  5623                           ;main.c: 482:             timerReadFromGateway++;
  5624  0DA4  3001               	movlw	1
  5625  0DA5  00A0               	movwf	??_ISR
  5626  0DA6  0820               	movf	??_ISR,w
  5627  0DA7  07CC               	addwf	_timerReadFromGateway,f
  5628  0DA8                     i1l2652:	
  5629                           
  5630                           ;main.c: 485:         TMR1H = 60;
  5631  0DA8  303C               	movlw	60
  5632  0DA9  008F               	movwf	15	;volatile
  5633  0DAA                     i1l2654:	
  5634                           
  5635                           ;main.c: 486:         TMR1L = 176;
  5636  0DAA  30B0               	movlw	176
  5637  0DAB  008E               	movwf	14	;volatile
  5638  0DAC                     i1l341:	
  5639  0DAC  0823               	movf	??_ISR+3,w
  5640  0DAD  008A               	movwf	10
  5641  0DAE  0822               	movf	??_ISR+2,w
  5642  0DAF  0084               	movwf	4
  5643  0DB0  0E21               	swapf	(??_ISR+1)^0,w
  5644  0DB1  0083               	movwf	3
  5645  0DB2  0EFE               	swapf	btemp,f
  5646  0DB3  0E7E               	swapf	btemp,w
  5647  0DB4  0009               	retfie
  5648  0DB5                     __end_of_ISR:	
  5649                           
  5650                           	psect	intentry
  5651  0004                     __pintentry:	
  5652                           ;incstack = 0
  5653                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5654                           
  5655  0004                     interrupt_function:	
  5656  007E                     saved_w	set	btemp
  5657  0004  00FE               	movwf	btemp
  5658  0005  0E03               	swapf	3,w
  5659  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5660  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5661  0008  00A1               	movwf	??_ISR+1
  5662  0009  0804               	movf	4,w
  5663  000A  00A2               	movwf	??_ISR+2
  5664  000B  080A               	movf	10,w
  5665  000C  00A3               	movwf	??_ISR+3
  5666  000D  120A  158A  2D5D   	ljmp	_ISR
  5667                           
  5668                           	psect	text21
  5669  0EC4                     __ptext21:	
  5670 ;; *************** function _conteggioVeicoli *****************
  5671 ;; Defined at:
  5672 ;;		line 423 in file "main.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  i               1   13[COMMON] unsigned char 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5686 ;;      Params:         0       0       0       0       0
  5687 ;;      Locals:         1       0       0       0       0
  5688 ;;      Temps:          4       0       0       0       0
  5689 ;;      Totals:         5       0       0       0       0
  5690 ;;Total ram usage:        5 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    1
  5693 ;; This function calls:
  5694 ;;		_Conteggio
  5695 ;; This function is called by:
  5696 ;;		_ISR
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           
  5701                           ;psect for function _conteggioVeicoli
  5702  0EC4                     _conteggioVeicoli:	
  5703  0EC4                     i1l2366:	
  5704                           ;incstack = 0
  5705                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5706                           
  5707                           
  5708                           ;main.c: 425:     RoadsSensors[0]=PORTBbits.RB3;
  5709  0EC4  3000               	movlw	0
  5710  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5711  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  5712  0EC7  1986               	btfsc	6,3	;volatile
  5713  0EC8  3001               	movlw	1
  5714  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  5715  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  5716  0ECB  00A0               	movwf	_RoadsSensors^(0+128)
  5717                           
  5718                           ;main.c: 426:     RoadsSensors[1]=PORTBbits.RB4;
  5719  0ECC  3000               	movlw	0
  5720  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  5721  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  5722  0ECF  1A06               	btfsc	6,4	;volatile
  5723  0ED0  3001               	movlw	1
  5724  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  5725  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  5726  0ED3  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  5727                           
  5728                           ;main.c: 427:     RoadsSensors[2]=PORTBbits.RB1;
  5729  0ED4  3000               	movlw	0
  5730  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5731  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  5732  0ED7  1886               	btfsc	6,1	;volatile
  5733  0ED8  3001               	movlw	1
  5734  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  5735  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  5736  0EDB  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  5737                           
  5738                           ;main.c: 428:     RoadsSensors[3]=PORTAbits.RA5;
  5739  0EDC  3000               	movlw	0
  5740  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  5741  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  5742  0EDF  1A85               	btfsc	5,5	;volatile
  5743  0EE0  3001               	movlw	1
  5744  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  5745  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  5746  0EE3  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  5747  0EE4                     i1l2368:	
  5748                           
  5749                           ;main.c: 430:     for(unsigned char i=0; i<4; i++)
  5750  0EE4  01FD               	clrf	conteggioVeicoli@i
  5751  0EE5                     i1l2372:	
  5752                           
  5753                           ;main.c: 431:     {;main.c: 432:         if (!RoadsSensors[i])
  5754  0EE5  087D               	movf	conteggioVeicoli@i,w
  5755  0EE6  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5756  0EE7  0084               	movwf	4
  5757  0EE8  1383               	bcf	3,7	;select IRP bank1
  5758  0EE9  0800               	movf	0,w
  5759  0EEA  1D03               	btfss	3,2
  5760  0EEB  2EED               	goto	u175_21
  5761  0EEC  2EEE               	goto	u175_20
  5762  0EED                     u175_21:	
  5763  0EED  2EF7               	goto	i1l2376
  5764  0EEE                     u175_20:	
  5765  0EEE                     i1l2374:	
  5766                           
  5767                           ;main.c: 433:         {;main.c: 434:             count++;
  5768  0EEE  3001               	movlw	1
  5769  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  5770  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  5771  0EF1  07CA               	addwf	_count,f
  5772  0EF2  1803               	skipnc
  5773  0EF3  0ACB               	incf	_count+1,f
  5774  0EF4  3000               	movlw	0
  5775  0EF5  07CB               	addwf	_count+1,f
  5776                           
  5777                           ;main.c: 435:         }
  5778  0EF6  2F1E               	goto	i1l2382
  5779  0EF7                     i1l2376:	
  5780  0EF7  087D               	movf	conteggioVeicoli@i,w
  5781  0EF8  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5782  0EF9  0084               	movwf	4
  5783  0EFA  0800               	movf	0,w
  5784  0EFB  1903               	btfsc	3,2
  5785  0EFC  2EFE               	goto	u176_21
  5786  0EFD  2EFF               	goto	u176_20
  5787  0EFE                     u176_21:	
  5788  0EFE  2F1E               	goto	i1l2382
  5789  0EFF                     u176_20:	
  5790  0EFF                     i1l2378:	
  5791                           
  5792                           ;main.c: 437:         {;main.c: 438:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  5793  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5794  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5795  0F01  084B               	movf	_count+1,w
  5796  0F02  00F1               	movwf	Conteggio@_count+1
  5797  0F03  084A               	movf	_count,w
  5798  0F04  00F0               	movwf	Conteggio@_count
  5799  0F05  305E               	movlw	(low (_motorcycle| 0))& (0+255)
  5800  0F06  00F9               	movwf	??_conteggioVeicoli
  5801  0F07  0879               	movf	??_conteggioVeicoli,w
  5802  0F08  00F2               	movwf	Conteggio@_motorcycle
  5803  0F09  305A               	movlw	(low (_car| 0))& (0+255)
  5804  0F0A  00FA               	movwf	??_conteggioVeicoli+1
  5805  0F0B  087A               	movf	??_conteggioVeicoli+1,w
  5806  0F0C  00F3               	movwf	Conteggio@_car
  5807  0F0D  3056               	movlw	(low (_truck| 0))& (0+255)
  5808  0F0E  00FB               	movwf	??_conteggioVeicoli+2
  5809  0F0F  087B               	movf	??_conteggioVeicoli+2,w
  5810  0F10  00F4               	movwf	Conteggio@_truck
  5811  0F11  087D               	movf	conteggioVeicoli@i,w
  5812  0F12  00FC               	movwf	??_conteggioVeicoli+3
  5813  0F13  087C               	movf	??_conteggioVeicoli+3,w
  5814  0F14  00F5               	movwf	Conteggio@index
  5815  0F15  120A  158A  2511  120A  158A  	fcall	_Conteggio
  5816  0F1A                     i1l2380:	
  5817                           
  5818                           ;main.c: 439:             count = 0;
  5819  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5820  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  5821  0F1C  01CA               	clrf	_count
  5822  0F1D  01CB               	clrf	_count+1
  5823  0F1E                     i1l2382:	
  5824                           
  5825                           ;main.c: 441:     }
  5826  0F1E  3001               	movlw	1
  5827  0F1F  00F9               	movwf	??_conteggioVeicoli
  5828  0F20  0879               	movf	??_conteggioVeicoli,w
  5829  0F21  07FD               	addwf	conteggioVeicoli@i,f
  5830  0F22                     i1l2384:	
  5831  0F22  3004               	movlw	4
  5832  0F23  027D               	subwf	conteggioVeicoli@i,w
  5833  0F24  1C03               	skipc
  5834  0F25  2F27               	goto	u177_21
  5835  0F26  2F28               	goto	u177_20
  5836  0F27                     u177_21:	
  5837  0F27  2EE5               	goto	i1l2372
  5838  0F28                     u177_20:	
  5839  0F28                     i1l331:	
  5840  0F28  0008               	return
  5841  0F29                     __end_of_conteggioVeicoli:	
  5842                           
  5843                           	psect	text22
  5844  0D11                     __ptext22:	
  5845 ;; *************** function _Conteggio *****************
  5846 ;; Defined at:
  5847 ;;		line 87 in file "./CustomLib/TrafficLight.h"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  _count          2    0[COMMON] unsigned int 
  5850 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5851 ;;		 -> motorcycle(4), 
  5852 ;;  _car            1    3[COMMON] PTR unsigned char 
  5853 ;;		 -> car(4), 
  5854 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5855 ;;		 -> truck(4), 
  5856 ;;  index           1    5[COMMON] unsigned char 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5868 ;;      Params:         6       0       0       0       0
  5869 ;;      Locals:         0       0       0       0       0
  5870 ;;      Temps:          3       0       0       0       0
  5871 ;;      Totals:         9       0       0       0       0
  5872 ;;Total ram usage:        9 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_conteggioVeicoli
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           
  5882                           ;psect for function _Conteggio
  5883  0D11                     _Conteggio:	
  5884  0D11                     i1l2024:	
  5885                           ;incstack = 0
  5886                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5887                           
  5888                           
  5889                           ;./CustomLib/TrafficLight.h: 87: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 88: {;./CustomLib/TrafficLight.h: 89:         if (_count >= 500)
  5890  0D11  3001               	movlw	1
  5891  0D12  0271               	subwf	Conteggio@_count+1,w
  5892  0D13  30F4               	movlw	244
  5893  0D14  1903               	skipnz
  5894  0D15  0270               	subwf	Conteggio@_count,w
  5895  0D16  1C03               	skipc
  5896  0D17  2D19               	goto	u124_21
  5897  0D18  2D1A               	goto	u124_20
  5898  0D19                     u124_21:	
  5899  0D19  2D2A               	goto	i1l2028
  5900  0D1A                     u124_20:	
  5901  0D1A                     i1l2026:	
  5902                           
  5903                           ;./CustomLib/TrafficLight.h: 90:         {;./CustomLib/TrafficLight.h: 91:             _
      +                          motorcycle[index]=_motorcycle[index]+1;
  5904  0D1A  0875               	movf	Conteggio@index,w
  5905  0D1B  0772               	addwf	Conteggio@_motorcycle,w
  5906  0D1C  00F6               	movwf	??_Conteggio
  5907  0D1D  0876               	movf	??_Conteggio,w
  5908  0D1E  0084               	movwf	4
  5909  0D1F  1383               	bcf	3,7	;select IRP bank0
  5910  0D20  0800               	movf	0,w
  5911  0D21  3E01               	addlw	1
  5912  0D22  00F7               	movwf	??_Conteggio+1
  5913  0D23  0875               	movf	Conteggio@index,w
  5914  0D24  0772               	addwf	Conteggio@_motorcycle,w
  5915  0D25  00F8               	movwf	??_Conteggio+2
  5916  0D26  0878               	movf	??_Conteggio+2,w
  5917  0D27  0084               	movwf	4
  5918  0D28  0877               	movf	??_Conteggio+1,w
  5919  0D29  0080               	movwf	0
  5920  0D2A                     i1l2028:	
  5921                           
  5922                           ;./CustomLib/TrafficLight.h: 93:         if (_count >= 1500)
  5923  0D2A  3005               	movlw	5
  5924  0D2B  0271               	subwf	Conteggio@_count+1,w
  5925  0D2C  30DC               	movlw	220
  5926  0D2D  1903               	skipnz
  5927  0D2E  0270               	subwf	Conteggio@_count,w
  5928  0D2F  1C03               	skipc
  5929  0D30  2D32               	goto	u125_21
  5930  0D31  2D33               	goto	u125_20
  5931  0D32                     u125_21:	
  5932  0D32  2D43               	goto	i1l2032
  5933  0D33                     u125_20:	
  5934  0D33                     i1l2030:	
  5935                           
  5936                           ;./CustomLib/TrafficLight.h: 94:         {;./CustomLib/TrafficLight.h: 95:             _
      +                          car[index]=_car[index]+1;
  5937  0D33  0875               	movf	Conteggio@index,w
  5938  0D34  0773               	addwf	Conteggio@_car,w
  5939  0D35  00F6               	movwf	??_Conteggio
  5940  0D36  0876               	movf	??_Conteggio,w
  5941  0D37  0084               	movwf	4
  5942  0D38  1383               	bcf	3,7	;select IRP bank0
  5943  0D39  0800               	movf	0,w
  5944  0D3A  3E01               	addlw	1
  5945  0D3B  00F7               	movwf	??_Conteggio+1
  5946  0D3C  0875               	movf	Conteggio@index,w
  5947  0D3D  0773               	addwf	Conteggio@_car,w
  5948  0D3E  00F8               	movwf	??_Conteggio+2
  5949  0D3F  0878               	movf	??_Conteggio+2,w
  5950  0D40  0084               	movwf	4
  5951  0D41  0877               	movf	??_Conteggio+1,w
  5952  0D42  0080               	movwf	0
  5953  0D43                     i1l2032:	
  5954                           
  5955                           ;./CustomLib/TrafficLight.h: 97:         if (_count >= 3000)
  5956  0D43  300B               	movlw	11
  5957  0D44  0271               	subwf	Conteggio@_count+1,w
  5958  0D45  30B8               	movlw	184
  5959  0D46  1903               	skipnz
  5960  0D47  0270               	subwf	Conteggio@_count,w
  5961  0D48  1C03               	skipc
  5962  0D49  2D4B               	goto	u126_21
  5963  0D4A  2D4C               	goto	u126_20
  5964  0D4B                     u126_21:	
  5965  0D4B  2D5C               	goto	i1l172
  5966  0D4C                     u126_20:	
  5967  0D4C                     i1l2034:	
  5968                           
  5969                           ;./CustomLib/TrafficLight.h: 98:         {;./CustomLib/TrafficLight.h: 99:             _
      +                          truck[index]=_truck[index]+1;
  5970  0D4C  0875               	movf	Conteggio@index,w
  5971  0D4D  0774               	addwf	Conteggio@_truck,w
  5972  0D4E  00F6               	movwf	??_Conteggio
  5973  0D4F  0876               	movf	??_Conteggio,w
  5974  0D50  0084               	movwf	4
  5975  0D51  1383               	bcf	3,7	;select IRP bank0
  5976  0D52  0800               	movf	0,w
  5977  0D53  3E01               	addlw	1
  5978  0D54  00F7               	movwf	??_Conteggio+1
  5979  0D55  0875               	movf	Conteggio@index,w
  5980  0D56  0774               	addwf	Conteggio@_truck,w
  5981  0D57  00F8               	movwf	??_Conteggio+2
  5982  0D58  0878               	movf	??_Conteggio+2,w
  5983  0D59  0084               	movwf	4
  5984  0D5A  0877               	movf	??_Conteggio+1,w
  5985  0D5B  0080               	movwf	0
  5986  0D5C                     i1l172:	
  5987  0D5C  0008               	return
  5988  0D5D                     __end_of_Conteggio:	
  5989                           
  5990                           	psect	text23
  5991  0B9D                     __ptext23:	
  5992 ;; *************** function _UART_Read *****************
  5993 ;; Defined at:
  5994 ;;		line 393 in file "main.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;		None
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      unsigned char 
  6001 ;; Registers used:
  6002 ;;		wreg
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6008 ;;      Params:         0       0       0       0       0
  6009 ;;      Locals:         0       0       0       0       0
  6010 ;;      Temps:          0       0       0       0       0
  6011 ;;      Totals:         0       0       0       0       0
  6012 ;;Total ram usage:        0 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_ISR
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function _UART_Read
  6023  0B9D                     _UART_Read:	
  6024  0B9D                     i1l2360:	
  6025                           ;incstack = 0
  6026                           ; Regs used in _UART_Read: [wreg]
  6027                           
  6028  0B9D                     i1l312:	
  6029                           ;main.c: 396:         ;
  6030                           
  6031                           
  6032                           ;main.c: 395:     while (!RCIF)
  6033  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  6034  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  6035  0B9F  1E8C               	btfss	12,5	;volatile
  6036  0BA0  2BA2               	goto	u174_21
  6037  0BA1  2BA3               	goto	u174_20
  6038  0BA2                     u174_21:	
  6039  0BA2  2B9D               	goto	i1l312
  6040  0BA3                     u174_20:	
  6041  0BA3                     i1l314:	
  6042                           
  6043                           ;main.c: 397:     RCIF = 0;
  6044  0BA3  128C               	bcf	12,5	;volatile
  6045  0BA4                     i1l2362:	
  6046                           
  6047                           ;main.c: 398:     return RCREG;
  6048  0BA4  081A               	movf	26,w	;volatile
  6049  0BA5                     i1l315:	
  6050  0BA5  0008               	return
  6051  0BA6                     __end_of_UART_Read:	
  6052  007E                     btemp	set	126	;btemp
  6053  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        16
    BSS         158
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      69
    BANK1            80      0      77
    BANK3            96     13      83
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[8] size(2) Largest target is 14
		 -> s7(BANK3[14]), s6(BANK3[14]), s5(BANK3[14]), s4(BANK3[14]), 
		 -> s3(BANK3[14]), s2(BANK1[14]), s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK0[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   19461
                                             32 BANK0     10    10      0
                                              0 BANK3     13    13      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                         _SetDisplay
                   _SetReceivedTimes
                          _UART_Init
                        _UpdateTimes
                            ___awmod
                           _init_ADC
                       _luciSemaforo
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    4368
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1276
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     183
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         19    19      0     358
                                              4 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    14    13      1    1303
                                             12 BANK0     14    13      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDisplay                                           4     1      3     934
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7     899
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    3629
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1513
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _SetDefaultTimers
   _SetDisplay
   _SetReceivedTimes
     _GetTime
     ___bmul
   _UART_Init
     ___aldiv
   _UpdateTimes
   ___awmod
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D      53       9       86.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      45       5       86.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      F3      12        0.0%
ABS                  0      0      F3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jul 03 16:53:42 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                                l81 07FD                                l98 0738  
                    ___awdiv@sign 0031                                _s0 00CF                                _s1 00C1  
                              _s2 00B3                                _s3 01C8                                _s4 01BA  
                              _s5 01AC                                _s6 019E                                _s7 0190  
                              fsr 0004               ___wmul@multiplicand 0026                    _GetDigits$1222 0039  
               luciSemaforo@index 0027                       __CFG_LVP$ON 0000                               l123 0586  
                             l132 05FF                               l300 0BA9                               l302 0BAD  
                             l303 0BB0                               l320 0C90                               l240 0089  
                             l161 07C8                               l129 05D7                               l323 0BFB  
                             l139 0EC3                               l149 0D10                               l166 0FFF  
                             l350 0DC3                               l254 0213                               l238 031C  
                             l281 052B                               l610 0E68                               l354 0DDB  
                             l291 0C2C                               l347 0DB9                               l356 0DE0  
                             l444 0C47                               l509 0614                               l357 0DE5  
                             l349 0DBE                               l294 0C38                               l470 0C12  
                             l358 0E0D                               l446 0C5F                               l519 069C  
                             l288 0BD3                               l297 0CCA                               l597 0F91  
                    __CFG_CPD$OFF 0000                               _ISR 0D5D                               _car 005A  
                             _map 07C9                               fsr0 0004                               indf 0000  
                    ___awmod@sign 002A                      __CFG_FOSC$HS 0000                              ?_ISR 0070  
                            l3000 067E                              l3010 0F29                              l3002 0684  
                            l3020 0F3B                              l3012 0F2C                              l3100 06B6  
                            l3004 0689                              l3030 0F4F                              l3022 0F40  
                            l3014 0F30                              l3102 06D2                              l3006 0694  
                            l3040 0F75                              l3032 0F56                              l3024 0F44  
                            l3016 0F35                              l3104 070F                              l3120 0E6E  
                            l3200 0C63                              l3050 0F8D                              l3042 0F76  
                            l3034 0F5A                              l3026 0F46                              l3018 0F37  
                            l3106 0722                              l3130 0739                              l3122 0EAF  
                            l3114 0E6D                              l3210 0C80                              l3202 0C76  
                            l3220 0C29                              l3044 0F7D                              l3036 0F5E  
                            l3028 0F4C                              l3060 0E1A                              l3124 0EB3  
                            l3108 0E6C                              l3212 0C86                              l3300 0060  
                            l3222 0C30                              l3038 0F6F                              l3046 0F83  
                            l3070 0E2E                              l3062 0E1C                              l3054 0E0E  
                            l3142 073E                              l3150 07A1                              l3126 0EB9  
                            l3230 0DC8                              l3214 0C8A                              l3302 006B  
                            l3216 0C16                              l3048 0F88                              l3080 0E4D  
                            l3072 0E35                              l3064 0E20                              l3056 0E11  
                            l3144 075F                              l3152 07B4                              l3136 073C  
                            l3128 0EBD                              l3208 0C77                              l3400 033C  
                            l3320 0165                              l3304 0082                              l3218 0C22  
                            l3082 0E54                              l3074 0E39                              l3066 0E25  
                            l3058 0E15                              l3154 07B8                              l3146 0780  
                            l3170 0F9D                              l3234 0DEA                              l3226 0DB8  
                            l3410 0370                              l3402 0340                              l3330 01D6  
                            l3314 0090                              l3076 0E3D                              l3068 0E2B  
                            l3084 0E5A                              l3156 07BE                              l3260 0BF9  
                            l3172 0FAC                              l3164 0F95                              l3092 07C9  
                            l3420 03DB                              l3412 03CA                              l3404 0348  
                            l3340 01EF                              l3316 00D7                              l3324 01AC  
                            l3308 008B                              l3086 0E5F                              l3078 0E47  
                            l3158 07C2                              l3174 0FBA                              l3166 0F96  
                            l3190 0C91                              l3182 0BC1                              l3238 0DFD  
                            l3422 03E1                              l3414 03D0                              l3406 034A  
                            l3430 0440                              l3350 0204                              l3342 01FC  
                            l3318 011E                              l3326 01C1                              l3088 0E64  
                            l3096 06A0                              l3176 0FCD                              l3192 0C99  
                            l3184 0BC5                              l3440 04C5                              l3424 03E7  
                            l3416 03D4                              l3408 0367                              l3432 0446  
                            l3360 02CB                              l3352 020C                              l3336 01DA  
                            l3328 01C9                              l3280 003F                              l3098 06A1  
                            l3258 0BEA                              l3178 0FFA                              l3194 0CC7  
                            l3186 0BC8                              l3442 04CA                              l3450 0509  
                            l3418 03DA                              l3426 040B                              l3370 02EB  
                            l3362 02DC                              l3354 0215                              l3338 01E9  
                            l3290 004C                              l3282 0045                              l3700 07A9  
                            l3196 0CC8                              l3188 0BCC                              l3460 0533  
                            l3452 0521                              l3444 04DF                              l3436 0497  
                            l3380 0303                              l3364 02DF                              l3356 02A9  
                            l3348 01FF                              l3292 0050                              l3284 0046  
                            l3198 0CC9                              l2910 05DD                              l3454 0525  
                            l3438 04C0                              l3390 0324                              l3374 02F4  
                            l3358 02BA                              l3294 0052                              l3286 0048  
                            l2920 05FE                              l2912 05EA                              l2904 05B0  
                            l3456 0529                              l3448 04F4                              l3392 0326  
                            l3376 02FA                              l3368 02E6                              l3384 0307  
                            l3296 0054                              l3288 004A                              l2930 0CF6  
                            l2906 05C4                              l3458 052F                              l3394 032A  
                            l3386 0322                              l3378 02FD                              l3298 005B  
                            l2932 0D04                              l2924 0CCE                              l2916 05EB  
                            l2908 05CA                              l2860 0557                              l2940 0BAE  
                            l3396 032C                              l3388 0323                              l2934 0D0C  
                            l2926 0CDD                              l2950 0C55                              l2942 0C39  
                            l2918 05F1                              l2870 055B                              l2862 0558  
                            l3398 0336                              ?_map 0034                              l2928 0CE5  
                            l2960 0C04                              l2952 0C5B                              l2944 0C3D  
                            l2880 0579                              l2864 0559                              l2856 053B  
                            l2962 0C08                              l2970 0600                              l2946 0C41  
                            l2890 059B                              l2882 058C                              l2858 054A  
                            l2938 0BA9                              l3690 0314                              l2964 0C0A  
                            l2956 0BFF                              l2980 0627                              l2972 0603  
                            l2948 0C4E                              l2892 05A8                              l2884 0594  
                            l2876 055F                              l3692 04FE                              l2966 0C11  
                            l2958 0C00                              l2990 064B                              l2982 062F  
                            l2974 0607                              l3694 0DD0                              l2878 0573  
                            l2992 0654                              l2984 0637                              l2976 0618  
                            l3696 0DF2                              l2888 0595                              l3688 01B3  
                            l2994 0666                              l2986 063A                              l2978 0623  
                            l3698 0E05                              l2898 05AC                              l2996 0674  
                            l2988 0647                              l2998 0675                              u2200 05FE  
                            u2201 05FD                              u2130 0586                              u2131 0585  
                            u2115 054D                              u2300 0618                              u2140 058C  
                            u2124 056B                              u2220 0BAD                              u2301 0617  
                            u2205 05FA                              u2141 058B                              u2125 0569  
                            u2221 0BAC                              u2310 0637                              u2230 0C41  
                            u2150 05A8                              u2215 0CEB                              u2311 0636  
                            u2231 0C40                              u2151 05A7                              u2135 0582  
                            u2400 0F3B                              u2401 0F3A                              u2410 0F4C  
                            u2330 064B                              u2170 05D7                              u2411 0F4B  
                            u2331 064A                              u2171 05D6                              u2155 05A4  
                            u2500 0E20                              u2260 0C5B                              u2180 05DD  
                            u2164 05BC                              u2501 0E1F                              u2325 063C  
                            u2261 0C5A                              u2245 0C48                              u2181 05DC  
                            u2165 05BA                              u2430 0F5E                              u2510 0E2B  
                            u2270 0C04                              u2350 0666                              u2431 0F5D  
                            u2511 0E2A                              u2271 0C03                              u2351 0665  
                            u2255 0C4F                              u2175 05D3                              u2280 0C11  
                            u2600 0EC3                              u2425 0F50                              u2281 0C10  
                            u2345 064D                              u2601 0EC2                              u2450 0F6F  
                            u2530 0E3D                              u2610 07BE                              u2370 0684  
                            u2290 0607                              u2194 05E3                              u2451 0F6E  
                            u2531 0E3C                              u2611 07BD                              u2371 0683  
                            u2355 0662                              u2291 0606                              u2195 05E1  
                            u2540 0E47                              u2620 07C8                              u2380 0689  
                            u2445 0F5F                              u2541 0E46                              u2525 0E2F  
                            u2621 07C7                              u2381 0688                              u2365 0676  
                            u2470 0F83                              u2390 0F30                              u2630 0F9C  
                            u2471 0F82                              u2455 0F6B                              u2391 0F2F  
                            u2631 0F9B                              u2480 0F88                              u2560 0E5A  
                            u2800 032A                              u2720 0088                              u2481 0F87  
                            u2465 0F77                              u2561 0E59                              u2545 0E43  
                            u2801 0329                              u2721 0087                              u2570 0E5F  
                            u2490 0E15                              u2650 0CA8                              u2810 033C  
                            u2730 01D6                              u2571 0E5E                              u2555 0E4E  
                            u2491 0E14                              u2811 033B                              u2731 01D5  
                            u2580 06D2                              u2660 0C90                              u2900 0525  
                            u2820 0340                              u2740 01FC                              u2581 06D1  
                            u2645 0FC2                              u2661 0C8F                              u2901 0524  
                            u2821 033F                              u2741 01FB                              u2590 0EB9  
                            u2910 0529                              u2830 0367                              u2750 0212  
                            u2655 0CA3                              u2591 0EB8                              u2911 0528  
                            u2831 0366                              u2751 0211                              u2735 01D2  
                            u2680 0C30                              u2920 052F                              u2840 03CA  
                            u2760 02E5                              u2681 0C2F                              u2585 06CE  
                            u2921 052E                              u2841 03C9                              u2761 02E4  
                            u2745 01F8                              u2930 0533                              u2850 03DA  
                            u2770 02FA                              u2675 0C19                              u2931 0532  
                            u2851 03D9                              u2771 02F9                              u2860 03E1  
                            u2780 0303                              u2861 03E0                              u2781 0302  
                            u2870 0446                              u2790 0322                              u2871 0445  
                            u2791 0321                              u2880 04C5                              u2881 04C4  
                            u2890 04CA                              u2891 04C9                              _RCIF 0065  
                            u2957 0BD0                              u2967 0C26                              _TMR0 0001  
                            _TXIF 0064                      __CFG_WRT$OFF 0000                              _disp 0051  
                            _main 003F                              _time 004E                              map@x 0034  
                            btemp 007E                  __end_of_ADC_Read 0C39                     __CFG_BOREN$ON 0000  
                     main@umidita 01D7                              start 0010                   __end_of_GetTime 0D11  
               ___bmul@multiplier 0027                             ??_ISR 0020         __size_of_conteggioVeicoli 0065  
                           ??_map 003E                   __end_of___aldiv 069D                             ?_main 0070  
                 __end_of___awdiv 0F92                     __CFG_WDTE$OFF 0000                   __end_of___awmod 0E69  
                 ___awdiv@divisor 002B                             _T1CON 0010                             i1l312 0B9D  
                           i1l314 0BA3                             i1l315 0BA5                             i1l331 0F28  
                           i1l172 0D5C                             i1l341 0DAC                   ___awdiv@counter 0030  
                           _RCREG 001A              UpdateTimes@_semafori 0034                             _TMR1H 000F  
                           _TMR1L 000E                             _SPBRG 0099                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                             _TRISE 0089                             _TXREG 0019  
                   __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A                __size_of_UART_Read 0009  
                 __end_of_display 0811                             _count 004A                             _unita 0064  
                           main@i 01E1                             _truck 0056                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 0013  
                    __end_of_main 0538         __size_of_SetReceivedTimes 006E                __size_of_GetDigits 009C  
                          ??_main 0040                 SetDefaultTimers@i 0033                 SetDefaultTimers@l 0032  
              __size_of_BuildByte 00C8                        _SetDisplay 0BE7                            _ADCON0 001F  
                          _ADCON1 009F                __size_of_Conteggio 004C                            _ADRESH 001E  
                          _ADRESL 009E                  ___awdiv@dividend 002D                            i1l2030 0D33  
                          i1l2032 0D43                            i1l2024 0D11                            i1l2034 0D4C  
                          i1l2026 0D1A                            i1l2028 0D2A                            i1l2360 0B9D  
                          i1l2362 0BA4                            i1l2380 0F1A                            i1l2372 0EE5  
                          i1l2620 0D6A                            i1l2612 0D5D                            i1l2382 0F1E  
                          i1l2374 0EEE                            i1l2366 0EC4                            i1l2622 0D6E  
                          i1l2630 0D85                            i1l2614 0D61                            i1l2384 0F22  
                          i1l2376 0EF7                            i1l2368 0EE4                            u210_20 0DA2  
                          i1l2640 0D97                            i1l2632 0D89                            i1l2624 0D72  
                          i1l2616 0D65                            u210_21 0DA1                            i1l2378 0EFF  
                          i1l2650 0DA4                            i1l2642 0D98                            i1l2634 0D8A  
                          i1l2626 0D80                            i1l2618 0D68                            i1l2652 0DA8  
                          i1l2644 0D9C                            i1l2636 0D8F                            i1l2628 0D84  
                          i1l2654 0DAA                            i1l2646 0DA2                            i1l2638 0D93  
                          i1l2648 0DA3                            u124_20 0D1A                            u204_20 0D61  
                          u124_21 0D19                            u204_21 0D60                            u125_20 0D33  
                          u205_20 0D65                            u125_21 0D32                            u205_21 0D64  
                          u126_20 0D4C                            u206_20 0D6E                            u126_21 0D4B  
                          u206_21 0D6D                            u207_20 0D72                            u207_21 0D71  
                          u208_20 0D89                            u208_21 0D88                            u209_20 0D97  
                          _INTCON 000B                            u209_21 0D96                            u174_20 0BA3  
                          u174_21 0BA2                            u175_20 0EEE                            u175_21 0EED  
                          u176_20 0EFF                            u176_21 0EFE                            u177_20 0F28  
                          u177_21 0F27                            _TMR0IF 005A                            _TMR1IF 0060  
                       ??_GetTime 0026                      ?_UART_TxChar 0070                 __end_of_UART_Init 0CCB  
               __end_of_UART_Read 0BA6                            ___bmul 0BFC                         ??___aldiv 002C  
                 GetTime@shortInt 0029                            ___wmul 0C39                         ??___awdiv 002F  
                          _decine 0063                         ??___awmod 0028                  __end_of_init_ADC 0BD4  
                          _cycled 0052                  ___awdiv@quotient 0032                   ___awmod@divisor 0024  
                 ___awmod@counter 0029                  __end_of_sendByte 0C91                   GetDigits@decine 0034  
                   main@pressione 01D8                         ?_ADC_Read 0024                            saved_w 007E  
         __end_of__initialization 003B                 __end_of_GetDigits 0739                     ??_UpdateTimes 0024  
       __size_of_SetDefaultTimers 0090               ___bmul@multiplicand 0024                    __pcstackCOMMON 0070  
               __end_of_BuildByte 0600                      __pidataBANK1 0BB1                  _conteggioVeicoli 0EC4  
               __end_of_Conteggio 0D5D                     ?_luciSemaforo 0024                        ??_ADC_Read 0026  
          SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024  
                   GetDigits@Time 0036              _dataFromGatewayIndex 004D              _timerReadFromGateway 004C  
                      __pbssBANK0 004A                        __pbssBANK1 00A0                        __pbssBANK3 0190  
                      __pmaintext 003F                           ?___bmul 0024                           ?___wmul 0024  
                  ??_luciSemaforo 0025               __end_of_UpdateTimes 0EC4                     sendByte@byte0 003D  
                   sendByte@byte1 0038                        __pintentry 0004                  _SetReceivedTimes 0F92  
                      __stringtab 0800                         ?_init_ADC 0070                           _GetTime 0CCB  
                 BuildByte@valore 0025                   BuildByte@txByte 0029           GetTime@_dataFromGateway 0024  
                       ?_sendByte 0038                        _n_semafori 0811              __size_of_UART_TxChar 000B  
                         ___aldiv 0600                   __size_of___bmul 0017                           ___awdiv 0F29  
                         ___awmod 0E0E               __size_of_SetDisplay 0015                   __size_of___wmul 0027  
               conteggioVeicoli@i 007D                           __ptext1 0C60                           __ptext2 0BA6  
                         __ptext3 0538                           __ptext4 07C9                           __ptext5 0C39  
                         __ptext6 0DB5                           __ptext7 0BC1                           __ptext8 0E69  
                         __ptext9 0C91                           _comando 004F                           _display 0806  
                    __size_of_ISR 0058                      __size_of_map 0035                  ___awmod@dividend 0026  
                ___aldiv@dividend 0028              BuildByte@sommaColumn 002F                           clrloop0 0B96  
            end_of_initialization 003B                        ??_init_ADC 0024                    main@lux_select 01DF  
                     _UpdateTimes 0E69                        ??_sendByte 003A                  _SetDefaultTimers 0739  
                       _RCSTAbits 0018                  ___aldiv@quotient 002F                        _motorcycle 005E  
                       _UART_Init 0C91                         _UART_Read 0B9D             SetReceivedTimes@index 0038  
                       _PORTAbits 0005                         _PORTBbits 0006                         _PORTCbits 0007  
                    SetDisplay@d1 0027                      SetDisplay@d2 0024                      SetDisplay@d3 0025  
                       _TRISCbits 0087                 __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0F29  
            __end_of_luciSemaforo 0E0E                        map@out_max 003C                        map@out_min 003A  
SetReceivedTimes@_dataFromGateway 0037                         _TXSTAbits 0098                         _GetDigits 069D  
                  __end_of___bmul 0C13                    __end_of___wmul 0C60                        ?_UART_Init 0033  
                      ?_UART_Read 0070                         _BuildByte 0538                         _Conteggio 0D11  
               BuildByte@sommaRow 002E               start_initialization 0013                       __end_of_ISR 0DB5  
                    ??_SetDisplay 0027                       __end_of_map 07FE          __end_of_SetReceivedTimes 1000  
                      ?_GetDigits 0034                          ??___bmul 0025                    ADC_Read@canale 0027  
                        ??___wmul 0028                        init_fetch0 0BD4                       __pdataBANK1 00DD  
              __end_of_SetDisplay 0BFC                        ?_BuildByte 0024                    GetDigits@unita 0035  
                      ?_Conteggio 0070                         ___latbits 0002                     __pcstackBANK0 0020  
                   __pcstackBANK3 01D6                          ?_GetTime 0024             SetDefaultTimers@verde 0026  
           SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013                         _centinaia 0062  
               __size_of_sendByte 0031                          ?___aldiv 0024                          ?___awdiv 002B  
                        ?___awmod 0024                       ??_UART_Init 0035                       ??_UART_Read 0070  
                  BuildByte@i_359 0036                         __pstrings 0800                    BuildByte@y_360 0032  
                  sendByte@valore 0039                    sendByte@txByte 003E                    BuildByte@byte0 0028  
                  BuildByte@byte1 0024          __end_of_SetDefaultTimers 07C9                          _ADC_Read 0C13  
           __size_of_luciSemaforo 0059                         _count_lux 0050                     UART_TxChar@ch 0024  
                 ___aldiv@divisor 0024                 SetReceivedTimes@i 0039                 interrupt_function 0004  
                 ___aldiv@counter 002D                    ___wmul@product 0028        SetReceivedTimes@semaforoId 0035  
                    ?_UpdateTimes 0070                         clear_ram0 0B95                          _PIE1bits 008C  
                   ??_UART_TxChar 0024                       ??_GetDigits 0038                          _GO_nDONE 00FA  
                    _luciSemaforo 0DB5                 UART_Init@baudrate 0033                       ??_BuildByte 0026  
                       map@in_max 0038                         map@in_min 0036                       __stringbase 0805  
                       main@i_492 01DD                         main@i_493 01DB                       ??_Conteggio 0076  
                       main@i_495 01DC                         main@i_497 01E0                 ___wmul@multiplier 0024  
                    GetTime@index 0028                      _RoadsSensors 00A0                 ?_conteggioVeicoli 0070  
                    _secondPassed 0053                ??_conteggioVeicoli 0079                  __size_of_GetTime 0046  
                        _Semafori 00DD                GetDigits@centinaia 003B                       _readGateway 0054  
                __size_of___aldiv 009D               __end_of_UART_TxChar 0BB1                  __size_of___awdiv 0069  
                __size_of___awmod 005B                __end_of__stringtab 0806                         sendByte@i 003F  
                        __ptext10 0600                          __ptext11 0F92                          __ptext20 0D5D  
                        __ptext12 0BFC                          __ptext21 0EC4                          __ptext13 0CCB  
                        __ptext22 0D11                          __ptext14 0BE7                          __ptext23 0B9D  
                        __ptext15 0739                          __ptext16 069D                          __ptext17 0E0E  
                        __ptext18 0F29                          __ptext19 0C13                __end_of_n_semafori 0812  
                        _init_ADC 0BC1                 ?_SetReceivedTimes 002C                     __size_of_main 04F9  
                 _dataFromGateway 00A4                          _sendByte 0C60                ??_SetReceivedTimes 002D  
                        main@temp 01D6                          main@time 01D9                        _INTCONbits 000B  
                        init_ram0 0BD8              Conteggio@_motorcycle 0072                          intlevel1 0000  
                 _readGatewayDone 0055                         stringcode 0800                       _UART_TxChar 0BA6  
         SetReceivedTimes@colorId 0036              __size_of_UpdateTimes 005B                        GetTime@tmp 002A  
                      _OPTION_REG 0081                   SetDisplay@value 0026                          stringdir 0800  
                        stringtab 0800                      UpdateTimes@i 0036                      UpdateTimes@l 0035  
               ?_SetDefaultTimers 0024                      ___aldiv@sign 002E                ??_SetDefaultTimers 002B  
                      BuildByte@i 0034                        BuildByte@y 0030         SetDefaultTimers@_semafori 002A  
                 Conteggio@_count 0070                     Conteggio@_car 0073                   Conteggio@_truck 0074  
                  Conteggio@index 0075  
