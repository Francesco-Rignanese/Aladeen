

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jul 03 14:43:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196                           
   197                           	psect	idataBANK1
   198  0BFB                     __pidataBANK1:	
   199                           
   200                           ;initializer for _Semafori
   201  0BFB  34CF               	retlw	low (_s0| 0)
   202  0BFC  3400               	retlw	high (_s0| 0)
   203  0BFD  34C1               	retlw	low (_s1| 0)
   204  0BFE  3400               	retlw	high (_s1| 0)
   205  0BFF  34B3               	retlw	low (_s2| 0)
   206  0C00  3400               	retlw	high (_s2| 0)
   207  0C01  34C8               	retlw	low (_s3| (0+256))
   208  0C02  3401               	retlw	high (_s3| (0+256))
   209  0C03  34BA               	retlw	low (_s4| (0+256))
   210  0C04  3401               	retlw	high (_s4| (0+256))
   211  0C05  34AC               	retlw	low (_s5| (0+256))
   212  0C06  3401               	retlw	high (_s5| (0+256))
   213  0C07  349E               	retlw	low (_s6| (0+256))
   214  0C08  3401               	retlw	high (_s6| (0+256))
   215  0C09  3490               	retlw	low (_s7| (0+256))
   216  0C0A  3401               	retlw	high (_s7| (0+256))
   217                           
   218                           	psect	strings
   219  0800                     __pstrings:	
   220  0800                     stringtab:	
   221  0800                     __stringtab:	
   222  0800                     stringcode:	
   223                           ;	String table - string pointers are 1 byte each
   224                           
   225  0800                     stringdir:	
   226  0800  3008               	movlw	high stringdir
   227  0801  008A               	movwf	10
   228  0802  0804               	movf	4,w
   229  0803  0A84               	incf	4,f
   230  0804  0782               	addwf	2,f
   231  0805                     __stringbase:	
   232  0805  3400               	retlw	0
   233  0806                     __end_of__stringtab:	
   234  0806                     _display:	
   235  0806  343F               	retlw	63
   236  0807  3406               	retlw	6
   237  0808  345B               	retlw	91
   238  0809  344F               	retlw	79
   239  080A  3466               	retlw	102
   240  080B  346D               	retlw	109
   241  080C  347D               	retlw	125
   242  080D  3407               	retlw	7
   243  080E  347F               	retlw	127
   244  080F  346F               	retlw	111
   245  0810  3400               	retlw	0
   246  0811                     __end_of_display:	
   247  0811                     _n_semafori:	
   248  0811  3408               	retlw	8
   249  0812                     __end_of_n_semafori:	
   250  0006                     _PORTBbits	set	6
   251  0008                     _PORTD	set	8
   252  0005                     _PORTAbits	set	5
   253  001A                     _RCREG	set	26
   254  0019                     _TXREG	set	25
   255  000B                     _INTCONbits	set	11
   256  0018                     _RCSTAbits	set	24
   257  001E                     _ADRESH	set	30
   258  001F                     _ADCON0	set	31
   259  000E                     _TMR1L	set	14
   260  000F                     _TMR1H	set	15
   261  0010                     _T1CON	set	16
   262  0001                     _TMR0	set	1
   263  000B                     _INTCON	set	11
   264  0060                     _TMR1IF	set	96
   265  005A                     _TMR0IF	set	90
   266  0065                     _RCIF	set	101
   267  0064                     _TXIF	set	100
   268  00FA                     _GO_nDONE	set	250
   269  008C                     _PIE1bits	set	140
   270  0099                     _SPBRG	set	153
   271  0098                     _TXSTAbits	set	152
   272  0087                     _TRISCbits	set	135
   273  009E                     _ADRESL	set	158
   274  009F                     _ADCON1	set	159
   275  0085                     _TRISA	set	133
   276  0081                     _OPTION_REG	set	129
   277  0089                     _TRISE	set	137
   278  0088                     _TRISD	set	136
   279  0087                     _TRISC	set	135
   280  0086                     _TRISB	set	134
   281                           
   282                           ; #config settings
   283  0000                     
   284                           	psect	cinit
   285  0013                     start_initialization:	
   286  0013                     __initialization:	
   287                           
   288                           ; Initialize objects allocated to BANK1
   289  0013  1383               	bcf	3,7	;select IRP bank0
   290  0014  30ED               	movlw	low (__pdataBANK1+16)
   291  0015  00FD               	movwf	btemp+-1
   292  0016  300B               	movlw	high __pidataBANK1
   293  0017  00FE               	movwf	btemp
   294  0018  30FB               	movlw	low __pidataBANK1
   295  0019  00FF               	movwf	btemp+1
   296  001A  30DD               	movlw	low __pdataBANK1
   297  001B  0084               	movwf	4
   298  001C  120A  158A  2422  120A  118A  	fcall	init_ram0
   299                           
   300                           ; Clear objects allocated to BANK3
   301  0021  1783               	bsf	3,7	;select IRP bank2
   302  0022  3090               	movlw	low __pbssBANK3
   303  0023  0084               	movwf	4
   304  0024  30D6               	movlw	low (__pbssBANK3+70)
   305  0025  120A  158A  23DF  120A  118A  	fcall	clear_ram0
   306                           
   307                           ; Clear objects allocated to BANK1
   308  002A  1383               	bcf	3,7	;select IRP bank0
   309  002B  30A0               	movlw	low __pbssBANK1
   310  002C  0084               	movwf	4
   311  002D  30DD               	movlw	low (__pbssBANK1+61)
   312  002E  120A  158A  23DF  120A  118A  	fcall	clear_ram0
   313                           
   314                           ; Clear objects allocated to BANK0
   315  0033  304A               	movlw	low __pbssBANK0
   316  0034  0084               	movwf	4
   317  0035  3065               	movlw	low (__pbssBANK0+27)
   318  0036  120A  158A  23DF  120A  118A  	fcall	clear_ram0
   319  003B                     end_of_initialization:	
   320                           ;End of C runtime variable initialization code
   321                           
   322  003B                     __end_of__initialization:	
   323  003B  0183               	clrf	3
   324  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   325                           
   326                           	psect	bssBANK0
   327  004A                     __pbssBANK0:	
   328  004A                     _count:	
   329  004A                     	ds	2
   330  004C                     _timerReadFromGateway:	
   331  004C                     	ds	1
   332  004D                     _dataFromGatewayIndex:	
   333  004D                     	ds	1
   334  004E                     _time:	
   335  004E                     	ds	1
   336  004F                     _comando:	
   337  004F                     	ds	1
   338  0050                     _count_lux:	
   339  0050                     	ds	1
   340  0051                     _disp:	
   341  0051                     	ds	1
   342  0052                     _cycled:	
   343  0052                     	ds	1
   344  0053                     _secondPassed:	
   345  0053                     	ds	1
   346  0054                     _readGateway:	
   347  0054                     	ds	1
   348  0055                     _readGatewayDone:	
   349  0055                     	ds	1
   350  0056                     _truck:	
   351  0056                     	ds	4
   352  005A                     _car:	
   353  005A                     	ds	4
   354  005E                     _motorcycle:	
   355  005E                     	ds	4
   356  0062                     _centinaia:	
   357  0062                     	ds	1
   358  0063                     _decine:	
   359  0063                     	ds	1
   360  0064                     _unita:	
   361  0064                     	ds	1
   362                           
   363                           	psect	bssBANK1
   364  00A0                     __pbssBANK1:	
   365  00A0                     _RoadsSensors:	
   366  00A0                     	ds	4
   367  00A4                     _dataFromGateway:	
   368  00A4                     	ds	15
   369  00B3                     _s2:	
   370  00B3                     	ds	14
   371  00C1                     _s1:	
   372  00C1                     	ds	14
   373  00CF                     _s0:	
   374  00CF                     	ds	14
   375                           
   376                           	psect	dataBANK1
   377  00DD                     __pdataBANK1:	
   378  00DD                     _Semafori:	
   379  00DD                     	ds	16
   380                           
   381                           	psect	bssBANK3
   382  0190                     __pbssBANK3:	
   383  0190                     _s7:	
   384  0190                     	ds	14
   385  019E                     _s6:	
   386  019E                     	ds	14
   387  01AC                     _s5:	
   388  01AC                     	ds	14
   389  01BA                     _s4:	
   390  01BA                     	ds	14
   391  01C8                     _s3:	
   392  01C8                     	ds	14
   393                           
   394                           	psect	inittext
   395  0C1E                     init_fetch0:	
   396                           ;	Called with low address in FSR and high address in W
   397                           
   398  0C1E  087E               	movf	btemp,w
   399  0C1F  008A               	movwf	10
   400  0C20  087F               	movf	btemp+1,w
   401  0C21  0082               	movwf	2
   402  0C22                     init_ram0:	
   403                           ;Called with:
   404                           ;	high address of idata address in btemp 
   405                           ;	low address of idata address in btemp+1 
   406                           ;	low address of data in FSR
   407                           ;	high address + 1 of data in btemp-1
   408                           
   409  0C22  120A  158A  241E  120A  158A  	fcall	init_fetch0
   410  0C27  0080               	movwf	0
   411  0C28  0A84               	incf	4,f
   412  0C29  0804               	movf	4,w
   413  0C2A  067D               	xorwf	btemp+-1,w
   414  0C2B  1903               	btfsc	3,2
   415  0C2C  3400               	retlw	0
   416  0C2D  0AFF               	incf	btemp+1,f
   417  0C2E  1903               	btfsc	3,2
   418  0C2F  0AFE               	incf	btemp,f
   419  0C30  2C22               	goto	init_ram0
   420                           
   421                           	psect	clrtext
   422  0BDF                     clear_ram0:	
   423                           ;	Called with FSR containing the base address, and
   424                           ;	W with the last address+1
   425                           
   426  0BDF  0064               	clrwdt	;clear the watchdog before getting into this loop
   427  0BE0                     clrloop0:	
   428  0BE0  0180               	clrf	0	;clear RAM location pointed to by FSR
   429  0BE1  0A84               	incf	4,f	;increment pointer
   430  0BE2  0604               	xorwf	4,w	;XOR with final address
   431  0BE3  1903               	btfsc	3,2	;have we reached the end yet?
   432  0BE4  3400               	retlw	0	;all done for this memory range, return
   433  0BE5  0604               	xorwf	4,w	;XOR again to restore value
   434  0BE6  2BE0               	goto	clrloop0	;do the next byte
   435                           
   436                           	psect	cstackBANK3
   437  01D6                     __pcstackBANK3:	
   438  01D6                     main@temp:	
   439                           
   440                           ; 1 bytes @ 0x0
   441  01D6                     	ds	1
   442  01D7                     main@umidita:	
   443                           
   444                           ; 1 bytes @ 0x1
   445  01D7                     	ds	1
   446  01D8                     main@pressione:	
   447                           
   448                           ; 1 bytes @ 0x2
   449  01D8                     	ds	1
   450  01D9                     main@time:	
   451                           
   452                           ; 2 bytes @ 0x3
   453  01D9                     	ds	2
   454  01DB                     main@i_460:	
   455                           
   456                           ; 1 bytes @ 0x5
   457  01DB                     	ds	1
   458  01DC                     main@i_462:	
   459                           
   460                           ; 1 bytes @ 0x6
   461  01DC                     	ds	1
   462  01DD                     main@lux_select:	
   463                           
   464                           ; 1 bytes @ 0x7
   465  01DD                     	ds	1
   466  01DE                     main@i_459:	
   467                           
   468                           ; 2 bytes @ 0x8
   469  01DE                     	ds	2
   470  01E0                     main@i_464:	
   471                           
   472                           ; 1 bytes @ 0xA
   473  01E0                     	ds	1
   474  01E1                     main@i:	
   475                           
   476                           ; 2 bytes @ 0xB
   477  01E1                     	ds	2
   478                           
   479                           	psect	cstackCOMMON
   480  0070                     __pcstackCOMMON:	
   481  0070                     ?_init_ADC:	
   482  0070                     ?_UpdateTimes:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_Conteggio:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_main:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_UART_TxChar:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_UART_Read:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ??_UART_Read:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_conteggioVeicoli:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_ISR:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     Conteggio@_count:	
   507                           ; 1 bytes @ 0x0
   508                           
   509                           
   510                           ; 2 bytes @ 0x0
   511  0070                     	ds	2
   512  0072                     Conteggio@_motorcycle:	
   513                           
   514                           ; 1 bytes @ 0x2
   515  0072                     	ds	1
   516  0073                     Conteggio@_car:	
   517                           
   518                           ; 1 bytes @ 0x3
   519  0073                     	ds	1
   520  0074                     Conteggio@_truck:	
   521                           
   522                           ; 1 bytes @ 0x4
   523  0074                     	ds	1
   524  0075                     Conteggio@index:	
   525                           
   526                           ; 1 bytes @ 0x5
   527  0075                     	ds	1
   528  0076                     ??_Conteggio:	
   529                           
   530                           ; 1 bytes @ 0x6
   531  0076                     	ds	3
   532  0079                     ??_conteggioVeicoli:	
   533                           
   534                           ; 1 bytes @ 0x9
   535  0079                     	ds	4
   536  007D                     conteggioVeicoli@i:	
   537                           
   538                           ; 1 bytes @ 0xD
   539  007D                     	ds	1
   540                           
   541                           	psect	cstackBANK0
   542  0020                     __pcstackBANK0:	
   543  0020                     ??_ISR:	
   544                           
   545                           ; 1 bytes @ 0x0
   546  0020                     	ds	4
   547  0024                     ??_init_ADC:	
   548  0024                     ?_SetDisplay:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0024                     ?_BuildByte:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0024                     ??_UpdateTimes:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  0024                     ?_SetDefaultTimers:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  0024                     ??_UART_TxChar:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0024                     ?___bmul:	
   564                           ; 1 bytes @ 0x4
   565                           
   566  0024                     ?_ADC_Read:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0024                     ?_GetTime:	
   570                           ; 2 bytes @ 0x4
   571                           
   572  0024                     ?___wmul:	
   573                           ; 2 bytes @ 0x4
   574                           
   575  0024                     ?___awmod:	
   576                           ; 2 bytes @ 0x4
   577                           
   578  0024                     ?___aldiv:	
   579                           ; 2 bytes @ 0x4
   580                           
   581  0024                     BuildByte@byte1:	
   582                           ; 4 bytes @ 0x4
   583                           
   584  0024                     GetTime@_dataFromGateway:	
   585                           ; 1 bytes @ 0x4
   586                           
   587  0024                     UART_TxChar@ch:	
   588                           ; 1 bytes @ 0x4
   589                           
   590  0024                     SetDisplay@d2:	
   591                           ; 1 bytes @ 0x4
   592                           
   593  0024                     ___bmul@multiplicand:	
   594                           ; 1 bytes @ 0x4
   595                           
   596  0024                     SetDefaultTimers@rosso:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0024                     ___wmul@multiplier:	
   600                           ; 2 bytes @ 0x4
   601                           
   602  0024                     ___awmod@divisor:	
   603                           ; 2 bytes @ 0x4
   604                           
   605  0024                     ___aldiv@divisor:	
   606                           ; 2 bytes @ 0x4
   607                           
   608                           
   609                           ; 4 bytes @ 0x4
   610  0024                     	ds	1
   611  0025                     ??___bmul:	
   612  0025                     BuildByte@valore:	
   613                           ; 1 bytes @ 0x5
   614                           
   615  0025                     SetDisplay@d3:	
   616                           ; 1 bytes @ 0x5
   617                           
   618                           
   619                           ; 1 bytes @ 0x5
   620  0025                     	ds	1
   621  0026                     ??_ADC_Read:	
   622  0026                     ??_BuildByte:	
   623                           ; 1 bytes @ 0x6
   624                           
   625  0026                     ??_GetTime:	
   626                           ; 1 bytes @ 0x6
   627                           
   628  0026                     SetDisplay@value:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  0026                     ___bmul@product:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0026                     SetDefaultTimers@verde:	
   635                           ; 1 bytes @ 0x6
   636                           
   637  0026                     ___wmul@multiplicand:	
   638                           ; 2 bytes @ 0x6
   639                           
   640  0026                     ___awmod@dividend:	
   641                           ; 2 bytes @ 0x6
   642                           
   643                           
   644                           ; 2 bytes @ 0x6
   645  0026                     	ds	1
   646  0027                     ??_SetDisplay:	
   647  0027                     ADC_Read@canale:	
   648                           ; 1 bytes @ 0x7
   649                           
   650  0027                     SetDisplay@d1:	
   651                           ; 1 bytes @ 0x7
   652                           
   653  0027                     ___bmul@multiplier:	
   654                           ; 1 bytes @ 0x7
   655                           
   656                           
   657                           ; 1 bytes @ 0x7
   658  0027                     	ds	1
   659  0028                     ??___wmul:	
   660  0028                     ??___awmod:	
   661                           ; 1 bytes @ 0x8
   662                           
   663  0028                     BuildByte@byte0:	
   664                           ; 1 bytes @ 0x8
   665                           
   666  0028                     GetTime@index:	
   667                           ; 1 bytes @ 0x8
   668                           
   669  0028                     SetDefaultTimers@giallo:	
   670                           ; 1 bytes @ 0x8
   671                           
   672  0028                     ___wmul@product:	
   673                           ; 2 bytes @ 0x8
   674                           
   675  0028                     ___aldiv@dividend:	
   676                           ; 2 bytes @ 0x8
   677                           
   678                           
   679                           ; 4 bytes @ 0x8
   680  0028                     	ds	1
   681  0029                     GetTime@shortInt:	
   682  0029                     ___awmod@counter:	
   683                           ; 1 bytes @ 0x9
   684                           
   685  0029                     BuildByte@txByte:	
   686                           ; 1 bytes @ 0x9
   687                           
   688                           
   689                           ; 5 bytes @ 0x9
   690  0029                     	ds	1
   691  002A                     SetDefaultTimers@_semafori:	
   692  002A                     ___awmod@sign:	
   693                           ; 1 bytes @ 0xA
   694                           
   695  002A                     GetTime@tmp:	
   696                           ; 1 bytes @ 0xA
   697                           
   698                           
   699                           ; 2 bytes @ 0xA
   700  002A                     	ds	1
   701  002B                     ??_SetDefaultTimers:	
   702  002B                     ?___awdiv:	
   703                           ; 1 bytes @ 0xB
   704                           
   705  002B                     ___awdiv@divisor:	
   706                           ; 2 bytes @ 0xB
   707                           
   708                           
   709                           ; 2 bytes @ 0xB
   710  002B                     	ds	1
   711  002C                     ?_SetReceivedTimes:	
   712  002C                     ??___aldiv:	
   713                           ; 1 bytes @ 0xC
   714                           
   715  002C                     SetReceivedTimes@_semafori:	
   716                           ; 1 bytes @ 0xC
   717                           
   718                           
   719                           ; 1 bytes @ 0xC
   720  002C                     	ds	1
   721  002D                     ??_SetReceivedTimes:	
   722  002D                     ___aldiv@counter:	
   723                           ; 1 bytes @ 0xD
   724                           
   725  002D                     ___awdiv@dividend:	
   726                           ; 1 bytes @ 0xD
   727                           
   728                           
   729                           ; 2 bytes @ 0xD
   730  002D                     	ds	1
   731  002E                     BuildByte@sommaRow:	
   732  002E                     ___aldiv@sign:	
   733                           ; 1 bytes @ 0xE
   734                           
   735                           
   736                           ; 1 bytes @ 0xE
   737  002E                     	ds	1
   738  002F                     ??___awdiv:	
   739  002F                     BuildByte@sommaColumn:	
   740                           ; 1 bytes @ 0xF
   741                           
   742  002F                     ___aldiv@quotient:	
   743                           ; 1 bytes @ 0xF
   744                           
   745                           
   746                           ; 4 bytes @ 0xF
   747  002F                     	ds	1
   748  0030                     ___awdiv@counter:	
   749  0030                     BuildByte@y:	
   750                           ; 1 bytes @ 0x10
   751                           
   752                           
   753                           ; 2 bytes @ 0x10
   754  0030                     	ds	1
   755  0031                     ___awdiv@sign:	
   756                           
   757                           ; 1 bytes @ 0x11
   758  0031                     	ds	1
   759  0032                     SetDefaultTimers@l:	
   760  0032                     BuildByte@y_333:	
   761                           ; 1 bytes @ 0x12
   762                           
   763  0032                     ___awdiv@quotient:	
   764                           ; 2 bytes @ 0x12
   765                           
   766                           
   767                           ; 2 bytes @ 0x12
   768  0032                     	ds	1
   769  0033                     ?_UART_Init:	
   770  0033                     SetDefaultTimers@i:	
   771                           ; 1 bytes @ 0x13
   772                           
   773  0033                     UART_Init@baudrate:	
   774                           ; 1 bytes @ 0x13
   775                           
   776                           
   777                           ; 2 bytes @ 0x13
   778  0033                     	ds	1
   779  0034                     ?_GetDigits:	
   780  0034                     ?_map:	
   781                           ; 1 bytes @ 0x14
   782                           
   783  0034                     GetDigits@decine:	
   784                           ; 2 bytes @ 0x14
   785                           
   786  0034                     UpdateTimes@_semafori:	
   787                           ; 1 bytes @ 0x14
   788                           
   789  0034                     map@x:	
   790                           ; 1 bytes @ 0x14
   791                           
   792  0034                     BuildByte@i:	
   793                           ; 2 bytes @ 0x14
   794                           
   795                           
   796                           ; 2 bytes @ 0x14
   797  0034                     	ds	1
   798  0035                     ??_UART_Init:	
   799  0035                     GetDigits@unita:	
   800                           ; 1 bytes @ 0x15
   801                           
   802  0035                     UpdateTimes@i:	
   803                           ; 1 bytes @ 0x15
   804                           
   805  0035                     SetReceivedTimes@colorId:	
   806                           ; 1 bytes @ 0x15
   807                           
   808                           
   809                           ; 1 bytes @ 0x15
   810  0035                     	ds	1
   811  0036                     UpdateTimes@l:	
   812  0036                     SetReceivedTimes@luxId:	
   813                           ; 1 bytes @ 0x16
   814                           
   815  0036                     map@in_min:	
   816                           ; 1 bytes @ 0x16
   817                           
   818  0036                     GetDigits@Time:	
   819                           ; 2 bytes @ 0x16
   820                           
   821  0036                     BuildByte@i_332:	
   822                           ; 2 bytes @ 0x16
   823                           
   824                           
   825                           ; 2 bytes @ 0x16
   826  0036                     	ds	1
   827  0037                     SetReceivedTimes@semaforoId:	
   828                           
   829                           ; 1 bytes @ 0x17
   830  0037                     	ds	1
   831  0038                     ?_sendByte:	
   832  0038                     ??_GetDigits:	
   833                           ; 1 bytes @ 0x18
   834                           
   835  0038                     SetReceivedTimes@i:	
   836                           ; 1 bytes @ 0x18
   837                           
   838  0038                     sendByte@byte1:	
   839                           ; 1 bytes @ 0x18
   840                           
   841  0038                     map@in_max:	
   842                           ; 1 bytes @ 0x18
   843                           
   844                           
   845                           ; 2 bytes @ 0x18
   846  0038                     	ds	1
   847  0039                     SetReceivedTimes@_dataFromGateway:	
   848  0039                     sendByte@valore:	
   849                           ; 1 bytes @ 0x19
   850                           
   851  0039                     _GetDigits$1175:	
   852                           ; 1 bytes @ 0x19
   853                           
   854                           
   855                           ; 2 bytes @ 0x19
   856  0039                     	ds	1
   857  003A                     ??_sendByte:	
   858  003A                     SetReceivedTimes@index:	
   859                           ; 1 bytes @ 0x1A
   860                           
   861  003A                     map@out_min:	
   862                           ; 1 bytes @ 0x1A
   863                           
   864                           
   865                           ; 2 bytes @ 0x1A
   866  003A                     	ds	1
   867  003B                     GetDigits@centinaia:	
   868                           
   869                           ; 1 bytes @ 0x1B
   870  003B                     	ds	1
   871  003C                     map@out_max:	
   872                           
   873                           ; 2 bytes @ 0x1C
   874  003C                     	ds	1
   875  003D                     sendByte@byte0:	
   876                           
   877                           ; 1 bytes @ 0x1D
   878  003D                     	ds	1
   879  003E                     ??_map:	
   880  003E                     sendByte@txByte:	
   881                           ; 1 bytes @ 0x1E
   882                           
   883                           
   884                           ; 1 bytes @ 0x1E
   885  003E                     	ds	1
   886  003F                     sendByte@i:	
   887                           
   888                           ; 1 bytes @ 0x1F
   889  003F                     	ds	1
   890  0040                     ??_main:	
   891                           
   892                           ; 1 bytes @ 0x20
   893  0040                     	ds	10
   894                           
   895                           	psect	maintext
   896  003F                     __pmaintext:	
   897 ;;
   898 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   899 ;;
   900 ;; *************** function _main *****************
   901 ;; Defined at:
   902 ;;		line 117 in file "main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  lux_select      1    7[BANK3 ] unsigned char 
   907 ;;  i               1    6[BANK3 ] unsigned char 
   908 ;;  i               1    5[BANK3 ] unsigned char 
   909 ;;  i               2    8[BANK3 ] int 
   910 ;;  i               2   11[BANK3 ] int 
   911 ;;  i               1   10[BANK3 ] unsigned char 
   912 ;;  time            2    3[BANK3 ] int 
   913 ;;  pressione       1    2[BANK3 ] unsigned char 
   914 ;;  umidita         1    1[BANK3 ] unsigned char 
   915 ;;  temp            1    0[BANK3 ] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : B00/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       0       0      13       0
   927 ;;      Temps:          0      10       0       0       0
   928 ;;      Totals:         0      10       0      13       0
   929 ;;Total ram usage:       23 bytes
   930 ;; Hardware stack levels required when called:    5
   931 ;; This function calls:
   932 ;;		_ADC_Read
   933 ;;		_GetDigits
   934 ;;		_SetDefaultTimers
   935 ;;		_SetDisplay
   936 ;;		_SetReceivedTimes
   937 ;;		_UART_Init
   938 ;;		_UpdateTimes
   939 ;;		___awmod
   940 ;;		_init_ADC
   941 ;;		_map
   942 ;;		_sendByte
   943 ;; This function is called by:
   944 ;;		Startup code after reset
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function _main
   950  003F                     _main:	
   951  003F                     l2972:	
   952                           ;incstack = 0
   953                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   954                           
   955                           
   956                           ;main.c: 119:     TRISB = 0x1F;
   957  003F  301F               	movlw	31
   958  0040  1683               	bsf	3,5	;RP0=1, select bank1
   959  0041  1303               	bcf	3,6	;RP1=0, select bank1
   960  0042  0086               	movwf	6	;volatile
   961                           
   962                           ;main.c: 120:     TRISC = 0x80;
   963  0043  3080               	movlw	128
   964  0044  0087               	movwf	7	;volatile
   965  0045                     l2974:	
   966                           
   967                           ;main.c: 121:     TRISD = 0x00;
   968  0045  0188               	clrf	8	;volatile
   969  0046                     l2976:	
   970                           
   971                           ;main.c: 122:     TRISE = 0x01;
   972  0046  3001               	movlw	1
   973  0047  0089               	movwf	9	;volatile
   974  0048                     l2978:	
   975                           
   976                           ;main.c: 123:     INTCON = 0xE0;
   977  0048  30E0               	movlw	224
   978  0049  008B               	movwf	11	;volatile
   979  004A                     l2980:	
   980                           
   981                           ;main.c: 124:     OPTION_REG = 0x04;
   982  004A  3004               	movlw	4
   983  004B  0081               	movwf	1	;volatile
   984  004C                     l2982:	
   985                           
   986                           ;main.c: 125:     TMR0 = 6;
   987  004C  3006               	movlw	6
   988  004D  1283               	bcf	3,5	;RP0=0, select bank0
   989  004E  1303               	bcf	3,6	;RP1=0, select bank0
   990  004F  0081               	movwf	1	;volatile
   991  0050                     l2984:	
   992                           
   993                           ;main.c: 126:     T1CON = 0x31;
   994  0050  3031               	movlw	49
   995  0051  0090               	movwf	16	;volatile
   996  0052                     l2986:	
   997                           
   998                           ;main.c: 128:     TMR1H = 60;
   999  0052  303C               	movlw	60
  1000  0053  008F               	movwf	15	;volatile
  1001  0054                     l2988:	
  1002                           
  1003                           ;main.c: 129:     TMR1L = 176;
  1004  0054  30B0               	movlw	176
  1005  0055  008E               	movwf	14	;volatile
  1006                           
  1007                           ;main.c: 132:     int time;;main.c: 133:     disp = 0;
  1008  0056  01D1               	clrf	_disp
  1009                           
  1010                           ;main.c: 135:     unsigned char umidita = 0;
  1011  0057  1683               	bsf	3,5	;RP0=1, select bank3
  1012  0058  1703               	bsf	3,6	;RP1=1, select bank3
  1013  0059  01D7               	clrf	main@umidita^(0+384)
  1014                           
  1015                           ;main.c: 136:     unsigned char pressione = 0;
  1016  005A  01D8               	clrf	main@pressione^(0+384)
  1017  005B                     l2990:	
  1018                           
  1019                           ;main.c: 138:     init_ADC();
  1020  005B  120A  158A  240B  120A  118A  	fcall	_init_ADC
  1021  0060                     l2992:	
  1022                           
  1023                           ;main.c: 139:     UART_Init(9600);
  1024  0060  3080               	movlw	128
  1025  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0063  00B3               	movwf	UART_Init@baudrate
  1028  0064  3025               	movlw	37
  1029  0065  00B4               	movwf	UART_Init@baudrate+1
  1030  0066  120A  158A  24F9  120A  118A  	fcall	_UART_Init
  1031  006B                     l2994:	
  1032                           
  1033                           ;main.c: 140:     SetDefaultTimers(1,1,1, Semafori);
  1034  006B  3001               	movlw	1
  1035  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1036  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1037  006E  00A4               	movwf	SetDefaultTimers@rosso
  1038  006F  3000               	movlw	0
  1039  0070  00A5               	movwf	SetDefaultTimers@rosso+1
  1040  0071  3001               	movlw	1
  1041  0072  00A6               	movwf	SetDefaultTimers@verde
  1042  0073  3000               	movlw	0
  1043  0074  00A7               	movwf	SetDefaultTimers@verde+1
  1044  0075  3001               	movlw	1
  1045  0076  00A8               	movwf	SetDefaultTimers@giallo
  1046  0077  3000               	movlw	0
  1047  0078  00A9               	movwf	SetDefaultTimers@giallo+1
  1048  0079  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1049  007A  00C0               	movwf	??_main
  1050  007B  0840               	movf	??_main,w
  1051  007C  00AA               	movwf	SetDefaultTimers@_semafori
  1052  007D  120A  158A  26DD  120A  118A  	fcall	_SetDefaultTimers
  1053  0082                     l2996:	
  1054                           
  1055                           ;main.c: 143:     {;main.c: 145:         if (readGateway.Bit)
  1056  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0084  1C54               	btfss	_readGateway,0
  1059  0085  2887               	goto	u2681
  1060  0086  2888               	goto	u2680
  1061  0087                     u2681:	
  1062  0087  2B1C               	goto	l227
  1063  0088                     u2680:	
  1064  0088  2B07               	goto	l3076
  1065  0089                     l229:	
  1066                           ;main.c: 148:             {;main.c: 149:             case 0x08:
  1067                           
  1068                           
  1069                           ;main.c: 150:                 readGatewayDone.Bit = 1;
  1070  0089  1455               	bsf	_readGatewayDone,0
  1071                           
  1072                           ;main.c: 151:                 readGateway.Bit = 0;
  1073  008A  1054               	bcf	_readGateway,0
  1074  008B                     l3000:	
  1075                           
  1076                           ;main.c: 153:                 for (int i = 0; i < 4; i++)
  1077  008B  1683               	bsf	3,5	;RP0=1, select bank3
  1078  008C  1703               	bsf	3,6	;RP1=1, select bank3
  1079  008D  01E1               	clrf	main@i^(0+384)
  1080  008E  01E2               	clrf	(main@i+1)^(0+384)
  1081  008F  29AC               	goto	l3016
  1082  0090                     l3006:	
  1083                           
  1084                           ;main.c: 158:                         sendByte(0x03, 0x01, motorcycle[i]);
  1085  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0092  01B8               	clrf	sendByte@byte1
  1088  0093  0AB8               	incf	sendByte@byte1,f
  1089  0094  1683               	bsf	3,5	;RP0=1, select bank3
  1090  0095  1703               	bsf	3,6	;RP1=1, select bank3
  1091  0096  0861               	movf	main@i^(0+384),w
  1092  0097  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1093  0098  0084               	movwf	4
  1094  0099  1383               	bcf	3,7	;select IRP bank0
  1095  009A  0800               	movf	0,w
  1096  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1097  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1098  009D  00C0               	movwf	??_main
  1099  009E  0840               	movf	??_main,w
  1100  009F  00B9               	movwf	sendByte@valore
  1101  00A0  3003               	movlw	3
  1102  00A1  120A  158A  2493  120A  118A  	fcall	_sendByte
  1103                           
  1104                           ;main.c: 159:                         sendByte(0x03, 0x02, car[i]);
  1105  00A6  3002               	movlw	2
  1106  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1107  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1108  00A9  00C0               	movwf	??_main
  1109  00AA  0840               	movf	??_main,w
  1110  00AB  00B8               	movwf	sendByte@byte1
  1111  00AC  1683               	bsf	3,5	;RP0=1, select bank3
  1112  00AD  1703               	bsf	3,6	;RP1=1, select bank3
  1113  00AE  0861               	movf	main@i^(0+384),w
  1114  00AF  3E5A               	addlw	(low (_car| 0))& (0+255)
  1115  00B0  0084               	movwf	4
  1116  00B1  1383               	bcf	3,7	;select IRP bank0
  1117  00B2  0800               	movf	0,w
  1118  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1119  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1120  00B5  00C1               	movwf	??_main+1
  1121  00B6  0841               	movf	??_main+1,w
  1122  00B7  00B9               	movwf	sendByte@valore
  1123  00B8  3003               	movlw	3
  1124  00B9  120A  158A  2493  120A  118A  	fcall	_sendByte
  1125                           
  1126                           ;main.c: 160:                         sendByte(0x03, 0x03, truck[i]);
  1127  00BE  3003               	movlw	3
  1128  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1129  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1130  00C1  00C0               	movwf	??_main
  1131  00C2  0840               	movf	??_main,w
  1132  00C3  00B8               	movwf	sendByte@byte1
  1133  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  1134  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  1135  00C6  0861               	movf	main@i^(0+384),w
  1136  00C7  3E56               	addlw	(low (_truck| 0))& (0+255)
  1137  00C8  0084               	movwf	4
  1138  00C9  1383               	bcf	3,7	;select IRP bank0
  1139  00CA  0800               	movf	0,w
  1140  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1141  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1142  00CD  00C1               	movwf	??_main+1
  1143  00CE  0841               	movf	??_main+1,w
  1144  00CF  00B9               	movwf	sendByte@valore
  1145  00D0  3003               	movlw	3
  1146  00D1  120A  158A  2493  120A  118A  	fcall	_sendByte
  1147                           
  1148                           ;main.c: 161:                         break;
  1149  00D6  29C1               	goto	l3018
  1150  00D7                     l3008:	
  1151                           
  1152                           ;main.c: 163:                         sendByte(0x05, 0x01, motorcycle[i]);
  1153  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1154  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1155  00D9  01B8               	clrf	sendByte@byte1
  1156  00DA  0AB8               	incf	sendByte@byte1,f
  1157  00DB  1683               	bsf	3,5	;RP0=1, select bank3
  1158  00DC  1703               	bsf	3,6	;RP1=1, select bank3
  1159  00DD  0861               	movf	main@i^(0+384),w
  1160  00DE  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1161  00DF  0084               	movwf	4
  1162  00E0  1383               	bcf	3,7	;select IRP bank0
  1163  00E1  0800               	movf	0,w
  1164  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1165  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1166  00E4  00C0               	movwf	??_main
  1167  00E5  0840               	movf	??_main,w
  1168  00E6  00B9               	movwf	sendByte@valore
  1169  00E7  3005               	movlw	5
  1170  00E8  120A  158A  2493  120A  118A  	fcall	_sendByte
  1171                           
  1172                           ;main.c: 164:                         sendByte(0x05, 0x02, car[i]);
  1173  00ED  3002               	movlw	2
  1174  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1175  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1176  00F0  00C0               	movwf	??_main
  1177  00F1  0840               	movf	??_main,w
  1178  00F2  00B8               	movwf	sendByte@byte1
  1179  00F3  1683               	bsf	3,5	;RP0=1, select bank3
  1180  00F4  1703               	bsf	3,6	;RP1=1, select bank3
  1181  00F5  0861               	movf	main@i^(0+384),w
  1182  00F6  3E5A               	addlw	(low (_car| 0))& (0+255)
  1183  00F7  0084               	movwf	4
  1184  00F8  1383               	bcf	3,7	;select IRP bank0
  1185  00F9  0800               	movf	0,w
  1186  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1187  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1188  00FC  00C1               	movwf	??_main+1
  1189  00FD  0841               	movf	??_main+1,w
  1190  00FE  00B9               	movwf	sendByte@valore
  1191  00FF  3005               	movlw	5
  1192  0100  120A  158A  2493  120A  118A  	fcall	_sendByte
  1193                           
  1194                           ;main.c: 165:                         sendByte(0x05, 0x03, truck[i]);
  1195  0105  3003               	movlw	3
  1196  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0108  00C0               	movwf	??_main
  1199  0109  0840               	movf	??_main,w
  1200  010A  00B8               	movwf	sendByte@byte1
  1201  010B  1683               	bsf	3,5	;RP0=1, select bank3
  1202  010C  1703               	bsf	3,6	;RP1=1, select bank3
  1203  010D  0861               	movf	main@i^(0+384),w
  1204  010E  3E56               	addlw	(low (_truck| 0))& (0+255)
  1205  010F  0084               	movwf	4
  1206  0110  1383               	bcf	3,7	;select IRP bank0
  1207  0111  0800               	movf	0,w
  1208  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0114  00C1               	movwf	??_main+1
  1211  0115  0841               	movf	??_main+1,w
  1212  0116  00B9               	movwf	sendByte@valore
  1213  0117  3005               	movlw	5
  1214  0118  120A  158A  2493  120A  118A  	fcall	_sendByte
  1215                           
  1216                           ;main.c: 166:                         break;
  1217  011D  29C1               	goto	l3018
  1218  011E                     l3010:	
  1219                           
  1220                           ;main.c: 168:                         sendByte(0x07, 0x01, motorcycle[i]);
  1221  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1222  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0120  01B8               	clrf	sendByte@byte1
  1224  0121  0AB8               	incf	sendByte@byte1,f
  1225  0122  1683               	bsf	3,5	;RP0=1, select bank3
  1226  0123  1703               	bsf	3,6	;RP1=1, select bank3
  1227  0124  0861               	movf	main@i^(0+384),w
  1228  0125  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1229  0126  0084               	movwf	4
  1230  0127  1383               	bcf	3,7	;select IRP bank0
  1231  0128  0800               	movf	0,w
  1232  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1233  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1234  012B  00C0               	movwf	??_main
  1235  012C  0840               	movf	??_main,w
  1236  012D  00B9               	movwf	sendByte@valore
  1237  012E  3007               	movlw	7
  1238  012F  120A  158A  2493  120A  118A  	fcall	_sendByte
  1239                           
  1240                           ;main.c: 169:                         sendByte(0x07, 0x02, car[i]);
  1241  0134  3002               	movlw	2
  1242  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0137  00C0               	movwf	??_main
  1245  0138  0840               	movf	??_main,w
  1246  0139  00B8               	movwf	sendByte@byte1
  1247  013A  1683               	bsf	3,5	;RP0=1, select bank3
  1248  013B  1703               	bsf	3,6	;RP1=1, select bank3
  1249  013C  0861               	movf	main@i^(0+384),w
  1250  013D  3E5A               	addlw	(low (_car| 0))& (0+255)
  1251  013E  0084               	movwf	4
  1252  013F  1383               	bcf	3,7	;select IRP bank0
  1253  0140  0800               	movf	0,w
  1254  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0143  00C1               	movwf	??_main+1
  1257  0144  0841               	movf	??_main+1,w
  1258  0145  00B9               	movwf	sendByte@valore
  1259  0146  3007               	movlw	7
  1260  0147  120A  158A  2493  120A  118A  	fcall	_sendByte
  1261                           
  1262                           ;main.c: 170:                         sendByte(0x07, 0x03, truck[i]);
  1263  014C  3003               	movlw	3
  1264  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1265  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1266  014F  00C0               	movwf	??_main
  1267  0150  0840               	movf	??_main,w
  1268  0151  00B8               	movwf	sendByte@byte1
  1269  0152  1683               	bsf	3,5	;RP0=1, select bank3
  1270  0153  1703               	bsf	3,6	;RP1=1, select bank3
  1271  0154  0861               	movf	main@i^(0+384),w
  1272  0155  3E56               	addlw	(low (_truck| 0))& (0+255)
  1273  0156  0084               	movwf	4
  1274  0157  1383               	bcf	3,7	;select IRP bank0
  1275  0158  0800               	movf	0,w
  1276  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1277  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1278  015B  00C1               	movwf	??_main+1
  1279  015C  0841               	movf	??_main+1,w
  1280  015D  00B9               	movwf	sendByte@valore
  1281  015E  3007               	movlw	7
  1282  015F  120A  158A  2493  120A  118A  	fcall	_sendByte
  1283                           
  1284                           ;main.c: 171:                         break;
  1285  0164  29C1               	goto	l3018
  1286  0165                     l3012:	
  1287                           
  1288                           ;main.c: 173:                         sendByte(0x09, 0x01, motorcycle[i]);
  1289  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0167  01B8               	clrf	sendByte@byte1
  1292  0168  0AB8               	incf	sendByte@byte1,f
  1293  0169  1683               	bsf	3,5	;RP0=1, select bank3
  1294  016A  1703               	bsf	3,6	;RP1=1, select bank3
  1295  016B  0861               	movf	main@i^(0+384),w
  1296  016C  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1297  016D  0084               	movwf	4
  1298  016E  1383               	bcf	3,7	;select IRP bank0
  1299  016F  0800               	movf	0,w
  1300  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0172  00C0               	movwf	??_main
  1303  0173  0840               	movf	??_main,w
  1304  0174  00B9               	movwf	sendByte@valore
  1305  0175  3009               	movlw	9
  1306  0176  120A  158A  2493  120A  118A  	fcall	_sendByte
  1307                           
  1308                           ;main.c: 174:                         sendByte(0x09, 0x02, car[i]);
  1309  017B  3002               	movlw	2
  1310  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1311  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1312  017E  00C0               	movwf	??_main
  1313  017F  0840               	movf	??_main,w
  1314  0180  00B8               	movwf	sendByte@byte1
  1315  0181  1683               	bsf	3,5	;RP0=1, select bank3
  1316  0182  1703               	bsf	3,6	;RP1=1, select bank3
  1317  0183  0861               	movf	main@i^(0+384),w
  1318  0184  3E5A               	addlw	(low (_car| 0))& (0+255)
  1319  0185  0084               	movwf	4
  1320  0186  1383               	bcf	3,7	;select IRP bank0
  1321  0187  0800               	movf	0,w
  1322  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1324  018A  00C1               	movwf	??_main+1
  1325  018B  0841               	movf	??_main+1,w
  1326  018C  00B9               	movwf	sendByte@valore
  1327  018D  3009               	movlw	9
  1328  018E  120A  158A  2493  120A  118A  	fcall	_sendByte
  1329                           
  1330                           ;main.c: 175:                         sendByte(0x09, 0x03, truck[i]);
  1331  0193  3003               	movlw	3
  1332  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0196  00C0               	movwf	??_main
  1335  0197  0840               	movf	??_main,w
  1336  0198  00B8               	movwf	sendByte@byte1
  1337  0199  1683               	bsf	3,5	;RP0=1, select bank3
  1338  019A  1703               	bsf	3,6	;RP1=1, select bank3
  1339  019B  0861               	movf	main@i^(0+384),w
  1340  019C  3E56               	addlw	(low (_truck| 0))& (0+255)
  1341  019D  0084               	movwf	4
  1342  019E  1383               	bcf	3,7	;select IRP bank0
  1343  019F  0800               	movf	0,w
  1344  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1345  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1346  01A2  00C1               	movwf	??_main+1
  1347  01A3  0841               	movf	??_main+1,w
  1348  01A4  00B9               	movwf	sendByte@valore
  1349  01A5  3009               	movlw	9
  1350  01A6  120A  158A  2493  120A  118A  	fcall	_sendByte
  1351                           
  1352                           ;main.c: 176:                         break;
  1353  01AB  29C1               	goto	l3018
  1354  01AC                     l3016:	
  1355                           
  1356                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1357                           ; Switch size 1, requested type "simple"
  1358                           ; Number of cases is 1, Range of values is 0 to 0
  1359                           ; switch strategies available:
  1360                           ; Name         Instructions Cycles
  1361                           ; simple_byte            4     3 (average)
  1362                           ; direct_byte           11     8 (fixed)
  1363                           ; jumptable            260     6 (fixed)
  1364                           ;	Chosen strategy is simple_byte
  1365  01AC  1683               	bsf	3,5	;RP0=1, select bank3
  1366  01AD  1703               	bsf	3,6	;RP1=1, select bank3
  1367  01AE  0862               	movf	(main@i+1)^(0+384),w
  1368  01AF  3A00               	xorlw	0	; case 0
  1369  01B0  1903               	skipnz
  1370  01B1  29B3               	goto	l3288
  1371  01B2  29C1               	goto	l3018
  1372  01B3                     l3288:	
  1373                           
  1374                           ; Switch size 1, requested type "simple"
  1375                           ; Number of cases is 4, Range of values is 0 to 3
  1376                           ; switch strategies available:
  1377                           ; Name         Instructions Cycles
  1378                           ; simple_byte           13     7 (average)
  1379                           ; direct_byte           20     8 (fixed)
  1380                           ; jumptable            260     6 (fixed)
  1381                           ;	Chosen strategy is simple_byte
  1382  01B3  0861               	movf	main@i^(0+384),w
  1383  01B4  3A00               	xorlw	0	; case 0
  1384  01B5  1903               	skipnz
  1385  01B6  2890               	goto	l3006
  1386  01B7  3A01               	xorlw	1	; case 1
  1387  01B8  1903               	skipnz
  1388  01B9  28D7               	goto	l3008
  1389  01BA  3A03               	xorlw	3	; case 2
  1390  01BB  1903               	skipnz
  1391  01BC  291E               	goto	l3010
  1392  01BD  3A01               	xorlw	1	; case 3
  1393  01BE  1903               	skipnz
  1394  01BF  2965               	goto	l3012
  1395  01C0  29C1               	goto	l3018
  1396  01C1                     l3018:	
  1397                           
  1398                           ;main.c: 178:                 }
  1399  01C1  3001               	movlw	1
  1400  01C2  1683               	bsf	3,5	;RP0=1, select bank3
  1401  01C3  1703               	bsf	3,6	;RP1=1, select bank3
  1402  01C4  07E1               	addwf	main@i^(0+384),f
  1403  01C5  1803               	skipnc
  1404  01C6  0AE2               	incf	(main@i+1)^(0+384),f
  1405  01C7  3000               	movlw	0
  1406  01C8  07E2               	addwf	(main@i+1)^(0+384),f
  1407  01C9                     l3020:	
  1408  01C9  0862               	movf	(main@i+1)^(0+384),w
  1409  01CA  3A80               	xorlw	128
  1410  01CB  00FF               	movwf	btemp+1
  1411  01CC  3080               	movlw	128
  1412  01CD  027F               	subwf	btemp+1,w
  1413  01CE  1D03               	skipz
  1414  01CF  29D2               	goto	u2695
  1415  01D0  3004               	movlw	4
  1416  01D1  0261               	subwf	main@i^(0+384),w
  1417  01D2                     u2695:	
  1418  01D2  1C03               	skipc
  1419  01D3  29D5               	goto	u2691
  1420  01D4  29D6               	goto	u2690
  1421  01D5                     u2691:	
  1422  01D5  29AC               	goto	l3016
  1423  01D6                     u2690:	
  1424  01D6                     l3022:	
  1425                           
  1426                           ;main.c: 180:                 for (int i = 0; i < 4; i++)
  1427  01D6  1683               	bsf	3,5	;RP0=1, select bank3
  1428  01D7  1703               	bsf	3,6	;RP1=1, select bank3
  1429  01D8  01DE               	clrf	main@i_459^(0+384)
  1430  01D9  01DF               	clrf	(main@i_459+1)^(0+384)
  1431  01DA                     l3028:	
  1432                           
  1433                           ;main.c: 181:                 {;main.c: 182:                     motorcycle[i] = 0;
  1434  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  1435  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  1436  01DC  085E               	movf	main@i_459^(0+384),w
  1437  01DD  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1438  01DE  0084               	movwf	4
  1439  01DF  1383               	bcf	3,7	;select IRP bank0
  1440  01E0  0180               	clrf	0
  1441                           
  1442                           ;main.c: 183:                     car[i] = 0;
  1443  01E1  085E               	movf	main@i_459^(0+384),w
  1444  01E2  3E5A               	addlw	(low (_car| 0))& (0+255)
  1445  01E3  0084               	movwf	4
  1446  01E4  0180               	clrf	0
  1447                           
  1448                           ;main.c: 184:                     truck[i] = 0;
  1449  01E5  085E               	movf	main@i_459^(0+384),w
  1450  01E6  3E56               	addlw	(low (_truck| 0))& (0+255)
  1451  01E7  0084               	movwf	4
  1452  01E8  0180               	clrf	0
  1453  01E9                     l3030:	
  1454                           
  1455                           ;main.c: 185:                 }
  1456  01E9  3001               	movlw	1
  1457  01EA  07DE               	addwf	main@i_459^(0+384),f
  1458  01EB  1803               	skipnc
  1459  01EC  0ADF               	incf	(main@i_459+1)^(0+384),f
  1460  01ED  3000               	movlw	0
  1461  01EE  07DF               	addwf	(main@i_459+1)^(0+384),f
  1462  01EF                     l3032:	
  1463  01EF  085F               	movf	(main@i_459+1)^(0+384),w
  1464  01F0  3A80               	xorlw	128
  1465  01F1  00FF               	movwf	btemp+1
  1466  01F2  3080               	movlw	128
  1467  01F3  027F               	subwf	btemp+1,w
  1468  01F4  1D03               	skipz
  1469  01F5  29F8               	goto	u2705
  1470  01F6  3004               	movlw	4
  1471  01F7  025E               	subwf	main@i_459^(0+384),w
  1472  01F8                     u2705:	
  1473  01F8  1C03               	skipc
  1474  01F9  29FB               	goto	u2701
  1475  01FA  29FC               	goto	u2700
  1476  01FB                     u2701:	
  1477  01FB  29DA               	goto	l3028
  1478  01FC                     u2700:	
  1479  01FC                     l3034:	
  1480                           
  1481                           ;main.c: 187:                 for (unsigned char i = 0; i < 5; i++)
  1482  01FC  1683               	bsf	3,5	;RP0=1, select bank3
  1483  01FD  1703               	bsf	3,6	;RP1=1, select bank3
  1484  01FE  01DB               	clrf	main@i_460^(0+384)
  1485  01FF                     l3040:	
  1486                           
  1487                           ;main.c: 188:                 {;main.c: 189:                     dataFromGateway[i] = 0;
  1488  01FF  085B               	movf	main@i_460^(0+384),w
  1489  0200  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1490  0201  0084               	movwf	4
  1491  0202  1383               	bcf	3,7	;select IRP bank1
  1492  0203  0180               	clrf	0
  1493  0204                     l3042:	
  1494                           
  1495                           ;main.c: 190:                 }
  1496  0204  3001               	movlw	1
  1497  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0207  00C0               	movwf	??_main
  1500  0208  0840               	movf	??_main,w
  1501  0209  1683               	bsf	3,5	;RP0=1, select bank3
  1502  020A  1703               	bsf	3,6	;RP1=1, select bank3
  1503  020B  07DB               	addwf	main@i_460^(0+384),f
  1504  020C                     l3044:	
  1505  020C  3005               	movlw	5
  1506  020D  025B               	subwf	main@i_460^(0+384),w
  1507  020E  1C03               	skipc
  1508  020F  2A11               	goto	u2711
  1509  0210  2A12               	goto	u2710
  1510  0211                     u2711:	
  1511  0211  29FF               	goto	l3040
  1512  0212                     u2710:	
  1513  0212  2B1C               	goto	l227
  1514  0213                     l243:	
  1515                           ;main.c: 192:             case 0x0A:
  1516                           
  1517                           
  1518                           ;main.c: 193:                 readGatewayDone.Bit = 1;
  1519  0213  1455               	bsf	_readGatewayDone,0
  1520                           
  1521                           ;main.c: 194:                 readGateway.Bit = 0;
  1522  0214  1054               	bcf	_readGateway,0
  1523  0215                     l3046:	
  1524                           
  1525                           ;main.c: 196:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1526  0215  3000               	movlw	0
  1527  0216  120A  158A  2446  120A  118A  	fcall	_ADC_Read
  1528  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1529  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1530  021D  0824               	movf	?_ADC_Read,w
  1531  021E  00C0               	movwf	??_main
  1532  021F  0825               	movf	?_ADC_Read+1,w
  1533  0220  00C1               	movwf	??_main+1
  1534  0221  0D41               	rlf	??_main+1,w
  1535  0222  0CC1               	rrf	??_main+1,f
  1536  0223  0CC0               	rrf	??_main,f
  1537  0224  0D41               	rlf	??_main+1,w
  1538  0225  0CC1               	rrf	??_main+1,f
  1539  0226  0CC0               	rrf	??_main,f
  1540  0227  0840               	movf	??_main,w
  1541  0228  00B4               	movwf	map@x
  1542  0229  0841               	movf	??_main+1,w
  1543  022A  00B5               	movwf	map@x+1
  1544  022B  3000               	movlw	0
  1545  022C  00B6               	movwf	map@in_min
  1546  022D  00B7               	movwf	map@in_min+1
  1547  022E  30FF               	movlw	255
  1548  022F  00B8               	movwf	map@in_max
  1549  0230  3000               	movlw	0
  1550  0231  00B9               	movwf	map@in_max+1
  1551  0232  30EC               	movlw	236
  1552  0233  00BA               	movwf	map@out_min
  1553  0234  30FF               	movlw	255
  1554  0235  00BB               	movwf	map@out_min+1
  1555  0236  303C               	movlw	60
  1556  0237  00BC               	movwf	map@out_max
  1557  0238  3000               	movlw	0
  1558  0239  00BD               	movwf	map@out_max+1
  1559  023A  120A  158A  24C4  120A  118A  	fcall	_map
  1560  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0241  0834               	movf	?_map,w
  1563  0242  00C2               	movwf	??_main+2
  1564  0243  0842               	movf	??_main+2,w
  1565  0244  1683               	bsf	3,5	;RP0=1, select bank3
  1566  0245  1703               	bsf	3,6	;RP1=1, select bank3
  1567  0246  00D6               	movwf	main@temp^(0+384)
  1568                           
  1569                           ;main.c: 197:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1570  0247  3001               	movlw	1
  1571  0248  120A  158A  2446  120A  118A  	fcall	_ADC_Read
  1572  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1573  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1574  024F  0824               	movf	?_ADC_Read,w
  1575  0250  00C0               	movwf	??_main
  1576  0251  0825               	movf	?_ADC_Read+1,w
  1577  0252  00C1               	movwf	??_main+1
  1578  0253  0D41               	rlf	??_main+1,w
  1579  0254  0CC1               	rrf	??_main+1,f
  1580  0255  0CC0               	rrf	??_main,f
  1581  0256  0D41               	rlf	??_main+1,w
  1582  0257  0CC1               	rrf	??_main+1,f
  1583  0258  0CC0               	rrf	??_main,f
  1584  0259  0840               	movf	??_main,w
  1585  025A  00B4               	movwf	map@x
  1586  025B  0841               	movf	??_main+1,w
  1587  025C  00B5               	movwf	map@x+1
  1588  025D  3000               	movlw	0
  1589  025E  00B6               	movwf	map@in_min
  1590  025F  00B7               	movwf	map@in_min+1
  1591  0260  30FF               	movlw	255
  1592  0261  00B8               	movwf	map@in_max
  1593  0262  3000               	movlw	0
  1594  0263  00B9               	movwf	map@in_max+1
  1595  0264  3000               	movlw	0
  1596  0265  00BA               	movwf	map@out_min
  1597  0266  00BB               	movwf	map@out_min+1
  1598  0267  3064               	movlw	100
  1599  0268  00BC               	movwf	map@out_max
  1600  0269  3000               	movlw	0
  1601  026A  00BD               	movwf	map@out_max+1
  1602  026B  120A  158A  24C4  120A  118A  	fcall	_map
  1603  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0272  0834               	movf	?_map,w
  1606  0273  00C2               	movwf	??_main+2
  1607  0274  0842               	movf	??_main+2,w
  1608  0275  1683               	bsf	3,5	;RP0=1, select bank3
  1609  0276  1703               	bsf	3,6	;RP1=1, select bank3
  1610  0277  00D7               	movwf	main@umidita^(0+384)
  1611                           
  1612                           ;main.c: 198:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1613  0278  3005               	movlw	5
  1614  0279  120A  158A  2446  120A  118A  	fcall	_ADC_Read
  1615  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1616  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0280  0824               	movf	?_ADC_Read,w
  1618  0281  00C0               	movwf	??_main
  1619  0282  0825               	movf	?_ADC_Read+1,w
  1620  0283  00C1               	movwf	??_main+1
  1621  0284  0D41               	rlf	??_main+1,w
  1622  0285  0CC1               	rrf	??_main+1,f
  1623  0286  0CC0               	rrf	??_main,f
  1624  0287  0D41               	rlf	??_main+1,w
  1625  0288  0CC1               	rrf	??_main+1,f
  1626  0289  0CC0               	rrf	??_main,f
  1627  028A  0840               	movf	??_main,w
  1628  028B  00B4               	movwf	map@x
  1629  028C  0841               	movf	??_main+1,w
  1630  028D  00B5               	movwf	map@x+1
  1631  028E  3000               	movlw	0
  1632  028F  00B6               	movwf	map@in_min
  1633  0290  00B7               	movwf	map@in_min+1
  1634  0291  30FF               	movlw	255
  1635  0292  00B8               	movwf	map@in_max
  1636  0293  3000               	movlw	0
  1637  0294  00B9               	movwf	map@in_max+1
  1638  0295  3000               	movlw	0
  1639  0296  00BA               	movwf	map@out_min
  1640  0297  00BB               	movwf	map@out_min+1
  1641  0298  3064               	movlw	100
  1642  0299  00BC               	movwf	map@out_max
  1643  029A  3000               	movlw	0
  1644  029B  00BD               	movwf	map@out_max+1
  1645  029C  120A  158A  24C4  120A  118A  	fcall	_map
  1646  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1647  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1648  02A3  0834               	movf	?_map,w
  1649  02A4  00C2               	movwf	??_main+2
  1650  02A5  0842               	movf	??_main+2,w
  1651  02A6  1683               	bsf	3,5	;RP0=1, select bank3
  1652  02A7  1703               	bsf	3,6	;RP1=1, select bank3
  1653  02A8  00D8               	movwf	main@pressione^(0+384)
  1654  02A9                     l3048:	
  1655                           
  1656                           ;main.c: 199:                 sendByte(0x02, 0x00, temp);
  1657  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1658  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1659  02AB  01B8               	clrf	sendByte@byte1
  1660  02AC  1683               	bsf	3,5	;RP0=1, select bank3
  1661  02AD  1703               	bsf	3,6	;RP1=1, select bank3
  1662  02AE  0856               	movf	main@temp^(0+384),w
  1663  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1664  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1665  02B1  00C0               	movwf	??_main
  1666  02B2  0840               	movf	??_main,w
  1667  02B3  00B9               	movwf	sendByte@valore
  1668  02B4  3002               	movlw	2
  1669  02B5  120A  158A  2493  120A  118A  	fcall	_sendByte
  1670  02BA                     l3050:	
  1671                           
  1672                           ;main.c: 200:                 sendByte(0x04, 0x00, umidita);
  1673  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1674  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1675  02BC  01B8               	clrf	sendByte@byte1
  1676  02BD  1683               	bsf	3,5	;RP0=1, select bank3
  1677  02BE  1703               	bsf	3,6	;RP1=1, select bank3
  1678  02BF  0857               	movf	main@umidita^(0+384),w
  1679  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1680  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1681  02C2  00C0               	movwf	??_main
  1682  02C3  0840               	movf	??_main,w
  1683  02C4  00B9               	movwf	sendByte@valore
  1684  02C5  3004               	movlw	4
  1685  02C6  120A  158A  2493  120A  118A  	fcall	_sendByte
  1686  02CB                     l3052:	
  1687                           
  1688                           ;main.c: 201:                 sendByte(0x06, 0x00, pressione);
  1689  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1690  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1691  02CD  01B8               	clrf	sendByte@byte1
  1692  02CE  1683               	bsf	3,5	;RP0=1, select bank3
  1693  02CF  1703               	bsf	3,6	;RP1=1, select bank3
  1694  02D0  0858               	movf	main@pressione^(0+384),w
  1695  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1696  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1697  02D3  00C0               	movwf	??_main
  1698  02D4  0840               	movf	??_main,w
  1699  02D5  00B9               	movwf	sendByte@valore
  1700  02D6  3006               	movlw	6
  1701  02D7  120A  158A  2493  120A  118A  	fcall	_sendByte
  1702  02DC                     l3054:	
  1703                           
  1704                           ;main.c: 203:                 for (unsigned char i = 0; i < 5; i++)
  1705  02DC  1683               	bsf	3,5	;RP0=1, select bank3
  1706  02DD  1703               	bsf	3,6	;RP1=1, select bank3
  1707  02DE  01DC               	clrf	main@i_462^(0+384)
  1708  02DF                     l3056:	
  1709  02DF  3005               	movlw	5
  1710  02E0  025C               	subwf	main@i_462^(0+384),w
  1711  02E1  1C03               	skipc
  1712  02E2  2AE4               	goto	u2721
  1713  02E3  2AE5               	goto	u2720
  1714  02E4                     u2721:	
  1715  02E4  2AE6               	goto	l3060
  1716  02E5                     u2720:	
  1717  02E5  2B1C               	goto	l227
  1718  02E6                     l3060:	
  1719                           
  1720                           ;main.c: 204:                 {;main.c: 205:                     dataFromGateway[i] = 0;
  1721  02E6  085C               	movf	main@i_462^(0+384),w
  1722  02E7  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1723  02E8  0084               	movwf	4
  1724  02E9  1383               	bcf	3,7	;select IRP bank1
  1725  02EA  0180               	clrf	0
  1726  02EB                     l3062:	
  1727                           
  1728                           ;main.c: 206:                 }
  1729  02EB  3001               	movlw	1
  1730  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1731  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1732  02EE  00C0               	movwf	??_main
  1733  02EF  0840               	movf	??_main,w
  1734  02F0  1683               	bsf	3,5	;RP0=1, select bank3
  1735  02F1  1703               	bsf	3,6	;RP1=1, select bank3
  1736  02F2  07DC               	addwf	main@i_462^(0+384),f
  1737  02F3  2ADF               	goto	l3056
  1738  02F4                     l3066:	
  1739                           
  1740                           ;main.c: 210:                 if (timerReadFromGateway >= 4)
  1741  02F4  3004               	movlw	4
  1742  02F5  024C               	subwf	_timerReadFromGateway,w
  1743  02F6  1C03               	skipc
  1744  02F7  2AF9               	goto	u2731
  1745  02F8  2AFA               	goto	u2730
  1746  02F9                     u2731:	
  1747  02F9  2AFD               	goto	l3070
  1748  02FA                     u2730:	
  1749  02FA                     l3068:	
  1750                           
  1751                           ;main.c: 211:                 {;main.c: 212:                     readGatewayDone.Bit = 1
      +                          ;
  1752  02FA  1455               	bsf	_readGatewayDone,0
  1753                           
  1754                           ;main.c: 213:                     readGatewayDone.Timeout = 1;
  1755  02FB  14D5               	bsf	_readGatewayDone,1
  1756                           
  1757                           ;main.c: 214:                     readGateway.Bit = 0;
  1758  02FC  1054               	bcf	_readGateway,0
  1759  02FD                     l3070:	
  1760                           
  1761                           ;main.c: 217:                 if (dataFromGatewayIndex >= 15)
  1762  02FD  300F               	movlw	15
  1763  02FE  024D               	subwf	_dataFromGatewayIndex,w
  1764  02FF  1C03               	skipc
  1765  0300  2B02               	goto	u2741
  1766  0301  2B03               	goto	u2740
  1767  0302                     u2741:	
  1768  0302  2B1C               	goto	l227
  1769  0303                     u2740:	
  1770  0303                     l3072:	
  1771                           
  1772                           ;main.c: 218:                 {;main.c: 219:                     readGatewayDone.Bit = 1
      +                          ;
  1773  0303  1455               	bsf	_readGatewayDone,0
  1774                           
  1775                           ;main.c: 220:                     readGatewayDone.Timeout = 0;
  1776  0304  10D5               	bcf	_readGatewayDone,1
  1777                           
  1778                           ;main.c: 221:                     readGateway.Bit = 0;
  1779  0305  1054               	bcf	_readGateway,0
  1780  0306  2B1C               	goto	l227
  1781  0307                     l3076:	
  1782  0307  1683               	bsf	3,5	;RP0=1, select bank1
  1783  0308  1303               	bcf	3,6	;RP1=0, select bank1
  1784  0309  0824               	movf	_dataFromGateway^(0+128),w
  1785  030A  397F               	andlw	127
  1786  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1787  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1788  030D  00C0               	movwf	??_main
  1789  030E  01C1               	clrf	??_main+1
  1790                           
  1791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1792                           ; Switch size 1, requested type "simple"
  1793                           ; Number of cases is 1, Range of values is 0 to 0
  1794                           ; switch strategies available:
  1795                           ; Name         Instructions Cycles
  1796                           ; simple_byte            4     3 (average)
  1797                           ; direct_byte           11     8 (fixed)
  1798                           ; jumptable            260     6 (fixed)
  1799                           ;	Chosen strategy is simple_byte
  1800  030F  0841               	movf	??_main+1,w
  1801  0310  3A00               	xorlw	0	; case 0
  1802  0311  1903               	skipnz
  1803  0312  2B14               	goto	l3290
  1804  0313  2AF4               	goto	l3066
  1805  0314                     l3290:	
  1806                           
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 2, Range of values is 8 to 10
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte            7     4 (average)
  1812                           ; direct_byte           20    11 (fixed)
  1813                           ; jumptable            263     9 (fixed)
  1814                           ;	Chosen strategy is simple_byte
  1815  0314  0840               	movf	??_main,w
  1816  0315  3A08               	xorlw	8	; case 8
  1817  0316  1903               	skipnz
  1818  0317  2889               	goto	l229
  1819  0318  3A02               	xorlw	2	; case 10
  1820  0319  1903               	skipnz
  1821  031A  2A13               	goto	l243
  1822  031B  2AF4               	goto	l3066
  1823  031C                     l227:	
  1824                           ;main.c: 225:         }
  1825                           
  1826                           
  1827                           ;main.c: 228:         if (readGatewayDone.Bit)
  1828  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1829  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1830  031E  1C55               	btfss	_readGatewayDone,0
  1831  031F  2B21               	goto	u2751
  1832  0320  2B22               	goto	u2750
  1833  0321                     u2751:	
  1834  0321  2B36               	goto	l3090
  1835  0322                     u2750:	
  1836  0322                     l3078:	
  1837                           
  1838                           ;main.c: 229:         {;main.c: 231:             readGateway.Bit = 0;
  1839  0322  1054               	bcf	_readGateway,0
  1840  0323                     l3080:	
  1841                           
  1842                           ;main.c: 232:             dataFromGatewayIndex = 0;
  1843  0323  01CD               	clrf	_dataFromGatewayIndex
  1844  0324                     l3082:	
  1845                           
  1846                           ;main.c: 233:             readGatewayDone.Bit = 0;
  1847  0324  1055               	bcf	_readGatewayDone,0
  1848                           
  1849                           ;main.c: 234:             timerReadFromGateway = 0;
  1850  0325  01CC               	clrf	_timerReadFromGateway
  1851  0326                     l3084:	
  1852                           
  1853                           ;main.c: 237:             if (readGatewayDone.Timeout)
  1854  0326  1CD5               	btfss	_readGatewayDone,1
  1855  0327  2B29               	goto	u2761
  1856  0328  2B2A               	goto	u2760
  1857  0329                     u2761:	
  1858  0329  2B2C               	goto	l3088
  1859  032A                     u2760:	
  1860  032A                     l3086:	
  1861                           
  1862                           ;main.c: 238:             {;main.c: 239:                 readGatewayDone.Timeout = 0;
  1863  032A  10D5               	bcf	_readGatewayDone,1
  1864                           
  1865                           ;main.c: 240:             }
  1866  032B  2B36               	goto	l3090
  1867  032C                     l3088:	
  1868                           
  1869                           ;main.c: 243:             {;main.c: 245:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1870  032C  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1871  032D  00C0               	movwf	??_main
  1872  032E  0840               	movf	??_main,w
  1873  032F  00AC               	movwf	SetReceivedTimes@_semafori
  1874  0330  30A4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1875  0331  120A  118A  26E9  120A  118A  	fcall	_SetReceivedTimes
  1876  0336                     l3090:	
  1877                           
  1878                           ;main.c: 252:         if (secondPassed.Bit && cycled.Bit)
  1879  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0338  1C53               	btfss	_secondPassed,0
  1882  0339  2B3B               	goto	u2771
  1883  033A  2B3C               	goto	u2770
  1884  033B                     u2771:	
  1885  033B  2CA4               	goto	l3138
  1886  033C                     u2770:	
  1887  033C                     l3092:	
  1888  033C  1C52               	btfss	_cycled,0
  1889  033D  2B3F               	goto	u2781
  1890  033E  2B40               	goto	u2780
  1891  033F                     u2781:	
  1892  033F  2CA4               	goto	l3138
  1893  0340                     u2780:	
  1894  0340                     l3094:	
  1895                           
  1896                           ;main.c: 253:         {;main.c: 254:             time++;
  1897  0340  3001               	movlw	1
  1898  0341  1683               	bsf	3,5	;RP0=1, select bank3
  1899  0342  1703               	bsf	3,6	;RP1=1, select bank3
  1900  0343  07D9               	addwf	main@time^(0+384),f
  1901  0344  1803               	skipnc
  1902  0345  0ADA               	incf	(main@time+1)^(0+384),f
  1903  0346  3000               	movlw	0
  1904  0347  07DA               	addwf	(main@time+1)^(0+384),f
  1905  0348                     l3096:	
  1906                           
  1907                           ;main.c: 256:             unsigned char i=0;
  1908  0348  01E0               	clrf	main@i_464^(0+384)
  1909                           
  1910                           ;main.c: 257:             while(i<n_semafori)
  1911  0349  2C50               	goto	l3122
  1912  034A                     l3098:	
  1913                           
  1914                           ;main.c: 258:             {;main.c: 259:                 if( (*Semafori[i]).times[0]==0 
      +                          )
  1915  034A  0860               	movf	main@i_464^(0+384),w
  1916  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1917  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1918  034D  00C0               	movwf	??_main
  1919  034E  0740               	addwf	??_main,w
  1920  034F  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1921  0350  0084               	movwf	4
  1922  0351  1383               	bcf	3,7	;select IRP bank1
  1923  0352  0800               	movf	0,w
  1924  0353  00C1               	movwf	??_main+1
  1925  0354  0A84               	incf	4,f
  1926  0355  0800               	movf	0,w
  1927  0356  00C2               	movwf	??_main+2
  1928  0357  0841               	movf	??_main+1,w
  1929  0358  0084               	movwf	4
  1930  0359  1783               	bsf	3,7
  1931  035A  1C42               	btfss	??_main+2,0
  1932  035B  1383               	bcf	3,7
  1933  035C  0800               	movf	0,w
  1934  035D  00C3               	movwf	??_main+3
  1935  035E  0A84               	incf	4,f
  1936  035F  0800               	movf	0,w
  1937  0360  00C4               	movwf	??_main+4
  1938  0361  0843               	movf	??_main+3,w
  1939  0362  0444               	iorwf	??_main+4,w
  1940  0363  1D03               	btfss	3,2
  1941  0364  2B66               	goto	u2791
  1942  0365  2B67               	goto	u2790
  1943  0366                     u2791:	
  1944  0366  2B70               	goto	l3102
  1945  0367                     u2790:	
  1946  0367                     l3100:	
  1947                           
  1948                           ;main.c: 260:                 {;main.c: 261:                     i++;
  1949  0367  3001               	movlw	1
  1950  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1952  036A  00C0               	movwf	??_main
  1953  036B  0840               	movf	??_main,w
  1954  036C  1683               	bsf	3,5	;RP0=1, select bank3
  1955  036D  1703               	bsf	3,6	;RP1=1, select bank3
  1956  036E  07E0               	addwf	main@i_464^(0+384),f
  1957                           
  1958                           ;main.c: 262:                 }
  1959  036F  2C50               	goto	l3122
  1960  0370                     l3102:	
  1961                           
  1962                           ;main.c: 264:                 {;main.c: 265:                     unsigned char lux_selec
      +                          t=(*Semafori[i]).lux_select;
  1963  0370  1683               	bsf	3,5	;RP0=1, select bank3
  1964  0371  1703               	bsf	3,6	;RP1=1, select bank3
  1965  0372  0860               	movf	main@i_464^(0+384),w
  1966  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0375  00C0               	movwf	??_main
  1969  0376  0740               	addwf	??_main,w
  1970  0377  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1971  0378  0084               	movwf	4
  1972  0379  1383               	bcf	3,7	;select IRP bank1
  1973  037A  0800               	movf	0,w
  1974  037B  00C1               	movwf	??_main+1
  1975  037C  0A84               	incf	4,f
  1976  037D  0800               	movf	0,w
  1977  037E  00C2               	movwf	??_main+2
  1978  037F  0841               	movf	??_main+1,w
  1979  0380  3E0C               	addlw	12
  1980  0381  00C3               	movwf	??_main+3
  1981  0382  0842               	movf	??_main+2,w
  1982  0383  1803               	skipnc
  1983  0384  3E01               	addlw	1
  1984  0385  3E00               	addlw	0
  1985  0386  00C4               	movwf	??_main+4
  1986  0387  0843               	movf	??_main+3,w
  1987  0388  0084               	movwf	4
  1988  0389  1783               	bsf	3,7
  1989  038A  1C44               	btfss	??_main+4,0
  1990  038B  1383               	bcf	3,7
  1991  038C  0800               	movf	0,w
  1992  038D  00C5               	movwf	??_main+5
  1993  038E  0845               	movf	??_main+5,w
  1994  038F  1683               	bsf	3,5	;RP0=1, select bank3
  1995  0390  1703               	bsf	3,6	;RP1=1, select bank3
  1996  0391  00DD               	movwf	main@lux_select^(0+384)
  1997                           
  1998                           ;main.c: 266:                     if ((*Semafori[i]).times[lux_select] - time < 0)
  1999  0392  0860               	movf	main@i_464^(0+384),w
  2000  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0395  00C0               	movwf	??_main
  2003  0396  0740               	addwf	??_main,w
  2004  0397  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2005  0398  0084               	movwf	4
  2006  0399  1383               	bcf	3,7	;select IRP bank1
  2007  039A  0800               	movf	0,w
  2008  039B  00C1               	movwf	??_main+1
  2009  039C  0A84               	incf	4,f
  2010  039D  0800               	movf	0,w
  2011  039E  00C2               	movwf	??_main+2
  2012  039F  1683               	bsf	3,5	;RP0=1, select bank3
  2013  03A0  1703               	bsf	3,6	;RP1=1, select bank3
  2014  03A1  085D               	movf	main@lux_select^(0+384),w
  2015  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2016  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2017  03A4  00C3               	movwf	??_main+3
  2018  03A5  0743               	addwf	??_main+3,w
  2019  03A6  0741               	addwf	??_main+1,w
  2020  03A7  00C4               	movwf	??_main+4
  2021  03A8  0842               	movf	??_main+2,w
  2022  03A9  1803               	skipnc
  2023  03AA  3E01               	addlw	1
  2024  03AB  00C5               	movwf	??_main+5
  2025  03AC  0844               	movf	??_main+4,w
  2026  03AD  0084               	movwf	4
  2027  03AE  1783               	bsf	3,7
  2028  03AF  1C45               	btfss	??_main+5,0
  2029  03B0  1383               	bcf	3,7
  2030  03B1  0800               	movf	0,w
  2031  03B2  00C6               	movwf	??_main+6
  2032  03B3  0A84               	incf	4,f
  2033  03B4  0800               	movf	0,w
  2034  03B5  00C7               	movwf	??_main+7
  2035  03B6  1683               	bsf	3,5	;RP0=1, select bank3
  2036  03B7  1703               	bsf	3,6	;RP1=1, select bank3
  2037  03B8  0859               	movf	main@time^(0+384),w
  2038  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2039  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2040  03BB  0246               	subwf	??_main+6,w
  2041  03BC  00C8               	movwf	??_main+8
  2042  03BD  1683               	bsf	3,5	;RP0=1, select bank3
  2043  03BE  1703               	bsf	3,6	;RP1=1, select bank3
  2044  03BF  085A               	movf	(main@time+1)^(0+384),w
  2045  03C0  1C03               	skipc
  2046  03C1  0A5A               	incf	(main@time+1)^(0+384),w
  2047  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2048  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2049  03C4  0247               	subwf	??_main+7,w
  2050  03C5  00C9               	movwf	??_main+9
  2051  03C6  1FC9               	btfss	??_main+9,7
  2052  03C7  2BC9               	goto	u2801
  2053  03C8  2BCA               	goto	u2800
  2054  03C9                     u2801:	
  2055  03C9  2BE7               	goto	l3116
  2056  03CA                     u2800:	
  2057  03CA                     l3104:	
  2058                           
  2059                           ;main.c: 267:                     {;main.c: 268:                         lux_select++;
  2060  03CA  3001               	movlw	1
  2061  03CB  00C0               	movwf	??_main
  2062  03CC  0840               	movf	??_main,w
  2063  03CD  1683               	bsf	3,5	;RP0=1, select bank3
  2064  03CE  1703               	bsf	3,6	;RP1=1, select bank3
  2065  03CF  07DD               	addwf	main@lux_select^(0+384),f
  2066  03D0                     l3106:	
  2067                           
  2068                           ;main.c: 269:                         time=1;
  2069  03D0  3001               	movlw	1
  2070  03D1  00D9               	movwf	main@time^(0+384)
  2071  03D2  3000               	movlw	0
  2072  03D3  00DA               	movwf	(main@time^(0+384)+1)
  2073  03D4                     l3108:	
  2074                           
  2075                           ;main.c: 270:                         if (lux_select >= 3)
  2076  03D4  3003               	movlw	3
  2077  03D5  025D               	subwf	main@lux_select^(0+384),w
  2078  03D6  1C03               	skipc
  2079  03D7  2BD9               	goto	u2811
  2080  03D8  2BDA               	goto	u2810
  2081  03D9                     u2811:	
  2082  03D9  2BE7               	goto	l3116
  2083  03DA                     u2810:	
  2084  03DA                     l3110:	
  2085                           
  2086                           ;main.c: 271:                         {;main.c: 272:                             lux_sel
      +                          ect=0;
  2087  03DA  01DD               	clrf	main@lux_select^(0+384)
  2088  03DB                     l3112:	
  2089  03DB  3007               	movlw	7
  2090  03DC  0660               	xorwf	main@i_464^(0+384),w
  2091  03DD  1D03               	btfss	3,2
  2092  03DE  2BE0               	goto	u2821
  2093  03DF  2BE1               	goto	u2820
  2094  03E0                     u2821:	
  2095  03E0  2BE7               	goto	l3116
  2096  03E1                     u2820:	
  2097  03E1                     l3114:	
  2098                           
  2099                           ;main.c: 274:                             {;main.c: 276:                                
      +                           UpdateTimes(Semafori);
  2100  03E1  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  2101  03E2  120A  158A  276D  120A  118A  	fcall	_UpdateTimes
  2102  03E7                     l3116:	
  2103                           
  2104                           ;main.c: 281:                     (*Semafori[i]).lux_select=lux_select;
  2105  03E7  1683               	bsf	3,5	;RP0=1, select bank3
  2106  03E8  1703               	bsf	3,6	;RP1=1, select bank3
  2107  03E9  085D               	movf	main@lux_select^(0+384),w
  2108  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2109  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2110  03EC  00C0               	movwf	??_main
  2111  03ED  1683               	bsf	3,5	;RP0=1, select bank3
  2112  03EE  1703               	bsf	3,6	;RP1=1, select bank3
  2113  03EF  0860               	movf	main@i_464^(0+384),w
  2114  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2115  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2116  03F2  00C1               	movwf	??_main+1
  2117  03F3  0741               	addwf	??_main+1,w
  2118  03F4  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2119  03F5  0084               	movwf	4
  2120  03F6  1383               	bcf	3,7	;select IRP bank1
  2121  03F7  0800               	movf	0,w
  2122  03F8  00C2               	movwf	??_main+2
  2123  03F9  0A84               	incf	4,f
  2124  03FA  0800               	movf	0,w
  2125  03FB  00C3               	movwf	??_main+3
  2126  03FC  0842               	movf	??_main+2,w
  2127  03FD  3E0C               	addlw	12
  2128  03FE  00C4               	movwf	??_main+4
  2129  03FF  0843               	movf	??_main+3,w
  2130  0400  1803               	skipnc
  2131  0401  3E01               	addlw	1
  2132  0402  3E00               	addlw	0
  2133  0403  00C5               	movwf	??_main+5
  2134  0404  0844               	movf	??_main+4,w
  2135  0405  0084               	movwf	4
  2136  0406  1783               	bsf	3,7
  2137  0407  1C45               	btfss	??_main+5,0
  2138  0408  1383               	bcf	3,7
  2139  0409  0840               	movf	??_main,w
  2140  040A  0080               	movwf	0
  2141  040B                     l3118:	
  2142                           
  2143                           ;main.c: 282:                     GetDigits(&centinaia, &decine, &unita, (*Semafori[i]).
      +                          times[lux_select] - time);
  2144  040B  3063               	movlw	(low (_decine| 0))& (0+255)
  2145  040C  00C0               	movwf	??_main
  2146  040D  0840               	movf	??_main,w
  2147  040E  00B4               	movwf	GetDigits@decine
  2148  040F  3064               	movlw	(low (_unita| 0))& (0+255)
  2149  0410  00C1               	movwf	??_main+1
  2150  0411  0841               	movf	??_main+1,w
  2151  0412  00B5               	movwf	GetDigits@unita
  2152  0413  1683               	bsf	3,5	;RP0=1, select bank3
  2153  0414  1703               	bsf	3,6	;RP1=1, select bank3
  2154  0415  0860               	movf	main@i_464^(0+384),w
  2155  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0418  00C2               	movwf	??_main+2
  2158  0419  0742               	addwf	??_main+2,w
  2159  041A  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2160  041B  0084               	movwf	4
  2161  041C  1383               	bcf	3,7	;select IRP bank1
  2162  041D  0800               	movf	0,w
  2163  041E  00C3               	movwf	??_main+3
  2164  041F  0A84               	incf	4,f
  2165  0420  0800               	movf	0,w
  2166  0421  00C4               	movwf	??_main+4
  2167  0422  1683               	bsf	3,5	;RP0=1, select bank3
  2168  0423  1703               	bsf	3,6	;RP1=1, select bank3
  2169  0424  085D               	movf	main@lux_select^(0+384),w
  2170  0425  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0426  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0427  00C5               	movwf	??_main+5
  2173  0428  0745               	addwf	??_main+5,w
  2174  0429  0743               	addwf	??_main+3,w
  2175  042A  00C6               	movwf	??_main+6
  2176  042B  0844               	movf	??_main+4,w
  2177  042C  1803               	skipnc
  2178  042D  3E01               	addlw	1
  2179  042E  00C7               	movwf	??_main+7
  2180  042F  0846               	movf	??_main+6,w
  2181  0430  0084               	movwf	4
  2182  0431  1783               	bsf	3,7
  2183  0432  1C47               	btfss	??_main+7,0
  2184  0433  1383               	bcf	3,7
  2185  0434  0800               	movf	0,w
  2186  0435  00C8               	movwf	??_main+8
  2187  0436  0A84               	incf	4,f
  2188  0437  0800               	movf	0,w
  2189  0438  00C9               	movwf	??_main+9
  2190  0439  1683               	bsf	3,5	;RP0=1, select bank3
  2191  043A  1703               	bsf	3,6	;RP1=1, select bank3
  2192  043B  0859               	movf	main@time^(0+384),w
  2193  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2194  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2195  043E  0248               	subwf	??_main+8,w
  2196  043F  00B6               	movwf	GetDigits@Time
  2197  0440  1683               	bsf	3,5	;RP0=1, select bank3
  2198  0441  1703               	bsf	3,6	;RP1=1, select bank3
  2199  0442  085A               	movf	(main@time+1)^(0+384),w
  2200  0443  1C03               	skipc
  2201  0444  0A5A               	incf	(main@time+1)^(0+384),w
  2202  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2203  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2204  0447  0249               	subwf	??_main+9,w
  2205  0448  00B7               	movwf	GetDigits@Time+1
  2206  0449  3062               	movlw	(low (_centinaia| 0))& (0+255)
  2207  044A  120A  118A  264D  120A  118A  	fcall	_GetDigits
  2208  044F  2B67               	goto	l3100
  2209  0450                     l3122:	
  2210  0450  3008               	movlw	8
  2211  0451  0260               	subwf	main@i_464^(0+384),w
  2212  0452  1C03               	skipc
  2213  0453  2C55               	goto	u2831
  2214  0454  2C56               	goto	u2830
  2215  0455                     u2831:	
  2216  0455  2B4A               	goto	l3098
  2217  0456                     u2830:	
  2218  0456  2CA4               	goto	l3138
  2219  0457                     l3124:	
  2220                           
  2221                           ;main.c: 294:             if (centinaia > 0)
  2222  0457  0862               	movf	_centinaia,w
  2223  0458  1903               	btfsc	3,2
  2224  0459  2C5B               	goto	u2841
  2225  045A  2C5C               	goto	u2840
  2226  045B                     u2841:	
  2227  045B  2CB9               	goto	l3140
  2228  045C                     u2840:	
  2229  045C                     l3126:	
  2230                           
  2231                           ;main.c: 295:             {;main.c: 296:                 SetDisplay(1, 0, 0, display[cen
      +                          tinaia]);
  2232  045C  01A4               	clrf	SetDisplay@d2
  2233  045D  01A5               	clrf	SetDisplay@d3
  2234  045E  0862               	movf	_centinaia,w
  2235  045F  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2236  0460  0084               	movwf	4
  2237  0461  120A  158A  2000  120A  118A  	fcall	stringdir
  2238  0466  00C0               	movwf	??_main
  2239  0467  0840               	movf	??_main,w
  2240  0468  00A6               	movwf	SetDisplay@value
  2241  0469  3001               	movlw	1
  2242  046A  120A  158A  2431  120A  118A  	fcall	_SetDisplay
  2243  046F  2CB9               	goto	l3140
  2244  0470                     l3128:	
  2245                           
  2246                           ;main.c: 300:             if (decine > 0 || centinaia > 0)
  2247  0470  0863               	movf	_decine,w
  2248  0471  1D03               	btfss	3,2
  2249  0472  2C74               	goto	u2851
  2250  0473  2C75               	goto	u2850
  2251  0474                     u2851:	
  2252  0474  2C7A               	goto	l3132
  2253  0475                     u2850:	
  2254  0475                     l3130:	
  2255  0475  0862               	movf	_centinaia,w
  2256  0476  1903               	btfsc	3,2
  2257  0477  2C79               	goto	u2861
  2258  0478  2C7A               	goto	u2860
  2259  0479                     u2861:	
  2260  0479  2CB9               	goto	l3140
  2261  047A                     u2860:	
  2262  047A                     l3132:	
  2263                           
  2264                           ;main.c: 301:             {;main.c: 302:                 SetDisplay(0, 1, 0, display[dec
      +                          ine]);
  2265  047A  01A4               	clrf	SetDisplay@d2
  2266  047B  0AA4               	incf	SetDisplay@d2,f
  2267  047C  01A5               	clrf	SetDisplay@d3
  2268  047D  0863               	movf	_decine,w
  2269  047E  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2270  047F  0084               	movwf	4
  2271  0480  120A  158A  2000  120A  118A  	fcall	stringdir
  2272  0485  00C0               	movwf	??_main
  2273  0486  0840               	movf	??_main,w
  2274  0487  00A6               	movwf	SetDisplay@value
  2275  0488  3000               	movlw	0
  2276  0489  120A  158A  2431  120A  118A  	fcall	_SetDisplay
  2277  048E  2CB9               	goto	l3140
  2278  048F                     l3134:	
  2279                           
  2280                           ;main.c: 306:             SetDisplay(0, 0, 1, display[unita]);
  2281  048F  01A4               	clrf	SetDisplay@d2
  2282  0490  01A5               	clrf	SetDisplay@d3
  2283  0491  0AA5               	incf	SetDisplay@d3,f
  2284  0492  0864               	movf	_unita,w
  2285  0493  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2286  0494  0084               	movwf	4
  2287  0495  120A  158A  2000  120A  118A  	fcall	stringdir
  2288  049A  00C0               	movwf	??_main
  2289  049B  0840               	movf	??_main,w
  2290  049C  00A6               	movwf	SetDisplay@value
  2291  049D  3000               	movlw	0
  2292  049E  120A  158A  2431  120A  118A  	fcall	_SetDisplay
  2293                           
  2294                           ;main.c: 307:             break;
  2295  04A3  2CB9               	goto	l3140
  2296  04A4                     l3138:	
  2297  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2298  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2299  04A6  0851               	movf	_disp,w
  2300  04A7  00C0               	movwf	??_main
  2301  04A8  01C1               	clrf	??_main+1
  2302                           
  2303                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2304                           ; Switch size 1, requested type "simple"
  2305                           ; Number of cases is 1, Range of values is 0 to 0
  2306                           ; switch strategies available:
  2307                           ; Name         Instructions Cycles
  2308                           ; simple_byte            4     3 (average)
  2309                           ; direct_byte           11     8 (fixed)
  2310                           ; jumptable            260     6 (fixed)
  2311                           ;	Chosen strategy is simple_byte
  2312  04A9  0841               	movf	??_main+1,w
  2313  04AA  3A00               	xorlw	0	; case 0
  2314  04AB  1903               	skipnz
  2315  04AC  2CAE               	goto	l3292
  2316  04AD  2CB9               	goto	l3140
  2317  04AE                     l3292:	
  2318                           
  2319                           ; Switch size 1, requested type "simple"
  2320                           ; Number of cases is 3, Range of values is 0 to 2
  2321                           ; switch strategies available:
  2322                           ; Name         Instructions Cycles
  2323                           ; simple_byte           10     6 (average)
  2324                           ; direct_byte           17     8 (fixed)
  2325                           ; jumptable            260     6 (fixed)
  2326                           ;	Chosen strategy is simple_byte
  2327  04AE  0840               	movf	??_main,w
  2328  04AF  3A00               	xorlw	0	; case 0
  2329  04B0  1903               	skipnz
  2330  04B1  2C57               	goto	l3124
  2331  04B2  3A01               	xorlw	1	; case 1
  2332  04B3  1903               	skipnz
  2333  04B4  2C70               	goto	l3128
  2334  04B5  3A03               	xorlw	3	; case 2
  2335  04B6  1903               	skipnz
  2336  04B7  2C8F               	goto	l3134
  2337  04B8  2CB9               	goto	l3140
  2338  04B9                     l3140:	
  2339                           
  2340                           ;main.c: 309:         disp = (disp + 1) % 3;
  2341  04B9  3003               	movlw	3
  2342  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2343  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2344  04BC  00A4               	movwf	___awmod@divisor
  2345  04BD  3000               	movlw	0
  2346  04BE  00A5               	movwf	___awmod@divisor+1
  2347  04BF  0851               	movf	_disp,w
  2348  04C0  3E01               	addlw	1
  2349  04C1  00A6               	movwf	___awmod@dividend
  2350  04C2  3000               	movlw	0
  2351  04C3  1803               	skipnc
  2352  04C4  3001               	movlw	1
  2353  04C5  00A7               	movwf	___awmod@dividend+1
  2354  04C6  120A  158A  261D  120A  118A  	fcall	___awmod
  2355  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2356  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2357  04CD  0824               	movf	?___awmod,w
  2358  04CE  00C0               	movwf	??_main
  2359  04CF  0840               	movf	??_main,w
  2360  04D0  00D1               	movwf	_disp
  2361  04D1                     l3142:	
  2362                           
  2363                           ;main.c: 315:         if (secondPassed.Bit && cycled.Bit)
  2364  04D1  1C53               	btfss	_secondPassed,0
  2365  04D2  2CD4               	goto	u2871
  2366  04D3  2CD5               	goto	u2870
  2367  04D4                     u2871:	
  2368  04D4  2CDB               	goto	l270
  2369  04D5                     u2870:	
  2370  04D5                     l3144:	
  2371  04D5  1C52               	btfss	_cycled,0
  2372  04D6  2CD8               	goto	u2881
  2373  04D7  2CD9               	goto	u2880
  2374  04D8                     u2881:	
  2375  04D8  2CDB               	goto	l270
  2376  04D9                     u2880:	
  2377  04D9                     l3146:	
  2378                           
  2379                           ;main.c: 316:         {;main.c: 317:             secondPassed.Bit = 0;
  2380  04D9  1053               	bcf	_secondPassed,0
  2381                           
  2382                           ;main.c: 318:             cycled.Bit = 0;
  2383  04DA  1052               	bcf	_cycled,0
  2384  04DB                     l270:	
  2385                           ;main.c: 319:         }
  2386                           
  2387                           
  2388                           ;main.c: 320:         if (secondPassed.Bit && !cycled.Bit)
  2389  04DB  1C53               	btfss	_secondPassed,0
  2390  04DC  2CDE               	goto	u2891
  2391  04DD  2CDF               	goto	u2890
  2392  04DE                     u2891:	
  2393  04DE  2882               	goto	l2996
  2394  04DF                     u2890:	
  2395  04DF                     l3148:	
  2396  04DF  1852               	btfsc	_cycled,0
  2397  04E0  2CE2               	goto	u2901
  2398  04E1  2CE3               	goto	u2900
  2399  04E2                     u2901:	
  2400  04E2  2882               	goto	l2996
  2401  04E3                     u2900:	
  2402  04E3                     l3150:	
  2403                           
  2404                           ;main.c: 321:         {;main.c: 322:             cycled.Bit = 1;
  2405  04E3  1452               	bsf	_cycled,0
  2406  04E4  2882               	goto	l2996
  2407  04E5  120A  118A  2810   	ljmp	start
  2408  04E8                     __end_of_main:	
  2409                           
  2410                           	psect	text1
  2411  0C93                     __ptext1:	
  2412 ;; *************** function _sendByte *****************
  2413 ;; Defined at:
  2414 ;;		line 387 in file "main.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  byte0           1    wreg     unsigned char 
  2417 ;;  byte1           1   24[BANK0 ] unsigned char 
  2418 ;;  valore          1   25[BANK0 ] unsigned char 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  byte0           1   29[BANK0 ] unsigned char 
  2421 ;;  i               1   31[BANK0 ] unsigned char 
  2422 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2423 ;;		 -> BuildByte@txByte(5), 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         0       2       0       0       0
  2434 ;;      Locals:         0       3       0       0       0
  2435 ;;      Temps:          0       3       0       0       0
  2436 ;;      Totals:         0       8       0       0       0
  2437 ;;Total ram usage:        8 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    4
  2440 ;; This function calls:
  2441 ;;		_BuildByte
  2442 ;;		_UART_TxChar
  2443 ;; This function is called by:
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _sendByte
  2450  0C93                     _sendByte:	
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2454                           ;sendByte@byte0 stored from wreg
  2455  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0C95  00BD               	movwf	sendByte@byte0
  2458  0C96                     l2930:	
  2459                           
  2460                           ;main.c: 387: void sendByte(char byte0, char byte1, char valore);main.c: 388: {;main.c: 
      +                          389:     char *txByte;;main.c: 390:     txByte = BuildByte(byte0, byte1, valore);
  2461  0C96  0838               	movf	sendByte@byte1,w
  2462  0C97  00BA               	movwf	??_sendByte
  2463  0C98  083A               	movf	??_sendByte,w
  2464  0C99  00A4               	movwf	BuildByte@byte1
  2465  0C9A  0839               	movf	sendByte@valore,w
  2466  0C9B  00BB               	movwf	??_sendByte+1
  2467  0C9C  083B               	movf	??_sendByte+1,w
  2468  0C9D  00A5               	movwf	BuildByte@valore
  2469  0C9E  083D               	movf	sendByte@byte0,w
  2470  0C9F  120A  118A  24E8  120A  158A  	fcall	_BuildByte
  2471  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0CA6  00BC               	movwf	??_sendByte+2
  2474  0CA7  083C               	movf	??_sendByte+2,w
  2475  0CA8  00BE               	movwf	sendByte@txByte
  2476  0CA9                     l2932:	
  2477                           
  2478                           ;main.c: 392:     for (unsigned char i = 0; i < 5; i++)
  2479  0CA9  01BF               	clrf	sendByte@i
  2480  0CAA                     l2938:	
  2481                           
  2482                           ;main.c: 393:     {;main.c: 394:         UART_TxChar(*(txByte++));
  2483  0CAA  083E               	movf	sendByte@txByte,w
  2484  0CAB  0084               	movwf	4
  2485  0CAC  1383               	bcf	3,7	;select IRP bank0
  2486  0CAD  0800               	movf	0,w
  2487  0CAE  120A  158A  23F0  120A  158A  	fcall	_UART_TxChar
  2488  0CB3                     l2940:	
  2489  0CB3  3001               	movlw	1
  2490  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0CB6  00BA               	movwf	??_sendByte
  2493  0CB7  083A               	movf	??_sendByte,w
  2494  0CB8  07BE               	addwf	sendByte@txByte,f
  2495  0CB9                     l2942:	
  2496                           
  2497                           ;main.c: 395:     }
  2498  0CB9  3001               	movlw	1
  2499  0CBA  00BA               	movwf	??_sendByte
  2500  0CBB  083A               	movf	??_sendByte,w
  2501  0CBC  07BF               	addwf	sendByte@i,f
  2502  0CBD                     l2944:	
  2503  0CBD  3005               	movlw	5
  2504  0CBE  023F               	subwf	sendByte@i,w
  2505  0CBF  1C03               	skipc
  2506  0CC0  2CC2               	goto	u2641
  2507  0CC1  2CC3               	goto	u2640
  2508  0CC2                     u2641:	
  2509  0CC2  2CAA               	goto	l2938
  2510  0CC3                     u2640:	
  2511  0CC3                     l309:	
  2512  0CC3  0008               	return
  2513  0CC4                     __end_of_sendByte:	
  2514                           
  2515                           	psect	text2
  2516  0BF0                     __ptext2:	
  2517 ;; *************** function _UART_TxChar *****************
  2518 ;; Defined at:
  2519 ;;		line 361 in file "main.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  ch              1    wreg     unsigned char 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  ch              1    4[BANK0 ] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         0       0       0       0       0
  2534 ;;      Locals:         0       1       0       0       0
  2535 ;;      Temps:          0       0       0       0       0
  2536 ;;      Totals:         0       1       0       0       0
  2537 ;;Total ram usage:        1 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    3
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_sendByte
  2544 ;;		_UART_Write_Text
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _UART_TxChar
  2550  0BF0                     _UART_TxChar:	
  2551                           
  2552                           ;incstack = 0
  2553                           ; Regs used in _UART_TxChar: [wreg]
  2554                           ;UART_TxChar@ch stored from wreg
  2555  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0BF2  00A4               	movwf	UART_TxChar@ch
  2558  0BF3                     l2662:	
  2559  0BF3                     l289:	
  2560                           ;main.c: 364:         ;
  2561                           
  2562                           
  2563                           ;main.c: 363:     while (!TXIF)
  2564  0BF3  1E0C               	btfss	12,4	;volatile
  2565  0BF4  2BF6               	goto	u2201
  2566  0BF5  2BF7               	goto	u2200
  2567  0BF6                     u2201:	
  2568  0BF6  2BF3               	goto	l289
  2569  0BF7                     u2200:	
  2570  0BF7                     l291:	
  2571                           
  2572                           ;main.c: 365:     TXIF = 0;
  2573  0BF7  120C               	bcf	12,4	;volatile
  2574  0BF8                     l2664:	
  2575                           
  2576                           ;main.c: 366:     TXREG = ch;
  2577  0BF8  0824               	movf	UART_TxChar@ch,w
  2578  0BF9  0099               	movwf	25	;volatile
  2579  0BFA                     l292:	
  2580  0BFA  0008               	return
  2581  0BFB                     __end_of_UART_TxChar:	
  2582                           
  2583                           	psect	text3
  2584  04E8                     __ptext3:	
  2585 ;; *************** function _BuildByte *****************
  2586 ;; Defined at:
  2587 ;;		line 2 in file "./CustomLib/Serial.h"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  byte0           1    wreg     unsigned char 
  2590 ;;  byte1           1    4[BANK0 ] unsigned char 
  2591 ;;  valore          1    5[BANK0 ] unsigned char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  byte0           1    8[BANK0 ] unsigned char 
  2594 ;;  y               2   18[BANK0 ] int 
  2595 ;;  y               2   16[BANK0 ] int 
  2596 ;;  i               2   22[BANK0 ] int 
  2597 ;;  i               2   20[BANK0 ] int 
  2598 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2599 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2600 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      PTR unsigned char 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2610 ;;      Params:         0       2       0       0       0
  2611 ;;      Locals:         0      16       0       0       0
  2612 ;;      Temps:          0       2       0       0       0
  2613 ;;      Totals:         0      20       0       0       0
  2614 ;;Total ram usage:       20 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    3
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_sendByte
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function _BuildByte
  2626  04E8                     _BuildByte:	
  2627                           
  2628                           ;incstack = 0
  2629                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2630                           ;BuildByte@byte0 stored from wreg
  2631  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2632  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2633  04EA  00A8               	movwf	BuildByte@byte0
  2634  04EB                     l2580:	
  2635                           
  2636                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2637  04EB  0828               	movf	BuildByte@byte0,w
  2638  04EC  397F               	andlw	127
  2639  04ED  00A6               	movwf	??_BuildByte
  2640  04EE  0826               	movf	??_BuildByte,w
  2641  04EF  00A9               	movwf	BuildByte@txByte
  2642                           
  2643                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2644  04F0  0824               	movf	BuildByte@byte1,w
  2645  04F1  397F               	andlw	127
  2646  04F2  00A6               	movwf	??_BuildByte
  2647  04F3  0826               	movf	??_BuildByte,w
  2648  04F4  00AA               	movwf	BuildByte@txByte+1
  2649                           
  2650                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2651  04F5  0825               	movf	BuildByte@valore,w
  2652  04F6  397F               	andlw	127
  2653  04F7  00A6               	movwf	??_BuildByte
  2654  04F8  0826               	movf	??_BuildByte,w
  2655  04F9  00AB               	movwf	BuildByte@txByte+2
  2656  04FA                     l2582:	
  2657                           
  2658                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2659  04FA  0825               	movf	BuildByte@valore,w
  2660  04FB  00A6               	movwf	??_BuildByte
  2661  04FC  3007               	movlw	7
  2662  04FD                     u2095:	
  2663  04FD  1003               	clrc
  2664  04FE  0CA6               	rrf	??_BuildByte,f
  2665  04FF  3EFF               	addlw	-1
  2666  0500  1D03               	skipz
  2667  0501  2CFD               	goto	u2095
  2668  0502  0826               	movf	??_BuildByte,w
  2669  0503  397F               	andlw	127
  2670  0504  00A7               	movwf	??_BuildByte+1
  2671  0505  0827               	movf	??_BuildByte+1,w
  2672  0506  00AC               	movwf	BuildByte@txByte+3
  2673  0507                     l2584:	
  2674                           
  2675                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2676  0507  01AE               	clrf	BuildByte@sommaRow
  2677  0508                     l2586:	
  2678                           
  2679                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2680  0508  01AF               	clrf	BuildByte@sommaColumn
  2681  0509                     l2588:	
  2682                           
  2683                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2684  0509  01B4               	clrf	BuildByte@i
  2685  050A  01B5               	clrf	BuildByte@i+1
  2686  050B                     l2594:	
  2687                           
  2688                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2689  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2690  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2691  050D  01B0               	clrf	BuildByte@y
  2692  050E  01B1               	clrf	BuildByte@y+1
  2693  050F                     l2600:	
  2694                           
  2695                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2696  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0511  0834               	movf	BuildByte@i,w
  2699  0512  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2700  0513  0084               	movwf	4
  2701  0514  1383               	bcf	3,7	;select IRP bank0
  2702  0515  0800               	movf	0,w
  2703  0516  00A6               	movwf	??_BuildByte
  2704  0517  0A30               	incf	BuildByte@y,w
  2705  0518  2D1B               	goto	u2104
  2706  0519                     u2105:	
  2707  0519  1003               	clrc
  2708  051A  0CA6               	rrf	??_BuildByte,f
  2709  051B                     u2104:	
  2710  051B  3EFF               	addlw	-1
  2711  051C  1D03               	skipz
  2712  051D  2D19               	goto	u2105
  2713  051E  0826               	movf	??_BuildByte,w
  2714  051F  3901               	andlw	1
  2715  0520  00A7               	movwf	??_BuildByte+1
  2716  0521  0827               	movf	??_BuildByte+1,w
  2717  0522  07AE               	addwf	BuildByte@sommaRow,f
  2718  0523                     l2602:	
  2719                           
  2720                           ;./CustomLib/Serial.h: 18:         }
  2721  0523  3001               	movlw	1
  2722  0524  07B0               	addwf	BuildByte@y,f
  2723  0525  1803               	skipnc
  2724  0526  0AB1               	incf	BuildByte@y+1,f
  2725  0527  3000               	movlw	0
  2726  0528  07B1               	addwf	BuildByte@y+1,f
  2727  0529                     l2604:	
  2728  0529  0831               	movf	BuildByte@y+1,w
  2729  052A  3A80               	xorlw	128
  2730  052B  00FF               	movwf	btemp+1
  2731  052C  3080               	movlw	128
  2732  052D  027F               	subwf	btemp+1,w
  2733  052E  1D03               	skipz
  2734  052F  2D32               	goto	u2115
  2735  0530  3008               	movlw	8
  2736  0531  0230               	subwf	BuildByte@y,w
  2737  0532                     u2115:	
  2738  0532  1C03               	skipc
  2739  0533  2D35               	goto	u2111
  2740  0534  2D36               	goto	u2110
  2741  0535                     u2111:	
  2742  0535  2D0F               	goto	l2600
  2743  0536                     u2110:	
  2744  0536                     l119:	
  2745                           
  2746                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2747  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0537  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0538  1C2E               	btfss	BuildByte@sommaRow,0
  2750  0539  2D3B               	goto	u2121
  2751  053A  2D3C               	goto	u2120
  2752  053B                     u2121:	
  2753  053B  2D44               	goto	l2608
  2754  053C                     u2120:	
  2755  053C                     l2606:	
  2756                           
  2757                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2758  053C  3080               	movlw	128
  2759  053D  00A6               	movwf	??_BuildByte
  2760  053E  0834               	movf	BuildByte@i,w
  2761  053F  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2762  0540  0084               	movwf	4
  2763  0541  0826               	movf	??_BuildByte,w
  2764  0542  1383               	bcf	3,7	;select IRP bank0
  2765  0543  0780               	addwf	0,f
  2766  0544                     l2608:	
  2767                           
  2768                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2769  0544  01AE               	clrf	BuildByte@sommaRow
  2770  0545                     l2612:	
  2771                           ;./CustomLib/Serial.h: 23:         }
  2772                           
  2773                           
  2774                           ;./CustomLib/Serial.h: 28:     }
  2775  0545  3001               	movlw	1
  2776  0546  07B4               	addwf	BuildByte@i,f
  2777  0547  1803               	skipnc
  2778  0548  0AB5               	incf	BuildByte@i+1,f
  2779  0549  3000               	movlw	0
  2780  054A  07B5               	addwf	BuildByte@i+1,f
  2781  054B                     l2614:	
  2782  054B  0835               	movf	BuildByte@i+1,w
  2783  054C  3A80               	xorlw	128
  2784  054D  00FF               	movwf	btemp+1
  2785  054E  3080               	movlw	128
  2786  054F  027F               	subwf	btemp+1,w
  2787  0550  1D03               	skipz
  2788  0551  2D54               	goto	u2135
  2789  0552  3004               	movlw	4
  2790  0553  0234               	subwf	BuildByte@i,w
  2791  0554                     u2135:	
  2792  0554  1C03               	skipc
  2793  0555  2D57               	goto	u2131
  2794  0556  2D58               	goto	u2130
  2795  0557                     u2131:	
  2796  0557  2D0B               	goto	l2594
  2797  0558                     u2130:	
  2798  0558                     l2616:	
  2799                           
  2800                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2801  0558  1283               	bcf	3,5	;RP0=0, select bank0
  2802  0559  1303               	bcf	3,6	;RP1=0, select bank0
  2803  055A  01B6               	clrf	BuildByte@i_332
  2804  055B  01B7               	clrf	BuildByte@i_332+1
  2805  055C                     l2622:	
  2806                           
  2807                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2808  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2809  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2810  055E  01B2               	clrf	BuildByte@y_333
  2811  055F  01B3               	clrf	BuildByte@y_333+1
  2812  0560                     l2628:	
  2813                           
  2814                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2815  0560  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0561  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0562  0832               	movf	BuildByte@y_333,w
  2818  0563  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2819  0564  0084               	movwf	4
  2820  0565  1383               	bcf	3,7	;select IRP bank0
  2821  0566  0800               	movf	0,w
  2822  0567  00A6               	movwf	??_BuildByte
  2823  0568  0A36               	incf	BuildByte@i_332,w
  2824  0569  2D6C               	goto	u2144
  2825  056A                     u2145:	
  2826  056A  1003               	clrc
  2827  056B  0CA6               	rrf	??_BuildByte,f
  2828  056C                     u2144:	
  2829  056C  3EFF               	addlw	-1
  2830  056D  1D03               	skipz
  2831  056E  2D6A               	goto	u2145
  2832  056F  0826               	movf	??_BuildByte,w
  2833  0570  3901               	andlw	1
  2834  0571  00A7               	movwf	??_BuildByte+1
  2835  0572  0827               	movf	??_BuildByte+1,w
  2836  0573  07AF               	addwf	BuildByte@sommaColumn,f
  2837  0574                     l2630:	
  2838                           
  2839                           ;./CustomLib/Serial.h: 37:         }
  2840  0574  3001               	movlw	1
  2841  0575  07B2               	addwf	BuildByte@y_333,f
  2842  0576  1803               	skipnc
  2843  0577  0AB3               	incf	BuildByte@y_333+1,f
  2844  0578  3000               	movlw	0
  2845  0579  07B3               	addwf	BuildByte@y_333+1,f
  2846  057A                     l2632:	
  2847  057A  0833               	movf	BuildByte@y_333+1,w
  2848  057B  3A80               	xorlw	128
  2849  057C  00FF               	movwf	btemp+1
  2850  057D  3080               	movlw	128
  2851  057E  027F               	subwf	btemp+1,w
  2852  057F  1D03               	skipz
  2853  0580  2D83               	goto	u2155
  2854  0581  3004               	movlw	4
  2855  0582  0232               	subwf	BuildByte@y_333,w
  2856  0583                     u2155:	
  2857  0583  1C03               	skipc
  2858  0584  2D86               	goto	u2151
  2859  0585  2D87               	goto	u2150
  2860  0586                     u2151:	
  2861  0586  2D60               	goto	l2628
  2862  0587                     u2150:	
  2863  0587                     l125:	
  2864                           
  2865                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2866  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0589  1C2F               	btfss	BuildByte@sommaColumn,0
  2869  058A  2D8C               	goto	u2161
  2870  058B  2D8D               	goto	u2160
  2871  058C                     u2161:	
  2872  058C  2D9A               	goto	l2636
  2873  058D                     u2160:	
  2874  058D                     l2634:	
  2875                           
  2876                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2877  058D  3001               	movlw	1
  2878  058E  00A6               	movwf	??_BuildByte
  2879  058F  0A36               	incf	BuildByte@i_332,w
  2880  0590  2D93               	goto	u2174
  2881  0591                     u2175:	
  2882  0591  1003               	clrc
  2883  0592  0DA6               	rlf	??_BuildByte,f
  2884  0593                     u2174:	
  2885  0593  3EFF               	addlw	-1
  2886  0594  1D03               	skipz
  2887  0595  2D91               	goto	u2175
  2888  0596  0826               	movf	??_BuildByte,w
  2889  0597  00A7               	movwf	??_BuildByte+1
  2890  0598  0827               	movf	??_BuildByte+1,w
  2891  0599  07AD               	addwf	BuildByte@txByte+4,f
  2892  059A                     l2636:	
  2893                           
  2894                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2895  059A  01AF               	clrf	BuildByte@sommaColumn
  2896  059B                     l2640:	
  2897                           ;./CustomLib/Serial.h: 42:         }
  2898                           
  2899                           
  2900                           ;./CustomLib/Serial.h: 47:     }
  2901  059B  3001               	movlw	1
  2902  059C  07B6               	addwf	BuildByte@i_332,f
  2903  059D  1803               	skipnc
  2904  059E  0AB7               	incf	BuildByte@i_332+1,f
  2905  059F  3000               	movlw	0
  2906  05A0  07B7               	addwf	BuildByte@i_332+1,f
  2907  05A1                     l2642:	
  2908  05A1  0837               	movf	BuildByte@i_332+1,w
  2909  05A2  3A80               	xorlw	128
  2910  05A3  00FF               	movwf	btemp+1
  2911  05A4  3080               	movlw	128
  2912  05A5  027F               	subwf	btemp+1,w
  2913  05A6  1D03               	skipz
  2914  05A7  2DAA               	goto	u2185
  2915  05A8  3008               	movlw	8
  2916  05A9  0236               	subwf	BuildByte@i_332,w
  2917  05AA                     u2185:	
  2918  05AA  1C03               	skipc
  2919  05AB  2DAD               	goto	u2181
  2920  05AC  2DAE               	goto	u2180
  2921  05AD                     u2181:	
  2922  05AD  2D5C               	goto	l2622
  2923  05AE                     u2180:	
  2924  05AE                     l2644:	
  2925                           
  2926                           ;./CustomLib/Serial.h: 49:     return txByte;
  2927  05AE  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2928  05AF                     l128:	
  2929  05AF  0008               	return
  2930  05B0                     __end_of_BuildByte:	
  2931                           
  2932                           	psect	text4
  2933  0CC4                     __ptext4:	
  2934 ;; *************** function _map *****************
  2935 ;; Defined at:
  2936 ;;		line 1 in file "./CustomLib/Conversions.h"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  x               2   20[BANK0 ] int 
  2939 ;;  in_min          2   22[BANK0 ] int 
  2940 ;;  in_max          2   24[BANK0 ] int 
  2941 ;;  out_min         2   26[BANK0 ] int 
  2942 ;;  out_max         2   28[BANK0 ] int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2   20[BANK0 ] int 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0, pclath, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2954 ;;      Params:         0      10       0       0       0
  2955 ;;      Locals:         0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0
  2957 ;;      Totals:         0      10       0       0       0
  2958 ;;Total ram usage:       10 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    4
  2961 ;; This function calls:
  2962 ;;		___awdiv
  2963 ;;		___wmul
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           
  2970                           ;psect for function _map
  2971  0CC4                     _map:	
  2972  0CC4                     l2816:	
  2973                           ;incstack = 0
  2974                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2975                           
  2976                           
  2977                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2978  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  2979  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  2980  0CC6  0836               	movf	map@in_min,w
  2981  0CC7  0238               	subwf	map@in_max,w
  2982  0CC8  00AB               	movwf	___awdiv@divisor
  2983  0CC9  0837               	movf	map@in_min+1,w
  2984  0CCA  1C03               	skipc
  2985  0CCB  0A37               	incf	map@in_min+1,w
  2986  0CCC  0239               	subwf	map@in_max+1,w
  2987  0CCD  00AC               	movwf	___awdiv@divisor+1
  2988  0CCE  0836               	movf	map@in_min,w
  2989  0CCF  0234               	subwf	map@x,w
  2990  0CD0  00A4               	movwf	___wmul@multiplier
  2991  0CD1  0837               	movf	map@in_min+1,w
  2992  0CD2  1C03               	skipc
  2993  0CD3  0A37               	incf	map@in_min+1,w
  2994  0CD4  0235               	subwf	map@x+1,w
  2995  0CD5  00A5               	movwf	___wmul@multiplier+1
  2996  0CD6  083A               	movf	map@out_min,w
  2997  0CD7  023C               	subwf	map@out_max,w
  2998  0CD8  00A6               	movwf	___wmul@multiplicand
  2999  0CD9  083B               	movf	map@out_min+1,w
  3000  0CDA  1C03               	skipc
  3001  0CDB  0A3B               	incf	map@out_min+1,w
  3002  0CDC  023D               	subwf	map@out_max+1,w
  3003  0CDD  00A7               	movwf	___wmul@multiplicand+1
  3004  0CDE  120A  158A  246C  120A  158A  	fcall	___wmul
  3005  0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0CE5  0825               	movf	?___wmul+1,w
  3008  0CE6  00AE               	movwf	___awdiv@dividend+1
  3009  0CE7  0824               	movf	?___wmul,w
  3010  0CE8  00AD               	movwf	___awdiv@dividend
  3011  0CE9  120A  118A  277F  120A  158A  	fcall	___awdiv
  3012  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0CF0  083A               	movf	map@out_min,w
  3015  0CF1  072B               	addwf	?___awdiv,w
  3016  0CF2  00B4               	movwf	?_map
  3017  0CF3  083B               	movf	map@out_min+1,w
  3018  0CF4  1803               	skipnc
  3019  0CF5  0A3B               	incf	map@out_min+1,w
  3020  0CF6  072C               	addwf	?___awdiv+1,w
  3021  0CF7  00B5               	movwf	?_map+1
  3022  0CF8                     l77:	
  3023  0CF8  0008               	return
  3024  0CF9                     __end_of_map:	
  3025                           
  3026                           	psect	text5
  3027  0C6C                     __ptext5:	
  3028 ;; *************** function ___wmul *****************
  3029 ;; Defined at:
  3030 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3033 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  product         2    8[BANK0 ] unsigned int 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  2    4[BANK0 ] unsigned int 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3045 ;;      Params:         0       4       0       0       0
  3046 ;;      Locals:         0       2       0       0       0
  3047 ;;      Temps:          0       0       0       0       0
  3048 ;;      Totals:         0       6       0       0       0
  3049 ;;Total ram usage:        6 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    3
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_map
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function ___wmul
  3061  0C6C                     ___wmul:	
  3062  0C6C                     l2666:	
  3063                           ;incstack = 0
  3064                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3065                           
  3066  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0C6E  01A8               	clrf	___wmul@product
  3069  0C6F  01A9               	clrf	___wmul@product+1
  3070  0C70                     l2668:	
  3071  0C70  1C24               	btfss	___wmul@multiplier,0
  3072  0C71  2C73               	goto	u2211
  3073  0C72  2C74               	goto	u2210
  3074  0C73                     u2211:	
  3075  0C73  2C7A               	goto	l416
  3076  0C74                     u2210:	
  3077  0C74                     l2670:	
  3078  0C74  0826               	movf	___wmul@multiplicand,w
  3079  0C75  07A8               	addwf	___wmul@product,f
  3080  0C76  1803               	skipnc
  3081  0C77  0AA9               	incf	___wmul@product+1,f
  3082  0C78  0827               	movf	___wmul@multiplicand+1,w
  3083  0C79  07A9               	addwf	___wmul@product+1,f
  3084  0C7A                     l416:	
  3085  0C7A  3001               	movlw	1
  3086  0C7B                     u2225:	
  3087  0C7B  1003               	clrc
  3088  0C7C  0DA6               	rlf	___wmul@multiplicand,f
  3089  0C7D  0DA7               	rlf	___wmul@multiplicand+1,f
  3090  0C7E  3EFF               	addlw	-1
  3091  0C7F  1D03               	skipz
  3092  0C80  2C7B               	goto	u2225
  3093  0C81                     l2672:	
  3094  0C81  3001               	movlw	1
  3095  0C82                     u2235:	
  3096  0C82  1003               	clrc
  3097  0C83  0CA5               	rrf	___wmul@multiplier+1,f
  3098  0C84  0CA4               	rrf	___wmul@multiplier,f
  3099  0C85  3EFF               	addlw	-1
  3100  0C86  1D03               	skipz
  3101  0C87  2C82               	goto	u2235
  3102  0C88                     l2674:	
  3103  0C88  0824               	movf	___wmul@multiplier,w
  3104  0C89  0425               	iorwf	___wmul@multiplier+1,w
  3105  0C8A  1D03               	btfss	3,2
  3106  0C8B  2C8D               	goto	u2241
  3107  0C8C  2C8E               	goto	u2240
  3108  0C8D                     u2241:	
  3109  0C8D  2C70               	goto	l2668
  3110  0C8E                     u2240:	
  3111  0C8E                     l2676:	
  3112  0C8E  0829               	movf	___wmul@product+1,w
  3113  0C8F  00A5               	movwf	?___wmul+1
  3114  0C90  0828               	movf	___wmul@product,w
  3115  0C91  00A4               	movwf	?___wmul
  3116  0C92                     l418:	
  3117  0C92  0008               	return
  3118  0C93                     __end_of___wmul:	
  3119                           
  3120                           	psect	text6
  3121  0C0B                     __ptext6:	
  3122 ;; *************** function _init_ADC *****************
  3123 ;; Defined at:
  3124 ;;		line 330 in file "main.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0
  3140 ;;      Temps:          0       1       0       0       0
  3141 ;;      Totals:         0       1       0       0       0
  3142 ;;Total ram usage:        1 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    3
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function _init_ADC
  3154  0C0B                     _init_ADC:	
  3155  0C0B                     l2912:	
  3156                           ;incstack = 0
  3157                           ; Regs used in _init_ADC: [wreg+status,2]
  3158                           
  3159                           
  3160                           ;main.c: 332:     TRISA = 0xE3;
  3161  0C0B  30E3               	movlw	227
  3162  0C0C  1683               	bsf	3,5	;RP0=1, select bank1
  3163  0C0D  1303               	bcf	3,6	;RP1=0, select bank1
  3164  0C0E  0085               	movwf	5	;volatile
  3165  0C0F                     l2914:	
  3166                           
  3167                           ;main.c: 333:     ADCON0 = 0x00;
  3168  0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0C10  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0C11  019F               	clrf	31	;volatile
  3171  0C12                     l2916:	
  3172                           
  3173                           ;main.c: 334:     ADCON1 = 0x80;
  3174  0C12  3080               	movlw	128
  3175  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  3176  0C14  1303               	bcf	3,6	;RP1=0, select bank1
  3177  0C15  009F               	movwf	31	;volatile
  3178  0C16                     l2918:	
  3179                           
  3180                           ;main.c: 335:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3181  0C16  3019               	movlw	25
  3182  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  3184  0C19  00A4               	movwf	??_init_ADC
  3185  0C1A                     u2927:	
  3186  0C1A  0BA4               	decfsz	??_init_ADC,f
  3187  0C1B  2C1A               	goto	u2927
  3188  0C1C  2C1D               	nop2
  3189  0C1D                     l277:	
  3190  0C1D  0008               	return
  3191  0C1E                     __end_of_init_ADC:	
  3192                           
  3193                           	psect	text7
  3194  0F6D                     __ptext7:	
  3195 ;; *************** function _UpdateTimes *****************
  3196 ;; Defined at:
  3197 ;;		line 3 in file "./CustomLib/TrafficLight.h"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  _semafori       1    wreg     PTR PTR struct .
  3200 ;;		 -> Semafori(16), 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  _semafori       1   20[BANK0 ] PTR PTR struct .
  3203 ;;		 -> Semafori(16), 
  3204 ;;  i               1   21[BANK0 ] unsigned char 
  3205 ;;  l               1   22[BANK0 ] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         0       0       0       0       0
  3216 ;;      Locals:         0       3       0       0       0
  3217 ;;      Temps:          0      16       0       0       0
  3218 ;;      Totals:         0      19       0       0       0
  3219 ;;Total ram usage:       19 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    3
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           
  3230                           ;psect for function _UpdateTimes
  3231  0F6D                     _UpdateTimes:	
  3232                           
  3233                           ;incstack = 0
  3234                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3235                           ;UpdateTimes@_semafori stored from wreg
  3236  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  3238  0F6F  00B4               	movwf	UpdateTimes@_semafori
  3239  0F70                     l2832:	
  3240                           
  3241                           ;./CustomLib/TrafficLight.h: 3: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 4: {;./CustomLib/TrafficLight.h: 6:     for (unsigned char l = 0; l < n_semafo
      +                          ri; l++)
  3242  0F70  01B6               	clrf	UpdateTimes@l
  3243  0F71                     l2838:	
  3244                           
  3245                           ;./CustomLib/TrafficLight.h: 7:     {;./CustomLib/TrafficLight.h: 8:         for(unsigne
      +                          d char i = 0; i < 3; i++)
  3246  0F71  01B5               	clrf	UpdateTimes@i
  3247  0F72                     l2844:	
  3248                           
  3249                           ;./CustomLib/TrafficLight.h: 9:         {;./CustomLib/TrafficLight.h: 10:             (*
      +                          (_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3250  0F72  0836               	movf	UpdateTimes@l,w
  3251  0F73  00A4               	movwf	??_UpdateTimes
  3252  0F74  0724               	addwf	??_UpdateTimes,w
  3253  0F75  0734               	addwf	UpdateTimes@_semafori,w
  3254  0F76  00A5               	movwf	??_UpdateTimes+1
  3255  0F77  0825               	movf	??_UpdateTimes+1,w
  3256  0F78  0084               	movwf	4
  3257  0F79  1383               	bcf	3,7	;select IRP bank0
  3258  0F7A  0800               	movf	0,w
  3259  0F7B  00A6               	movwf	??_UpdateTimes+2
  3260  0F7C  0A84               	incf	4,f
  3261  0F7D  0800               	movf	0,w
  3262  0F7E  00A7               	movwf	??_UpdateTimes+3
  3263  0F7F  0835               	movf	UpdateTimes@i,w
  3264  0F80  00A8               	movwf	??_UpdateTimes+4
  3265  0F81  0728               	addwf	??_UpdateTimes+4,w
  3266  0F82  3E06               	addlw	6
  3267  0F83  0726               	addwf	??_UpdateTimes+2,w
  3268  0F84  00A9               	movwf	??_UpdateTimes+5
  3269  0F85  0827               	movf	??_UpdateTimes+3,w
  3270  0F86  1803               	skipnc
  3271  0F87  3E01               	addlw	1
  3272  0F88  00AA               	movwf	??_UpdateTimes+6
  3273  0F89  0829               	movf	??_UpdateTimes+5,w
  3274  0F8A  0084               	movwf	4
  3275  0F8B  1783               	bsf	3,7
  3276  0F8C  1C2A               	btfss	??_UpdateTimes+6,0
  3277  0F8D  1383               	bcf	3,7
  3278  0F8E  0800               	movf	0,w
  3279  0F8F  00AB               	movwf	??_UpdateTimes+7
  3280  0F90  0A84               	incf	4,f
  3281  0F91  0800               	movf	0,w
  3282  0F92  00AC               	movwf	??_UpdateTimes+8
  3283  0F93  0836               	movf	UpdateTimes@l,w
  3284  0F94  00AD               	movwf	??_UpdateTimes+9
  3285  0F95  072D               	addwf	??_UpdateTimes+9,w
  3286  0F96  0734               	addwf	UpdateTimes@_semafori,w
  3287  0F97  00AE               	movwf	??_UpdateTimes+10
  3288  0F98  082E               	movf	??_UpdateTimes+10,w
  3289  0F99  0084               	movwf	4
  3290  0F9A  1383               	bcf	3,7	;select IRP bank0
  3291  0F9B  0800               	movf	0,w
  3292  0F9C  00AF               	movwf	??_UpdateTimes+11
  3293  0F9D  0A84               	incf	4,f
  3294  0F9E  0800               	movf	0,w
  3295  0F9F  00B0               	movwf	??_UpdateTimes+12
  3296  0FA0  0835               	movf	UpdateTimes@i,w
  3297  0FA1  00B1               	movwf	??_UpdateTimes+13
  3298  0FA2  0731               	addwf	??_UpdateTimes+13,w
  3299  0FA3  072F               	addwf	??_UpdateTimes+11,w
  3300  0FA4  00B2               	movwf	??_UpdateTimes+14
  3301  0FA5  0830               	movf	??_UpdateTimes+12,w
  3302  0FA6  1803               	skipnc
  3303  0FA7  3E01               	addlw	1
  3304  0FA8  00B3               	movwf	??_UpdateTimes+15
  3305  0FA9  0832               	movf	??_UpdateTimes+14,w
  3306  0FAA  0084               	movwf	4
  3307  0FAB  1783               	bsf	3,7
  3308  0FAC  1C33               	btfss	??_UpdateTimes+15,0
  3309  0FAD  1383               	bcf	3,7
  3310  0FAE  082B               	movf	??_UpdateTimes+7,w
  3311  0FAF  0080               	movwf	0
  3312  0FB0  0A84               	incf	4,f
  3313  0FB1  082C               	movf	??_UpdateTimes+8,w
  3314  0FB2  0080               	movwf	0
  3315  0FB3                     l2846:	
  3316                           
  3317                           ;./CustomLib/TrafficLight.h: 11:         }
  3318  0FB3  3001               	movlw	1
  3319  0FB4  00A4               	movwf	??_UpdateTimes
  3320  0FB5  0824               	movf	??_UpdateTimes,w
  3321  0FB6  07B5               	addwf	UpdateTimes@i,f
  3322  0FB7                     l2848:	
  3323  0FB7  3003               	movlw	3
  3324  0FB8  0235               	subwf	UpdateTimes@i,w
  3325  0FB9  1C03               	skipc
  3326  0FBA  2FBC               	goto	u2571
  3327  0FBB  2FBD               	goto	u2570
  3328  0FBC                     u2571:	
  3329  0FBC  2F72               	goto	l2844
  3330  0FBD                     u2570:	
  3331  0FBD                     l2850:	
  3332                           
  3333                           ;./CustomLib/TrafficLight.h: 12:         (*(_semafori)[l]).lux_select = (*(_semafori)[l]
      +                          ).new_lux_select;
  3334  0FBD  0836               	movf	UpdateTimes@l,w
  3335  0FBE  00A4               	movwf	??_UpdateTimes
  3336  0FBF  0724               	addwf	??_UpdateTimes,w
  3337  0FC0  0734               	addwf	UpdateTimes@_semafori,w
  3338  0FC1  00A5               	movwf	??_UpdateTimes+1
  3339  0FC2  0825               	movf	??_UpdateTimes+1,w
  3340  0FC3  0084               	movwf	4
  3341  0FC4  1383               	bcf	3,7	;select IRP bank0
  3342  0FC5  0800               	movf	0,w
  3343  0FC6  00A6               	movwf	??_UpdateTimes+2
  3344  0FC7  0A84               	incf	4,f
  3345  0FC8  0800               	movf	0,w
  3346  0FC9  00A7               	movwf	??_UpdateTimes+3
  3347  0FCA  0826               	movf	??_UpdateTimes+2,w
  3348  0FCB  3E0D               	addlw	13
  3349  0FCC  00A8               	movwf	??_UpdateTimes+4
  3350  0FCD  0827               	movf	??_UpdateTimes+3,w
  3351  0FCE  1803               	skipnc
  3352  0FCF  3E01               	addlw	1
  3353  0FD0  3E00               	addlw	0
  3354  0FD1  00A9               	movwf	??_UpdateTimes+5
  3355  0FD2  0828               	movf	??_UpdateTimes+4,w
  3356  0FD3  0084               	movwf	4
  3357  0FD4  1783               	bsf	3,7
  3358  0FD5  1C29               	btfss	??_UpdateTimes+5,0
  3359  0FD6  1383               	bcf	3,7
  3360  0FD7  0800               	movf	0,w
  3361  0FD8  00AA               	movwf	??_UpdateTimes+6
  3362  0FD9  0836               	movf	UpdateTimes@l,w
  3363  0FDA  00AB               	movwf	??_UpdateTimes+7
  3364  0FDB  072B               	addwf	??_UpdateTimes+7,w
  3365  0FDC  0734               	addwf	UpdateTimes@_semafori,w
  3366  0FDD  00AC               	movwf	??_UpdateTimes+8
  3367  0FDE  082C               	movf	??_UpdateTimes+8,w
  3368  0FDF  0084               	movwf	4
  3369  0FE0  1383               	bcf	3,7	;select IRP bank0
  3370  0FE1  0800               	movf	0,w
  3371  0FE2  00AD               	movwf	??_UpdateTimes+9
  3372  0FE3  0A84               	incf	4,f
  3373  0FE4  0800               	movf	0,w
  3374  0FE5  00AE               	movwf	??_UpdateTimes+10
  3375  0FE6  082D               	movf	??_UpdateTimes+9,w
  3376  0FE7  3E0C               	addlw	12
  3377  0FE8  00AF               	movwf	??_UpdateTimes+11
  3378  0FE9  082E               	movf	??_UpdateTimes+10,w
  3379  0FEA  1803               	skipnc
  3380  0FEB  3E01               	addlw	1
  3381  0FEC  3E00               	addlw	0
  3382  0FED  00B0               	movwf	??_UpdateTimes+12
  3383  0FEE  082F               	movf	??_UpdateTimes+11,w
  3384  0FEF  0084               	movwf	4
  3385  0FF0  1783               	bsf	3,7
  3386  0FF1  1C30               	btfss	??_UpdateTimes+12,0
  3387  0FF2  1383               	bcf	3,7
  3388  0FF3  082A               	movf	??_UpdateTimes+6,w
  3389  0FF4  0080               	movwf	0
  3390  0FF5                     l2852:	
  3391                           
  3392                           ;./CustomLib/TrafficLight.h: 13:     }
  3393  0FF5  3001               	movlw	1
  3394  0FF6  00A4               	movwf	??_UpdateTimes
  3395  0FF7  0824               	movf	??_UpdateTimes,w
  3396  0FF8  07B6               	addwf	UpdateTimes@l,f
  3397  0FF9                     l2854:	
  3398  0FF9  3008               	movlw	8
  3399  0FFA  0236               	subwf	UpdateTimes@l,w
  3400  0FFB  1C03               	skipc
  3401  0FFC  2FFE               	goto	u2581
  3402  0FFD  2FFF               	goto	u2580
  3403  0FFE                     u2581:	
  3404  0FFE  2F71               	goto	l2838
  3405  0FFF                     u2580:	
  3406  0FFF                     l139:	
  3407  0FFF  0008               	return
  3408  1000                     __end_of_UpdateTimes:	
  3409                           
  3410                           	psect	text8
  3411  0CF9                     __ptext8:	
  3412 ;; *************** function _UART_Init *****************
  3413 ;; Defined at:
  3414 ;;		line 349 in file "main.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  baudrate        2   19[BANK0 ] int 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3428 ;;      Params:         0       2       0       0       0
  3429 ;;      Locals:         0       0       0       0       0
  3430 ;;      Temps:          0       4       0       0       0
  3431 ;;      Totals:         0       6       0       0       0
  3432 ;;Total ram usage:        6 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    4
  3435 ;; This function calls:
  3436 ;;		___aldiv
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _UART_Init
  3444  0CF9                     _UART_Init:	
  3445  0CF9                     l2920:	
  3446                           ;incstack = 0
  3447                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3448                           
  3449                           
  3450                           ;main.c: 349: void UART_Init(int baudrate);main.c: 350: {;main.c: 351:     TRISCbits.TRI
      +                          SC6 = 0;
  3451  0CF9  1683               	bsf	3,5	;RP0=1, select bank1
  3452  0CFA  1303               	bcf	3,6	;RP1=0, select bank1
  3453  0CFB  1307               	bcf	7,6	;volatile
  3454                           
  3455                           ;main.c: 352:     TXSTAbits.TXEN = 1;
  3456  0CFC  1698               	bsf	24,5	;volatile
  3457                           
  3458                           ;main.c: 353:     RCSTAbits.SPEN = 1;
  3459  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0CFF  1798               	bsf	24,7	;volatile
  3462                           
  3463                           ;main.c: 354:     RCSTAbits.CREN = 1;
  3464  0D00  1618               	bsf	24,4	;volatile
  3465  0D01                     l2922:	
  3466                           
  3467                           ;main.c: 355:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3468  0D01  0833               	movf	UART_Init@baudrate,w
  3469  0D02  00B5               	movwf	??_UART_Init
  3470  0D03  0834               	movf	UART_Init@baudrate+1,w
  3471  0D04  00B6               	movwf	??_UART_Init+1
  3472  0D05  3000               	movlw	0
  3473  0D06  1BB6               	btfsc	??_UART_Init+1,7
  3474  0D07  30FF               	movlw	255
  3475  0D08  00B7               	movwf	??_UART_Init+2
  3476  0D09  00B8               	movwf	??_UART_Init+3
  3477  0D0A  3006               	movlw	6
  3478  0D0B                     u2635:	
  3479  0D0B  1003               	clrc
  3480  0D0C  0DB5               	rlf	??_UART_Init,f
  3481  0D0D  0DB6               	rlf	??_UART_Init+1,f
  3482  0D0E  0DB7               	rlf	??_UART_Init+2,f
  3483  0D0F  0DB8               	rlf	??_UART_Init+3,f
  3484  0D10                     u2630:	
  3485  0D10  3EFF               	addlw	-1
  3486  0D11  1D03               	skipz
  3487  0D12  2D0B               	goto	u2635
  3488  0D13  0838               	movf	??_UART_Init+3,w
  3489  0D14  00A7               	movwf	___aldiv@divisor+3
  3490  0D15  0837               	movf	??_UART_Init+2,w
  3491  0D16  00A6               	movwf	___aldiv@divisor+2
  3492  0D17  0836               	movf	??_UART_Init+1,w
  3493  0D18  00A5               	movwf	___aldiv@divisor+1
  3494  0D19  0835               	movf	??_UART_Init,w
  3495  0D1A  00A4               	movwf	___aldiv@divisor
  3496  0D1B  3001               	movlw	1
  3497  0D1C  00AB               	movwf	___aldiv@dividend+3
  3498  0D1D  30E8               	movlw	232
  3499  0D1E  00AA               	movwf	___aldiv@dividend+2
  3500  0D1F  3048               	movlw	72
  3501  0D20  00A9               	movwf	___aldiv@dividend+1
  3502  0D21  3000               	movlw	0
  3503  0D22  00A8               	movwf	___aldiv@dividend
  3504  0D23  120A  118A  25B0  120A  158A  	fcall	___aldiv
  3505  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0D2A  0824               	movf	?___aldiv,w
  3508  0D2B  3EFF               	addlw	255
  3509  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  3510  0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  3511  0D2E  0099               	movwf	25	;volatile
  3512  0D2F                     l2924:	
  3513                           
  3514                           ;main.c: 356:     INTCONbits.GIE = 1;
  3515  0D2F  178B               	bsf	11,7	;volatile
  3516  0D30                     l2926:	
  3517                           
  3518                           ;main.c: 357:     INTCONbits.PEIE = 1;
  3519  0D30  170B               	bsf	11,6	;volatile
  3520  0D31                     l2928:	
  3521                           
  3522                           ;main.c: 358:     PIE1bits.RCIE = 1;
  3523  0D31  168C               	bsf	12,5	;volatile
  3524  0D32                     l286:	
  3525  0D32  0008               	return
  3526  0D33                     __end_of_UART_Init:	
  3527                           
  3528                           	psect	text9
  3529  05B0                     __ptext9:	
  3530 ;; *************** function ___aldiv *****************
  3531 ;; Defined at:
  3532 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  divisor         4    4[BANK0 ] long 
  3535 ;;  dividend        4    8[BANK0 ] long 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  quotient        4   15[BANK0 ] long 
  3538 ;;  sign            1   14[BANK0 ] unsigned char 
  3539 ;;  counter         1   13[BANK0 ] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  4    4[BANK0 ] long 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3549 ;;      Params:         0       8       0       0       0
  3550 ;;      Locals:         0       6       0       0       0
  3551 ;;      Temps:          0       1       0       0       0
  3552 ;;      Totals:         0      15       0       0       0
  3553 ;;Total ram usage:       15 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    3
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_UART_Init
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           
  3564                           ;psect for function ___aldiv
  3565  05B0                     ___aldiv:	
  3566  05B0                     l2694:	
  3567                           ;incstack = 0
  3568                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3569                           
  3570  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  3571  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  3572  05B2  01AE               	clrf	___aldiv@sign
  3573  05B3                     l2696:	
  3574  05B3  1FA7               	btfss	___aldiv@divisor+3,7
  3575  05B4  2DB6               	goto	u2271
  3576  05B5  2DB7               	goto	u2270
  3577  05B6                     u2271:	
  3578  05B6  2DC4               	goto	l481
  3579  05B7                     u2270:	
  3580  05B7                     l2698:	
  3581  05B7  09A4               	comf	___aldiv@divisor,f
  3582  05B8  09A5               	comf	___aldiv@divisor+1,f
  3583  05B9  09A6               	comf	___aldiv@divisor+2,f
  3584  05BA  09A7               	comf	___aldiv@divisor+3,f
  3585  05BB  0AA4               	incf	___aldiv@divisor,f
  3586  05BC  1903               	skipnz
  3587  05BD  0AA5               	incf	___aldiv@divisor+1,f
  3588  05BE  1903               	skipnz
  3589  05BF  0AA6               	incf	___aldiv@divisor+2,f
  3590  05C0  1903               	skipnz
  3591  05C1  0AA7               	incf	___aldiv@divisor+3,f
  3592  05C2  01AE               	clrf	___aldiv@sign
  3593  05C3  0AAE               	incf	___aldiv@sign,f
  3594  05C4                     l481:	
  3595  05C4  1FAB               	btfss	___aldiv@dividend+3,7
  3596  05C5  2DC7               	goto	u2281
  3597  05C6  2DC8               	goto	u2280
  3598  05C7                     u2281:	
  3599  05C7  2DD7               	goto	l2704
  3600  05C8                     u2280:	
  3601  05C8                     l2700:	
  3602  05C8  09A8               	comf	___aldiv@dividend,f
  3603  05C9  09A9               	comf	___aldiv@dividend+1,f
  3604  05CA  09AA               	comf	___aldiv@dividend+2,f
  3605  05CB  09AB               	comf	___aldiv@dividend+3,f
  3606  05CC  0AA8               	incf	___aldiv@dividend,f
  3607  05CD  1903               	skipnz
  3608  05CE  0AA9               	incf	___aldiv@dividend+1,f
  3609  05CF  1903               	skipnz
  3610  05D0  0AAA               	incf	___aldiv@dividend+2,f
  3611  05D1  1903               	skipnz
  3612  05D2  0AAB               	incf	___aldiv@dividend+3,f
  3613  05D3                     l2702:	
  3614  05D3  3001               	movlw	1
  3615  05D4  00AC               	movwf	??___aldiv
  3616  05D5  082C               	movf	??___aldiv,w
  3617  05D6  06AE               	xorwf	___aldiv@sign,f
  3618  05D7                     l2704:	
  3619  05D7  3000               	movlw	0
  3620  05D8  00B2               	movwf	___aldiv@quotient+3
  3621  05D9  3000               	movlw	0
  3622  05DA  00B1               	movwf	___aldiv@quotient+2
  3623  05DB  3000               	movlw	0
  3624  05DC  00B0               	movwf	___aldiv@quotient+1
  3625  05DD  3000               	movlw	0
  3626  05DE  00AF               	movwf	___aldiv@quotient
  3627  05DF                     l2706:	
  3628  05DF  0827               	movf	___aldiv@divisor+3,w
  3629  05E0  0426               	iorwf	___aldiv@divisor+2,w
  3630  05E1  0425               	iorwf	___aldiv@divisor+1,w
  3631  05E2  0424               	iorwf	___aldiv@divisor,w
  3632  05E3  1903               	skipnz
  3633  05E4  2DE6               	goto	u2291
  3634  05E5  2DE7               	goto	u2290
  3635  05E6                     u2291:	
  3636  05E6  2E34               	goto	l2726
  3637  05E7                     u2290:	
  3638  05E7                     l2708:	
  3639  05E7  01AD               	clrf	___aldiv@counter
  3640  05E8  0AAD               	incf	___aldiv@counter,f
  3641  05E9  2DF7               	goto	l2712
  3642  05EA                     l2710:	
  3643  05EA  3001               	movlw	1
  3644  05EB  00AC               	movwf	??___aldiv
  3645  05EC                     u2305:	
  3646  05EC  1003               	clrc
  3647  05ED  0DA4               	rlf	___aldiv@divisor,f
  3648  05EE  0DA5               	rlf	___aldiv@divisor+1,f
  3649  05EF  0DA6               	rlf	___aldiv@divisor+2,f
  3650  05F0  0DA7               	rlf	___aldiv@divisor+3,f
  3651  05F1  0BAC               	decfsz	??___aldiv,f
  3652  05F2  2DEC               	goto	u2305
  3653  05F3  3001               	movlw	1
  3654  05F4  00AC               	movwf	??___aldiv
  3655  05F5  082C               	movf	??___aldiv,w
  3656  05F6  07AD               	addwf	___aldiv@counter,f
  3657  05F7                     l2712:	
  3658  05F7  1FA7               	btfss	___aldiv@divisor+3,7
  3659  05F8  2DFA               	goto	u2311
  3660  05F9  2DFB               	goto	u2310
  3661  05FA                     u2311:	
  3662  05FA  2DEA               	goto	l2710
  3663  05FB                     u2310:	
  3664  05FB                     l2714:	
  3665  05FB  3001               	movlw	1
  3666  05FC  00AC               	movwf	??___aldiv
  3667  05FD                     u2325:	
  3668  05FD  1003               	clrc
  3669  05FE  0DAF               	rlf	___aldiv@quotient,f
  3670  05FF  0DB0               	rlf	___aldiv@quotient+1,f
  3671  0600  0DB1               	rlf	___aldiv@quotient+2,f
  3672  0601  0DB2               	rlf	___aldiv@quotient+3,f
  3673  0602  0BAC               	decfsz	??___aldiv,f
  3674  0603  2DFD               	goto	u2325
  3675  0604                     l2716:	
  3676  0604  0827               	movf	___aldiv@divisor+3,w
  3677  0605  022B               	subwf	___aldiv@dividend+3,w
  3678  0606  1D03               	skipz
  3679  0607  2E12               	goto	u2335
  3680  0608  0826               	movf	___aldiv@divisor+2,w
  3681  0609  022A               	subwf	___aldiv@dividend+2,w
  3682  060A  1D03               	skipz
  3683  060B  2E12               	goto	u2335
  3684  060C  0825               	movf	___aldiv@divisor+1,w
  3685  060D  0229               	subwf	___aldiv@dividend+1,w
  3686  060E  1D03               	skipz
  3687  060F  2E12               	goto	u2335
  3688  0610  0824               	movf	___aldiv@divisor,w
  3689  0611  0228               	subwf	___aldiv@dividend,w
  3690  0612                     u2335:	
  3691  0612  1C03               	skipc
  3692  0613  2E15               	goto	u2331
  3693  0614  2E16               	goto	u2330
  3694  0615                     u2331:	
  3695  0615  2E25               	goto	l2722
  3696  0616                     u2330:	
  3697  0616                     l2718:	
  3698  0616  0824               	movf	___aldiv@divisor,w
  3699  0617  02A8               	subwf	___aldiv@dividend,f
  3700  0618  0825               	movf	___aldiv@divisor+1,w
  3701  0619  1C03               	skipc
  3702  061A  0F25               	incfsz	___aldiv@divisor+1,w
  3703  061B  02A9               	subwf	___aldiv@dividend+1,f
  3704  061C  0826               	movf	___aldiv@divisor+2,w
  3705  061D  1C03               	skipc
  3706  061E  0F26               	incfsz	___aldiv@divisor+2,w
  3707  061F  02AA               	subwf	___aldiv@dividend+2,f
  3708  0620  0827               	movf	___aldiv@divisor+3,w
  3709  0621  1C03               	skipc
  3710  0622  0F27               	incfsz	___aldiv@divisor+3,w
  3711  0623  02AB               	subwf	___aldiv@dividend+3,f
  3712  0624                     l2720:	
  3713  0624  142F               	bsf	___aldiv@quotient,0
  3714  0625                     l2722:	
  3715  0625  3001               	movlw	1
  3716  0626                     u2345:	
  3717  0626  1003               	clrc
  3718  0627  0CA7               	rrf	___aldiv@divisor+3,f
  3719  0628  0CA6               	rrf	___aldiv@divisor+2,f
  3720  0629  0CA5               	rrf	___aldiv@divisor+1,f
  3721  062A  0CA4               	rrf	___aldiv@divisor,f
  3722  062B  3EFF               	addlw	-1
  3723  062C  1D03               	skipz
  3724  062D  2E26               	goto	u2345
  3725  062E                     l2724:	
  3726  062E  3001               	movlw	1
  3727  062F  02AD               	subwf	___aldiv@counter,f
  3728  0630  1D03               	btfss	3,2
  3729  0631  2E33               	goto	u2351
  3730  0632  2E34               	goto	u2350
  3731  0633                     u2351:	
  3732  0633  2DFB               	goto	l2714
  3733  0634                     u2350:	
  3734  0634                     l2726:	
  3735  0634  082E               	movf	___aldiv@sign,w
  3736  0635  1903               	btfsc	3,2
  3737  0636  2E38               	goto	u2361
  3738  0637  2E39               	goto	u2360
  3739  0638                     u2361:	
  3740  0638  2E44               	goto	l2730
  3741  0639                     u2360:	
  3742  0639                     l2728:	
  3743  0639  09AF               	comf	___aldiv@quotient,f
  3744  063A  09B0               	comf	___aldiv@quotient+1,f
  3745  063B  09B1               	comf	___aldiv@quotient+2,f
  3746  063C  09B2               	comf	___aldiv@quotient+3,f
  3747  063D  0AAF               	incf	___aldiv@quotient,f
  3748  063E  1903               	skipnz
  3749  063F  0AB0               	incf	___aldiv@quotient+1,f
  3750  0640  1903               	skipnz
  3751  0641  0AB1               	incf	___aldiv@quotient+2,f
  3752  0642  1903               	skipnz
  3753  0643  0AB2               	incf	___aldiv@quotient+3,f
  3754  0644                     l2730:	
  3755  0644  0832               	movf	___aldiv@quotient+3,w
  3756  0645  00A7               	movwf	?___aldiv+3
  3757  0646  0831               	movf	___aldiv@quotient+2,w
  3758  0647  00A6               	movwf	?___aldiv+2
  3759  0648  0830               	movf	___aldiv@quotient+1,w
  3760  0649  00A5               	movwf	?___aldiv+1
  3761  064A  082F               	movf	___aldiv@quotient,w
  3762  064B  00A4               	movwf	?___aldiv
  3763  064C                     l491:	
  3764  064C  0008               	return
  3765  064D                     __end_of___aldiv:	
  3766                           
  3767                           	psect	text10
  3768  06E9                     __ptext10:	
  3769 ;; *************** function _SetReceivedTimes *****************
  3770 ;; Defined at:
  3771 ;;		line 62 in file "./CustomLib/TrafficLight.h"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  3774 ;;		 -> dataFromGateway(15), 
  3775 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  3776 ;;		 -> Semafori(16), 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  _dataFromGat    1   25[BANK0 ] PTR unsigned char 
  3779 ;;		 -> dataFromGateway(15), 
  3780 ;;  index           1   26[BANK0 ] unsigned char 
  3781 ;;  semaforoId      1   23[BANK0 ] unsigned char 
  3782 ;;  luxId           1   22[BANK0 ] unsigned char 
  3783 ;;  colorId         1   21[BANK0 ] unsigned char 
  3784 ;;  i               1   24[BANK0 ] unsigned char 
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3794 ;;      Params:         0       1       0       0       0
  3795 ;;      Locals:         0       6       0       0       0
  3796 ;;      Temps:          0       8       0       0       0
  3797 ;;      Totals:         0      15       0       0       0
  3798 ;;Total ram usage:       15 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    4
  3801 ;; This function calls:
  3802 ;;		_GetTime
  3803 ;;		___bmul
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _SetReceivedTimes
  3811  06E9                     _SetReceivedTimes:	
  3812                           
  3813                           ;incstack = 0
  3814                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3815                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  3816  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3817  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3818  06EB  00B9               	movwf	SetReceivedTimes@_dataFromGateway
  3819  06EC                     l2890:	
  3820                           
  3821                           ;./CustomLib/TrafficLight.h: 62: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 63: {;./CustomLib/TrafficLight.h: 64:   
      +                                        for (unsigned char i = 0; i < 3; i++)
  3822  06EC  01B8               	clrf	SetReceivedTimes@i
  3823  06ED                     l2892:	
  3824  06ED  3003               	movlw	3
  3825  06EE  0238               	subwf	SetReceivedTimes@i,w
  3826  06EF  1C03               	skipc
  3827  06F0  2EF2               	goto	u2611
  3828  06F1  2EF3               	goto	u2610
  3829  06F2                     u2611:	
  3830  06F2  2EF4               	goto	l2896
  3831  06F3                     u2610:	
  3832  06F3  2F7E               	goto	l159
  3833  06F4                     l2896:	
  3834                           
  3835                           ;./CustomLib/TrafficLight.h: 65:                 {;./CustomLib/TrafficLight.h: 66:      
      +                                         unsigned char index = i * 5;
  3836  06F4  3005               	movlw	5
  3837  06F5  00AD               	movwf	??_SetReceivedTimes
  3838  06F6  082D               	movf	??_SetReceivedTimes,w
  3839  06F7  00A4               	movwf	___bmul@multiplicand
  3840  06F8  0838               	movf	SetReceivedTimes@i,w
  3841  06F9  120A  118A  27E8  120A  118A  	fcall	___bmul
  3842  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3843  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0700  00AE               	movwf	??_SetReceivedTimes+1
  3845  0701  082E               	movf	??_SetReceivedTimes+1,w
  3846  0702  00BA               	movwf	SetReceivedTimes@index
  3847  0703                     l2898:	
  3848                           
  3849                           ;./CustomLib/TrafficLight.h: 67:                     unsigned char semaforoId = (_dataFr
      +                          omGateway[index] >> 1) & 0x0F;
  3850  0703  083A               	movf	SetReceivedTimes@index,w
  3851  0704  0739               	addwf	SetReceivedTimes@_dataFromGateway,w
  3852  0705  00AD               	movwf	??_SetReceivedTimes
  3853  0706  082D               	movf	??_SetReceivedTimes,w
  3854  0707  0084               	movwf	4
  3855  0708  1383               	bcf	3,7	;select IRP bank0
  3856  0709  0800               	movf	0,w
  3857  070A  00AE               	movwf	??_SetReceivedTimes+1
  3858  070B  1003               	clrc
  3859  070C  0C2E               	rrf	??_SetReceivedTimes+1,w
  3860  070D  390F               	andlw	15
  3861  070E  00AF               	movwf	??_SetReceivedTimes+2
  3862  070F  082F               	movf	??_SetReceivedTimes+2,w
  3863  0710  00B7               	movwf	SetReceivedTimes@semaforoId
  3864  0711                     l2900:	
  3865                           
  3866                           ;./CustomLib/TrafficLight.h: 68:                     unsigned char colorId = ((_dataFrom
      +                          Gateway[index] >> 5) & 0x03) - 1;
  3867  0711  083A               	movf	SetReceivedTimes@index,w
  3868  0712  0739               	addwf	SetReceivedTimes@_dataFromGateway,w
  3869  0713  00AD               	movwf	??_SetReceivedTimes
  3870  0714  082D               	movf	??_SetReceivedTimes,w
  3871  0715  0084               	movwf	4
  3872  0716  0800               	movf	0,w
  3873  0717  00AE               	movwf	??_SetReceivedTimes+1
  3874  0718  3005               	movlw	5
  3875  0719                     u2625:	
  3876  0719  1003               	clrc
  3877  071A  0CAE               	rrf	??_SetReceivedTimes+1,f
  3878  071B  3EFF               	addlw	-1
  3879  071C  1D03               	skipz
  3880  071D  2F19               	goto	u2625
  3881  071E  082E               	movf	??_SetReceivedTimes+1,w
  3882  071F  3903               	andlw	3
  3883  0720  3EFF               	addlw	255
  3884  0721  00AF               	movwf	??_SetReceivedTimes+2
  3885  0722  082F               	movf	??_SetReceivedTimes+2,w
  3886  0723  00B5               	movwf	SetReceivedTimes@colorId
  3887  0724                     l2902:	
  3888                           
  3889                           ;./CustomLib/TrafficLight.h: 69:                     unsigned char luxId = _dataFromGate
      +                          way[index+1] & 0xFE;
  3890  0724  083A               	movf	SetReceivedTimes@index,w
  3891  0725  0739               	addwf	SetReceivedTimes@_dataFromGateway,w
  3892  0726  00AD               	movwf	??_SetReceivedTimes
  3893  0727  0A2D               	incf	??_SetReceivedTimes,w
  3894  0728  0084               	movwf	4
  3895  0729  0800               	movf	0,w
  3896  072A  39FE               	andlw	254
  3897  072B  00AE               	movwf	??_SetReceivedTimes+1
  3898  072C  082E               	movf	??_SetReceivedTimes+1,w
  3899  072D  00B6               	movwf	SetReceivedTimes@luxId
  3900  072E                     l2904:	
  3901                           
  3902                           ;./CustomLib/TrafficLight.h: 71:                     (*(_semafori)[semaforoId]).new_time
      +                          s[colorId]=GetTime(index, _dataFromGateway);
  3903  072E  0839               	movf	SetReceivedTimes@_dataFromGateway,w
  3904  072F  00AD               	movwf	??_SetReceivedTimes
  3905  0730  082D               	movf	??_SetReceivedTimes,w
  3906  0731  00A4               	movwf	GetTime@_dataFromGateway
  3907  0732  083A               	movf	SetReceivedTimes@index,w
  3908  0733  120A  158A  2533  120A  118A  	fcall	_GetTime
  3909  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0739  1303               	bcf	3,6	;RP1=0, select bank0
  3911  073A  0837               	movf	SetReceivedTimes@semaforoId,w
  3912  073B  00AE               	movwf	??_SetReceivedTimes+1
  3913  073C  072E               	addwf	??_SetReceivedTimes+1,w
  3914  073D  072C               	addwf	SetReceivedTimes@_semafori,w
  3915  073E  00AF               	movwf	??_SetReceivedTimes+2
  3916  073F  082F               	movf	??_SetReceivedTimes+2,w
  3917  0740  0084               	movwf	4
  3918  0741  1383               	bcf	3,7	;select IRP bank0
  3919  0742  0800               	movf	0,w
  3920  0743  00B0               	movwf	??_SetReceivedTimes+3
  3921  0744  0A84               	incf	4,f
  3922  0745  0800               	movf	0,w
  3923  0746  00B1               	movwf	??_SetReceivedTimes+4
  3924  0747  0835               	movf	SetReceivedTimes@colorId,w
  3925  0748  00B2               	movwf	??_SetReceivedTimes+5
  3926  0749  0732               	addwf	??_SetReceivedTimes+5,w
  3927  074A  3E06               	addlw	6
  3928  074B  0730               	addwf	??_SetReceivedTimes+3,w
  3929  074C  00B3               	movwf	??_SetReceivedTimes+6
  3930  074D  0831               	movf	??_SetReceivedTimes+4,w
  3931  074E  1803               	skipnc
  3932  074F  3E01               	addlw	1
  3933  0750  00B4               	movwf	??_SetReceivedTimes+7
  3934  0751  0833               	movf	??_SetReceivedTimes+6,w
  3935  0752  0084               	movwf	4
  3936  0753  1783               	bsf	3,7
  3937  0754  1C34               	btfss	??_SetReceivedTimes+7,0
  3938  0755  1383               	bcf	3,7
  3939  0756  0824               	movf	?_GetTime,w
  3940  0757  0080               	movwf	0
  3941  0758  0A84               	incf	4,f
  3942  0759  0825               	movf	?_GetTime+1,w
  3943  075A  0080               	movwf	0
  3944  075B                     l2906:	
  3945                           
  3946                           ;./CustomLib/TrafficLight.h: 72:                     (*(_semafori)[semaforoId]).new_lux_
      +                          select=luxId;
  3947  075B  0836               	movf	SetReceivedTimes@luxId,w
  3948  075C  00AD               	movwf	??_SetReceivedTimes
  3949  075D  0837               	movf	SetReceivedTimes@semaforoId,w
  3950  075E  00AE               	movwf	??_SetReceivedTimes+1
  3951  075F  072E               	addwf	??_SetReceivedTimes+1,w
  3952  0760  072C               	addwf	SetReceivedTimes@_semafori,w
  3953  0761  00AF               	movwf	??_SetReceivedTimes+2
  3954  0762  082F               	movf	??_SetReceivedTimes+2,w
  3955  0763  0084               	movwf	4
  3956  0764  1383               	bcf	3,7	;select IRP bank0
  3957  0765  0800               	movf	0,w
  3958  0766  00B0               	movwf	??_SetReceivedTimes+3
  3959  0767  0A84               	incf	4,f
  3960  0768  0800               	movf	0,w
  3961  0769  00B1               	movwf	??_SetReceivedTimes+4
  3962  076A  0830               	movf	??_SetReceivedTimes+3,w
  3963  076B  3E0D               	addlw	13
  3964  076C  00B2               	movwf	??_SetReceivedTimes+5
  3965  076D  0831               	movf	??_SetReceivedTimes+4,w
  3966  076E  1803               	skipnc
  3967  076F  3E01               	addlw	1
  3968  0770  3E00               	addlw	0
  3969  0771  00B3               	movwf	??_SetReceivedTimes+6
  3970  0772  0832               	movf	??_SetReceivedTimes+5,w
  3971  0773  0084               	movwf	4
  3972  0774  1783               	bsf	3,7
  3973  0775  1C33               	btfss	??_SetReceivedTimes+6,0
  3974  0776  1383               	bcf	3,7
  3975  0777  082D               	movf	??_SetReceivedTimes,w
  3976  0778  0080               	movwf	0
  3977  0779                     l2908:	
  3978                           
  3979                           ;./CustomLib/TrafficLight.h: 73:                 }
  3980  0779  3001               	movlw	1
  3981  077A  00AD               	movwf	??_SetReceivedTimes
  3982  077B  082D               	movf	??_SetReceivedTimes,w
  3983  077C  07B8               	addwf	SetReceivedTimes@i,f
  3984  077D  2EED               	goto	l2892
  3985  077E                     l159:	
  3986  077E  0008               	return
  3987  077F                     __end_of_SetReceivedTimes:	
  3988                           
  3989                           	psect	text11
  3990  07E8                     __ptext11:	
  3991 ;; *************** function ___bmul *****************
  3992 ;; Defined at:
  3993 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  multiplier      1    wreg     unsigned char 
  3996 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  multiplier      1    7[BANK0 ] unsigned char 
  3999 ;;  product         1    6[BANK0 ] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      unsigned char 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       1       0       0       0
  4010 ;;      Locals:         0       2       0       0       0
  4011 ;;      Temps:          0       1       0       0       0
  4012 ;;      Totals:         0       4       0       0       0
  4013 ;;Total ram usage:        4 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    3
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_SetReceivedTimes
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           
  4024                           ;psect for function ___bmul
  4025  07E8                     ___bmul:	
  4026                           
  4027                           ;incstack = 0
  4028                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4029                           ;___bmul@multiplier stored from wreg
  4030  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  4031  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  4032  07EA  00A7               	movwf	___bmul@multiplier
  4033  07EB                     l2680:	
  4034  07EB  01A6               	clrf	___bmul@product
  4035  07EC                     l2682:	
  4036  07EC  1C27               	btfss	___bmul@multiplier,0
  4037  07ED  2FEF               	goto	u2251
  4038  07EE  2FF0               	goto	u2250
  4039  07EF                     u2251:	
  4040  07EF  2FF4               	goto	l2686
  4041  07F0                     u2250:	
  4042  07F0                     l2684:	
  4043  07F0  0824               	movf	___bmul@multiplicand,w
  4044  07F1  00A5               	movwf	??___bmul
  4045  07F2  0825               	movf	??___bmul,w
  4046  07F3  07A6               	addwf	___bmul@product,f
  4047  07F4                     l2686:	
  4048  07F4  1003               	clrc
  4049  07F5  0DA4               	rlf	___bmul@multiplicand,f
  4050  07F6                     l2688:	
  4051  07F6  1003               	clrc
  4052  07F7  0CA7               	rrf	___bmul@multiplier,f
  4053  07F8  0827               	movf	___bmul@multiplier,w
  4054  07F9  1D03               	btfss	3,2
  4055  07FA  2FFC               	goto	u2261
  4056  07FB  2FFD               	goto	u2260
  4057  07FC                     u2261:	
  4058  07FC  2FEC               	goto	l2682
  4059  07FD                     u2260:	
  4060  07FD                     l2690:	
  4061  07FD  0826               	movf	___bmul@product,w
  4062  07FE                     l442:	
  4063  07FE  0008               	return
  4064  07FF                     __end_of___bmul:	
  4065                           
  4066                           	psect	text12
  4067  0D33                     __ptext12:	
  4068 ;; *************** function _GetTime *****************
  4069 ;; Defined at:
  4070 ;;		line 18 in file "./CustomLib/TrafficLight.h"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  index           1    wreg     unsigned char 
  4073 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4074 ;;		 -> dataFromGateway(15), 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  index           1    8[BANK0 ] unsigned char 
  4077 ;;  tmp             2   10[BANK0 ] int 
  4078 ;;  shortInt        1    9[BANK0 ] struct .
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  2    4[BANK0 ] int 
  4081 ;; Registers used:
  4082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         0       2       0       0       0
  4089 ;;      Locals:         0       4       0       0       0
  4090 ;;      Temps:          0       2       0       0       0
  4091 ;;      Totals:         0       8       0       0       0
  4092 ;;Total ram usage:        8 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    3
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_SetReceivedTimes
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           
  4103                           ;psect for function _GetTime
  4104  0D33                     _GetTime:	
  4105                           
  4106                           ;incstack = 0
  4107                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4108                           ;GetTime@index stored from wreg
  4109  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  4110  0D34  1303               	bcf	3,6	;RP1=0, select bank0
  4111  0D35  00A8               	movwf	GetTime@index
  4112  0D36                     l2648:	
  4113                           
  4114                           ;./CustomLib/TrafficLight.h: 18: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 19: {;./CustomLib/TrafficLight.h: 20:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 24:     } shortInt;;./CustomLib/TrafficLight.h: 26:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4115  0D36  0828               	movf	GetTime@index,w
  4116  0D37  0724               	addwf	GetTime@_dataFromGateway,w
  4117  0D38  00A6               	movwf	??_GetTime
  4118  0D39  0826               	movf	??_GetTime,w
  4119  0D3A  3E03               	addlw	3
  4120  0D3B  0084               	movwf	4
  4121  0D3C  307F               	movlw	127
  4122  0D3D  1383               	bcf	3,7	;select IRP bank0
  4123  0D3E  0500               	andwf	0,w
  4124  0D3F  00A7               	movwf	??_GetTime+1
  4125  0D40  0829               	movf	GetTime@shortInt,w
  4126  0D41  0627               	xorwf	??_GetTime+1,w
  4127  0D42  3980               	andlw	-128
  4128  0D43  0627               	xorwf	??_GetTime+1,w
  4129  0D44  00A9               	movwf	GetTime@shortInt
  4130  0D45                     l2650:	
  4131                           
  4132                           ;./CustomLib/TrafficLight.h: 27:     tmp = shortInt.Val;
  4133  0D45  0829               	movf	GetTime@shortInt,w
  4134  0D46  397F               	andlw	127
  4135  0D47  00A6               	movwf	??_GetTime
  4136  0D48  01A7               	clrf	??_GetTime+1
  4137  0D49  0826               	movf	??_GetTime,w
  4138  0D4A  00AA               	movwf	GetTime@tmp
  4139  0D4B  0827               	movf	??_GetTime+1,w
  4140  0D4C  00AB               	movwf	GetTime@tmp+1
  4141  0D4D                     l2652:	
  4142                           
  4143                           ;./CustomLib/TrafficLight.h: 28:     tmp = (tmp << 7) & 0x80;
  4144  0D4D  082B               	movf	GetTime@tmp+1,w
  4145  0D4E  00A7               	movwf	??_GetTime+1
  4146  0D4F  082A               	movf	GetTime@tmp,w
  4147  0D50  00A6               	movwf	??_GetTime
  4148  0D51  3007               	movlw	7
  4149  0D52  00FF               	movwf	btemp+1
  4150  0D53                     u2195:	
  4151  0D53  1003               	clrc
  4152  0D54  0DA6               	rlf	??_GetTime,f
  4153  0D55  0DA7               	rlf	??_GetTime+1,f
  4154  0D56  0BFF               	decfsz	btemp+1,f
  4155  0D57  2D53               	goto	u2195
  4156  0D58  3080               	movlw	128
  4157  0D59  0526               	andwf	??_GetTime,w
  4158  0D5A  00AA               	movwf	GetTime@tmp
  4159  0D5B  3000               	movlw	0
  4160  0D5C  0527               	andwf	??_GetTime+1,w
  4161  0D5D  00AB               	movwf	GetTime@tmp+1
  4162  0D5E                     l2654:	
  4163                           
  4164                           ;./CustomLib/TrafficLight.h: 30:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4165  0D5E  0828               	movf	GetTime@index,w
  4166  0D5F  0724               	addwf	GetTime@_dataFromGateway,w
  4167  0D60  00A6               	movwf	??_GetTime
  4168  0D61  0826               	movf	??_GetTime,w
  4169  0D62  3E02               	addlw	2
  4170  0D63  0084               	movwf	4
  4171  0D64  307F               	movlw	127
  4172  0D65  0500               	andwf	0,w
  4173  0D66  00A7               	movwf	??_GetTime+1
  4174  0D67  0829               	movf	GetTime@shortInt,w
  4175  0D68  0627               	xorwf	??_GetTime+1,w
  4176  0D69  3980               	andlw	-128
  4177  0D6A  0627               	xorwf	??_GetTime+1,w
  4178  0D6B  00A9               	movwf	GetTime@shortInt
  4179  0D6C                     l2656:	
  4180                           
  4181                           ;./CustomLib/TrafficLight.h: 31:     tmp = tmp | shortInt.Val;
  4182  0D6C  0829               	movf	GetTime@shortInt,w
  4183  0D6D  397F               	andlw	127
  4184  0D6E  00A6               	movwf	??_GetTime
  4185  0D6F  082A               	movf	GetTime@tmp,w
  4186  0D70  0426               	iorwf	??_GetTime,w
  4187  0D71  00AA               	movwf	GetTime@tmp
  4188  0D72  082B               	movf	GetTime@tmp+1,w
  4189  0D73  00AB               	movwf	GetTime@tmp+1
  4190  0D74                     l2658:	
  4191                           
  4192                           ;./CustomLib/TrafficLight.h: 33:     return tmp;
  4193  0D74  082B               	movf	GetTime@tmp+1,w
  4194  0D75  00A5               	movwf	?_GetTime+1
  4195  0D76  082A               	movf	GetTime@tmp,w
  4196  0D77  00A4               	movwf	?_GetTime
  4197  0D78                     l142:	
  4198  0D78  0008               	return
  4199  0D79                     __end_of_GetTime:	
  4200                           
  4201                           	psect	text13
  4202  0C31                     __ptext13:	
  4203 ;; *************** function _SetDisplay *****************
  4204 ;; Defined at:
  4205 ;;		line 399 in file "main.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  d1              1    wreg     unsigned char 
  4208 ;;  d2              1    4[BANK0 ] unsigned char 
  4209 ;;  d3              1    5[BANK0 ] unsigned char 
  4210 ;;  value           1    6[BANK0 ] unsigned char 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  d1              1    7[BANK0 ] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, status,0
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4222 ;;      Params:         0       3       0       0       0
  4223 ;;      Locals:         0       1       0       0       0
  4224 ;;      Temps:          0       0       0       0       0
  4225 ;;      Totals:         0       4       0       0       0
  4226 ;;Total ram usage:        4 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    3
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_main
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           
  4237                           ;psect for function _SetDisplay
  4238  0C31                     _SetDisplay:	
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in _SetDisplay: [wreg+status,0]
  4242                           ;SetDisplay@d1 stored from wreg
  4243  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  4244  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0C33  00A7               	movwf	SetDisplay@d1
  4246  0C34                     l2956:	
  4247                           
  4248                           ;main.c: 399: void SetDisplay(char d1, char d2, char d3, char value);main.c: 400: {;main
      +                          .c: 401:     PORTAbits.RA2 = d1;
  4249  0C34  0C27               	rrf	SetDisplay@d1,w
  4250  0C35  1C03               	skipc
  4251  0C36  1105               	bcf	5,2	;volatile
  4252  0C37  1803               	skipnc
  4253  0C38  1505               	bsf	5,2	;volatile
  4254                           
  4255                           ;main.c: 402:     PORTAbits.RA3 = d2;
  4256  0C39  0C24               	rrf	SetDisplay@d2,w
  4257  0C3A  1C03               	skipc
  4258  0C3B  1185               	bcf	5,3	;volatile
  4259  0C3C  1803               	skipnc
  4260  0C3D  1585               	bsf	5,3	;volatile
  4261                           
  4262                           ;main.c: 403:     PORTAbits.RA4 = d3;
  4263  0C3E  0C25               	rrf	SetDisplay@d3,w
  4264  0C3F  1C03               	skipc
  4265  0C40  1205               	bcf	5,4	;volatile
  4266  0C41  1803               	skipnc
  4267  0C42  1605               	bsf	5,4	;volatile
  4268  0C43                     l2958:	
  4269                           
  4270                           ;main.c: 404:     PORTD = value;
  4271  0C43  0826               	movf	SetDisplay@value,w
  4272  0C44  0088               	movwf	8	;volatile
  4273  0C45                     l312:	
  4274  0C45  0008               	return
  4275  0C46                     __end_of_SetDisplay:	
  4276                           
  4277                           	psect	text14
  4278  0EDD                     __ptext14:	
  4279 ;; *************** function _SetDefaultTimers *****************
  4280 ;; Defined at:
  4281 ;;		line 38 in file "./CustomLib/TrafficLight.h"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  rosso           2    4[BANK0 ] int 
  4284 ;;  verde           2    6[BANK0 ] int 
  4285 ;;  giallo          2    8[BANK0 ] int 
  4286 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4287 ;;		 -> Semafori(16), 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  i               1   19[BANK0 ] unsigned char 
  4290 ;;  l               1   18[BANK0 ] unsigned char 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4300 ;;      Params:         0       7       0       0       0
  4301 ;;      Locals:         0       2       0       0       0
  4302 ;;      Temps:          0       7       0       0       0
  4303 ;;      Totals:         0      16       0       0       0
  4304 ;;Total ram usage:       16 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    3
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_main
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           
  4315                           ;psect for function _SetDefaultTimers
  4316  0EDD                     _SetDefaultTimers:	
  4317  0EDD                     l2856:	
  4318                           ;incstack = 0
  4319                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4320                           
  4321                           
  4322                           ;./CustomLib/TrafficLight.h: 38: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 39: {;./CustomLib/TrafficLight.h: 40: 
      +                              for (unsigned char l = 0; l < n_semafori; l++)
  4323  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  4324  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  4325  0EDF  01B2               	clrf	SetDefaultTimers@l
  4326  0EE0                     l2862:	
  4327                           
  4328                           ;./CustomLib/TrafficLight.h: 41:     {;./CustomLib/TrafficLight.h: 42:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4329  0EE0  01B3               	clrf	SetDefaultTimers@i
  4330  0EE1  2F45               	goto	l2876
  4331  0EE2                     l2868:	
  4332                           
  4333                           ;./CustomLib/TrafficLight.h: 47:                 (*(_semafori)[l]).times[i] = rosso;
  4334  0EE2  0832               	movf	SetDefaultTimers@l,w
  4335  0EE3  00AB               	movwf	??_SetDefaultTimers
  4336  0EE4  072B               	addwf	??_SetDefaultTimers,w
  4337  0EE5  072A               	addwf	SetDefaultTimers@_semafori,w
  4338  0EE6  00AC               	movwf	??_SetDefaultTimers+1
  4339  0EE7  082C               	movf	??_SetDefaultTimers+1,w
  4340  0EE8  0084               	movwf	4
  4341  0EE9  1383               	bcf	3,7	;select IRP bank0
  4342  0EEA  0800               	movf	0,w
  4343  0EEB  00AD               	movwf	??_SetDefaultTimers+2
  4344  0EEC  0A84               	incf	4,f
  4345  0EED  0800               	movf	0,w
  4346  0EEE  00AE               	movwf	??_SetDefaultTimers+3
  4347  0EEF  0833               	movf	SetDefaultTimers@i,w
  4348  0EF0  00AF               	movwf	??_SetDefaultTimers+4
  4349  0EF1  072F               	addwf	??_SetDefaultTimers+4,w
  4350  0EF2  072D               	addwf	??_SetDefaultTimers+2,w
  4351  0EF3  00B0               	movwf	??_SetDefaultTimers+5
  4352  0EF4  082E               	movf	??_SetDefaultTimers+3,w
  4353  0EF5  1803               	skipnc
  4354  0EF6  3E01               	addlw	1
  4355  0EF7  00B1               	movwf	??_SetDefaultTimers+6
  4356  0EF8  0830               	movf	??_SetDefaultTimers+5,w
  4357  0EF9  0084               	movwf	4
  4358  0EFA  1783               	bsf	3,7
  4359  0EFB  1C31               	btfss	??_SetDefaultTimers+6,0
  4360  0EFC  1383               	bcf	3,7
  4361  0EFD  0824               	movf	SetDefaultTimers@rosso,w
  4362  0EFE  0080               	movwf	0
  4363  0EFF  0A84               	incf	4,f
  4364  0F00  0825               	movf	SetDefaultTimers@rosso+1,w
  4365  0F01  0080               	movwf	0
  4366                           
  4367                           ;./CustomLib/TrafficLight.h: 48:                 break;
  4368  0F02  2F58               	goto	l2878
  4369  0F03                     l2870:	
  4370                           
  4371                           ;./CustomLib/TrafficLight.h: 50:                 (*(_semafori)[l]).times[i] = verde;
  4372  0F03  0832               	movf	SetDefaultTimers@l,w
  4373  0F04  00AB               	movwf	??_SetDefaultTimers
  4374  0F05  072B               	addwf	??_SetDefaultTimers,w
  4375  0F06  072A               	addwf	SetDefaultTimers@_semafori,w
  4376  0F07  00AC               	movwf	??_SetDefaultTimers+1
  4377  0F08  082C               	movf	??_SetDefaultTimers+1,w
  4378  0F09  0084               	movwf	4
  4379  0F0A  1383               	bcf	3,7	;select IRP bank0
  4380  0F0B  0800               	movf	0,w
  4381  0F0C  00AD               	movwf	??_SetDefaultTimers+2
  4382  0F0D  0A84               	incf	4,f
  4383  0F0E  0800               	movf	0,w
  4384  0F0F  00AE               	movwf	??_SetDefaultTimers+3
  4385  0F10  0833               	movf	SetDefaultTimers@i,w
  4386  0F11  00AF               	movwf	??_SetDefaultTimers+4
  4387  0F12  072F               	addwf	??_SetDefaultTimers+4,w
  4388  0F13  072D               	addwf	??_SetDefaultTimers+2,w
  4389  0F14  00B0               	movwf	??_SetDefaultTimers+5
  4390  0F15  082E               	movf	??_SetDefaultTimers+3,w
  4391  0F16  1803               	skipnc
  4392  0F17  3E01               	addlw	1
  4393  0F18  00B1               	movwf	??_SetDefaultTimers+6
  4394  0F19  0830               	movf	??_SetDefaultTimers+5,w
  4395  0F1A  0084               	movwf	4
  4396  0F1B  1783               	bsf	3,7
  4397  0F1C  1C31               	btfss	??_SetDefaultTimers+6,0
  4398  0F1D  1383               	bcf	3,7
  4399  0F1E  0826               	movf	SetDefaultTimers@verde,w
  4400  0F1F  0080               	movwf	0
  4401  0F20  0A84               	incf	4,f
  4402  0F21  0827               	movf	SetDefaultTimers@verde+1,w
  4403  0F22  0080               	movwf	0
  4404                           
  4405                           ;./CustomLib/TrafficLight.h: 51:                 break;
  4406  0F23  2F58               	goto	l2878
  4407  0F24                     l2872:	
  4408                           
  4409                           ;./CustomLib/TrafficLight.h: 53:                 (*(_semafori)[l]).times[i] = giallo;
  4410  0F24  0832               	movf	SetDefaultTimers@l,w
  4411  0F25  00AB               	movwf	??_SetDefaultTimers
  4412  0F26  072B               	addwf	??_SetDefaultTimers,w
  4413  0F27  072A               	addwf	SetDefaultTimers@_semafori,w
  4414  0F28  00AC               	movwf	??_SetDefaultTimers+1
  4415  0F29  082C               	movf	??_SetDefaultTimers+1,w
  4416  0F2A  0084               	movwf	4
  4417  0F2B  1383               	bcf	3,7	;select IRP bank0
  4418  0F2C  0800               	movf	0,w
  4419  0F2D  00AD               	movwf	??_SetDefaultTimers+2
  4420  0F2E  0A84               	incf	4,f
  4421  0F2F  0800               	movf	0,w
  4422  0F30  00AE               	movwf	??_SetDefaultTimers+3
  4423  0F31  0833               	movf	SetDefaultTimers@i,w
  4424  0F32  00AF               	movwf	??_SetDefaultTimers+4
  4425  0F33  072F               	addwf	??_SetDefaultTimers+4,w
  4426  0F34  072D               	addwf	??_SetDefaultTimers+2,w
  4427  0F35  00B0               	movwf	??_SetDefaultTimers+5
  4428  0F36  082E               	movf	??_SetDefaultTimers+3,w
  4429  0F37  1803               	skipnc
  4430  0F38  3E01               	addlw	1
  4431  0F39  00B1               	movwf	??_SetDefaultTimers+6
  4432  0F3A  0830               	movf	??_SetDefaultTimers+5,w
  4433  0F3B  0084               	movwf	4
  4434  0F3C  1783               	bsf	3,7
  4435  0F3D  1C31               	btfss	??_SetDefaultTimers+6,0
  4436  0F3E  1383               	bcf	3,7
  4437  0F3F  0828               	movf	SetDefaultTimers@giallo,w
  4438  0F40  0080               	movwf	0
  4439  0F41  0A84               	incf	4,f
  4440  0F42  0829               	movf	SetDefaultTimers@giallo+1,w
  4441  0F43  0080               	movwf	0
  4442                           
  4443                           ;./CustomLib/TrafficLight.h: 54:                 break;
  4444  0F44  2F58               	goto	l2878
  4445  0F45                     l2876:	
  4446  0F45  0833               	movf	SetDefaultTimers@i,w
  4447  0F46  00AB               	movwf	??_SetDefaultTimers
  4448  0F47  01AC               	clrf	??_SetDefaultTimers+1
  4449                           
  4450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4451                           ; Switch size 1, requested type "simple"
  4452                           ; Number of cases is 1, Range of values is 0 to 0
  4453                           ; switch strategies available:
  4454                           ; Name         Instructions Cycles
  4455                           ; simple_byte            4     3 (average)
  4456                           ; direct_byte           11     8 (fixed)
  4457                           ; jumptable            260     6 (fixed)
  4458                           ;	Chosen strategy is simple_byte
  4459  0F48  082C               	movf	??_SetDefaultTimers+1,w
  4460  0F49  3A00               	xorlw	0	; case 0
  4461  0F4A  1903               	skipnz
  4462  0F4B  2F4D               	goto	l3294
  4463  0F4C  2F58               	goto	l2878
  4464  0F4D                     l3294:	
  4465                           
  4466                           ; Switch size 1, requested type "simple"
  4467                           ; Number of cases is 3, Range of values is 0 to 2
  4468                           ; switch strategies available:
  4469                           ; Name         Instructions Cycles
  4470                           ; simple_byte           10     6 (average)
  4471                           ; direct_byte           17     8 (fixed)
  4472                           ; jumptable            260     6 (fixed)
  4473                           ;	Chosen strategy is simple_byte
  4474  0F4D  082B               	movf	??_SetDefaultTimers,w
  4475  0F4E  3A00               	xorlw	0	; case 0
  4476  0F4F  1903               	skipnz
  4477  0F50  2EE2               	goto	l2868
  4478  0F51  3A01               	xorlw	1	; case 1
  4479  0F52  1903               	skipnz
  4480  0F53  2F03               	goto	l2870
  4481  0F54  3A03               	xorlw	3	; case 2
  4482  0F55  1903               	skipnz
  4483  0F56  2F24               	goto	l2872
  4484  0F57  2F58               	goto	l2878
  4485  0F58                     l2878:	
  4486                           
  4487                           ;./CustomLib/TrafficLight.h: 56:         }
  4488  0F58  3001               	movlw	1
  4489  0F59  00AB               	movwf	??_SetDefaultTimers
  4490  0F5A  082B               	movf	??_SetDefaultTimers,w
  4491  0F5B  07B3               	addwf	SetDefaultTimers@i,f
  4492  0F5C                     l2880:	
  4493  0F5C  3003               	movlw	3
  4494  0F5D  0233               	subwf	SetDefaultTimers@i,w
  4495  0F5E  1C03               	skipc
  4496  0F5F  2F61               	goto	u2591
  4497  0F60  2F62               	goto	u2590
  4498  0F61                     u2591:	
  4499  0F61  2F45               	goto	l2876
  4500  0F62                     u2590:	
  4501  0F62                     l2882:	
  4502                           
  4503                           ;./CustomLib/TrafficLight.h: 57:     }
  4504  0F62  3001               	movlw	1
  4505  0F63  00AB               	movwf	??_SetDefaultTimers
  4506  0F64  082B               	movf	??_SetDefaultTimers,w
  4507  0F65  07B2               	addwf	SetDefaultTimers@l,f
  4508  0F66                     l2884:	
  4509  0F66  3008               	movlw	8
  4510  0F67  0232               	subwf	SetDefaultTimers@l,w
  4511  0F68  1C03               	skipc
  4512  0F69  2F6B               	goto	u2601
  4513  0F6A  2F6C               	goto	u2600
  4514  0F6B                     u2601:	
  4515  0F6B  2EE0               	goto	l2862
  4516  0F6C                     u2600:	
  4517  0F6C                     l154:	
  4518  0F6C  0008               	return
  4519  0F6D                     __end_of_SetDefaultTimers:	
  4520                           
  4521                           	psect	text15
  4522  064D                     __ptext15:	
  4523 ;; *************** function _GetDigits *****************
  4524 ;; Defined at:
  4525 ;;		line 29 in file "./CustomLib/Conversions.h"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  centinaia       1    wreg     PTR unsigned char 
  4528 ;;		 -> centinaia(1), 
  4529 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  4530 ;;		 -> decine(1), 
  4531 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  4532 ;;		 -> unita(1), 
  4533 ;;  Time            2   22[BANK0 ] int 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  4536 ;;		 -> centinaia(1), 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4546 ;;      Params:         0       4       0       0       0
  4547 ;;      Locals:         0       3       0       0       0
  4548 ;;      Temps:          0       1       0       0       0
  4549 ;;      Totals:         0       8       0       0       0
  4550 ;;Total ram usage:        8 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    4
  4553 ;; This function calls:
  4554 ;;		___awdiv
  4555 ;;		___awmod
  4556 ;; This function is called by:
  4557 ;;		_main
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _GetDigits
  4563  064D                     _GetDigits:	
  4564                           
  4565                           ;incstack = 0
  4566                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4567                           ;GetDigits@centinaia stored from wreg
  4568  064D  1283               	bcf	3,5	;RP0=0, select bank0
  4569  064E  1303               	bcf	3,6	;RP1=0, select bank0
  4570  064F  00BB               	movwf	GetDigits@centinaia
  4571  0650                     l2820:	
  4572                           
  4573                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     while(Time/1000>0)
  4574  0650  2E66               	goto	l2824
  4575  0651                     l2822:	
  4576                           
  4577                           ;./CustomLib/Conversions.h: 32:     {;./CustomLib/Conversions.h: 33:         Time=Time/1
      +                          0;
  4578  0651  300A               	movlw	10
  4579  0652  1283               	bcf	3,5	;RP0=0, select bank0
  4580  0653  1303               	bcf	3,6	;RP1=0, select bank0
  4581  0654  00AB               	movwf	___awdiv@divisor
  4582  0655  3000               	movlw	0
  4583  0656  00AC               	movwf	___awdiv@divisor+1
  4584  0657  0837               	movf	GetDigits@Time+1,w
  4585  0658  00AE               	movwf	___awdiv@dividend+1
  4586  0659  0836               	movf	GetDigits@Time,w
  4587  065A  00AD               	movwf	___awdiv@dividend
  4588  065B  120A  118A  277F  120A  118A  	fcall	___awdiv
  4589  0660  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0661  1303               	bcf	3,6	;RP1=0, select bank0
  4591  0662  082C               	movf	?___awdiv+1,w
  4592  0663  00B7               	movwf	GetDigits@Time+1
  4593  0664  082B               	movf	?___awdiv,w
  4594  0665  00B6               	movwf	GetDigits@Time
  4595  0666                     l2824:	
  4596                           
  4597                           ;./CustomLib/Conversions.h: 31:     while(Time/1000>0)
  4598  0666  30E8               	movlw	232
  4599  0667  00AB               	movwf	___awdiv@divisor
  4600  0668  3003               	movlw	3
  4601  0669  00AC               	movwf	___awdiv@divisor+1
  4602  066A  0837               	movf	GetDigits@Time+1,w
  4603  066B  00AE               	movwf	___awdiv@dividend+1
  4604  066C  0836               	movf	GetDigits@Time,w
  4605  066D  00AD               	movwf	___awdiv@dividend
  4606  066E  120A  118A  277F  120A  118A  	fcall	___awdiv
  4607  0673  1283               	bcf	3,5	;RP0=0, select bank0
  4608  0674  1303               	bcf	3,6	;RP1=0, select bank0
  4609  0675  082C               	movf	?___awdiv+1,w
  4610  0676  3A80               	xorlw	128
  4611  0677  00FF               	movwf	btemp+1
  4612  0678  3080               	movlw	128
  4613  0679  027F               	subwf	btemp+1,w
  4614  067A  1D03               	skipz
  4615  067B  2E7E               	goto	u2565
  4616  067C  3001               	movlw	1
  4617  067D  022B               	subwf	?___awdiv,w
  4618  067E                     u2565:	
  4619  067E  1803               	skipnc
  4620  067F  2E81               	goto	u2561
  4621  0680  2E82               	goto	u2560
  4622  0681                     u2561:	
  4623  0681  2E51               	goto	l2822
  4624  0682                     u2560:	
  4625  0682                     l2826:	
  4626                           
  4627                           ;./CustomLib/Conversions.h: 36:     *centinaia = Time / 100;
  4628  0682  3064               	movlw	100
  4629  0683  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0684  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0685  00AB               	movwf	___awdiv@divisor
  4632  0686  3000               	movlw	0
  4633  0687  00AC               	movwf	___awdiv@divisor+1
  4634  0688  0837               	movf	GetDigits@Time+1,w
  4635  0689  00AE               	movwf	___awdiv@dividend+1
  4636  068A  0836               	movf	GetDigits@Time,w
  4637  068B  00AD               	movwf	___awdiv@dividend
  4638  068C  120A  118A  277F  120A  118A  	fcall	___awdiv
  4639  0691  1283               	bcf	3,5	;RP0=0, select bank0
  4640  0692  1303               	bcf	3,6	;RP1=0, select bank0
  4641  0693  082B               	movf	?___awdiv,w
  4642  0694  00B8               	movwf	??_GetDigits
  4643  0695  083B               	movf	GetDigits@centinaia,w
  4644  0696  0084               	movwf	4
  4645  0697  0838               	movf	??_GetDigits,w
  4646  0698  1383               	bcf	3,7	;select IRP bank0
  4647  0699  0080               	movwf	0
  4648                           
  4649                           ;./CustomLib/Conversions.h: 37:     *decine = (Time % 100) / 10;
  4650  069A  300A               	movlw	10
  4651  069B  00AB               	movwf	___awdiv@divisor
  4652  069C  3000               	movlw	0
  4653  069D  00AC               	movwf	___awdiv@divisor+1
  4654  069E  0837               	movf	GetDigits@Time+1,w
  4655  069F  00A7               	movwf	___awmod@dividend+1
  4656  06A0  0836               	movf	GetDigits@Time,w
  4657  06A1  00A6               	movwf	___awmod@dividend
  4658  06A2  3064               	movlw	100
  4659  06A3  00A4               	movwf	___awmod@divisor
  4660  06A4  3000               	movlw	0
  4661  06A5  00A5               	movwf	___awmod@divisor+1
  4662  06A6  120A  158A  261D  120A  118A  	fcall	___awmod
  4663  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  4664  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  4665  06AD  0825               	movf	?___awmod+1,w
  4666  06AE  00AE               	movwf	___awdiv@dividend+1
  4667  06AF  0824               	movf	?___awmod,w
  4668  06B0  00AD               	movwf	___awdiv@dividend
  4669  06B1  120A  118A  277F  120A  118A  	fcall	___awdiv
  4670  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  4671  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  4672  06B8  082B               	movf	?___awdiv,w
  4673  06B9  00B8               	movwf	??_GetDigits
  4674  06BA  0834               	movf	GetDigits@decine,w
  4675  06BB  0084               	movwf	4
  4676  06BC  0838               	movf	??_GetDigits,w
  4677  06BD  1383               	bcf	3,7	;select IRP bank0
  4678  06BE  0080               	movwf	0
  4679  06BF                     l2828:	
  4680                           
  4681                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4682  06BF  0837               	movf	GetDigits@Time+1,w
  4683  06C0  00A7               	movwf	___awmod@dividend+1
  4684  06C1  0836               	movf	GetDigits@Time,w
  4685  06C2  00A6               	movwf	___awmod@dividend
  4686  06C3  3064               	movlw	100
  4687  06C4  00A4               	movwf	___awmod@divisor
  4688  06C5  3000               	movlw	0
  4689  06C6  00A5               	movwf	___awmod@divisor+1
  4690  06C7  120A  158A  261D  120A  118A  	fcall	___awmod
  4691  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  4692  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  4693  06CE  0825               	movf	?___awmod+1,w
  4694  06CF  00BA               	movwf	_GetDigits$1175+1
  4695  06D0  0824               	movf	?___awmod,w
  4696  06D1  00B9               	movwf	_GetDigits$1175
  4697  06D2                     l2830:	
  4698                           
  4699                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4700  06D2  300A               	movlw	10
  4701  06D3  00A4               	movwf	___awmod@divisor
  4702  06D4  3000               	movlw	0
  4703  06D5  00A5               	movwf	___awmod@divisor+1
  4704  06D6  083A               	movf	_GetDigits$1175+1,w
  4705  06D7  00A7               	movwf	___awmod@dividend+1
  4706  06D8  0839               	movf	_GetDigits$1175,w
  4707  06D9  00A6               	movwf	___awmod@dividend
  4708  06DA  120A  158A  261D  120A  118A  	fcall	___awmod
  4709  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  4710  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  4711  06E1  0824               	movf	?___awmod,w
  4712  06E2  00B8               	movwf	??_GetDigits
  4713  06E3  0835               	movf	GetDigits@unita,w
  4714  06E4  0084               	movwf	4
  4715  06E5  0838               	movf	??_GetDigits,w
  4716  06E6  1383               	bcf	3,7	;select IRP bank0
  4717  06E7  0080               	movwf	0
  4718  06E8                     l94:	
  4719  06E8  0008               	return
  4720  06E9                     __end_of_GetDigits:	
  4721                           
  4722                           	psect	text16
  4723  0E1D                     __ptext16:	
  4724 ;; *************** function ___awmod *****************
  4725 ;; Defined at:
  4726 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  divisor         2    4[BANK0 ] int 
  4729 ;;  dividend        2    6[BANK0 ] int 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  sign            1   10[BANK0 ] unsigned char 
  4732 ;;  counter         1    9[BANK0 ] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  2    4[BANK0 ] int 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         0       4       0       0       0
  4743 ;;      Locals:         0       2       0       0       0
  4744 ;;      Temps:          0       1       0       0       0
  4745 ;;      Totals:         0       7       0       0       0
  4746 ;;Total ram usage:        7 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    3
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_GetDigits
  4753 ;;		_main
  4754 ;;		_intToString
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function ___awmod
  4760  0E1D                     ___awmod:	
  4761  0E1D                     l2778:	
  4762                           ;incstack = 0
  4763                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4764                           
  4765  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4766  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4767  0E1F  01AA               	clrf	___awmod@sign
  4768  0E20                     l2780:	
  4769  0E20  1FA7               	btfss	___awmod@dividend+1,7
  4770  0E21  2E23               	goto	u2471
  4771  0E22  2E24               	goto	u2470
  4772  0E23                     u2471:	
  4773  0E23  2E2B               	goto	l2786
  4774  0E24                     u2470:	
  4775  0E24                     l2782:	
  4776  0E24  09A6               	comf	___awmod@dividend,f
  4777  0E25  09A7               	comf	___awmod@dividend+1,f
  4778  0E26  0AA6               	incf	___awmod@dividend,f
  4779  0E27  1903               	skipnz
  4780  0E28  0AA7               	incf	___awmod@dividend+1,f
  4781  0E29                     l2784:	
  4782  0E29  01AA               	clrf	___awmod@sign
  4783  0E2A  0AAA               	incf	___awmod@sign,f
  4784  0E2B                     l2786:	
  4785  0E2B  1FA5               	btfss	___awmod@divisor+1,7
  4786  0E2C  2E2E               	goto	u2481
  4787  0E2D  2E2F               	goto	u2480
  4788  0E2E                     u2481:	
  4789  0E2E  2E34               	goto	l2790
  4790  0E2F                     u2480:	
  4791  0E2F                     l2788:	
  4792  0E2F  09A4               	comf	___awmod@divisor,f
  4793  0E30  09A5               	comf	___awmod@divisor+1,f
  4794  0E31  0AA4               	incf	___awmod@divisor,f
  4795  0E32  1903               	skipnz
  4796  0E33  0AA5               	incf	___awmod@divisor+1,f
  4797  0E34                     l2790:	
  4798  0E34  0824               	movf	___awmod@divisor,w
  4799  0E35  0425               	iorwf	___awmod@divisor+1,w
  4800  0E36  1903               	btfsc	3,2
  4801  0E37  2E39               	goto	u2491
  4802  0E38  2E3A               	goto	u2490
  4803  0E39                     u2491:	
  4804  0E39  2E69               	goto	l2808
  4805  0E3A                     u2490:	
  4806  0E3A                     l2792:	
  4807  0E3A  01A9               	clrf	___awmod@counter
  4808  0E3B  0AA9               	incf	___awmod@counter,f
  4809  0E3C  2E48               	goto	l2798
  4810  0E3D                     l2794:	
  4811  0E3D  3001               	movlw	1
  4812  0E3E                     u2505:	
  4813  0E3E  1003               	clrc
  4814  0E3F  0DA4               	rlf	___awmod@divisor,f
  4815  0E40  0DA5               	rlf	___awmod@divisor+1,f
  4816  0E41  3EFF               	addlw	-1
  4817  0E42  1D03               	skipz
  4818  0E43  2E3E               	goto	u2505
  4819  0E44                     l2796:	
  4820  0E44  3001               	movlw	1
  4821  0E45  00A8               	movwf	??___awmod
  4822  0E46  0828               	movf	??___awmod,w
  4823  0E47  07A9               	addwf	___awmod@counter,f
  4824  0E48                     l2798:	
  4825  0E48  1FA5               	btfss	___awmod@divisor+1,7
  4826  0E49  2E4B               	goto	u2511
  4827  0E4A  2E4C               	goto	u2510
  4828  0E4B                     u2511:	
  4829  0E4B  2E3D               	goto	l2794
  4830  0E4C                     u2510:	
  4831  0E4C                     l2800:	
  4832  0E4C  0825               	movf	___awmod@divisor+1,w
  4833  0E4D  0227               	subwf	___awmod@dividend+1,w
  4834  0E4E  1D03               	skipz
  4835  0E4F  2E52               	goto	u2525
  4836  0E50  0824               	movf	___awmod@divisor,w
  4837  0E51  0226               	subwf	___awmod@dividend,w
  4838  0E52                     u2525:	
  4839  0E52  1C03               	skipc
  4840  0E53  2E55               	goto	u2521
  4841  0E54  2E56               	goto	u2520
  4842  0E55                     u2521:	
  4843  0E55  2E5C               	goto	l2804
  4844  0E56                     u2520:	
  4845  0E56                     l2802:	
  4846  0E56  0824               	movf	___awmod@divisor,w
  4847  0E57  02A6               	subwf	___awmod@dividend,f
  4848  0E58  0825               	movf	___awmod@divisor+1,w
  4849  0E59  1C03               	skipc
  4850  0E5A  03A7               	decf	___awmod@dividend+1,f
  4851  0E5B  02A7               	subwf	___awmod@dividend+1,f
  4852  0E5C                     l2804:	
  4853  0E5C  3001               	movlw	1
  4854  0E5D                     u2535:	
  4855  0E5D  1003               	clrc
  4856  0E5E  0CA5               	rrf	___awmod@divisor+1,f
  4857  0E5F  0CA4               	rrf	___awmod@divisor,f
  4858  0E60  3EFF               	addlw	-1
  4859  0E61  1D03               	skipz
  4860  0E62  2E5D               	goto	u2535
  4861  0E63                     l2806:	
  4862  0E63  3001               	movlw	1
  4863  0E64  02A9               	subwf	___awmod@counter,f
  4864  0E65  1D03               	btfss	3,2
  4865  0E66  2E68               	goto	u2541
  4866  0E67  2E69               	goto	u2540
  4867  0E68                     u2541:	
  4868  0E68  2E4C               	goto	l2800
  4869  0E69                     u2540:	
  4870  0E69                     l2808:	
  4871  0E69  082A               	movf	___awmod@sign,w
  4872  0E6A  1903               	btfsc	3,2
  4873  0E6B  2E6D               	goto	u2551
  4874  0E6C  2E6E               	goto	u2550
  4875  0E6D                     u2551:	
  4876  0E6D  2E73               	goto	l2812
  4877  0E6E                     u2550:	
  4878  0E6E                     l2810:	
  4879  0E6E  09A6               	comf	___awmod@dividend,f
  4880  0E6F  09A7               	comf	___awmod@dividend+1,f
  4881  0E70  0AA6               	incf	___awmod@dividend,f
  4882  0E71  1903               	skipnz
  4883  0E72  0AA7               	incf	___awmod@dividend+1,f
  4884  0E73                     l2812:	
  4885  0E73  0827               	movf	___awmod@dividend+1,w
  4886  0E74  00A5               	movwf	?___awmod+1
  4887  0E75  0826               	movf	___awmod@dividend,w
  4888  0E76  00A4               	movwf	?___awmod
  4889  0E77                     l582:	
  4890  0E77  0008               	return
  4891  0E78                     __end_of___awmod:	
  4892                           
  4893                           	psect	text17
  4894  077F                     __ptext17:	
  4895 ;; *************** function ___awdiv *****************
  4896 ;; Defined at:
  4897 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  divisor         2   11[BANK0 ] int 
  4900 ;;  dividend        2   13[BANK0 ] int 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  quotient        2   18[BANK0 ] int 
  4903 ;;  sign            1   17[BANK0 ] unsigned char 
  4904 ;;  counter         1   16[BANK0 ] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  2   11[BANK0 ] int 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       4       0       0       0
  4915 ;;      Locals:         0       4       0       0       0
  4916 ;;      Temps:          0       1       0       0       0
  4917 ;;      Totals:         0       9       0       0       0
  4918 ;;Total ram usage:        9 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    3
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_map
  4925 ;;		_GetDigits
  4926 ;;		_intToString
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function ___awdiv
  4932  077F                     ___awdiv:	
  4933  077F                     l2734:	
  4934                           ;incstack = 0
  4935                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4936                           
  4937  077F  1283               	bcf	3,5	;RP0=0, select bank0
  4938  0780  1303               	bcf	3,6	;RP1=0, select bank0
  4939  0781  01B1               	clrf	___awdiv@sign
  4940  0782                     l2736:	
  4941  0782  1FAC               	btfss	___awdiv@divisor+1,7
  4942  0783  2F85               	goto	u2371
  4943  0784  2F86               	goto	u2370
  4944  0785                     u2371:	
  4945  0785  2F8D               	goto	l2742
  4946  0786                     u2370:	
  4947  0786                     l2738:	
  4948  0786  09AB               	comf	___awdiv@divisor,f
  4949  0787  09AC               	comf	___awdiv@divisor+1,f
  4950  0788  0AAB               	incf	___awdiv@divisor,f
  4951  0789  1903               	skipnz
  4952  078A  0AAC               	incf	___awdiv@divisor+1,f
  4953  078B                     l2740:	
  4954  078B  01B1               	clrf	___awdiv@sign
  4955  078C  0AB1               	incf	___awdiv@sign,f
  4956  078D                     l2742:	
  4957  078D  1FAE               	btfss	___awdiv@dividend+1,7
  4958  078E  2F90               	goto	u2381
  4959  078F  2F91               	goto	u2380
  4960  0790                     u2381:	
  4961  0790  2F9A               	goto	l2748
  4962  0791                     u2380:	
  4963  0791                     l2744:	
  4964  0791  09AD               	comf	___awdiv@dividend,f
  4965  0792  09AE               	comf	___awdiv@dividend+1,f
  4966  0793  0AAD               	incf	___awdiv@dividend,f
  4967  0794  1903               	skipnz
  4968  0795  0AAE               	incf	___awdiv@dividend+1,f
  4969  0796                     l2746:	
  4970  0796  3001               	movlw	1
  4971  0797  00AF               	movwf	??___awdiv
  4972  0798  082F               	movf	??___awdiv,w
  4973  0799  06B1               	xorwf	___awdiv@sign,f
  4974  079A                     l2748:	
  4975  079A  01B2               	clrf	___awdiv@quotient
  4976  079B  01B3               	clrf	___awdiv@quotient+1
  4977  079C                     l2750:	
  4978  079C  082B               	movf	___awdiv@divisor,w
  4979  079D  042C               	iorwf	___awdiv@divisor+1,w
  4980  079E  1903               	btfsc	3,2
  4981  079F  2FA1               	goto	u2391
  4982  07A0  2FA2               	goto	u2390
  4983  07A1                     u2391:	
  4984  07A1  2FD9               	goto	l2770
  4985  07A2                     u2390:	
  4986  07A2                     l2752:	
  4987  07A2  01B0               	clrf	___awdiv@counter
  4988  07A3  0AB0               	incf	___awdiv@counter,f
  4989  07A4  2FB0               	goto	l2758
  4990  07A5                     l2754:	
  4991  07A5  3001               	movlw	1
  4992  07A6                     u2405:	
  4993  07A6  1003               	clrc
  4994  07A7  0DAB               	rlf	___awdiv@divisor,f
  4995  07A8  0DAC               	rlf	___awdiv@divisor+1,f
  4996  07A9  3EFF               	addlw	-1
  4997  07AA  1D03               	skipz
  4998  07AB  2FA6               	goto	u2405
  4999  07AC                     l2756:	
  5000  07AC  3001               	movlw	1
  5001  07AD  00AF               	movwf	??___awdiv
  5002  07AE  082F               	movf	??___awdiv,w
  5003  07AF  07B0               	addwf	___awdiv@counter,f
  5004  07B0                     l2758:	
  5005  07B0  1FAC               	btfss	___awdiv@divisor+1,7
  5006  07B1  2FB3               	goto	u2411
  5007  07B2  2FB4               	goto	u2410
  5008  07B3                     u2411:	
  5009  07B3  2FA5               	goto	l2754
  5010  07B4                     u2410:	
  5011  07B4                     l2760:	
  5012  07B4  3001               	movlw	1
  5013  07B5                     u2425:	
  5014  07B5  1003               	clrc
  5015  07B6  0DB2               	rlf	___awdiv@quotient,f
  5016  07B7  0DB3               	rlf	___awdiv@quotient+1,f
  5017  07B8  3EFF               	addlw	-1
  5018  07B9  1D03               	skipz
  5019  07BA  2FB5               	goto	u2425
  5020  07BB  082C               	movf	___awdiv@divisor+1,w
  5021  07BC  022E               	subwf	___awdiv@dividend+1,w
  5022  07BD  1D03               	skipz
  5023  07BE  2FC1               	goto	u2435
  5024  07BF  082B               	movf	___awdiv@divisor,w
  5025  07C0  022D               	subwf	___awdiv@dividend,w
  5026  07C1                     u2435:	
  5027  07C1  1C03               	skipc
  5028  07C2  2FC4               	goto	u2431
  5029  07C3  2FC5               	goto	u2430
  5030  07C4                     u2431:	
  5031  07C4  2FCC               	goto	l2766
  5032  07C5                     u2430:	
  5033  07C5                     l2762:	
  5034  07C5  082B               	movf	___awdiv@divisor,w
  5035  07C6  02AD               	subwf	___awdiv@dividend,f
  5036  07C7  082C               	movf	___awdiv@divisor+1,w
  5037  07C8  1C03               	skipc
  5038  07C9  03AE               	decf	___awdiv@dividend+1,f
  5039  07CA  02AE               	subwf	___awdiv@dividend+1,f
  5040  07CB                     l2764:	
  5041  07CB  1432               	bsf	___awdiv@quotient,0
  5042  07CC                     l2766:	
  5043  07CC  3001               	movlw	1
  5044  07CD                     u2445:	
  5045  07CD  1003               	clrc
  5046  07CE  0CAC               	rrf	___awdiv@divisor+1,f
  5047  07CF  0CAB               	rrf	___awdiv@divisor,f
  5048  07D0  3EFF               	addlw	-1
  5049  07D1  1D03               	skipz
  5050  07D2  2FCD               	goto	u2445
  5051  07D3                     l2768:	
  5052  07D3  3001               	movlw	1
  5053  07D4  02B0               	subwf	___awdiv@counter,f
  5054  07D5  1D03               	btfss	3,2
  5055  07D6  2FD8               	goto	u2451
  5056  07D7  2FD9               	goto	u2450
  5057  07D8                     u2451:	
  5058  07D8  2FB4               	goto	l2760
  5059  07D9                     u2450:	
  5060  07D9                     l2770:	
  5061  07D9  0831               	movf	___awdiv@sign,w
  5062  07DA  1903               	btfsc	3,2
  5063  07DB  2FDD               	goto	u2461
  5064  07DC  2FDE               	goto	u2460
  5065  07DD                     u2461:	
  5066  07DD  2FE3               	goto	l2774
  5067  07DE                     u2460:	
  5068  07DE                     l2772:	
  5069  07DE  09B2               	comf	___awdiv@quotient,f
  5070  07DF  09B3               	comf	___awdiv@quotient+1,f
  5071  07E0  0AB2               	incf	___awdiv@quotient,f
  5072  07E1  1903               	skipnz
  5073  07E2  0AB3               	incf	___awdiv@quotient+1,f
  5074  07E3                     l2774:	
  5075  07E3  0833               	movf	___awdiv@quotient+1,w
  5076  07E4  00AC               	movwf	?___awdiv+1
  5077  07E5  0832               	movf	___awdiv@quotient,w
  5078  07E6  00AB               	movwf	?___awdiv
  5079  07E7                     l569:	
  5080  07E7  0008               	return
  5081  07E8                     __end_of___awdiv:	
  5082                           
  5083                           	psect	text18
  5084  0C46                     __ptext18:	
  5085 ;; *************** function _ADC_Read *****************
  5086 ;; Defined at:
  5087 ;;		line 339 in file "main.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  canale          1    wreg     unsigned char 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  canale          1    7[BANK0 ] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  2    4[BANK0 ] int 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5101 ;;      Params:         0       2       0       0       0
  5102 ;;      Locals:         0       1       0       0       0
  5103 ;;      Temps:          0       1       0       0       0
  5104 ;;      Totals:         0       4       0       0       0
  5105 ;;Total ram usage:        4 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    3
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_main
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           
  5116                           ;psect for function _ADC_Read
  5117  0C46                     _ADC_Read:	
  5118                           
  5119                           ;incstack = 0
  5120                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5121                           ;ADC_Read@canale stored from wreg
  5122  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  5123  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  5124  0C48  00A7               	movwf	ADC_Read@canale
  5125  0C49                     l2946:	
  5126                           
  5127                           ;main.c: 339: int ADC_Read(char canale);main.c: 340: {;main.c: 341:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5128  0C49  0827               	movf	ADC_Read@canale,w
  5129  0C4A  00A6               	movwf	??_ADC_Read
  5130  0C4B  3002               	movlw	2
  5131  0C4C                     u2655:	
  5132  0C4C  1003               	clrc
  5133  0C4D  0DA6               	rlf	??_ADC_Read,f
  5134  0C4E  3EFF               	addlw	-1
  5135  0C4F  1D03               	skipz
  5136  0C50  2C4C               	goto	u2655
  5137  0C51  1003               	clrc
  5138  0C52  0D26               	rlf	??_ADC_Read,w
  5139  0C53  3801               	iorlw	1
  5140  0C54  009F               	movwf	31	;volatile
  5141  0C55                     l2948:	
  5142                           
  5143                           ;main.c: 342:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5144  0C55  3004               	movlw	4
  5145  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  5146  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  5147  0C58  00A6               	movwf	??_ADC_Read
  5148  0C59                     u2937:	
  5149  0C59  0BA6               	decfsz	??_ADC_Read,f
  5150  0C5A  2C59               	goto	u2937
  5151  0C5B  0000               	nop
  5152  0C5C                     l2950:	
  5153                           
  5154                           ;main.c: 343:     GO_nDONE = 1;
  5155  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  5156  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  5157  0C5E  151F               	bsf	31,2	;volatile
  5158  0C5F                     l280:	
  5159                           ;main.c: 345:         ;
  5160                           
  5161                           
  5162                           ;main.c: 344:     while (GO_nDONE)
  5163  0C5F  191F               	btfsc	31,2	;volatile
  5164  0C60  2C62               	goto	u2661
  5165  0C61  2C63               	goto	u2660
  5166  0C62                     u2661:	
  5167  0C62  2C5F               	goto	l280
  5168  0C63                     u2660:	
  5169  0C63                     l2952:	
  5170                           
  5171                           ;main.c: 346:     return ADRESL + (ADRESH << 8);
  5172  0C63  081E               	movf	30,w	;volatile
  5173  0C64  00A5               	movwf	?_ADC_Read+1
  5174  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  5175  0C66  1303               	bcf	3,6	;RP1=0, select bank1
  5176  0C67  081E               	movf	30,w	;volatile
  5177  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  5179  0C6A  00A4               	movwf	?_ADC_Read
  5180  0C6B                     l283:	
  5181  0C6B  0008               	return
  5182  0C6C                     __end_of_ADC_Read:	
  5183                           
  5184                           	psect	text19
  5185  0DC5                     __ptext19:	
  5186 ;; *************** function _ISR *****************
  5187 ;; Defined at:
  5188 ;;		line 431 in file "main.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5202 ;;      Params:         0       0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0
  5204 ;;      Temps:          0       4       0       0       0
  5205 ;;      Totals:         0       4       0       0       0
  5206 ;;Total ram usage:        4 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    2
  5209 ;; This function calls:
  5210 ;;		_UART_Read
  5211 ;;		_conteggioVeicoli
  5212 ;; This function is called by:
  5213 ;;		Interrupt level 1
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           
  5218                           ;psect for function _ISR
  5219  0DC5                     _ISR:	
  5220  0DC5                     i1l2426:	
  5221                           
  5222                           ;main.c: 434:     if (RCIF && readGateway.Bit == 0)
  5223  0DC5  1E8C               	btfss	12,5	;volatile
  5224  0DC6  2DC8               	goto	u202_21
  5225  0DC7  2DC9               	goto	u202_20
  5226  0DC8                     u202_21:	
  5227  0DC8  2DD2               	goto	i1l2434
  5228  0DC9                     u202_20:	
  5229  0DC9                     i1l2428:	
  5230  0DC9  1854               	btfsc	_readGateway,0
  5231  0DCA  2DCC               	goto	u203_21
  5232  0DCB  2DCD               	goto	u203_20
  5233  0DCC                     u203_21:	
  5234  0DCC  2DD2               	goto	i1l2434
  5235  0DCD                     u203_20:	
  5236  0DCD                     i1l2430:	
  5237                           
  5238                           ;main.c: 435:     {;main.c: 436:         readGateway.Bit = 1;
  5239  0DCD  1454               	bsf	_readGateway,0
  5240                           
  5241                           ;main.c: 437:         readGatewayDone.Bit = 0;
  5242  0DCE  1055               	bcf	_readGatewayDone,0
  5243                           
  5244                           ;main.c: 438:         readGatewayDone.Timeout = 0;
  5245  0DCF  10D5               	bcf	_readGatewayDone,1
  5246  0DD0                     i1l2432:	
  5247                           
  5248                           ;main.c: 439:         dataFromGatewayIndex = 0;
  5249  0DD0  01CD               	clrf	_dataFromGatewayIndex
  5250                           
  5251                           ;main.c: 440:         timerReadFromGateway = 0;
  5252  0DD1  01CC               	clrf	_timerReadFromGateway
  5253  0DD2                     i1l2434:	
  5254                           
  5255                           ;main.c: 442:     if (RCIF && readGateway.Bit == 1)
  5256  0DD2  1E8C               	btfss	12,5	;volatile
  5257  0DD3  2DD5               	goto	u204_21
  5258  0DD4  2DD6               	goto	u204_20
  5259  0DD5                     u204_21:	
  5260  0DD5  2DED               	goto	i1l2444
  5261  0DD6                     u204_20:	
  5262  0DD6                     i1l2436:	
  5263  0DD6  1C54               	btfss	_readGateway,0
  5264  0DD7  2DD9               	goto	u205_21
  5265  0DD8  2DDA               	goto	u205_20
  5266  0DD9                     u205_21:	
  5267  0DD9  2DED               	goto	i1l2444
  5268  0DDA                     u205_20:	
  5269  0DDA                     i1l2438:	
  5270                           
  5271                           ;main.c: 443:     {;main.c: 444:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  5272  0DDA  120A  158A  23E7  120A  158A  	fcall	_UART_Read
  5273  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  5274  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  5275  0DE1  00A0               	movwf	??_ISR
  5276  0DE2  084D               	movf	_dataFromGatewayIndex,w
  5277  0DE3  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  5278  0DE4  0084               	movwf	4
  5279  0DE5  0820               	movf	??_ISR,w
  5280  0DE6  1383               	bcf	3,7	;select IRP bank1
  5281  0DE7  0080               	movwf	0
  5282  0DE8                     i1l2440:	
  5283                           
  5284                           ;main.c: 445:         dataFromGatewayIndex++;
  5285  0DE8  3001               	movlw	1
  5286  0DE9  00A0               	movwf	??_ISR
  5287  0DEA  0820               	movf	??_ISR,w
  5288  0DEB  07CD               	addwf	_dataFromGatewayIndex,f
  5289  0DEC                     i1l2442:	
  5290                           
  5291                           ;main.c: 446:         timerReadFromGateway = 0;
  5292  0DEC  01CC               	clrf	_timerReadFromGateway
  5293  0DED                     i1l2444:	
  5294                           
  5295                           ;main.c: 451:     if (TMR0IF)
  5296  0DED  1D0B               	btfss	11,2	;volatile
  5297  0DEE  2DF0               	goto	u206_21
  5298  0DEF  2DF1               	goto	u206_20
  5299  0DF0                     u206_21:	
  5300  0DF0  2DFB               	goto	i1l2452
  5301  0DF1                     u206_20:	
  5302  0DF1                     i1l2446:	
  5303                           
  5304                           ;main.c: 452:     {;main.c: 453:         TMR0IF = 0;
  5305  0DF1  110B               	bcf	11,2	;volatile
  5306  0DF2                     i1l2448:	
  5307                           
  5308                           ;main.c: 454:         conteggioVeicoli();
  5309  0DF2  120A  158A  2678  120A  158A  	fcall	_conteggioVeicoli
  5310  0DF7                     i1l2450:	
  5311                           
  5312                           ;main.c: 455:         TMR0 = 6;
  5313  0DF7  3006               	movlw	6
  5314  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  5315  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  5316  0DFA  0081               	movwf	1	;volatile
  5317  0DFB                     i1l2452:	
  5318                           
  5319                           ;main.c: 458:     if (TMR1IF)
  5320  0DFB  1C0C               	btfss	12,0	;volatile
  5321  0DFC  2DFE               	goto	u207_21
  5322  0DFD  2DFF               	goto	u207_20
  5323  0DFE                     u207_21:	
  5324  0DFE  2E14               	goto	i1l330
  5325  0DFF                     u207_20:	
  5326  0DFF                     i1l2454:	
  5327                           
  5328                           ;main.c: 459:     {;main.c: 460:         TMR1IF = 0;
  5329  0DFF  100C               	bcf	12,0	;volatile
  5330  0E00                     i1l2456:	
  5331                           
  5332                           ;main.c: 461:         count_lux++;
  5333  0E00  3001               	movlw	1
  5334  0E01  00A0               	movwf	??_ISR
  5335  0E02  0820               	movf	??_ISR,w
  5336  0E03  07D0               	addwf	_count_lux,f
  5337  0E04                     i1l2458:	
  5338                           
  5339                           ;main.c: 463:         if (count_lux >= 20)
  5340  0E04  3014               	movlw	20
  5341  0E05  0250               	subwf	_count_lux,w
  5342  0E06  1C03               	skipc
  5343  0E07  2E09               	goto	u208_21
  5344  0E08  2E0A               	goto	u208_20
  5345  0E09                     u208_21:	
  5346  0E09  2E10               	goto	i1l2466
  5347  0E0A                     u208_20:	
  5348  0E0A                     i1l2460:	
  5349                           
  5350                           ;main.c: 464:         {;main.c: 465:             secondPassed.Bit = 1;
  5351  0E0A  1453               	bsf	_secondPassed,0
  5352  0E0B                     i1l2462:	
  5353                           
  5354                           ;main.c: 466:             count_lux = 0;
  5355  0E0B  01D0               	clrf	_count_lux
  5356  0E0C                     i1l2464:	
  5357                           
  5358                           ;main.c: 467:             timerReadFromGateway++;
  5359  0E0C  3001               	movlw	1
  5360  0E0D  00A0               	movwf	??_ISR
  5361  0E0E  0820               	movf	??_ISR,w
  5362  0E0F  07CC               	addwf	_timerReadFromGateway,f
  5363  0E10                     i1l2466:	
  5364                           
  5365                           ;main.c: 470:         TMR1H = 60;
  5366  0E10  303C               	movlw	60
  5367  0E11  008F               	movwf	15	;volatile
  5368  0E12                     i1l2468:	
  5369                           
  5370                           ;main.c: 471:         TMR1L = 176;
  5371  0E12  30B0               	movlw	176
  5372  0E13  008E               	movwf	14	;volatile
  5373  0E14                     i1l330:	
  5374  0E14  0823               	movf	??_ISR+3,w
  5375  0E15  008A               	movwf	10
  5376  0E16  0822               	movf	??_ISR+2,w
  5377  0E17  0084               	movwf	4
  5378  0E18  0E21               	swapf	(??_ISR+1)^0,w
  5379  0E19  0083               	movwf	3
  5380  0E1A  0EFE               	swapf	btemp,f
  5381  0E1B  0E7E               	swapf	btemp,w
  5382  0E1C  0009               	retfie
  5383  0E1D                     __end_of_ISR:	
  5384                           
  5385                           	psect	intentry
  5386  0004                     __pintentry:	
  5387                           ;incstack = 0
  5388                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5389                           
  5390  0004                     interrupt_function:	
  5391  007E                     saved_w	set	btemp
  5392  0004  00FE               	movwf	btemp
  5393  0005  0E03               	swapf	3,w
  5394  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5395  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5396  0008  00A1               	movwf	??_ISR+1
  5397  0009  0804               	movf	4,w
  5398  000A  00A2               	movwf	??_ISR+2
  5399  000B  080A               	movf	10,w
  5400  000C  00A3               	movwf	??_ISR+3
  5401  000D  120A  158A  2DC5   	ljmp	_ISR
  5402                           
  5403                           	psect	text20
  5404  0E78                     __ptext20:	
  5405 ;; *************** function _conteggioVeicoli *****************
  5406 ;; Defined at:
  5407 ;;		line 408 in file "main.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;		None
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  i               1   13[COMMON] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      void 
  5414 ;; Registers used:
  5415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5421 ;;      Params:         0       0       0       0       0
  5422 ;;      Locals:         1       0       0       0       0
  5423 ;;      Temps:          4       0       0       0       0
  5424 ;;      Totals:         5       0       0       0       0
  5425 ;;Total ram usage:        5 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    1
  5428 ;; This function calls:
  5429 ;;		_Conteggio
  5430 ;; This function is called by:
  5431 ;;		_ISR
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           
  5436                           ;psect for function _conteggioVeicoli
  5437  0E78                     _conteggioVeicoli:	
  5438  0E78                     i1l2188:	
  5439                           ;incstack = 0
  5440                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5441                           
  5442                           
  5443                           ;main.c: 410:     RoadsSensors[0]=PORTBbits.RB3;
  5444  0E78  3000               	movlw	0
  5445  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  5447  0E7B  1986               	btfsc	6,3	;volatile
  5448  0E7C  3001               	movlw	1
  5449  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  5450  0E7E  1303               	bcf	3,6	;RP1=0, select bank1
  5451  0E7F  00A0               	movwf	_RoadsSensors^(0+128)
  5452                           
  5453                           ;main.c: 411:     RoadsSensors[1]=PORTBbits.RB4;
  5454  0E80  3000               	movlw	0
  5455  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  5457  0E83  1A06               	btfsc	6,4	;volatile
  5458  0E84  3001               	movlw	1
  5459  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  5460  0E86  1303               	bcf	3,6	;RP1=0, select bank1
  5461  0E87  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  5462                           
  5463                           ;main.c: 412:     RoadsSensors[2]=PORTBbits.RB5;
  5464  0E88  3000               	movlw	0
  5465  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  5466  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  5467  0E8B  1A86               	btfsc	6,5	;volatile
  5468  0E8C  3001               	movlw	1
  5469  0E8D  1683               	bsf	3,5	;RP0=1, select bank1
  5470  0E8E  1303               	bcf	3,6	;RP1=0, select bank1
  5471  0E8F  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  5472                           
  5473                           ;main.c: 413:     RoadsSensors[3]=PORTAbits.RA5;
  5474  0E90  3000               	movlw	0
  5475  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  5476  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  5477  0E93  1A85               	btfsc	5,5	;volatile
  5478  0E94  3001               	movlw	1
  5479  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  5480  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  5481  0E97  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  5482  0E98                     i1l2190:	
  5483                           
  5484                           ;main.c: 415:     for(unsigned char i=0; i<4; i++)
  5485  0E98  01FD               	clrf	conteggioVeicoli@i
  5486  0E99                     i1l2194:	
  5487                           
  5488                           ;main.c: 416:     {;main.c: 417:         if (!RoadsSensors[i])
  5489  0E99  087D               	movf	conteggioVeicoli@i,w
  5490  0E9A  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5491  0E9B  0084               	movwf	4
  5492  0E9C  1383               	bcf	3,7	;select IRP bank1
  5493  0E9D  0800               	movf	0,w
  5494  0E9E  1D03               	btfss	3,2
  5495  0E9F  2EA1               	goto	u174_21
  5496  0EA0  2EA2               	goto	u174_20
  5497  0EA1                     u174_21:	
  5498  0EA1  2EAB               	goto	i1l2198
  5499  0EA2                     u174_20:	
  5500  0EA2                     i1l2196:	
  5501                           
  5502                           ;main.c: 418:         {;main.c: 419:             count++;
  5503  0EA2  3001               	movlw	1
  5504  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  5505  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  5506  0EA5  07CA               	addwf	_count,f
  5507  0EA6  1803               	skipnc
  5508  0EA7  0ACB               	incf	_count+1,f
  5509  0EA8  3000               	movlw	0
  5510  0EA9  07CB               	addwf	_count+1,f
  5511                           
  5512                           ;main.c: 420:         }
  5513  0EAA  2ED2               	goto	i1l2204
  5514  0EAB                     i1l2198:	
  5515  0EAB  087D               	movf	conteggioVeicoli@i,w
  5516  0EAC  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5517  0EAD  0084               	movwf	4
  5518  0EAE  0800               	movf	0,w
  5519  0EAF  1903               	btfsc	3,2
  5520  0EB0  2EB2               	goto	u175_21
  5521  0EB1  2EB3               	goto	u175_20
  5522  0EB2                     u175_21:	
  5523  0EB2  2ED2               	goto	i1l2204
  5524  0EB3                     u175_20:	
  5525  0EB3                     i1l2200:	
  5526                           
  5527                           ;main.c: 422:         {;main.c: 423:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  5528  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  5529  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  5530  0EB5  084B               	movf	_count+1,w
  5531  0EB6  00F1               	movwf	Conteggio@_count+1
  5532  0EB7  084A               	movf	_count,w
  5533  0EB8  00F0               	movwf	Conteggio@_count
  5534  0EB9  305E               	movlw	(low (_motorcycle| 0))& (0+255)
  5535  0EBA  00F9               	movwf	??_conteggioVeicoli
  5536  0EBB  0879               	movf	??_conteggioVeicoli,w
  5537  0EBC  00F2               	movwf	Conteggio@_motorcycle
  5538  0EBD  305A               	movlw	(low (_car| 0))& (0+255)
  5539  0EBE  00FA               	movwf	??_conteggioVeicoli+1
  5540  0EBF  087A               	movf	??_conteggioVeicoli+1,w
  5541  0EC0  00F3               	movwf	Conteggio@_car
  5542  0EC1  3056               	movlw	(low (_truck| 0))& (0+255)
  5543  0EC2  00FB               	movwf	??_conteggioVeicoli+2
  5544  0EC3  087B               	movf	??_conteggioVeicoli+2,w
  5545  0EC4  00F4               	movwf	Conteggio@_truck
  5546  0EC5  087D               	movf	conteggioVeicoli@i,w
  5547  0EC6  00FC               	movwf	??_conteggioVeicoli+3
  5548  0EC7  087C               	movf	??_conteggioVeicoli+3,w
  5549  0EC8  00F5               	movwf	Conteggio@index
  5550  0EC9  120A  158A  2579  120A  158A  	fcall	_Conteggio
  5551  0ECE                     i1l2202:	
  5552                           
  5553                           ;main.c: 424:             count = 0;
  5554  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  5555  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  5556  0ED0  01CA               	clrf	_count
  5557  0ED1  01CB               	clrf	_count+1
  5558  0ED2                     i1l2204:	
  5559                           
  5560                           ;main.c: 426:     }
  5561  0ED2  3001               	movlw	1
  5562  0ED3  00F9               	movwf	??_conteggioVeicoli
  5563  0ED4  0879               	movf	??_conteggioVeicoli,w
  5564  0ED5  07FD               	addwf	conteggioVeicoli@i,f
  5565  0ED6                     i1l2206:	
  5566  0ED6  3004               	movlw	4
  5567  0ED7  027D               	subwf	conteggioVeicoli@i,w
  5568  0ED8  1C03               	skipc
  5569  0ED9  2EDB               	goto	u176_21
  5570  0EDA  2EDC               	goto	u176_20
  5571  0EDB                     u176_21:	
  5572  0EDB  2E99               	goto	i1l2194
  5573  0EDC                     u176_20:	
  5574  0EDC                     i1l320:	
  5575  0EDC  0008               	return
  5576  0EDD                     __end_of_conteggioVeicoli:	
  5577                           
  5578                           	psect	text21
  5579  0D79                     __ptext21:	
  5580 ;; *************** function _Conteggio *****************
  5581 ;; Defined at:
  5582 ;;		line 78 in file "./CustomLib/TrafficLight.h"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  _count          2    0[COMMON] unsigned int 
  5585 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5586 ;;		 -> motorcycle(4), 
  5587 ;;  _car            1    3[COMMON] PTR unsigned char 
  5588 ;;		 -> car(4), 
  5589 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5590 ;;		 -> truck(4), 
  5591 ;;  index           1    5[COMMON] unsigned char 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5603 ;;      Params:         6       0       0       0       0
  5604 ;;      Locals:         0       0       0       0       0
  5605 ;;      Temps:          3       0       0       0       0
  5606 ;;      Totals:         9       0       0       0       0
  5607 ;;Total ram usage:        9 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_conteggioVeicoli
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           
  5617                           ;psect for function _Conteggio
  5618  0D79                     _Conteggio:	
  5619  0D79                     i1l1872:	
  5620                           ;incstack = 0
  5621                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5622                           
  5623                           
  5624                           ;./CustomLib/TrafficLight.h: 78: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 79: {;./CustomLib/TrafficLight.h: 80:         if (_count >= 500)
  5625  0D79  3001               	movlw	1
  5626  0D7A  0271               	subwf	Conteggio@_count+1,w
  5627  0D7B  30F4               	movlw	244
  5628  0D7C  1903               	skipnz
  5629  0D7D  0270               	subwf	Conteggio@_count,w
  5630  0D7E  1C03               	skipc
  5631  0D7F  2D81               	goto	u123_21
  5632  0D80  2D82               	goto	u123_20
  5633  0D81                     u123_21:	
  5634  0D81  2D92               	goto	i1l1876
  5635  0D82                     u123_20:	
  5636  0D82                     i1l1874:	
  5637                           
  5638                           ;./CustomLib/TrafficLight.h: 81:         {;./CustomLib/TrafficLight.h: 82:             _
      +                          motorcycle[index]=_motorcycle[index]+1;
  5639  0D82  0875               	movf	Conteggio@index,w
  5640  0D83  0772               	addwf	Conteggio@_motorcycle,w
  5641  0D84  00F6               	movwf	??_Conteggio
  5642  0D85  0876               	movf	??_Conteggio,w
  5643  0D86  0084               	movwf	4
  5644  0D87  1383               	bcf	3,7	;select IRP bank0
  5645  0D88  0800               	movf	0,w
  5646  0D89  3E01               	addlw	1
  5647  0D8A  00F7               	movwf	??_Conteggio+1
  5648  0D8B  0875               	movf	Conteggio@index,w
  5649  0D8C  0772               	addwf	Conteggio@_motorcycle,w
  5650  0D8D  00F8               	movwf	??_Conteggio+2
  5651  0D8E  0878               	movf	??_Conteggio+2,w
  5652  0D8F  0084               	movwf	4
  5653  0D90  0877               	movf	??_Conteggio+1,w
  5654  0D91  0080               	movwf	0
  5655  0D92                     i1l1876:	
  5656                           
  5657                           ;./CustomLib/TrafficLight.h: 84:         if (_count >= 1500)
  5658  0D92  3005               	movlw	5
  5659  0D93  0271               	subwf	Conteggio@_count+1,w
  5660  0D94  30DC               	movlw	220
  5661  0D95  1903               	skipnz
  5662  0D96  0270               	subwf	Conteggio@_count,w
  5663  0D97  1C03               	skipc
  5664  0D98  2D9A               	goto	u124_21
  5665  0D99  2D9B               	goto	u124_20
  5666  0D9A                     u124_21:	
  5667  0D9A  2DAB               	goto	i1l1880
  5668  0D9B                     u124_20:	
  5669  0D9B                     i1l1878:	
  5670                           
  5671                           ;./CustomLib/TrafficLight.h: 85:         {;./CustomLib/TrafficLight.h: 86:             _
      +                          car[index]=_car[index]+1;
  5672  0D9B  0875               	movf	Conteggio@index,w
  5673  0D9C  0773               	addwf	Conteggio@_car,w
  5674  0D9D  00F6               	movwf	??_Conteggio
  5675  0D9E  0876               	movf	??_Conteggio,w
  5676  0D9F  0084               	movwf	4
  5677  0DA0  1383               	bcf	3,7	;select IRP bank0
  5678  0DA1  0800               	movf	0,w
  5679  0DA2  3E01               	addlw	1
  5680  0DA3  00F7               	movwf	??_Conteggio+1
  5681  0DA4  0875               	movf	Conteggio@index,w
  5682  0DA5  0773               	addwf	Conteggio@_car,w
  5683  0DA6  00F8               	movwf	??_Conteggio+2
  5684  0DA7  0878               	movf	??_Conteggio+2,w
  5685  0DA8  0084               	movwf	4
  5686  0DA9  0877               	movf	??_Conteggio+1,w
  5687  0DAA  0080               	movwf	0
  5688  0DAB                     i1l1880:	
  5689                           
  5690                           ;./CustomLib/TrafficLight.h: 88:         if (_count >= 3000)
  5691  0DAB  300B               	movlw	11
  5692  0DAC  0271               	subwf	Conteggio@_count+1,w
  5693  0DAD  30B8               	movlw	184
  5694  0DAE  1903               	skipnz
  5695  0DAF  0270               	subwf	Conteggio@_count,w
  5696  0DB0  1C03               	skipc
  5697  0DB1  2DB3               	goto	u125_21
  5698  0DB2  2DB4               	goto	u125_20
  5699  0DB3                     u125_21:	
  5700  0DB3  2DC4               	goto	i1l165
  5701  0DB4                     u125_20:	
  5702  0DB4                     i1l1882:	
  5703                           
  5704                           ;./CustomLib/TrafficLight.h: 89:         {;./CustomLib/TrafficLight.h: 90:             _
      +                          truck[index]=_truck[index]+1;
  5705  0DB4  0875               	movf	Conteggio@index,w
  5706  0DB5  0774               	addwf	Conteggio@_truck,w
  5707  0DB6  00F6               	movwf	??_Conteggio
  5708  0DB7  0876               	movf	??_Conteggio,w
  5709  0DB8  0084               	movwf	4
  5710  0DB9  1383               	bcf	3,7	;select IRP bank0
  5711  0DBA  0800               	movf	0,w
  5712  0DBB  3E01               	addlw	1
  5713  0DBC  00F7               	movwf	??_Conteggio+1
  5714  0DBD  0875               	movf	Conteggio@index,w
  5715  0DBE  0774               	addwf	Conteggio@_truck,w
  5716  0DBF  00F8               	movwf	??_Conteggio+2
  5717  0DC0  0878               	movf	??_Conteggio+2,w
  5718  0DC1  0084               	movwf	4
  5719  0DC2  0877               	movf	??_Conteggio+1,w
  5720  0DC3  0080               	movwf	0
  5721  0DC4                     i1l165:	
  5722  0DC4  0008               	return
  5723  0DC5                     __end_of_Conteggio:	
  5724                           
  5725                           	psect	text22
  5726  0BE7                     __ptext22:	
  5727 ;; *************** function _UART_Read *****************
  5728 ;; Defined at:
  5729 ;;		line 378 in file "main.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      unsigned char 
  5736 ;; Registers used:
  5737 ;;		wreg
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5743 ;;      Params:         0       0       0       0       0
  5744 ;;      Locals:         0       0       0       0       0
  5745 ;;      Temps:          0       0       0       0       0
  5746 ;;      Totals:         0       0       0       0       0
  5747 ;;Total ram usage:        0 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_ISR
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _UART_Read
  5758  0BE7                     _UART_Read:	
  5759  0BE7                     i1l2182:	
  5760                           ;incstack = 0
  5761                           ; Regs used in _UART_Read: [wreg]
  5762                           
  5763  0BE7                     i1l301:	
  5764                           ;main.c: 381:         ;
  5765                           
  5766                           
  5767                           ;main.c: 380:     while (!RCIF)
  5768  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  5769  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  5770  0BE9  1E8C               	btfss	12,5	;volatile
  5771  0BEA  2BEC               	goto	u173_21
  5772  0BEB  2BED               	goto	u173_20
  5773  0BEC                     u173_21:	
  5774  0BEC  2BE7               	goto	i1l301
  5775  0BED                     u173_20:	
  5776  0BED                     i1l303:	
  5777                           
  5778                           ;main.c: 382:     RCIF = 0;
  5779  0BED  128C               	bcf	12,5	;volatile
  5780  0BEE                     i1l2184:	
  5781                           
  5782                           ;main.c: 383:     return RCREG;
  5783  0BEE  081A               	movf	26,w	;volatile
  5784  0BEF                     i1l304:	
  5785  0BEF  0008               	return
  5786  0BF0                     __end_of_UART_Read:	
  5787  007E                     btemp	set	126	;btemp
  5788  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        16
    BSS         158
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      69
    BANK1            80      0      77
    BANK3            96     13      83
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[8] size(2) Largest target is 14
		 -> s7(BANK3[14]), s6(BANK3[14]), s5(BANK3[14]), s4(BANK3[14]), 
		 -> s3(BANK3[14]), s2(BANK1[14]), s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK0[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   19268
                                             32 BANK0     10    10      0
                                              0 BANK3     13    13      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                         _SetDisplay
                   _SetReceivedTimes
                          _UART_Init
                        _UpdateTimes
                            ___awmod
                           _init_ADC
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    4408
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1316
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         19    19      0     482
                                              4 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    15    14      1    1551
                                             12 BANK0     15    14      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     496
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDisplay                                           4     1      3     934
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7     899
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    3449
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1333
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _SetDefaultTimers
   _SetDisplay
   _SetReceivedTimes
     _GetTime
     ___bmul
   _UART_Init
     ___aldiv
   _UpdateTimes
   ___awmod
   _init_ADC
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D      53       9       86.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      45       5       86.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      F3      12        0.0%
ABS                  0      0      F3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jul 03 14:43:01 2020

                               pc 0002                    ___bmul@product 0026                       __CFG_CP$OFF 0000  
                              l77 0CF8                                l94 06E8                      ___awdiv@sign 0031  
                              _s0 00CF                                _s1 00C1                                _s2 00B3  
                              _s3 01C8                                _s4 01BA                                _s5 01AC  
                              _s6 019E                                _s7 0190                                fsr 0004  
             ___wmul@multiplicand 0026                    _GetDigits$1175 0039                       __CFG_LVP$ON 0000  
                             l125 0587                               l142 0D78                               l119 0536  
                             l312 0C45                               l128 05AF                               l154 0F6C  
                             l139 0FFF                               l243 0213                               l227 031C  
                             l309 0CC3                               l229 0089                               l270 04DB  
                             l159 077E                               l280 0C5F                               l416 0C7A  
                             l442 07FE                               l418 0C92                               l283 0C6B  
                             l291 0BF7                               l292 0BFA                               l277 0C1D  
                             l286 0D32                               l481 05C4                               l289 0BF3  
                             l491 064C                               l582 0E77                               l569 07E7  
                    __CFG_CPD$OFF 0000                               _ISR 0DC5                               _car 005A  
                             _map 0CC4                               fsr0 0004                               indf 0000  
                    ___awmod@sign 002A                      __CFG_FOSC$HS 0000                              ?_ISR 0070  
                            l3000 008B                              l3010 011E                              l3100 0367  
                            l3020 01C9                              l3012 0165                              l3110 03DA  
                            l3102 0370                              l3030 01E9                              l3022 01D6  
                            l3006 0090                              l3112 03DB                              l3104 03CA  
                            l3040 01FF                              l3032 01EF                              l3008 00D7  
                            l3016 01AC                              l3130 0475                              l3114 03E1  
                            l3106 03D0                              l3122 0450                              l3050 02BA  
                            l3042 0204                              l3034 01FC                              l3018 01C1  
                            l3132 047A                              l3140 04B9                              l3124 0457  
                            l3108 03D4                              l3116 03E7                              l3060 02E6  
                            l3052 02CB                              l3044 020C                              l3028 01DA  
                            l3150 04E3                              l3142 04D1                              l3134 048F  
                            l3126 045C                              l3118 040B                              l3070 02FD  
                            l3062 02EB                              l3054 02DC                              l3046 0215  
                            l2600 050F                              l3144 04D5                              l3128 0470  
                            l3080 0323                              l3072 0303                              l3056 02DF  
                            l3048 02A9                              l2602 0523                              l3146 04D9  
                            l3138 04A4                              l3082 0324                              l3090 0336  
                            l3066 02F4                              l2700 05C8                              l2612 0545  
                            l2604 0529                              l3148 04DF                              l3092 033C  
                            l3084 0326                              l3068 02FA                              l3076 0307  
                            l2710 05EA                              l2702 05D3                              l2630 0574  
                            l2622 055C                              l2614 054B                              l2606 053C  
                            l3094 0340                              l3086 032A                              l3078 0322  
                            l2800 0E4C                              l2720 0624                              l2712 05F7  
                            l2704 05D7                              l2640 059B                              l2632 057A  
                            l2616 0558                              l2608 0544                              l3096 0348  
                            l3088 032C                              l2810 0E6E                              l2802 0E56  
                            l2650 0D45                              l2730 0644                              l2722 0625  
                            l2714 05FB                              l2706 05DF                              l2642 05A1  
                            l2634 058D                              l3098 034A                              l3290 0314  
                            l2740 078B                              l2812 0E73                              l2804 0E5C  
                            l2820 0650                              l2652 0D4D                              l2900 0711  
                            l2724 062E                              l2716 0604                              l2708 05E7  
                            l2644 05AE                              l2636 059A                              l2628 0560  
                            l2580 04EB                              l3292 04AE                              l2750 079C  
                            l2742 078D                              l2734 077F                              l2806 0E63  
                            l2830 06D2                              l2822 0651                              l3294 0F4D  
                            l2654 0D5E                              l2902 0724                              l2718 0616  
                            l2726 0634                              l2670 0C74                              l2582 04FA  
                            l2662 0BF3                              l2760 07B4                              l2752 07A2  
                            l2744 0791                              l2736 0782                              l2808 0E69  
                            l2824 0666                              l2656 0D6C                              l2648 0D36  
                            l2680 07EB                              l2904 072E                              l2728 0639  
                            l2920 0CF9                              l2832 0F70                              l2912 0C0B  
                            l2672 0C81                              l2816 0CC4                              l2584 0507  
                            l2664 0BF8                              l3288 01B3                              l2762 07C5  
                            l2754 07A5                              l2770 07D9                              l2746 0796  
                            l2738 0786                              l2826 0682                              l2658 0D74  
                            l2690 07FD                              l2682 07EC                              l2906 075B  
                            l2922 0D01                              l2850 0FBD                              l2914 0C0F  
                            l2674 0C88                              l2666 0C6C                              l2594 050B  
                            l2586 0508                              l2930 0C96                              l2772 07DE  
                            l2764 07CB                              l2756 07AC                              l2748 079A  
                            l2780 0E20                              l2828 06BF                              l2684 07F0  
                            l2908 0779                              l2924 0D2F                              l2852 0FF5  
                            l2844 0F72                              l2916 0C12                              l2676 0C8E  
                            l2668 0C70                              l2588 0509                              l2940 0CB3  
                            l2932 0CA9                              l2950 0C5C                              l2774 07E3  
                            l2766 07CC                              l2758 07B0                              l2790 0E34  
                            l2782 0E24                              l2870 0F03                              l2862 0EE0  
                            l2686 07F4                              l2694 05B0                              l2926 0D30  
                            l2854 0FF9                              l2846 0FB3                              l2838 0F71  
                            l2918 0C16                              l2942 0CB9                              ?_map 0034  
                            l2952 0C63                              l2768 07D3                              l2792 0E3A  
                            l2784 0E29                              l2880 0F5C                              l2872 0F24  
                            l2856 0EDD                              l2688 07F6                              l2696 05B3  
                            l2928 0D31                              l2848 0FB7                              l2944 0CBD  
                            l2946 0C49                              l2794 0E3D                              l2786 0E2B  
                            l2778 0E1D                              l2882 0F62                              l2890 06EC  
                            l2698 05B7                              l2938 0CAA                              l2948 0C55  
                            l2796 0E44                              l2788 0E2F                              l2884 0F66  
                            l2868 0EE2                              l2876 0F45                              l2956 0C34  
                            l2892 06ED                              l2980 004A                              l2972 003F  
                            l2798 0E48                              l2878 0F58                              l2958 0C43  
                            l2990 005B                              l2982 004C                              l2974 0045  
                            l2896 06F4                              l2992 0060                              l2984 0050  
                            l2976 0046                              l2898 0703                              l2994 006B  
                            l2986 0052                              l2978 0048                              l2996 0082  
                            l2988 0054                              u2110 0536                              u2111 0535  
                            u2120 053C                              u2104 051B                              u2200 0BF7  
                            u2121 053B                              u2105 0519                              u2201 0BF6  
                            u2210 0C74                              u2130 0558                              u2211 0C73  
                            u2131 0557                              u2115 0532                              u2310 05FB  
                            u2150 0587                              u2311 05FA                              u2151 0586  
                            u2135 0554                              u2240 0C8E                              u2160 058D  
                            u2144 056C                              u2305 05EC                              u2241 0C8D  
                            u2225 0C7B                              u2161 058C                              u2145 056A  
                            u2410 07B4                              u2250 07F0                              u2330 0616  
                            u2411 07B3                              u2251 07EF                              u2331 0615  
                            u2235 0C82                              u2155 0583                              u2260 07FD  
                            u2180 05AE                              u2405 07A6                              u2261 07FC  
                            u2325 05FD                              u2181 05AD                              u2430 07C5  
                            u2510 0E4C                              u2350 0634                              u2270 05B7  
                            u2174 0593                              u2431 07C4                              u2511 0E4B  
                            u2351 0633                              u2335 0612                              u2271 05B6  
                            u2175 0591                              u2095 04FD                              u2520 0E56  
                            u2600 0F6C                              u2360 0639                              u2280 05C8  
                            u2425 07B5                              u2521 0E55                              u2505 0E3E  
                            u2601 0F6B                              u2361 0638                              u2345 0626  
                            u2281 05C7                              u2185 05AA                              u2450 07D9  
                            u2370 0786                              u2610 06F3                              u2290 05E7  
                            u2451 07D8                              u2435 07C1                              u2371 0785  
                            u2195 0D53                              u2611 06F2                              u2291 05E6  
                            u2460 07DE                              u2380 0791                              u2540 0E69  
                            u2700 01FC                              u2461 07DD                              u2445 07CD  
                            u2381 0790                              u2541 0E68                              u2525 0E52  
                            u2701 01FB                              u2390 07A2                              u2550 0E6E  
                            u2470 0E24                              u2630 0D10                              u2710 0212  
                            u2391 07A1                              u2551 0E6D                              u2535 0E5D  
                            u2471 0E23                              u2711 0211                              u2480 0E2F  
                            u2560 0682                              u2640 0CC3                              u2800 03CA  
                            u2720 02E5                              u2481 0E2E                              u2561 0681  
                            u2625 0719                              u2641 0CC2                              u2801 03C9  
                            u2721 02E4                              u2705 01F8                              u2490 0E3A  
                            u2570 0FBD                              u2810 03DA                              u2730 02FA  
                            u2491 0E39                              u2635 0D0B                              u2571 0FBC  
                            u2811 03D9                              u2731 02F9                              u2660 0C63  
                            u2580 0FFF                              u2900 04E3                              u2820 03E1  
                            u2740 0303                              u2661 0C62                              u2565 067E  
                            u2581 0FFE                              u2901 04E2                              u2821 03E0  
                            u2741 0302                              u2590 0F62                              u2830 0456  
                            u2750 0322                              u2655 0C4C                              u2591 0F61  
                            u2831 0455                              u2751 0321                              u2840 045C  
                            u2760 032A                              u2680 0088                              u2841 045B  
                            u2761 0329                              u2681 0087                              u2850 0475  
                            u2770 033C                              u2690 01D6                              u2851 0474  
                            u2771 033B                              u2691 01D5                              u2860 047A  
                            u2780 0340                              u2861 0479                              u2781 033F  
                            u2870 04D5                              u2790 0367                              u2927 0C1A  
                            u2871 04D4                              u2791 0366                              u2695 01D2  
                            u2880 04D9                              u2937 0C59                              u2881 04D8  
                            u2890 04DF                              u2891 04DE                              _RCIF 0065  
                            _TMR0 0001                              _TXIF 0064                      __CFG_WRT$OFF 0000  
                            _disp 0051                              _main 003F                              _time 004E  
                            map@x 0034                              btemp 007E                  __end_of_ADC_Read 0C6C  
                   __CFG_BOREN$ON 0000                       main@umidita 01D7                              start 0010  
                 __end_of_GetTime 0D79                 ___bmul@multiplier 0027                             ??_ISR 0020  
       __size_of_conteggioVeicoli 0065                             ??_map 003E                   __end_of___aldiv 064D  
                           ?_main 0070                   __end_of___awdiv 07E8                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 0E78                   ___awdiv@divisor 002B                             _T1CON 0010  
                           i1l301 0BE7                             i1l303 0BED                             i1l304 0BEF  
                           i1l320 0EDC                             i1l330 0E14                             i1l165 0DC4  
                 ___awdiv@counter 0030                             _RCREG 001A              UpdateTimes@_semafori 0034  
                           _TMR1H 000F                             _TMR1L 000E                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _TRISE 0089  
                           _TXREG 0019                     __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A  
              __size_of_UART_Read 0009                   __end_of_display 0811                             _count 004A  
                           _unita 0064                             main@i 01E1                             _truck 0056  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 0013                      __end_of_main 04E8         __size_of_SetReceivedTimes 0096  
              __size_of_GetDigits 009C                            ??_main 0040                 SetDefaultTimers@i 0033  
               SetDefaultTimers@l 0032                __size_of_BuildByte 00C8                        _SetDisplay 0C31  
                          _ADCON0 001F                            _ADCON1 009F                __size_of_Conteggio 004C  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 002D  
                          i1l2200 0EB3                            i1l2202 0ECE                            i1l2204 0ED2  
                          i1l2206 0ED6                            i1l2182 0BE7                            i1l2190 0E98  
                          i1l2430 0DCD                            i1l2184 0BEE                            i1l2440 0DE8  
                          i1l2432 0DD0                            i1l2194 0E99                            i1l2450 0DF7  
                          i1l2442 0DEC                            i1l2434 0DD2                            i1l2426 0DC5  
                          i1l2196 0EA2                            i1l2188 0E78                            i1l2460 0E0A  
                          i1l2452 0DFB                            i1l2436 0DD6                            i1l2444 0DED  
                          i1l2428 0DC9                            i1l2198 0EAB                            i1l2462 0E0B  
                          i1l2454 0DFF                            i1l2446 0DF1                            i1l2438 0DDA  
                          i1l2464 0E0C                            i1l2456 0E00                            i1l2448 0DF2  
                          u202_20 0DC9                            u202_21 0DC8                            i1l2466 0E10  
                          i1l2458 0E04                            i1l2468 0E12                            i1l1880 0DAB  
                          u123_20 0D82                            i1l1872 0D79                            u203_20 0DCD  
                          u123_21 0D81                            u203_21 0DCC                            i1l1882 0DB4  
                          i1l1874 0D82                            i1l1876 0D92                            i1l1878 0D9B  
                          u124_20 0D9B                            u204_20 0DD6                            u124_21 0D9A  
                          u204_21 0DD5                            u125_20 0DB4                            u205_20 0DDA  
                          u125_21 0DB3                            u205_21 0DD9                            u206_20 0DF1  
                          u206_21 0DF0                            u207_20 0DFF                            u207_21 0DFE  
                          u208_20 0E0A                            u208_21 0E09                            _INTCON 000B  
                          u173_20 0BED                            u173_21 0BEC                            u174_20 0EA2  
                          u174_21 0EA1                            u175_20 0EB3                            u175_21 0EB2  
                          u176_20 0EDC                            u176_21 0EDB                            _TMR0IF 005A  
                          _TMR1IF 0060                         ??_GetTime 0026                      ?_UART_TxChar 0070  
               __end_of_UART_Init 0D33                 __end_of_UART_Read 0BF0                            ___bmul 07E8  
                       ??___aldiv 002C                   GetTime@shortInt 0029                            ___wmul 0C6C  
                       ??___awdiv 002F                            _decine 0063                         ??___awmod 0028  
                __end_of_init_ADC 0C1E                            _cycled 0052                  ___awdiv@quotient 0032  
                 ___awmod@divisor 0024                   ___awmod@counter 0029                  __end_of_sendByte 0CC4  
                 GetDigits@decine 0034                     main@pressione 01D8                         ?_ADC_Read 0024  
                          saved_w 007E           __end_of__initialization 003B                 __end_of_GetDigits 06E9  
                   ??_UpdateTimes 0024         __size_of_SetDefaultTimers 0090               ___bmul@multiplicand 0024  
                  __pcstackCOMMON 0070                 __end_of_BuildByte 05B0                      __pidataBANK1 0BFB  
                _conteggioVeicoli 0E78                 __end_of_Conteggio 0DC5                        ??_ADC_Read 0026  
          SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024  
                   GetDigits@Time 0036              _dataFromGatewayIndex 004D              _timerReadFromGateway 004C  
                      __pbssBANK0 004A                        __pbssBANK1 00A0                        __pbssBANK3 0190  
                      __pmaintext 003F                           ?___bmul 0024                           ?___wmul 0024  
             __end_of_UpdateTimes 1000                     sendByte@byte0 003D                     sendByte@byte1 0038  
                      __pintentry 0004                  _SetReceivedTimes 06E9                        __stringtab 0800  
                       ?_init_ADC 0070                           _GetTime 0D33                   BuildByte@valore 0025  
                 BuildByte@txByte 0029           GetTime@_dataFromGateway 0024                         ?_sendByte 0038  
                      _n_semafori 0811              __size_of_UART_TxChar 000B                           ___aldiv 05B0  
                 __size_of___bmul 0017                           ___awdiv 077F                           ___awmod 0E1D  
             __size_of_SetDisplay 0015                   __size_of___wmul 0027                 conteggioVeicoli@i 007D  
                         __ptext1 0C93                           __ptext2 0BF0                           __ptext3 04E8  
                         __ptext4 0CC4                           __ptext5 0C6C                           __ptext6 0C0B  
                         __ptext7 0F6D                           __ptext8 0CF9                           __ptext9 05B0  
                         _comando 004F                           _display 0806                      __size_of_ISR 0058  
                    __size_of_map 0035                  ___awmod@dividend 0026                  ___aldiv@dividend 0028  
            BuildByte@sommaColumn 002F                           clrloop0 0BE0              end_of_initialization 003B  
                      ??_init_ADC 0024                    main@lux_select 01DD                       _UpdateTimes 0F6D  
                      ??_sendByte 003A                  _SetDefaultTimers 0EDD                         _RCSTAbits 0018  
                ___aldiv@quotient 002F                        _motorcycle 005E                         _UART_Init 0CF9  
                       _UART_Read 0BE7             SetReceivedTimes@index 003A                         _PORTAbits 0005  
           SetReceivedTimes@luxId 0036                         _PORTBbits 0006                      SetDisplay@d1 0027  
                    SetDisplay@d2 0024                      SetDisplay@d3 0025                         _TRISCbits 0087  
               __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0EDD                        map@out_max 003C  
                      map@out_min 003A  SetReceivedTimes@_dataFromGateway 0039                         _TXSTAbits 0098  
                       _GetDigits 064D                    __end_of___bmul 07FF                    __end_of___wmul 0C93  
                      ?_UART_Init 0033                        ?_UART_Read 0070                         _BuildByte 04E8  
                       _Conteggio 0D79                 BuildByte@sommaRow 002E               start_initialization 0013  
                     __end_of_ISR 0E1D                      ??_SetDisplay 0027                       __end_of_map 0CF9  
        __end_of_SetReceivedTimes 077F                        ?_GetDigits 0034                          ??___bmul 0025  
                  ADC_Read@canale 0027                          ??___wmul 0028                        init_fetch0 0C1E  
                     __pdataBANK1 00DD                __end_of_SetDisplay 0C46                        ?_BuildByte 0024  
                  GetDigits@unita 0035                        ?_Conteggio 0070                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK3 01D6                          ?_GetTime 0024  
           SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013  
                       _centinaia 0062                 __size_of_sendByte 0031                          ?___aldiv 0024  
                        ?___awdiv 002B                          ?___awmod 0024                       ??_UART_Init 0035  
                     ??_UART_Read 0070                    BuildByte@i_332 0036                         __pstrings 0800  
                  BuildByte@y_333 0032                    sendByte@valore 0039                    sendByte@txByte 003E  
                  BuildByte@byte0 0028                    BuildByte@byte1 0024          __end_of_SetDefaultTimers 0F6D  
                        _ADC_Read 0C46                         _count_lux 0050                     UART_TxChar@ch 0024  
                 ___aldiv@divisor 0024                 SetReceivedTimes@i 0038                 interrupt_function 0004  
                 ___aldiv@counter 002D                    ___wmul@product 0028        SetReceivedTimes@semaforoId 0037  
                    ?_UpdateTimes 0070                         clear_ram0 0BDF                          _PIE1bits 008C  
                   ??_UART_TxChar 0024                       ??_GetDigits 0038                          _GO_nDONE 00FA  
               UART_Init@baudrate 0033                       ??_BuildByte 0026                         map@in_max 0038  
                       map@in_min 0036                       __stringbase 0805                         main@i_460 01DB  
                       main@i_462 01DC                         main@i_464 01E0                         main@i_459 01DE  
                     ??_Conteggio 0076                 ___wmul@multiplier 0024                      GetTime@index 0028  
                    _RoadsSensors 00A0                 ?_conteggioVeicoli 0070                      _secondPassed 0053  
              ??_conteggioVeicoli 0079                  __size_of_GetTime 0046                          _Semafori 00DD  
              GetDigits@centinaia 003B                       _readGateway 0054                  __size_of___aldiv 009D  
             __end_of_UART_TxChar 0BFB                  __size_of___awdiv 0069                  __size_of___awmod 005B  
              __end_of__stringtab 0806                         sendByte@i 003F                          __ptext10 06E9  
                        __ptext11 07E8                          __ptext20 0E78                          __ptext12 0D33  
                        __ptext21 0D79                          __ptext13 0C31                          __ptext22 0BE7  
                        __ptext14 0EDD                          __ptext15 064D                          __ptext16 0E1D  
                        __ptext17 077F                          __ptext18 0C46                          __ptext19 0DC5  
              __end_of_n_semafori 0812                          _init_ADC 0C0B                 ?_SetReceivedTimes 002C  
                   __size_of_main 04A9                   _dataFromGateway 00A4                          _sendByte 0C93  
              ??_SetReceivedTimes 002D                          main@temp 01D6                          main@time 01D9  
                      _INTCONbits 000B                          init_ram0 0C22              Conteggio@_motorcycle 0072  
                        intlevel1 0000                   _readGatewayDone 0055                         stringcode 0800  
                     _UART_TxChar 0BF0           SetReceivedTimes@colorId 0035              __size_of_UpdateTimes 0093  
                      GetTime@tmp 002A                        _OPTION_REG 0081                   SetDisplay@value 0026  
                        stringdir 0800                          stringtab 0800                      UpdateTimes@i 0035  
                    UpdateTimes@l 0036                 ?_SetDefaultTimers 0024                      ___aldiv@sign 002E  
              ??_SetDefaultTimers 002B                        BuildByte@i 0034                        BuildByte@y 0030  
       SetDefaultTimers@_semafori 002A                   Conteggio@_count 0070                     Conteggio@_car 0073  
                 Conteggio@_truck 0074                    Conteggio@index 0075  
