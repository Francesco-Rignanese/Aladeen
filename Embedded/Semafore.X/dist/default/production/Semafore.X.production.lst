

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jul 11 17:56:40 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	idataBANK0
   200  09D0                     __pidataBANK0:	
   201                           
   202                           ;initializer for _Semafori
   203  09D0  34D7               	retlw	low (_s0| 0)
   204  09D1  3400               	retlw	high (_s0| 0)
   205  09D2  34C9               	retlw	low (_s1| 0)
   206  09D3  3400               	retlw	high (_s1| 0)
   207  09D4  34BB               	retlw	low (_s2| 0)
   208  09D5  3400               	retlw	high (_s2| 0)
   209  09D6  3490               	retlw	low (_s3| (0+256))
   210  09D7  3401               	retlw	high (_s3| (0+256))
   211                           
   212                           	psect	strings
   213  07EE                     __pstrings:	
   214  07EE                     stringtab:	
   215  07EE                     __stringtab:	
   216  07EE                     stringcode:	
   217                           ;	String table - string pointers are 1 byte each
   218                           
   219  07EE                     stringdir:	
   220  07EE  3007               	movlw	high stringdir
   221  07EF  008A               	movwf	10
   222  07F0  0804               	movf	4,w
   223  07F1  0A84               	incf	4,f
   224  07F2  0782               	addwf	2,f
   225  07F3                     __stringbase:	
   226  07F3  3400               	retlw	0
   227  07F4                     __end_of__stringtab:	
   228  07F4                     _display:	
   229  07F4  343F               	retlw	63
   230  07F5  3406               	retlw	6
   231  07F6  345B               	retlw	91
   232  07F7  344F               	retlw	79
   233  07F8  3466               	retlw	102
   234  07F9  346D               	retlw	109
   235  07FA  347D               	retlw	125
   236  07FB  3407               	retlw	7
   237  07FC  347F               	retlw	127
   238  07FD  346F               	retlw	111
   239  07FE  3400               	retlw	0
   240  07FF                     __end_of_display:	
   241  07FF                     _n_semafori:	
   242  07FF  3402               	retlw	2
   243  0800                     __end_of_n_semafori:	
   244  0008                     _PORTD	set	8
   245  0005                     _PORTAbits	set	5
   246  001A                     _RCREG	set	26
   247  0019                     _TXREG	set	25
   248  000B                     _INTCONbits	set	11
   249  0018                     _RCSTAbits	set	24
   250  001E                     _ADRESH	set	30
   251  001F                     _ADCON0	set	31
   252  0006                     _PORTBbits	set	6
   253  0007                     _PORTCbits	set	7
   254  000E                     _TMR1L	set	14
   255  000F                     _TMR1H	set	15
   256  0010                     _T1CON	set	16
   257  0001                     _TMR0	set	1
   258  000B                     _INTCON	set	11
   259  0060                     _TMR1IF	set	96
   260  005A                     _TMR0IF	set	90
   261  0065                     _RCIF	set	101
   262  0064                     _TXIF	set	100
   263  00FA                     _GO_nDONE	set	250
   264  008C                     _PIE1bits	set	140
   265  0099                     _SPBRG	set	153
   266  0098                     _TXSTAbits	set	152
   267  0087                     _TRISCbits	set	135
   268  009E                     _ADRESL	set	158
   269  009F                     _ADCON1	set	159
   270  0085                     _TRISA	set	133
   271  0081                     _OPTION_REG	set	129
   272  0089                     _TRISE	set	137
   273  0088                     _TRISD	set	136
   274  0087                     _TRISC	set	135
   275  0086                     _TRISB	set	134
   276                           
   277                           ; #config settings
   278  0000                     
   279                           	psect	cinit
   280  0013                     start_initialization:	
   281  0013                     __initialization:	
   282                           
   283                           ; Initialize objects allocated to BANK0
   284  0013  1383               	bcf	3,7	;select IRP bank0
   285  0014  3068               	movlw	low (__pdataBANK0+8)
   286  0015  00FD               	movwf	btemp+-1
   287  0016  3009               	movlw	high __pidataBANK0
   288  0017  00FE               	movwf	btemp
   289  0018  30D0               	movlw	low __pidataBANK0
   290  0019  00FF               	movwf	btemp+1
   291  001A  3060               	movlw	low __pdataBANK0
   292  001B  0084               	movwf	4
   293  001C  120A  158A  2203  120A  118A  	fcall	init_ram0
   294                           
   295                           ; Clear objects allocated to BANK3
   296  0021  1783               	bsf	3,7	;select IRP bank2
   297  0022  3090               	movlw	low __pbssBANK3
   298  0023  0084               	movwf	4
   299  0024  309E               	movlw	low (__pbssBANK3+14)
   300  0025  120A  158A  21C8  120A  118A  	fcall	clear_ram0
   301                           
   302                           ; Clear objects allocated to BANK1
   303  002A  1383               	bcf	3,7	;select IRP bank0
   304  002B  30A0               	movlw	low __pbssBANK1
   305  002C  0084               	movwf	4
   306  002D  30E9               	movlw	low (__pbssBANK1+73)
   307  002E  120A  158A  21C8  120A  118A  	fcall	clear_ram0
   308                           
   309                           ; Clear objects allocated to BANK0
   310  0033  3048               	movlw	low __pbssBANK0
   311  0034  0084               	movwf	4
   312  0035  3060               	movlw	low (__pbssBANK0+24)
   313  0036  120A  158A  21C8  120A  118A  	fcall	clear_ram0
   314  003B                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  003B                     __end_of__initialization:	
   318  003B  0183               	clrf	3
   319  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssBANK0
   322  0048                     __pbssBANK0:	
   323  0048                     _count:	
   324  0048                     	ds	2
   325  004A                     _pressione:	
   326  004A                     	ds	1
   327  004B                     _umidita:	
   328  004B                     	ds	1
   329  004C                     _temp:	
   330  004C                     	ds	1
   331  004D                     _timerReadFromGateway:	
   332  004D                     	ds	1
   333  004E                     _dataFromGatewayIndex:	
   334  004E                     	ds	1
   335  004F                     _count_lux:	
   336  004F                     	ds	1
   337  0050                     _disp:	
   338  0050                     	ds	1
   339  0051                     _cycled:	
   340  0051                     	ds	1
   341  0052                     _secondPassed:	
   342  0052                     	ds	1
   343  0053                     _readGateway:	
   344  0053                     	ds	1
   345  0054                     _readGatewayDone:	
   346  0054                     	ds	1
   347  0055                     _car:	
   348  0055                     	ds	4
   349  0059                     _motorcycle:	
   350  0059                     	ds	4
   351  005D                     _centinaia:	
   352  005D                     	ds	1
   353  005E                     _decine:	
   354  005E                     	ds	1
   355  005F                     _unita:	
   356  005F                     	ds	1
   357                           
   358                           	psect	dataBANK0
   359  0060                     __pdataBANK0:	
   360  0060                     _Semafori:	
   361  0060                     	ds	8
   362                           
   363                           	psect	bssBANK1
   364  00A0                     __pbssBANK1:	
   365  00A0                     _time:	
   366  00A0                     	ds	8
   367  00A8                     _RoadsSensors:	
   368  00A8                     	ds	4
   369  00AC                     _dataFromGateway:	
   370  00AC                     	ds	15
   371  00BB                     _s2:	
   372  00BB                     	ds	14
   373  00C9                     _s1:	
   374  00C9                     	ds	14
   375  00D7                     _s0:	
   376  00D7                     	ds	14
   377  00E5                     _truck:	
   378  00E5                     	ds	4
   379                           
   380                           	psect	bssBANK3
   381  0190                     __pbssBANK3:	
   382  0190                     _s3:	
   383  0190                     	ds	14
   384                           
   385                           	psect	inittext
   386  09FF                     init_fetch0:	
   387                           ;	Called with low address in FSR and high address in W
   388                           
   389  09FF  087E               	movf	btemp,w
   390  0A00  008A               	movwf	10
   391  0A01  087F               	movf	btemp+1,w
   392  0A02  0082               	movwf	2
   393  0A03                     init_ram0:	
   394                           ;Called with:
   395                           ;	high address of idata address in btemp 
   396                           ;	low address of idata address in btemp+1 
   397                           ;	low address of data in FSR
   398                           ;	high address + 1 of data in btemp-1
   399                           
   400  0A03  120A  158A  21FF  120A  158A  	fcall	init_fetch0
   401  0A08  0080               	movwf	0
   402  0A09  0A84               	incf	4,f
   403  0A0A  0804               	movf	4,w
   404  0A0B  067D               	xorwf	btemp+-1,w
   405  0A0C  1903               	btfsc	3,2
   406  0A0D  3400               	retlw	0
   407  0A0E  0AFF               	incf	btemp+1,f
   408  0A0F  1903               	btfsc	3,2
   409  0A10  0AFE               	incf	btemp,f
   410  0A11  2A03               	goto	init_ram0
   411                           
   412                           	psect	clrtext
   413  09C8                     clear_ram0:	
   414                           ;	Called with FSR containing the base address, and
   415                           ;	W with the last address+1
   416                           
   417  09C8  0064               	clrwdt	;clear the watchdog before getting into this loop
   418  09C9                     clrloop0:	
   419  09C9  0180               	clrf	0	;clear RAM location pointed to by FSR
   420  09CA  0A84               	incf	4,f	;increment pointer
   421  09CB  0604               	xorwf	4,w	;XOR with final address
   422  09CC  1903               	btfsc	3,2	;have we reached the end yet?
   423  09CD  3400               	retlw	0	;all done for this memory range, return
   424  09CE  0604               	xorwf	4,w	;XOR again to restore value
   425  09CF  29C9               	goto	clrloop0	;do the next byte
   426                           
   427                           	psect	cstackBANK3
   428  019E                     __pcstackBANK3:	
   429  019E                     ??_main:	
   430                           
   431                           ; 1 bytes @ 0x0
   432  019E                     	ds	13
   433                           
   434                           	psect	cstackCOMMON
   435  0070                     __pcstackCOMMON:	
   436  0070                     ?_init_ADC:	
   437  0070                     ?_ShowDigitsOnDisplay:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_UpdateTimes:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_Conteggio:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_main:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_UART_TxChar:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_UART_Read:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_UART_Read:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_conteggioVeicoli:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_ISR:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     Conteggio@_count:	
   465                           ; 1 bytes @ 0x0
   466                           
   467                           
   468                           ; 2 bytes @ 0x0
   469  0070                     	ds	2
   470  0072                     Conteggio@_motorcycle:	
   471                           
   472                           ; 1 bytes @ 0x2
   473  0072                     	ds	1
   474  0073                     Conteggio@_car:	
   475                           
   476                           ; 1 bytes @ 0x3
   477  0073                     	ds	1
   478  0074                     Conteggio@_truck:	
   479                           
   480                           ; 1 bytes @ 0x4
   481  0074                     	ds	1
   482  0075                     Conteggio@index:	
   483                           
   484                           ; 1 bytes @ 0x5
   485  0075                     	ds	1
   486  0076                     ??_Conteggio:	
   487                           
   488                           ; 1 bytes @ 0x6
   489  0076                     	ds	3
   490  0079                     ??_conteggioVeicoli:	
   491                           
   492                           ; 1 bytes @ 0x9
   493  0079                     	ds	4
   494  007D                     conteggioVeicoli@i:	
   495                           
   496                           ; 1 bytes @ 0xD
   497  007D                     	ds	1
   498                           
   499                           	psect	cstackBANK0
   500  0020                     __pcstackBANK0:	
   501  0020                     ??_ISR:	
   502                           
   503                           ; 1 bytes @ 0x0
   504  0020                     	ds	4
   505  0024                     ??_init_ADC:	
   506  0024                     ?_luciSemaforo:	
   507                           ; 1 bytes @ 0x4
   508                           
   509  0024                     ?_BuildByte:	
   510                           ; 1 bytes @ 0x4
   511                           
   512  0024                     ??_UpdateTimes:	
   513                           ; 1 bytes @ 0x4
   514                           
   515  0024                     ?_SetDefaultTimers:	
   516                           ; 1 bytes @ 0x4
   517                           
   518  0024                     ??_UART_TxChar:	
   519                           ; 1 bytes @ 0x4
   520                           
   521  0024                     ?_SetDisplay:	
   522                           ; 1 bytes @ 0x4
   523                           
   524  0024                     ?___bmul:	
   525                           ; 1 bytes @ 0x4
   526                           
   527  0024                     ?_ADC_Read:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  0024                     ?_GetTime:	
   531                           ; 2 bytes @ 0x4
   532                           
   533  0024                     ?___wmul:	
   534                           ; 2 bytes @ 0x4
   535                           
   536  0024                     ?___awmod:	
   537                           ; 2 bytes @ 0x4
   538                           
   539  0024                     ?___aldiv:	
   540                           ; 2 bytes @ 0x4
   541                           
   542  0024                     BuildByte@byte1:	
   543                           ; 4 bytes @ 0x4
   544                           
   545  0024                     GetTime@_dataFromGateway:	
   546                           ; 1 bytes @ 0x4
   547                           
   548  0024                     UART_TxChar@ch:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0024                     SetDisplay@d2:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0024                     luciSemaforo@lux:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  0024                     ___bmul@multiplicand:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  0024                     SetDefaultTimers@rosso:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0024                     ___wmul@multiplier:	
   564                           ; 2 bytes @ 0x4
   565                           
   566  0024                     ___awmod@divisor:	
   567                           ; 2 bytes @ 0x4
   568                           
   569  0024                     ___aldiv@divisor:	
   570                           ; 2 bytes @ 0x4
   571                           
   572                           
   573                           ; 4 bytes @ 0x4
   574  0024                     	ds	1
   575  0025                     ??_luciSemaforo:	
   576  0025                     ??___bmul:	
   577                           ; 1 bytes @ 0x5
   578                           
   579  0025                     BuildByte@valore:	
   580                           ; 1 bytes @ 0x5
   581                           
   582  0025                     SetDisplay@d3:	
   583                           ; 1 bytes @ 0x5
   584                           
   585                           
   586                           ; 1 bytes @ 0x5
   587  0025                     	ds	1
   588  0026                     ??_ADC_Read:	
   589  0026                     ??_BuildByte:	
   590                           ; 1 bytes @ 0x6
   591                           
   592  0026                     ??_GetTime:	
   593                           ; 1 bytes @ 0x6
   594                           
   595  0026                     SetDisplay@value:	
   596                           ; 1 bytes @ 0x6
   597                           
   598  0026                     ___bmul@product:	
   599                           ; 1 bytes @ 0x6
   600                           
   601  0026                     SetDefaultTimers@verde:	
   602                           ; 1 bytes @ 0x6
   603                           
   604  0026                     ___wmul@multiplicand:	
   605                           ; 2 bytes @ 0x6
   606                           
   607  0026                     ___awmod@dividend:	
   608                           ; 2 bytes @ 0x6
   609                           
   610                           
   611                           ; 2 bytes @ 0x6
   612  0026                     	ds	1
   613  0027                     ??_SetDisplay:	
   614  0027                     ADC_Read@canale:	
   615                           ; 1 bytes @ 0x7
   616                           
   617  0027                     SetDisplay@d1:	
   618                           ; 1 bytes @ 0x7
   619                           
   620  0027                     luciSemaforo@index:	
   621                           ; 1 bytes @ 0x7
   622                           
   623  0027                     ___bmul@multiplier:	
   624                           ; 1 bytes @ 0x7
   625                           
   626                           
   627                           ; 1 bytes @ 0x7
   628  0027                     	ds	1
   629  0028                     ??___wmul:	
   630  0028                     ??___awmod:	
   631                           ; 1 bytes @ 0x8
   632                           
   633  0028                     BuildByte@byte0:	
   634                           ; 1 bytes @ 0x8
   635                           
   636  0028                     GetTime@index:	
   637                           ; 1 bytes @ 0x8
   638                           
   639  0028                     SetDefaultTimers@giallo:	
   640                           ; 1 bytes @ 0x8
   641                           
   642  0028                     ___wmul@product:	
   643                           ; 2 bytes @ 0x8
   644                           
   645  0028                     ___aldiv@dividend:	
   646                           ; 2 bytes @ 0x8
   647                           
   648                           
   649                           ; 4 bytes @ 0x8
   650  0028                     	ds	1
   651  0029                     GetTime@shortInt:	
   652  0029                     ___awmod@counter:	
   653                           ; 1 bytes @ 0x9
   654                           
   655  0029                     BuildByte@txByte:	
   656                           ; 1 bytes @ 0x9
   657                           
   658                           
   659                           ; 5 bytes @ 0x9
   660  0029                     	ds	1
   661  002A                     SetDefaultTimers@_semafori:	
   662  002A                     ___awmod@sign:	
   663                           ; 1 bytes @ 0xA
   664                           
   665  002A                     GetTime@tmp:	
   666                           ; 1 bytes @ 0xA
   667                           
   668                           
   669                           ; 2 bytes @ 0xA
   670  002A                     	ds	1
   671  002B                     ??_ShowDigitsOnDisplay:	
   672  002B                     ??_SetDefaultTimers:	
   673                           ; 1 bytes @ 0xB
   674                           
   675  002B                     ?___awdiv:	
   676                           ; 1 bytes @ 0xB
   677                           
   678  002B                     ___awdiv@divisor:	
   679                           ; 2 bytes @ 0xB
   680                           
   681                           
   682                           ; 2 bytes @ 0xB
   683  002B                     	ds	1
   684  002C                     ?_SetReceivedTimes:	
   685  002C                     ??___aldiv:	
   686                           ; 1 bytes @ 0xC
   687                           
   688  002C                     SetReceivedTimes@_semafori:	
   689                           ; 1 bytes @ 0xC
   690                           
   691                           
   692                           ; 1 bytes @ 0xC
   693  002C                     	ds	1
   694  002D                     ??_SetReceivedTimes:	
   695  002D                     ___aldiv@counter:	
   696                           ; 1 bytes @ 0xD
   697                           
   698  002D                     ___awdiv@dividend:	
   699                           ; 1 bytes @ 0xD
   700                           
   701                           
   702                           ; 2 bytes @ 0xD
   703  002D                     	ds	1
   704  002E                     BuildByte@sommaRow:	
   705  002E                     ___aldiv@sign:	
   706                           ; 1 bytes @ 0xE
   707                           
   708                           
   709                           ; 1 bytes @ 0xE
   710  002E                     	ds	1
   711  002F                     ??___awdiv:	
   712  002F                     BuildByte@sommaColumn:	
   713                           ; 1 bytes @ 0xF
   714                           
   715  002F                     ___aldiv@quotient:	
   716                           ; 1 bytes @ 0xF
   717                           
   718                           
   719                           ; 4 bytes @ 0xF
   720  002F                     	ds	1
   721  0030                     ___awdiv@counter:	
   722  0030                     BuildByte@y:	
   723                           ; 1 bytes @ 0x10
   724                           
   725                           
   726                           ; 2 bytes @ 0x10
   727  0030                     	ds	1
   728  0031                     ___awdiv@sign:	
   729                           
   730                           ; 1 bytes @ 0x11
   731  0031                     	ds	1
   732  0032                     SetDefaultTimers@l:	
   733  0032                     BuildByte@y_356:	
   734                           ; 1 bytes @ 0x12
   735                           
   736  0032                     ___awdiv@quotient:	
   737                           ; 2 bytes @ 0x12
   738                           
   739                           
   740                           ; 2 bytes @ 0x12
   741  0032                     	ds	1
   742  0033                     ?_UART_Init:	
   743  0033                     SetDefaultTimers@i:	
   744                           ; 1 bytes @ 0x13
   745                           
   746  0033                     UART_Init@baudrate:	
   747                           ; 1 bytes @ 0x13
   748                           
   749                           
   750                           ; 2 bytes @ 0x13
   751  0033                     	ds	1
   752  0034                     ?_GetDigits:	
   753  0034                     ?_map:	
   754                           ; 1 bytes @ 0x14
   755                           
   756  0034                     GetDigits@decine:	
   757                           ; 2 bytes @ 0x14
   758                           
   759  0034                     map@x:	
   760                           ; 1 bytes @ 0x14
   761                           
   762  0034                     BuildByte@i:	
   763                           ; 2 bytes @ 0x14
   764                           
   765                           
   766                           ; 2 bytes @ 0x14
   767  0034                     	ds	1
   768  0035                     ??_UART_Init:	
   769  0035                     GetDigits@unita:	
   770                           ; 1 bytes @ 0x15
   771                           
   772  0035                     SetReceivedTimes@semaforoId:	
   773                           ; 1 bytes @ 0x15
   774                           
   775                           
   776                           ; 1 bytes @ 0x15
   777  0035                     	ds	1
   778  0036                     UpdateTimes@i:	
   779  0036                     SetReceivedTimes@colorId:	
   780                           ; 1 bytes @ 0x16
   781                           
   782  0036                     map@in_min:	
   783                           ; 1 bytes @ 0x16
   784                           
   785  0036                     GetDigits@Time:	
   786                           ; 2 bytes @ 0x16
   787                           
   788  0036                     BuildByte@i_355:	
   789                           ; 2 bytes @ 0x16
   790                           
   791                           
   792                           ; 2 bytes @ 0x16
   793  0036                     	ds	1
   794  0037                     UpdateTimes@_semafori:	
   795  0037                     SetReceivedTimes@_dataFromGateway:	
   796                           ; 1 bytes @ 0x17
   797                           
   798                           
   799                           ; 1 bytes @ 0x17
   800  0037                     	ds	1
   801  0038                     ?_sendByte:	
   802  0038                     ??_GetDigits:	
   803                           ; 1 bytes @ 0x18
   804                           
   805  0038                     UpdateTimes@l:	
   806                           ; 1 bytes @ 0x18
   807                           
   808  0038                     SetReceivedTimes@index:	
   809                           ; 1 bytes @ 0x18
   810                           
   811  0038                     sendByte@byte1:	
   812                           ; 1 bytes @ 0x18
   813                           
   814  0038                     map@in_max:	
   815                           ; 1 bytes @ 0x18
   816                           
   817                           
   818                           ; 2 bytes @ 0x18
   819  0038                     	ds	1
   820  0039                     SetReceivedTimes@i:	
   821  0039                     sendByte@valore:	
   822                           ; 1 bytes @ 0x19
   823                           
   824  0039                     _GetDigits$1200:	
   825                           ; 1 bytes @ 0x19
   826                           
   827                           
   828                           ; 2 bytes @ 0x19
   829  0039                     	ds	1
   830  003A                     ??_sendByte:	
   831  003A                     map@out_min:	
   832                           ; 1 bytes @ 0x1A
   833                           
   834                           
   835                           ; 2 bytes @ 0x1A
   836  003A                     	ds	1
   837  003B                     GetDigits@centinaia:	
   838                           
   839                           ; 1 bytes @ 0x1B
   840  003B                     	ds	1
   841  003C                     map@out_max:	
   842                           
   843                           ; 2 bytes @ 0x1C
   844  003C                     	ds	1
   845  003D                     sendByte@byte0:	
   846                           
   847                           ; 1 bytes @ 0x1D
   848  003D                     	ds	1
   849  003E                     ??_map:	
   850  003E                     sendByte@txByte:	
   851                           ; 1 bytes @ 0x1E
   852                           
   853                           
   854                           ; 1 bytes @ 0x1E
   855  003E                     	ds	1
   856  003F                     sendByte@i:	
   857                           
   858                           ; 1 bytes @ 0x1F
   859  003F                     	ds	1
   860  0040                     main@i_483:	
   861                           
   862                           ; 1 bytes @ 0x20
   863  0040                     	ds	1
   864  0041                     main@i_485:	
   865                           
   866                           ; 1 bytes @ 0x21
   867  0041                     	ds	1
   868  0042                     main@i_482:	
   869                           
   870                           ; 2 bytes @ 0x22
   871  0042                     	ds	2
   872  0044                     main@lux_select:	
   873                           
   874                           ; 1 bytes @ 0x24
   875  0044                     	ds	1
   876  0045                     main@i_487:	
   877                           
   878                           ; 1 bytes @ 0x25
   879  0045                     	ds	1
   880  0046                     main@i:	
   881                           
   882                           ; 2 bytes @ 0x26
   883  0046                     	ds	2
   884                           
   885                           	psect	maintext
   886  003F                     __pmaintext:	
   887 ;;
   888 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
   889 ;;
   890 ;; *************** function _main *****************
   891 ;; Defined at:
   892 ;;		line 127 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  lux_select      1   36[BANK0 ] unsigned char 
   897 ;;  i               1   33[BANK0 ] unsigned char 
   898 ;;  i               1   32[BANK0 ] unsigned char 
   899 ;;  i               2   34[BANK0 ] int 
   900 ;;  i               2   38[BANK0 ] int 
   901 ;;  i               1   37[BANK0 ] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : B00/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       8       0       0       0
   913 ;;      Temps:          0       0       0      13       0
   914 ;;      Totals:         0       8       0      13       0
   915 ;;Total ram usage:       21 bytes
   916 ;; Hardware stack levels required when called:    5
   917 ;; This function calls:
   918 ;;		_ADC_Read
   919 ;;		_GetDigits
   920 ;;		_SetDefaultTimers
   921 ;;		_SetReceivedTimes
   922 ;;		_ShowDigitsOnDisplay
   923 ;;		_UART_Init
   924 ;;		_UpdateTimes
   925 ;;		_init_ADC
   926 ;;		_luciSemaforo
   927 ;;		_map
   928 ;;		_sendByte
   929 ;; This function is called by:
   930 ;;		Startup code after reset
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _main
   936  003F                     _main:	
   937  003F                     l4175:	
   938                           ;incstack = 0
   939                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   940                           
   941                           
   942                           ;main.c: 129:     TRISB = 0x38;
   943  003F  3038               	movlw	56
   944  0040  1683               	bsf	3,5	;RP0=1, select bank1
   945  0041  1303               	bcf	3,6	;RP1=0, select bank1
   946  0042  0086               	movwf	6	;volatile
   947                           
   948                           ;main.c: 130:     TRISC = 0x80;
   949  0043  3080               	movlw	128
   950  0044  0087               	movwf	7	;volatile
   951  0045                     l4177:	
   952                           
   953                           ;main.c: 131:     TRISD = 0x00;
   954  0045  0188               	clrf	8	;volatile
   955  0046                     l4179:	
   956                           
   957                           ;main.c: 132:     TRISE = 0x01;
   958  0046  3001               	movlw	1
   959  0047  0089               	movwf	9	;volatile
   960  0048                     l4181:	
   961                           
   962                           ;main.c: 133:     INTCON = 0xE0;
   963  0048  30E0               	movlw	224
   964  0049  008B               	movwf	11	;volatile
   965  004A                     l4183:	
   966                           
   967                           ;main.c: 134:     OPTION_REG = 0x04;
   968  004A  3004               	movlw	4
   969  004B  0081               	movwf	1	;volatile
   970  004C                     l4185:	
   971                           
   972                           ;main.c: 135:     TMR0 = 6;
   973  004C  3006               	movlw	6
   974  004D  1283               	bcf	3,5	;RP0=0, select bank0
   975  004E  1303               	bcf	3,6	;RP1=0, select bank0
   976  004F  0081               	movwf	1	;volatile
   977  0050                     l4187:	
   978                           
   979                           ;main.c: 136:     T1CON = 0x31;
   980  0050  3031               	movlw	49
   981  0051  0090               	movwf	16	;volatile
   982  0052                     l4189:	
   983                           
   984                           ;main.c: 138:     TMR1H = 60;
   985  0052  303C               	movlw	60
   986  0053  008F               	movwf	15	;volatile
   987  0054                     l4191:	
   988                           
   989                           ;main.c: 139:     TMR1L = 176;
   990  0054  30B0               	movlw	176
   991  0055  008E               	movwf	14	;volatile
   992  0056                     l4193:	
   993                           
   994                           ;main.c: 142:     init_ADC();
   995  0056  120A  158A  21EC  120A  118A  	fcall	_init_ADC
   996  005B                     l4195:	
   997                           
   998                           ;main.c: 143:     UART_Init(9600);
   999  005B  3080               	movlw	128
  1000  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1001  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1002  005E  00B3               	movwf	UART_Init@baudrate
  1003  005F  3025               	movlw	37
  1004  0060  00B4               	movwf	UART_Init@baudrate+1
  1005  0061  120A  158A  22F1  120A  118A  	fcall	_UART_Init
  1006  0066                     l4197:	
  1007                           
  1008                           ;main.c: 144:     SetDefaultTimers(6,4,2, Semafori);
  1009  0066  3006               	movlw	6
  1010  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0069  00A4               	movwf	SetDefaultTimers@rosso
  1013  006A  3000               	movlw	0
  1014  006B  00A5               	movwf	SetDefaultTimers@rosso+1
  1015  006C  3004               	movlw	4
  1016  006D  00A6               	movwf	SetDefaultTimers@verde
  1017  006E  3000               	movlw	0
  1018  006F  00A7               	movwf	SetDefaultTimers@verde+1
  1019  0070  3002               	movlw	2
  1020  0071  00A8               	movwf	SetDefaultTimers@giallo
  1021  0072  3000               	movlw	0
  1022  0073  00A9               	movwf	SetDefaultTimers@giallo+1
  1023  0074  3060               	movlw	(low (_Semafori| 0))& (0+255)
  1024  0075  1683               	bsf	3,5	;RP0=1, select bank3
  1025  0076  1703               	bsf	3,6	;RP1=1, select bank3
  1026  0077  009E               	movwf	??_main^(0+384)
  1027  0078  081E               	movf	??_main^(0+384),w
  1028  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1029  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1030  007B  00AA               	movwf	SetDefaultTimers@_semafori
  1031  007C  120A  118A  2509  120A  118A  	fcall	_SetDefaultTimers
  1032  0081                     l4199:	
  1033                           
  1034                           ;main.c: 146:     PORTCbits.RC0 = 0;
  1035  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0083  1007               	bcf	7,0	;volatile
  1038  0084                     l4201:	
  1039                           
  1040                           ;main.c: 147:     PORTBbits.RB7 = 0;
  1041  0084  1386               	bcf	6,7	;volatile
  1042  0085                     l4203:	
  1043                           
  1044                           ;main.c: 148:     PORTCbits.RC3 = 0;
  1045  0085  1187               	bcf	7,3	;volatile
  1046  0086                     l4205:	
  1047                           
  1048                           ;main.c: 149:     PORTBbits.RB6 = 0;
  1049  0086  1306               	bcf	6,6	;volatile
  1050  0087                     l4207:	
  1051                           
  1052                           ;main.c: 150:     PORTCbits.RC1 = 0;
  1053  0087  1087               	bcf	7,1	;volatile
  1054  0088                     l4209:	
  1055                           
  1056                           ;main.c: 151:     PORTBbits.RB1 = 0;
  1057  0088  1086               	bcf	6,1	;volatile
  1058  0089                     l4211:	
  1059                           
  1060                           ;main.c: 154:     {;main.c: 156:         if (readGateway.Bit)
  1061  0089  1C53               	btfss	_readGateway,0
  1062  008A  288C               	goto	u3731
  1063  008B  288D               	goto	u3730
  1064  008C                     u3731:	
  1065  008C  2B55               	goto	l236
  1066  008D                     u3730:	
  1067  008D  2B40               	goto	l4291
  1068  008E                     l238:	
  1069                           ;main.c: 159:             {;main.c: 160:             case 0x08:
  1070                           
  1071                           
  1072                           ;main.c: 161:                 readGatewayDone.Bit = 1;
  1073  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1074  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0090  1454               	bsf	_readGatewayDone,0
  1076                           
  1077                           ;main.c: 162:                 readGateway.Bit = 0;
  1078  0091  1053               	bcf	_readGateway,0
  1079  0092                     l4215:	
  1080                           
  1081                           ;main.c: 164:                 for (int i = 0; i < 4; i++)
  1082  0092  01C6               	clrf	main@i
  1083  0093  01C7               	clrf	main@i+1
  1084  0094  29B9               	goto	l4231
  1085  0095                     l4221:	
  1086                           
  1087                           ;main.c: 169:                         sendByte(0x03, 0x01, motorcycle[i]);
  1088  0095  01B8               	clrf	sendByte@byte1
  1089  0096  0AB8               	incf	sendByte@byte1,f
  1090  0097  0846               	movf	main@i,w
  1091  0098  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1092  0099  0084               	movwf	4
  1093  009A  1383               	bcf	3,7	;select IRP bank0
  1094  009B  0800               	movf	0,w
  1095  009C  1683               	bsf	3,5	;RP0=1, select bank3
  1096  009D  1703               	bsf	3,6	;RP1=1, select bank3
  1097  009E  009E               	movwf	??_main^(0+384)
  1098  009F  081E               	movf	??_main^(0+384),w
  1099  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1100  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1101  00A2  00B9               	movwf	sendByte@valore
  1102  00A3  3003               	movlw	3
  1103  00A4  120A  158A  228B  120A  118A  	fcall	_sendByte
  1104                           
  1105                           ;main.c: 170:                         sendByte(0x03, 0x02, car[i]);
  1106  00A9  3002               	movlw	2
  1107  00AA  1683               	bsf	3,5	;RP0=1, select bank3
  1108  00AB  1703               	bsf	3,6	;RP1=1, select bank3
  1109  00AC  009E               	movwf	??_main^(0+384)
  1110  00AD  081E               	movf	??_main^(0+384),w
  1111  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1112  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1113  00B0  00B8               	movwf	sendByte@byte1
  1114  00B1  0846               	movf	main@i,w
  1115  00B2  3E55               	addlw	(low (_car| 0))& (0+255)
  1116  00B3  0084               	movwf	4
  1117  00B4  1383               	bcf	3,7	;select IRP bank0
  1118  00B5  0800               	movf	0,w
  1119  00B6  1683               	bsf	3,5	;RP0=1, select bank3
  1120  00B7  1703               	bsf	3,6	;RP1=1, select bank3
  1121  00B8  009F               	movwf	(??_main+1)^(0+384)
  1122  00B9  081F               	movf	(??_main+1)^(0+384),w
  1123  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1124  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1125  00BC  00B9               	movwf	sendByte@valore
  1126  00BD  3003               	movlw	3
  1127  00BE  120A  158A  228B  120A  118A  	fcall	_sendByte
  1128                           
  1129                           ;main.c: 171:                         sendByte(0x03, 0x03, truck[i]);
  1130  00C3  3003               	movlw	3
  1131  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  1132  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  1133  00C6  009E               	movwf	??_main^(0+384)
  1134  00C7  081E               	movf	??_main^(0+384),w
  1135  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1136  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1137  00CA  00B8               	movwf	sendByte@byte1
  1138  00CB  0846               	movf	main@i,w
  1139  00CC  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1140  00CD  0084               	movwf	4
  1141  00CE  1383               	bcf	3,7	;select IRP bank1
  1142  00CF  0800               	movf	0,w
  1143  00D0  1683               	bsf	3,5	;RP0=1, select bank3
  1144  00D1  1703               	bsf	3,6	;RP1=1, select bank3
  1145  00D2  009F               	movwf	(??_main+1)^(0+384)
  1146  00D3  081F               	movf	(??_main+1)^(0+384),w
  1147  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1149  00D6  00B9               	movwf	sendByte@valore
  1150  00D7  3003               	movlw	3
  1151  00D8  120A  158A  228B  120A  118A  	fcall	_sendByte
  1152                           
  1153                           ;main.c: 172:                         break;
  1154  00DD  29CE               	goto	l4233
  1155  00DE                     l4223:	
  1156                           
  1157                           ;main.c: 174:                         sendByte(0x05, 0x01, motorcycle[i]);
  1158  00DE  01B8               	clrf	sendByte@byte1
  1159  00DF  0AB8               	incf	sendByte@byte1,f
  1160  00E0  0846               	movf	main@i,w
  1161  00E1  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1162  00E2  0084               	movwf	4
  1163  00E3  1383               	bcf	3,7	;select IRP bank0
  1164  00E4  0800               	movf	0,w
  1165  00E5  1683               	bsf	3,5	;RP0=1, select bank3
  1166  00E6  1703               	bsf	3,6	;RP1=1, select bank3
  1167  00E7  009E               	movwf	??_main^(0+384)
  1168  00E8  081E               	movf	??_main^(0+384),w
  1169  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00EB  00B9               	movwf	sendByte@valore
  1172  00EC  3005               	movlw	5
  1173  00ED  120A  158A  228B  120A  118A  	fcall	_sendByte
  1174                           
  1175                           ;main.c: 175:                         sendByte(0x05, 0x02, car[i]);
  1176  00F2  3002               	movlw	2
  1177  00F3  1683               	bsf	3,5	;RP0=1, select bank3
  1178  00F4  1703               	bsf	3,6	;RP1=1, select bank3
  1179  00F5  009E               	movwf	??_main^(0+384)
  1180  00F6  081E               	movf	??_main^(0+384),w
  1181  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1183  00F9  00B8               	movwf	sendByte@byte1
  1184  00FA  0846               	movf	main@i,w
  1185  00FB  3E55               	addlw	(low (_car| 0))& (0+255)
  1186  00FC  0084               	movwf	4
  1187  00FD  1383               	bcf	3,7	;select IRP bank0
  1188  00FE  0800               	movf	0,w
  1189  00FF  1683               	bsf	3,5	;RP0=1, select bank3
  1190  0100  1703               	bsf	3,6	;RP1=1, select bank3
  1191  0101  009F               	movwf	(??_main+1)^(0+384)
  1192  0102  081F               	movf	(??_main+1)^(0+384),w
  1193  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0105  00B9               	movwf	sendByte@valore
  1196  0106  3005               	movlw	5
  1197  0107  120A  158A  228B  120A  118A  	fcall	_sendByte
  1198                           
  1199                           ;main.c: 176:                         sendByte(0x05, 0x03, truck[i]);
  1200  010C  3003               	movlw	3
  1201  010D  1683               	bsf	3,5	;RP0=1, select bank3
  1202  010E  1703               	bsf	3,6	;RP1=1, select bank3
  1203  010F  009E               	movwf	??_main^(0+384)
  1204  0110  081E               	movf	??_main^(0+384),w
  1205  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0113  00B8               	movwf	sendByte@byte1
  1208  0114  0846               	movf	main@i,w
  1209  0115  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1210  0116  0084               	movwf	4
  1211  0117  1383               	bcf	3,7	;select IRP bank1
  1212  0118  0800               	movf	0,w
  1213  0119  1683               	bsf	3,5	;RP0=1, select bank3
  1214  011A  1703               	bsf	3,6	;RP1=1, select bank3
  1215  011B  009F               	movwf	(??_main+1)^(0+384)
  1216  011C  081F               	movf	(??_main+1)^(0+384),w
  1217  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1218  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1219  011F  00B9               	movwf	sendByte@valore
  1220  0120  3005               	movlw	5
  1221  0121  120A  158A  228B  120A  118A  	fcall	_sendByte
  1222                           
  1223                           ;main.c: 177:                         break;
  1224  0126  29CE               	goto	l4233
  1225  0127                     l4225:	
  1226                           
  1227                           ;main.c: 179:                         sendByte(0x07, 0x01, motorcycle[i]);
  1228  0127  01B8               	clrf	sendByte@byte1
  1229  0128  0AB8               	incf	sendByte@byte1,f
  1230  0129  0846               	movf	main@i,w
  1231  012A  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1232  012B  0084               	movwf	4
  1233  012C  1383               	bcf	3,7	;select IRP bank0
  1234  012D  0800               	movf	0,w
  1235  012E  1683               	bsf	3,5	;RP0=1, select bank3
  1236  012F  1703               	bsf	3,6	;RP1=1, select bank3
  1237  0130  009E               	movwf	??_main^(0+384)
  1238  0131  081E               	movf	??_main^(0+384),w
  1239  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0134  00B9               	movwf	sendByte@valore
  1242  0135  3007               	movlw	7
  1243  0136  120A  158A  228B  120A  118A  	fcall	_sendByte
  1244                           
  1245                           ;main.c: 180:                         sendByte(0x07, 0x02, car[i]);
  1246  013B  3002               	movlw	2
  1247  013C  1683               	bsf	3,5	;RP0=1, select bank3
  1248  013D  1703               	bsf	3,6	;RP1=1, select bank3
  1249  013E  009E               	movwf	??_main^(0+384)
  1250  013F  081E               	movf	??_main^(0+384),w
  1251  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0142  00B8               	movwf	sendByte@byte1
  1254  0143  0846               	movf	main@i,w
  1255  0144  3E55               	addlw	(low (_car| 0))& (0+255)
  1256  0145  0084               	movwf	4
  1257  0146  1383               	bcf	3,7	;select IRP bank0
  1258  0147  0800               	movf	0,w
  1259  0148  1683               	bsf	3,5	;RP0=1, select bank3
  1260  0149  1703               	bsf	3,6	;RP1=1, select bank3
  1261  014A  009F               	movwf	(??_main+1)^(0+384)
  1262  014B  081F               	movf	(??_main+1)^(0+384),w
  1263  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1264  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1265  014E  00B9               	movwf	sendByte@valore
  1266  014F  3007               	movlw	7
  1267  0150  120A  158A  228B  120A  118A  	fcall	_sendByte
  1268                           
  1269                           ;main.c: 181:                         sendByte(0x07, 0x03, truck[i]);
  1270  0155  3003               	movlw	3
  1271  0156  1683               	bsf	3,5	;RP0=1, select bank3
  1272  0157  1703               	bsf	3,6	;RP1=1, select bank3
  1273  0158  009E               	movwf	??_main^(0+384)
  1274  0159  081E               	movf	??_main^(0+384),w
  1275  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1276  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1277  015C  00B8               	movwf	sendByte@byte1
  1278  015D  0846               	movf	main@i,w
  1279  015E  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1280  015F  0084               	movwf	4
  1281  0160  1383               	bcf	3,7	;select IRP bank1
  1282  0161  0800               	movf	0,w
  1283  0162  1683               	bsf	3,5	;RP0=1, select bank3
  1284  0163  1703               	bsf	3,6	;RP1=1, select bank3
  1285  0164  009F               	movwf	(??_main+1)^(0+384)
  1286  0165  081F               	movf	(??_main+1)^(0+384),w
  1287  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0168  00B9               	movwf	sendByte@valore
  1290  0169  3007               	movlw	7
  1291  016A  120A  158A  228B  120A  118A  	fcall	_sendByte
  1292                           
  1293                           ;main.c: 182:                         break;
  1294  016F  29CE               	goto	l4233
  1295  0170                     l4227:	
  1296                           
  1297                           ;main.c: 184:                         sendByte(0x09, 0x01, motorcycle[i]);
  1298  0170  01B8               	clrf	sendByte@byte1
  1299  0171  0AB8               	incf	sendByte@byte1,f
  1300  0172  0846               	movf	main@i,w
  1301  0173  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1302  0174  0084               	movwf	4
  1303  0175  1383               	bcf	3,7	;select IRP bank0
  1304  0176  0800               	movf	0,w
  1305  0177  1683               	bsf	3,5	;RP0=1, select bank3
  1306  0178  1703               	bsf	3,6	;RP1=1, select bank3
  1307  0179  009E               	movwf	??_main^(0+384)
  1308  017A  081E               	movf	??_main^(0+384),w
  1309  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1310  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1311  017D  00B9               	movwf	sendByte@valore
  1312  017E  3009               	movlw	9
  1313  017F  120A  158A  228B  120A  118A  	fcall	_sendByte
  1314                           
  1315                           ;main.c: 185:                         sendByte(0x09, 0x02, car[i]);
  1316  0184  3002               	movlw	2
  1317  0185  1683               	bsf	3,5	;RP0=1, select bank3
  1318  0186  1703               	bsf	3,6	;RP1=1, select bank3
  1319  0187  009E               	movwf	??_main^(0+384)
  1320  0188  081E               	movf	??_main^(0+384),w
  1321  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1322  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1323  018B  00B8               	movwf	sendByte@byte1
  1324  018C  0846               	movf	main@i,w
  1325  018D  3E55               	addlw	(low (_car| 0))& (0+255)
  1326  018E  0084               	movwf	4
  1327  018F  1383               	bcf	3,7	;select IRP bank0
  1328  0190  0800               	movf	0,w
  1329  0191  1683               	bsf	3,5	;RP0=1, select bank3
  1330  0192  1703               	bsf	3,6	;RP1=1, select bank3
  1331  0193  009F               	movwf	(??_main+1)^(0+384)
  1332  0194  081F               	movf	(??_main+1)^(0+384),w
  1333  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0197  00B9               	movwf	sendByte@valore
  1336  0198  3009               	movlw	9
  1337  0199  120A  158A  228B  120A  118A  	fcall	_sendByte
  1338                           
  1339                           ;main.c: 186:                         sendByte(0x09, 0x03, truck[i]);
  1340  019E  3003               	movlw	3
  1341  019F  1683               	bsf	3,5	;RP0=1, select bank3
  1342  01A0  1703               	bsf	3,6	;RP1=1, select bank3
  1343  01A1  009E               	movwf	??_main^(0+384)
  1344  01A2  081E               	movf	??_main^(0+384),w
  1345  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1346  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1347  01A5  00B8               	movwf	sendByte@byte1
  1348  01A6  0846               	movf	main@i,w
  1349  01A7  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1350  01A8  0084               	movwf	4
  1351  01A9  1383               	bcf	3,7	;select IRP bank1
  1352  01AA  0800               	movf	0,w
  1353  01AB  1683               	bsf	3,5	;RP0=1, select bank3
  1354  01AC  1703               	bsf	3,6	;RP1=1, select bank3
  1355  01AD  009F               	movwf	(??_main+1)^(0+384)
  1356  01AE  081F               	movf	(??_main+1)^(0+384),w
  1357  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1358  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1359  01B1  00B9               	movwf	sendByte@valore
  1360  01B2  3009               	movlw	9
  1361  01B3  120A  158A  228B  120A  118A  	fcall	_sendByte
  1362                           
  1363                           ;main.c: 187:                         break;
  1364  01B8  29CE               	goto	l4233
  1365  01B9                     l4231:	
  1366                           
  1367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1368                           ; Switch size 1, requested type "simple"
  1369                           ; Number of cases is 1, Range of values is 0 to 0
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte            4     3 (average)
  1373                           ; direct_byte           11     8 (fixed)
  1374                           ; jumptable            260     6 (fixed)
  1375                           ;	Chosen strategy is simple_byte
  1376  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1377  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1378  01BB  0847               	movf	main@i+1,w
  1379  01BC  3A00               	xorlw	0	; case 0
  1380  01BD  1903               	skipnz
  1381  01BE  29C0               	goto	l4561
  1382  01BF  29CE               	goto	l4233
  1383  01C0                     l4561:	
  1384                           
  1385                           ; Switch size 1, requested type "simple"
  1386                           ; Number of cases is 4, Range of values is 0 to 3
  1387                           ; switch strategies available:
  1388                           ; Name         Instructions Cycles
  1389                           ; simple_byte           13     7 (average)
  1390                           ; direct_byte           20     8 (fixed)
  1391                           ; jumptable            260     6 (fixed)
  1392                           ;	Chosen strategy is simple_byte
  1393  01C0  0846               	movf	main@i,w
  1394  01C1  3A00               	xorlw	0	; case 0
  1395  01C2  1903               	skipnz
  1396  01C3  2895               	goto	l4221
  1397  01C4  3A01               	xorlw	1	; case 1
  1398  01C5  1903               	skipnz
  1399  01C6  28DE               	goto	l4223
  1400  01C7  3A03               	xorlw	3	; case 2
  1401  01C8  1903               	skipnz
  1402  01C9  2927               	goto	l4225
  1403  01CA  3A01               	xorlw	1	; case 3
  1404  01CB  1903               	skipnz
  1405  01CC  2970               	goto	l4227
  1406  01CD  29CE               	goto	l4233
  1407  01CE                     l4233:	
  1408                           
  1409                           ;main.c: 189:                 }
  1410  01CE  3001               	movlw	1
  1411  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1412  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1413  01D1  07C6               	addwf	main@i,f
  1414  01D2  1803               	skipnc
  1415  01D3  0AC7               	incf	main@i+1,f
  1416  01D4  3000               	movlw	0
  1417  01D5  07C7               	addwf	main@i+1,f
  1418  01D6                     l4235:	
  1419  01D6  0847               	movf	main@i+1,w
  1420  01D7  3A80               	xorlw	128
  1421  01D8  00FF               	movwf	btemp+1
  1422  01D9  3080               	movlw	128
  1423  01DA  027F               	subwf	btemp+1,w
  1424  01DB  1D03               	skipz
  1425  01DC  29DF               	goto	u3745
  1426  01DD  3004               	movlw	4
  1427  01DE  0246               	subwf	main@i,w
  1428  01DF                     u3745:	
  1429  01DF  1C03               	skipc
  1430  01E0  29E2               	goto	u3741
  1431  01E1  29E3               	goto	u3740
  1432  01E2                     u3741:	
  1433  01E2  29B9               	goto	l4231
  1434  01E3                     u3740:	
  1435  01E3                     l4237:	
  1436                           
  1437                           ;main.c: 191:                 for (int i = 0; i < 4; i++)
  1438  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1439  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1440  01E5  01C2               	clrf	main@i_482
  1441  01E6  01C3               	clrf	main@i_482+1
  1442  01E7                     l4243:	
  1443                           
  1444                           ;main.c: 192:                 {;main.c: 193:                     motorcycle[i] = 0;
  1445  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1446  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1447  01E9  0842               	movf	main@i_482,w
  1448  01EA  3E59               	addlw	(low (_motorcycle| 0))& (0+255)
  1449  01EB  0084               	movwf	4
  1450  01EC  1383               	bcf	3,7	;select IRP bank0
  1451  01ED  0180               	clrf	0
  1452                           
  1453                           ;main.c: 194:                     car[i] = 0;
  1454  01EE  0842               	movf	main@i_482,w
  1455  01EF  3E55               	addlw	(low (_car| 0))& (0+255)
  1456  01F0  0084               	movwf	4
  1457  01F1  0180               	clrf	0
  1458                           
  1459                           ;main.c: 195:                     truck[i] = 0;
  1460  01F2  0842               	movf	main@i_482,w
  1461  01F3  3EE5               	addlw	(low (_truck| 0))& (0+255)
  1462  01F4  0084               	movwf	4
  1463  01F5  0180               	clrf	0
  1464  01F6                     l4245:	
  1465                           
  1466                           ;main.c: 196:                 }
  1467  01F6  3001               	movlw	1
  1468  01F7  07C2               	addwf	main@i_482,f
  1469  01F8  1803               	skipnc
  1470  01F9  0AC3               	incf	main@i_482+1,f
  1471  01FA  3000               	movlw	0
  1472  01FB  07C3               	addwf	main@i_482+1,f
  1473  01FC                     l4247:	
  1474  01FC  0843               	movf	main@i_482+1,w
  1475  01FD  3A80               	xorlw	128
  1476  01FE  00FF               	movwf	btemp+1
  1477  01FF  3080               	movlw	128
  1478  0200  027F               	subwf	btemp+1,w
  1479  0201  1D03               	skipz
  1480  0202  2A05               	goto	u3755
  1481  0203  3004               	movlw	4
  1482  0204  0242               	subwf	main@i_482,w
  1483  0205                     u3755:	
  1484  0205  1C03               	skipc
  1485  0206  2A08               	goto	u3751
  1486  0207  2A09               	goto	u3750
  1487  0208                     u3751:	
  1488  0208  29E7               	goto	l4243
  1489  0209                     u3750:	
  1490  0209                     l4249:	
  1491                           
  1492                           ;main.c: 198:                 for (unsigned char i = 0; i < 5; i++)
  1493  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1494  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1495  020B  01C0               	clrf	main@i_483
  1496  020C                     l4255:	
  1497                           
  1498                           ;main.c: 199:                 {;main.c: 200:                     dataFromGateway[i] = 0;
  1499  020C  0840               	movf	main@i_483,w
  1500  020D  3EAC               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1501  020E  0084               	movwf	4
  1502  020F  1383               	bcf	3,7	;select IRP bank1
  1503  0210  0180               	clrf	0
  1504  0211                     l4257:	
  1505                           
  1506                           ;main.c: 201:                 }
  1507  0211  3001               	movlw	1
  1508  0212  1683               	bsf	3,5	;RP0=1, select bank3
  1509  0213  1703               	bsf	3,6	;RP1=1, select bank3
  1510  0214  009E               	movwf	??_main^(0+384)
  1511  0215  081E               	movf	??_main^(0+384),w
  1512  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1513  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0218  07C0               	addwf	main@i_483,f
  1515  0219                     l4259:	
  1516  0219  3005               	movlw	5
  1517  021A  0240               	subwf	main@i_483,w
  1518  021B  1C03               	skipc
  1519  021C  2A1E               	goto	u3761
  1520  021D  2A1F               	goto	u3760
  1521  021E                     u3761:	
  1522  021E  2A0C               	goto	l4255
  1523  021F                     u3760:	
  1524  021F  2B55               	goto	l236
  1525  0220                     l252:	
  1526                           ;main.c: 203:             case 0x0A:
  1527                           
  1528                           
  1529                           ;main.c: 204:                 readGatewayDone.Bit = 1;
  1530  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0222  1454               	bsf	_readGatewayDone,0
  1533                           
  1534                           ;main.c: 205:                 readGateway.Bit = 0;
  1535  0223  1053               	bcf	_readGateway,0
  1536  0224                     l4261:	
  1537                           
  1538                           ;main.c: 207:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1539  0224  3000               	movlw	0
  1540  0225  120A  158A  223E  120A  118A  	fcall	_ADC_Read
  1541  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1542  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1543  022C  0824               	movf	?_ADC_Read,w
  1544  022D  1683               	bsf	3,5	;RP0=1, select bank3
  1545  022E  1703               	bsf	3,6	;RP1=1, select bank3
  1546  022F  009E               	movwf	??_main^(0+384)
  1547  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0232  0825               	movf	?_ADC_Read+1,w
  1550  0233  1683               	bsf	3,5	;RP0=1, select bank3
  1551  0234  1703               	bsf	3,6	;RP1=1, select bank3
  1552  0235  009F               	movwf	(??_main^(0+384)+1)
  1553  0236  0D1F               	rlf	(??_main^(0+384)+1),w
  1554  0237  0C9F               	rrf	(??_main^(0+384)+1),f
  1555  0238  0C9E               	rrf	??_main^(0+384),f
  1556  0239  0D1F               	rlf	(??_main^(0+384)+1),w
  1557  023A  0C9F               	rrf	(??_main^(0+384)+1),f
  1558  023B  0C9E               	rrf	??_main^(0+384),f
  1559  023C  081E               	movf	??_main^(0+384),w
  1560  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1561  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1562  023F  00B4               	movwf	map@x
  1563  0240  1683               	bsf	3,5	;RP0=1, select bank3
  1564  0241  1703               	bsf	3,6	;RP1=1, select bank3
  1565  0242  081F               	movf	(??_main+1)^(0+384),w
  1566  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0245  00B5               	movwf	map@x+1
  1569  0246  3000               	movlw	0
  1570  0247  00B6               	movwf	map@in_min
  1571  0248  00B7               	movwf	map@in_min+1
  1572  0249  30FF               	movlw	255
  1573  024A  00B8               	movwf	map@in_max
  1574  024B  3000               	movlw	0
  1575  024C  00B9               	movwf	map@in_max+1
  1576  024D  30EC               	movlw	236
  1577  024E  00BA               	movwf	map@out_min
  1578  024F  30FF               	movlw	255
  1579  0250  00BB               	movwf	map@out_min+1
  1580  0251  303C               	movlw	60
  1581  0252  00BC               	movwf	map@out_max
  1582  0253  3000               	movlw	0
  1583  0254  00BD               	movwf	map@out_max+1
  1584  0255  120A  158A  22BC  120A  118A  	fcall	_map
  1585  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1586  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1587  025C  0834               	movf	?_map,w
  1588  025D  1683               	bsf	3,5	;RP0=1, select bank3
  1589  025E  1703               	bsf	3,6	;RP1=1, select bank3
  1590  025F  00A0               	movwf	(??_main+2)^(0+384)
  1591  0260  0820               	movf	(??_main+2)^(0+384),w
  1592  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0263  00CC               	movwf	_temp
  1595                           
  1596                           ;main.c: 208:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1597  0264  3001               	movlw	1
  1598  0265  120A  158A  223E  120A  118A  	fcall	_ADC_Read
  1599  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1600  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1601  026C  0824               	movf	?_ADC_Read,w
  1602  026D  1683               	bsf	3,5	;RP0=1, select bank3
  1603  026E  1703               	bsf	3,6	;RP1=1, select bank3
  1604  026F  009E               	movwf	??_main^(0+384)
  1605  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0272  0825               	movf	?_ADC_Read+1,w
  1608  0273  1683               	bsf	3,5	;RP0=1, select bank3
  1609  0274  1703               	bsf	3,6	;RP1=1, select bank3
  1610  0275  009F               	movwf	(??_main^(0+384)+1)
  1611  0276  0D1F               	rlf	(??_main^(0+384)+1),w
  1612  0277  0C9F               	rrf	(??_main^(0+384)+1),f
  1613  0278  0C9E               	rrf	??_main^(0+384),f
  1614  0279  0D1F               	rlf	(??_main^(0+384)+1),w
  1615  027A  0C9F               	rrf	(??_main^(0+384)+1),f
  1616  027B  0C9E               	rrf	??_main^(0+384),f
  1617  027C  081E               	movf	??_main^(0+384),w
  1618  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1619  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1620  027F  00B4               	movwf	map@x
  1621  0280  1683               	bsf	3,5	;RP0=1, select bank3
  1622  0281  1703               	bsf	3,6	;RP1=1, select bank3
  1623  0282  081F               	movf	(??_main+1)^(0+384),w
  1624  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1625  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1626  0285  00B5               	movwf	map@x+1
  1627  0286  3000               	movlw	0
  1628  0287  00B6               	movwf	map@in_min
  1629  0288  00B7               	movwf	map@in_min+1
  1630  0289  30FF               	movlw	255
  1631  028A  00B8               	movwf	map@in_max
  1632  028B  3000               	movlw	0
  1633  028C  00B9               	movwf	map@in_max+1
  1634  028D  3000               	movlw	0
  1635  028E  00BA               	movwf	map@out_min
  1636  028F  00BB               	movwf	map@out_min+1
  1637  0290  3064               	movlw	100
  1638  0291  00BC               	movwf	map@out_max
  1639  0292  3000               	movlw	0
  1640  0293  00BD               	movwf	map@out_max+1
  1641  0294  120A  158A  22BC  120A  118A  	fcall	_map
  1642  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1643  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1644  029B  0834               	movf	?_map,w
  1645  029C  1683               	bsf	3,5	;RP0=1, select bank3
  1646  029D  1703               	bsf	3,6	;RP1=1, select bank3
  1647  029E  00A0               	movwf	(??_main+2)^(0+384)
  1648  029F  0820               	movf	(??_main+2)^(0+384),w
  1649  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1650  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1651  02A2  00CB               	movwf	_umidita
  1652                           
  1653                           ;main.c: 209:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1654  02A3  3005               	movlw	5
  1655  02A4  120A  158A  223E  120A  118A  	fcall	_ADC_Read
  1656  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1657  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1658  02AB  0824               	movf	?_ADC_Read,w
  1659  02AC  1683               	bsf	3,5	;RP0=1, select bank3
  1660  02AD  1703               	bsf	3,6	;RP1=1, select bank3
  1661  02AE  009E               	movwf	??_main^(0+384)
  1662  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1663  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1664  02B1  0825               	movf	?_ADC_Read+1,w
  1665  02B2  1683               	bsf	3,5	;RP0=1, select bank3
  1666  02B3  1703               	bsf	3,6	;RP1=1, select bank3
  1667  02B4  009F               	movwf	(??_main^(0+384)+1)
  1668  02B5  0D1F               	rlf	(??_main^(0+384)+1),w
  1669  02B6  0C9F               	rrf	(??_main^(0+384)+1),f
  1670  02B7  0C9E               	rrf	??_main^(0+384),f
  1671  02B8  0D1F               	rlf	(??_main^(0+384)+1),w
  1672  02B9  0C9F               	rrf	(??_main^(0+384)+1),f
  1673  02BA  0C9E               	rrf	??_main^(0+384),f
  1674  02BB  081E               	movf	??_main^(0+384),w
  1675  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1676  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1677  02BE  00B4               	movwf	map@x
  1678  02BF  1683               	bsf	3,5	;RP0=1, select bank3
  1679  02C0  1703               	bsf	3,6	;RP1=1, select bank3
  1680  02C1  081F               	movf	(??_main+1)^(0+384),w
  1681  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1682  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1683  02C4  00B5               	movwf	map@x+1
  1684  02C5  3000               	movlw	0
  1685  02C6  00B6               	movwf	map@in_min
  1686  02C7  00B7               	movwf	map@in_min+1
  1687  02C8  30FF               	movlw	255
  1688  02C9  00B8               	movwf	map@in_max
  1689  02CA  3000               	movlw	0
  1690  02CB  00B9               	movwf	map@in_max+1
  1691  02CC  3000               	movlw	0
  1692  02CD  00BA               	movwf	map@out_min
  1693  02CE  00BB               	movwf	map@out_min+1
  1694  02CF  3064               	movlw	100
  1695  02D0  00BC               	movwf	map@out_max
  1696  02D1  3000               	movlw	0
  1697  02D2  00BD               	movwf	map@out_max+1
  1698  02D3  120A  158A  22BC  120A  118A  	fcall	_map
  1699  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1700  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1701  02DA  0834               	movf	?_map,w
  1702  02DB  1683               	bsf	3,5	;RP0=1, select bank3
  1703  02DC  1703               	bsf	3,6	;RP1=1, select bank3
  1704  02DD  00A0               	movwf	(??_main+2)^(0+384)
  1705  02DE  0820               	movf	(??_main+2)^(0+384),w
  1706  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1707  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1708  02E1  00CA               	movwf	_pressione
  1709  02E2                     l4263:	
  1710                           
  1711                           ;main.c: 210:                 sendByte(0x02, 0x00, temp);
  1712  02E2  01B8               	clrf	sendByte@byte1
  1713  02E3  084C               	movf	_temp,w
  1714  02E4  1683               	bsf	3,5	;RP0=1, select bank3
  1715  02E5  1703               	bsf	3,6	;RP1=1, select bank3
  1716  02E6  009E               	movwf	??_main^(0+384)
  1717  02E7  081E               	movf	??_main^(0+384),w
  1718  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1719  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1720  02EA  00B9               	movwf	sendByte@valore
  1721  02EB  3002               	movlw	2
  1722  02EC  120A  158A  228B  120A  118A  	fcall	_sendByte
  1723  02F1                     l4265:	
  1724                           
  1725                           ;main.c: 211:                 sendByte(0x04, 0x00, umidita);
  1726  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1727  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1728  02F3  01B8               	clrf	sendByte@byte1
  1729  02F4  084B               	movf	_umidita,w
  1730  02F5  1683               	bsf	3,5	;RP0=1, select bank3
  1731  02F6  1703               	bsf	3,6	;RP1=1, select bank3
  1732  02F7  009E               	movwf	??_main^(0+384)
  1733  02F8  081E               	movf	??_main^(0+384),w
  1734  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1735  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1736  02FB  00B9               	movwf	sendByte@valore
  1737  02FC  3004               	movlw	4
  1738  02FD  120A  158A  228B  120A  118A  	fcall	_sendByte
  1739  0302                     l4267:	
  1740                           
  1741                           ;main.c: 212:                 sendByte(0x06, 0x00, pressione);
  1742  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0304  01B8               	clrf	sendByte@byte1
  1745  0305  084A               	movf	_pressione,w
  1746  0306  1683               	bsf	3,5	;RP0=1, select bank3
  1747  0307  1703               	bsf	3,6	;RP1=1, select bank3
  1748  0308  009E               	movwf	??_main^(0+384)
  1749  0309  081E               	movf	??_main^(0+384),w
  1750  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1751  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1752  030C  00B9               	movwf	sendByte@valore
  1753  030D  3006               	movlw	6
  1754  030E  120A  158A  228B  120A  118A  	fcall	_sendByte
  1755  0313                     l4269:	
  1756                           
  1757                           ;main.c: 214:                 for (unsigned char i = 0; i < 5; i++)
  1758  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0315  01C1               	clrf	main@i_485
  1761  0316                     l4271:	
  1762  0316  3005               	movlw	5
  1763  0317  0241               	subwf	main@i_485,w
  1764  0318  1C03               	skipc
  1765  0319  2B1B               	goto	u3771
  1766  031A  2B1C               	goto	u3770
  1767  031B                     u3771:	
  1768  031B  2B1D               	goto	l4275
  1769  031C                     u3770:	
  1770  031C  2B55               	goto	l236
  1771  031D                     l4275:	
  1772                           
  1773                           ;main.c: 215:                 {;main.c: 216:                     dataFromGateway[i] = 0;
  1774  031D  0841               	movf	main@i_485,w
  1775  031E  3EAC               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1776  031F  0084               	movwf	4
  1777  0320  1383               	bcf	3,7	;select IRP bank1
  1778  0321  0180               	clrf	0
  1779  0322                     l4277:	
  1780                           
  1781                           ;main.c: 217:                 }
  1782  0322  3001               	movlw	1
  1783  0323  1683               	bsf	3,5	;RP0=1, select bank3
  1784  0324  1703               	bsf	3,6	;RP1=1, select bank3
  1785  0325  009E               	movwf	??_main^(0+384)
  1786  0326  081E               	movf	??_main^(0+384),w
  1787  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0329  07C1               	addwf	main@i_485,f
  1790  032A  2B16               	goto	l4271
  1791  032B                     l4281:	
  1792                           
  1793                           ;main.c: 221:                 if (timerReadFromGateway >= 4)
  1794  032B  3004               	movlw	4
  1795  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1796  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1797  032E  024D               	subwf	_timerReadFromGateway,w
  1798  032F  1C03               	skipc
  1799  0330  2B32               	goto	u3781
  1800  0331  2B33               	goto	u3780
  1801  0332                     u3781:	
  1802  0332  2B36               	goto	l4285
  1803  0333                     u3780:	
  1804  0333                     l4283:	
  1805                           
  1806                           ;main.c: 222:                 {;main.c: 223:                     readGatewayDone.Bit = 1
      +                          ;
  1807  0333  1454               	bsf	_readGatewayDone,0
  1808                           
  1809                           ;main.c: 224:                     readGatewayDone.Timeout = 1;
  1810  0334  14D4               	bsf	_readGatewayDone,1
  1811                           
  1812                           ;main.c: 225:                     readGateway.Bit = 0;
  1813  0335  1053               	bcf	_readGateway,0
  1814  0336                     l4285:	
  1815                           
  1816                           ;main.c: 228:                 if (dataFromGatewayIndex >= 15)
  1817  0336  300F               	movlw	15
  1818  0337  024E               	subwf	_dataFromGatewayIndex,w
  1819  0338  1C03               	skipc
  1820  0339  2B3B               	goto	u3791
  1821  033A  2B3C               	goto	u3790
  1822  033B                     u3791:	
  1823  033B  2B55               	goto	l236
  1824  033C                     u3790:	
  1825  033C                     l4287:	
  1826                           
  1827                           ;main.c: 229:                 {;main.c: 230:                     readGatewayDone.Bit = 1
      +                          ;
  1828  033C  1454               	bsf	_readGatewayDone,0
  1829                           
  1830                           ;main.c: 231:                     readGatewayDone.Timeout = 0;
  1831  033D  10D4               	bcf	_readGatewayDone,1
  1832                           
  1833                           ;main.c: 232:                     readGateway.Bit = 0;
  1834  033E  1053               	bcf	_readGateway,0
  1835  033F  2B55               	goto	l236
  1836  0340                     l4291:	
  1837  0340  1683               	bsf	3,5	;RP0=1, select bank1
  1838  0341  1303               	bcf	3,6	;RP1=0, select bank1
  1839  0342  082C               	movf	_dataFromGateway^(0+128),w
  1840  0343  397F               	andlw	127
  1841  0344  1683               	bsf	3,5	;RP0=1, select bank3
  1842  0345  1703               	bsf	3,6	;RP1=1, select bank3
  1843  0346  009E               	movwf	??_main^(0+384)
  1844  0347  019F               	clrf	(??_main^(0+384)+1)
  1845                           
  1846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1847                           ; Switch size 1, requested type "simple"
  1848                           ; Number of cases is 1, Range of values is 0 to 0
  1849                           ; switch strategies available:
  1850                           ; Name         Instructions Cycles
  1851                           ; simple_byte            4     3 (average)
  1852                           ; direct_byte           11     8 (fixed)
  1853                           ; jumptable            260     6 (fixed)
  1854                           ;	Chosen strategy is simple_byte
  1855  0348  081F               	movf	(??_main+1)^(0+384),w
  1856  0349  3A00               	xorlw	0	; case 0
  1857  034A  1903               	skipnz
  1858  034B  2B4D               	goto	l4563
  1859  034C  2B2B               	goto	l4281
  1860  034D                     l4563:	
  1861                           
  1862                           ; Switch size 1, requested type "simple"
  1863                           ; Number of cases is 2, Range of values is 8 to 10
  1864                           ; switch strategies available:
  1865                           ; Name         Instructions Cycles
  1866                           ; simple_byte            7     4 (average)
  1867                           ; direct_byte           20    11 (fixed)
  1868                           ; jumptable            263     9 (fixed)
  1869                           ;	Chosen strategy is simple_byte
  1870  034D  081E               	movf	??_main^(0+384),w
  1871  034E  3A08               	xorlw	8	; case 8
  1872  034F  1903               	skipnz
  1873  0350  288E               	goto	l238
  1874  0351  3A02               	xorlw	2	; case 10
  1875  0352  1903               	skipnz
  1876  0353  2A20               	goto	l252
  1877  0354  2B2B               	goto	l4281
  1878  0355                     l236:	
  1879                           ;main.c: 236:         }
  1880                           
  1881                           
  1882                           ;main.c: 239:         if (readGatewayDone.Bit)
  1883  0355  1C54               	btfss	_readGatewayDone,0
  1884  0356  2B58               	goto	u3801
  1885  0357  2B59               	goto	u3800
  1886  0358                     u3801:	
  1887  0358  2B71               	goto	l4305
  1888  0359                     u3800:	
  1889  0359                     l4293:	
  1890                           
  1891                           ;main.c: 240:         {;main.c: 242:             readGateway.Bit = 0;
  1892  0359  1053               	bcf	_readGateway,0
  1893  035A                     l4295:	
  1894                           
  1895                           ;main.c: 243:             dataFromGatewayIndex = 0;
  1896  035A  01CE               	clrf	_dataFromGatewayIndex
  1897  035B                     l4297:	
  1898                           
  1899                           ;main.c: 244:             readGatewayDone.Bit = 0;
  1900  035B  1054               	bcf	_readGatewayDone,0
  1901                           
  1902                           ;main.c: 245:             timerReadFromGateway = 0;
  1903  035C  01CD               	clrf	_timerReadFromGateway
  1904  035D                     l4299:	
  1905                           
  1906                           ;main.c: 248:             if (readGatewayDone.Timeout)
  1907  035D  1CD4               	btfss	_readGatewayDone,1
  1908  035E  2B60               	goto	u3811
  1909  035F  2B61               	goto	u3810
  1910  0360                     u3811:	
  1911  0360  2B63               	goto	l4303
  1912  0361                     u3810:	
  1913  0361                     l4301:	
  1914                           
  1915                           ;main.c: 249:             {;main.c: 250:                 readGatewayDone.Timeout = 0;
  1916  0361  10D4               	bcf	_readGatewayDone,1
  1917                           
  1918                           ;main.c: 251:             }
  1919  0362  2B71               	goto	l4305
  1920  0363                     l4303:	
  1921                           
  1922                           ;main.c: 254:             {;main.c: 256:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1923  0363  3060               	movlw	(low (_Semafori| 0))& (0+255)
  1924  0364  1683               	bsf	3,5	;RP0=1, select bank3
  1925  0365  1703               	bsf	3,6	;RP1=1, select bank3
  1926  0366  009E               	movwf	??_main^(0+384)
  1927  0367  081E               	movf	??_main^(0+384),w
  1928  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1930  036A  00AC               	movwf	SetReceivedTimes@_semafori
  1931  036B  30AC               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1932  036C  120A  158A  2591  120A  118A  	fcall	_SetReceivedTimes
  1933  0371                     l4305:	
  1934                           
  1935                           ;main.c: 262:         if (secondPassed.Bit && cycled.Bit)
  1936  0371  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0372  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0373  1C52               	btfss	_secondPassed,0
  1939  0374  2B76               	goto	u3821
  1940  0375  2B77               	goto	u3820
  1941  0376                     u3821:	
  1942  0376  2CF0               	goto	l4341
  1943  0377                     u3820:	
  1944  0377                     l4307:	
  1945  0377  1C51               	btfss	_cycled,0
  1946  0378  2B7A               	goto	u3831
  1947  0379  2B7B               	goto	u3830
  1948  037A                     u3831:	
  1949  037A  2CF0               	goto	l4341
  1950  037B                     u3830:	
  1951  037B                     l4309:	
  1952                           
  1953                           ;main.c: 263:         {;main.c: 264:             unsigned char i = 0;
  1954  037B  01C5               	clrf	main@i_487
  1955                           
  1956                           ;main.c: 265:             while (i < n_semafori)
  1957  037C  2C8D               	goto	l4335
  1958  037D                     l4311:	
  1959                           
  1960                           ;main.c: 266:             {;main.c: 267:                 if ((*Semafori[i]).times[0] != 
      +                          0)
  1961  037D  0845               	movf	main@i_487,w
  1962  037E  1683               	bsf	3,5	;RP0=1, select bank3
  1963  037F  1703               	bsf	3,6	;RP1=1, select bank3
  1964  0380  009E               	movwf	??_main^(0+384)
  1965  0381  071E               	addwf	??_main^(0+384),w
  1966  0382  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  1967  0383  0084               	movwf	4
  1968  0384  1383               	bcf	3,7	;select IRP bank0
  1969  0385  0800               	movf	0,w
  1970  0386  009F               	movwf	(??_main+1)^(0+384)
  1971  0387  0A84               	incf	4,f
  1972  0388  0800               	movf	0,w
  1973  0389  00A0               	movwf	((??_main+1)^(0+384)+1)
  1974  038A  081F               	movf	(??_main+1)^(0+384),w
  1975  038B  0084               	movwf	4
  1976  038C  1783               	bsf	3,7
  1977  038D  1C20               	btfss	(??_main+2)^(0+384),0
  1978  038E  1383               	bcf	3,7
  1979  038F  0800               	movf	0,w
  1980  0390  00A1               	movwf	(??_main+3)^(0+384)
  1981  0391  0A84               	incf	4,f
  1982  0392  0800               	movf	0,w
  1983  0393  00A2               	movwf	((??_main+3)^(0+384)+1)
  1984  0394  0821               	movf	(??_main+3)^(0+384),w
  1985  0395  0422               	iorwf	((??_main+3)^(0+384)+1),w
  1986  0396  1903               	btfsc	3,2
  1987  0397  2B99               	goto	u3841
  1988  0398  2B9A               	goto	u3840
  1989  0399                     u3841:	
  1990  0399  2C85               	goto	l4333
  1991  039A                     u3840:	
  1992  039A                     l4313:	
  1993                           
  1994                           ;main.c: 268:                 {;main.c: 269:                     time[i]++;
  1995  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1996  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1997  039C  0845               	movf	main@i_487,w
  1998  039D  1683               	bsf	3,5	;RP0=1, select bank3
  1999  039E  1703               	bsf	3,6	;RP1=1, select bank3
  2000  039F  009E               	movwf	??_main^(0+384)
  2001  03A0  071E               	addwf	??_main^(0+384),w
  2002  03A1  3EA0               	addlw	(low (_time| 0))& (0+255)
  2003  03A2  0084               	movwf	4
  2004  03A3  3001               	movlw	1
  2005  03A4  1383               	bcf	3,7	;select IRP bank1
  2006  03A5  0780               	addwf	0,f
  2007  03A6  0A84               	incf	4,f
  2008  03A7  1803               	skipnc
  2009  03A8  0A80               	incf	0,f
  2010                           
  2011                           ;main.c: 270:                     unsigned char lux_select = (*Semafori[i]).lux_select;
  2012  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2013  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2014  03AB  0845               	movf	main@i_487,w
  2015  03AC  1683               	bsf	3,5	;RP0=1, select bank3
  2016  03AD  1703               	bsf	3,6	;RP1=1, select bank3
  2017  03AE  009E               	movwf	??_main^(0+384)
  2018  03AF  071E               	addwf	??_main^(0+384),w
  2019  03B0  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  2020  03B1  0084               	movwf	4
  2021  03B2  0800               	movf	0,w
  2022  03B3  009F               	movwf	(??_main+1)^(0+384)
  2023  03B4  0A84               	incf	4,f
  2024  03B5  0800               	movf	0,w
  2025  03B6  00A0               	movwf	((??_main+1)^(0+384)+1)
  2026  03B7  081F               	movf	(??_main+1)^(0+384),w
  2027  03B8  3E0C               	addlw	12
  2028  03B9  00A1               	movwf	(??_main+3)^(0+384)
  2029  03BA  0820               	movf	(??_main+2)^(0+384),w
  2030  03BB  1803               	skipnc
  2031  03BC  3E01               	addlw	1
  2032  03BD  3E00               	addlw	0
  2033  03BE  00A2               	movwf	(??_main+4)^(0+384)
  2034  03BF  0821               	movf	(??_main+3)^(0+384),w
  2035  03C0  0084               	movwf	4
  2036  03C1  1783               	bsf	3,7
  2037  03C2  1C22               	btfss	(??_main+4)^(0+384),0
  2038  03C3  1383               	bcf	3,7
  2039  03C4  0800               	movf	0,w
  2040  03C5  00A3               	movwf	(??_main+5)^(0+384)
  2041  03C6  0823               	movf	(??_main+5)^(0+384),w
  2042  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2043  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2044  03C9  00C4               	movwf	main@lux_select
  2045                           
  2046                           ;main.c: 272:                     if ((*Semafori[i]).times[lux_select] - time[i] < 0)
  2047  03CA  0845               	movf	main@i_487,w
  2048  03CB  1683               	bsf	3,5	;RP0=1, select bank3
  2049  03CC  1703               	bsf	3,6	;RP1=1, select bank3
  2050  03CD  009E               	movwf	??_main^(0+384)
  2051  03CE  071E               	addwf	??_main^(0+384),w
  2052  03CF  3EA0               	addlw	(low (_time| 0))& (0+255)
  2053  03D0  0084               	movwf	4
  2054  03D1  1383               	bcf	3,7	;select IRP bank1
  2055  03D2  0800               	movf	0,w
  2056  03D3  009F               	movwf	(??_main+1)^(0+384)
  2057  03D4  0A84               	incf	4,f
  2058  03D5  0800               	movf	0,w
  2059  03D6  00A0               	movwf	((??_main+1)^(0+384)+1)
  2060  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2061  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2062  03D9  0845               	movf	main@i_487,w
  2063  03DA  1683               	bsf	3,5	;RP0=1, select bank3
  2064  03DB  1703               	bsf	3,6	;RP1=1, select bank3
  2065  03DC  00A1               	movwf	(??_main+3)^(0+384)
  2066  03DD  0721               	addwf	(??_main+3)^(0+384),w
  2067  03DE  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  2068  03DF  0084               	movwf	4
  2069  03E0  0800               	movf	0,w
  2070  03E1  00A2               	movwf	(??_main+4)^(0+384)
  2071  03E2  0A84               	incf	4,f
  2072  03E3  0800               	movf	0,w
  2073  03E4  00A3               	movwf	((??_main+4)^(0+384)+1)
  2074  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2075  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2076  03E7  0844               	movf	main@lux_select,w
  2077  03E8  1683               	bsf	3,5	;RP0=1, select bank3
  2078  03E9  1703               	bsf	3,6	;RP1=1, select bank3
  2079  03EA  00A4               	movwf	(??_main+6)^(0+384)
  2080  03EB  0724               	addwf	(??_main+6)^(0+384),w
  2081  03EC  0722               	addwf	(??_main+4)^(0+384),w
  2082  03ED  00A5               	movwf	(??_main+7)^(0+384)
  2083  03EE  0823               	movf	(??_main+5)^(0+384),w
  2084  03EF  1803               	skipnc
  2085  03F0  3E01               	addlw	1
  2086  03F1  00A6               	movwf	((??_main+7)^(0+384)+1)
  2087  03F2  0825               	movf	(??_main+7)^(0+384),w
  2088  03F3  0084               	movwf	4
  2089  03F4  1783               	bsf	3,7
  2090  03F5  1C26               	btfss	(??_main+8)^(0+384),0
  2091  03F6  1383               	bcf	3,7
  2092  03F7  0800               	movf	0,w
  2093  03F8  00A7               	movwf	(??_main+9)^(0+384)
  2094  03F9  0A84               	incf	4,f
  2095  03FA  0800               	movf	0,w
  2096  03FB  00A8               	movwf	((??_main+9)^(0+384)+1)
  2097  03FC  081F               	movf	(??_main+1)^(0+384),w
  2098  03FD  0227               	subwf	(??_main+9)^(0+384),w
  2099  03FE  00A9               	movwf	(??_main+11)^(0+384)
  2100  03FF  0820               	movf	(??_main+2)^(0+384),w
  2101  0400  1C03               	skipc
  2102  0401  0A20               	incf	(??_main+2)^(0+384),w
  2103  0402  0228               	subwf	(??_main+10)^(0+384),w
  2104  0403  00AA               	movwf	(??_main+12)^(0+384)
  2105  0404  1FAA               	btfss	(??_main+12)^(0+384),7
  2106  0405  2C07               	goto	u3851
  2107  0406  2C08               	goto	u3850
  2108  0407                     u3851:	
  2109  0407  2C2F               	goto	l4327
  2110  0408                     u3850:	
  2111  0408                     l4315:	
  2112                           
  2113                           ;main.c: 273:                     {;main.c: 274:                         lux_select++;
  2114  0408  3001               	movlw	1
  2115  0409  009E               	movwf	??_main^(0+384)
  2116  040A  081E               	movf	??_main^(0+384),w
  2117  040B  1283               	bcf	3,5	;RP0=0, select bank0
  2118  040C  1303               	bcf	3,6	;RP1=0, select bank0
  2119  040D  07C4               	addwf	main@lux_select,f
  2120  040E                     l4317:	
  2121                           
  2122                           ;main.c: 275:                         time[i] = 1;
  2123  040E  0845               	movf	main@i_487,w
  2124  040F  1683               	bsf	3,5	;RP0=1, select bank3
  2125  0410  1703               	bsf	3,6	;RP1=1, select bank3
  2126  0411  009E               	movwf	??_main^(0+384)
  2127  0412  071E               	addwf	??_main^(0+384),w
  2128  0413  3EA0               	addlw	(low (_time| 0))& (0+255)
  2129  0414  0084               	movwf	4
  2130  0415  3001               	movlw	1
  2131  0416  1383               	bcf	3,7	;select IRP bank1
  2132  0417  0080               	movwf	0
  2133  0418  0A84               	incf	4,f
  2134  0419  3000               	movlw	0
  2135  041A  0080               	movwf	0
  2136  041B                     l4319:	
  2137                           
  2138                           ;main.c: 277:                         if (lux_select >= 3)
  2139  041B  3003               	movlw	3
  2140  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2141  041D  1303               	bcf	3,6	;RP1=0, select bank0
  2142  041E  0244               	subwf	main@lux_select,w
  2143  041F  1C03               	skipc
  2144  0420  2C22               	goto	u3861
  2145  0421  2C23               	goto	u3860
  2146  0422                     u3861:	
  2147  0422  2C2F               	goto	l4327
  2148  0423                     u3860:	
  2149  0423                     l4321:	
  2150                           
  2151                           ;main.c: 278:                         {;main.c: 279:                             lux_sel
      +                          ect = 0;
  2152  0423  01C4               	clrf	main@lux_select
  2153  0424                     l4323:	
  2154                           
  2155                           ;main.c: 281:                             if (i == 0)
  2156  0424  0845               	movf	main@i_487,w
  2157  0425  1D03               	btfss	3,2
  2158  0426  2C28               	goto	u3871
  2159  0427  2C29               	goto	u3870
  2160  0428                     u3871:	
  2161  0428  2C2F               	goto	l4327
  2162  0429                     u3870:	
  2163  0429                     l4325:	
  2164                           
  2165                           ;main.c: 282:                             {;main.c: 283:                                
      +                           UpdateTimes(Semafori);
  2166  0429  3060               	movlw	(low (_Semafori| 0))& (0+255)
  2167  042A  120A  118A  2658  120A  118A  	fcall	_UpdateTimes
  2168  042F                     l4327:	
  2169                           
  2170                           ;main.c: 288:                     if(lux_select!=(*Semafori[i]).lux_select)
  2171  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0431  0845               	movf	main@i_487,w
  2174  0432  1683               	bsf	3,5	;RP0=1, select bank3
  2175  0433  1703               	bsf	3,6	;RP1=1, select bank3
  2176  0434  009E               	movwf	??_main^(0+384)
  2177  0435  071E               	addwf	??_main^(0+384),w
  2178  0436  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  2179  0437  0084               	movwf	4
  2180  0438  1383               	bcf	3,7	;select IRP bank0
  2181  0439  0800               	movf	0,w
  2182  043A  009F               	movwf	(??_main+1)^(0+384)
  2183  043B  0A84               	incf	4,f
  2184  043C  0800               	movf	0,w
  2185  043D  00A0               	movwf	((??_main+1)^(0+384)+1)
  2186  043E  081F               	movf	(??_main+1)^(0+384),w
  2187  043F  3E0C               	addlw	12
  2188  0440  00A1               	movwf	(??_main+3)^(0+384)
  2189  0441  0820               	movf	(??_main+2)^(0+384),w
  2190  0442  1803               	skipnc
  2191  0443  3E01               	addlw	1
  2192  0444  3E00               	addlw	0
  2193  0445  00A2               	movwf	(??_main+4)^(0+384)
  2194  0446  0821               	movf	(??_main+3)^(0+384),w
  2195  0447  0084               	movwf	4
  2196  0448  1783               	bsf	3,7
  2197  0449  1C22               	btfss	(??_main+4)^(0+384),0
  2198  044A  1383               	bcf	3,7
  2199  044B  0800               	movf	0,w
  2200  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2201  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2202  044E  0644               	xorwf	main@lux_select,w
  2203  044F  1903               	skipnz
  2204  0450  2C52               	goto	u3881
  2205  0451  2C53               	goto	u3880
  2206  0452                     u3881:	
  2207  0452  2C85               	goto	l4333
  2208  0453                     u3880:	
  2209  0453                     l4329:	
  2210                           
  2211                           ;main.c: 289:                     {;main.c: 290:                         luciSemaforo(i,
      +                           lux_select);
  2212  0453  0844               	movf	main@lux_select,w
  2213  0454  1683               	bsf	3,5	;RP0=1, select bank3
  2214  0455  1703               	bsf	3,6	;RP1=1, select bank3
  2215  0456  009E               	movwf	??_main^(0+384)
  2216  0457  081E               	movf	??_main^(0+384),w
  2217  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2219  045A  00A4               	movwf	luciSemaforo@lux
  2220  045B  0845               	movf	main@i_487,w
  2221  045C  120A  158A  23BD  120A  118A  	fcall	_luciSemaforo
  2222  0461                     l4331:	
  2223                           
  2224                           ;main.c: 291:                         (*Semafori[i]).lux_select = lux_select;
  2225  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0463  0844               	movf	main@lux_select,w
  2228  0464  1683               	bsf	3,5	;RP0=1, select bank3
  2229  0465  1703               	bsf	3,6	;RP1=1, select bank3
  2230  0466  009E               	movwf	??_main^(0+384)
  2231  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0469  0845               	movf	main@i_487,w
  2234  046A  1683               	bsf	3,5	;RP0=1, select bank3
  2235  046B  1703               	bsf	3,6	;RP1=1, select bank3
  2236  046C  009F               	movwf	(??_main+1)^(0+384)
  2237  046D  071F               	addwf	(??_main+1)^(0+384),w
  2238  046E  3E60               	addlw	(low (_Semafori| 0))& (0+255)
  2239  046F  0084               	movwf	4
  2240  0470  1383               	bcf	3,7	;select IRP bank0
  2241  0471  0800               	movf	0,w
  2242  0472  00A0               	movwf	(??_main+2)^(0+384)
  2243  0473  0A84               	incf	4,f
  2244  0474  0800               	movf	0,w
  2245  0475  00A1               	movwf	((??_main+2)^(0+384)+1)
  2246  0476  0820               	movf	(??_main+2)^(0+384),w
  2247  0477  3E0C               	addlw	12
  2248  0478  00A2               	movwf	(??_main+4)^(0+384)
  2249  0479  0821               	movf	(??_main+3)^(0+384),w
  2250  047A  1803               	skipnc
  2251  047B  3E01               	addlw	1
  2252  047C  3E00               	addlw	0
  2253  047D  00A3               	movwf	(??_main+5)^(0+384)
  2254  047E  0822               	movf	(??_main+4)^(0+384),w
  2255  047F  0084               	movwf	4
  2256  0480  1783               	bsf	3,7
  2257  0481  1C23               	btfss	(??_main+5)^(0+384),0
  2258  0482  1383               	bcf	3,7
  2259  0483  081E               	movf	??_main^(0+384),w
  2260  0484  0080               	movwf	0
  2261  0485                     l4333:	
  2262                           
  2263                           ;main.c: 297:                 i++;
  2264  0485  3001               	movlw	1
  2265  0486  1683               	bsf	3,5	;RP0=1, select bank3
  2266  0487  1703               	bsf	3,6	;RP1=1, select bank3
  2267  0488  009E               	movwf	??_main^(0+384)
  2268  0489  081E               	movf	??_main^(0+384),w
  2269  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2270  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2271  048C  07C5               	addwf	main@i_487,f
  2272  048D                     l4335:	
  2273  048D  3002               	movlw	2
  2274  048E  0245               	subwf	main@i_487,w
  2275  048F  1C03               	skipc
  2276  0490  2C92               	goto	u3891
  2277  0491  2C93               	goto	u3890
  2278  0492                     u3891:	
  2279  0492  2B7D               	goto	l4311
  2280  0493                     u3890:	
  2281  0493                     l4337:	
  2282                           
  2283                           ;main.c: 300:             GetDigits(&centinaia, &decine, &unita, (*Semafori[0]).times[(*
      +                          Semafori[0]).lux_select] - time[0]);
  2284  0493  305E               	movlw	(low (_decine| 0))& (0+255)
  2285  0494  1683               	bsf	3,5	;RP0=1, select bank3
  2286  0495  1703               	bsf	3,6	;RP1=1, select bank3
  2287  0496  009E               	movwf	??_main^(0+384)
  2288  0497  081E               	movf	??_main^(0+384),w
  2289  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2291  049A  00B4               	movwf	GetDigits@decine
  2292  049B  305F               	movlw	(low (_unita| 0))& (0+255)
  2293  049C  1683               	bsf	3,5	;RP0=1, select bank3
  2294  049D  1703               	bsf	3,6	;RP1=1, select bank3
  2295  049E  009F               	movwf	(??_main+1)^(0+384)
  2296  049F  081F               	movf	(??_main+1)^(0+384),w
  2297  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2298  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2299  04A2  00B5               	movwf	GetDigits@unita
  2300  04A3  0860               	movf	_Semafori,w
  2301  04A4  3E0C               	addlw	12
  2302  04A5  1683               	bsf	3,5	;RP0=1, select bank3
  2303  04A6  1703               	bsf	3,6	;RP1=1, select bank3
  2304  04A7  00A0               	movwf	(??_main+2)^(0+384)
  2305  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2306  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2307  04AA  0861               	movf	_Semafori+1,w
  2308  04AB  1803               	skipnc
  2309  04AC  3E01               	addlw	1
  2310  04AD  3E00               	addlw	0
  2311  04AE  1683               	bsf	3,5	;RP0=1, select bank3
  2312  04AF  1703               	bsf	3,6	;RP1=1, select bank3
  2313  04B0  00A1               	movwf	(??_main+3)^(0+384)
  2314  04B1  0820               	movf	(??_main+2)^(0+384),w
  2315  04B2  0084               	movwf	4
  2316  04B3  1783               	bsf	3,7
  2317  04B4  1C21               	btfss	(??_main+3)^(0+384),0
  2318  04B5  1383               	bcf	3,7
  2319  04B6  0800               	movf	0,w
  2320  04B7  00A2               	movwf	(??_main+4)^(0+384)
  2321  04B8  0722               	addwf	(??_main+4)^(0+384),w
  2322  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2323  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2324  04BB  0760               	addwf	_Semafori,w
  2325  04BC  1683               	bsf	3,5	;RP0=1, select bank3
  2326  04BD  1703               	bsf	3,6	;RP1=1, select bank3
  2327  04BE  00A3               	movwf	(??_main+5)^(0+384)
  2328  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2329  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2330  04C1  0861               	movf	_Semafori+1,w
  2331  04C2  1803               	skipnc
  2332  04C3  3E01               	addlw	1
  2333  04C4  1683               	bsf	3,5	;RP0=1, select bank3
  2334  04C5  1703               	bsf	3,6	;RP1=1, select bank3
  2335  04C6  00A4               	movwf	((??_main+5)^(0+384)+1)
  2336  04C7  0823               	movf	(??_main+5)^(0+384),w
  2337  04C8  0084               	movwf	4
  2338  04C9  1783               	bsf	3,7
  2339  04CA  1C24               	btfss	(??_main+6)^(0+384),0
  2340  04CB  1383               	bcf	3,7
  2341  04CC  0800               	movf	0,w
  2342  04CD  00A5               	movwf	(??_main+7)^(0+384)
  2343  04CE  0A84               	incf	4,f
  2344  04CF  0800               	movf	0,w
  2345  04D0  00A6               	movwf	((??_main+7)^(0+384)+1)
  2346  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  2347  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  2348  04D3  0820               	movf	_time^(0+128),w
  2349  04D4  1683               	bsf	3,5	;RP0=1, select bank3
  2350  04D5  1703               	bsf	3,6	;RP1=1, select bank3
  2351  04D6  0225               	subwf	(??_main+7)^(0+384),w
  2352  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2353  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2354  04D9  00B6               	movwf	GetDigits@Time
  2355  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2356  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2357  04DC  0821               	movf	(_time+1)^(0+128),w
  2358  04DD  1C03               	skipc
  2359  04DE  0A21               	incf	(_time+1)^(0+128),w
  2360  04DF  1683               	bsf	3,5	;RP0=1, select bank3
  2361  04E0  1703               	bsf	3,6	;RP1=1, select bank3
  2362  04E1  0226               	subwf	(??_main+8)^(0+384),w
  2363  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2364  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2365  04E4  00B7               	movwf	GetDigits@Time+1
  2366  04E5  305D               	movlw	(low (_centinaia| 0))& (0+255)
  2367  04E6  120A  158A  25FF  120A  118A  	fcall	_GetDigits
  2368  04EB                     l4339:	
  2369                           
  2370                           ;main.c: 301:             ShowDigitsOnDisplay();
  2371  04EB  120A  118A  2772  120A  118A  	fcall	_ShowDigitsOnDisplay
  2372  04F0                     l4341:	
  2373                           
  2374                           ;main.c: 308:         if (secondPassed.Bit && cycled.Bit)
  2375  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2376  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2377  04F2  1C52               	btfss	_secondPassed,0
  2378  04F3  2CF5               	goto	u3901
  2379  04F4  2CF6               	goto	u3900
  2380  04F5                     u3901:	
  2381  04F5  2CFC               	goto	l270
  2382  04F6                     u3900:	
  2383  04F6                     l4343:	
  2384  04F6  1C51               	btfss	_cycled,0
  2385  04F7  2CF9               	goto	u3911
  2386  04F8  2CFA               	goto	u3910
  2387  04F9                     u3911:	
  2388  04F9  2CFC               	goto	l270
  2389  04FA                     u3910:	
  2390  04FA                     l4345:	
  2391                           
  2392                           ;main.c: 309:         {;main.c: 310:             secondPassed.Bit = 0;
  2393  04FA  1052               	bcf	_secondPassed,0
  2394                           
  2395                           ;main.c: 311:             cycled.Bit = 0;
  2396  04FB  1051               	bcf	_cycled,0
  2397  04FC                     l270:	
  2398                           ;main.c: 312:         }
  2399                           
  2400                           
  2401                           ;main.c: 313:         if (secondPassed.Bit && !cycled.Bit)
  2402  04FC  1C52               	btfss	_secondPassed,0
  2403  04FD  2CFF               	goto	u3921
  2404  04FE  2D00               	goto	u3920
  2405  04FF                     u3921:	
  2406  04FF  2889               	goto	l4211
  2407  0500                     u3920:	
  2408  0500                     l4347:	
  2409  0500  1851               	btfsc	_cycled,0
  2410  0501  2D03               	goto	u3931
  2411  0502  2D04               	goto	u3930
  2412  0503                     u3931:	
  2413  0503  2889               	goto	l4211
  2414  0504                     u3930:	
  2415  0504                     l4349:	
  2416                           
  2417                           ;main.c: 314:         {;main.c: 315:             cycled.Bit = 1;
  2418  0504  1451               	bsf	_cycled,0
  2419  0505  2889               	goto	l4211
  2420  0506  120A  118A  2810   	ljmp	start
  2421  0509                     __end_of_main:	
  2422                           
  2423                           	psect	text1
  2424  0A8B                     __ptext1:	
  2425 ;; *************** function _sendByte *****************
  2426 ;; Defined at:
  2427 ;;		line 379 in file "main.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  byte0           1    wreg     unsigned char 
  2430 ;;  byte1           1   24[BANK0 ] unsigned char 
  2431 ;;  valore          1   25[BANK0 ] unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  byte0           1   29[BANK0 ] unsigned char 
  2434 ;;  i               1   31[BANK0 ] unsigned char 
  2435 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2436 ;;		 -> BuildByte@txByte(5), 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       2       0       0       0
  2447 ;;      Locals:         0       3       0       0       0
  2448 ;;      Temps:          0       3       0       0       0
  2449 ;;      Totals:         0       8       0       0       0
  2450 ;;Total ram usage:        8 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    4
  2453 ;; This function calls:
  2454 ;;		_BuildByte
  2455 ;;		_UART_TxChar
  2456 ;; This function is called by:
  2457 ;;		_main
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           
  2462                           ;psect for function _sendByte
  2463  0A8B                     _sendByte:	
  2464                           
  2465                           ;incstack = 0
  2466                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2467                           ;sendByte@byte0 stored from wreg
  2468  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0A8D  00BD               	movwf	sendByte@byte0
  2471  0A8E                     l4075:	
  2472                           
  2473                           ;main.c: 379: void sendByte(char byte0, char byte1, char valore);main.c: 380: {;main.c: 
      +                          381:     char *txByte;;main.c: 382:     txByte = BuildByte(byte0, byte1, valore);
  2474  0A8E  0838               	movf	sendByte@byte1,w
  2475  0A8F  00BA               	movwf	??_sendByte
  2476  0A90  083A               	movf	??_sendByte,w
  2477  0A91  00A4               	movwf	BuildByte@byte1
  2478  0A92  0839               	movf	sendByte@valore,w
  2479  0A93  00BB               	movwf	??_sendByte+1
  2480  0A94  083B               	movf	??_sendByte+1,w
  2481  0A95  00A5               	movwf	BuildByte@valore
  2482  0A96  083D               	movf	sendByte@byte0,w
  2483  0A97  120A  158A  2738  120A  158A  	fcall	_BuildByte
  2484  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0A9E  00BC               	movwf	??_sendByte+2
  2487  0A9F  083C               	movf	??_sendByte+2,w
  2488  0AA0  00BE               	movwf	sendByte@txByte
  2489  0AA1                     l4077:	
  2490                           
  2491                           ;main.c: 384:     for (unsigned char i = 0; i < 5; i++)
  2492  0AA1  01BF               	clrf	sendByte@i
  2493  0AA2                     l4083:	
  2494                           
  2495                           ;main.c: 385:     {;main.c: 386:         UART_TxChar(*(txByte++));
  2496  0AA2  083E               	movf	sendByte@txByte,w
  2497  0AA3  0084               	movwf	4
  2498  0AA4  1383               	bcf	3,7	;select IRP bank0
  2499  0AA5  0800               	movf	0,w
  2500  0AA6  120A  158A  21E1  120A  158A  	fcall	_UART_TxChar
  2501  0AAB                     l4085:	
  2502  0AAB  3001               	movlw	1
  2503  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0AAD  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0AAE  00BA               	movwf	??_sendByte
  2506  0AAF  083A               	movf	??_sendByte,w
  2507  0AB0  07BE               	addwf	sendByte@txByte,f
  2508  0AB1                     l4087:	
  2509                           
  2510                           ;main.c: 387:     }
  2511  0AB1  3001               	movlw	1
  2512  0AB2  00BA               	movwf	??_sendByte
  2513  0AB3  083A               	movf	??_sendByte,w
  2514  0AB4  07BF               	addwf	sendByte@i,f
  2515  0AB5                     l4089:	
  2516  0AB5  3005               	movlw	5
  2517  0AB6  023F               	subwf	sendByte@i,w
  2518  0AB7  1C03               	skipc
  2519  0AB8  2ABA               	goto	u3641
  2520  0AB9  2ABB               	goto	u3640
  2521  0ABA                     u3641:	
  2522  0ABA  2AA2               	goto	l4083
  2523  0ABB                     u3640:	
  2524  0ABB                     l309:	
  2525  0ABB  0008               	return
  2526  0ABC                     __end_of_sendByte:	
  2527                           
  2528                           	psect	text2
  2529  09E1                     __ptext2:	
  2530 ;; *************** function _UART_TxChar *****************
  2531 ;; Defined at:
  2532 ;;		line 354 in file "main.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  ch              1    wreg     unsigned char 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  ch              1    4[BANK0 ] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         0       1       0       0       0
  2548 ;;      Temps:          0       0       0       0       0
  2549 ;;      Totals:         0       1       0       0       0
  2550 ;;Total ram usage:        1 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    3
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_sendByte
  2557 ;;		_UART_Write_Text
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _UART_TxChar
  2563  09E1                     _UART_TxChar:	
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _UART_TxChar: [wreg]
  2567                           ;UART_TxChar@ch stored from wreg
  2568  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  2569  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  2570  09E3  00A4               	movwf	UART_TxChar@ch
  2571  09E4                     l3801:	
  2572  09E4                     l289:	
  2573                           ;main.c: 357:         ;
  2574                           
  2575                           
  2576                           ;main.c: 356:     while (!TXIF)
  2577  09E4  1E0C               	btfss	12,4	;volatile
  2578  09E5  29E7               	goto	u3181
  2579  09E6  29E8               	goto	u3180
  2580  09E7                     u3181:	
  2581  09E7  29E4               	goto	l289
  2582  09E8                     u3180:	
  2583  09E8                     l291:	
  2584                           
  2585                           ;main.c: 358:     TXIF = 0;
  2586  09E8  120C               	bcf	12,4	;volatile
  2587  09E9                     l3803:	
  2588                           
  2589                           ;main.c: 359:     TXREG = ch;
  2590  09E9  0824               	movf	UART_TxChar@ch,w
  2591  09EA  0099               	movwf	25	;volatile
  2592  09EB                     l292:	
  2593  09EB  0008               	return
  2594  09EC                     __end_of_UART_TxChar:	
  2595                           
  2596                           	psect	text3
  2597  0F38                     __ptext3:	
  2598 ;; *************** function _BuildByte *****************
  2599 ;; Defined at:
  2600 ;;		line 2 in file "./CustomLib/Serial.h"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  byte0           1    wreg     unsigned char 
  2603 ;;  byte1           1    4[BANK0 ] unsigned char 
  2604 ;;  valore          1    5[BANK0 ] unsigned char 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  byte0           1    8[BANK0 ] unsigned char 
  2607 ;;  y               2   18[BANK0 ] int 
  2608 ;;  y               2   16[BANK0 ] int 
  2609 ;;  i               2   22[BANK0 ] int 
  2610 ;;  i               2   20[BANK0 ] int 
  2611 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2612 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2613 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      PTR unsigned char 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2623 ;;      Params:         0       2       0       0       0
  2624 ;;      Locals:         0      16       0       0       0
  2625 ;;      Temps:          0       2       0       0       0
  2626 ;;      Totals:         0      20       0       0       0
  2627 ;;Total ram usage:       20 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    3
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_sendByte
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _BuildByte
  2639  0F38                     _BuildByte:	
  2640                           
  2641                           ;incstack = 0
  2642                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2643                           ;BuildByte@byte0 stored from wreg
  2644  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0F3A  00A8               	movwf	BuildByte@byte0
  2647  0F3B                     l3719:	
  2648                           
  2649                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2650  0F3B  0828               	movf	BuildByte@byte0,w
  2651  0F3C  397F               	andlw	127
  2652  0F3D  00A6               	movwf	??_BuildByte
  2653  0F3E  0826               	movf	??_BuildByte,w
  2654  0F3F  00A9               	movwf	BuildByte@txByte
  2655                           
  2656                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2657  0F40  0824               	movf	BuildByte@byte1,w
  2658  0F41  397F               	andlw	127
  2659  0F42  00A6               	movwf	??_BuildByte
  2660  0F43  0826               	movf	??_BuildByte,w
  2661  0F44  00AA               	movwf	BuildByte@txByte+1
  2662                           
  2663                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2664  0F45  0825               	movf	BuildByte@valore,w
  2665  0F46  397F               	andlw	127
  2666  0F47  00A6               	movwf	??_BuildByte
  2667  0F48  0826               	movf	??_BuildByte,w
  2668  0F49  00AB               	movwf	BuildByte@txByte+2
  2669  0F4A                     l3721:	
  2670                           
  2671                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2672  0F4A  0825               	movf	BuildByte@valore,w
  2673  0F4B  00A6               	movwf	??_BuildByte
  2674  0F4C  3007               	movlw	7
  2675  0F4D                     u3075:	
  2676  0F4D  1003               	clrc
  2677  0F4E  0CA6               	rrf	??_BuildByte,f
  2678  0F4F  3EFF               	addlw	-1
  2679  0F50  1D03               	skipz
  2680  0F51  2F4D               	goto	u3075
  2681  0F52  0826               	movf	??_BuildByte,w
  2682  0F53  397F               	andlw	127
  2683  0F54  00A7               	movwf	??_BuildByte+1
  2684  0F55  0827               	movf	??_BuildByte+1,w
  2685  0F56  00AC               	movwf	BuildByte@txByte+3
  2686  0F57                     l3723:	
  2687                           
  2688                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2689  0F57  01AE               	clrf	BuildByte@sommaRow
  2690  0F58                     l3725:	
  2691                           
  2692                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2693  0F58  01AF               	clrf	BuildByte@sommaColumn
  2694  0F59                     l3727:	
  2695                           
  2696                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2697  0F59  01B4               	clrf	BuildByte@i
  2698  0F5A  01B5               	clrf	BuildByte@i+1
  2699  0F5B                     l3733:	
  2700                           
  2701                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2702  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0F5D  01B0               	clrf	BuildByte@y
  2705  0F5E  01B1               	clrf	BuildByte@y+1
  2706  0F5F                     l3739:	
  2707                           
  2708                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2709  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0F61  0834               	movf	BuildByte@i,w
  2712  0F62  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2713  0F63  0084               	movwf	4
  2714  0F64  1383               	bcf	3,7	;select IRP bank0
  2715  0F65  0800               	movf	0,w
  2716  0F66  00A6               	movwf	??_BuildByte
  2717  0F67  0A30               	incf	BuildByte@y,w
  2718  0F68  2F6B               	goto	u3084
  2719  0F69                     u3085:	
  2720  0F69  1003               	clrc
  2721  0F6A  0CA6               	rrf	??_BuildByte,f
  2722  0F6B                     u3084:	
  2723  0F6B  3EFF               	addlw	-1
  2724  0F6C  1D03               	skipz
  2725  0F6D  2F69               	goto	u3085
  2726  0F6E  0826               	movf	??_BuildByte,w
  2727  0F6F  3901               	andlw	1
  2728  0F70  00A7               	movwf	??_BuildByte+1
  2729  0F71  0827               	movf	??_BuildByte+1,w
  2730  0F72  07AE               	addwf	BuildByte@sommaRow,f
  2731  0F73                     l3741:	
  2732                           
  2733                           ;./CustomLib/Serial.h: 18:         }
  2734  0F73  3001               	movlw	1
  2735  0F74  07B0               	addwf	BuildByte@y,f
  2736  0F75  1803               	skipnc
  2737  0F76  0AB1               	incf	BuildByte@y+1,f
  2738  0F77  3000               	movlw	0
  2739  0F78  07B1               	addwf	BuildByte@y+1,f
  2740  0F79                     l3743:	
  2741  0F79  0831               	movf	BuildByte@y+1,w
  2742  0F7A  3A80               	xorlw	128
  2743  0F7B  00FF               	movwf	btemp+1
  2744  0F7C  3080               	movlw	128
  2745  0F7D  027F               	subwf	btemp+1,w
  2746  0F7E  1D03               	skipz
  2747  0F7F  2F82               	goto	u3095
  2748  0F80  3008               	movlw	8
  2749  0F81  0230               	subwf	BuildByte@y,w
  2750  0F82                     u3095:	
  2751  0F82  1C03               	skipc
  2752  0F83  2F85               	goto	u3091
  2753  0F84  2F86               	goto	u3090
  2754  0F85                     u3091:	
  2755  0F85  2F5F               	goto	l3739
  2756  0F86                     u3090:	
  2757  0F86                     l123:	
  2758                           
  2759                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2760  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0F88  1C2E               	btfss	BuildByte@sommaRow,0
  2763  0F89  2F8B               	goto	u3101
  2764  0F8A  2F8C               	goto	u3100
  2765  0F8B                     u3101:	
  2766  0F8B  2F94               	goto	l3747
  2767  0F8C                     u3100:	
  2768  0F8C                     l3745:	
  2769                           
  2770                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2771  0F8C  3080               	movlw	128
  2772  0F8D  00A6               	movwf	??_BuildByte
  2773  0F8E  0834               	movf	BuildByte@i,w
  2774  0F8F  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2775  0F90  0084               	movwf	4
  2776  0F91  0826               	movf	??_BuildByte,w
  2777  0F92  1383               	bcf	3,7	;select IRP bank0
  2778  0F93  0780               	addwf	0,f
  2779  0F94                     l3747:	
  2780                           
  2781                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2782  0F94  01AE               	clrf	BuildByte@sommaRow
  2783  0F95                     l3751:	
  2784                           ;./CustomLib/Serial.h: 23:         }
  2785                           
  2786                           
  2787                           ;./CustomLib/Serial.h: 28:     }
  2788  0F95  3001               	movlw	1
  2789  0F96  07B4               	addwf	BuildByte@i,f
  2790  0F97  1803               	skipnc
  2791  0F98  0AB5               	incf	BuildByte@i+1,f
  2792  0F99  3000               	movlw	0
  2793  0F9A  07B5               	addwf	BuildByte@i+1,f
  2794  0F9B                     l3753:	
  2795  0F9B  0835               	movf	BuildByte@i+1,w
  2796  0F9C  3A80               	xorlw	128
  2797  0F9D  00FF               	movwf	btemp+1
  2798  0F9E  3080               	movlw	128
  2799  0F9F  027F               	subwf	btemp+1,w
  2800  0FA0  1D03               	skipz
  2801  0FA1  2FA4               	goto	u3115
  2802  0FA2  3004               	movlw	4
  2803  0FA3  0234               	subwf	BuildByte@i,w
  2804  0FA4                     u3115:	
  2805  0FA4  1C03               	skipc
  2806  0FA5  2FA7               	goto	u3111
  2807  0FA6  2FA8               	goto	u3110
  2808  0FA7                     u3111:	
  2809  0FA7  2F5B               	goto	l3733
  2810  0FA8                     u3110:	
  2811  0FA8                     l3755:	
  2812                           
  2813                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2814  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0FAA  01B6               	clrf	BuildByte@i_355
  2817  0FAB  01B7               	clrf	BuildByte@i_355+1
  2818  0FAC                     l3761:	
  2819                           
  2820                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2821  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  2822  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  2823  0FAE  01B2               	clrf	BuildByte@y_356
  2824  0FAF  01B3               	clrf	BuildByte@y_356+1
  2825  0FB0                     l3767:	
  2826                           
  2827                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2828  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  2829  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  2830  0FB2  0832               	movf	BuildByte@y_356,w
  2831  0FB3  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2832  0FB4  0084               	movwf	4
  2833  0FB5  1383               	bcf	3,7	;select IRP bank0
  2834  0FB6  0800               	movf	0,w
  2835  0FB7  00A6               	movwf	??_BuildByte
  2836  0FB8  0A36               	incf	BuildByte@i_355,w
  2837  0FB9  2FBC               	goto	u3124
  2838  0FBA                     u3125:	
  2839  0FBA  1003               	clrc
  2840  0FBB  0CA6               	rrf	??_BuildByte,f
  2841  0FBC                     u3124:	
  2842  0FBC  3EFF               	addlw	-1
  2843  0FBD  1D03               	skipz
  2844  0FBE  2FBA               	goto	u3125
  2845  0FBF  0826               	movf	??_BuildByte,w
  2846  0FC0  3901               	andlw	1
  2847  0FC1  00A7               	movwf	??_BuildByte+1
  2848  0FC2  0827               	movf	??_BuildByte+1,w
  2849  0FC3  07AF               	addwf	BuildByte@sommaColumn,f
  2850  0FC4                     l3769:	
  2851                           
  2852                           ;./CustomLib/Serial.h: 37:         }
  2853  0FC4  3001               	movlw	1
  2854  0FC5  07B2               	addwf	BuildByte@y_356,f
  2855  0FC6  1803               	skipnc
  2856  0FC7  0AB3               	incf	BuildByte@y_356+1,f
  2857  0FC8  3000               	movlw	0
  2858  0FC9  07B3               	addwf	BuildByte@y_356+1,f
  2859  0FCA                     l3771:	
  2860  0FCA  0833               	movf	BuildByte@y_356+1,w
  2861  0FCB  3A80               	xorlw	128
  2862  0FCC  00FF               	movwf	btemp+1
  2863  0FCD  3080               	movlw	128
  2864  0FCE  027F               	subwf	btemp+1,w
  2865  0FCF  1D03               	skipz
  2866  0FD0  2FD3               	goto	u3135
  2867  0FD1  3004               	movlw	4
  2868  0FD2  0232               	subwf	BuildByte@y_356,w
  2869  0FD3                     u3135:	
  2870  0FD3  1C03               	skipc
  2871  0FD4  2FD6               	goto	u3131
  2872  0FD5  2FD7               	goto	u3130
  2873  0FD6                     u3131:	
  2874  0FD6  2FB0               	goto	l3767
  2875  0FD7                     u3130:	
  2876  0FD7                     l129:	
  2877                           
  2878                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2879  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0FD9  1C2F               	btfss	BuildByte@sommaColumn,0
  2882  0FDA  2FDC               	goto	u3141
  2883  0FDB  2FDD               	goto	u3140
  2884  0FDC                     u3141:	
  2885  0FDC  2FEA               	goto	l3775
  2886  0FDD                     u3140:	
  2887  0FDD                     l3773:	
  2888                           
  2889                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2890  0FDD  3001               	movlw	1
  2891  0FDE  00A6               	movwf	??_BuildByte
  2892  0FDF  0A36               	incf	BuildByte@i_355,w
  2893  0FE0  2FE3               	goto	u3154
  2894  0FE1                     u3155:	
  2895  0FE1  1003               	clrc
  2896  0FE2  0DA6               	rlf	??_BuildByte,f
  2897  0FE3                     u3154:	
  2898  0FE3  3EFF               	addlw	-1
  2899  0FE4  1D03               	skipz
  2900  0FE5  2FE1               	goto	u3155
  2901  0FE6  0826               	movf	??_BuildByte,w
  2902  0FE7  00A7               	movwf	??_BuildByte+1
  2903  0FE8  0827               	movf	??_BuildByte+1,w
  2904  0FE9  07AD               	addwf	BuildByte@txByte+4,f
  2905  0FEA                     l3775:	
  2906                           
  2907                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2908  0FEA  01AF               	clrf	BuildByte@sommaColumn
  2909  0FEB                     l3779:	
  2910                           ;./CustomLib/Serial.h: 42:         }
  2911                           
  2912                           
  2913                           ;./CustomLib/Serial.h: 47:     }
  2914  0FEB  3001               	movlw	1
  2915  0FEC  07B6               	addwf	BuildByte@i_355,f
  2916  0FED  1803               	skipnc
  2917  0FEE  0AB7               	incf	BuildByte@i_355+1,f
  2918  0FEF  3000               	movlw	0
  2919  0FF0  07B7               	addwf	BuildByte@i_355+1,f
  2920  0FF1                     l3781:	
  2921  0FF1  0837               	movf	BuildByte@i_355+1,w
  2922  0FF2  3A80               	xorlw	128
  2923  0FF3  00FF               	movwf	btemp+1
  2924  0FF4  3080               	movlw	128
  2925  0FF5  027F               	subwf	btemp+1,w
  2926  0FF6  1D03               	skipz
  2927  0FF7  2FFA               	goto	u3165
  2928  0FF8  3008               	movlw	8
  2929  0FF9  0236               	subwf	BuildByte@i_355,w
  2930  0FFA                     u3165:	
  2931  0FFA  1C03               	skipc
  2932  0FFB  2FFD               	goto	u3161
  2933  0FFC  2FFE               	goto	u3160
  2934  0FFD                     u3161:	
  2935  0FFD  2FAC               	goto	l3761
  2936  0FFE                     u3160:	
  2937  0FFE                     l3783:	
  2938                           
  2939                           ;./CustomLib/Serial.h: 49:     return txByte;
  2940  0FFE  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2941  0FFF                     l132:	
  2942  0FFF  0008               	return
  2943  1000                     __end_of_BuildByte:	
  2944                           
  2945                           	psect	text4
  2946  0ABC                     __ptext4:	
  2947 ;; *************** function _map *****************
  2948 ;; Defined at:
  2949 ;;		line 1 in file "./CustomLib/Conversions.h"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  x               2   20[BANK0 ] int 
  2952 ;;  in_min          2   22[BANK0 ] int 
  2953 ;;  in_max          2   24[BANK0 ] int 
  2954 ;;  out_min         2   26[BANK0 ] int 
  2955 ;;  out_max         2   28[BANK0 ] int 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2   20[BANK0 ] int 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, pclath, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         0      10       0       0       0
  2968 ;;      Locals:         0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0
  2970 ;;      Totals:         0      10       0       0       0
  2971 ;;Total ram usage:       10 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    4
  2974 ;; This function calls:
  2975 ;;		___awdiv
  2976 ;;		___wmul
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _map
  2984  0ABC                     _map:	
  2985  0ABC                     l3959:	
  2986                           ;incstack = 0
  2987                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2988                           
  2989                           
  2990                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2991  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0ABE  0836               	movf	map@in_min,w
  2994  0ABF  0238               	subwf	map@in_max,w
  2995  0AC0  00AB               	movwf	___awdiv@divisor
  2996  0AC1  0837               	movf	map@in_min+1,w
  2997  0AC2  1C03               	skipc
  2998  0AC3  0A37               	incf	map@in_min+1,w
  2999  0AC4  0239               	subwf	map@in_max+1,w
  3000  0AC5  00AC               	movwf	___awdiv@divisor+1
  3001  0AC6  0836               	movf	map@in_min,w
  3002  0AC7  0234               	subwf	map@x,w
  3003  0AC8  00A4               	movwf	___wmul@multiplier
  3004  0AC9  0837               	movf	map@in_min+1,w
  3005  0ACA  1C03               	skipc
  3006  0ACB  0A37               	incf	map@in_min+1,w
  3007  0ACC  0235               	subwf	map@x+1,w
  3008  0ACD  00A5               	movwf	___wmul@multiplier+1
  3009  0ACE  083A               	movf	map@out_min,w
  3010  0ACF  023C               	subwf	map@out_max,w
  3011  0AD0  00A6               	movwf	___wmul@multiplicand
  3012  0AD1  083B               	movf	map@out_min+1,w
  3013  0AD2  1C03               	skipc
  3014  0AD3  0A3B               	incf	map@out_min+1,w
  3015  0AD4  023D               	subwf	map@out_max+1,w
  3016  0AD5  00A7               	movwf	___wmul@multiplicand+1
  3017  0AD6  120A  158A  2264  120A  158A  	fcall	___wmul
  3018  0ADB  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0ADC  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0ADD  0825               	movf	?___wmul+1,w
  3021  0ADE  00AE               	movwf	___awdiv@dividend+1
  3022  0ADF  0824               	movf	?___wmul,w
  3023  0AE0  00AD               	movwf	___awdiv@dividend
  3024  0AE1  120A  158A  2528  120A  158A  	fcall	___awdiv
  3025  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0AE8  083A               	movf	map@out_min,w
  3028  0AE9  072B               	addwf	?___awdiv,w
  3029  0AEA  00B4               	movwf	?_map
  3030  0AEB  083B               	movf	map@out_min+1,w
  3031  0AEC  1803               	skipnc
  3032  0AED  0A3B               	incf	map@out_min+1,w
  3033  0AEE  072C               	addwf	?___awdiv+1,w
  3034  0AEF  00B5               	movwf	?_map+1
  3035  0AF0                     l81:	
  3036  0AF0  0008               	return
  3037  0AF1                     __end_of_map:	
  3038                           
  3039                           	psect	text5
  3040  0A64                     __ptext5:	
  3041 ;; *************** function ___wmul *****************
  3042 ;; Defined at:
  3043 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3046 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  product         2    8[BANK0 ] unsigned int 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  2    4[BANK0 ] unsigned int 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3058 ;;      Params:         0       4       0       0       0
  3059 ;;      Locals:         0       2       0       0       0
  3060 ;;      Temps:          0       0       0       0       0
  3061 ;;      Totals:         0       6       0       0       0
  3062 ;;Total ram usage:        6 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    3
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_map
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function ___wmul
  3074  0A64                     ___wmul:	
  3075  0A64                     l3809:	
  3076                           ;incstack = 0
  3077                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3078                           
  3079  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  3080  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0A66  01A8               	clrf	___wmul@product
  3082  0A67  01A9               	clrf	___wmul@product+1
  3083  0A68                     l3811:	
  3084  0A68  1C24               	btfss	___wmul@multiplier,0
  3085  0A69  2A6B               	goto	u3191
  3086  0A6A  2A6C               	goto	u3190
  3087  0A6B                     u3191:	
  3088  0A6B  2A72               	goto	l445
  3089  0A6C                     u3190:	
  3090  0A6C                     l3813:	
  3091  0A6C  0826               	movf	___wmul@multiplicand,w
  3092  0A6D  07A8               	addwf	___wmul@product,f
  3093  0A6E  1803               	skipnc
  3094  0A6F  0AA9               	incf	___wmul@product+1,f
  3095  0A70  0827               	movf	___wmul@multiplicand+1,w
  3096  0A71  07A9               	addwf	___wmul@product+1,f
  3097  0A72                     l445:	
  3098  0A72  3001               	movlw	1
  3099  0A73                     u3205:	
  3100  0A73  1003               	clrc
  3101  0A74  0DA6               	rlf	___wmul@multiplicand,f
  3102  0A75  0DA7               	rlf	___wmul@multiplicand+1,f
  3103  0A76  3EFF               	addlw	-1
  3104  0A77  1D03               	skipz
  3105  0A78  2A73               	goto	u3205
  3106  0A79                     l3815:	
  3107  0A79  3001               	movlw	1
  3108  0A7A                     u3215:	
  3109  0A7A  1003               	clrc
  3110  0A7B  0CA5               	rrf	___wmul@multiplier+1,f
  3111  0A7C  0CA4               	rrf	___wmul@multiplier,f
  3112  0A7D  3EFF               	addlw	-1
  3113  0A7E  1D03               	skipz
  3114  0A7F  2A7A               	goto	u3215
  3115  0A80                     l3817:	
  3116  0A80  0824               	movf	___wmul@multiplier,w
  3117  0A81  0425               	iorwf	___wmul@multiplier+1,w
  3118  0A82  1D03               	btfss	3,2
  3119  0A83  2A85               	goto	u3221
  3120  0A84  2A86               	goto	u3220
  3121  0A85                     u3221:	
  3122  0A85  2A68               	goto	l3811
  3123  0A86                     u3220:	
  3124  0A86                     l3819:	
  3125  0A86  0829               	movf	___wmul@product+1,w
  3126  0A87  00A5               	movwf	?___wmul+1
  3127  0A88  0828               	movf	___wmul@product,w
  3128  0A89  00A4               	movwf	?___wmul
  3129  0A8A                     l447:	
  3130  0A8A  0008               	return
  3131  0A8B                     __end_of___wmul:	
  3132                           
  3133                           	psect	text6
  3134  0BBD                     __ptext6:	
  3135 ;; *************** function _luciSemaforo *****************
  3136 ;; Defined at:
  3137 ;;		line 419 in file "main.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  index           1    wreg     unsigned char 
  3140 ;;  lux             1    4[BANK0 ] unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  index           1    7[BANK0 ] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       1       0       0       0
  3153 ;;      Locals:         0       1       0       0       0
  3154 ;;      Temps:          0       2       0       0       0
  3155 ;;      Totals:         0       4       0       0       0
  3156 ;;Total ram usage:        4 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    3
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_main
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _luciSemaforo
  3168  0BBD                     _luciSemaforo:	
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3172                           ;luciSemaforo@index stored from wreg
  3173  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0BBF  00A7               	movwf	luciSemaforo@index
  3176  0BC0                     l4101:	
  3177                           
  3178                           ;main.c: 419: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 420: {;m
      +                          ain.c: 421:     switch (index)
  3179  0BC0  2BFF               	goto	l4113
  3180  0BC1                     l326:	
  3181                           ;main.c: 425:         {;main.c: 426:         case 0:
  3182                           
  3183                           
  3184                           ;main.c: 427:             PORTCbits.RC1 = 0;
  3185  0BC1  1087               	bcf	7,1	;volatile
  3186                           
  3187                           ;main.c: 428:             PORTCbits.RC3 = 0;
  3188  0BC2  1187               	bcf	7,3	;volatile
  3189                           
  3190                           ;main.c: 429:             PORTCbits.RC0 = 1;
  3191  0BC3  1407               	bsf	7,0	;volatile
  3192                           
  3193                           ;main.c: 430:             break;
  3194  0BC4  2C0F               	goto	l337
  3195  0BC5                     l328:	
  3196                           ;main.c: 431:         case 1:
  3197                           
  3198                           
  3199                           ;main.c: 432:             PORTCbits.RC0 = 0;
  3200  0BC5  1007               	bcf	7,0	;volatile
  3201                           
  3202                           ;main.c: 433:             PORTCbits.RC3 = 0;
  3203  0BC6  1187               	bcf	7,3	;volatile
  3204                           
  3205                           ;main.c: 434:             PORTCbits.RC1 = 1;
  3206  0BC7  1487               	bsf	7,1	;volatile
  3207                           
  3208                           ;main.c: 435:             break;
  3209  0BC8  2C0F               	goto	l337
  3210  0BC9                     l329:	
  3211                           ;main.c: 436:         case 2:
  3212                           
  3213                           
  3214                           ;main.c: 437:             PORTCbits.RC0 = 0;
  3215  0BC9  1007               	bcf	7,0	;volatile
  3216                           
  3217                           ;main.c: 438:             PORTCbits.RC1 = 0;
  3218  0BCA  1087               	bcf	7,1	;volatile
  3219                           
  3220                           ;main.c: 439:             PORTCbits.RC3 = 1;
  3221  0BCB  1587               	bsf	7,3	;volatile
  3222                           
  3223                           ;main.c: 440:             break;
  3224  0BCC  2C0F               	goto	l337
  3225  0BCD                     l4105:	
  3226  0BCD  0824               	movf	luciSemaforo@lux,w
  3227  0BCE  00A5               	movwf	??_luciSemaforo
  3228  0BCF  01A6               	clrf	??_luciSemaforo+1
  3229                           
  3230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3231                           ; Switch size 1, requested type "simple"
  3232                           ; Number of cases is 1, Range of values is 0 to 0
  3233                           ; switch strategies available:
  3234                           ; Name         Instructions Cycles
  3235                           ; simple_byte            4     3 (average)
  3236                           ; direct_byte           11     8 (fixed)
  3237                           ; jumptable            260     6 (fixed)
  3238                           ;	Chosen strategy is simple_byte
  3239  0BD0  0826               	movf	??_luciSemaforo+1,w
  3240  0BD1  3A00               	xorlw	0	; case 0
  3241  0BD2  1903               	skipnz
  3242  0BD3  2BD5               	goto	l4565
  3243  0BD4  2C0F               	goto	l337
  3244  0BD5                     l4565:	
  3245                           
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 3, Range of values is 0 to 2
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte           10     6 (average)
  3251                           ; direct_byte           17     8 (fixed)
  3252                           ; jumptable            260     6 (fixed)
  3253                           ;	Chosen strategy is simple_byte
  3254  0BD5  0825               	movf	??_luciSemaforo,w
  3255  0BD6  3A00               	xorlw	0	; case 0
  3256  0BD7  1903               	skipnz
  3257  0BD8  2BC1               	goto	l326
  3258  0BD9  3A01               	xorlw	1	; case 1
  3259  0BDA  1903               	skipnz
  3260  0BDB  2BC5               	goto	l328
  3261  0BDC  3A03               	xorlw	3	; case 2
  3262  0BDD  1903               	skipnz
  3263  0BDE  2BC9               	goto	l329
  3264  0BDF  2C0F               	goto	l337
  3265  0BE0                     l333:	
  3266                           ;main.c: 446:         {;main.c: 447:         case 0:
  3267                           
  3268                           
  3269                           ;main.c: 448:             PORTBbits.RB1 = 0;
  3270  0BE0  1086               	bcf	6,1	;volatile
  3271                           
  3272                           ;main.c: 449:             PORTBbits.RB6 = 0;
  3273  0BE1  1306               	bcf	6,6	;volatile
  3274                           
  3275                           ;main.c: 450:             PORTBbits.RB7 = 1;
  3276  0BE2  1786               	bsf	6,7	;volatile
  3277                           
  3278                           ;main.c: 451:             break;
  3279  0BE3  2C0F               	goto	l337
  3280  0BE4                     l335:	
  3281                           ;main.c: 452:         case 1:
  3282                           
  3283                           
  3284                           ;main.c: 453:             PORTBbits.RB7 = 0;
  3285  0BE4  1386               	bcf	6,7	;volatile
  3286                           
  3287                           ;main.c: 454:             PORTBbits.RB6 = 0;
  3288  0BE5  1306               	bcf	6,6	;volatile
  3289                           
  3290                           ;main.c: 455:             PORTBbits.RB1 = 1;
  3291  0BE6  1486               	bsf	6,1	;volatile
  3292                           
  3293                           ;main.c: 456:             break;
  3294  0BE7  2C0F               	goto	l337
  3295  0BE8                     l336:	
  3296                           ;main.c: 457:         case 2:
  3297                           
  3298                           
  3299                           ;main.c: 458:             PORTBbits.RB7 = 0;
  3300  0BE8  1386               	bcf	6,7	;volatile
  3301                           
  3302                           ;main.c: 459:             PORTBbits.RB1 = 0;
  3303  0BE9  1086               	bcf	6,1	;volatile
  3304                           
  3305                           ;main.c: 460:             PORTBbits.RB6 = 1;
  3306  0BEA  1706               	bsf	6,6	;volatile
  3307                           
  3308                           ;main.c: 461:             break;
  3309  0BEB  2C0F               	goto	l337
  3310  0BEC                     l4109:	
  3311  0BEC  0824               	movf	luciSemaforo@lux,w
  3312  0BED  00A5               	movwf	??_luciSemaforo
  3313  0BEE  01A6               	clrf	??_luciSemaforo+1
  3314                           
  3315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3316                           ; Switch size 1, requested type "simple"
  3317                           ; Number of cases is 1, Range of values is 0 to 0
  3318                           ; switch strategies available:
  3319                           ; Name         Instructions Cycles
  3320                           ; simple_byte            4     3 (average)
  3321                           ; direct_byte           11     8 (fixed)
  3322                           ; jumptable            260     6 (fixed)
  3323                           ;	Chosen strategy is simple_byte
  3324  0BEF  0826               	movf	??_luciSemaforo+1,w
  3325  0BF0  3A00               	xorlw	0	; case 0
  3326  0BF1  1903               	skipnz
  3327  0BF2  2BF4               	goto	l4567
  3328  0BF3  2C0F               	goto	l337
  3329  0BF4                     l4567:	
  3330                           
  3331                           ; Switch size 1, requested type "simple"
  3332                           ; Number of cases is 3, Range of values is 0 to 2
  3333                           ; switch strategies available:
  3334                           ; Name         Instructions Cycles
  3335                           ; simple_byte           10     6 (average)
  3336                           ; direct_byte           17     8 (fixed)
  3337                           ; jumptable            260     6 (fixed)
  3338                           ;	Chosen strategy is simple_byte
  3339  0BF4  0825               	movf	??_luciSemaforo,w
  3340  0BF5  3A00               	xorlw	0	; case 0
  3341  0BF6  1903               	skipnz
  3342  0BF7  2BE0               	goto	l333
  3343  0BF8  3A01               	xorlw	1	; case 1
  3344  0BF9  1903               	skipnz
  3345  0BFA  2BE4               	goto	l335
  3346  0BFB  3A03               	xorlw	3	; case 2
  3347  0BFC  1903               	skipnz
  3348  0BFD  2BE8               	goto	l336
  3349  0BFE  2C0F               	goto	l337
  3350  0BFF                     l4113:	
  3351  0BFF  0827               	movf	luciSemaforo@index,w
  3352  0C00  00A5               	movwf	??_luciSemaforo
  3353  0C01  01A6               	clrf	??_luciSemaforo+1
  3354                           
  3355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3356                           ; Switch size 1, requested type "simple"
  3357                           ; Number of cases is 1, Range of values is 0 to 0
  3358                           ; switch strategies available:
  3359                           ; Name         Instructions Cycles
  3360                           ; simple_byte            4     3 (average)
  3361                           ; direct_byte           11     8 (fixed)
  3362                           ; jumptable            260     6 (fixed)
  3363                           ;	Chosen strategy is simple_byte
  3364  0C02  0826               	movf	??_luciSemaforo+1,w
  3365  0C03  3A00               	xorlw	0	; case 0
  3366  0C04  1903               	skipnz
  3367  0C05  2C07               	goto	l4569
  3368  0C06  2C0F               	goto	l337
  3369  0C07                     l4569:	
  3370                           
  3371                           ; Switch size 1, requested type "simple"
  3372                           ; Number of cases is 2, Range of values is 0 to 1
  3373                           ; switch strategies available:
  3374                           ; Name         Instructions Cycles
  3375                           ; simple_byte            7     4 (average)
  3376                           ; direct_byte           14     8 (fixed)
  3377                           ; jumptable            260     6 (fixed)
  3378                           ;	Chosen strategy is simple_byte
  3379  0C07  0825               	movf	??_luciSemaforo,w
  3380  0C08  3A00               	xorlw	0	; case 0
  3381  0C09  1903               	skipnz
  3382  0C0A  2BCD               	goto	l4105
  3383  0C0B  3A01               	xorlw	1	; case 1
  3384  0C0C  1903               	skipnz
  3385  0C0D  2BEC               	goto	l4109
  3386  0C0E  2C0F               	goto	l337
  3387  0C0F                     l337:	
  3388  0C0F  0008               	return
  3389  0C10                     __end_of_luciSemaforo:	
  3390                           
  3391                           	psect	text7
  3392  09EC                     __ptext7:	
  3393 ;; *************** function _init_ADC *****************
  3394 ;; Defined at:
  3395 ;;		line 323 in file "main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0
  3411 ;;      Temps:          0       1       0       0       0
  3412 ;;      Totals:         0       1       0       0       0
  3413 ;;Total ram usage:        1 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    3
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _init_ADC
  3425  09EC                     _init_ADC:	
  3426  09EC                     l4057:	
  3427                           ;incstack = 0
  3428                           ; Regs used in _init_ADC: [wreg+status,2]
  3429                           
  3430                           
  3431                           ;main.c: 325:     TRISA = 0xE3;
  3432  09EC  30E3               	movlw	227
  3433  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  3434  09EE  1303               	bcf	3,6	;RP1=0, select bank1
  3435  09EF  0085               	movwf	5	;volatile
  3436  09F0                     l4059:	
  3437                           
  3438                           ;main.c: 326:     ADCON0 = 0x00;
  3439  09F0  1283               	bcf	3,5	;RP0=0, select bank0
  3440  09F1  1303               	bcf	3,6	;RP1=0, select bank0
  3441  09F2  019F               	clrf	31	;volatile
  3442  09F3                     l4061:	
  3443                           
  3444                           ;main.c: 327:     ADCON1 = 0x80;
  3445  09F3  3080               	movlw	128
  3446  09F4  1683               	bsf	3,5	;RP0=1, select bank1
  3447  09F5  1303               	bcf	3,6	;RP1=0, select bank1
  3448  09F6  009F               	movwf	31	;volatile
  3449  09F7                     l4063:	
  3450                           
  3451                           ;main.c: 328:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3452  09F7  3019               	movlw	25
  3453  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  3454  09F9  1303               	bcf	3,6	;RP1=0, select bank0
  3455  09FA  00A4               	movwf	??_init_ADC
  3456  09FB                     u3957:	
  3457  09FB  0BA4               	decfsz	??_init_ADC,f
  3458  09FC  29FB               	goto	u3957
  3459  09FD  29FE               	nop2
  3460  09FE                     l277:	
  3461  09FE  0008               	return
  3462  09FF                     __end_of_init_ADC:	
  3463                           
  3464                           	psect	text8
  3465  0658                     __ptext8:	
  3466 ;; *************** function _UpdateTimes *****************
  3467 ;; Defined at:
  3468 ;;		line 4 in file "./CustomLib/TrafficLight.h"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  _semafori       1    wreg     PTR PTR struct .
  3471 ;;		 -> Semafori(8), 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  _semafori       1   23[BANK0 ] PTR PTR struct .
  3474 ;;		 -> Semafori(8), 
  3475 ;;  i               1   22[BANK0 ] unsigned char 
  3476 ;;  l               1   24[BANK0 ] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3486 ;;      Params:         0       0       0       0       0
  3487 ;;      Locals:         0       3       0       0       0
  3488 ;;      Temps:          0      18       0       0       0
  3489 ;;      Totals:         0      21       0       0       0
  3490 ;;Total ram usage:       21 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    3
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _UpdateTimes
  3502  0658                     _UpdateTimes:	
  3503                           
  3504                           ;incstack = 0
  3505                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3506                           ;UpdateTimes@_semafori stored from wreg
  3507  0658  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0659  1303               	bcf	3,6	;RP1=0, select bank0
  3509  065A  00B7               	movwf	UpdateTimes@_semafori
  3510  065B                     l3975:	
  3511                           
  3512                           ;./CustomLib/TrafficLight.h: 4: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 5: {;./CustomLib/TrafficLight.h: 7:     for (unsigned char l = 0; l < n_semafo
      +                          ri; l++)
  3513  065B  01B8               	clrf	UpdateTimes@l
  3514  065C                     l3981:	
  3515                           
  3516                           ;./CustomLib/TrafficLight.h: 8:     {;./CustomLib/TrafficLight.h: 9:         for(unsigne
      +                          d char i = 0; i < 3; i++)
  3517  065C  01B6               	clrf	UpdateTimes@i
  3518  065D                     l3987:	
  3519                           
  3520                           ;./CustomLib/TrafficLight.h: 10:         {;./CustomLib/TrafficLight.h: 11:             i
      +                          f( (*(_semafori)[l]).times[i] != (*(_semafori)[l]).new_times[i] )
  3521  065D  0838               	movf	UpdateTimes@l,w
  3522  065E  00A4               	movwf	??_UpdateTimes
  3523  065F  0724               	addwf	??_UpdateTimes,w
  3524  0660  0737               	addwf	UpdateTimes@_semafori,w
  3525  0661  00A5               	movwf	??_UpdateTimes+1
  3526  0662  0825               	movf	??_UpdateTimes+1,w
  3527  0663  0084               	movwf	4
  3528  0664  1383               	bcf	3,7	;select IRP bank0
  3529  0665  0800               	movf	0,w
  3530  0666  00A6               	movwf	??_UpdateTimes+2
  3531  0667  0A84               	incf	4,f
  3532  0668  0800               	movf	0,w
  3533  0669  00A7               	movwf	??_UpdateTimes+3
  3534  066A  0836               	movf	UpdateTimes@i,w
  3535  066B  00A8               	movwf	??_UpdateTimes+4
  3536  066C  0728               	addwf	??_UpdateTimes+4,w
  3537  066D  3E06               	addlw	6
  3538  066E  0726               	addwf	??_UpdateTimes+2,w
  3539  066F  00A9               	movwf	??_UpdateTimes+5
  3540  0670  0827               	movf	??_UpdateTimes+3,w
  3541  0671  1803               	skipnc
  3542  0672  3E01               	addlw	1
  3543  0673  00AA               	movwf	??_UpdateTimes+6
  3544  0674  0829               	movf	??_UpdateTimes+5,w
  3545  0675  0084               	movwf	4
  3546  0676  1783               	bsf	3,7
  3547  0677  1C2A               	btfss	??_UpdateTimes+6,0
  3548  0678  1383               	bcf	3,7
  3549  0679  0800               	movf	0,w
  3550  067A  00AB               	movwf	??_UpdateTimes+7
  3551  067B  0A84               	incf	4,f
  3552  067C  0800               	movf	0,w
  3553  067D  00AC               	movwf	??_UpdateTimes+8
  3554  067E  0838               	movf	UpdateTimes@l,w
  3555  067F  00AD               	movwf	??_UpdateTimes+9
  3556  0680  072D               	addwf	??_UpdateTimes+9,w
  3557  0681  0737               	addwf	UpdateTimes@_semafori,w
  3558  0682  00AE               	movwf	??_UpdateTimes+10
  3559  0683  082E               	movf	??_UpdateTimes+10,w
  3560  0684  0084               	movwf	4
  3561  0685  1383               	bcf	3,7	;select IRP bank0
  3562  0686  0800               	movf	0,w
  3563  0687  00AF               	movwf	??_UpdateTimes+11
  3564  0688  0A84               	incf	4,f
  3565  0689  0800               	movf	0,w
  3566  068A  00B0               	movwf	??_UpdateTimes+12
  3567  068B  0836               	movf	UpdateTimes@i,w
  3568  068C  00B1               	movwf	??_UpdateTimes+13
  3569  068D  0731               	addwf	??_UpdateTimes+13,w
  3570  068E  072F               	addwf	??_UpdateTimes+11,w
  3571  068F  00B2               	movwf	??_UpdateTimes+14
  3572  0690  0830               	movf	??_UpdateTimes+12,w
  3573  0691  1803               	skipnc
  3574  0692  3E01               	addlw	1
  3575  0693  00B3               	movwf	??_UpdateTimes+15
  3576  0694  0832               	movf	??_UpdateTimes+14,w
  3577  0695  0084               	movwf	4
  3578  0696  1783               	bsf	3,7
  3579  0697  1C33               	btfss	??_UpdateTimes+15,0
  3580  0698  1383               	bcf	3,7
  3581  0699  0800               	movf	0,w
  3582  069A  00B4               	movwf	??_UpdateTimes+16
  3583  069B  0A84               	incf	4,f
  3584  069C  0800               	movf	0,w
  3585  069D  00B5               	movwf	??_UpdateTimes+17
  3586  069E  082C               	movf	??_UpdateTimes+8,w
  3587  069F  0635               	xorwf	??_UpdateTimes+17,w
  3588  06A0  1D03               	skipz
  3589  06A1  2EA4               	goto	u3555
  3590  06A2  082B               	movf	??_UpdateTimes+7,w
  3591  06A3  0634               	xorwf	??_UpdateTimes+16,w
  3592  06A4                     u3555:	
  3593  06A4  1903               	skipnz
  3594  06A5  2EA7               	goto	u3551
  3595  06A6  2EA8               	goto	u3550
  3596  06A7                     u3551:	
  3597  06A7  2EE9               	goto	l3991
  3598  06A8                     u3550:	
  3599  06A8                     l3989:	
  3600                           
  3601                           ;./CustomLib/TrafficLight.h: 12:             {;./CustomLib/TrafficLight.h: 13:          
      +                                 (*(_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3602  06A8  0838               	movf	UpdateTimes@l,w
  3603  06A9  00A4               	movwf	??_UpdateTimes
  3604  06AA  0724               	addwf	??_UpdateTimes,w
  3605  06AB  0737               	addwf	UpdateTimes@_semafori,w
  3606  06AC  00A5               	movwf	??_UpdateTimes+1
  3607  06AD  0825               	movf	??_UpdateTimes+1,w
  3608  06AE  0084               	movwf	4
  3609  06AF  1383               	bcf	3,7	;select IRP bank0
  3610  06B0  0800               	movf	0,w
  3611  06B1  00A6               	movwf	??_UpdateTimes+2
  3612  06B2  0A84               	incf	4,f
  3613  06B3  0800               	movf	0,w
  3614  06B4  00A7               	movwf	??_UpdateTimes+3
  3615  06B5  0836               	movf	UpdateTimes@i,w
  3616  06B6  00A8               	movwf	??_UpdateTimes+4
  3617  06B7  0728               	addwf	??_UpdateTimes+4,w
  3618  06B8  3E06               	addlw	6
  3619  06B9  0726               	addwf	??_UpdateTimes+2,w
  3620  06BA  00A9               	movwf	??_UpdateTimes+5
  3621  06BB  0827               	movf	??_UpdateTimes+3,w
  3622  06BC  1803               	skipnc
  3623  06BD  3E01               	addlw	1
  3624  06BE  00AA               	movwf	??_UpdateTimes+6
  3625  06BF  0829               	movf	??_UpdateTimes+5,w
  3626  06C0  0084               	movwf	4
  3627  06C1  1783               	bsf	3,7
  3628  06C2  1C2A               	btfss	??_UpdateTimes+6,0
  3629  06C3  1383               	bcf	3,7
  3630  06C4  0800               	movf	0,w
  3631  06C5  00AB               	movwf	??_UpdateTimes+7
  3632  06C6  0A84               	incf	4,f
  3633  06C7  0800               	movf	0,w
  3634  06C8  00AC               	movwf	??_UpdateTimes+8
  3635  06C9  0838               	movf	UpdateTimes@l,w
  3636  06CA  00AD               	movwf	??_UpdateTimes+9
  3637  06CB  072D               	addwf	??_UpdateTimes+9,w
  3638  06CC  0737               	addwf	UpdateTimes@_semafori,w
  3639  06CD  00AE               	movwf	??_UpdateTimes+10
  3640  06CE  082E               	movf	??_UpdateTimes+10,w
  3641  06CF  0084               	movwf	4
  3642  06D0  1383               	bcf	3,7	;select IRP bank0
  3643  06D1  0800               	movf	0,w
  3644  06D2  00AF               	movwf	??_UpdateTimes+11
  3645  06D3  0A84               	incf	4,f
  3646  06D4  0800               	movf	0,w
  3647  06D5  00B0               	movwf	??_UpdateTimes+12
  3648  06D6  0836               	movf	UpdateTimes@i,w
  3649  06D7  00B1               	movwf	??_UpdateTimes+13
  3650  06D8  0731               	addwf	??_UpdateTimes+13,w
  3651  06D9  072F               	addwf	??_UpdateTimes+11,w
  3652  06DA  00B2               	movwf	??_UpdateTimes+14
  3653  06DB  0830               	movf	??_UpdateTimes+12,w
  3654  06DC  1803               	skipnc
  3655  06DD  3E01               	addlw	1
  3656  06DE  00B3               	movwf	??_UpdateTimes+15
  3657  06DF  0832               	movf	??_UpdateTimes+14,w
  3658  06E0  0084               	movwf	4
  3659  06E1  1783               	bsf	3,7
  3660  06E2  1C33               	btfss	??_UpdateTimes+15,0
  3661  06E3  1383               	bcf	3,7
  3662  06E4  082B               	movf	??_UpdateTimes+7,w
  3663  06E5  0080               	movwf	0
  3664  06E6  0A84               	incf	4,f
  3665  06E7  082C               	movf	??_UpdateTimes+8,w
  3666  06E8  0080               	movwf	0
  3667  06E9                     l3991:	
  3668                           
  3669                           ;./CustomLib/TrafficLight.h: 15:         }
  3670  06E9  3001               	movlw	1
  3671  06EA  00A4               	movwf	??_UpdateTimes
  3672  06EB  0824               	movf	??_UpdateTimes,w
  3673  06EC  07B6               	addwf	UpdateTimes@i,f
  3674  06ED                     l3993:	
  3675  06ED  3003               	movlw	3
  3676  06EE  0236               	subwf	UpdateTimes@i,w
  3677  06EF  1C03               	skipc
  3678  06F0  2EF2               	goto	u3561
  3679  06F1  2EF3               	goto	u3560
  3680  06F2                     u3561:	
  3681  06F2  2E5D               	goto	l3987
  3682  06F3                     u3560:	
  3683  06F3                     l3995:	
  3684                           
  3685                           ;./CustomLib/TrafficLight.h: 17:         if( (*(_semafori)[l]).lux_select != (*(_semafor
      +                          i)[l]).new_lux_select )
  3686  06F3  0838               	movf	UpdateTimes@l,w
  3687  06F4  00A4               	movwf	??_UpdateTimes
  3688  06F5  0724               	addwf	??_UpdateTimes,w
  3689  06F6  0737               	addwf	UpdateTimes@_semafori,w
  3690  06F7  00A5               	movwf	??_UpdateTimes+1
  3691  06F8  0825               	movf	??_UpdateTimes+1,w
  3692  06F9  0084               	movwf	4
  3693  06FA  1383               	bcf	3,7	;select IRP bank0
  3694  06FB  0800               	movf	0,w
  3695  06FC  00A6               	movwf	??_UpdateTimes+2
  3696  06FD  0A84               	incf	4,f
  3697  06FE  0800               	movf	0,w
  3698  06FF  00A7               	movwf	??_UpdateTimes+3
  3699  0700  0826               	movf	??_UpdateTimes+2,w
  3700  0701  3E0D               	addlw	13
  3701  0702  00A8               	movwf	??_UpdateTimes+4
  3702  0703  0827               	movf	??_UpdateTimes+3,w
  3703  0704  1803               	skipnc
  3704  0705  3E01               	addlw	1
  3705  0706  3E00               	addlw	0
  3706  0707  00A9               	movwf	??_UpdateTimes+5
  3707  0708  0828               	movf	??_UpdateTimes+4,w
  3708  0709  0084               	movwf	4
  3709  070A  1783               	bsf	3,7
  3710  070B  1C29               	btfss	??_UpdateTimes+5,0
  3711  070C  1383               	bcf	3,7
  3712  070D  0800               	movf	0,w
  3713  070E  00AA               	movwf	??_UpdateTimes+6
  3714  070F  0838               	movf	UpdateTimes@l,w
  3715  0710  00AB               	movwf	??_UpdateTimes+7
  3716  0711  072B               	addwf	??_UpdateTimes+7,w
  3717  0712  0737               	addwf	UpdateTimes@_semafori,w
  3718  0713  00AC               	movwf	??_UpdateTimes+8
  3719  0714  082C               	movf	??_UpdateTimes+8,w
  3720  0715  0084               	movwf	4
  3721  0716  1383               	bcf	3,7	;select IRP bank0
  3722  0717  0800               	movf	0,w
  3723  0718  00AD               	movwf	??_UpdateTimes+9
  3724  0719  0A84               	incf	4,f
  3725  071A  0800               	movf	0,w
  3726  071B  00AE               	movwf	??_UpdateTimes+10
  3727  071C  082D               	movf	??_UpdateTimes+9,w
  3728  071D  3E0C               	addlw	12
  3729  071E  00AF               	movwf	??_UpdateTimes+11
  3730  071F  082E               	movf	??_UpdateTimes+10,w
  3731  0720  1803               	skipnc
  3732  0721  3E01               	addlw	1
  3733  0722  3E00               	addlw	0
  3734  0723  00B0               	movwf	??_UpdateTimes+12
  3735  0724  082F               	movf	??_UpdateTimes+11,w
  3736  0725  0084               	movwf	4
  3737  0726  1783               	bsf	3,7
  3738  0727  1C30               	btfss	??_UpdateTimes+12,0
  3739  0728  1383               	bcf	3,7
  3740  0729  0800               	movf	0,w
  3741  072A  062A               	xorwf	??_UpdateTimes+6,w
  3742  072B  1903               	skipnz
  3743  072C  2F2E               	goto	u3571
  3744  072D  2F2F               	goto	u3570
  3745  072E                     u3571:	
  3746  072E  2F67               	goto	l3999
  3747  072F                     u3570:	
  3748  072F                     l3997:	
  3749                           
  3750                           ;./CustomLib/TrafficLight.h: 18:         {;./CustomLib/TrafficLight.h: 19:             (
      +                          *(_semafori)[l]).lux_select = (*(_semafori)[l]).new_lux_select;
  3751  072F  0838               	movf	UpdateTimes@l,w
  3752  0730  00A4               	movwf	??_UpdateTimes
  3753  0731  0724               	addwf	??_UpdateTimes,w
  3754  0732  0737               	addwf	UpdateTimes@_semafori,w
  3755  0733  00A5               	movwf	??_UpdateTimes+1
  3756  0734  0825               	movf	??_UpdateTimes+1,w
  3757  0735  0084               	movwf	4
  3758  0736  1383               	bcf	3,7	;select IRP bank0
  3759  0737  0800               	movf	0,w
  3760  0738  00A6               	movwf	??_UpdateTimes+2
  3761  0739  0A84               	incf	4,f
  3762  073A  0800               	movf	0,w
  3763  073B  00A7               	movwf	??_UpdateTimes+3
  3764  073C  0826               	movf	??_UpdateTimes+2,w
  3765  073D  3E0D               	addlw	13
  3766  073E  00A8               	movwf	??_UpdateTimes+4
  3767  073F  0827               	movf	??_UpdateTimes+3,w
  3768  0740  1803               	skipnc
  3769  0741  3E01               	addlw	1
  3770  0742  3E00               	addlw	0
  3771  0743  00A9               	movwf	??_UpdateTimes+5
  3772  0744  0828               	movf	??_UpdateTimes+4,w
  3773  0745  0084               	movwf	4
  3774  0746  1783               	bsf	3,7
  3775  0747  1C29               	btfss	??_UpdateTimes+5,0
  3776  0748  1383               	bcf	3,7
  3777  0749  0800               	movf	0,w
  3778  074A  00AA               	movwf	??_UpdateTimes+6
  3779  074B  0838               	movf	UpdateTimes@l,w
  3780  074C  00AB               	movwf	??_UpdateTimes+7
  3781  074D  072B               	addwf	??_UpdateTimes+7,w
  3782  074E  0737               	addwf	UpdateTimes@_semafori,w
  3783  074F  00AC               	movwf	??_UpdateTimes+8
  3784  0750  082C               	movf	??_UpdateTimes+8,w
  3785  0751  0084               	movwf	4
  3786  0752  1383               	bcf	3,7	;select IRP bank0
  3787  0753  0800               	movf	0,w
  3788  0754  00AD               	movwf	??_UpdateTimes+9
  3789  0755  0A84               	incf	4,f
  3790  0756  0800               	movf	0,w
  3791  0757  00AE               	movwf	??_UpdateTimes+10
  3792  0758  082D               	movf	??_UpdateTimes+9,w
  3793  0759  3E0C               	addlw	12
  3794  075A  00AF               	movwf	??_UpdateTimes+11
  3795  075B  082E               	movf	??_UpdateTimes+10,w
  3796  075C  1803               	skipnc
  3797  075D  3E01               	addlw	1
  3798  075E  3E00               	addlw	0
  3799  075F  00B0               	movwf	??_UpdateTimes+12
  3800  0760  082F               	movf	??_UpdateTimes+11,w
  3801  0761  0084               	movwf	4
  3802  0762  1783               	bsf	3,7
  3803  0763  1C30               	btfss	??_UpdateTimes+12,0
  3804  0764  1383               	bcf	3,7
  3805  0765  082A               	movf	??_UpdateTimes+6,w
  3806  0766  0080               	movwf	0
  3807  0767                     l3999:	
  3808                           
  3809                           ;./CustomLib/TrafficLight.h: 21:     }
  3810  0767  3001               	movlw	1
  3811  0768  00A4               	movwf	??_UpdateTimes
  3812  0769  0824               	movf	??_UpdateTimes,w
  3813  076A  07B8               	addwf	UpdateTimes@l,f
  3814  076B                     l4001:	
  3815  076B  3002               	movlw	2
  3816  076C  0238               	subwf	UpdateTimes@l,w
  3817  076D  1C03               	skipc
  3818  076E  2F70               	goto	u3581
  3819  076F  2F71               	goto	u3580
  3820  0770                     u3581:	
  3821  0770  2E5C               	goto	l3981
  3822  0771                     u3580:	
  3823  0771                     l145:	
  3824  0771  0008               	return
  3825  0772                     __end_of_UpdateTimes:	
  3826                           
  3827                           	psect	text9
  3828  0AF1                     __ptext9:	
  3829 ;; *************** function _UART_Init *****************
  3830 ;; Defined at:
  3831 ;;		line 342 in file "main.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  baudrate        2   19[BANK0 ] int 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3845 ;;      Params:         0       2       0       0       0
  3846 ;;      Locals:         0       0       0       0       0
  3847 ;;      Temps:          0       4       0       0       0
  3848 ;;      Totals:         0       6       0       0       0
  3849 ;;Total ram usage:        6 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    4
  3852 ;; This function calls:
  3853 ;;		___aldiv
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           
  3860                           ;psect for function _UART_Init
  3861  0AF1                     _UART_Init:	
  3862  0AF1                     l4065:	
  3863                           ;incstack = 0
  3864                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3865                           
  3866                           
  3867                           ;main.c: 342: void UART_Init(int baudrate);main.c: 343: {;main.c: 344:     TRISCbits.TRI
      +                          SC6 = 0;
  3868  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  3869  0AF2  1303               	bcf	3,6	;RP1=0, select bank1
  3870  0AF3  1307               	bcf	7,6	;volatile
  3871                           
  3872                           ;main.c: 345:     TXSTAbits.TXEN = 1;
  3873  0AF4  1698               	bsf	24,5	;volatile
  3874                           
  3875                           ;main.c: 346:     RCSTAbits.SPEN = 1;
  3876  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  3877  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  3878  0AF7  1798               	bsf	24,7	;volatile
  3879                           
  3880                           ;main.c: 347:     RCSTAbits.CREN = 1;
  3881  0AF8  1618               	bsf	24,4	;volatile
  3882  0AF9                     l4067:	
  3883                           
  3884                           ;main.c: 348:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3885  0AF9  0833               	movf	UART_Init@baudrate,w
  3886  0AFA  00B5               	movwf	??_UART_Init
  3887  0AFB  0834               	movf	UART_Init@baudrate+1,w
  3888  0AFC  00B6               	movwf	??_UART_Init+1
  3889  0AFD  3000               	movlw	0
  3890  0AFE  1BB6               	btfsc	??_UART_Init+1,7
  3891  0AFF  30FF               	movlw	255
  3892  0B00  00B7               	movwf	??_UART_Init+2
  3893  0B01  00B8               	movwf	??_UART_Init+3
  3894  0B02  3006               	movlw	6
  3895  0B03                     u3635:	
  3896  0B03  1003               	clrc
  3897  0B04  0DB5               	rlf	??_UART_Init,f
  3898  0B05  0DB6               	rlf	??_UART_Init+1,f
  3899  0B06  0DB7               	rlf	??_UART_Init+2,f
  3900  0B07  0DB8               	rlf	??_UART_Init+3,f
  3901  0B08                     u3630:	
  3902  0B08  3EFF               	addlw	-1
  3903  0B09  1D03               	skipz
  3904  0B0A  2B03               	goto	u3635
  3905  0B0B  0838               	movf	??_UART_Init+3,w
  3906  0B0C  00A7               	movwf	___aldiv@divisor+3
  3907  0B0D  0837               	movf	??_UART_Init+2,w
  3908  0B0E  00A6               	movwf	___aldiv@divisor+2
  3909  0B0F  0836               	movf	??_UART_Init+1,w
  3910  0B10  00A5               	movwf	___aldiv@divisor+1
  3911  0B11  0835               	movf	??_UART_Init,w
  3912  0B12  00A4               	movwf	___aldiv@divisor
  3913  0B13  3001               	movlw	1
  3914  0B14  00AB               	movwf	___aldiv@dividend+3
  3915  0B15  30E8               	movlw	232
  3916  0B16  00AA               	movwf	___aldiv@dividend+2
  3917  0B17  3048               	movlw	72
  3918  0B18  00A9               	movwf	___aldiv@dividend+1
  3919  0B19  3000               	movlw	0
  3920  0B1A  00A8               	movwf	___aldiv@dividend
  3921  0B1B  120A  158A  269B  120A  158A  	fcall	___aldiv
  3922  0B20  1283               	bcf	3,5	;RP0=0, select bank0
  3923  0B21  1303               	bcf	3,6	;RP1=0, select bank0
  3924  0B22  0824               	movf	?___aldiv,w
  3925  0B23  3EFF               	addlw	255
  3926  0B24  1683               	bsf	3,5	;RP0=1, select bank1
  3927  0B25  1303               	bcf	3,6	;RP1=0, select bank1
  3928  0B26  0099               	movwf	25	;volatile
  3929  0B27                     l4069:	
  3930                           
  3931                           ;main.c: 349:     INTCONbits.GIE = 1;
  3932  0B27  178B               	bsf	11,7	;volatile
  3933  0B28                     l4071:	
  3934                           
  3935                           ;main.c: 350:     INTCONbits.PEIE = 1;
  3936  0B28  170B               	bsf	11,6	;volatile
  3937  0B29                     l4073:	
  3938                           
  3939                           ;main.c: 351:     PIE1bits.RCIE = 1;
  3940  0B29  168C               	bsf	12,5	;volatile
  3941  0B2A                     l286:	
  3942  0B2A  0008               	return
  3943  0B2B                     __end_of_UART_Init:	
  3944                           
  3945                           	psect	text10
  3946  0E9B                     __ptext10:	
  3947 ;; *************** function ___aldiv *****************
  3948 ;; Defined at:
  3949 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  divisor         4    4[BANK0 ] long 
  3952 ;;  dividend        4    8[BANK0 ] long 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  quotient        4   15[BANK0 ] long 
  3955 ;;  sign            1   14[BANK0 ] unsigned char 
  3956 ;;  counter         1   13[BANK0 ] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  4    4[BANK0 ] long 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         0       8       0       0       0
  3967 ;;      Locals:         0       6       0       0       0
  3968 ;;      Temps:          0       1       0       0       0
  3969 ;;      Totals:         0      15       0       0       0
  3970 ;;Total ram usage:       15 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    3
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_UART_Init
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function ___aldiv
  3982  0E9B                     ___aldiv:	
  3983  0E9B                     l3837:	
  3984                           ;incstack = 0
  3985                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3986                           
  3987  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  3988  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  3989  0E9D  01AE               	clrf	___aldiv@sign
  3990  0E9E                     l3839:	
  3991  0E9E  1FA7               	btfss	___aldiv@divisor+3,7
  3992  0E9F  2EA1               	goto	u3251
  3993  0EA0  2EA2               	goto	u3250
  3994  0EA1                     u3251:	
  3995  0EA1  2EAF               	goto	l510
  3996  0EA2                     u3250:	
  3997  0EA2                     l3841:	
  3998  0EA2  09A4               	comf	___aldiv@divisor,f
  3999  0EA3  09A5               	comf	___aldiv@divisor+1,f
  4000  0EA4  09A6               	comf	___aldiv@divisor+2,f
  4001  0EA5  09A7               	comf	___aldiv@divisor+3,f
  4002  0EA6  0AA4               	incf	___aldiv@divisor,f
  4003  0EA7  1903               	skipnz
  4004  0EA8  0AA5               	incf	___aldiv@divisor+1,f
  4005  0EA9  1903               	skipnz
  4006  0EAA  0AA6               	incf	___aldiv@divisor+2,f
  4007  0EAB  1903               	skipnz
  4008  0EAC  0AA7               	incf	___aldiv@divisor+3,f
  4009  0EAD  01AE               	clrf	___aldiv@sign
  4010  0EAE  0AAE               	incf	___aldiv@sign,f
  4011  0EAF                     l510:	
  4012  0EAF  1FAB               	btfss	___aldiv@dividend+3,7
  4013  0EB0  2EB2               	goto	u3261
  4014  0EB1  2EB3               	goto	u3260
  4015  0EB2                     u3261:	
  4016  0EB2  2EC2               	goto	l3847
  4017  0EB3                     u3260:	
  4018  0EB3                     l3843:	
  4019  0EB3  09A8               	comf	___aldiv@dividend,f
  4020  0EB4  09A9               	comf	___aldiv@dividend+1,f
  4021  0EB5  09AA               	comf	___aldiv@dividend+2,f
  4022  0EB6  09AB               	comf	___aldiv@dividend+3,f
  4023  0EB7  0AA8               	incf	___aldiv@dividend,f
  4024  0EB8  1903               	skipnz
  4025  0EB9  0AA9               	incf	___aldiv@dividend+1,f
  4026  0EBA  1903               	skipnz
  4027  0EBB  0AAA               	incf	___aldiv@dividend+2,f
  4028  0EBC  1903               	skipnz
  4029  0EBD  0AAB               	incf	___aldiv@dividend+3,f
  4030  0EBE                     l3845:	
  4031  0EBE  3001               	movlw	1
  4032  0EBF  00AC               	movwf	??___aldiv
  4033  0EC0  082C               	movf	??___aldiv,w
  4034  0EC1  06AE               	xorwf	___aldiv@sign,f
  4035  0EC2                     l3847:	
  4036  0EC2  3000               	movlw	0
  4037  0EC3  00B2               	movwf	___aldiv@quotient+3
  4038  0EC4  3000               	movlw	0
  4039  0EC5  00B1               	movwf	___aldiv@quotient+2
  4040  0EC6  3000               	movlw	0
  4041  0EC7  00B0               	movwf	___aldiv@quotient+1
  4042  0EC8  3000               	movlw	0
  4043  0EC9  00AF               	movwf	___aldiv@quotient
  4044  0ECA                     l3849:	
  4045  0ECA  0827               	movf	___aldiv@divisor+3,w
  4046  0ECB  0426               	iorwf	___aldiv@divisor+2,w
  4047  0ECC  0425               	iorwf	___aldiv@divisor+1,w
  4048  0ECD  0424               	iorwf	___aldiv@divisor,w
  4049  0ECE  1903               	skipnz
  4050  0ECF  2ED1               	goto	u3271
  4051  0ED0  2ED2               	goto	u3270
  4052  0ED1                     u3271:	
  4053  0ED1  2F1F               	goto	l3869
  4054  0ED2                     u3270:	
  4055  0ED2                     l3851:	
  4056  0ED2  01AD               	clrf	___aldiv@counter
  4057  0ED3  0AAD               	incf	___aldiv@counter,f
  4058  0ED4  2EE2               	goto	l3855
  4059  0ED5                     l3853:	
  4060  0ED5  3001               	movlw	1
  4061  0ED6  00AC               	movwf	??___aldiv
  4062  0ED7                     u3285:	
  4063  0ED7  1003               	clrc
  4064  0ED8  0DA4               	rlf	___aldiv@divisor,f
  4065  0ED9  0DA5               	rlf	___aldiv@divisor+1,f
  4066  0EDA  0DA6               	rlf	___aldiv@divisor+2,f
  4067  0EDB  0DA7               	rlf	___aldiv@divisor+3,f
  4068  0EDC  0BAC               	decfsz	??___aldiv,f
  4069  0EDD  2ED7               	goto	u3285
  4070  0EDE  3001               	movlw	1
  4071  0EDF  00AC               	movwf	??___aldiv
  4072  0EE0  082C               	movf	??___aldiv,w
  4073  0EE1  07AD               	addwf	___aldiv@counter,f
  4074  0EE2                     l3855:	
  4075  0EE2  1FA7               	btfss	___aldiv@divisor+3,7
  4076  0EE3  2EE5               	goto	u3291
  4077  0EE4  2EE6               	goto	u3290
  4078  0EE5                     u3291:	
  4079  0EE5  2ED5               	goto	l3853
  4080  0EE6                     u3290:	
  4081  0EE6                     l3857:	
  4082  0EE6  3001               	movlw	1
  4083  0EE7  00AC               	movwf	??___aldiv
  4084  0EE8                     u3305:	
  4085  0EE8  1003               	clrc
  4086  0EE9  0DAF               	rlf	___aldiv@quotient,f
  4087  0EEA  0DB0               	rlf	___aldiv@quotient+1,f
  4088  0EEB  0DB1               	rlf	___aldiv@quotient+2,f
  4089  0EEC  0DB2               	rlf	___aldiv@quotient+3,f
  4090  0EED  0BAC               	decfsz	??___aldiv,f
  4091  0EEE  2EE8               	goto	u3305
  4092  0EEF                     l3859:	
  4093  0EEF  0827               	movf	___aldiv@divisor+3,w
  4094  0EF0  022B               	subwf	___aldiv@dividend+3,w
  4095  0EF1  1D03               	skipz
  4096  0EF2  2EFD               	goto	u3315
  4097  0EF3  0826               	movf	___aldiv@divisor+2,w
  4098  0EF4  022A               	subwf	___aldiv@dividend+2,w
  4099  0EF5  1D03               	skipz
  4100  0EF6  2EFD               	goto	u3315
  4101  0EF7  0825               	movf	___aldiv@divisor+1,w
  4102  0EF8  0229               	subwf	___aldiv@dividend+1,w
  4103  0EF9  1D03               	skipz
  4104  0EFA  2EFD               	goto	u3315
  4105  0EFB  0824               	movf	___aldiv@divisor,w
  4106  0EFC  0228               	subwf	___aldiv@dividend,w
  4107  0EFD                     u3315:	
  4108  0EFD  1C03               	skipc
  4109  0EFE  2F00               	goto	u3311
  4110  0EFF  2F01               	goto	u3310
  4111  0F00                     u3311:	
  4112  0F00  2F10               	goto	l3865
  4113  0F01                     u3310:	
  4114  0F01                     l3861:	
  4115  0F01  0824               	movf	___aldiv@divisor,w
  4116  0F02  02A8               	subwf	___aldiv@dividend,f
  4117  0F03  0825               	movf	___aldiv@divisor+1,w
  4118  0F04  1C03               	skipc
  4119  0F05  0F25               	incfsz	___aldiv@divisor+1,w
  4120  0F06  02A9               	subwf	___aldiv@dividend+1,f
  4121  0F07  0826               	movf	___aldiv@divisor+2,w
  4122  0F08  1C03               	skipc
  4123  0F09  0F26               	incfsz	___aldiv@divisor+2,w
  4124  0F0A  02AA               	subwf	___aldiv@dividend+2,f
  4125  0F0B  0827               	movf	___aldiv@divisor+3,w
  4126  0F0C  1C03               	skipc
  4127  0F0D  0F27               	incfsz	___aldiv@divisor+3,w
  4128  0F0E  02AB               	subwf	___aldiv@dividend+3,f
  4129  0F0F                     l3863:	
  4130  0F0F  142F               	bsf	___aldiv@quotient,0
  4131  0F10                     l3865:	
  4132  0F10  3001               	movlw	1
  4133  0F11                     u3325:	
  4134  0F11  1003               	clrc
  4135  0F12  0CA7               	rrf	___aldiv@divisor+3,f
  4136  0F13  0CA6               	rrf	___aldiv@divisor+2,f
  4137  0F14  0CA5               	rrf	___aldiv@divisor+1,f
  4138  0F15  0CA4               	rrf	___aldiv@divisor,f
  4139  0F16  3EFF               	addlw	-1
  4140  0F17  1D03               	skipz
  4141  0F18  2F11               	goto	u3325
  4142  0F19                     l3867:	
  4143  0F19  3001               	movlw	1
  4144  0F1A  02AD               	subwf	___aldiv@counter,f
  4145  0F1B  1D03               	btfss	3,2
  4146  0F1C  2F1E               	goto	u3331
  4147  0F1D  2F1F               	goto	u3330
  4148  0F1E                     u3331:	
  4149  0F1E  2EE6               	goto	l3857
  4150  0F1F                     u3330:	
  4151  0F1F                     l3869:	
  4152  0F1F  082E               	movf	___aldiv@sign,w
  4153  0F20  1903               	btfsc	3,2
  4154  0F21  2F23               	goto	u3341
  4155  0F22  2F24               	goto	u3340
  4156  0F23                     u3341:	
  4157  0F23  2F2F               	goto	l3873
  4158  0F24                     u3340:	
  4159  0F24                     l3871:	
  4160  0F24  09AF               	comf	___aldiv@quotient,f
  4161  0F25  09B0               	comf	___aldiv@quotient+1,f
  4162  0F26  09B1               	comf	___aldiv@quotient+2,f
  4163  0F27  09B2               	comf	___aldiv@quotient+3,f
  4164  0F28  0AAF               	incf	___aldiv@quotient,f
  4165  0F29  1903               	skipnz
  4166  0F2A  0AB0               	incf	___aldiv@quotient+1,f
  4167  0F2B  1903               	skipnz
  4168  0F2C  0AB1               	incf	___aldiv@quotient+2,f
  4169  0F2D  1903               	skipnz
  4170  0F2E  0AB2               	incf	___aldiv@quotient+3,f
  4171  0F2F                     l3873:	
  4172  0F2F  0832               	movf	___aldiv@quotient+3,w
  4173  0F30  00A7               	movwf	?___aldiv+3
  4174  0F31  0831               	movf	___aldiv@quotient+2,w
  4175  0F32  00A6               	movwf	?___aldiv+2
  4176  0F33  0830               	movf	___aldiv@quotient+1,w
  4177  0F34  00A5               	movwf	?___aldiv+1
  4178  0F35  082F               	movf	___aldiv@quotient,w
  4179  0F36  00A4               	movwf	?___aldiv
  4180  0F37                     l520:	
  4181  0F37  0008               	return
  4182  0F38                     __end_of___aldiv:	
  4183                           
  4184                           	psect	text11
  4185  0772                     __ptext11:	
  4186 ;; *************** function _ShowDigitsOnDisplay *****************
  4187 ;; Defined at:
  4188 ;;		line 467 in file "main.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4202 ;;      Params:         0       0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0
  4204 ;;      Temps:          0       2       0       0       0
  4205 ;;      Totals:         0       2       0       0       0
  4206 ;;Total ram usage:        2 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    4
  4209 ;; This function calls:
  4210 ;;		_SetDisplay
  4211 ;;		___awmod
  4212 ;; This function is called by:
  4213 ;;		_main
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           
  4218                           ;psect for function _ShowDigitsOnDisplay
  4219  0772                     _ShowDigitsOnDisplay:	
  4220  0772                     l4133:	
  4221                           ;incstack = 0
  4222                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4223                           
  4224                           
  4225                           ;main.c: 469:     switch (disp)
  4226  0772  2FC0               	goto	l4149
  4227  0773                     l4135:	
  4228                           
  4229                           ;main.c: 472:         if (centinaia > 0)
  4230  0773  085D               	movf	_centinaia,w
  4231  0774  1903               	btfsc	3,2
  4232  0775  2F77               	goto	u3671
  4233  0776  2F78               	goto	u3670
  4234  0777                     u3671:	
  4235  0777  2FD5               	goto	l4151
  4236  0778                     u3670:	
  4237  0778                     l4137:	
  4238                           
  4239                           ;main.c: 473:         {;main.c: 474:             SetDisplay(1, 0, 0, display[centinaia])
      +                          ;
  4240  0778  01A4               	clrf	SetDisplay@d2
  4241  0779  01A5               	clrf	SetDisplay@d3
  4242  077A  085D               	movf	_centinaia,w
  4243  077B  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4244  077C  0084               	movwf	4
  4245  077D  120A  118A  27EE  120A  118A  	fcall	stringdir
  4246  0782  00AB               	movwf	??_ShowDigitsOnDisplay
  4247  0783  082B               	movf	??_ShowDigitsOnDisplay,w
  4248  0784  00A6               	movwf	SetDisplay@value
  4249  0785  3001               	movlw	1
  4250  0786  120A  158A  2212  120A  118A  	fcall	_SetDisplay
  4251  078B  2FD5               	goto	l4151
  4252  078C                     l4139:	
  4253                           
  4254                           ;main.c: 478:         if (decine > 0 || centinaia > 0)
  4255  078C  085E               	movf	_decine,w
  4256  078D  1D03               	btfss	3,2
  4257  078E  2F90               	goto	u3681
  4258  078F  2F91               	goto	u3680
  4259  0790                     u3681:	
  4260  0790  2F96               	goto	l4143
  4261  0791                     u3680:	
  4262  0791                     l4141:	
  4263  0791  085D               	movf	_centinaia,w
  4264  0792  1903               	btfsc	3,2
  4265  0793  2F95               	goto	u3691
  4266  0794  2F96               	goto	u3690
  4267  0795                     u3691:	
  4268  0795  2FD5               	goto	l4151
  4269  0796                     u3690:	
  4270  0796                     l4143:	
  4271                           
  4272                           ;main.c: 479:         {;main.c: 480:             SetDisplay(0, 1, 0, display[decine]);
  4273  0796  01A4               	clrf	SetDisplay@d2
  4274  0797  0AA4               	incf	SetDisplay@d2,f
  4275  0798  01A5               	clrf	SetDisplay@d3
  4276  0799  085E               	movf	_decine,w
  4277  079A  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4278  079B  0084               	movwf	4
  4279  079C  120A  118A  27EE  120A  118A  	fcall	stringdir
  4280  07A1  00AB               	movwf	??_ShowDigitsOnDisplay
  4281  07A2  082B               	movf	??_ShowDigitsOnDisplay,w
  4282  07A3  00A6               	movwf	SetDisplay@value
  4283  07A4  3000               	movlw	0
  4284  07A5  120A  158A  2212  120A  118A  	fcall	_SetDisplay
  4285  07AA  2FD5               	goto	l4151
  4286  07AB                     l4145:	
  4287                           
  4288                           ;main.c: 484:         SetDisplay(0, 0, 1, display[unita]);
  4289  07AB  01A4               	clrf	SetDisplay@d2
  4290  07AC  01A5               	clrf	SetDisplay@d3
  4291  07AD  0AA5               	incf	SetDisplay@d3,f
  4292  07AE  085F               	movf	_unita,w
  4293  07AF  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4294  07B0  0084               	movwf	4
  4295  07B1  120A  118A  27EE  120A  118A  	fcall	stringdir
  4296  07B6  00AB               	movwf	??_ShowDigitsOnDisplay
  4297  07B7  082B               	movf	??_ShowDigitsOnDisplay,w
  4298  07B8  00A6               	movwf	SetDisplay@value
  4299  07B9  3000               	movlw	0
  4300  07BA  120A  158A  2212  120A  118A  	fcall	_SetDisplay
  4301                           
  4302                           ;main.c: 485:         break;
  4303  07BF  2FD5               	goto	l4151
  4304  07C0                     l4149:	
  4305  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  4306  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  4307  07C2  0850               	movf	_disp,w
  4308  07C3  00AB               	movwf	??_ShowDigitsOnDisplay
  4309  07C4  01AC               	clrf	??_ShowDigitsOnDisplay+1
  4310                           
  4311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4312                           ; Switch size 1, requested type "simple"
  4313                           ; Number of cases is 1, Range of values is 0 to 0
  4314                           ; switch strategies available:
  4315                           ; Name         Instructions Cycles
  4316                           ; simple_byte            4     3 (average)
  4317                           ; direct_byte           11     8 (fixed)
  4318                           ; jumptable            260     6 (fixed)
  4319                           ;	Chosen strategy is simple_byte
  4320  07C5  082C               	movf	??_ShowDigitsOnDisplay+1,w
  4321  07C6  3A00               	xorlw	0	; case 0
  4322  07C7  1903               	skipnz
  4323  07C8  2FCA               	goto	l4571
  4324  07C9  2FD5               	goto	l4151
  4325  07CA                     l4571:	
  4326                           
  4327                           ; Switch size 1, requested type "simple"
  4328                           ; Number of cases is 3, Range of values is 0 to 2
  4329                           ; switch strategies available:
  4330                           ; Name         Instructions Cycles
  4331                           ; simple_byte           10     6 (average)
  4332                           ; direct_byte           17     8 (fixed)
  4333                           ; jumptable            260     6 (fixed)
  4334                           ;	Chosen strategy is simple_byte
  4335  07CA  082B               	movf	??_ShowDigitsOnDisplay,w
  4336  07CB  3A00               	xorlw	0	; case 0
  4337  07CC  1903               	skipnz
  4338  07CD  2F73               	goto	l4135
  4339  07CE  3A01               	xorlw	1	; case 1
  4340  07CF  1903               	skipnz
  4341  07D0  2F8C               	goto	l4139
  4342  07D1  3A03               	xorlw	3	; case 2
  4343  07D2  1903               	skipnz
  4344  07D3  2FAB               	goto	l4145
  4345  07D4  2FD5               	goto	l4151
  4346  07D5                     l4151:	
  4347                           
  4348                           ;main.c: 487:     disp = (disp + 1) % 3;
  4349  07D5  3003               	movlw	3
  4350  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  4351  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  4352  07D8  00A4               	movwf	___awmod@divisor
  4353  07D9  3000               	movlw	0
  4354  07DA  00A5               	movwf	___awmod@divisor+1
  4355  07DB  0850               	movf	_disp,w
  4356  07DC  3E01               	addlw	1
  4357  07DD  00A6               	movwf	___awmod@dividend
  4358  07DE  3000               	movlw	0
  4359  07DF  1803               	skipnc
  4360  07E0  3001               	movlw	1
  4361  07E1  00A7               	movwf	___awmod@dividend+1
  4362  07E2  120A  158A  2468  120A  118A  	fcall	___awmod
  4363  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  4364  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  4365  07E9  0824               	movf	?___awmod,w
  4366  07EA  00AB               	movwf	??_ShowDigitsOnDisplay
  4367  07EB  082B               	movf	??_ShowDigitsOnDisplay,w
  4368  07EC  00D0               	movwf	_disp
  4369  07ED                     l349:	
  4370  07ED  0008               	return
  4371  07EE                     __end_of_ShowDigitsOnDisplay:	
  4372                           
  4373                           	psect	text12
  4374  0A12                     __ptext12:	
  4375 ;; *************** function _SetDisplay *****************
  4376 ;; Defined at:
  4377 ;;		line 390 in file "main.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  d1              1    wreg     unsigned char 
  4380 ;;  d2              1    4[BANK0 ] unsigned char 
  4381 ;;  d3              1    5[BANK0 ] unsigned char 
  4382 ;;  value           1    6[BANK0 ] unsigned char 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  d1              1    7[BANK0 ] unsigned char 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4394 ;;      Params:         0       3       0       0       0
  4395 ;;      Locals:         0       1       0       0       0
  4396 ;;      Temps:          0       0       0       0       0
  4397 ;;      Totals:         0       4       0       0       0
  4398 ;;Total ram usage:        4 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    3
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_ShowDigitsOnDisplay
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function _SetDisplay
  4410  0A12                     _SetDisplay:	
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in _SetDisplay: [wreg+status,0]
  4414                           ;SetDisplay@d1 stored from wreg
  4415  0A12  1283               	bcf	3,5	;RP0=0, select bank0
  4416  0A13  1303               	bcf	3,6	;RP1=0, select bank0
  4417  0A14  00A7               	movwf	SetDisplay@d1
  4418  0A15                     l3805:	
  4419                           
  4420                           ;main.c: 390: void SetDisplay(char d1, char d2, char d3, char value);main.c: 391: {;main
      +                          .c: 392:     PORTAbits.RA2 = d1;
  4421  0A15  0C27               	rrf	SetDisplay@d1,w
  4422  0A16  1C03               	skipc
  4423  0A17  1105               	bcf	5,2	;volatile
  4424  0A18  1803               	skipnc
  4425  0A19  1505               	bsf	5,2	;volatile
  4426                           
  4427                           ;main.c: 393:     PORTAbits.RA3 = d2;
  4428  0A1A  0C24               	rrf	SetDisplay@d2,w
  4429  0A1B  1C03               	skipc
  4430  0A1C  1185               	bcf	5,3	;volatile
  4431  0A1D  1803               	skipnc
  4432  0A1E  1585               	bsf	5,3	;volatile
  4433                           
  4434                           ;main.c: 394:     PORTAbits.RA4 = d3;
  4435  0A1F  0C25               	rrf	SetDisplay@d3,w
  4436  0A20  1C03               	skipc
  4437  0A21  1205               	bcf	5,4	;volatile
  4438  0A22  1803               	skipnc
  4439  0A23  1605               	bsf	5,4	;volatile
  4440  0A24                     l3807:	
  4441                           
  4442                           ;main.c: 395:     PORTD = value;
  4443  0A24  0826               	movf	SetDisplay@value,w
  4444  0A25  0088               	movwf	8	;volatile
  4445  0A26                     l312:	
  4446  0A26  0008               	return
  4447  0A27                     __end_of_SetDisplay:	
  4448                           
  4449                           	psect	text13
  4450  0D91                     __ptext13:	
  4451 ;; *************** function _SetReceivedTimes *****************
  4452 ;; Defined at:
  4453 ;;		line 90 in file "./CustomLib/TrafficLight.h"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4456 ;;		 -> dataFromGateway(15), 
  4457 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4458 ;;		 -> Semafori(8), 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  _dataFromGat    1   23[BANK0 ] PTR unsigned char 
  4461 ;;		 -> dataFromGateway(15), 
  4462 ;;  index           1   24[BANK0 ] unsigned char 
  4463 ;;  colorId         1   22[BANK0 ] unsigned char 
  4464 ;;  semaforoId      1   21[BANK0 ] unsigned char 
  4465 ;;  i               1   25[BANK0 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4475 ;;      Params:         0       1       0       0       0
  4476 ;;      Locals:         0       5       0       0       0
  4477 ;;      Temps:          0       8       0       0       0
  4478 ;;      Totals:         0      14       0       0       0
  4479 ;;Total ram usage:       14 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    4
  4482 ;; This function calls:
  4483 ;;		_GetTime
  4484 ;;		___bmul
  4485 ;; This function is called by:
  4486 ;;		_main
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           
  4491                           ;psect for function _SetReceivedTimes
  4492  0D91                     _SetReceivedTimes:	
  4493                           
  4494                           ;incstack = 0
  4495                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4496                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4497  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  4498  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  4499  0D93  00B7               	movwf	SetReceivedTimes@_dataFromGateway
  4500  0D94                     l4039:	
  4501                           
  4502                           ;./CustomLib/TrafficLight.h: 90: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 91: {;./CustomLib/TrafficLight.h: 92:   
      +                            for (unsigned char i = 0; i < 3; i++)
  4503  0D94  01B9               	clrf	SetReceivedTimes@i
  4504  0D95                     l4041:	
  4505  0D95  3003               	movlw	3
  4506  0D96  0239               	subwf	SetReceivedTimes@i,w
  4507  0D97  1C03               	skipc
  4508  0D98  2D9A               	goto	u3611
  4509  0D99  2D9B               	goto	u3610
  4510  0D9A                     u3611:	
  4511  0D9A  2D9C               	goto	l4045
  4512  0D9B                     u3610:	
  4513  0D9B  2DFE               	goto	l172
  4514  0D9C                     l4045:	
  4515                           
  4516                           ;./CustomLib/TrafficLight.h: 93:     {;./CustomLib/TrafficLight.h: 94:         unsigned 
      +                          char index = i * 5;
  4517  0D9C  3005               	movlw	5
  4518  0D9D  00AD               	movwf	??_SetReceivedTimes
  4519  0D9E  082D               	movf	??_SetReceivedTimes,w
  4520  0D9F  00A4               	movwf	___bmul@multiplicand
  4521  0DA0  0839               	movf	SetReceivedTimes@i,w
  4522  0DA1  120A  158A  2227  120A  158A  	fcall	___bmul
  4523  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  4524  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  4525  0DA8  00AE               	movwf	??_SetReceivedTimes+1
  4526  0DA9  082E               	movf	??_SetReceivedTimes+1,w
  4527  0DAA  00B8               	movwf	SetReceivedTimes@index
  4528  0DAB                     l4047:	
  4529                           
  4530                           ;./CustomLib/TrafficLight.h: 95:         unsigned char semaforoId = (_dataFromGateway[in
      +                          dex] >> 1) & 0x0F;
  4531  0DAB  0838               	movf	SetReceivedTimes@index,w
  4532  0DAC  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4533  0DAD  00AD               	movwf	??_SetReceivedTimes
  4534  0DAE  082D               	movf	??_SetReceivedTimes,w
  4535  0DAF  0084               	movwf	4
  4536  0DB0  1383               	bcf	3,7	;select IRP bank0
  4537  0DB1  0800               	movf	0,w
  4538  0DB2  00AE               	movwf	??_SetReceivedTimes+1
  4539  0DB3  1003               	clrc
  4540  0DB4  0C2E               	rrf	??_SetReceivedTimes+1,w
  4541  0DB5  390F               	andlw	15
  4542  0DB6  00AF               	movwf	??_SetReceivedTimes+2
  4543  0DB7  082F               	movf	??_SetReceivedTimes+2,w
  4544  0DB8  00B5               	movwf	SetReceivedTimes@semaforoId
  4545  0DB9                     l4049:	
  4546                           
  4547                           ;./CustomLib/TrafficLight.h: 96:         unsigned char colorId = ((_dataFromGateway[inde
      +                          x] >> 5) & 0x03) - 1;
  4548  0DB9  0838               	movf	SetReceivedTimes@index,w
  4549  0DBA  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4550  0DBB  00AD               	movwf	??_SetReceivedTimes
  4551  0DBC  082D               	movf	??_SetReceivedTimes,w
  4552  0DBD  0084               	movwf	4
  4553  0DBE  0800               	movf	0,w
  4554  0DBF  00AE               	movwf	??_SetReceivedTimes+1
  4555  0DC0  3005               	movlw	5
  4556  0DC1                     u3625:	
  4557  0DC1  1003               	clrc
  4558  0DC2  0CAE               	rrf	??_SetReceivedTimes+1,f
  4559  0DC3  3EFF               	addlw	-1
  4560  0DC4  1D03               	skipz
  4561  0DC5  2DC1               	goto	u3625
  4562  0DC6  082E               	movf	??_SetReceivedTimes+1,w
  4563  0DC7  3903               	andlw	3
  4564  0DC8  3EFF               	addlw	255
  4565  0DC9  00AF               	movwf	??_SetReceivedTimes+2
  4566  0DCA  082F               	movf	??_SetReceivedTimes+2,w
  4567  0DCB  00B6               	movwf	SetReceivedTimes@colorId
  4568  0DCC                     l4051:	
  4569                           
  4570                           ;./CustomLib/TrafficLight.h: 98:         (*(_semafori)[semaforoId]).new_times[colorId]=G
      +                          etTime(index, _dataFromGateway);
  4571  0DCC  0837               	movf	SetReceivedTimes@_dataFromGateway,w
  4572  0DCD  00AD               	movwf	??_SetReceivedTimes
  4573  0DCE  082D               	movf	??_SetReceivedTimes,w
  4574  0DCF  00A4               	movwf	GetTime@_dataFromGateway
  4575  0DD0  0838               	movf	SetReceivedTimes@index,w
  4576  0DD1  120A  158A  232B  120A  158A  	fcall	_GetTime
  4577  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  4578  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  4579  0DD8  0835               	movf	SetReceivedTimes@semaforoId,w
  4580  0DD9  00AE               	movwf	??_SetReceivedTimes+1
  4581  0DDA  072E               	addwf	??_SetReceivedTimes+1,w
  4582  0DDB  072C               	addwf	SetReceivedTimes@_semafori,w
  4583  0DDC  00AF               	movwf	??_SetReceivedTimes+2
  4584  0DDD  082F               	movf	??_SetReceivedTimes+2,w
  4585  0DDE  0084               	movwf	4
  4586  0DDF  1383               	bcf	3,7	;select IRP bank0
  4587  0DE0  0800               	movf	0,w
  4588  0DE1  00B0               	movwf	??_SetReceivedTimes+3
  4589  0DE2  0A84               	incf	4,f
  4590  0DE3  0800               	movf	0,w
  4591  0DE4  00B1               	movwf	??_SetReceivedTimes+4
  4592  0DE5  0836               	movf	SetReceivedTimes@colorId,w
  4593  0DE6  00B2               	movwf	??_SetReceivedTimes+5
  4594  0DE7  0732               	addwf	??_SetReceivedTimes+5,w
  4595  0DE8  3E06               	addlw	6
  4596  0DE9  0730               	addwf	??_SetReceivedTimes+3,w
  4597  0DEA  00B3               	movwf	??_SetReceivedTimes+6
  4598  0DEB  0831               	movf	??_SetReceivedTimes+4,w
  4599  0DEC  1803               	skipnc
  4600  0DED  3E01               	addlw	1
  4601  0DEE  00B4               	movwf	??_SetReceivedTimes+7
  4602  0DEF  0833               	movf	??_SetReceivedTimes+6,w
  4603  0DF0  0084               	movwf	4
  4604  0DF1  1783               	bsf	3,7
  4605  0DF2  1C34               	btfss	??_SetReceivedTimes+7,0
  4606  0DF3  1383               	bcf	3,7
  4607  0DF4  0824               	movf	?_GetTime,w
  4608  0DF5  0080               	movwf	0
  4609  0DF6  0A84               	incf	4,f
  4610  0DF7  0825               	movf	?_GetTime+1,w
  4611  0DF8  0080               	movwf	0
  4612  0DF9                     l4053:	
  4613                           
  4614                           ;./CustomLib/TrafficLight.h: 99:     }
  4615  0DF9  3001               	movlw	1
  4616  0DFA  00AD               	movwf	??_SetReceivedTimes
  4617  0DFB  082D               	movf	??_SetReceivedTimes,w
  4618  0DFC  07B9               	addwf	SetReceivedTimes@i,f
  4619  0DFD  2D95               	goto	l4041
  4620  0DFE                     l172:	
  4621  0DFE  0008               	return
  4622  0DFF                     __end_of_SetReceivedTimes:	
  4623                           
  4624                           	psect	text14
  4625  0A27                     __ptext14:	
  4626 ;; *************** function ___bmul *****************
  4627 ;; Defined at:
  4628 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  multiplier      1    wreg     unsigned char 
  4631 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4634 ;;  product         1    6[BANK0 ] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      unsigned char 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4644 ;;      Params:         0       1       0       0       0
  4645 ;;      Locals:         0       2       0       0       0
  4646 ;;      Temps:          0       1       0       0       0
  4647 ;;      Totals:         0       4       0       0       0
  4648 ;;Total ram usage:        4 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    3
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_SetReceivedTimes
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function ___bmul
  4660  0A27                     ___bmul:	
  4661                           
  4662                           ;incstack = 0
  4663                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4664                           ;___bmul@multiplier stored from wreg
  4665  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0A29  00A7               	movwf	___bmul@multiplier
  4668  0A2A                     l3823:	
  4669  0A2A  01A6               	clrf	___bmul@product
  4670  0A2B                     l3825:	
  4671  0A2B  1C27               	btfss	___bmul@multiplier,0
  4672  0A2C  2A2E               	goto	u3231
  4673  0A2D  2A2F               	goto	u3230
  4674  0A2E                     u3231:	
  4675  0A2E  2A33               	goto	l3829
  4676  0A2F                     u3230:	
  4677  0A2F                     l3827:	
  4678  0A2F  0824               	movf	___bmul@multiplicand,w
  4679  0A30  00A5               	movwf	??___bmul
  4680  0A31  0825               	movf	??___bmul,w
  4681  0A32  07A6               	addwf	___bmul@product,f
  4682  0A33                     l3829:	
  4683  0A33  1003               	clrc
  4684  0A34  0DA4               	rlf	___bmul@multiplicand,f
  4685  0A35                     l3831:	
  4686  0A35  1003               	clrc
  4687  0A36  0CA7               	rrf	___bmul@multiplier,f
  4688  0A37  0827               	movf	___bmul@multiplier,w
  4689  0A38  1D03               	btfss	3,2
  4690  0A39  2A3B               	goto	u3241
  4691  0A3A  2A3C               	goto	u3240
  4692  0A3B                     u3241:	
  4693  0A3B  2A2B               	goto	l3825
  4694  0A3C                     u3240:	
  4695  0A3C                     l3833:	
  4696  0A3C  0826               	movf	___bmul@product,w
  4697  0A3D                     l471:	
  4698  0A3D  0008               	return
  4699  0A3E                     __end_of___bmul:	
  4700                           
  4701                           	psect	text15
  4702  0B2B                     __ptext15:	
  4703 ;; *************** function _GetTime *****************
  4704 ;; Defined at:
  4705 ;;		line 38 in file "./CustomLib/TrafficLight.h"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  index           1    wreg     unsigned char 
  4708 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4709 ;;		 -> dataFromGateway(15), 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  index           1    8[BANK0 ] unsigned char 
  4712 ;;  tmp             2   10[BANK0 ] int 
  4713 ;;  shortInt        1    9[BANK0 ] struct .
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  2    4[BANK0 ] int 
  4716 ;; Registers used:
  4717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4723 ;;      Params:         0       2       0       0       0
  4724 ;;      Locals:         0       4       0       0       0
  4725 ;;      Temps:          0       2       0       0       0
  4726 ;;      Totals:         0       8       0       0       0
  4727 ;;Total ram usage:        8 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    3
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_SetReceivedTimes
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           
  4738                           ;psect for function _GetTime
  4739  0B2B                     _GetTime:	
  4740                           
  4741                           ;incstack = 0
  4742                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4743                           ;GetTime@index stored from wreg
  4744  0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  4745  0B2C  1303               	bcf	3,6	;RP1=0, select bank0
  4746  0B2D  00A8               	movwf	GetTime@index
  4747  0B2E                     l3787:	
  4748                           
  4749                           ;./CustomLib/TrafficLight.h: 38: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 39: {;./CustomLib/TrafficLight.h: 40:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 44:     } shortInt;;./CustomLib/TrafficLight.h: 46:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4750  0B2E  0828               	movf	GetTime@index,w
  4751  0B2F  0724               	addwf	GetTime@_dataFromGateway,w
  4752  0B30  00A6               	movwf	??_GetTime
  4753  0B31  0826               	movf	??_GetTime,w
  4754  0B32  3E03               	addlw	3
  4755  0B33  0084               	movwf	4
  4756  0B34  307F               	movlw	127
  4757  0B35  1383               	bcf	3,7	;select IRP bank0
  4758  0B36  0500               	andwf	0,w
  4759  0B37  00A7               	movwf	??_GetTime+1
  4760  0B38  0829               	movf	GetTime@shortInt,w
  4761  0B39  0627               	xorwf	??_GetTime+1,w
  4762  0B3A  3980               	andlw	-128
  4763  0B3B  0627               	xorwf	??_GetTime+1,w
  4764  0B3C  00A9               	movwf	GetTime@shortInt
  4765  0B3D                     l3789:	
  4766                           
  4767                           ;./CustomLib/TrafficLight.h: 47:     tmp = shortInt.Val;
  4768  0B3D  0829               	movf	GetTime@shortInt,w
  4769  0B3E  397F               	andlw	127
  4770  0B3F  00A6               	movwf	??_GetTime
  4771  0B40  01A7               	clrf	??_GetTime+1
  4772  0B41  0826               	movf	??_GetTime,w
  4773  0B42  00AA               	movwf	GetTime@tmp
  4774  0B43  0827               	movf	??_GetTime+1,w
  4775  0B44  00AB               	movwf	GetTime@tmp+1
  4776  0B45                     l3791:	
  4777                           
  4778                           ;./CustomLib/TrafficLight.h: 48:     tmp = (tmp << 7) & 0x80;
  4779  0B45  082B               	movf	GetTime@tmp+1,w
  4780  0B46  00A7               	movwf	??_GetTime+1
  4781  0B47  082A               	movf	GetTime@tmp,w
  4782  0B48  00A6               	movwf	??_GetTime
  4783  0B49  3007               	movlw	7
  4784  0B4A  00FF               	movwf	btemp+1
  4785  0B4B                     u3175:	
  4786  0B4B  1003               	clrc
  4787  0B4C  0DA6               	rlf	??_GetTime,f
  4788  0B4D  0DA7               	rlf	??_GetTime+1,f
  4789  0B4E  0BFF               	decfsz	btemp+1,f
  4790  0B4F  2B4B               	goto	u3175
  4791  0B50  3080               	movlw	128
  4792  0B51  0526               	andwf	??_GetTime,w
  4793  0B52  00AA               	movwf	GetTime@tmp
  4794  0B53  3000               	movlw	0
  4795  0B54  0527               	andwf	??_GetTime+1,w
  4796  0B55  00AB               	movwf	GetTime@tmp+1
  4797  0B56                     l3793:	
  4798                           
  4799                           ;./CustomLib/TrafficLight.h: 50:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4800  0B56  0828               	movf	GetTime@index,w
  4801  0B57  0724               	addwf	GetTime@_dataFromGateway,w
  4802  0B58  00A6               	movwf	??_GetTime
  4803  0B59  0826               	movf	??_GetTime,w
  4804  0B5A  3E02               	addlw	2
  4805  0B5B  0084               	movwf	4
  4806  0B5C  307F               	movlw	127
  4807  0B5D  0500               	andwf	0,w
  4808  0B5E  00A7               	movwf	??_GetTime+1
  4809  0B5F  0829               	movf	GetTime@shortInt,w
  4810  0B60  0627               	xorwf	??_GetTime+1,w
  4811  0B61  3980               	andlw	-128
  4812  0B62  0627               	xorwf	??_GetTime+1,w
  4813  0B63  00A9               	movwf	GetTime@shortInt
  4814  0B64                     l3795:	
  4815                           
  4816                           ;./CustomLib/TrafficLight.h: 51:     tmp = tmp | shortInt.Val;
  4817  0B64  0829               	movf	GetTime@shortInt,w
  4818  0B65  397F               	andlw	127
  4819  0B66  00A6               	movwf	??_GetTime
  4820  0B67  082A               	movf	GetTime@tmp,w
  4821  0B68  0426               	iorwf	??_GetTime,w
  4822  0B69  00AA               	movwf	GetTime@tmp
  4823  0B6A  082B               	movf	GetTime@tmp+1,w
  4824  0B6B  00AB               	movwf	GetTime@tmp+1
  4825  0B6C                     l3797:	
  4826                           
  4827                           ;./CustomLib/TrafficLight.h: 53:     return tmp;
  4828  0B6C  082B               	movf	GetTime@tmp+1,w
  4829  0B6D  00A5               	movwf	?_GetTime+1
  4830  0B6E  082A               	movf	GetTime@tmp,w
  4831  0B6F  00A4               	movwf	?_GetTime
  4832  0B70                     l155:	
  4833  0B70  0008               	return
  4834  0B71                     __end_of_GetTime:	
  4835                           
  4836                           	psect	text16
  4837  0509                     __ptext16:	
  4838 ;; *************** function _SetDefaultTimers *****************
  4839 ;; Defined at:
  4840 ;;		line 58 in file "./CustomLib/TrafficLight.h"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  rosso           2    4[BANK0 ] int 
  4843 ;;  verde           2    6[BANK0 ] int 
  4844 ;;  giallo          2    8[BANK0 ] int 
  4845 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4846 ;;		 -> Semafori(8), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  i               1   19[BANK0 ] unsigned char 
  4849 ;;  l               1   18[BANK0 ] unsigned char 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4859 ;;      Params:         0       7       0       0       0
  4860 ;;      Locals:         0       2       0       0       0
  4861 ;;      Temps:          0       7       0       0       0
  4862 ;;      Totals:         0      16       0       0       0
  4863 ;;Total ram usage:       16 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    3
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_main
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           
  4874                           ;psect for function _SetDefaultTimers
  4875  0509                     _SetDefaultTimers:	
  4876  0509                     l4003:	
  4877                           ;incstack = 0
  4878                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4879                           
  4880                           
  4881                           ;./CustomLib/TrafficLight.h: 58: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 59: {;./CustomLib/TrafficLight.h: 60: 
      +                              for (unsigned char l = 0; l < n_semafori; l++)
  4882  0509  1283               	bcf	3,5	;RP0=0, select bank0
  4883  050A  1303               	bcf	3,6	;RP1=0, select bank0
  4884  050B  01B2               	clrf	SetDefaultTimers@l
  4885  050C                     l4009:	
  4886                           
  4887                           ;./CustomLib/TrafficLight.h: 61:     {;./CustomLib/TrafficLight.h: 62:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4888  050C  01B3               	clrf	SetDefaultTimers@i
  4889  050D  2DD4               	goto	l4023
  4890  050E                     l4015:	
  4891                           
  4892                           ;./CustomLib/TrafficLight.h: 67:                 (*(_semafori)[l]).times[i] = rosso;
  4893  050E  0832               	movf	SetDefaultTimers@l,w
  4894  050F  00AB               	movwf	??_SetDefaultTimers
  4895  0510  072B               	addwf	??_SetDefaultTimers,w
  4896  0511  072A               	addwf	SetDefaultTimers@_semafori,w
  4897  0512  00AC               	movwf	??_SetDefaultTimers+1
  4898  0513  082C               	movf	??_SetDefaultTimers+1,w
  4899  0514  0084               	movwf	4
  4900  0515  1383               	bcf	3,7	;select IRP bank0
  4901  0516  0800               	movf	0,w
  4902  0517  00AD               	movwf	??_SetDefaultTimers+2
  4903  0518  0A84               	incf	4,f
  4904  0519  0800               	movf	0,w
  4905  051A  00AE               	movwf	??_SetDefaultTimers+3
  4906  051B  0833               	movf	SetDefaultTimers@i,w
  4907  051C  00AF               	movwf	??_SetDefaultTimers+4
  4908  051D  072F               	addwf	??_SetDefaultTimers+4,w
  4909  051E  072D               	addwf	??_SetDefaultTimers+2,w
  4910  051F  00B0               	movwf	??_SetDefaultTimers+5
  4911  0520  082E               	movf	??_SetDefaultTimers+3,w
  4912  0521  1803               	skipnc
  4913  0522  3E01               	addlw	1
  4914  0523  00B1               	movwf	??_SetDefaultTimers+6
  4915  0524  0830               	movf	??_SetDefaultTimers+5,w
  4916  0525  0084               	movwf	4
  4917  0526  1783               	bsf	3,7
  4918  0527  1C31               	btfss	??_SetDefaultTimers+6,0
  4919  0528  1383               	bcf	3,7
  4920  0529  0824               	movf	SetDefaultTimers@rosso,w
  4921  052A  0080               	movwf	0
  4922  052B  0A84               	incf	4,f
  4923  052C  0825               	movf	SetDefaultTimers@rosso+1,w
  4924  052D  0080               	movwf	0
  4925                           
  4926                           ;./CustomLib/TrafficLight.h: 68:                 (*(_semafori)[l]).new_times[i] = rosso;
  4927  052E  0832               	movf	SetDefaultTimers@l,w
  4928  052F  00AB               	movwf	??_SetDefaultTimers
  4929  0530  072B               	addwf	??_SetDefaultTimers,w
  4930  0531  072A               	addwf	SetDefaultTimers@_semafori,w
  4931  0532  00AC               	movwf	??_SetDefaultTimers+1
  4932  0533  082C               	movf	??_SetDefaultTimers+1,w
  4933  0534  0084               	movwf	4
  4934  0535  1383               	bcf	3,7	;select IRP bank0
  4935  0536  0800               	movf	0,w
  4936  0537  00AD               	movwf	??_SetDefaultTimers+2
  4937  0538  0A84               	incf	4,f
  4938  0539  0800               	movf	0,w
  4939  053A  00AE               	movwf	??_SetDefaultTimers+3
  4940  053B  0833               	movf	SetDefaultTimers@i,w
  4941  053C  00AF               	movwf	??_SetDefaultTimers+4
  4942  053D  072F               	addwf	??_SetDefaultTimers+4,w
  4943  053E  3E06               	addlw	6
  4944  053F  072D               	addwf	??_SetDefaultTimers+2,w
  4945  0540  00B0               	movwf	??_SetDefaultTimers+5
  4946  0541  082E               	movf	??_SetDefaultTimers+3,w
  4947  0542  1803               	skipnc
  4948  0543  3E01               	addlw	1
  4949  0544  00B1               	movwf	??_SetDefaultTimers+6
  4950  0545  0830               	movf	??_SetDefaultTimers+5,w
  4951  0546  0084               	movwf	4
  4952  0547  1783               	bsf	3,7
  4953  0548  1C31               	btfss	??_SetDefaultTimers+6,0
  4954  0549  1383               	bcf	3,7
  4955  054A  0824               	movf	SetDefaultTimers@rosso,w
  4956  054B  0080               	movwf	0
  4957  054C  0A84               	incf	4,f
  4958  054D  0825               	movf	SetDefaultTimers@rosso+1,w
  4959  054E  0080               	movwf	0
  4960                           
  4961                           ;./CustomLib/TrafficLight.h: 69:                 break;
  4962  054F  2DE7               	goto	l4025
  4963  0550                     l4017:	
  4964                           
  4965                           ;./CustomLib/TrafficLight.h: 71:                 (*(_semafori)[l]).times[i] = verde;
  4966  0550  0832               	movf	SetDefaultTimers@l,w
  4967  0551  00AB               	movwf	??_SetDefaultTimers
  4968  0552  072B               	addwf	??_SetDefaultTimers,w
  4969  0553  072A               	addwf	SetDefaultTimers@_semafori,w
  4970  0554  00AC               	movwf	??_SetDefaultTimers+1
  4971  0555  082C               	movf	??_SetDefaultTimers+1,w
  4972  0556  0084               	movwf	4
  4973  0557  1383               	bcf	3,7	;select IRP bank0
  4974  0558  0800               	movf	0,w
  4975  0559  00AD               	movwf	??_SetDefaultTimers+2
  4976  055A  0A84               	incf	4,f
  4977  055B  0800               	movf	0,w
  4978  055C  00AE               	movwf	??_SetDefaultTimers+3
  4979  055D  0833               	movf	SetDefaultTimers@i,w
  4980  055E  00AF               	movwf	??_SetDefaultTimers+4
  4981  055F  072F               	addwf	??_SetDefaultTimers+4,w
  4982  0560  072D               	addwf	??_SetDefaultTimers+2,w
  4983  0561  00B0               	movwf	??_SetDefaultTimers+5
  4984  0562  082E               	movf	??_SetDefaultTimers+3,w
  4985  0563  1803               	skipnc
  4986  0564  3E01               	addlw	1
  4987  0565  00B1               	movwf	??_SetDefaultTimers+6
  4988  0566  0830               	movf	??_SetDefaultTimers+5,w
  4989  0567  0084               	movwf	4
  4990  0568  1783               	bsf	3,7
  4991  0569  1C31               	btfss	??_SetDefaultTimers+6,0
  4992  056A  1383               	bcf	3,7
  4993  056B  0826               	movf	SetDefaultTimers@verde,w
  4994  056C  0080               	movwf	0
  4995  056D  0A84               	incf	4,f
  4996  056E  0827               	movf	SetDefaultTimers@verde+1,w
  4997  056F  0080               	movwf	0
  4998                           
  4999                           ;./CustomLib/TrafficLight.h: 72:                 (*(_semafori)[l]).new_times[i] = verde;
  5000  0570  0832               	movf	SetDefaultTimers@l,w
  5001  0571  00AB               	movwf	??_SetDefaultTimers
  5002  0572  072B               	addwf	??_SetDefaultTimers,w
  5003  0573  072A               	addwf	SetDefaultTimers@_semafori,w
  5004  0574  00AC               	movwf	??_SetDefaultTimers+1
  5005  0575  082C               	movf	??_SetDefaultTimers+1,w
  5006  0576  0084               	movwf	4
  5007  0577  1383               	bcf	3,7	;select IRP bank0
  5008  0578  0800               	movf	0,w
  5009  0579  00AD               	movwf	??_SetDefaultTimers+2
  5010  057A  0A84               	incf	4,f
  5011  057B  0800               	movf	0,w
  5012  057C  00AE               	movwf	??_SetDefaultTimers+3
  5013  057D  0833               	movf	SetDefaultTimers@i,w
  5014  057E  00AF               	movwf	??_SetDefaultTimers+4
  5015  057F  072F               	addwf	??_SetDefaultTimers+4,w
  5016  0580  3E06               	addlw	6
  5017  0581  072D               	addwf	??_SetDefaultTimers+2,w
  5018  0582  00B0               	movwf	??_SetDefaultTimers+5
  5019  0583  082E               	movf	??_SetDefaultTimers+3,w
  5020  0584  1803               	skipnc
  5021  0585  3E01               	addlw	1
  5022  0586  00B1               	movwf	??_SetDefaultTimers+6
  5023  0587  0830               	movf	??_SetDefaultTimers+5,w
  5024  0588  0084               	movwf	4
  5025  0589  1783               	bsf	3,7
  5026  058A  1C31               	btfss	??_SetDefaultTimers+6,0
  5027  058B  1383               	bcf	3,7
  5028  058C  0826               	movf	SetDefaultTimers@verde,w
  5029  058D  0080               	movwf	0
  5030  058E  0A84               	incf	4,f
  5031  058F  0827               	movf	SetDefaultTimers@verde+1,w
  5032  0590  0080               	movwf	0
  5033                           
  5034                           ;./CustomLib/TrafficLight.h: 73:                 break;
  5035  0591  2DE7               	goto	l4025
  5036  0592                     l4019:	
  5037                           
  5038                           ;./CustomLib/TrafficLight.h: 75:                 (*(_semafori)[l]).times[i] = giallo;
  5039  0592  0832               	movf	SetDefaultTimers@l,w
  5040  0593  00AB               	movwf	??_SetDefaultTimers
  5041  0594  072B               	addwf	??_SetDefaultTimers,w
  5042  0595  072A               	addwf	SetDefaultTimers@_semafori,w
  5043  0596  00AC               	movwf	??_SetDefaultTimers+1
  5044  0597  082C               	movf	??_SetDefaultTimers+1,w
  5045  0598  0084               	movwf	4
  5046  0599  1383               	bcf	3,7	;select IRP bank0
  5047  059A  0800               	movf	0,w
  5048  059B  00AD               	movwf	??_SetDefaultTimers+2
  5049  059C  0A84               	incf	4,f
  5050  059D  0800               	movf	0,w
  5051  059E  00AE               	movwf	??_SetDefaultTimers+3
  5052  059F  0833               	movf	SetDefaultTimers@i,w
  5053  05A0  00AF               	movwf	??_SetDefaultTimers+4
  5054  05A1  072F               	addwf	??_SetDefaultTimers+4,w
  5055  05A2  072D               	addwf	??_SetDefaultTimers+2,w
  5056  05A3  00B0               	movwf	??_SetDefaultTimers+5
  5057  05A4  082E               	movf	??_SetDefaultTimers+3,w
  5058  05A5  1803               	skipnc
  5059  05A6  3E01               	addlw	1
  5060  05A7  00B1               	movwf	??_SetDefaultTimers+6
  5061  05A8  0830               	movf	??_SetDefaultTimers+5,w
  5062  05A9  0084               	movwf	4
  5063  05AA  1783               	bsf	3,7
  5064  05AB  1C31               	btfss	??_SetDefaultTimers+6,0
  5065  05AC  1383               	bcf	3,7
  5066  05AD  0828               	movf	SetDefaultTimers@giallo,w
  5067  05AE  0080               	movwf	0
  5068  05AF  0A84               	incf	4,f
  5069  05B0  0829               	movf	SetDefaultTimers@giallo+1,w
  5070  05B1  0080               	movwf	0
  5071                           
  5072                           ;./CustomLib/TrafficLight.h: 76:                 (*(_semafori)[l]).new_times[i] = giallo
      +                          ;
  5073  05B2  0832               	movf	SetDefaultTimers@l,w
  5074  05B3  00AB               	movwf	??_SetDefaultTimers
  5075  05B4  072B               	addwf	??_SetDefaultTimers,w
  5076  05B5  072A               	addwf	SetDefaultTimers@_semafori,w
  5077  05B6  00AC               	movwf	??_SetDefaultTimers+1
  5078  05B7  082C               	movf	??_SetDefaultTimers+1,w
  5079  05B8  0084               	movwf	4
  5080  05B9  1383               	bcf	3,7	;select IRP bank0
  5081  05BA  0800               	movf	0,w
  5082  05BB  00AD               	movwf	??_SetDefaultTimers+2
  5083  05BC  0A84               	incf	4,f
  5084  05BD  0800               	movf	0,w
  5085  05BE  00AE               	movwf	??_SetDefaultTimers+3
  5086  05BF  0833               	movf	SetDefaultTimers@i,w
  5087  05C0  00AF               	movwf	??_SetDefaultTimers+4
  5088  05C1  072F               	addwf	??_SetDefaultTimers+4,w
  5089  05C2  3E06               	addlw	6
  5090  05C3  072D               	addwf	??_SetDefaultTimers+2,w
  5091  05C4  00B0               	movwf	??_SetDefaultTimers+5
  5092  05C5  082E               	movf	??_SetDefaultTimers+3,w
  5093  05C6  1803               	skipnc
  5094  05C7  3E01               	addlw	1
  5095  05C8  00B1               	movwf	??_SetDefaultTimers+6
  5096  05C9  0830               	movf	??_SetDefaultTimers+5,w
  5097  05CA  0084               	movwf	4
  5098  05CB  1783               	bsf	3,7
  5099  05CC  1C31               	btfss	??_SetDefaultTimers+6,0
  5100  05CD  1383               	bcf	3,7
  5101  05CE  0828               	movf	SetDefaultTimers@giallo,w
  5102  05CF  0080               	movwf	0
  5103  05D0  0A84               	incf	4,f
  5104  05D1  0829               	movf	SetDefaultTimers@giallo+1,w
  5105  05D2  0080               	movwf	0
  5106                           
  5107                           ;./CustomLib/TrafficLight.h: 77:                 break;
  5108  05D3  2DE7               	goto	l4025
  5109  05D4                     l4023:	
  5110  05D4  0833               	movf	SetDefaultTimers@i,w
  5111  05D5  00AB               	movwf	??_SetDefaultTimers
  5112  05D6  01AC               	clrf	??_SetDefaultTimers+1
  5113                           
  5114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5115                           ; Switch size 1, requested type "simple"
  5116                           ; Number of cases is 1, Range of values is 0 to 0
  5117                           ; switch strategies available:
  5118                           ; Name         Instructions Cycles
  5119                           ; simple_byte            4     3 (average)
  5120                           ; direct_byte           11     8 (fixed)
  5121                           ; jumptable            260     6 (fixed)
  5122                           ;	Chosen strategy is simple_byte
  5123  05D7  082C               	movf	??_SetDefaultTimers+1,w
  5124  05D8  3A00               	xorlw	0	; case 0
  5125  05D9  1903               	skipnz
  5126  05DA  2DDC               	goto	l4573
  5127  05DB  2DE7               	goto	l4025
  5128  05DC                     l4573:	
  5129                           
  5130                           ; Switch size 1, requested type "simple"
  5131                           ; Number of cases is 3, Range of values is 0 to 2
  5132                           ; switch strategies available:
  5133                           ; Name         Instructions Cycles
  5134                           ; simple_byte           10     6 (average)
  5135                           ; direct_byte           17     8 (fixed)
  5136                           ; jumptable            260     6 (fixed)
  5137                           ;	Chosen strategy is simple_byte
  5138  05DC  082B               	movf	??_SetDefaultTimers,w
  5139  05DD  3A00               	xorlw	0	; case 0
  5140  05DE  1903               	skipnz
  5141  05DF  2D0E               	goto	l4015
  5142  05E0  3A01               	xorlw	1	; case 1
  5143  05E1  1903               	skipnz
  5144  05E2  2D50               	goto	l4017
  5145  05E3  3A03               	xorlw	3	; case 2
  5146  05E4  1903               	skipnz
  5147  05E5  2D92               	goto	l4019
  5148  05E6  2DE7               	goto	l4025
  5149  05E7                     l4025:	
  5150                           
  5151                           ;./CustomLib/TrafficLight.h: 79:         }
  5152  05E7  3001               	movlw	1
  5153  05E8  00AB               	movwf	??_SetDefaultTimers
  5154  05E9  082B               	movf	??_SetDefaultTimers,w
  5155  05EA  07B3               	addwf	SetDefaultTimers@i,f
  5156  05EB                     l4027:	
  5157  05EB  3003               	movlw	3
  5158  05EC  0233               	subwf	SetDefaultTimers@i,w
  5159  05ED  1C03               	skipc
  5160  05EE  2DF0               	goto	u3591
  5161  05EF  2DF1               	goto	u3590
  5162  05F0                     u3591:	
  5163  05F0  2DD4               	goto	l4023
  5164  05F1                     u3590:	
  5165  05F1                     l4029:	
  5166                           
  5167                           ;./CustomLib/TrafficLight.h: 80:     }
  5168  05F1  3001               	movlw	1
  5169  05F2  00AB               	movwf	??_SetDefaultTimers
  5170  05F3  082B               	movf	??_SetDefaultTimers,w
  5171  05F4  07B2               	addwf	SetDefaultTimers@l,f
  5172  05F5                     l4031:	
  5173  05F5  3002               	movlw	2
  5174  05F6  0232               	subwf	SetDefaultTimers@l,w
  5175  05F7  1C03               	skipc
  5176  05F8  2DFA               	goto	u3601
  5177  05F9  2DFB               	goto	u3600
  5178  05FA                     u3601:	
  5179  05FA  2D0C               	goto	l4009
  5180  05FB                     u3600:	
  5181  05FB                     l4033:	
  5182                           
  5183                           ;./CustomLib/TrafficLight.h: 82:     (*(_semafori)[0]).lux_select = 0;
  5184  05FB  082A               	movf	SetDefaultTimers@_semafori,w
  5185  05FC  0084               	movwf	4
  5186  05FD  1383               	bcf	3,7	;select IRP bank0
  5187  05FE  0800               	movf	0,w
  5188  05FF  00AB               	movwf	??_SetDefaultTimers
  5189  0600  0A84               	incf	4,f
  5190  0601  0800               	movf	0,w
  5191  0602  00AC               	movwf	??_SetDefaultTimers+1
  5192  0603  082B               	movf	??_SetDefaultTimers,w
  5193  0604  3E0C               	addlw	12
  5194  0605  00AD               	movwf	??_SetDefaultTimers+2
  5195  0606  082C               	movf	??_SetDefaultTimers+1,w
  5196  0607  1803               	skipnc
  5197  0608  3E01               	addlw	1
  5198  0609  3E00               	addlw	0
  5199  060A  00AE               	movwf	??_SetDefaultTimers+3
  5200  060B  082D               	movf	??_SetDefaultTimers+2,w
  5201  060C  0084               	movwf	4
  5202  060D  1783               	bsf	3,7
  5203  060E  1C2E               	btfss	??_SetDefaultTimers+3,0
  5204  060F  1383               	bcf	3,7
  5205  0610  0180               	clrf	0
  5206                           
  5207                           ;./CustomLib/TrafficLight.h: 83:     (*(_semafori)[0]).new_lux_select = 0;
  5208  0611  082A               	movf	SetDefaultTimers@_semafori,w
  5209  0612  0084               	movwf	4
  5210  0613  1383               	bcf	3,7	;select IRP bank0
  5211  0614  0800               	movf	0,w
  5212  0615  00AB               	movwf	??_SetDefaultTimers
  5213  0616  0A84               	incf	4,f
  5214  0617  0800               	movf	0,w
  5215  0618  00AC               	movwf	??_SetDefaultTimers+1
  5216  0619  082B               	movf	??_SetDefaultTimers,w
  5217  061A  3E0D               	addlw	13
  5218  061B  00AD               	movwf	??_SetDefaultTimers+2
  5219  061C  082C               	movf	??_SetDefaultTimers+1,w
  5220  061D  1803               	skipnc
  5221  061E  3E01               	addlw	1
  5222  061F  3E00               	addlw	0
  5223  0620  00AE               	movwf	??_SetDefaultTimers+3
  5224  0621  082D               	movf	??_SetDefaultTimers+2,w
  5225  0622  0084               	movwf	4
  5226  0623  1783               	bsf	3,7
  5227  0624  1C2E               	btfss	??_SetDefaultTimers+3,0
  5228  0625  1383               	bcf	3,7
  5229  0626  0180               	clrf	0
  5230                           
  5231                           ;./CustomLib/TrafficLight.h: 84:     (*(_semafori)[1]).lux_select = 1;
  5232  0627  082A               	movf	SetDefaultTimers@_semafori,w
  5233  0628  3E02               	addlw	2
  5234  0629  0084               	movwf	4
  5235  062A  1383               	bcf	3,7	;select IRP bank0
  5236  062B  0800               	movf	0,w
  5237  062C  00AB               	movwf	??_SetDefaultTimers
  5238  062D  0A84               	incf	4,f
  5239  062E  0800               	movf	0,w
  5240  062F  00AC               	movwf	??_SetDefaultTimers+1
  5241  0630  082B               	movf	??_SetDefaultTimers,w
  5242  0631  3E0C               	addlw	12
  5243  0632  00AD               	movwf	??_SetDefaultTimers+2
  5244  0633  082C               	movf	??_SetDefaultTimers+1,w
  5245  0634  1803               	skipnc
  5246  0635  3E01               	addlw	1
  5247  0636  3E00               	addlw	0
  5248  0637  00AE               	movwf	??_SetDefaultTimers+3
  5249  0638  082D               	movf	??_SetDefaultTimers+2,w
  5250  0639  0084               	movwf	4
  5251  063A  1783               	bsf	3,7
  5252  063B  1C2E               	btfss	??_SetDefaultTimers+3,0
  5253  063C  1383               	bcf	3,7
  5254  063D  0180               	clrf	0
  5255  063E  0A80               	incf	0,f
  5256                           
  5257                           ;./CustomLib/TrafficLight.h: 85:     (*(_semafori)[1]).new_lux_select = 1;
  5258  063F  082A               	movf	SetDefaultTimers@_semafori,w
  5259  0640  3E02               	addlw	2
  5260  0641  0084               	movwf	4
  5261  0642  1383               	bcf	3,7	;select IRP bank0
  5262  0643  0800               	movf	0,w
  5263  0644  00AB               	movwf	??_SetDefaultTimers
  5264  0645  0A84               	incf	4,f
  5265  0646  0800               	movf	0,w
  5266  0647  00AC               	movwf	??_SetDefaultTimers+1
  5267  0648  082B               	movf	??_SetDefaultTimers,w
  5268  0649  3E0D               	addlw	13
  5269  064A  00AD               	movwf	??_SetDefaultTimers+2
  5270  064B  082C               	movf	??_SetDefaultTimers+1,w
  5271  064C  1803               	skipnc
  5272  064D  3E01               	addlw	1
  5273  064E  3E00               	addlw	0
  5274  064F  00AE               	movwf	??_SetDefaultTimers+3
  5275  0650  082D               	movf	??_SetDefaultTimers+2,w
  5276  0651  0084               	movwf	4
  5277  0652  1783               	bsf	3,7
  5278  0653  1C2E               	btfss	??_SetDefaultTimers+3,0
  5279  0654  1383               	bcf	3,7
  5280  0655  0180               	clrf	0
  5281  0656  0A80               	incf	0,f
  5282  0657                     l167:	
  5283  0657  0008               	return
  5284  0658                     __end_of_SetDefaultTimers:	
  5285                           
  5286                           	psect	text17
  5287  0DFF                     __ptext17:	
  5288 ;; *************** function _GetDigits *****************
  5289 ;; Defined at:
  5290 ;;		line 29 in file "./CustomLib/Conversions.h"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  centinaia       1    wreg     PTR unsigned char 
  5293 ;;		 -> centinaia(1), 
  5294 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  5295 ;;		 -> decine(1), 
  5296 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  5297 ;;		 -> unita(1), 
  5298 ;;  Time            2   22[BANK0 ] int 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  5301 ;;		 -> centinaia(1), 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5311 ;;      Params:         0       4       0       0       0
  5312 ;;      Locals:         0       3       0       0       0
  5313 ;;      Temps:          0       1       0       0       0
  5314 ;;      Totals:         0       8       0       0       0
  5315 ;;Total ram usage:        8 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    4
  5318 ;; This function calls:
  5319 ;;		___awdiv
  5320 ;;		___awmod
  5321 ;; This function is called by:
  5322 ;;		_main
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           
  5327                           ;psect for function _GetDigits
  5328  0DFF                     _GetDigits:	
  5329                           
  5330                           ;incstack = 0
  5331                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5332                           ;GetDigits@centinaia stored from wreg
  5333  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  5334  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  5335  0E01  00BB               	movwf	GetDigits@centinaia
  5336  0E02                     l3963:	
  5337                           
  5338                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     while(Time/1000>0)
  5339  0E02  2E18               	goto	l3967
  5340  0E03                     l3965:	
  5341                           
  5342                           ;./CustomLib/Conversions.h: 32:     {;./CustomLib/Conversions.h: 33:         Time=Time/1
      +                          0;
  5343  0E03  300A               	movlw	10
  5344  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  5345  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  5346  0E06  00AB               	movwf	___awdiv@divisor
  5347  0E07  3000               	movlw	0
  5348  0E08  00AC               	movwf	___awdiv@divisor+1
  5349  0E09  0837               	movf	GetDigits@Time+1,w
  5350  0E0A  00AE               	movwf	___awdiv@dividend+1
  5351  0E0B  0836               	movf	GetDigits@Time,w
  5352  0E0C  00AD               	movwf	___awdiv@dividend
  5353  0E0D  120A  158A  2528  120A  158A  	fcall	___awdiv
  5354  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  5355  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  5356  0E14  082C               	movf	?___awdiv+1,w
  5357  0E15  00B7               	movwf	GetDigits@Time+1
  5358  0E16  082B               	movf	?___awdiv,w
  5359  0E17  00B6               	movwf	GetDigits@Time
  5360  0E18                     l3967:	
  5361                           
  5362                           ;./CustomLib/Conversions.h: 31:     while(Time/1000>0)
  5363  0E18  30E8               	movlw	232
  5364  0E19  00AB               	movwf	___awdiv@divisor
  5365  0E1A  3003               	movlw	3
  5366  0E1B  00AC               	movwf	___awdiv@divisor+1
  5367  0E1C  0837               	movf	GetDigits@Time+1,w
  5368  0E1D  00AE               	movwf	___awdiv@dividend+1
  5369  0E1E  0836               	movf	GetDigits@Time,w
  5370  0E1F  00AD               	movwf	___awdiv@dividend
  5371  0E20  120A  158A  2528  120A  158A  	fcall	___awdiv
  5372  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  5373  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  5374  0E27  082C               	movf	?___awdiv+1,w
  5375  0E28  3A80               	xorlw	128
  5376  0E29  00FF               	movwf	btemp+1
  5377  0E2A  3080               	movlw	128
  5378  0E2B  027F               	subwf	btemp+1,w
  5379  0E2C  1D03               	skipz
  5380  0E2D  2E30               	goto	u3545
  5381  0E2E  3001               	movlw	1
  5382  0E2F  022B               	subwf	?___awdiv,w
  5383  0E30                     u3545:	
  5384  0E30  1803               	skipnc
  5385  0E31  2E33               	goto	u3541
  5386  0E32  2E34               	goto	u3540
  5387  0E33                     u3541:	
  5388  0E33  2E03               	goto	l3965
  5389  0E34                     u3540:	
  5390  0E34                     l3969:	
  5391                           
  5392                           ;./CustomLib/Conversions.h: 36:     *centinaia = Time / 100;
  5393  0E34  3064               	movlw	100
  5394  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  5395  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  5396  0E37  00AB               	movwf	___awdiv@divisor
  5397  0E38  3000               	movlw	0
  5398  0E39  00AC               	movwf	___awdiv@divisor+1
  5399  0E3A  0837               	movf	GetDigits@Time+1,w
  5400  0E3B  00AE               	movwf	___awdiv@dividend+1
  5401  0E3C  0836               	movf	GetDigits@Time,w
  5402  0E3D  00AD               	movwf	___awdiv@dividend
  5403  0E3E  120A  158A  2528  120A  158A  	fcall	___awdiv
  5404  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  5405  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  5406  0E45  082B               	movf	?___awdiv,w
  5407  0E46  00B8               	movwf	??_GetDigits
  5408  0E47  083B               	movf	GetDigits@centinaia,w
  5409  0E48  0084               	movwf	4
  5410  0E49  0838               	movf	??_GetDigits,w
  5411  0E4A  1383               	bcf	3,7	;select IRP bank0
  5412  0E4B  0080               	movwf	0
  5413                           
  5414                           ;./CustomLib/Conversions.h: 37:     *decine = (Time % 100) / 10;
  5415  0E4C  300A               	movlw	10
  5416  0E4D  00AB               	movwf	___awdiv@divisor
  5417  0E4E  3000               	movlw	0
  5418  0E4F  00AC               	movwf	___awdiv@divisor+1
  5419  0E50  0837               	movf	GetDigits@Time+1,w
  5420  0E51  00A7               	movwf	___awmod@dividend+1
  5421  0E52  0836               	movf	GetDigits@Time,w
  5422  0E53  00A6               	movwf	___awmod@dividend
  5423  0E54  3064               	movlw	100
  5424  0E55  00A4               	movwf	___awmod@divisor
  5425  0E56  3000               	movlw	0
  5426  0E57  00A5               	movwf	___awmod@divisor+1
  5427  0E58  120A  158A  2468  120A  158A  	fcall	___awmod
  5428  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  5429  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  5430  0E5F  0825               	movf	?___awmod+1,w
  5431  0E60  00AE               	movwf	___awdiv@dividend+1
  5432  0E61  0824               	movf	?___awmod,w
  5433  0E62  00AD               	movwf	___awdiv@dividend
  5434  0E63  120A  158A  2528  120A  158A  	fcall	___awdiv
  5435  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  5437  0E6A  082B               	movf	?___awdiv,w
  5438  0E6B  00B8               	movwf	??_GetDigits
  5439  0E6C  0834               	movf	GetDigits@decine,w
  5440  0E6D  0084               	movwf	4
  5441  0E6E  0838               	movf	??_GetDigits,w
  5442  0E6F  1383               	bcf	3,7	;select IRP bank0
  5443  0E70  0080               	movwf	0
  5444  0E71                     l3971:	
  5445                           
  5446                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  5447  0E71  0837               	movf	GetDigits@Time+1,w
  5448  0E72  00A7               	movwf	___awmod@dividend+1
  5449  0E73  0836               	movf	GetDigits@Time,w
  5450  0E74  00A6               	movwf	___awmod@dividend
  5451  0E75  3064               	movlw	100
  5452  0E76  00A4               	movwf	___awmod@divisor
  5453  0E77  3000               	movlw	0
  5454  0E78  00A5               	movwf	___awmod@divisor+1
  5455  0E79  120A  158A  2468  120A  158A  	fcall	___awmod
  5456  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  5457  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  5458  0E80  0825               	movf	?___awmod+1,w
  5459  0E81  00BA               	movwf	_GetDigits$1200+1
  5460  0E82  0824               	movf	?___awmod,w
  5461  0E83  00B9               	movwf	_GetDigits$1200
  5462  0E84                     l3973:	
  5463                           
  5464                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  5465  0E84  300A               	movlw	10
  5466  0E85  00A4               	movwf	___awmod@divisor
  5467  0E86  3000               	movlw	0
  5468  0E87  00A5               	movwf	___awmod@divisor+1
  5469  0E88  083A               	movf	_GetDigits$1200+1,w
  5470  0E89  00A7               	movwf	___awmod@dividend+1
  5471  0E8A  0839               	movf	_GetDigits$1200,w
  5472  0E8B  00A6               	movwf	___awmod@dividend
  5473  0E8C  120A  158A  2468  120A  158A  	fcall	___awmod
  5474  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  5475  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  5476  0E93  0824               	movf	?___awmod,w
  5477  0E94  00B8               	movwf	??_GetDigits
  5478  0E95  0835               	movf	GetDigits@unita,w
  5479  0E96  0084               	movwf	4
  5480  0E97  0838               	movf	??_GetDigits,w
  5481  0E98  1383               	bcf	3,7	;select IRP bank0
  5482  0E99  0080               	movwf	0
  5483  0E9A                     l98:	
  5484  0E9A  0008               	return
  5485  0E9B                     __end_of_GetDigits:	
  5486                           
  5487                           	psect	text18
  5488  0C68                     __ptext18:	
  5489 ;; *************** function ___awmod *****************
  5490 ;; Defined at:
  5491 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  divisor         2    4[BANK0 ] int 
  5494 ;;  dividend        2    6[BANK0 ] int 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  sign            1   10[BANK0 ] unsigned char 
  5497 ;;  counter         1    9[BANK0 ] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  2    4[BANK0 ] int 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5507 ;;      Params:         0       4       0       0       0
  5508 ;;      Locals:         0       2       0       0       0
  5509 ;;      Temps:          0       1       0       0       0
  5510 ;;      Totals:         0       7       0       0       0
  5511 ;;Total ram usage:        7 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    3
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_GetDigits
  5518 ;;		_ShowDigitsOnDisplay
  5519 ;;		_intToString
  5520 ;;		_ChangeTrafficLight
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           
  5525                           ;psect for function ___awmod
  5526  0C68                     ___awmod:	
  5527  0C68                     l3921:	
  5528                           ;incstack = 0
  5529                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5530                           
  5531  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  5532  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  5533  0C6A  01AA               	clrf	___awmod@sign
  5534  0C6B                     l3923:	
  5535  0C6B  1FA7               	btfss	___awmod@dividend+1,7
  5536  0C6C  2C6E               	goto	u3451
  5537  0C6D  2C6F               	goto	u3450
  5538  0C6E                     u3451:	
  5539  0C6E  2C76               	goto	l3929
  5540  0C6F                     u3450:	
  5541  0C6F                     l3925:	
  5542  0C6F  09A6               	comf	___awmod@dividend,f
  5543  0C70  09A7               	comf	___awmod@dividend+1,f
  5544  0C71  0AA6               	incf	___awmod@dividend,f
  5545  0C72  1903               	skipnz
  5546  0C73  0AA7               	incf	___awmod@dividend+1,f
  5547  0C74                     l3927:	
  5548  0C74  01AA               	clrf	___awmod@sign
  5549  0C75  0AAA               	incf	___awmod@sign,f
  5550  0C76                     l3929:	
  5551  0C76  1FA5               	btfss	___awmod@divisor+1,7
  5552  0C77  2C79               	goto	u3461
  5553  0C78  2C7A               	goto	u3460
  5554  0C79                     u3461:	
  5555  0C79  2C7F               	goto	l3933
  5556  0C7A                     u3460:	
  5557  0C7A                     l3931:	
  5558  0C7A  09A4               	comf	___awmod@divisor,f
  5559  0C7B  09A5               	comf	___awmod@divisor+1,f
  5560  0C7C  0AA4               	incf	___awmod@divisor,f
  5561  0C7D  1903               	skipnz
  5562  0C7E  0AA5               	incf	___awmod@divisor+1,f
  5563  0C7F                     l3933:	
  5564  0C7F  0824               	movf	___awmod@divisor,w
  5565  0C80  0425               	iorwf	___awmod@divisor+1,w
  5566  0C81  1903               	btfsc	3,2
  5567  0C82  2C84               	goto	u3471
  5568  0C83  2C85               	goto	u3470
  5569  0C84                     u3471:	
  5570  0C84  2CB4               	goto	l3951
  5571  0C85                     u3470:	
  5572  0C85                     l3935:	
  5573  0C85  01A9               	clrf	___awmod@counter
  5574  0C86  0AA9               	incf	___awmod@counter,f
  5575  0C87  2C93               	goto	l3941
  5576  0C88                     l3937:	
  5577  0C88  3001               	movlw	1
  5578  0C89                     u3485:	
  5579  0C89  1003               	clrc
  5580  0C8A  0DA4               	rlf	___awmod@divisor,f
  5581  0C8B  0DA5               	rlf	___awmod@divisor+1,f
  5582  0C8C  3EFF               	addlw	-1
  5583  0C8D  1D03               	skipz
  5584  0C8E  2C89               	goto	u3485
  5585  0C8F                     l3939:	
  5586  0C8F  3001               	movlw	1
  5587  0C90  00A8               	movwf	??___awmod
  5588  0C91  0828               	movf	??___awmod,w
  5589  0C92  07A9               	addwf	___awmod@counter,f
  5590  0C93                     l3941:	
  5591  0C93  1FA5               	btfss	___awmod@divisor+1,7
  5592  0C94  2C96               	goto	u3491
  5593  0C95  2C97               	goto	u3490
  5594  0C96                     u3491:	
  5595  0C96  2C88               	goto	l3937
  5596  0C97                     u3490:	
  5597  0C97                     l3943:	
  5598  0C97  0825               	movf	___awmod@divisor+1,w
  5599  0C98  0227               	subwf	___awmod@dividend+1,w
  5600  0C99  1D03               	skipz
  5601  0C9A  2C9D               	goto	u3505
  5602  0C9B  0824               	movf	___awmod@divisor,w
  5603  0C9C  0226               	subwf	___awmod@dividend,w
  5604  0C9D                     u3505:	
  5605  0C9D  1C03               	skipc
  5606  0C9E  2CA0               	goto	u3501
  5607  0C9F  2CA1               	goto	u3500
  5608  0CA0                     u3501:	
  5609  0CA0  2CA7               	goto	l3947
  5610  0CA1                     u3500:	
  5611  0CA1                     l3945:	
  5612  0CA1  0824               	movf	___awmod@divisor,w
  5613  0CA2  02A6               	subwf	___awmod@dividend,f
  5614  0CA3  0825               	movf	___awmod@divisor+1,w
  5615  0CA4  1C03               	skipc
  5616  0CA5  03A7               	decf	___awmod@dividend+1,f
  5617  0CA6  02A7               	subwf	___awmod@dividend+1,f
  5618  0CA7                     l3947:	
  5619  0CA7  3001               	movlw	1
  5620  0CA8                     u3515:	
  5621  0CA8  1003               	clrc
  5622  0CA9  0CA5               	rrf	___awmod@divisor+1,f
  5623  0CAA  0CA4               	rrf	___awmod@divisor,f
  5624  0CAB  3EFF               	addlw	-1
  5625  0CAC  1D03               	skipz
  5626  0CAD  2CA8               	goto	u3515
  5627  0CAE                     l3949:	
  5628  0CAE  3001               	movlw	1
  5629  0CAF  02A9               	subwf	___awmod@counter,f
  5630  0CB0  1D03               	btfss	3,2
  5631  0CB1  2CB3               	goto	u3521
  5632  0CB2  2CB4               	goto	u3520
  5633  0CB3                     u3521:	
  5634  0CB3  2C97               	goto	l3943
  5635  0CB4                     u3520:	
  5636  0CB4                     l3951:	
  5637  0CB4  082A               	movf	___awmod@sign,w
  5638  0CB5  1903               	btfsc	3,2
  5639  0CB6  2CB8               	goto	u3531
  5640  0CB7  2CB9               	goto	u3530
  5641  0CB8                     u3531:	
  5642  0CB8  2CBE               	goto	l3955
  5643  0CB9                     u3530:	
  5644  0CB9                     l3953:	
  5645  0CB9  09A6               	comf	___awmod@dividend,f
  5646  0CBA  09A7               	comf	___awmod@dividend+1,f
  5647  0CBB  0AA6               	incf	___awmod@dividend,f
  5648  0CBC  1903               	skipnz
  5649  0CBD  0AA7               	incf	___awmod@dividend+1,f
  5650  0CBE                     l3955:	
  5651  0CBE  0827               	movf	___awmod@dividend+1,w
  5652  0CBF  00A5               	movwf	?___awmod+1
  5653  0CC0  0826               	movf	___awmod@dividend,w
  5654  0CC1  00A4               	movwf	?___awmod
  5655  0CC2                     l611:	
  5656  0CC2  0008               	return
  5657  0CC3                     __end_of___awmod:	
  5658                           
  5659                           	psect	text19
  5660  0D28                     __ptext19:	
  5661 ;; *************** function ___awdiv *****************
  5662 ;; Defined at:
  5663 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  divisor         2   11[BANK0 ] int 
  5666 ;;  dividend        2   13[BANK0 ] int 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  quotient        2   18[BANK0 ] int 
  5669 ;;  sign            1   17[BANK0 ] unsigned char 
  5670 ;;  counter         1   16[BANK0 ] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  2   11[BANK0 ] int 
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5680 ;;      Params:         0       4       0       0       0
  5681 ;;      Locals:         0       4       0       0       0
  5682 ;;      Temps:          0       1       0       0       0
  5683 ;;      Totals:         0       9       0       0       0
  5684 ;;Total ram usage:        9 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:    3
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_map
  5691 ;;		_GetDigits
  5692 ;;		_intToString
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           
  5697                           ;psect for function ___awdiv
  5698  0D28                     ___awdiv:	
  5699  0D28                     l3877:	
  5700                           ;incstack = 0
  5701                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5702                           
  5703  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  5704  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  5705  0D2A  01B1               	clrf	___awdiv@sign
  5706  0D2B                     l3879:	
  5707  0D2B  1FAC               	btfss	___awdiv@divisor+1,7
  5708  0D2C  2D2E               	goto	u3351
  5709  0D2D  2D2F               	goto	u3350
  5710  0D2E                     u3351:	
  5711  0D2E  2D36               	goto	l3885
  5712  0D2F                     u3350:	
  5713  0D2F                     l3881:	
  5714  0D2F  09AB               	comf	___awdiv@divisor,f
  5715  0D30  09AC               	comf	___awdiv@divisor+1,f
  5716  0D31  0AAB               	incf	___awdiv@divisor,f
  5717  0D32  1903               	skipnz
  5718  0D33  0AAC               	incf	___awdiv@divisor+1,f
  5719  0D34                     l3883:	
  5720  0D34  01B1               	clrf	___awdiv@sign
  5721  0D35  0AB1               	incf	___awdiv@sign,f
  5722  0D36                     l3885:	
  5723  0D36  1FAE               	btfss	___awdiv@dividend+1,7
  5724  0D37  2D39               	goto	u3361
  5725  0D38  2D3A               	goto	u3360
  5726  0D39                     u3361:	
  5727  0D39  2D43               	goto	l3891
  5728  0D3A                     u3360:	
  5729  0D3A                     l3887:	
  5730  0D3A  09AD               	comf	___awdiv@dividend,f
  5731  0D3B  09AE               	comf	___awdiv@dividend+1,f
  5732  0D3C  0AAD               	incf	___awdiv@dividend,f
  5733  0D3D  1903               	skipnz
  5734  0D3E  0AAE               	incf	___awdiv@dividend+1,f
  5735  0D3F                     l3889:	
  5736  0D3F  3001               	movlw	1
  5737  0D40  00AF               	movwf	??___awdiv
  5738  0D41  082F               	movf	??___awdiv,w
  5739  0D42  06B1               	xorwf	___awdiv@sign,f
  5740  0D43                     l3891:	
  5741  0D43  01B2               	clrf	___awdiv@quotient
  5742  0D44  01B3               	clrf	___awdiv@quotient+1
  5743  0D45                     l3893:	
  5744  0D45  082B               	movf	___awdiv@divisor,w
  5745  0D46  042C               	iorwf	___awdiv@divisor+1,w
  5746  0D47  1903               	btfsc	3,2
  5747  0D48  2D4A               	goto	u3371
  5748  0D49  2D4B               	goto	u3370
  5749  0D4A                     u3371:	
  5750  0D4A  2D82               	goto	l3913
  5751  0D4B                     u3370:	
  5752  0D4B                     l3895:	
  5753  0D4B  01B0               	clrf	___awdiv@counter
  5754  0D4C  0AB0               	incf	___awdiv@counter,f
  5755  0D4D  2D59               	goto	l3901
  5756  0D4E                     l3897:	
  5757  0D4E  3001               	movlw	1
  5758  0D4F                     u3385:	
  5759  0D4F  1003               	clrc
  5760  0D50  0DAB               	rlf	___awdiv@divisor,f
  5761  0D51  0DAC               	rlf	___awdiv@divisor+1,f
  5762  0D52  3EFF               	addlw	-1
  5763  0D53  1D03               	skipz
  5764  0D54  2D4F               	goto	u3385
  5765  0D55                     l3899:	
  5766  0D55  3001               	movlw	1
  5767  0D56  00AF               	movwf	??___awdiv
  5768  0D57  082F               	movf	??___awdiv,w
  5769  0D58  07B0               	addwf	___awdiv@counter,f
  5770  0D59                     l3901:	
  5771  0D59  1FAC               	btfss	___awdiv@divisor+1,7
  5772  0D5A  2D5C               	goto	u3391
  5773  0D5B  2D5D               	goto	u3390
  5774  0D5C                     u3391:	
  5775  0D5C  2D4E               	goto	l3897
  5776  0D5D                     u3390:	
  5777  0D5D                     l3903:	
  5778  0D5D  3001               	movlw	1
  5779  0D5E                     u3405:	
  5780  0D5E  1003               	clrc
  5781  0D5F  0DB2               	rlf	___awdiv@quotient,f
  5782  0D60  0DB3               	rlf	___awdiv@quotient+1,f
  5783  0D61  3EFF               	addlw	-1
  5784  0D62  1D03               	skipz
  5785  0D63  2D5E               	goto	u3405
  5786  0D64  082C               	movf	___awdiv@divisor+1,w
  5787  0D65  022E               	subwf	___awdiv@dividend+1,w
  5788  0D66  1D03               	skipz
  5789  0D67  2D6A               	goto	u3415
  5790  0D68  082B               	movf	___awdiv@divisor,w
  5791  0D69  022D               	subwf	___awdiv@dividend,w
  5792  0D6A                     u3415:	
  5793  0D6A  1C03               	skipc
  5794  0D6B  2D6D               	goto	u3411
  5795  0D6C  2D6E               	goto	u3410
  5796  0D6D                     u3411:	
  5797  0D6D  2D75               	goto	l3909
  5798  0D6E                     u3410:	
  5799  0D6E                     l3905:	
  5800  0D6E  082B               	movf	___awdiv@divisor,w
  5801  0D6F  02AD               	subwf	___awdiv@dividend,f
  5802  0D70  082C               	movf	___awdiv@divisor+1,w
  5803  0D71  1C03               	skipc
  5804  0D72  03AE               	decf	___awdiv@dividend+1,f
  5805  0D73  02AE               	subwf	___awdiv@dividend+1,f
  5806  0D74                     l3907:	
  5807  0D74  1432               	bsf	___awdiv@quotient,0
  5808  0D75                     l3909:	
  5809  0D75  3001               	movlw	1
  5810  0D76                     u3425:	
  5811  0D76  1003               	clrc
  5812  0D77  0CAC               	rrf	___awdiv@divisor+1,f
  5813  0D78  0CAB               	rrf	___awdiv@divisor,f
  5814  0D79  3EFF               	addlw	-1
  5815  0D7A  1D03               	skipz
  5816  0D7B  2D76               	goto	u3425
  5817  0D7C                     l3911:	
  5818  0D7C  3001               	movlw	1
  5819  0D7D  02B0               	subwf	___awdiv@counter,f
  5820  0D7E  1D03               	btfss	3,2
  5821  0D7F  2D81               	goto	u3431
  5822  0D80  2D82               	goto	u3430
  5823  0D81                     u3431:	
  5824  0D81  2D5D               	goto	l3903
  5825  0D82                     u3430:	
  5826  0D82                     l3913:	
  5827  0D82  0831               	movf	___awdiv@sign,w
  5828  0D83  1903               	btfsc	3,2
  5829  0D84  2D86               	goto	u3441
  5830  0D85  2D87               	goto	u3440
  5831  0D86                     u3441:	
  5832  0D86  2D8C               	goto	l3917
  5833  0D87                     u3440:	
  5834  0D87                     l3915:	
  5835  0D87  09B2               	comf	___awdiv@quotient,f
  5836  0D88  09B3               	comf	___awdiv@quotient+1,f
  5837  0D89  0AB2               	incf	___awdiv@quotient,f
  5838  0D8A  1903               	skipnz
  5839  0D8B  0AB3               	incf	___awdiv@quotient+1,f
  5840  0D8C                     l3917:	
  5841  0D8C  0833               	movf	___awdiv@quotient+1,w
  5842  0D8D  00AC               	movwf	?___awdiv+1
  5843  0D8E  0832               	movf	___awdiv@quotient,w
  5844  0D8F  00AB               	movwf	?___awdiv
  5845  0D90                     l598:	
  5846  0D90  0008               	return
  5847  0D91                     __end_of___awdiv:	
  5848                           
  5849                           	psect	text20
  5850  0A3E                     __ptext20:	
  5851 ;; *************** function _ADC_Read *****************
  5852 ;; Defined at:
  5853 ;;		line 332 in file "main.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  canale          1    wreg     unsigned char 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  canale          1    7[BANK0 ] unsigned char 
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  2    4[BANK0 ] int 
  5860 ;; Registers used:
  5861 ;;		wreg, status,2, status,0
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5867 ;;      Params:         0       2       0       0       0
  5868 ;;      Locals:         0       1       0       0       0
  5869 ;;      Temps:          0       1       0       0       0
  5870 ;;      Totals:         0       4       0       0       0
  5871 ;;Total ram usage:        4 bytes
  5872 ;; Hardware stack levels used:    1
  5873 ;; Hardware stack levels required when called:    3
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_main
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           
  5882                           ;psect for function _ADC_Read
  5883  0A3E                     _ADC_Read:	
  5884                           
  5885                           ;incstack = 0
  5886                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5887                           ;ADC_Read@canale stored from wreg
  5888  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  5889  0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  5890  0A40  00A7               	movwf	ADC_Read@canale
  5891  0A41                     l4091:	
  5892                           
  5893                           ;main.c: 332: int ADC_Read(char canale);main.c: 333: {;main.c: 334:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5894  0A41  0827               	movf	ADC_Read@canale,w
  5895  0A42  00A6               	movwf	??_ADC_Read
  5896  0A43  3002               	movlw	2
  5897  0A44                     u3655:	
  5898  0A44  1003               	clrc
  5899  0A45  0DA6               	rlf	??_ADC_Read,f
  5900  0A46  3EFF               	addlw	-1
  5901  0A47  1D03               	skipz
  5902  0A48  2A44               	goto	u3655
  5903  0A49  1003               	clrc
  5904  0A4A  0D26               	rlf	??_ADC_Read,w
  5905  0A4B  3801               	iorlw	1
  5906  0A4C  009F               	movwf	31	;volatile
  5907  0A4D                     l4093:	
  5908                           
  5909                           ;main.c: 335:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5910  0A4D  3004               	movlw	4
  5911  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  5912  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  5913  0A50  00A6               	movwf	??_ADC_Read
  5914  0A51                     u3967:	
  5915  0A51  0BA6               	decfsz	??_ADC_Read,f
  5916  0A52  2A51               	goto	u3967
  5917  0A53  0000               	nop
  5918  0A54                     l4095:	
  5919                           
  5920                           ;main.c: 336:     GO_nDONE = 1;
  5921  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  5922  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  5923  0A56  151F               	bsf	31,2	;volatile
  5924  0A57                     l280:	
  5925                           ;main.c: 338:         ;
  5926                           
  5927                           
  5928                           ;main.c: 337:     while (GO_nDONE)
  5929  0A57  191F               	btfsc	31,2	;volatile
  5930  0A58  2A5A               	goto	u3661
  5931  0A59  2A5B               	goto	u3660
  5932  0A5A                     u3661:	
  5933  0A5A  2A57               	goto	l280
  5934  0A5B                     u3660:	
  5935  0A5B                     l4097:	
  5936                           
  5937                           ;main.c: 339:     return ADRESL + (ADRESH << 8);
  5938  0A5B  081E               	movf	30,w	;volatile
  5939  0A5C  00A5               	movwf	?_ADC_Read+1
  5940  0A5D  1683               	bsf	3,5	;RP0=1, select bank1
  5941  0A5E  1303               	bcf	3,6	;RP1=0, select bank1
  5942  0A5F  081E               	movf	30,w	;volatile
  5943  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  5945  0A62  00A4               	movwf	?_ADC_Read
  5946  0A63                     l283:	
  5947  0A63  0008               	return
  5948  0A64                     __end_of_ADC_Read:	
  5949                           
  5950                           	psect	text21
  5951  0C10                     __ptext21:	
  5952 ;; *************** function _ISR *****************
  5953 ;; Defined at:
  5954 ;;		line 490 in file "main.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;		None
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;		None
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5968 ;;      Params:         0       0       0       0       0
  5969 ;;      Locals:         0       0       0       0       0
  5970 ;;      Temps:          0       4       0       0       0
  5971 ;;      Totals:         0       4       0       0       0
  5972 ;;Total ram usage:        4 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    2
  5975 ;; This function calls:
  5976 ;;		_UART_Read
  5977 ;;		_conteggioVeicoli
  5978 ;; This function is called by:
  5979 ;;		Interrupt level 1
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           
  5984                           ;psect for function _ISR
  5985  0C10                     _ISR:	
  5986  0C10                     i1l2643:	
  5987                           
  5988                           ;main.c: 493:     if (RCIF && readGateway.Bit == 0)
  5989  0C10  1E8C               	btfss	12,5	;volatile
  5990  0C11  2C13               	goto	u212_21
  5991  0C12  2C14               	goto	u212_20
  5992  0C13                     u212_21:	
  5993  0C13  2C1D               	goto	i1l2651
  5994  0C14                     u212_20:	
  5995  0C14                     i1l2645:	
  5996  0C14  1853               	btfsc	_readGateway,0
  5997  0C15  2C17               	goto	u213_21
  5998  0C16  2C18               	goto	u213_20
  5999  0C17                     u213_21:	
  6000  0C17  2C1D               	goto	i1l2651
  6001  0C18                     u213_20:	
  6002  0C18                     i1l2647:	
  6003                           
  6004                           ;main.c: 494:     {;main.c: 495:         readGateway.Bit = 1;
  6005  0C18  1453               	bsf	_readGateway,0
  6006                           
  6007                           ;main.c: 496:         readGatewayDone.Bit = 0;
  6008  0C19  1054               	bcf	_readGatewayDone,0
  6009                           
  6010                           ;main.c: 497:         readGatewayDone.Timeout = 0;
  6011  0C1A  10D4               	bcf	_readGatewayDone,1
  6012  0C1B                     i1l2649:	
  6013                           
  6014                           ;main.c: 498:         dataFromGatewayIndex = 0;
  6015  0C1B  01CE               	clrf	_dataFromGatewayIndex
  6016                           
  6017                           ;main.c: 499:         timerReadFromGateway = 0;
  6018  0C1C  01CD               	clrf	_timerReadFromGateway
  6019  0C1D                     i1l2651:	
  6020                           
  6021                           ;main.c: 501:     if (RCIF && readGateway.Bit == 1)
  6022  0C1D  1E8C               	btfss	12,5	;volatile
  6023  0C1E  2C20               	goto	u214_21
  6024  0C1F  2C21               	goto	u214_20
  6025  0C20                     u214_21:	
  6026  0C20  2C38               	goto	i1l2661
  6027  0C21                     u214_20:	
  6028  0C21                     i1l2653:	
  6029  0C21  1C53               	btfss	_readGateway,0
  6030  0C22  2C24               	goto	u215_21
  6031  0C23  2C25               	goto	u215_20
  6032  0C24                     u215_21:	
  6033  0C24  2C38               	goto	i1l2661
  6034  0C25                     u215_20:	
  6035  0C25                     i1l2655:	
  6036                           
  6037                           ;main.c: 502:     {;main.c: 503:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  6038  0C25  120A  158A  21D8  120A  158A  	fcall	_UART_Read
  6039  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  6040  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  6041  0C2C  00A0               	movwf	??_ISR
  6042  0C2D  084E               	movf	_dataFromGatewayIndex,w
  6043  0C2E  3EAC               	addlw	(low (_dataFromGateway| 0))& (0+255)
  6044  0C2F  0084               	movwf	4
  6045  0C30  0820               	movf	??_ISR,w
  6046  0C31  1383               	bcf	3,7	;select IRP bank1
  6047  0C32  0080               	movwf	0
  6048  0C33                     i1l2657:	
  6049                           
  6050                           ;main.c: 504:         dataFromGatewayIndex++;
  6051  0C33  3001               	movlw	1
  6052  0C34  00A0               	movwf	??_ISR
  6053  0C35  0820               	movf	??_ISR,w
  6054  0C36  07CE               	addwf	_dataFromGatewayIndex,f
  6055  0C37                     i1l2659:	
  6056                           
  6057                           ;main.c: 505:         timerReadFromGateway = 0;
  6058  0C37  01CD               	clrf	_timerReadFromGateway
  6059  0C38                     i1l2661:	
  6060                           
  6061                           ;main.c: 510:     if (TMR0IF)
  6062  0C38  1D0B               	btfss	11,2	;volatile
  6063  0C39  2C3B               	goto	u216_21
  6064  0C3A  2C3C               	goto	u216_20
  6065  0C3B                     u216_21:	
  6066  0C3B  2C46               	goto	i1l2669
  6067  0C3C                     u216_20:	
  6068  0C3C                     i1l2663:	
  6069                           
  6070                           ;main.c: 511:     {;main.c: 512:         TMR0IF = 0;
  6071  0C3C  110B               	bcf	11,2	;volatile
  6072  0C3D                     i1l2665:	
  6073                           
  6074                           ;main.c: 513:         conteggioVeicoli();
  6075  0C3D  120A  158A  24C3  120A  158A  	fcall	_conteggioVeicoli
  6076  0C42                     i1l2667:	
  6077                           
  6078                           ;main.c: 514:         TMR0 = 6;
  6079  0C42  3006               	movlw	6
  6080  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  6081  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  6082  0C45  0081               	movwf	1	;volatile
  6083  0C46                     i1l2669:	
  6084                           
  6085                           ;main.c: 517:     if (TMR1IF)
  6086  0C46  1C0C               	btfss	12,0	;volatile
  6087  0C47  2C49               	goto	u217_21
  6088  0C48  2C4A               	goto	u217_20
  6089  0C49                     u217_21:	
  6090  0C49  2C5F               	goto	i1l359
  6091  0C4A                     u217_20:	
  6092  0C4A                     i1l2671:	
  6093                           
  6094                           ;main.c: 518:     {;main.c: 519:         TMR1IF = 0;
  6095  0C4A  100C               	bcf	12,0	;volatile
  6096  0C4B                     i1l2673:	
  6097                           
  6098                           ;main.c: 520:         count_lux++;
  6099  0C4B  3001               	movlw	1
  6100  0C4C  00A0               	movwf	??_ISR
  6101  0C4D  0820               	movf	??_ISR,w
  6102  0C4E  07CF               	addwf	_count_lux,f
  6103  0C4F                     i1l2675:	
  6104                           
  6105                           ;main.c: 522:         if (count_lux >= 20)
  6106  0C4F  3014               	movlw	20
  6107  0C50  024F               	subwf	_count_lux,w
  6108  0C51  1C03               	skipc
  6109  0C52  2C54               	goto	u218_21
  6110  0C53  2C55               	goto	u218_20
  6111  0C54                     u218_21:	
  6112  0C54  2C5B               	goto	i1l2683
  6113  0C55                     u218_20:	
  6114  0C55                     i1l2677:	
  6115                           
  6116                           ;main.c: 523:         {;main.c: 524:             secondPassed.Bit = 1;
  6117  0C55  1452               	bsf	_secondPassed,0
  6118  0C56                     i1l2679:	
  6119                           
  6120                           ;main.c: 525:             count_lux = 0;
  6121  0C56  01CF               	clrf	_count_lux
  6122  0C57                     i1l2681:	
  6123                           
  6124                           ;main.c: 526:             timerReadFromGateway++;
  6125  0C57  3001               	movlw	1
  6126  0C58  00A0               	movwf	??_ISR
  6127  0C59  0820               	movf	??_ISR,w
  6128  0C5A  07CD               	addwf	_timerReadFromGateway,f
  6129  0C5B                     i1l2683:	
  6130                           
  6131                           ;main.c: 529:         TMR1H = 60;
  6132  0C5B  303C               	movlw	60
  6133  0C5C  008F               	movwf	15	;volatile
  6134  0C5D                     i1l2685:	
  6135                           
  6136                           ;main.c: 530:         TMR1L = 176;
  6137  0C5D  30B0               	movlw	176
  6138  0C5E  008E               	movwf	14	;volatile
  6139  0C5F                     i1l359:	
  6140  0C5F  0823               	movf	??_ISR+3,w
  6141  0C60  008A               	movwf	10
  6142  0C61  0822               	movf	??_ISR+2,w
  6143  0C62  0084               	movwf	4
  6144  0C63  0E21               	swapf	(??_ISR+1)^0,w
  6145  0C64  0083               	movwf	3
  6146  0C65  0EFE               	swapf	btemp,f
  6147  0C66  0E7E               	swapf	btemp,w
  6148  0C67  0009               	retfie
  6149  0C68                     __end_of_ISR:	
  6150                           
  6151                           	psect	intentry
  6152  0004                     __pintentry:	
  6153                           ;incstack = 0
  6154                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6155                           
  6156  0004                     interrupt_function:	
  6157  007E                     saved_w	set	btemp
  6158  0004  00FE               	movwf	btemp
  6159  0005  0E03               	swapf	3,w
  6160  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6161  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6162  0008  00A1               	movwf	??_ISR+1
  6163  0009  0804               	movf	4,w
  6164  000A  00A2               	movwf	??_ISR+2
  6165  000B  080A               	movf	10,w
  6166  000C  00A3               	movwf	??_ISR+3
  6167  000D  120A  158A  2C10   	ljmp	_ISR
  6168                           
  6169                           	psect	text22
  6170  0CC3                     __ptext22:	
  6171 ;; *************** function _conteggioVeicoli *****************
  6172 ;; Defined at:
  6173 ;;		line 398 in file "main.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;		None
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  i               1   13[COMMON] unsigned char 
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6187 ;;      Params:         0       0       0       0       0
  6188 ;;      Locals:         1       0       0       0       0
  6189 ;;      Temps:          4       0       0       0       0
  6190 ;;      Totals:         5       0       0       0       0
  6191 ;;Total ram usage:        5 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    1
  6194 ;; This function calls:
  6195 ;;		_Conteggio
  6196 ;; This function is called by:
  6197 ;;		_ISR
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           
  6202                           ;psect for function _conteggioVeicoli
  6203  0CC3                     _conteggioVeicoli:	
  6204  0CC3                     i1l2409:	
  6205                           ;incstack = 0
  6206                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6207                           
  6208                           
  6209                           ;main.c: 400:     RoadsSensors[0] = PORTBbits.RB3;
  6210  0CC3  3000               	movlw	0
  6211  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0CC6  1986               	btfsc	6,3	;volatile
  6214  0CC7  3001               	movlw	1
  6215  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  6216  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  6217  0CCA  00A8               	movwf	_RoadsSensors^(0+128)
  6218                           
  6219                           ;main.c: 401:     RoadsSensors[1] = PORTBbits.RB4;
  6220  0CCB  3000               	movlw	0
  6221  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  6222  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  6223  0CCE  1A06               	btfsc	6,4	;volatile
  6224  0CCF  3001               	movlw	1
  6225  0CD0  1683               	bsf	3,5	;RP0=1, select bank1
  6226  0CD1  1303               	bcf	3,6	;RP1=0, select bank1
  6227  0CD2  00A9               	movwf	(_RoadsSensors^(0+128)+1)
  6228                           
  6229                           ;main.c: 402:     RoadsSensors[2] = PORTBbits.RB5;
  6230  0CD3  3000               	movlw	0
  6231  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  6232  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  6233  0CD6  1A86               	btfsc	6,5	;volatile
  6234  0CD7  3001               	movlw	1
  6235  0CD8  1683               	bsf	3,5	;RP0=1, select bank1
  6236  0CD9  1303               	bcf	3,6	;RP1=0, select bank1
  6237  0CDA  00AA               	movwf	(_RoadsSensors^(0+128)+2)
  6238                           
  6239                           ;main.c: 403:     RoadsSensors[3] = PORTAbits.RA5;
  6240  0CDB  3000               	movlw	0
  6241  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  6242  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  6243  0CDE  1A85               	btfsc	5,5	;volatile
  6244  0CDF  3001               	movlw	1
  6245  0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  6246  0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  6247  0CE2  00AB               	movwf	(_RoadsSensors^(0+128)+3)
  6248  0CE3                     i1l2411:	
  6249                           
  6250                           ;main.c: 405:     for (unsigned char i = 0; i < 4; i++)
  6251  0CE3  01FD               	clrf	conteggioVeicoli@i
  6252  0CE4                     i1l2415:	
  6253                           
  6254                           ;main.c: 406:     {;main.c: 407:         if (!RoadsSensors[i])
  6255  0CE4  087D               	movf	conteggioVeicoli@i,w
  6256  0CE5  3EA8               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6257  0CE6  0084               	movwf	4
  6258  0CE7  1383               	bcf	3,7	;select IRP bank1
  6259  0CE8  0800               	movf	0,w
  6260  0CE9  1D03               	btfss	3,2
  6261  0CEA  2CEC               	goto	u184_21
  6262  0CEB  2CED               	goto	u184_20
  6263  0CEC                     u184_21:	
  6264  0CEC  2CF6               	goto	i1l2419
  6265  0CED                     u184_20:	
  6266  0CED                     i1l2417:	
  6267                           
  6268                           ;main.c: 408:         {;main.c: 409:             count++;
  6269  0CED  3001               	movlw	1
  6270  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  6271  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  6272  0CF0  07C8               	addwf	_count,f
  6273  0CF1  1803               	skipnc
  6274  0CF2  0AC9               	incf	_count+1,f
  6275  0CF3  3000               	movlw	0
  6276  0CF4  07C9               	addwf	_count+1,f
  6277                           
  6278                           ;main.c: 410:         }
  6279  0CF5  2D1D               	goto	i1l2425
  6280  0CF6                     i1l2419:	
  6281  0CF6  087D               	movf	conteggioVeicoli@i,w
  6282  0CF7  3EA8               	addlw	(low (_RoadsSensors| 0))& (0+255)
  6283  0CF8  0084               	movwf	4
  6284  0CF9  0800               	movf	0,w
  6285  0CFA  1903               	btfsc	3,2
  6286  0CFB  2CFD               	goto	u185_21
  6287  0CFC  2CFE               	goto	u185_20
  6288  0CFD                     u185_21:	
  6289  0CFD  2D1D               	goto	i1l2425
  6290  0CFE                     u185_20:	
  6291  0CFE                     i1l2421:	
  6292                           
  6293                           ;main.c: 412:         {;main.c: 413:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  6294  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  6295  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  6296  0D00  0849               	movf	_count+1,w
  6297  0D01  00F1               	movwf	Conteggio@_count+1
  6298  0D02  0848               	movf	_count,w
  6299  0D03  00F0               	movwf	Conteggio@_count
  6300  0D04  3059               	movlw	(low (_motorcycle| 0))& (0+255)
  6301  0D05  00F9               	movwf	??_conteggioVeicoli
  6302  0D06  0879               	movf	??_conteggioVeicoli,w
  6303  0D07  00F2               	movwf	Conteggio@_motorcycle
  6304  0D08  3055               	movlw	(low (_car| 0))& (0+255)
  6305  0D09  00FA               	movwf	??_conteggioVeicoli+1
  6306  0D0A  087A               	movf	??_conteggioVeicoli+1,w
  6307  0D0B  00F3               	movwf	Conteggio@_car
  6308  0D0C  30E5               	movlw	(low (_truck| 0))& (0+255)
  6309  0D0D  00FB               	movwf	??_conteggioVeicoli+2
  6310  0D0E  087B               	movf	??_conteggioVeicoli+2,w
  6311  0D0F  00F4               	movwf	Conteggio@_truck
  6312  0D10  087D               	movf	conteggioVeicoli@i,w
  6313  0D11  00FC               	movwf	??_conteggioVeicoli+3
  6314  0D12  087C               	movf	??_conteggioVeicoli+3,w
  6315  0D13  00F5               	movwf	Conteggio@index
  6316  0D14  120A  158A  2371  120A  158A  	fcall	_Conteggio
  6317  0D19                     i1l2423:	
  6318                           
  6319                           ;main.c: 414:             count = 0;
  6320  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  6321  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  6322  0D1B  01C8               	clrf	_count
  6323  0D1C  01C9               	clrf	_count+1
  6324  0D1D                     i1l2425:	
  6325                           
  6326                           ;main.c: 416:     }
  6327  0D1D  3001               	movlw	1
  6328  0D1E  00F9               	movwf	??_conteggioVeicoli
  6329  0D1F  0879               	movf	??_conteggioVeicoli,w
  6330  0D20  07FD               	addwf	conteggioVeicoli@i,f
  6331  0D21                     i1l2427:	
  6332  0D21  3004               	movlw	4
  6333  0D22  027D               	subwf	conteggioVeicoli@i,w
  6334  0D23  1C03               	skipc
  6335  0D24  2D26               	goto	u186_21
  6336  0D25  2D27               	goto	u186_20
  6337  0D26                     u186_21:	
  6338  0D26  2CE4               	goto	i1l2415
  6339  0D27                     u186_20:	
  6340  0D27                     i1l320:	
  6341  0D27  0008               	return
  6342  0D28                     __end_of_conteggioVeicoli:	
  6343                           
  6344                           	psect	text23
  6345  0B71                     __ptext23:	
  6346 ;; *************** function _Conteggio *****************
  6347 ;; Defined at:
  6348 ;;		line 104 in file "./CustomLib/TrafficLight.h"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  _count          2    0[COMMON] unsigned int 
  6351 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  6352 ;;		 -> motorcycle(4), 
  6353 ;;  _car            1    3[COMMON] PTR unsigned char 
  6354 ;;		 -> car(4), 
  6355 ;;  _truck          1    4[COMMON] PTR unsigned char 
  6356 ;;		 -> truck(4), 
  6357 ;;  index           1    5[COMMON] unsigned char 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6369 ;;      Params:         6       0       0       0       0
  6370 ;;      Locals:         0       0       0       0       0
  6371 ;;      Temps:          3       0       0       0       0
  6372 ;;      Totals:         9       0       0       0       0
  6373 ;;Total ram usage:        9 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_conteggioVeicoli
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           
  6383                           ;psect for function _Conteggio
  6384  0B71                     _Conteggio:	
  6385  0B71                     i1l2035:	
  6386                           ;incstack = 0
  6387                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  6388                           
  6389                           
  6390                           ;./CustomLib/TrafficLight.h: 104: void Conteggio(unsigned int _count, unsigned char _mot
      +                          orcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custo
      +                          mLib/TrafficLight.h: 105: {;./CustomLib/TrafficLight.h: 106:     if (_count >= 500)
  6391  0B71  3001               	movlw	1
  6392  0B72  0271               	subwf	Conteggio@_count+1,w
  6393  0B73  30F4               	movlw	244
  6394  0B74  1903               	skipnz
  6395  0B75  0270               	subwf	Conteggio@_count,w
  6396  0B76  1C03               	skipc
  6397  0B77  2B79               	goto	u128_21
  6398  0B78  2B7A               	goto	u128_20
  6399  0B79                     u128_21:	
  6400  0B79  2B8A               	goto	i1l2039
  6401  0B7A                     u128_20:	
  6402  0B7A                     i1l2037:	
  6403                           
  6404                           ;./CustomLib/TrafficLight.h: 107:     {;./CustomLib/TrafficLight.h: 108:         _motorc
      +                          ycle[index]=_motorcycle[index]+1;
  6405  0B7A  0875               	movf	Conteggio@index,w
  6406  0B7B  0772               	addwf	Conteggio@_motorcycle,w
  6407  0B7C  00F6               	movwf	??_Conteggio
  6408  0B7D  0876               	movf	??_Conteggio,w
  6409  0B7E  0084               	movwf	4
  6410  0B7F  1383               	bcf	3,7	;select IRP bank0
  6411  0B80  0800               	movf	0,w
  6412  0B81  3E01               	addlw	1
  6413  0B82  00F7               	movwf	??_Conteggio+1
  6414  0B83  0875               	movf	Conteggio@index,w
  6415  0B84  0772               	addwf	Conteggio@_motorcycle,w
  6416  0B85  00F8               	movwf	??_Conteggio+2
  6417  0B86  0878               	movf	??_Conteggio+2,w
  6418  0B87  0084               	movwf	4
  6419  0B88  0877               	movf	??_Conteggio+1,w
  6420  0B89  0080               	movwf	0
  6421  0B8A                     i1l2039:	
  6422                           
  6423                           ;./CustomLib/TrafficLight.h: 110:     if (_count >= 1500)
  6424  0B8A  3005               	movlw	5
  6425  0B8B  0271               	subwf	Conteggio@_count+1,w
  6426  0B8C  30DC               	movlw	220
  6427  0B8D  1903               	skipnz
  6428  0B8E  0270               	subwf	Conteggio@_count,w
  6429  0B8F  1C03               	skipc
  6430  0B90  2B92               	goto	u129_21
  6431  0B91  2B93               	goto	u129_20
  6432  0B92                     u129_21:	
  6433  0B92  2BA3               	goto	i1l2043
  6434  0B93                     u129_20:	
  6435  0B93                     i1l2041:	
  6436                           
  6437                           ;./CustomLib/TrafficLight.h: 111:     {;./CustomLib/TrafficLight.h: 112:         _car[in
      +                          dex]=_car[index]+1;
  6438  0B93  0875               	movf	Conteggio@index,w
  6439  0B94  0773               	addwf	Conteggio@_car,w
  6440  0B95  00F6               	movwf	??_Conteggio
  6441  0B96  0876               	movf	??_Conteggio,w
  6442  0B97  0084               	movwf	4
  6443  0B98  1383               	bcf	3,7	;select IRP bank0
  6444  0B99  0800               	movf	0,w
  6445  0B9A  3E01               	addlw	1
  6446  0B9B  00F7               	movwf	??_Conteggio+1
  6447  0B9C  0875               	movf	Conteggio@index,w
  6448  0B9D  0773               	addwf	Conteggio@_car,w
  6449  0B9E  00F8               	movwf	??_Conteggio+2
  6450  0B9F  0878               	movf	??_Conteggio+2,w
  6451  0BA0  0084               	movwf	4
  6452  0BA1  0877               	movf	??_Conteggio+1,w
  6453  0BA2  0080               	movwf	0
  6454  0BA3                     i1l2043:	
  6455                           
  6456                           ;./CustomLib/TrafficLight.h: 114:     if (_count >= 3000)
  6457  0BA3  300B               	movlw	11
  6458  0BA4  0271               	subwf	Conteggio@_count+1,w
  6459  0BA5  30B8               	movlw	184
  6460  0BA6  1903               	skipnz
  6461  0BA7  0270               	subwf	Conteggio@_count,w
  6462  0BA8  1C03               	skipc
  6463  0BA9  2BAB               	goto	u130_21
  6464  0BAA  2BAC               	goto	u130_20
  6465  0BAB                     u130_21:	
  6466  0BAB  2BBC               	goto	i1l178
  6467  0BAC                     u130_20:	
  6468  0BAC                     i1l2045:	
  6469                           
  6470                           ;./CustomLib/TrafficLight.h: 115:     {;./CustomLib/TrafficLight.h: 116:         _truck[
      +                          index]=_truck[index]+1;
  6471  0BAC  0875               	movf	Conteggio@index,w
  6472  0BAD  0774               	addwf	Conteggio@_truck,w
  6473  0BAE  00F6               	movwf	??_Conteggio
  6474  0BAF  0876               	movf	??_Conteggio,w
  6475  0BB0  0084               	movwf	4
  6476  0BB1  1383               	bcf	3,7	;select IRP bank0
  6477  0BB2  0800               	movf	0,w
  6478  0BB3  3E01               	addlw	1
  6479  0BB4  00F7               	movwf	??_Conteggio+1
  6480  0BB5  0875               	movf	Conteggio@index,w
  6481  0BB6  0774               	addwf	Conteggio@_truck,w
  6482  0BB7  00F8               	movwf	??_Conteggio+2
  6483  0BB8  0878               	movf	??_Conteggio+2,w
  6484  0BB9  0084               	movwf	4
  6485  0BBA  0877               	movf	??_Conteggio+1,w
  6486  0BBB  0080               	movwf	0
  6487  0BBC                     i1l178:	
  6488  0BBC  0008               	return
  6489  0BBD                     __end_of_Conteggio:	
  6490                           
  6491                           	psect	text24
  6492  09D8                     __ptext24:	
  6493 ;; *************** function _UART_Read *****************
  6494 ;; Defined at:
  6495 ;;		line 371 in file "main.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;		None
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1    wreg      unsigned char 
  6502 ;; Registers used:
  6503 ;;		wreg
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6509 ;;      Params:         0       0       0       0       0
  6510 ;;      Locals:         0       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0
  6512 ;;      Totals:         0       0       0       0       0
  6513 ;;Total ram usage:        0 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_ISR
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function _UART_Read
  6524  09D8                     _UART_Read:	
  6525  09D8                     i1l2403:	
  6526                           ;incstack = 0
  6527                           ; Regs used in _UART_Read: [wreg]
  6528                           
  6529  09D8                     i1l301:	
  6530                           ;main.c: 374:         ;
  6531                           
  6532                           
  6533                           ;main.c: 373:     while (!RCIF)
  6534  09D8  1283               	bcf	3,5	;RP0=0, select bank0
  6535  09D9  1303               	bcf	3,6	;RP1=0, select bank0
  6536  09DA  1E8C               	btfss	12,5	;volatile
  6537  09DB  29DD               	goto	u183_21
  6538  09DC  29DE               	goto	u183_20
  6539  09DD                     u183_21:	
  6540  09DD  29D8               	goto	i1l301
  6541  09DE                     u183_20:	
  6542  09DE                     i1l303:	
  6543                           
  6544                           ;main.c: 375:     RCIF = 0;
  6545  09DE  128C               	bcf	12,5	;volatile
  6546  09DF                     i1l2405:	
  6547                           
  6548                           ;main.c: 376:     return RCREG;
  6549  09DF  081A               	movf	26,w	;volatile
  6550  09E0                     i1l304:	
  6551  09E0  0008               	return
  6552  09E1                     __end_of_UART_Read:	
  6553  007E                     btemp	set	126	;btemp
  6554  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        8
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      72
    BANK1            80      0      73
    BANK3            96     13      27
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[4] size(2) Largest target is 14
		 -> s3(BANK3[14]), s2(BANK1[14]), s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 8
		 -> Semafori(BANK0[8]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 8
		 -> Semafori(BANK0[8]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 8
		 -> Semafori(BANK0[8]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   26310
                                             32 BANK0      8     8      0
                                              0 BANK3     13    13      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                           _init_ADC
                       _luciSemaforo
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    5066
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      42
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1568
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    5720
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1934
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     232
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         21    21      0    1071
                                              4 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     990
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     842
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  2     2      0    3000
                                             11 BANK0      2     2      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           4     1      3    1122
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    14    13      1    1986
                                             12 BANK0     14    13      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     793
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     514
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7    1834
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    4527
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1878
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1902
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      42
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _UpdateTimes
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D      1B       9       28.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      49       7       91.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BA      12        0.0%
ABS                  0      0      BA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jul 11 17:56:40 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                                l81 0AF0                                l98 0E9A  
                    ___awdiv@sign 0031                                _s0 00D7                                _s1 00C9  
                              _s2 00BB                                _s3 0190                                fsr 0004  
             ___wmul@multiplicand 0026                    _GetDigits$1200 0039                 luciSemaforo@index 0027  
                     __CFG_LVP$ON 0000                               l123 0F86                               l132 0FFF  
                             l312 0A26                               l145 0771                               l129 0FD7  
                             l155 0B70                               l172 0DFE                               l252 0220  
                             l236 0355                               l333 0BE0                               l309 0ABB  
                             l510 0EAF                               l326 0BC1                               l270 04FC  
                             l238 008E                               l167 0657                               l335 0BE4  
                             l280 0A57                               l520 0F37                               l336 0BE8  
                             l328 0BC5                               l329 0BC9                               l337 0C0F  
                             l283 0A63                               l611 0CC2                               l291 09E8  
                             l292 09EB                               l349 07ED                               l277 09FE  
                             l445 0A72                               l286 0B2A                               l471 0A3D  
                             l447 0A8A                               l289 09E4                               l598 0D90  
                    __CFG_CPD$OFF 0000                               _ISR 0C10                               _car 0055  
                             _map 0ABC                               fsr0 0004                               indf 0000  
                    ___awmod@sign 002A                      __CFG_FOSC$HS 0000                              ?_ISR 0070  
           ??_ShowDigitsOnDisplay 002B                              l4001 076B                              l4003 0509  
                            l4101 0BC0                              l4031 05F5                              l4015 050E  
                            l4023 05D4                              l4033 05FB                              l4017 0550  
                            l4025 05E7                              l4009 050C                              l4041 0D95  
                            l4105 0BCD                              l4113 0BFF                              l4201 0084  
                            l4027 05EB                              l4019 0592                              l4051 0DCC  
                            l4211 0089                              l4203 0085                              l4029 05F1  
                            l4053 0DF9                              l4045 0D9C                              l4141 0791  
                            l4133 0772                              l4061 09F3                              l4109 0BEC  
                            l4301 0361                              l4221 0095                              l4205 0086  
                            l4047 0DAB                              l4039 0D94                              l4143 0796  
                            l4151 07D5                              l4135 0773                              l4071 0B28  
                            l4063 09F7                              l4311 037D                              l4303 0363  
                            l4223 00DE                              l4231 01B9                              l4215 0092  
                            l4207 0087                              l4049 0DB9                              l4145 07AB  
                            l4137 0778                              l4073 0B29                              l4065 0AF1  
                            l4057 09EC                              l4321 0423                              l4313 039A  
                            l4305 0371                              l4225 0127                              l4233 01CE  
                            l4209 0088                              l4091 0A41                              l4139 078C  
                            l4067 0AF9                              l4059 09F0                              l4083 0AA2  
                            l4075 0A8E                              l4331 0461                              l4323 0424  
                            l4315 0408                              l4307 0377                              l4243 01E7  
                            l4235 01D6                              l4227 0170                              l4093 0A4D  
                            l4149 07C0                              l4069 0B27                              l4085 0AAB  
                            l4077 0AA1                              l4325 0429                              l4317 040E  
                            l4333 0485                              l4309 037B                              l4341 04F0  
                            l4261 0224                              l4245 01F6                              l4237 01E3  
                            l4181 0048                              l4095 0A54                              l4087 0AB1  
                            l4343 04F6                              l4319 041B                              l4327 042F  
                            l4335 048D                              l4271 0316                              l4263 02E2  
                            l4255 020C                              l4247 01FC                              l4191 0054  
                            l4183 004A                              l4175 003F                              l4097 0A5B  
                            l3721 0F4A                              l3801 09E4                              l4089 0AB5  
                            l4345 04FA                              l4337 0493                              l4329 0453  
                            l4281 032B                              l4265 02F1                              l4257 0211  
                            l4249 0209                              l4193 0056                              l4185 004C  
                            l4177 0045                              l3811 0A68                              l3723 0F57  
                            l3803 09E9                              l4347 0500                              l4339 04EB  
                            l4283 0333                              l4275 031D                              l4267 0302  
                            l4259 0219                              l4291 0340                              l4195 005B  
                            l4187 0050                              l4179 0046                              l3901 0D59  
                            l3805 0A15                              l3813 0A6C                              l3741 0F73  
                            l3733 0F5B                              l3725 0F58                              l4349 0504  
                            l4293 0359                              l4285 0336                              l4277 0322  
                            l4269 0313                              l4197 0066                              l4189 0052  
                            ?_map 0034                              l3911 0D7C                              l3903 0D5D  
                            l3831 0A35                              l3823 0A2A                              l3807 0A24  
                            l3815 0A79                              l3751 0F95                              l3743 0F79  
                            l3727 0F59                              l3719 0F3B                              l4295 035A  
                            l4287 033C                              l4199 0081                              l3905 0D6E  
                            l3913 0D82                              l3921 0C68                              l3833 0A3C  
                            l3825 0A2B                              l3841 0EA2                              l3817 0A80  
                            l3809 0A64                              l3761 0FAC                              l3753 0F9B  
                            l3745 0F8C                              l4297 035B                              l4561 01C0  
                            l3915 0D87                              l3907 0D74                              l3931 0C7A  
                            l3923 0C6B                              l3827 0A2F                              l4571 07CA  
                            l3851 0ED2                              l3843 0EB3                              l3819 0A86  
                            l3771 0FCA                              l3755 0FA8                              l3747 0F94  
                            l3739 0F5F                              l4299 035D                              l4563 034D  
                            l3917 0D8C                              l3909 0D75                              l3941 0C93  
                            l3933 0C7F                              l3925 0C6F                              l4573 05DC  
                            l3829 0A33                              l3861 0F01                              l3853 0ED5  
                            l3845 0EBE                              l3837 0E9B                              l4565 0BD5  
                            l3781 0FF1                              l3773 0FDD                              l3943 0C97  
                            l3935 0C85                              l3951 0CB4                              l3927 0C74  
                            l3791 0B45                              l3871 0F24                              l3863 0F0F  
                            l3855 0EE2                              l3847 0EC2                              l3839 0E9E  
                            l4567 0BF4                              l3783 0FFE                              l3775 0FEA  
                            l3767 0FB0                              l3881 0D2F                              l3953 0CB9  
                            l3945 0CA1                              l3937 0C88                              l3929 0C76  
                            l3793 0B56                              l3873 0F2F                              l3865 0F10  
                            l3857 0EE6                              l3849 0ECA                              l4569 0C07  
                            l3769 0FC4                              l3891 0D43                              l3883 0D34  
                            l3955 0CBE                              l3947 0CA7                              l3939 0C8F  
                            l3971 0E71                              l3963 0E02                              l3795 0B64  
                            l3787 0B2E                              l3867 0F19                              l3859 0EEF  
                            l3779 0FEB                              l3893 0D45                              l3885 0D36  
                            l3877 0D28                              l3949 0CAE                              l3973 0E84  
                            l3965 0E03                              l3797 0B6C                              l3789 0B3D  
                            l3869 0F1F                              l3981 065C                              l3895 0D4B  
                            l3887 0D3A                              l3879 0D2B                              l3967 0E18  
                            l3991 06E9                              l3975 065B                              l3959 0ABC  
                            l3897 0D4E                              l3889 0D3F                              l3969 0E34  
                            l3993 06ED                              l3899 0D55                              l3995 06F3  
                            l3987 065D                              l3997 072F                              l3989 06A8  
                            l3999 0767                              u3100 0F8C                              u3101 0F8B  
                            u3110 0FA8                              u3111 0FA7                              u3130 0FD7  
                            u3131 0FD6                              u3115 0FA4                              u3220 0A86  
                            u3140 0FDD                              u3124 0FBC                              u3221 0A85  
                            u3205 0A73                              u3141 0FDC                              u3125 0FBA  
                            u3230 0A2F                              u3310 0F01                              u3231 0A2E  
                            u3311 0F00                              u3215 0A7A                              u3135 0FD3  
                            u3240 0A3C                              u3160 0FFE                              u3241 0A3B  
                            u3305 0EE8                              u3161 0FFD                              u3410 0D6E  
                            u3330 0F1F                              u3250 0EA2                              u3154 0FE3  
                            u3090 0F86                              u3411 0D6D                              u3331 0F1E  
                            u3315 0EFD                              u3251 0EA1                              u3155 0FE1  
                            u3091 0F85                              u3075 0F4D                              u3500 0CA1  
                            u3340 0F24                              u3260 0EB3                              u3084 0F6B  
                            u3180 09E8                              u3405 0D5E                              u3501 0CA0  
                            u3341 0F23                              u3325 0F11                              u3261 0EB2  
                            u3165 0FFA                              u3085 0F69                              u3181 09E7  
                            u3430 0D82                              u3350 0D2F                              u3270 0ED2  
                            u3190 0A6C                              u3431 0D81                              u3415 0D6A  
                            u3351 0D2E                              u3175 0B4B                              u3271 0ED1  
                            u3191 0A6B                              u3095 0F82                              u3440 0D87  
                            u3360 0D3A                              u3520 0CB4                              u3600 05FB  
                            u3441 0D86                              u3425 0D76                              u3361 0D39  
                            u3521 0CB3                              u3505 0C9D                              u3601 05FA  
                            u3370 0D4B                              u3530 0CB9                              u3450 0C6F  
                            u3610 0D9B                              u3290 0EE6                              u3371 0D4A  
                            u3531 0CB8                              u3515 0CA8                              u3451 0C6E  
                            u3611 0D9A                              u3291 0EE5                              u3460 0C7A  
                            u3540 0E34                              u3461 0C79                              u3541 0E33  
                            u3285 0ED7                              u3390 0D5D                              u3470 0C85  
                            u3630 0B08                              u3550 06A8                              u3391 0D5C  
                            u3471 0C84                              u3551 06A7                              u3560 06F3  
                            u3640 0ABB                              u3800 0359                              u3385 0D4F  
                            u3545 0E30                              u3625 0DC1                              u3561 06F2  
                            u3641 0ABA                              u3801 0358                              u3490 0C97  
                            u3570 072F                              u3810 0361                              u3730 008D  
                            u3491 0C96                              u3635 0B03                              u3571 072E  
                            u3555 06A4                              u3811 0360                              u3731 008C  
                            u3660 0A5B                              u3580 0771                              u3900 04F6  
                            u3820 0377                              u3740 01E3                              u3661 0A5A  
                            u3485 0C89                              u3581 0770                              u3901 04F5  
                            u3821 0376                              u3741 01E2                              u3590 05F1  
                            u3670 0778                              u3910 04FA                              u3830 037B  
                            u3750 0209                              u3655 0A44                              u3591 05F0  
                            u3671 0777                              u3911 04F9                              u3831 037A  
                            u3751 0208                              u3680 0791                              u3920 0500  
                            u3840 039A                              u3760 021F                              u3681 0790  
                            u3921 04FF                              u3841 0399                              u3761 021E  
                            u3745 01DF                              u3690 0796                              u3930 0504  
                            u3850 0408                              u3770 031C                              u3691 0795  
                            u3931 0503                              u3851 0407                              u3771 031B  
                            u3755 0205                              u3860 0423                              u3780 0333  
                            _RCIF 0065                              u3861 0422                              u3781 0332  
                            u3870 0429                              u3790 033C                              u3871 0428  
                            u3791 033B                              u3880 0453                              u3881 0452  
                            u3890 0493                              u3891 0492                              u3957 09FB  
                            u3967 0A51                              _TMR0 0001                              _TXIF 0064  
                    __CFG_WRT$OFF 0000                              _disp 0050                              _main 003F  
                            _temp 004C                              _time 00A0                              map@x 0034  
                            btemp 007E                  __end_of_ADC_Read 0A64                     __CFG_BOREN$ON 0000  
                            start 0010                   __end_of_GetTime 0B71                 ___bmul@multiplier 0027  
                           ??_ISR 0020         __size_of_conteggioVeicoli 0065                             ??_map 003E  
                 __end_of___aldiv 0F38                             ?_main 0070                   __end_of___awdiv 0D91  
                   __CFG_WDTE$OFF 0000                   __end_of___awmod 0CC3                   ___awdiv@divisor 002B  
                           _T1CON 0010                             i1l301 09D8                             i1l303 09DE  
                           i1l304 09E0                             i1l320 0D27                             i1l178 0BBC  
                           i1l359 0C5F                   ___awdiv@counter 0030                             _RCREG 001A  
            UpdateTimes@_semafori 0037                             _TMR1H 000F                             _TMR1L 000E  
                           _SPBRG 0099                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISC 0087                             _TRISD 0088  
                           _TRISE 0089                             _TXREG 0019                     __CFG_PWRTE$ON 0000  
              __size_of_UART_Init 003A                __size_of_UART_Read 0009                   __end_of_display 07FF  
                           _count 0048                             _unita 005F                             main@i 0046  
                           _truck 00E5                             pclath 000A                             status 0003  
                           wtemp0 007E                   __initialization 0013                      __end_of_main 0509  
       __size_of_SetReceivedTimes 006E                __size_of_GetDigits 009C                            ??_main 019E  
               SetDefaultTimers@i 0033                 SetDefaultTimers@l 0032                __size_of_BuildByte 00C8  
                      _SetDisplay 0A12                            _ADCON0 001F                            _ADCON1 009F  
              __size_of_Conteggio 004C                            _ADRESH 001E                            _ADRESL 009E  
                ___awdiv@dividend 002D                            i1l2041 0B93                            i1l2043 0BA3  
                          i1l2035 0B71                            i1l2045 0BAC                            i1l2037 0B7A  
                          i1l2039 0B8A                            i1l2403 09D8                            i1l2411 0CE3  
                          i1l2405 09DF                            i1l2421 0CFE                            i1l2423 0D19  
                          i1l2415 0CE4                            i1l2425 0D1D                            i1l2417 0CED  
                          i1l2409 0CC3                            i1l2427 0D21                            i1l2419 0CF6  
                          u130_20 0BAC                            u130_21 0BAB                            i1l2651 0C1D  
                          i1l2643 0C10                            i1l2653 0C21                            i1l2661 0C38  
                          i1l2645 0C14                            i1l2671 0C4A                            i1l2663 0C3C  
                          i1l2655 0C25                            i1l2647 0C18                            i1l2681 0C57  
                          i1l2673 0C4B                            i1l2665 0C3D                            i1l2657 0C33  
                          i1l2649 0C1B                            i1l2683 0C5B                            i1l2675 0C4F  
                          i1l2667 0C42                            i1l2659 0C37                            i1l2685 0C5D  
                          i1l2677 0C55                            i1l2669 0C46                            i1l2679 0C56  
                          u212_20 0C14                            u212_21 0C13                            u213_20 0C18  
                          u213_21 0C17                            u214_20 0C21                            u214_21 0C20  
                          u215_20 0C25                            u215_21 0C24                            u128_20 0B7A  
                          u216_20 0C3C                            u128_21 0B79                            u216_21 0C3B  
                          u129_20 0B93                            u217_20 0C4A                            _INTCON 000B  
                          u129_21 0B92                            u217_21 0C49                            u218_20 0C55  
                          u218_21 0C54                            u183_20 09DE                            u183_21 09DD  
                          u184_20 0CED                            u184_21 0CEC                            u185_20 0CFE  
                          u185_21 0CFD                            u186_20 0D27                            u186_21 0D26  
                          _TMR0IF 005A                            _TMR1IF 0060                         ??_GetTime 0026  
                    ?_UART_TxChar 0070                 __end_of_UART_Init 0B2B                 __end_of_UART_Read 09E1  
                          ___bmul 0A27                         ??___aldiv 002C                   GetTime@shortInt 0029  
                          ___wmul 0A64                         ??___awdiv 002F                            _decine 005E  
                       ??___awmod 0028                  __end_of_init_ADC 09FF                            _cycled 0051  
                ___awdiv@quotient 0032                   ___awmod@divisor 0024                   ___awmod@counter 0029  
                __end_of_sendByte 0ABC                   GetDigits@decine 0034                         ?_ADC_Read 0024  
                          saved_w 007E           __end_of__initialization 003B                 __end_of_GetDigits 0E9B  
                   ??_UpdateTimes 0024         __size_of_SetDefaultTimers 014F               ___bmul@multiplicand 0024  
                  __pcstackCOMMON 0070                 __end_of_BuildByte 1000                      __pidataBANK0 09D0  
                _conteggioVeicoli 0CC3                 __end_of_Conteggio 0BBD                     ?_luciSemaforo 0024  
                      ??_ADC_Read 0026            SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C  
                     ?_SetDisplay 0024                     GetDigits@Time 0036              _dataFromGatewayIndex 004E  
            _timerReadFromGateway 004D                        __pbssBANK0 0048                        __pbssBANK1 00A0  
                      __pbssBANK3 0190                        __pmaintext 003F                           ?___bmul 0024  
                         ?___wmul 0024                    ??_luciSemaforo 0025               __end_of_UpdateTimes 0772  
                   sendByte@byte0 003D                     sendByte@byte1 0038                        __pintentry 0004  
                _SetReceivedTimes 0D91       __end_of_ShowDigitsOnDisplay 07EE                        __stringtab 07EE  
                       ?_init_ADC 0070                           _GetTime 0B2B                   BuildByte@valore 0025  
                 BuildByte@txByte 0029           GetTime@_dataFromGateway 0024                         ?_sendByte 0038  
                      _n_semafori 07FF              __size_of_UART_TxChar 000B                           ___aldiv 0E9B  
                 __size_of___bmul 0017                           ___awdiv 0D28                           ___awmod 0C68  
             __size_of_SetDisplay 0015                   __size_of___wmul 0027                 conteggioVeicoli@i 007D  
                         __ptext1 0A8B                           __ptext2 09E1                           __ptext3 0F38  
                         __ptext4 0ABC                           __ptext5 0A64                           __ptext6 0BBD  
                         __ptext7 09EC                           __ptext8 0658                           __ptext9 0AF1  
                         _display 07F4                      __size_of_ISR 0058                      __size_of_map 0035  
                ___awmod@dividend 0026                  ___aldiv@dividend 0028              BuildByte@sommaColumn 002F  
                         _umidita 004B                           clrloop0 09C9              end_of_initialization 003B  
                      ??_init_ADC 0024                    main@lux_select 0044                       _UpdateTimes 0658  
                      ??_sendByte 003A                  _SetDefaultTimers 0509                         _RCSTAbits 0018  
                ___aldiv@quotient 002F                        _motorcycle 0059                         _UART_Init 0AF1  
                       _UART_Read 09D8             SetReceivedTimes@index 0038                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                      SetDisplay@d1 0027  
                    SetDisplay@d2 0024                      SetDisplay@d3 0025                         _TRISCbits 0087  
               __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0D28              __end_of_luciSemaforo 0C10  
                      map@out_max 003C                        map@out_min 003A  SetReceivedTimes@_dataFromGateway 0037  
                       _TXSTAbits 0098                         _GetDigits 0DFF                    __end_of___bmul 0A3E  
                  __end_of___wmul 0A8B                        ?_UART_Init 0033                        ?_UART_Read 0070  
                       _BuildByte 0F38                         _Conteggio 0B71                 BuildByte@sommaRow 002E  
             start_initialization 0013                       __end_of_ISR 0C68                      ??_SetDisplay 0027  
                     __end_of_map 0AF1          __end_of_SetReceivedTimes 0DFF                        ?_GetDigits 0034  
                        ??___bmul 0025                    ADC_Read@canale 0027                          ??___wmul 0028  
                      init_fetch0 09FF                       __pdataBANK0 0060                __end_of_SetDisplay 0A27  
                      ?_BuildByte 0024                    GetDigits@unita 0035                        ?_Conteggio 0070  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK3 019E  
                        ?_GetTime 0024             SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024  
               __size_of_init_ADC 0013                         _centinaia 005D                 __size_of_sendByte 0031  
                        ?___aldiv 0024                          ?___awdiv 002B                          ?___awmod 0024  
                     ??_UART_Init 0035                       ??_UART_Read 0070                    BuildByte@i_355 0036  
                       __pstrings 07EE                    BuildByte@y_356 0032                    sendByte@valore 0039  
                  sendByte@txByte 003E                    BuildByte@byte0 0028                    BuildByte@byte1 0024  
        __end_of_SetDefaultTimers 0658                          _ADC_Read 0A3E             __size_of_luciSemaforo 0053  
                       _count_lux 004F                     UART_TxChar@ch 0024      __size_of_ShowDigitsOnDisplay 007C  
                 ___aldiv@divisor 0024                 SetReceivedTimes@i 0039                 interrupt_function 0004  
                 ___aldiv@counter 002D                    ___wmul@product 0028        SetReceivedTimes@semaforoId 0035  
                    ?_UpdateTimes 0070                         clear_ram0 09C8                          _PIE1bits 008C  
                   ??_UART_TxChar 0024                       ??_GetDigits 0038                          _GO_nDONE 00FA  
                    _luciSemaforo 0BBD                         _pressione 004A                 UART_Init@baudrate 0033  
                     ??_BuildByte 0026                         map@in_max 0038                         map@in_min 0036  
                     __stringbase 07F3                         main@i_482 0042                         main@i_483 0040  
                       main@i_485 0041                       ??_Conteggio 0076                         main@i_487 0045  
               ___wmul@multiplier 0024                      GetTime@index 0028                      _RoadsSensors 00A8  
               ?_conteggioVeicoli 0070                      _secondPassed 0052                ??_conteggioVeicoli 0079  
                __size_of_GetTime 0046                          _Semafori 0060                GetDigits@centinaia 003B  
                     _readGateway 0053                  __size_of___aldiv 009D               __end_of_UART_TxChar 09EC  
                __size_of___awdiv 0069                  __size_of___awmod 005B                __end_of__stringtab 07F4  
                       sendByte@i 003F                          __ptext10 0E9B                          __ptext11 0772  
                        __ptext20 0A3E                          __ptext12 0A12                          __ptext21 0C10  
                        __ptext13 0D91                          __ptext22 0CC3                          __ptext14 0A27  
                        __ptext23 0B71                          __ptext15 0B2B                          __ptext24 09D8  
                        __ptext16 0509                          __ptext17 0DFF                          __ptext18 0C68  
                        __ptext19 0D28                __end_of_n_semafori 0800                          _init_ADC 09EC  
               ?_SetReceivedTimes 002C                     __size_of_main 04CA                   _dataFromGateway 00AC  
                        _sendByte 0A8B                ??_SetReceivedTimes 002D                        _INTCONbits 000B  
                        init_ram0 0A03              Conteggio@_motorcycle 0072                          intlevel1 0000  
                 _readGatewayDone 0054                         stringcode 07EE                       _UART_TxChar 09E1  
         SetReceivedTimes@colorId 0036              __size_of_UpdateTimes 011A                        GetTime@tmp 002A  
             _ShowDigitsOnDisplay 0772                        _OPTION_REG 0081                   SetDisplay@value 0026  
                        stringdir 07EE                          stringtab 07EE                      UpdateTimes@i 0036  
                    UpdateTimes@l 0038                 ?_SetDefaultTimers 0024                      ___aldiv@sign 002E  
              ??_SetDefaultTimers 002B              ?_ShowDigitsOnDisplay 0070                        BuildByte@i 0034  
                      BuildByte@y 0030         SetDefaultTimers@_semafori 002A                   Conteggio@_count 0070  
                   Conteggio@_car 0073                   Conteggio@_truck 0074                    Conteggio@index 0075  
