

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun 28 15:09:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK3
   199  0D49                     __pidataBANK3:	
   200                           
   201                           ;initializer for _Semafori
   202  0D49  34E3               	retlw	low (_s0| 0)
   203  0D4A  3400               	retlw	high (_s0| 0)
   204  0D4B  34DD               	retlw	low (_s1| 0)
   205  0D4C  3400               	retlw	high (_s1| 0)
   206  0D4D  34D7               	retlw	low (_s2| 0)
   207  0D4E  3400               	retlw	high (_s2| 0)
   208  0D4F  34D1               	retlw	low (_s3| 0)
   209  0D50  3400               	retlw	high (_s3| 0)
   210  0D51  34CB               	retlw	low (_s4| 0)
   211  0D52  3400               	retlw	high (_s4| 0)
   212  0D53  34C5               	retlw	low (_s5| 0)
   213  0D54  3400               	retlw	high (_s5| 0)
   214  0D55  34BF               	retlw	low (_s6| 0)
   215  0D56  3400               	retlw	high (_s6| 0)
   216  0D57  34B9               	retlw	low (_s7| 0)
   217  0D58  3400               	retlw	high (_s7| 0)
   218  0D59  34B3               	retlw	low (_s8| 0)
   219  0D5A  3400               	retlw	high (_s8| 0)
   220  0D5B  34AD               	retlw	low (_s9| 0)
   221  0D5C  3400               	retlw	high (_s9| 0)
   222  0D5D  34A7               	retlw	low (_s10| 0)
   223  0D5E  3400               	retlw	high (_s10| 0)
   224  0D5F  34B7               	retlw	low (_s11| (0+256))
   225  0D60  3401               	retlw	high (_s11| (0+256))
   226  0D61  34B1               	retlw	low (_s12| (0+256))
   227  0D62  3401               	retlw	high (_s12| (0+256))
   228  0D63  34AB               	retlw	low (_s13| (0+256))
   229  0D64  3401               	retlw	high (_s13| (0+256))
   230  0D65  34A5               	retlw	low (_s14| (0+256))
   231  0D66  3401               	retlw	high (_s14| (0+256))
   232  0D67  349F               	retlw	low (_s15| (0+256))
   233  0D68  3401               	retlw	high (_s15| (0+256))
   234                           
   235                           	psect	strings
   236  0800                     __pstrings:	
   237  0800                     stringtab:	
   238  0800                     __stringtab:	
   239  0800                     stringcode:	
   240                           ;	String table - string pointers are 1 byte each
   241                           
   242  0800                     stringdir:	
   243  0800  3008               	movlw	high stringdir
   244  0801  008A               	movwf	10
   245  0802  0804               	movf	4,w
   246  0803  0A84               	incf	4,f
   247  0804  0782               	addwf	2,f
   248  0805                     __stringbase:	
   249  0805  3400               	retlw	0
   250  0806                     __end_of__stringtab:	
   251  0806                     _display:	
   252  0806  343F               	retlw	63
   253  0807  3406               	retlw	6
   254  0808  345B               	retlw	91
   255  0809  344F               	retlw	79
   256  080A  3466               	retlw	102
   257  080B  346D               	retlw	109
   258  080C  347D               	retlw	125
   259  080D  3407               	retlw	7
   260  080E  347F               	retlw	127
   261  080F  346F               	retlw	111
   262  0810  3400               	retlw	0
   263  0811                     __end_of_display:	
   264  0006                     _PORTBbits	set	6
   265  0008                     _PORTD	set	8
   266  0005                     _PORTAbits	set	5
   267  001A                     _RCREG	set	26
   268  0019                     _TXREG	set	25
   269  000B                     _INTCONbits	set	11
   270  0018                     _RCSTAbits	set	24
   271  001E                     _ADRESH	set	30
   272  001F                     _ADCON0	set	31
   273  000E                     _TMR1L	set	14
   274  000F                     _TMR1H	set	15
   275  0010                     _T1CON	set	16
   276  0001                     _TMR0	set	1
   277  000B                     _INTCON	set	11
   278  0060                     _TMR1IF	set	96
   279  005A                     _TMR0IF	set	90
   280  0065                     _RCIF	set	101
   281  0064                     _TXIF	set	100
   282  00FA                     _GO_nDONE	set	250
   283  008C                     _PIE1bits	set	140
   284  0099                     _SPBRG	set	153
   285  0098                     _TXSTAbits	set	152
   286  0087                     _TRISCbits	set	135
   287  009E                     _ADRESL	set	158
   288  009F                     _ADCON1	set	159
   289  0085                     _TRISA	set	133
   290  0081                     _OPTION_REG	set	129
   291  0089                     _TRISE	set	137
   292  0088                     _TRISD	set	136
   293  0087                     _TRISC	set	135
   294  0086                     _TRISB	set	134
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  0013                     start_initialization:	
   300  0013                     __initialization:	
   301                           
   302                           ; Initialize objects allocated to BANK3
   303  0013  1783               	bsf	3,7	;select IRP bank2
   304  0014  30DD               	movlw	low (__pdataBANK3+32)
   305  0015  00FD               	movwf	btemp+-1
   306  0016  300D               	movlw	high __pidataBANK3
   307  0017  00FE               	movwf	btemp
   308  0018  3049               	movlw	low __pidataBANK3
   309  0019  00FF               	movwf	btemp+1
   310  001A  30BD               	movlw	low __pdataBANK3
   311  001B  0084               	movwf	4
   312  001C  120A  158A  250E  120A  118A  	fcall	init_ram0
   313                           
   314                           ; Clear objects allocated to BANK3
   315  0021  3090               	movlw	low __pbssBANK3
   316  0022  0084               	movwf	4
   317  0023  30BD               	movlw	low (__pbssBANK3+45)
   318  0024  120A  158A  24DB  120A  118A  	fcall	clear_ram0
   319                           
   320                           ; Clear objects allocated to BANK1
   321  0029  1383               	bcf	3,7	;select IRP bank0
   322  002A  30A0               	movlw	low __pbssBANK1
   323  002B  0084               	movwf	4
   324  002C  30ED               	movlw	low (__pbssBANK1+77)
   325  002D  120A  158A  24DB  120A  118A  	fcall	clear_ram0
   326                           
   327                           ; Clear objects allocated to BANK0
   328  0032  304A               	movlw	low __pbssBANK0
   329  0033  0084               	movwf	4
   330  0034  3067               	movlw	low (__pbssBANK0+29)
   331  0035  120A  158A  24DB  120A  118A  	fcall	clear_ram0
   332  003A                     end_of_initialization:	
   333                           ;End of C runtime variable initialization code
   334                           
   335  003A                     __end_of__initialization:	
   336  003A  0183               	clrf	3
   337  003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   338                           
   339                           	psect	bssBANK0
   340  004A                     __pbssBANK0:	
   341  004A                     _RoadsSensors:	
   342  004A                     	ds	4
   343  004E                     _count:	
   344  004E                     	ds	2
   345  0050                     _timerReadFromGateway:	
   346  0050                     	ds	1
   347  0051                     _dataFromGatewayIndex:	
   348  0051                     	ds	1
   349  0052                     _time:	
   350  0052                     	ds	1
   351  0053                     _comando:	
   352  0053                     	ds	1
   353  0054                     _count_lux:	
   354  0054                     	ds	1
   355  0055                     _disp:	
   356  0055                     	ds	1
   357  0056                     _old_disp:	
   358  0056                     	ds	1
   359  0057                     _cycled:	
   360  0057                     	ds	1
   361  0058                     _secondPassed:	
   362  0058                     	ds	1
   363  0059                     _readGateway:	
   364  0059                     	ds	1
   365  005A                     _readGatewayDone:	
   366  005A                     	ds	1
   367  005B                     _car:	
   368  005B                     	ds	4
   369  005F                     _motorcycle:	
   370  005F                     	ds	4
   371  0063                     _id_semaforo:	
   372  0063                     	ds	1
   373  0064                     _centinaia:	
   374  0064                     	ds	1
   375  0065                     _decine:	
   376  0065                     	ds	1
   377  0066                     _unita:	
   378  0066                     	ds	1
   379                           
   380                           	psect	bssBANK1
   381  00A0                     __pbssBANK1:	
   382  00A0                     _to_update:	
   383  00A0                     	ds	7
   384  00A7                     _s10:	
   385  00A7                     	ds	6
   386  00AD                     _s9:	
   387  00AD                     	ds	6
   388  00B3                     _s8:	
   389  00B3                     	ds	6
   390  00B9                     _s7:	
   391  00B9                     	ds	6
   392  00BF                     _s6:	
   393  00BF                     	ds	6
   394  00C5                     _s5:	
   395  00C5                     	ds	6
   396  00CB                     _s4:	
   397  00CB                     	ds	6
   398  00D1                     _s3:	
   399  00D1                     	ds	6
   400  00D7                     _s2:	
   401  00D7                     	ds	6
   402  00DD                     _s1:	
   403  00DD                     	ds	6
   404  00E3                     _s0:	
   405  00E3                     	ds	6
   406  00E9                     _truck:	
   407  00E9                     	ds	4
   408                           
   409                           	psect	bssBANK3
   410  0190                     __pbssBANK3:	
   411  0190                     _dataFromGateway:	
   412  0190                     	ds	15
   413  019F                     _s15:	
   414  019F                     	ds	6
   415  01A5                     _s14:	
   416  01A5                     	ds	6
   417  01AB                     _s13:	
   418  01AB                     	ds	6
   419  01B1                     _s12:	
   420  01B1                     	ds	6
   421  01B7                     _s11:	
   422  01B7                     	ds	6
   423                           
   424                           	psect	dataBANK3
   425  01BD                     __pdataBANK3:	
   426  01BD                     _Semafori:	
   427  01BD                     	ds	32
   428                           
   429                           	psect	inittext
   430  0D0A                     init_fetch0:	
   431                           ;	Called with low address in FSR and high address in W
   432                           
   433  0D0A  087E               	movf	btemp,w
   434  0D0B  008A               	movwf	10
   435  0D0C  087F               	movf	btemp+1,w
   436  0D0D  0082               	movwf	2
   437  0D0E                     init_ram0:	
   438                           ;Called with:
   439                           ;	high address of idata address in btemp 
   440                           ;	low address of idata address in btemp+1 
   441                           ;	low address of data in FSR
   442                           ;	high address + 1 of data in btemp-1
   443                           
   444  0D0E  120A  158A  250A  120A  158A  	fcall	init_fetch0
   445  0D13  0080               	movwf	0
   446  0D14  0A84               	incf	4,f
   447  0D15  0804               	movf	4,w
   448  0D16  067D               	xorwf	btemp+-1,w
   449  0D17  1903               	btfsc	3,2
   450  0D18  3400               	retlw	0
   451  0D19  0AFF               	incf	btemp+1,f
   452  0D1A  1903               	btfsc	3,2
   453  0D1B  0AFE               	incf	btemp,f
   454  0D1C  2D0E               	goto	init_ram0
   455                           
   456                           	psect	clrtext
   457  0CDB                     clear_ram0:	
   458                           ;	Called with FSR containing the base address, and
   459                           ;	W with the last address+1
   460                           
   461  0CDB  0064               	clrwdt	;clear the watchdog before getting into this loop
   462  0CDC                     clrloop0:	
   463  0CDC  0180               	clrf	0	;clear RAM location pointed to by FSR
   464  0CDD  0A84               	incf	4,f	;increment pointer
   465  0CDE  0604               	xorwf	4,w	;XOR with final address
   466  0CDF  1903               	btfsc	3,2	;have we reached the end yet?
   467  0CE0  3400               	retlw	0	;all done for this memory range, return
   468  0CE1  0604               	xorwf	4,w	;XOR again to restore value
   469  0CE2  2CDC               	goto	clrloop0	;do the next byte
   470                           
   471                           	psect	cstackBANK3
   472  01DD                     __pcstackBANK3:	
   473  01DD                     main@temp:	
   474                           
   475                           ; 1 bytes @ 0x0
   476  01DD                     	ds	1
   477  01DE                     main@umidita:	
   478                           
   479                           ; 1 bytes @ 0x1
   480  01DE                     	ds	1
   481  01DF                     main@pressione:	
   482                           
   483                           ; 1 bytes @ 0x2
   484  01DF                     	ds	1
   485  01E0                     main@time:	
   486                           
   487                           ; 2 bytes @ 0x3
   488  01E0                     	ds	2
   489  01E2                     main@i_458:	
   490                           
   491                           ; 1 bytes @ 0x5
   492  01E2                     	ds	1
   493  01E3                     main@i_460:	
   494                           
   495                           ; 1 bytes @ 0x6
   496  01E3                     	ds	1
   497  01E4                     main@lux_select:	
   498                           
   499                           ; 1 bytes @ 0x7
   500  01E4                     	ds	1
   501  01E5                     main@i_457:	
   502                           
   503                           ; 2 bytes @ 0x8
   504  01E5                     	ds	2
   505  01E7                     main@i:	
   506                           
   507                           ; 2 bytes @ 0xA
   508  01E7                     	ds	2
   509                           
   510                           	psect	cstackCOMMON
   511  0070                     __pcstackCOMMON:	
   512  0070                     ?_init_ADC:	
   513  0070                     ?_Conteggio:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_main:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_UART_TxChar:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_UART_Read:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ??_UART_Read:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_conteggioVeicoli:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_ISR:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     Conteggio@_count:	
   535                           ; 1 bytes @ 0x0
   536                           
   537                           
   538                           ; 2 bytes @ 0x0
   539  0070                     	ds	2
   540  0072                     Conteggio@_motorcycle:	
   541                           
   542                           ; 1 bytes @ 0x2
   543  0072                     	ds	1
   544  0073                     Conteggio@_car:	
   545                           
   546                           ; 1 bytes @ 0x3
   547  0073                     	ds	1
   548  0074                     Conteggio@_truck:	
   549                           
   550                           ; 1 bytes @ 0x4
   551  0074                     	ds	1
   552  0075                     Conteggio@index:	
   553                           
   554                           ; 1 bytes @ 0x5
   555  0075                     	ds	1
   556  0076                     ??_Conteggio:	
   557                           
   558                           ; 1 bytes @ 0x6
   559  0076                     	ds	3
   560  0079                     ??_conteggioVeicoli:	
   561                           
   562                           ; 1 bytes @ 0x9
   563  0079                     	ds	4
   564  007D                     conteggioVeicoli@i:	
   565                           
   566                           ; 1 bytes @ 0xD
   567  007D                     	ds	1
   568                           
   569                           	psect	cstackBANK0
   570  0020                     __pcstackBANK0:	
   571  0020                     ??_ISR:	
   572                           
   573                           ; 1 bytes @ 0x0
   574  0020                     	ds	4
   575  0024                     ??_init_ADC:	
   576  0024                     ?_SetDisplay:	
   577                           ; 1 bytes @ 0x4
   578                           
   579  0024                     ?_BuildByte:	
   580                           ; 1 bytes @ 0x4
   581                           
   582  0024                     ?_UpdateTimes:	
   583                           ; 1 bytes @ 0x4
   584                           
   585  0024                     ?_SetDefaultTimers:	
   586                           ; 1 bytes @ 0x4
   587                           
   588  0024                     ??_UART_TxChar:	
   589                           ; 1 bytes @ 0x4
   590                           
   591  0024                     ?___bmul:	
   592                           ; 1 bytes @ 0x4
   593                           
   594  0024                     ?_ADC_Read:	
   595                           ; 1 bytes @ 0x4
   596                           
   597  0024                     ?_GetTime:	
   598                           ; 2 bytes @ 0x4
   599                           
   600  0024                     ?___wmul:	
   601                           ; 2 bytes @ 0x4
   602                           
   603  0024                     ?___awmod:	
   604                           ; 2 bytes @ 0x4
   605                           
   606  0024                     ?___aldiv:	
   607                           ; 2 bytes @ 0x4
   608                           
   609  0024                     BuildByte@byte1:	
   610                           ; 4 bytes @ 0x4
   611                           
   612  0024                     UpdateTimes@_to_update:	
   613                           ; 1 bytes @ 0x4
   614                           
   615  0024                     GetTime@_dataFromGateway:	
   616                           ; 1 bytes @ 0x4
   617                           
   618  0024                     UART_TxChar@ch:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0024                     SetDisplay@d2:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0024                     ___bmul@multiplicand:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0024                     SetDefaultTimers@rosso:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0024                     ___wmul@multiplier:	
   631                           ; 2 bytes @ 0x4
   632                           
   633  0024                     ___awmod@divisor:	
   634                           ; 2 bytes @ 0x4
   635                           
   636  0024                     ___aldiv@divisor:	
   637                           ; 2 bytes @ 0x4
   638                           
   639                           
   640                           ; 4 bytes @ 0x4
   641  0024                     	ds	1
   642  0025                     ??_UpdateTimes:	
   643  0025                     ??___bmul:	
   644                           ; 1 bytes @ 0x5
   645                           
   646  0025                     BuildByte@valore:	
   647                           ; 1 bytes @ 0x5
   648                           
   649  0025                     SetDisplay@d3:	
   650                           ; 1 bytes @ 0x5
   651                           
   652                           
   653                           ; 1 bytes @ 0x5
   654  0025                     	ds	1
   655  0026                     ??_ADC_Read:	
   656  0026                     ??_BuildByte:	
   657                           ; 1 bytes @ 0x6
   658                           
   659  0026                     ??_GetTime:	
   660                           ; 1 bytes @ 0x6
   661                           
   662  0026                     SetDisplay@value:	
   663                           ; 1 bytes @ 0x6
   664                           
   665  0026                     ___bmul@product:	
   666                           ; 1 bytes @ 0x6
   667                           
   668  0026                     SetDefaultTimers@verde:	
   669                           ; 1 bytes @ 0x6
   670                           
   671  0026                     ___wmul@multiplicand:	
   672                           ; 2 bytes @ 0x6
   673                           
   674  0026                     ___awmod@dividend:	
   675                           ; 2 bytes @ 0x6
   676                           
   677                           
   678                           ; 2 bytes @ 0x6
   679  0026                     	ds	1
   680  0027                     ??_SetDisplay:	
   681  0027                     ADC_Read@canale:	
   682                           ; 1 bytes @ 0x7
   683                           
   684  0027                     SetDisplay@d1:	
   685                           ; 1 bytes @ 0x7
   686                           
   687  0027                     ___bmul@multiplier:	
   688                           ; 1 bytes @ 0x7
   689                           
   690                           
   691                           ; 1 bytes @ 0x7
   692  0027                     	ds	1
   693  0028                     ??___wmul:	
   694  0028                     ??___awmod:	
   695                           ; 1 bytes @ 0x8
   696                           
   697  0028                     BuildByte@byte0:	
   698                           ; 1 bytes @ 0x8
   699                           
   700  0028                     GetTime@index:	
   701                           ; 1 bytes @ 0x8
   702                           
   703  0028                     SetDefaultTimers@giallo:	
   704                           ; 1 bytes @ 0x8
   705                           
   706  0028                     ___wmul@product:	
   707                           ; 2 bytes @ 0x8
   708                           
   709  0028                     ___aldiv@dividend:	
   710                           ; 2 bytes @ 0x8
   711                           
   712                           
   713                           ; 4 bytes @ 0x8
   714  0028                     	ds	1
   715  0029                     GetTime@shortInt:	
   716  0029                     ___awmod@counter:	
   717                           ; 1 bytes @ 0x9
   718                           
   719  0029                     BuildByte@txByte:	
   720                           ; 1 bytes @ 0x9
   721                           
   722                           
   723                           ; 5 bytes @ 0x9
   724  0029                     	ds	1
   725  002A                     SetDefaultTimers@_semafori:	
   726  002A                     ___awmod@sign:	
   727                           ; 1 bytes @ 0xA
   728                           
   729  002A                     GetTime@tmp:	
   730                           ; 1 bytes @ 0xA
   731                           
   732                           
   733                           ; 2 bytes @ 0xA
   734  002A                     	ds	1
   735  002B                     ?_ChangeTrafficLight:	
   736  002B                     ??_SetDefaultTimers:	
   737                           ; 1 bytes @ 0xB
   738                           
   739  002B                     ?___awdiv:	
   740                           ; 1 bytes @ 0xB
   741                           
   742  002B                     ChangeTrafficLight@_n_semafori:	
   743                           ; 2 bytes @ 0xB
   744                           
   745  002B                     ___awdiv@divisor:	
   746                           ; 1 bytes @ 0xB
   747                           
   748                           
   749                           ; 2 bytes @ 0xB
   750  002B                     	ds	1
   751  002C                     ??_ChangeTrafficLight:	
   752  002C                     ?_SetReceivedTimes:	
   753                           ; 1 bytes @ 0xC
   754                           
   755  002C                     ??___aldiv:	
   756                           ; 1 bytes @ 0xC
   757                           
   758  002C                     SetReceivedTimes@_semafori:	
   759                           ; 1 bytes @ 0xC
   760                           
   761                           
   762                           ; 1 bytes @ 0xC
   763  002C                     	ds	1
   764  002D                     SetReceivedTimes@_to_update:	
   765  002D                     ___aldiv@counter:	
   766                           ; 1 bytes @ 0xD
   767                           
   768  002D                     ___awdiv@dividend:	
   769                           ; 1 bytes @ 0xD
   770                           
   771                           
   772                           ; 2 bytes @ 0xD
   773  002D                     	ds	1
   774  002E                     BuildByte@sommaRow:	
   775  002E                     SetReceivedTimes@_id_semaforo:	
   776                           ; 1 bytes @ 0xE
   777                           
   778  002E                     ___aldiv@sign:	
   779                           ; 1 bytes @ 0xE
   780                           
   781                           
   782                           ; 1 bytes @ 0xE
   783  002E                     	ds	1
   784  002F                     ??_SetReceivedTimes:	
   785  002F                     ??___awdiv:	
   786                           ; 1 bytes @ 0xF
   787                           
   788  002F                     BuildByte@sommaColumn:	
   789                           ; 1 bytes @ 0xF
   790                           
   791  002F                     ___aldiv@quotient:	
   792                           ; 1 bytes @ 0xF
   793                           
   794                           
   795                           ; 4 bytes @ 0xF
   796  002F                     	ds	1
   797  0030                     UpdateTimes@_semafori:	
   798  0030                     ___awdiv@counter:	
   799                           ; 1 bytes @ 0x10
   800                           
   801  0030                     BuildByte@y:	
   802                           ; 1 bytes @ 0x10
   803                           
   804                           
   805                           ; 2 bytes @ 0x10
   806  0030                     	ds	1
   807  0031                     UpdateTimes@l:	
   808  0031                     ___awdiv@sign:	
   809                           ; 1 bytes @ 0x11
   810                           
   811                           
   812                           ; 1 bytes @ 0x11
   813  0031                     	ds	1
   814  0032                     UpdateTimes@i:	
   815  0032                     ChangeTrafficLight@_semafori:	
   816                           ; 1 bytes @ 0x12
   817                           
   818  0032                     SetDefaultTimers@l:	
   819                           ; 1 bytes @ 0x12
   820                           
   821  0032                     BuildByte@y_333:	
   822                           ; 1 bytes @ 0x12
   823                           
   824  0032                     ___awdiv@quotient:	
   825                           ; 2 bytes @ 0x12
   826                           
   827                           
   828                           ; 2 bytes @ 0x12
   829  0032                     	ds	1
   830  0033                     ?_UART_Init:	
   831  0033                     SetDefaultTimers@i:	
   832                           ; 1 bytes @ 0x13
   833                           
   834  0033                     UART_Init@baudrate:	
   835                           ; 1 bytes @ 0x13
   836                           
   837                           
   838                           ; 2 bytes @ 0x13
   839  0033                     	ds	1
   840  0034                     ?_GetDigits:	
   841  0034                     ?_map:	
   842                           ; 1 bytes @ 0x14
   843                           
   844  0034                     GetDigits@decine:	
   845                           ; 2 bytes @ 0x14
   846                           
   847  0034                     map@x:	
   848                           ; 1 bytes @ 0x14
   849                           
   850  0034                     BuildByte@i:	
   851                           ; 2 bytes @ 0x14
   852                           
   853                           
   854                           ; 2 bytes @ 0x14
   855  0034                     	ds	1
   856  0035                     ??_UART_Init:	
   857  0035                     GetDigits@unita:	
   858                           ; 1 bytes @ 0x15
   859                           
   860                           
   861                           ; 1 bytes @ 0x15
   862  0035                     	ds	1
   863  0036                     map@in_min:	
   864  0036                     GetDigits@Time:	
   865                           ; 2 bytes @ 0x16
   866                           
   867  0036                     BuildByte@i_332:	
   868                           ; 2 bytes @ 0x16
   869                           
   870                           
   871                           ; 2 bytes @ 0x16
   872  0036                     	ds	1
   873  0037                     SetReceivedTimes@colorId:	
   874                           
   875                           ; 1 bytes @ 0x17
   876  0037                     	ds	1
   877  0038                     ?_sendByte:	
   878  0038                     ??_GetDigits:	
   879                           ; 1 bytes @ 0x18
   880                           
   881  0038                     SetReceivedTimes@semaforoId:	
   882                           ; 1 bytes @ 0x18
   883                           
   884  0038                     sendByte@byte1:	
   885                           ; 1 bytes @ 0x18
   886                           
   887  0038                     map@in_max:	
   888                           ; 1 bytes @ 0x18
   889                           
   890                           
   891                           ; 2 bytes @ 0x18
   892  0038                     	ds	1
   893  0039                     SetReceivedTimes@i:	
   894  0039                     sendByte@valore:	
   895                           ; 1 bytes @ 0x19
   896                           
   897  0039                     _GetDigits$1171:	
   898                           ; 1 bytes @ 0x19
   899                           
   900                           
   901                           ; 2 bytes @ 0x19
   902  0039                     	ds	1
   903  003A                     ??_sendByte:	
   904  003A                     SetReceivedTimes@_dataFromGateway:	
   905                           ; 1 bytes @ 0x1A
   906                           
   907  003A                     map@out_min:	
   908                           ; 1 bytes @ 0x1A
   909                           
   910                           
   911                           ; 2 bytes @ 0x1A
   912  003A                     	ds	1
   913  003B                     GetDigits@centinaia:	
   914  003B                     SetReceivedTimes@index:	
   915                           ; 1 bytes @ 0x1B
   916                           
   917                           
   918                           ; 1 bytes @ 0x1B
   919  003B                     	ds	1
   920  003C                     map@out_max:	
   921                           
   922                           ; 2 bytes @ 0x1C
   923  003C                     	ds	1
   924  003D                     sendByte@byte0:	
   925                           
   926                           ; 1 bytes @ 0x1D
   927  003D                     	ds	1
   928  003E                     ??_map:	
   929  003E                     sendByte@txByte:	
   930                           ; 1 bytes @ 0x1E
   931                           
   932                           
   933                           ; 1 bytes @ 0x1E
   934  003E                     	ds	1
   935  003F                     sendByte@i:	
   936                           
   937                           ; 1 bytes @ 0x1F
   938  003F                     	ds	1
   939  0040                     ??_main:	
   940                           
   941                           ; 1 bytes @ 0x20
   942  0040                     	ds	10
   943                           
   944                           	psect	maintext
   945  003E                     __pmaintext:	
   946 ;;
   947 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   948 ;;
   949 ;; *************** function _main *****************
   950 ;; Defined at:
   951 ;;		line 126 in file "main.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  i               1    6[BANK3 ] unsigned char 
   956 ;;  i               1    5[BANK3 ] unsigned char 
   957 ;;  i               2    8[BANK3 ] int 
   958 ;;  i               2   10[BANK3 ] int 
   959 ;;  time            2    3[BANK3 ] int 
   960 ;;  lux_select      1    7[BANK3 ] unsigned char 
   961 ;;  pressione       1    2[BANK3 ] unsigned char 
   962 ;;  umidita         1    1[BANK3 ] unsigned char 
   963 ;;  temp            1    0[BANK3 ] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : B00/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0      12       0
   975 ;;      Temps:          0      10       0       0       0
   976 ;;      Totals:         0      10       0      12       0
   977 ;;Total ram usage:       22 bytes
   978 ;; Hardware stack levels required when called:    5
   979 ;; This function calls:
   980 ;;		_ADC_Read
   981 ;;		_ChangeTrafficLight
   982 ;;		_GetDigits
   983 ;;		_SetDefaultTimers
   984 ;;		_SetDisplay
   985 ;;		_SetReceivedTimes
   986 ;;		_UART_Init
   987 ;;		_UpdateTimes
   988 ;;		___awmod
   989 ;;		_init_ADC
   990 ;;		_map
   991 ;;		_sendByte
   992 ;; This function is called by:
   993 ;;		Startup code after reset
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _main
   999  003E                     _main:	
  1000  003E                     l2907:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1003                           
  1004                           
  1005                           ;main.c: 128:     TRISB = 0x1F;
  1006  003E  301F               	movlw	31
  1007  003F  1683               	bsf	3,5	;RP0=1, select bank1
  1008  0040  1303               	bcf	3,6	;RP1=0, select bank1
  1009  0041  0086               	movwf	6	;volatile
  1010                           
  1011                           ;main.c: 129:     TRISC = 0x80;
  1012  0042  3080               	movlw	128
  1013  0043  0087               	movwf	7	;volatile
  1014  0044                     l2909:	
  1015                           
  1016                           ;main.c: 130:     TRISD = 0x00;
  1017  0044  0188               	clrf	8	;volatile
  1018  0045                     l2911:	
  1019                           
  1020                           ;main.c: 131:     TRISE = 0x01;
  1021  0045  3001               	movlw	1
  1022  0046  0089               	movwf	9	;volatile
  1023  0047                     l2913:	
  1024                           
  1025                           ;main.c: 132:     INTCON = 0xE0;
  1026  0047  30E0               	movlw	224
  1027  0048  008B               	movwf	11	;volatile
  1028  0049                     l2915:	
  1029                           
  1030                           ;main.c: 133:     OPTION_REG = 0x04;
  1031  0049  3004               	movlw	4
  1032  004A  0081               	movwf	1	;volatile
  1033  004B                     l2917:	
  1034                           
  1035                           ;main.c: 134:     TMR0 = 6;
  1036  004B  3006               	movlw	6
  1037  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1038  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1039  004E  0081               	movwf	1	;volatile
  1040  004F                     l2919:	
  1041                           
  1042                           ;main.c: 135:     T1CON = 0x31;
  1043  004F  3031               	movlw	49
  1044  0050  0090               	movwf	16	;volatile
  1045  0051                     l2921:	
  1046                           
  1047                           ;main.c: 137:     TMR1H = 60;
  1048  0051  303C               	movlw	60
  1049  0052  008F               	movwf	15	;volatile
  1050  0053                     l2923:	
  1051                           
  1052                           ;main.c: 138:     TMR1L = 176;
  1053  0053  30B0               	movlw	176
  1054  0054  008E               	movwf	14	;volatile
  1055                           
  1056                           ;main.c: 141:     int time;;main.c: 142:     unsigned char lux_select = 0;
  1057  0055  1683               	bsf	3,5	;RP0=1, select bank3
  1058  0056  1703               	bsf	3,6	;RP1=1, select bank3
  1059  0057  01E4               	clrf	main@lux_select^(0+384)
  1060                           
  1061                           ;main.c: 143:     disp = 0;
  1062  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1064  005A  01D5               	clrf	_disp
  1065                           
  1066                           ;main.c: 145:     unsigned char umidita = 0;
  1067  005B  1683               	bsf	3,5	;RP0=1, select bank3
  1068  005C  1703               	bsf	3,6	;RP1=1, select bank3
  1069  005D  01DE               	clrf	main@umidita^(0+384)
  1070                           
  1071                           ;main.c: 146:     unsigned char pressione = 0;
  1072  005E  01DF               	clrf	main@pressione^(0+384)
  1073  005F                     l2925:	
  1074                           
  1075                           ;main.c: 148:     init_ADC();
  1076  005F  120A  158A  24F7  120A  118A  	fcall	_init_ADC
  1077  0064                     l2927:	
  1078                           
  1079                           ;main.c: 149:     UART_Init(9600);
  1080  0064  3080               	movlw	128
  1081  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0067  00B3               	movwf	UART_Init@baudrate
  1084  0068  3025               	movlw	37
  1085  0069  00B4               	movwf	UART_Init@baudrate+1
  1086  006A  120A  118A  27C3  120A  118A  	fcall	_UART_Init
  1087  006F                     l2929:	
  1088                           
  1089                           ;main.c: 150:     SetDefaultTimers(1,1,1, Semafori);
  1090  006F  3001               	movlw	1
  1091  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0072  00A4               	movwf	SetDefaultTimers@rosso
  1094  0073  3000               	movlw	0
  1095  0074  00A5               	movwf	SetDefaultTimers@rosso+1
  1096  0075  3001               	movlw	1
  1097  0076  00A6               	movwf	SetDefaultTimers@verde
  1098  0077  3000               	movlw	0
  1099  0078  00A7               	movwf	SetDefaultTimers@verde+1
  1100  0079  3001               	movlw	1
  1101  007A  00A8               	movwf	SetDefaultTimers@giallo
  1102  007B  3000               	movlw	0
  1103  007C  00A9               	movwf	SetDefaultTimers@giallo+1
  1104  007D  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  1105  007E  00C0               	movwf	??_main
  1106  007F  0840               	movf	??_main,w
  1107  0080  00AA               	movwf	SetDefaultTimers@_semafori
  1108  0081  120A  118A  266F  120A  118A  	fcall	_SetDefaultTimers
  1109  0086                     l2931:	
  1110                           
  1111                           ;main.c: 153:     {;main.c: 155:         if (readGateway.Bit)
  1112  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0088  1C59               	btfss	_readGateway,0
  1115  0089  288B               	goto	u2821
  1116  008A  288C               	goto	u2820
  1117  008B                     u2821:	
  1118  008B  2A66               	goto	l257
  1119  008C                     u2820:	
  1120  008C  2A51               	goto	l3001
  1121  008D                     l259:	
  1122                           ;main.c: 158:             {;main.c: 159:             case 0x08:
  1123                           
  1124                           
  1125                           ;main.c: 160:                 readGatewayDone.Bit = 1;
  1126  008D  145A               	bsf	_readGatewayDone,0
  1127                           
  1128                           ;main.c: 161:                 readGateway.Bit = 0;
  1129  008E  1059               	bcf	_readGateway,0
  1130  008F                     l2935:	
  1131                           
  1132                           ;main.c: 163:                 for (int i = 0; i < 4; i++)
  1133  008F  1683               	bsf	3,5	;RP0=1, select bank3
  1134  0090  1703               	bsf	3,6	;RP1=1, select bank3
  1135  0091  01E7               	clrf	main@i^(0+384)
  1136  0092  01E8               	clrf	(main@i+1)^(0+384)
  1137  0093                     l2937:	
  1138  0093  0868               	movf	(main@i+1)^(0+384),w
  1139  0094  3A80               	xorlw	128
  1140  0095  00FF               	movwf	btemp+1
  1141  0096  3080               	movlw	128
  1142  0097  027F               	subwf	btemp+1,w
  1143  0098  1D03               	skipz
  1144  0099  289C               	goto	u2835
  1145  009A  3004               	movlw	4
  1146  009B  0267               	subwf	main@i^(0+384),w
  1147  009C                     u2835:	
  1148  009C  1C03               	skipc
  1149  009D  289F               	goto	u2831
  1150  009E  28A0               	goto	u2830
  1151  009F                     u2831:	
  1152  009F  28A1               	goto	l2941
  1153  00A0                     u2830:	
  1154  00A0  2920               	goto	l2947
  1155  00A1                     l2941:	
  1156                           
  1157                           ;main.c: 164:                 {;main.c: 165:                     sendByte((0x01 << (i + 
      +                          1))|0x01, 0x01, motorcycle[i]);
  1158  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1159  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1160  00A3  01B8               	clrf	sendByte@byte1
  1161  00A4  0AB8               	incf	sendByte@byte1,f
  1162  00A5  1683               	bsf	3,5	;RP0=1, select bank3
  1163  00A6  1703               	bsf	3,6	;RP1=1, select bank3
  1164  00A7  0867               	movf	main@i^(0+384),w
  1165  00A8  3E5F               	addlw	(low (_motorcycle| 0))& (0+255)
  1166  00A9  0084               	movwf	4
  1167  00AA  1383               	bcf	3,7	;select IRP bank0
  1168  00AB  0800               	movf	0,w
  1169  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00AE  00C0               	movwf	??_main
  1172  00AF  0840               	movf	??_main,w
  1173  00B0  00B9               	movwf	sendByte@valore
  1174  00B1  3001               	movlw	1
  1175  00B2  00C1               	movwf	??_main+1
  1176  00B3  1683               	bsf	3,5	;RP0=1, select bank3
  1177  00B4  1703               	bsf	3,6	;RP1=1, select bank3
  1178  00B5  0867               	movf	main@i^(0+384),w
  1179  00B6  3E01               	addlw	1
  1180  00B7  3E01               	addlw	1
  1181  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1183  00BA  28BD               	goto	u2844
  1184  00BB                     u2845:	
  1185  00BB  1003               	clrc
  1186  00BC  0DC1               	rlf	??_main+1,f
  1187  00BD                     u2844:	
  1188  00BD  3EFF               	addlw	-1
  1189  00BE  1D03               	skipz
  1190  00BF  28BB               	goto	u2845
  1191  00C0  0841               	movf	??_main+1,w
  1192  00C1  3801               	iorlw	1
  1193  00C2  120A  158A  25B6  120A  118A  	fcall	_sendByte
  1194                           
  1195                           ;main.c: 166:                     sendByte((0x01 << (i + 1))|0x01, 0x10, car[i]);
  1196  00C7  3010               	movlw	16
  1197  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1198  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1199  00CA  00C0               	movwf	??_main
  1200  00CB  0840               	movf	??_main,w
  1201  00CC  00B8               	movwf	sendByte@byte1
  1202  00CD  1683               	bsf	3,5	;RP0=1, select bank3
  1203  00CE  1703               	bsf	3,6	;RP1=1, select bank3
  1204  00CF  0867               	movf	main@i^(0+384),w
  1205  00D0  3E5B               	addlw	(low (_car| 0))& (0+255)
  1206  00D1  0084               	movwf	4
  1207  00D2  1383               	bcf	3,7	;select IRP bank0
  1208  00D3  0800               	movf	0,w
  1209  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1210  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1211  00D6  00C1               	movwf	??_main+1
  1212  00D7  0841               	movf	??_main+1,w
  1213  00D8  00B9               	movwf	sendByte@valore
  1214  00D9  3001               	movlw	1
  1215  00DA  00C2               	movwf	??_main+2
  1216  00DB  1683               	bsf	3,5	;RP0=1, select bank3
  1217  00DC  1703               	bsf	3,6	;RP1=1, select bank3
  1218  00DD  0867               	movf	main@i^(0+384),w
  1219  00DE  3E01               	addlw	1
  1220  00DF  3E01               	addlw	1
  1221  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1222  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1223  00E2  28E5               	goto	u2854
  1224  00E3                     u2855:	
  1225  00E3  1003               	clrc
  1226  00E4  0DC2               	rlf	??_main+2,f
  1227  00E5                     u2854:	
  1228  00E5  3EFF               	addlw	-1
  1229  00E6  1D03               	skipz
  1230  00E7  28E3               	goto	u2855
  1231  00E8  0842               	movf	??_main+2,w
  1232  00E9  3801               	iorlw	1
  1233  00EA  120A  158A  25B6  120A  118A  	fcall	_sendByte
  1234                           
  1235                           ;main.c: 167:                     sendByte((0x01 << (i + 1))|0x01, 0x11, truck[i]);
  1236  00EF  3011               	movlw	17
  1237  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1238  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1239  00F2  00C0               	movwf	??_main
  1240  00F3  0840               	movf	??_main,w
  1241  00F4  00B8               	movwf	sendByte@byte1
  1242  00F5  1683               	bsf	3,5	;RP0=1, select bank3
  1243  00F6  1703               	bsf	3,6	;RP1=1, select bank3
  1244  00F7  0867               	movf	main@i^(0+384),w
  1245  00F8  3EE9               	addlw	(low (_truck| 0))& (0+255)
  1246  00F9  0084               	movwf	4
  1247  00FA  1383               	bcf	3,7	;select IRP bank1
  1248  00FB  0800               	movf	0,w
  1249  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1250  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1251  00FE  00C1               	movwf	??_main+1
  1252  00FF  0841               	movf	??_main+1,w
  1253  0100  00B9               	movwf	sendByte@valore
  1254  0101  3001               	movlw	1
  1255  0102  00C2               	movwf	??_main+2
  1256  0103  1683               	bsf	3,5	;RP0=1, select bank3
  1257  0104  1703               	bsf	3,6	;RP1=1, select bank3
  1258  0105  0867               	movf	main@i^(0+384),w
  1259  0106  3E01               	addlw	1
  1260  0107  3E01               	addlw	1
  1261  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1263  010A  290D               	goto	u2864
  1264  010B                     u2865:	
  1265  010B  1003               	clrc
  1266  010C  0DC2               	rlf	??_main+2,f
  1267  010D                     u2864:	
  1268  010D  3EFF               	addlw	-1
  1269  010E  1D03               	skipz
  1270  010F  290B               	goto	u2865
  1271  0110  0842               	movf	??_main+2,w
  1272  0111  3801               	iorlw	1
  1273  0112  120A  158A  25B6  120A  118A  	fcall	_sendByte
  1274  0117                     l2943:	
  1275                           
  1276                           ;main.c: 168:                 }
  1277  0117  3001               	movlw	1
  1278  0118  1683               	bsf	3,5	;RP0=1, select bank3
  1279  0119  1703               	bsf	3,6	;RP1=1, select bank3
  1280  011A  07E7               	addwf	main@i^(0+384),f
  1281  011B  1803               	skipnc
  1282  011C  0AE8               	incf	(main@i+1)^(0+384),f
  1283  011D  3000               	movlw	0
  1284  011E  07E8               	addwf	(main@i+1)^(0+384),f
  1285  011F  2893               	goto	l2937
  1286  0120                     l2947:	
  1287                           
  1288                           ;main.c: 170:                 for (int i = 0; i < 4; i++)
  1289  0120  1683               	bsf	3,5	;RP0=1, select bank3
  1290  0121  1703               	bsf	3,6	;RP1=1, select bank3
  1291  0122  01E5               	clrf	main@i_457^(0+384)
  1292  0123  01E6               	clrf	(main@i_457+1)^(0+384)
  1293  0124                     l2953:	
  1294                           
  1295                           ;main.c: 171:                 {;main.c: 172:                     motorcycle[i] = 0;
  1296  0124  1683               	bsf	3,5	;RP0=1, select bank3
  1297  0125  1703               	bsf	3,6	;RP1=1, select bank3
  1298  0126  0865               	movf	main@i_457^(0+384),w
  1299  0127  3E5F               	addlw	(low (_motorcycle| 0))& (0+255)
  1300  0128  0084               	movwf	4
  1301  0129  1383               	bcf	3,7	;select IRP bank0
  1302  012A  0180               	clrf	0
  1303                           
  1304                           ;main.c: 173:                     car[i] = 0;
  1305  012B  0865               	movf	main@i_457^(0+384),w
  1306  012C  3E5B               	addlw	(low (_car| 0))& (0+255)
  1307  012D  0084               	movwf	4
  1308  012E  0180               	clrf	0
  1309                           
  1310                           ;main.c: 174:                     truck[i] = 0;
  1311  012F  0865               	movf	main@i_457^(0+384),w
  1312  0130  3EE9               	addlw	(low (_truck| 0))& (0+255)
  1313  0131  0084               	movwf	4
  1314  0132  0180               	clrf	0
  1315  0133                     l2955:	
  1316                           
  1317                           ;main.c: 175:                 }
  1318  0133  3001               	movlw	1
  1319  0134  07E5               	addwf	main@i_457^(0+384),f
  1320  0135  1803               	skipnc
  1321  0136  0AE6               	incf	(main@i_457+1)^(0+384),f
  1322  0137  3000               	movlw	0
  1323  0138  07E6               	addwf	(main@i_457+1)^(0+384),f
  1324  0139                     l2957:	
  1325  0139  0866               	movf	(main@i_457+1)^(0+384),w
  1326  013A  3A80               	xorlw	128
  1327  013B  00FF               	movwf	btemp+1
  1328  013C  3080               	movlw	128
  1329  013D  027F               	subwf	btemp+1,w
  1330  013E  1D03               	skipz
  1331  013F  2942               	goto	u2875
  1332  0140  3004               	movlw	4
  1333  0141  0265               	subwf	main@i_457^(0+384),w
  1334  0142                     u2875:	
  1335  0142  1C03               	skipc
  1336  0143  2945               	goto	u2871
  1337  0144  2946               	goto	u2870
  1338  0145                     u2871:	
  1339  0145  2924               	goto	l2953
  1340  0146                     u2870:	
  1341  0146                     l2959:	
  1342                           
  1343                           ;main.c: 177:                 for (unsigned char i = 0; i < 5; i++)
  1344  0146  1683               	bsf	3,5	;RP0=1, select bank3
  1345  0147  1703               	bsf	3,6	;RP1=1, select bank3
  1346  0148  01E2               	clrf	main@i_458^(0+384)
  1347  0149                     l2965:	
  1348                           
  1349                           ;main.c: 178:                 {;main.c: 179:                     dataFromGateway[i] = 0;
  1350  0149  0862               	movf	main@i_458^(0+384),w
  1351  014A  3E90               	addlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1352  014B  0084               	movwf	4
  1353  014C  1783               	bsf	3,7	;select IRP bank3
  1354  014D  0180               	clrf	0
  1355  014E                     l2967:	
  1356                           
  1357                           ;main.c: 180:                 }
  1358  014E  3001               	movlw	1
  1359  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0151  00C0               	movwf	??_main
  1362  0152  0840               	movf	??_main,w
  1363  0153  1683               	bsf	3,5	;RP0=1, select bank3
  1364  0154  1703               	bsf	3,6	;RP1=1, select bank3
  1365  0155  07E2               	addwf	main@i_458^(0+384),f
  1366  0156                     l2969:	
  1367  0156  3005               	movlw	5
  1368  0157  0262               	subwf	main@i_458^(0+384),w
  1369  0158  1C03               	skipc
  1370  0159  295B               	goto	u2881
  1371  015A  295C               	goto	u2880
  1372  015B                     u2881:	
  1373  015B  2949               	goto	l2965
  1374  015C                     u2880:	
  1375  015C  2A66               	goto	l257
  1376  015D                     l267:	
  1377                           ;main.c: 182:             case 0x0A:
  1378                           
  1379                           
  1380                           ;main.c: 183:                 readGatewayDone.Bit = 1;
  1381  015D  145A               	bsf	_readGatewayDone,0
  1382                           
  1383                           ;main.c: 184:                 readGateway.Bit = 0;
  1384  015E  1059               	bcf	_readGateway,0
  1385  015F                     l2971:	
  1386                           
  1387                           ;main.c: 186:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1388  015F  3000               	movlw	0
  1389  0160  120A  158A  2569  120A  118A  	fcall	_ADC_Read
  1390  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0167  0824               	movf	?_ADC_Read,w
  1393  0168  00C0               	movwf	??_main
  1394  0169  0825               	movf	?_ADC_Read+1,w
  1395  016A  00C1               	movwf	??_main+1
  1396  016B  0D41               	rlf	??_main+1,w
  1397  016C  0CC1               	rrf	??_main+1,f
  1398  016D  0CC0               	rrf	??_main,f
  1399  016E  0D41               	rlf	??_main+1,w
  1400  016F  0CC1               	rrf	??_main+1,f
  1401  0170  0CC0               	rrf	??_main,f
  1402  0171  0840               	movf	??_main,w
  1403  0172  00B4               	movwf	map@x
  1404  0173  0841               	movf	??_main+1,w
  1405  0174  00B5               	movwf	map@x+1
  1406  0175  3000               	movlw	0
  1407  0176  00B6               	movwf	map@in_min
  1408  0177  00B7               	movwf	map@in_min+1
  1409  0178  30FF               	movlw	255
  1410  0179  00B8               	movwf	map@in_max
  1411  017A  3000               	movlw	0
  1412  017B  00B9               	movwf	map@in_max+1
  1413  017C  30EC               	movlw	236
  1414  017D  00BA               	movwf	map@out_min
  1415  017E  30FF               	movlw	255
  1416  017F  00BB               	movwf	map@out_min+1
  1417  0180  303C               	movlw	60
  1418  0181  00BC               	movwf	map@out_max
  1419  0182  3000               	movlw	0
  1420  0183  00BD               	movwf	map@out_max+1
  1421  0184  120A  158A  25E7  120A  118A  	fcall	_map
  1422  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1423  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1424  018B  0834               	movf	?_map,w
  1425  018C  00C2               	movwf	??_main+2
  1426  018D  0842               	movf	??_main+2,w
  1427  018E  1683               	bsf	3,5	;RP0=1, select bank3
  1428  018F  1703               	bsf	3,6	;RP1=1, select bank3
  1429  0190  00DD               	movwf	main@temp^(0+384)
  1430                           
  1431                           ;main.c: 187:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1432  0191  3001               	movlw	1
  1433  0192  120A  158A  2569  120A  118A  	fcall	_ADC_Read
  1434  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0199  0824               	movf	?_ADC_Read,w
  1437  019A  00C0               	movwf	??_main
  1438  019B  0825               	movf	?_ADC_Read+1,w
  1439  019C  00C1               	movwf	??_main+1
  1440  019D  0D41               	rlf	??_main+1,w
  1441  019E  0CC1               	rrf	??_main+1,f
  1442  019F  0CC0               	rrf	??_main,f
  1443  01A0  0D41               	rlf	??_main+1,w
  1444  01A1  0CC1               	rrf	??_main+1,f
  1445  01A2  0CC0               	rrf	??_main,f
  1446  01A3  0840               	movf	??_main,w
  1447  01A4  00B4               	movwf	map@x
  1448  01A5  0841               	movf	??_main+1,w
  1449  01A6  00B5               	movwf	map@x+1
  1450  01A7  3000               	movlw	0
  1451  01A8  00B6               	movwf	map@in_min
  1452  01A9  00B7               	movwf	map@in_min+1
  1453  01AA  30FF               	movlw	255
  1454  01AB  00B8               	movwf	map@in_max
  1455  01AC  3000               	movlw	0
  1456  01AD  00B9               	movwf	map@in_max+1
  1457  01AE  3000               	movlw	0
  1458  01AF  00BA               	movwf	map@out_min
  1459  01B0  00BB               	movwf	map@out_min+1
  1460  01B1  3064               	movlw	100
  1461  01B2  00BC               	movwf	map@out_max
  1462  01B3  3000               	movlw	0
  1463  01B4  00BD               	movwf	map@out_max+1
  1464  01B5  120A  158A  25E7  120A  118A  	fcall	_map
  1465  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1466  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1467  01BC  0834               	movf	?_map,w
  1468  01BD  00C2               	movwf	??_main+2
  1469  01BE  0842               	movf	??_main+2,w
  1470  01BF  1683               	bsf	3,5	;RP0=1, select bank3
  1471  01C0  1703               	bsf	3,6	;RP1=1, select bank3
  1472  01C1  00DE               	movwf	main@umidita^(0+384)
  1473                           
  1474                           ;main.c: 188:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1475  01C2  3005               	movlw	5
  1476  01C3  120A  158A  2569  120A  118A  	fcall	_ADC_Read
  1477  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1478  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1479  01CA  0824               	movf	?_ADC_Read,w
  1480  01CB  00C0               	movwf	??_main
  1481  01CC  0825               	movf	?_ADC_Read+1,w
  1482  01CD  00C1               	movwf	??_main+1
  1483  01CE  0D41               	rlf	??_main+1,w
  1484  01CF  0CC1               	rrf	??_main+1,f
  1485  01D0  0CC0               	rrf	??_main,f
  1486  01D1  0D41               	rlf	??_main+1,w
  1487  01D2  0CC1               	rrf	??_main+1,f
  1488  01D3  0CC0               	rrf	??_main,f
  1489  01D4  0840               	movf	??_main,w
  1490  01D5  00B4               	movwf	map@x
  1491  01D6  0841               	movf	??_main+1,w
  1492  01D7  00B5               	movwf	map@x+1
  1493  01D8  3000               	movlw	0
  1494  01D9  00B6               	movwf	map@in_min
  1495  01DA  00B7               	movwf	map@in_min+1
  1496  01DB  30FF               	movlw	255
  1497  01DC  00B8               	movwf	map@in_max
  1498  01DD  3000               	movlw	0
  1499  01DE  00B9               	movwf	map@in_max+1
  1500  01DF  3000               	movlw	0
  1501  01E0  00BA               	movwf	map@out_min
  1502  01E1  00BB               	movwf	map@out_min+1
  1503  01E2  3064               	movlw	100
  1504  01E3  00BC               	movwf	map@out_max
  1505  01E4  3000               	movlw	0
  1506  01E5  00BD               	movwf	map@out_max+1
  1507  01E6  120A  158A  25E7  120A  118A  	fcall	_map
  1508  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1509  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1510  01ED  0834               	movf	?_map,w
  1511  01EE  00C2               	movwf	??_main+2
  1512  01EF  0842               	movf	??_main+2,w
  1513  01F0  1683               	bsf	3,5	;RP0=1, select bank3
  1514  01F1  1703               	bsf	3,6	;RP1=1, select bank3
  1515  01F2  00DF               	movwf	main@pressione^(0+384)
  1516  01F3                     l2973:	
  1517                           
  1518                           ;main.c: 189:                 sendByte(0x02, 0x00, temp);
  1519  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1520  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1521  01F5  01B8               	clrf	sendByte@byte1
  1522  01F6  1683               	bsf	3,5	;RP0=1, select bank3
  1523  01F7  1703               	bsf	3,6	;RP1=1, select bank3
  1524  01F8  085D               	movf	main@temp^(0+384),w
  1525  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1526  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1527  01FB  00C0               	movwf	??_main
  1528  01FC  0840               	movf	??_main,w
  1529  01FD  00B9               	movwf	sendByte@valore
  1530  01FE  3002               	movlw	2
  1531  01FF  120A  158A  25B6  120A  118A  	fcall	_sendByte
  1532  0204                     l2975:	
  1533                           
  1534                           ;main.c: 190:                 sendByte(0x04, 0x00, umidita);
  1535  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0206  01B8               	clrf	sendByte@byte1
  1538  0207  1683               	bsf	3,5	;RP0=1, select bank3
  1539  0208  1703               	bsf	3,6	;RP1=1, select bank3
  1540  0209  085E               	movf	main@umidita^(0+384),w
  1541  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1542  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1543  020C  00C0               	movwf	??_main
  1544  020D  0840               	movf	??_main,w
  1545  020E  00B9               	movwf	sendByte@valore
  1546  020F  3004               	movlw	4
  1547  0210  120A  158A  25B6  120A  118A  	fcall	_sendByte
  1548  0215                     l2977:	
  1549                           
  1550                           ;main.c: 191:                 sendByte(0x06, 0x00, pressione);
  1551  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0217  01B8               	clrf	sendByte@byte1
  1554  0218  1683               	bsf	3,5	;RP0=1, select bank3
  1555  0219  1703               	bsf	3,6	;RP1=1, select bank3
  1556  021A  085F               	movf	main@pressione^(0+384),w
  1557  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1558  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1559  021D  00C0               	movwf	??_main
  1560  021E  0840               	movf	??_main,w
  1561  021F  00B9               	movwf	sendByte@valore
  1562  0220  3006               	movlw	6
  1563  0221  120A  158A  25B6  120A  118A  	fcall	_sendByte
  1564  0226                     l2979:	
  1565                           
  1566                           ;main.c: 193:                 for (unsigned char i = 0; i < 5; i++)
  1567  0226  1683               	bsf	3,5	;RP0=1, select bank3
  1568  0227  1703               	bsf	3,6	;RP1=1, select bank3
  1569  0228  01E3               	clrf	main@i_460^(0+384)
  1570  0229                     l2981:	
  1571  0229  3005               	movlw	5
  1572  022A  0263               	subwf	main@i_460^(0+384),w
  1573  022B  1C03               	skipc
  1574  022C  2A2E               	goto	u2891
  1575  022D  2A2F               	goto	u2890
  1576  022E                     u2891:	
  1577  022E  2A30               	goto	l2985
  1578  022F                     u2890:	
  1579  022F  2A66               	goto	l257
  1580  0230                     l2985:	
  1581                           
  1582                           ;main.c: 194:                 {;main.c: 195:                     dataFromGateway[i] = 0;
  1583  0230  0863               	movf	main@i_460^(0+384),w
  1584  0231  3E90               	addlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1585  0232  0084               	movwf	4
  1586  0233  1783               	bsf	3,7	;select IRP bank3
  1587  0234  0180               	clrf	0
  1588  0235                     l2987:	
  1589                           
  1590                           ;main.c: 196:                 }
  1591  0235  3001               	movlw	1
  1592  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0238  00C0               	movwf	??_main
  1595  0239  0840               	movf	??_main,w
  1596  023A  1683               	bsf	3,5	;RP0=1, select bank3
  1597  023B  1703               	bsf	3,6	;RP1=1, select bank3
  1598  023C  07E3               	addwf	main@i_460^(0+384),f
  1599  023D  2A29               	goto	l2981
  1600  023E                     l2991:	
  1601                           
  1602                           ;main.c: 200:                 if (timerReadFromGateway >= 4)
  1603  023E  3004               	movlw	4
  1604  023F  0250               	subwf	_timerReadFromGateway,w
  1605  0240  1C03               	skipc
  1606  0241  2A43               	goto	u2901
  1607  0242  2A44               	goto	u2900
  1608  0243                     u2901:	
  1609  0243  2A47               	goto	l2995
  1610  0244                     u2900:	
  1611  0244                     l2993:	
  1612                           
  1613                           ;main.c: 201:                 {;main.c: 202:                     readGatewayDone.Bit = 1
      +                          ;
  1614  0244  145A               	bsf	_readGatewayDone,0
  1615                           
  1616                           ;main.c: 203:                     readGatewayDone.Timeout = 1;
  1617  0245  14DA               	bsf	_readGatewayDone,1
  1618                           
  1619                           ;main.c: 204:                     readGateway.Bit = 0;
  1620  0246  1059               	bcf	_readGateway,0
  1621  0247                     l2995:	
  1622                           
  1623                           ;main.c: 207:                 if (dataFromGatewayIndex >= 15)
  1624  0247  300F               	movlw	15
  1625  0248  0251               	subwf	_dataFromGatewayIndex,w
  1626  0249  1C03               	skipc
  1627  024A  2A4C               	goto	u2911
  1628  024B  2A4D               	goto	u2910
  1629  024C                     u2911:	
  1630  024C  2A66               	goto	l257
  1631  024D                     u2910:	
  1632  024D                     l2997:	
  1633                           
  1634                           ;main.c: 208:                 {;main.c: 209:                     readGatewayDone.Bit = 1
      +                          ;
  1635  024D  145A               	bsf	_readGatewayDone,0
  1636                           
  1637                           ;main.c: 210:                     readGatewayDone.Timeout = 0;
  1638  024E  10DA               	bcf	_readGatewayDone,1
  1639                           
  1640                           ;main.c: 211:                     readGateway.Bit = 0;
  1641  024F  1059               	bcf	_readGateway,0
  1642  0250  2A66               	goto	l257
  1643  0251                     l3001:	
  1644  0251  1683               	bsf	3,5	;RP0=1, select bank3
  1645  0252  1703               	bsf	3,6	;RP1=1, select bank3
  1646  0253  0810               	movf	_dataFromGateway^(0+384),w
  1647  0254  397F               	andlw	127
  1648  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0257  00C0               	movwf	??_main
  1651  0258  01C1               	clrf	??_main+1
  1652                           
  1653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1654                           ; Switch size 1, requested type "simple"
  1655                           ; Number of cases is 1, Range of values is 0 to 0
  1656                           ; switch strategies available:
  1657                           ; Name         Instructions Cycles
  1658                           ; simple_byte            4     3 (average)
  1659                           ; direct_byte           11     8 (fixed)
  1660                           ; jumptable            260     6 (fixed)
  1661                           ;	Chosen strategy is simple_byte
  1662  0259  0841               	movf	??_main+1,w
  1663  025A  3A00               	xorlw	0	; case 0
  1664  025B  1903               	skipnz
  1665  025C  2A5E               	goto	l3169
  1666  025D  2A3E               	goto	l2991
  1667  025E                     l3169:	
  1668                           
  1669                           ; Switch size 1, requested type "simple"
  1670                           ; Number of cases is 2, Range of values is 8 to 10
  1671                           ; switch strategies available:
  1672                           ; Name         Instructions Cycles
  1673                           ; simple_byte            7     4 (average)
  1674                           ; direct_byte           20    11 (fixed)
  1675                           ; jumptable            263     9 (fixed)
  1676                           ;	Chosen strategy is simple_byte
  1677  025E  0840               	movf	??_main,w
  1678  025F  3A08               	xorlw	8	; case 8
  1679  0260  1903               	skipnz
  1680  0261  288D               	goto	l259
  1681  0262  3A02               	xorlw	2	; case 10
  1682  0263  1903               	skipnz
  1683  0264  295D               	goto	l267
  1684  0265  2A3E               	goto	l2991
  1685  0266                     l257:	
  1686                           ;main.c: 215:         }
  1687                           
  1688                           
  1689                           ;main.c: 218:         if (readGatewayDone.Bit)
  1690  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0268  1C5A               	btfss	_readGatewayDone,0
  1693  0269  2A6B               	goto	u2921
  1694  026A  2A6C               	goto	u2920
  1695  026B                     u2921:	
  1696  026B  2A88               	goto	l3015
  1697  026C                     u2920:	
  1698  026C                     l3003:	
  1699                           
  1700                           ;main.c: 219:         {;main.c: 221:             readGateway.Bit = 0;
  1701  026C  1059               	bcf	_readGateway,0
  1702  026D                     l3005:	
  1703                           
  1704                           ;main.c: 222:             dataFromGatewayIndex = 0;
  1705  026D  01D1               	clrf	_dataFromGatewayIndex
  1706  026E                     l3007:	
  1707                           
  1708                           ;main.c: 223:             readGatewayDone.Bit = 0;
  1709  026E  105A               	bcf	_readGatewayDone,0
  1710                           
  1711                           ;main.c: 224:             timerReadFromGateway = 0;
  1712  026F  01D0               	clrf	_timerReadFromGateway
  1713  0270                     l3009:	
  1714                           
  1715                           ;main.c: 227:             if (readGatewayDone.Timeout)
  1716  0270  1CDA               	btfss	_readGatewayDone,1
  1717  0271  2A73               	goto	u2931
  1718  0272  2A74               	goto	u2930
  1719  0273                     u2931:	
  1720  0273  2A76               	goto	l3013
  1721  0274                     u2930:	
  1722  0274                     l3011:	
  1723                           
  1724                           ;main.c: 228:             {;main.c: 229:                 readGatewayDone.Timeout = 0;
  1725  0274  10DA               	bcf	_readGatewayDone,1
  1726                           
  1727                           ;main.c: 230:             }
  1728  0275  2A88               	goto	l3015
  1729  0276                     l3013:	
  1730                           
  1731                           ;main.c: 233:             {;main.c: 235:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori, &to_update, id_semaforo);
  1732  0276  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  1733  0277  00C0               	movwf	??_main
  1734  0278  0840               	movf	??_main,w
  1735  0279  00AC               	movwf	SetReceivedTimes@_semafori
  1736  027A  30A0               	movlw	(low (_to_update| 0))& (0+255)
  1737  027B  00C1               	movwf	??_main+1
  1738  027C  0841               	movf	??_main+1,w
  1739  027D  00AD               	movwf	SetReceivedTimes@_to_update
  1740  027E  0863               	movf	_id_semaforo,w
  1741  027F  00C2               	movwf	??_main+2
  1742  0280  0842               	movf	??_main+2,w
  1743  0281  00AE               	movwf	SetReceivedTimes@_id_semaforo
  1744  0282  3090               	movlw	(low (_dataFromGateway| (0+256)))& (0+255)
  1745  0283  120A  118A  25DA  120A  118A  	fcall	_SetReceivedTimes
  1746  0288                     l3015:	
  1747                           
  1748                           ;main.c: 242:         if (secondPassed.Bit && cycled.Bit)
  1749  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1750  0289  1303               	bcf	3,6	;RP1=0, select bank0
  1751  028A  1C58               	btfss	_secondPassed,0
  1752  028B  2A8D               	goto	u2941
  1753  028C  2A8E               	goto	u2940
  1754  028D                     u2941:	
  1755  028D  2B3D               	goto	l3037
  1756  028E                     u2940:	
  1757  028E                     l3017:	
  1758  028E  1C57               	btfss	_cycled,0
  1759  028F  2A91               	goto	u2951
  1760  0290  2A92               	goto	u2950
  1761  0291                     u2951:	
  1762  0291  2B3D               	goto	l3037
  1763  0292                     u2950:	
  1764  0292                     l3019:	
  1765                           
  1766                           ;main.c: 243:         {;main.c: 244:             time++;
  1767  0292  3001               	movlw	1
  1768  0293  1683               	bsf	3,5	;RP0=1, select bank3
  1769  0294  1703               	bsf	3,6	;RP1=1, select bank3
  1770  0295  07E0               	addwf	main@time^(0+384),f
  1771  0296  1803               	skipnc
  1772  0297  0AE1               	incf	(main@time+1)^(0+384),f
  1773  0298  3000               	movlw	0
  1774  0299  07E1               	addwf	(main@time+1)^(0+384),f
  1775  029A                     l3021:	
  1776                           
  1777                           ;main.c: 245:             if ((*Semafori[id_semaforo]).times[lux_select] - time < 0)
  1778  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1779  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1780  029C  0863               	movf	_id_semaforo,w
  1781  029D  00C0               	movwf	??_main
  1782  029E  0740               	addwf	??_main,w
  1783  029F  3EBD               	addlw	(low (_Semafori| (0+256)))& (0+255)
  1784  02A0  0084               	movwf	4
  1785  02A1  1783               	bsf	3,7	;select IRP bank3
  1786  02A2  0800               	movf	0,w
  1787  02A3  00C1               	movwf	??_main+1
  1788  02A4  0A84               	incf	4,f
  1789  02A5  0800               	movf	0,w
  1790  02A6  00C2               	movwf	??_main+2
  1791  02A7  1683               	bsf	3,5	;RP0=1, select bank3
  1792  02A8  1703               	bsf	3,6	;RP1=1, select bank3
  1793  02A9  0864               	movf	main@lux_select^(0+384),w
  1794  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1795  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1796  02AC  00C3               	movwf	??_main+3
  1797  02AD  0743               	addwf	??_main+3,w
  1798  02AE  0741               	addwf	??_main+1,w
  1799  02AF  00C4               	movwf	??_main+4
  1800  02B0  0842               	movf	??_main+2,w
  1801  02B1  1803               	skipnc
  1802  02B2  3E01               	addlw	1
  1803  02B3  00C5               	movwf	??_main+5
  1804  02B4  0844               	movf	??_main+4,w
  1805  02B5  0084               	movwf	4
  1806  02B6  1783               	bsf	3,7
  1807  02B7  1C45               	btfss	??_main+5,0
  1808  02B8  1383               	bcf	3,7
  1809  02B9  0800               	movf	0,w
  1810  02BA  00C6               	movwf	??_main+6
  1811  02BB  0A84               	incf	4,f
  1812  02BC  0800               	movf	0,w
  1813  02BD  00C7               	movwf	??_main+7
  1814  02BE  1683               	bsf	3,5	;RP0=1, select bank3
  1815  02BF  1703               	bsf	3,6	;RP1=1, select bank3
  1816  02C0  0860               	movf	main@time^(0+384),w
  1817  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1818  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1819  02C3  0246               	subwf	??_main+6,w
  1820  02C4  00C8               	movwf	??_main+8
  1821  02C5  1683               	bsf	3,5	;RP0=1, select bank3
  1822  02C6  1703               	bsf	3,6	;RP1=1, select bank3
  1823  02C7  0861               	movf	(main@time+1)^(0+384),w
  1824  02C8  1C03               	skipc
  1825  02C9  0A61               	incf	(main@time+1)^(0+384),w
  1826  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1827  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1828  02CC  0247               	subwf	??_main+7,w
  1829  02CD  00C9               	movwf	??_main+9
  1830  02CE  1FC9               	btfss	??_main+9,7
  1831  02CF  2AD1               	goto	u2961
  1832  02D0  2AD2               	goto	u2960
  1833  02D1                     u2961:	
  1834  02D1  2AFB               	goto	l3035
  1835  02D2                     u2960:	
  1836  02D2                     l3023:	
  1837                           
  1838                           ;main.c: 246:             {;main.c: 247:                 lux_select++;
  1839  02D2  3001               	movlw	1
  1840  02D3  00C0               	movwf	??_main
  1841  02D4  0840               	movf	??_main,w
  1842  02D5  1683               	bsf	3,5	;RP0=1, select bank3
  1843  02D6  1703               	bsf	3,6	;RP1=1, select bank3
  1844  02D7  07E4               	addwf	main@lux_select^(0+384),f
  1845  02D8                     l3025:	
  1846                           
  1847                           ;main.c: 248:                 time=1;
  1848  02D8  3001               	movlw	1
  1849  02D9  00E0               	movwf	main@time^(0+384)
  1850  02DA  3000               	movlw	0
  1851  02DB  00E1               	movwf	(main@time^(0+384)+1)
  1852  02DC                     l3027:	
  1853                           
  1854                           ;main.c: 250:                 if (lux_select >= 3)
  1855  02DC  3003               	movlw	3
  1856  02DD  0264               	subwf	main@lux_select^(0+384),w
  1857  02DE  1C03               	skipc
  1858  02DF  2AE1               	goto	u2971
  1859  02E0  2AE2               	goto	u2970
  1860  02E1                     u2971:	
  1861  02E1  2AFB               	goto	l3035
  1862  02E2                     u2970:	
  1863  02E2                     l3029:	
  1864                           
  1865                           ;main.c: 251:                 {;main.c: 252:                     lux_select=0;
  1866  02E2  01E4               	clrf	main@lux_select^(0+384)
  1867  02E3                     l3031:	
  1868                           
  1869                           ;main.c: 255:                     UpdateTimes(Semafori, &to_update);
  1870  02E3  30A0               	movlw	(low (_to_update| 0))& (0+255)
  1871  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1872  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1873  02E6  00C0               	movwf	??_main
  1874  02E7  0840               	movf	??_main,w
  1875  02E8  00A4               	movwf	UpdateTimes@_to_update
  1876  02E9  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  1877  02EA  120A  158A  26AE  120A  118A  	fcall	_UpdateTimes
  1878  02EF                     l3033:	
  1879                           
  1880                           ;main.c: 256:                     ChangeTrafficLight(Semafori, &id_semaforo);
  1881  02EF  3063               	movlw	(low (_id_semaforo| 0))& (0+255)
  1882  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  1883  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  1884  02F2  00C0               	movwf	??_main
  1885  02F3  0840               	movf	??_main,w
  1886  02F4  00AB               	movwf	ChangeTrafficLight@_n_semafori
  1887  02F5  30BD               	movlw	(low (_Semafori| (0+256)))& (0+255)
  1888  02F6  120A  158A  26FF  120A  118A  	fcall	_ChangeTrafficLight
  1889  02FB                     l3035:	
  1890                           
  1891                           ;main.c: 260:             GetDigits(&centinaia, &decine, &unita, (*Semafori[id_semaforo]
      +                          ).times[lux_select] - time);
  1892  02FB  3065               	movlw	(low (_decine| 0))& (0+255)
  1893  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1894  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1895  02FE  00C0               	movwf	??_main
  1896  02FF  0840               	movf	??_main,w
  1897  0300  00B4               	movwf	GetDigits@decine
  1898  0301  3066               	movlw	(low (_unita| 0))& (0+255)
  1899  0302  00C1               	movwf	??_main+1
  1900  0303  0841               	movf	??_main+1,w
  1901  0304  00B5               	movwf	GetDigits@unita
  1902  0305  0863               	movf	_id_semaforo,w
  1903  0306  00C2               	movwf	??_main+2
  1904  0307  0742               	addwf	??_main+2,w
  1905  0308  3EBD               	addlw	(low (_Semafori| (0+256)))& (0+255)
  1906  0309  0084               	movwf	4
  1907  030A  1783               	bsf	3,7	;select IRP bank3
  1908  030B  0800               	movf	0,w
  1909  030C  00C3               	movwf	??_main+3
  1910  030D  0A84               	incf	4,f
  1911  030E  0800               	movf	0,w
  1912  030F  00C4               	movwf	??_main+4
  1913  0310  1683               	bsf	3,5	;RP0=1, select bank3
  1914  0311  1703               	bsf	3,6	;RP1=1, select bank3
  1915  0312  0864               	movf	main@lux_select^(0+384),w
  1916  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0315  00C5               	movwf	??_main+5
  1919  0316  0745               	addwf	??_main+5,w
  1920  0317  0743               	addwf	??_main+3,w
  1921  0318  00C6               	movwf	??_main+6
  1922  0319  0844               	movf	??_main+4,w
  1923  031A  1803               	skipnc
  1924  031B  3E01               	addlw	1
  1925  031C  00C7               	movwf	??_main+7
  1926  031D  0846               	movf	??_main+6,w
  1927  031E  0084               	movwf	4
  1928  031F  1783               	bsf	3,7
  1929  0320  1C47               	btfss	??_main+7,0
  1930  0321  1383               	bcf	3,7
  1931  0322  0800               	movf	0,w
  1932  0323  00C8               	movwf	??_main+8
  1933  0324  0A84               	incf	4,f
  1934  0325  0800               	movf	0,w
  1935  0326  00C9               	movwf	??_main+9
  1936  0327  1683               	bsf	3,5	;RP0=1, select bank3
  1937  0328  1703               	bsf	3,6	;RP1=1, select bank3
  1938  0329  0860               	movf	main@time^(0+384),w
  1939  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1940  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1941  032C  0248               	subwf	??_main+8,w
  1942  032D  00B6               	movwf	GetDigits@Time
  1943  032E  1683               	bsf	3,5	;RP0=1, select bank3
  1944  032F  1703               	bsf	3,6	;RP1=1, select bank3
  1945  0330  0861               	movf	(main@time+1)^(0+384),w
  1946  0331  1C03               	skipc
  1947  0332  0A61               	incf	(main@time+1)^(0+384),w
  1948  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0335  0249               	subwf	??_main+9,w
  1951  0336  00B7               	movwf	GetDigits@Time+1
  1952  0337  3064               	movlw	(low (_centinaia| 0))& (0+255)
  1953  0338  120A  118A  253E  120A  118A  	fcall	_GetDigits
  1954  033D                     l3037:	
  1955                           
  1956                           ;main.c: 264:         if (disp != old_disp)
  1957  033D  1283               	bcf	3,5	;RP0=0, select bank0
  1958  033E  1303               	bcf	3,6	;RP1=0, select bank0
  1959  033F  0855               	movf	_disp,w
  1960  0340  0656               	xorwf	_old_disp,w
  1961  0341  1903               	skipnz
  1962  0342  2B44               	goto	u2981
  1963  0343  2B45               	goto	u2980
  1964  0344                     u2981:	
  1965  0344  2BAA               	goto	l3057
  1966  0345                     u2980:	
  1967  0345                     l3039:	
  1968                           
  1969                           ;main.c: 265:         {;main.c: 266:             old_disp = disp;
  1970  0345  0855               	movf	_disp,w
  1971  0346  00C0               	movwf	??_main
  1972  0347  0840               	movf	??_main,w
  1973  0348  00D6               	movwf	_old_disp
  1974                           
  1975                           ;main.c: 267:             switch (disp)
  1976  0349  2B97               	goto	l3055
  1977  034A                     l3041:	
  1978                           
  1979                           ;main.c: 270:                 if (centinaia > 0)
  1980  034A  0864               	movf	_centinaia,w
  1981  034B  1903               	btfsc	3,2
  1982  034C  2B4E               	goto	u2991
  1983  034D  2B4F               	goto	u2990
  1984  034E                     u2991:	
  1985  034E  2BAA               	goto	l3057
  1986  034F                     u2990:	
  1987  034F                     l3043:	
  1988                           
  1989                           ;main.c: 271:                 {;main.c: 272:                     SetDisplay(1, 0, 0, dis
      +                          play[centinaia]);
  1990  034F  01A4               	clrf	SetDisplay@d2
  1991  0350  01A5               	clrf	SetDisplay@d3
  1992  0351  0864               	movf	_centinaia,w
  1993  0352  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  1994  0353  0084               	movwf	4
  1995  0354  120A  158A  2000  120A  118A  	fcall	stringdir
  1996  0359  00C0               	movwf	??_main
  1997  035A  0840               	movf	??_main,w
  1998  035B  00A6               	movwf	SetDisplay@value
  1999  035C  3001               	movlw	1
  2000  035D  120A  158A  251D  120A  118A  	fcall	_SetDisplay
  2001  0362  2BAA               	goto	l3057
  2002  0363                     l3045:	
  2003                           
  2004                           ;main.c: 276:                 if (decine > 0 || centinaia > 0)
  2005  0363  0865               	movf	_decine,w
  2006  0364  1D03               	btfss	3,2
  2007  0365  2B67               	goto	u3001
  2008  0366  2B68               	goto	u3000
  2009  0367                     u3001:	
  2010  0367  2B6D               	goto	l3049
  2011  0368                     u3000:	
  2012  0368                     l3047:	
  2013  0368  0864               	movf	_centinaia,w
  2014  0369  1903               	btfsc	3,2
  2015  036A  2B6C               	goto	u3011
  2016  036B  2B6D               	goto	u3010
  2017  036C                     u3011:	
  2018  036C  2BAA               	goto	l3057
  2019  036D                     u3010:	
  2020  036D                     l3049:	
  2021                           
  2022                           ;main.c: 277:                 {;main.c: 278:                     SetDisplay(0, 1, 0, dis
      +                          play[decine]);
  2023  036D  01A4               	clrf	SetDisplay@d2
  2024  036E  0AA4               	incf	SetDisplay@d2,f
  2025  036F  01A5               	clrf	SetDisplay@d3
  2026  0370  0865               	movf	_decine,w
  2027  0371  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2028  0372  0084               	movwf	4
  2029  0373  120A  158A  2000  120A  118A  	fcall	stringdir
  2030  0378  00C0               	movwf	??_main
  2031  0379  0840               	movf	??_main,w
  2032  037A  00A6               	movwf	SetDisplay@value
  2033  037B  3000               	movlw	0
  2034  037C  120A  158A  251D  120A  118A  	fcall	_SetDisplay
  2035  0381  2BAA               	goto	l3057
  2036  0382                     l3051:	
  2037                           
  2038                           ;main.c: 282:                 SetDisplay(0, 0, 1, display[unita]);
  2039  0382  01A4               	clrf	SetDisplay@d2
  2040  0383  01A5               	clrf	SetDisplay@d3
  2041  0384  0AA5               	incf	SetDisplay@d3,f
  2042  0385  0866               	movf	_unita,w
  2043  0386  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2044  0387  0084               	movwf	4
  2045  0388  120A  158A  2000  120A  118A  	fcall	stringdir
  2046  038D  00C0               	movwf	??_main
  2047  038E  0840               	movf	??_main,w
  2048  038F  00A6               	movwf	SetDisplay@value
  2049  0390  3000               	movlw	0
  2050  0391  120A  158A  251D  120A  118A  	fcall	_SetDisplay
  2051                           
  2052                           ;main.c: 283:                 break;
  2053  0396  2BAA               	goto	l3057
  2054  0397                     l3055:	
  2055  0397  0855               	movf	_disp,w
  2056  0398  00C0               	movwf	??_main
  2057  0399  01C1               	clrf	??_main+1
  2058                           
  2059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2060                           ; Switch size 1, requested type "simple"
  2061                           ; Number of cases is 1, Range of values is 0 to 0
  2062                           ; switch strategies available:
  2063                           ; Name         Instructions Cycles
  2064                           ; simple_byte            4     3 (average)
  2065                           ; direct_byte           11     8 (fixed)
  2066                           ; jumptable            260     6 (fixed)
  2067                           ;	Chosen strategy is simple_byte
  2068  039A  0841               	movf	??_main+1,w
  2069  039B  3A00               	xorlw	0	; case 0
  2070  039C  1903               	skipnz
  2071  039D  2B9F               	goto	l3171
  2072  039E  2BAA               	goto	l3057
  2073  039F                     l3171:	
  2074                           
  2075                           ; Switch size 1, requested type "simple"
  2076                           ; Number of cases is 3, Range of values is 0 to 2
  2077                           ; switch strategies available:
  2078                           ; Name         Instructions Cycles
  2079                           ; simple_byte           10     6 (average)
  2080                           ; direct_byte           17     8 (fixed)
  2081                           ; jumptable            260     6 (fixed)
  2082                           ;	Chosen strategy is simple_byte
  2083  039F  0840               	movf	??_main,w
  2084  03A0  3A00               	xorlw	0	; case 0
  2085  03A1  1903               	skipnz
  2086  03A2  2B4A               	goto	l3041
  2087  03A3  3A01               	xorlw	1	; case 1
  2088  03A4  1903               	skipnz
  2089  03A5  2B63               	goto	l3045
  2090  03A6  3A03               	xorlw	3	; case 2
  2091  03A7  1903               	skipnz
  2092  03A8  2B82               	goto	l3051
  2093  03A9  2BAA               	goto	l3057
  2094  03AA                     l3057:	
  2095                           
  2096                           ;main.c: 286:         disp = (disp + 1) % 3;
  2097  03AA  3003               	movlw	3
  2098  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2099  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2100  03AD  00A4               	movwf	___awmod@divisor
  2101  03AE  3000               	movlw	0
  2102  03AF  00A5               	movwf	___awmod@divisor+1
  2103  03B0  0855               	movf	_disp,w
  2104  03B1  3E01               	addlw	1
  2105  03B2  00A6               	movwf	___awmod@dividend
  2106  03B3  3000               	movlw	0
  2107  03B4  1803               	skipnc
  2108  03B5  3001               	movlw	1
  2109  03B6  00A7               	movwf	___awmod@dividend+1
  2110  03B7  120A  118A  2768  120A  118A  	fcall	___awmod
  2111  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2112  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2113  03BE  0824               	movf	?___awmod,w
  2114  03BF  00C0               	movwf	??_main
  2115  03C0  0840               	movf	??_main,w
  2116  03C1  00D5               	movwf	_disp
  2117  03C2                     l3059:	
  2118                           
  2119                           ;main.c: 292:         if (secondPassed.Bit && cycled.Bit)
  2120  03C2  1C58               	btfss	_secondPassed,0
  2121  03C3  2BC5               	goto	u3021
  2122  03C4  2BC6               	goto	u3020
  2123  03C5                     u3021:	
  2124  03C5  2BCC               	goto	l289
  2125  03C6                     u3020:	
  2126  03C6                     l3061:	
  2127  03C6  1C57               	btfss	_cycled,0
  2128  03C7  2BC9               	goto	u3031
  2129  03C8  2BCA               	goto	u3030
  2130  03C9                     u3031:	
  2131  03C9  2BCC               	goto	l289
  2132  03CA                     u3030:	
  2133  03CA                     l3063:	
  2134                           
  2135                           ;main.c: 293:         {;main.c: 294:             secondPassed.Bit = 0;
  2136  03CA  1058               	bcf	_secondPassed,0
  2137                           
  2138                           ;main.c: 295:             cycled.Bit = 0;
  2139  03CB  1057               	bcf	_cycled,0
  2140  03CC                     l289:	
  2141                           ;main.c: 296:         }
  2142                           
  2143                           
  2144                           ;main.c: 297:         if (secondPassed.Bit && !cycled.Bit)
  2145  03CC  1C58               	btfss	_secondPassed,0
  2146  03CD  2BCF               	goto	u3041
  2147  03CE  2BD0               	goto	u3040
  2148  03CF                     u3041:	
  2149  03CF  2886               	goto	l2931
  2150  03D0                     u3040:	
  2151  03D0                     l3065:	
  2152  03D0  1857               	btfsc	_cycled,0
  2153  03D1  2BD3               	goto	u3051
  2154  03D2  2BD4               	goto	u3050
  2155  03D3                     u3051:	
  2156  03D3  2886               	goto	l2931
  2157  03D4                     u3050:	
  2158  03D4                     l3067:	
  2159                           
  2160                           ;main.c: 298:         {;main.c: 299:             cycled.Bit = 1;
  2161  03D4  1457               	bsf	_cycled,0
  2162  03D5  2886               	goto	l2931
  2163  03D6  120A  118A  2810   	ljmp	start
  2164  03D9                     __end_of_main:	
  2165                           
  2166                           	psect	text1
  2167  0DB6                     __ptext1:	
  2168 ;; *************** function _sendByte *****************
  2169 ;; Defined at:
  2170 ;;		line 363 in file "main.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  byte0           1    wreg     unsigned char 
  2173 ;;  byte1           1   24[BANK0 ] unsigned char 
  2174 ;;  valore          1   25[BANK0 ] unsigned char 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  byte0           1   29[BANK0 ] unsigned char 
  2177 ;;  i               1   31[BANK0 ] unsigned char 
  2178 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2179 ;;		 -> BuildByte@txByte(5), 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       2       0       0       0
  2190 ;;      Locals:         0       3       0       0       0
  2191 ;;      Temps:          0       3       0       0       0
  2192 ;;      Totals:         0       8       0       0       0
  2193 ;;Total ram usage:        8 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    4
  2196 ;; This function calls:
  2197 ;;		_BuildByte
  2198 ;;		_UART_TxChar
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _sendByte
  2206  0DB6                     _sendByte:	
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2210                           ;sendByte@byte0 stored from wreg
  2211  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0DB8  00BD               	movwf	sendByte@byte0
  2214  0DB9                     l2865:	
  2215                           
  2216                           ;main.c: 363: void sendByte(char byte0, char byte1, char valore);main.c: 364: {;main.c: 
      +                          365:     char *txByte;;main.c: 366:     txByte = BuildByte(byte0, byte1, valore);
  2217  0DB9  0838               	movf	sendByte@byte1,w
  2218  0DBA  00BA               	movwf	??_sendByte
  2219  0DBB  083A               	movf	??_sendByte,w
  2220  0DBC  00A4               	movwf	BuildByte@byte1
  2221  0DBD  0839               	movf	sendByte@valore,w
  2222  0DBE  00BB               	movwf	??_sendByte+1
  2223  0DBF  083B               	movf	??_sendByte+1,w
  2224  0DC0  00A5               	movwf	BuildByte@valore
  2225  0DC1  083D               	movf	sendByte@byte0,w
  2226  0DC2  120A  118A  23D9  120A  158A  	fcall	_BuildByte
  2227  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0DC9  00BC               	movwf	??_sendByte+2
  2230  0DCA  083C               	movf	??_sendByte+2,w
  2231  0DCB  00BE               	movwf	sendByte@txByte
  2232  0DCC                     l2867:	
  2233                           
  2234                           ;main.c: 368:     for (unsigned char i = 0; i < 5; i++)
  2235  0DCC  01BF               	clrf	sendByte@i
  2236  0DCD                     l2873:	
  2237                           
  2238                           ;main.c: 369:     {;main.c: 370:         UART_TxChar(*(txByte++));
  2239  0DCD  083E               	movf	sendByte@txByte,w
  2240  0DCE  0084               	movwf	4
  2241  0DCF  1383               	bcf	3,7	;select IRP bank0
  2242  0DD0  0800               	movf	0,w
  2243  0DD1  120A  158A  24EC  120A  158A  	fcall	_UART_TxChar
  2244  0DD6                     l2875:	
  2245  0DD6  3001               	movlw	1
  2246  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0DD9  00BA               	movwf	??_sendByte
  2249  0DDA  083A               	movf	??_sendByte,w
  2250  0DDB  07BE               	addwf	sendByte@txByte,f
  2251  0DDC                     l2877:	
  2252                           
  2253                           ;main.c: 371:     }
  2254  0DDC  3001               	movlw	1
  2255  0DDD  00BA               	movwf	??_sendByte
  2256  0DDE  083A               	movf	??_sendByte,w
  2257  0DDF  07BF               	addwf	sendByte@i,f
  2258  0DE0                     l2879:	
  2259  0DE0  3005               	movlw	5
  2260  0DE1  023F               	subwf	sendByte@i,w
  2261  0DE2  1C03               	skipc
  2262  0DE3  2DE5               	goto	u2781
  2263  0DE4  2DE6               	goto	u2780
  2264  0DE5                     u2781:	
  2265  0DE5  2DCD               	goto	l2873
  2266  0DE6                     u2780:	
  2267  0DE6                     l328:	
  2268  0DE6  0008               	return
  2269  0DE7                     __end_of_sendByte:	
  2270                           
  2271                           	psect	text2
  2272  0CEC                     __ptext2:	
  2273 ;; *************** function _UART_TxChar *****************
  2274 ;; Defined at:
  2275 ;;		line 338 in file "main.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  ch              1    wreg     unsigned char 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  ch              1    4[BANK0 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2289 ;;      Params:         0       0       0       0       0
  2290 ;;      Locals:         0       1       0       0       0
  2291 ;;      Temps:          0       0       0       0       0
  2292 ;;      Totals:         0       1       0       0       0
  2293 ;;Total ram usage:        1 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    3
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_sendByte
  2300 ;;		_UART_Write_Text
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           
  2305                           ;psect for function _UART_TxChar
  2306  0CEC                     _UART_TxChar:	
  2307                           
  2308                           ;incstack = 0
  2309                           ; Regs used in _UART_TxChar: [wreg]
  2310                           ;UART_TxChar@ch stored from wreg
  2311  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0CEE  00A4               	movwf	UART_TxChar@ch
  2314  0CEF                     l2589:	
  2315  0CEF                     l308:	
  2316                           ;main.c: 341:         ;
  2317                           
  2318                           
  2319                           ;main.c: 340:     while (!TXIF)
  2320  0CEF  1E0C               	btfss	12,4	;volatile
  2321  0CF0  2CF2               	goto	u2301
  2322  0CF1  2CF3               	goto	u2300
  2323  0CF2                     u2301:	
  2324  0CF2  2CEF               	goto	l308
  2325  0CF3                     u2300:	
  2326  0CF3                     l310:	
  2327                           
  2328                           ;main.c: 342:     TXIF = 0;
  2329  0CF3  120C               	bcf	12,4	;volatile
  2330  0CF4                     l2591:	
  2331                           
  2332                           ;main.c: 343:     TXREG = ch;
  2333  0CF4  0824               	movf	UART_TxChar@ch,w
  2334  0CF5  0099               	movwf	25	;volatile
  2335  0CF6                     l311:	
  2336  0CF6  0008               	return
  2337  0CF7                     __end_of_UART_TxChar:	
  2338                           
  2339                           	psect	text3
  2340  03D9                     __ptext3:	
  2341 ;; *************** function _BuildByte *****************
  2342 ;; Defined at:
  2343 ;;		line 2 in file "./CustomLib/Serial.h"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  byte0           1    wreg     unsigned char 
  2346 ;;  byte1           1    4[BANK0 ] unsigned char 
  2347 ;;  valore          1    5[BANK0 ] unsigned char 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  byte0           1    8[BANK0 ] unsigned char 
  2350 ;;  y               2   18[BANK0 ] int 
  2351 ;;  y               2   16[BANK0 ] int 
  2352 ;;  i               2   22[BANK0 ] int 
  2353 ;;  i               2   20[BANK0 ] int 
  2354 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2355 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2356 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      PTR unsigned char 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2366 ;;      Params:         0       2       0       0       0
  2367 ;;      Locals:         0      16       0       0       0
  2368 ;;      Temps:          0       2       0       0       0
  2369 ;;      Totals:         0      20       0       0       0
  2370 ;;Total ram usage:       20 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    3
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_sendByte
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           
  2381                           ;psect for function _BuildByte
  2382  03D9                     _BuildByte:	
  2383                           
  2384                           ;incstack = 0
  2385                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2386                           ;BuildByte@byte0 stored from wreg
  2387  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2388  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2389  03DB  00A8               	movwf	BuildByte@byte0
  2390  03DC                     l2507:	
  2391                           
  2392                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2393  03DC  0828               	movf	BuildByte@byte0,w
  2394  03DD  397F               	andlw	127
  2395  03DE  00A6               	movwf	??_BuildByte
  2396  03DF  0826               	movf	??_BuildByte,w
  2397  03E0  00A9               	movwf	BuildByte@txByte
  2398                           
  2399                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2400  03E1  0824               	movf	BuildByte@byte1,w
  2401  03E2  397F               	andlw	127
  2402  03E3  00A6               	movwf	??_BuildByte
  2403  03E4  0826               	movf	??_BuildByte,w
  2404  03E5  00AA               	movwf	BuildByte@txByte+1
  2405                           
  2406                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2407  03E6  0825               	movf	BuildByte@valore,w
  2408  03E7  397F               	andlw	127
  2409  03E8  00A6               	movwf	??_BuildByte
  2410  03E9  0826               	movf	??_BuildByte,w
  2411  03EA  00AB               	movwf	BuildByte@txByte+2
  2412  03EB                     l2509:	
  2413                           
  2414                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2415  03EB  0825               	movf	BuildByte@valore,w
  2416  03EC  00A6               	movwf	??_BuildByte
  2417  03ED  3007               	movlw	7
  2418  03EE                     u2195:	
  2419  03EE  1003               	clrc
  2420  03EF  0CA6               	rrf	??_BuildByte,f
  2421  03F0  3EFF               	addlw	-1
  2422  03F1  1D03               	skipz
  2423  03F2  2BEE               	goto	u2195
  2424  03F3  0826               	movf	??_BuildByte,w
  2425  03F4  397F               	andlw	127
  2426  03F5  00A7               	movwf	??_BuildByte+1
  2427  03F6  0827               	movf	??_BuildByte+1,w
  2428  03F7  00AC               	movwf	BuildByte@txByte+3
  2429  03F8                     l2511:	
  2430                           
  2431                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2432  03F8  01AE               	clrf	BuildByte@sommaRow
  2433  03F9                     l2513:	
  2434                           
  2435                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2436  03F9  01AF               	clrf	BuildByte@sommaColumn
  2437  03FA                     l2515:	
  2438                           
  2439                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2440  03FA  01B4               	clrf	BuildByte@i
  2441  03FB  01B5               	clrf	BuildByte@i+1
  2442  03FC                     l2521:	
  2443                           
  2444                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2445  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2446  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2447  03FE  01B0               	clrf	BuildByte@y
  2448  03FF  01B1               	clrf	BuildByte@y+1
  2449  0400                     l2527:	
  2450                           
  2451                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2452  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0402  0834               	movf	BuildByte@i,w
  2455  0403  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2456  0404  0084               	movwf	4
  2457  0405  1383               	bcf	3,7	;select IRP bank0
  2458  0406  0800               	movf	0,w
  2459  0407  00A6               	movwf	??_BuildByte
  2460  0408  0A30               	incf	BuildByte@y,w
  2461  0409  2C0C               	goto	u2204
  2462  040A                     u2205:	
  2463  040A  1003               	clrc
  2464  040B  0CA6               	rrf	??_BuildByte,f
  2465  040C                     u2204:	
  2466  040C  3EFF               	addlw	-1
  2467  040D  1D03               	skipz
  2468  040E  2C0A               	goto	u2205
  2469  040F  0826               	movf	??_BuildByte,w
  2470  0410  3901               	andlw	1
  2471  0411  00A7               	movwf	??_BuildByte+1
  2472  0412  0827               	movf	??_BuildByte+1,w
  2473  0413  07AE               	addwf	BuildByte@sommaRow,f
  2474  0414                     l2529:	
  2475                           
  2476                           ;./CustomLib/Serial.h: 18:         }
  2477  0414  3001               	movlw	1
  2478  0415  07B0               	addwf	BuildByte@y,f
  2479  0416  1803               	skipnc
  2480  0417  0AB1               	incf	BuildByte@y+1,f
  2481  0418  3000               	movlw	0
  2482  0419  07B1               	addwf	BuildByte@y+1,f
  2483  041A                     l2531:	
  2484  041A  0831               	movf	BuildByte@y+1,w
  2485  041B  3A80               	xorlw	128
  2486  041C  00FF               	movwf	btemp+1
  2487  041D  3080               	movlw	128
  2488  041E  027F               	subwf	btemp+1,w
  2489  041F  1D03               	skipz
  2490  0420  2C23               	goto	u2215
  2491  0421  3008               	movlw	8
  2492  0422  0230               	subwf	BuildByte@y,w
  2493  0423                     u2215:	
  2494  0423  1C03               	skipc
  2495  0424  2C26               	goto	u2211
  2496  0425  2C27               	goto	u2210
  2497  0426                     u2211:	
  2498  0426  2C00               	goto	l2527
  2499  0427                     u2210:	
  2500  0427                     l119:	
  2501                           
  2502                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2503  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0429  1C2E               	btfss	BuildByte@sommaRow,0
  2506  042A  2C2C               	goto	u2221
  2507  042B  2C2D               	goto	u2220
  2508  042C                     u2221:	
  2509  042C  2C35               	goto	l2535
  2510  042D                     u2220:	
  2511  042D                     l2533:	
  2512                           
  2513                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2514  042D  3080               	movlw	128
  2515  042E  00A6               	movwf	??_BuildByte
  2516  042F  0834               	movf	BuildByte@i,w
  2517  0430  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2518  0431  0084               	movwf	4
  2519  0432  0826               	movf	??_BuildByte,w
  2520  0433  1383               	bcf	3,7	;select IRP bank0
  2521  0434  0780               	addwf	0,f
  2522  0435                     l2535:	
  2523                           
  2524                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2525  0435  01AE               	clrf	BuildByte@sommaRow
  2526  0436                     l2539:	
  2527                           ;./CustomLib/Serial.h: 23:         }
  2528                           
  2529                           
  2530                           ;./CustomLib/Serial.h: 28:     }
  2531  0436  3001               	movlw	1
  2532  0437  07B4               	addwf	BuildByte@i,f
  2533  0438  1803               	skipnc
  2534  0439  0AB5               	incf	BuildByte@i+1,f
  2535  043A  3000               	movlw	0
  2536  043B  07B5               	addwf	BuildByte@i+1,f
  2537  043C                     l2541:	
  2538  043C  0835               	movf	BuildByte@i+1,w
  2539  043D  3A80               	xorlw	128
  2540  043E  00FF               	movwf	btemp+1
  2541  043F  3080               	movlw	128
  2542  0440  027F               	subwf	btemp+1,w
  2543  0441  1D03               	skipz
  2544  0442  2C45               	goto	u2235
  2545  0443  3004               	movlw	4
  2546  0444  0234               	subwf	BuildByte@i,w
  2547  0445                     u2235:	
  2548  0445  1C03               	skipc
  2549  0446  2C48               	goto	u2231
  2550  0447  2C49               	goto	u2230
  2551  0448                     u2231:	
  2552  0448  2BFC               	goto	l2521
  2553  0449                     u2230:	
  2554  0449                     l2543:	
  2555                           
  2556                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2557  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2558  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2559  044B  01B6               	clrf	BuildByte@i_332
  2560  044C  01B7               	clrf	BuildByte@i_332+1
  2561  044D                     l2549:	
  2562                           
  2563                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2564  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2565  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2566  044F  01B2               	clrf	BuildByte@y_333
  2567  0450  01B3               	clrf	BuildByte@y_333+1
  2568  0451                     l2555:	
  2569                           
  2570                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2571  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0453  0832               	movf	BuildByte@y_333,w
  2574  0454  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2575  0455  0084               	movwf	4
  2576  0456  1383               	bcf	3,7	;select IRP bank0
  2577  0457  0800               	movf	0,w
  2578  0458  00A6               	movwf	??_BuildByte
  2579  0459  0A36               	incf	BuildByte@i_332,w
  2580  045A  2C5D               	goto	u2244
  2581  045B                     u2245:	
  2582  045B  1003               	clrc
  2583  045C  0CA6               	rrf	??_BuildByte,f
  2584  045D                     u2244:	
  2585  045D  3EFF               	addlw	-1
  2586  045E  1D03               	skipz
  2587  045F  2C5B               	goto	u2245
  2588  0460  0826               	movf	??_BuildByte,w
  2589  0461  3901               	andlw	1
  2590  0462  00A7               	movwf	??_BuildByte+1
  2591  0463  0827               	movf	??_BuildByte+1,w
  2592  0464  07AF               	addwf	BuildByte@sommaColumn,f
  2593  0465                     l2557:	
  2594                           
  2595                           ;./CustomLib/Serial.h: 37:         }
  2596  0465  3001               	movlw	1
  2597  0466  07B2               	addwf	BuildByte@y_333,f
  2598  0467  1803               	skipnc
  2599  0468  0AB3               	incf	BuildByte@y_333+1,f
  2600  0469  3000               	movlw	0
  2601  046A  07B3               	addwf	BuildByte@y_333+1,f
  2602  046B                     l2559:	
  2603  046B  0833               	movf	BuildByte@y_333+1,w
  2604  046C  3A80               	xorlw	128
  2605  046D  00FF               	movwf	btemp+1
  2606  046E  3080               	movlw	128
  2607  046F  027F               	subwf	btemp+1,w
  2608  0470  1D03               	skipz
  2609  0471  2C74               	goto	u2255
  2610  0472  3004               	movlw	4
  2611  0473  0232               	subwf	BuildByte@y_333,w
  2612  0474                     u2255:	
  2613  0474  1C03               	skipc
  2614  0475  2C77               	goto	u2251
  2615  0476  2C78               	goto	u2250
  2616  0477                     u2251:	
  2617  0477  2C51               	goto	l2555
  2618  0478                     u2250:	
  2619  0478                     l125:	
  2620                           
  2621                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2622  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2624  047A  1C2F               	btfss	BuildByte@sommaColumn,0
  2625  047B  2C7D               	goto	u2261
  2626  047C  2C7E               	goto	u2260
  2627  047D                     u2261:	
  2628  047D  2C8B               	goto	l2563
  2629  047E                     u2260:	
  2630  047E                     l2561:	
  2631                           
  2632                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2633  047E  3001               	movlw	1
  2634  047F  00A6               	movwf	??_BuildByte
  2635  0480  0A36               	incf	BuildByte@i_332,w
  2636  0481  2C84               	goto	u2274
  2637  0482                     u2275:	
  2638  0482  1003               	clrc
  2639  0483  0DA6               	rlf	??_BuildByte,f
  2640  0484                     u2274:	
  2641  0484  3EFF               	addlw	-1
  2642  0485  1D03               	skipz
  2643  0486  2C82               	goto	u2275
  2644  0487  0826               	movf	??_BuildByte,w
  2645  0488  00A7               	movwf	??_BuildByte+1
  2646  0489  0827               	movf	??_BuildByte+1,w
  2647  048A  07AD               	addwf	BuildByte@txByte+4,f
  2648  048B                     l2563:	
  2649                           
  2650                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2651  048B  01AF               	clrf	BuildByte@sommaColumn
  2652  048C                     l2567:	
  2653                           ;./CustomLib/Serial.h: 42:         }
  2654                           
  2655                           
  2656                           ;./CustomLib/Serial.h: 47:     }
  2657  048C  3001               	movlw	1
  2658  048D  07B6               	addwf	BuildByte@i_332,f
  2659  048E  1803               	skipnc
  2660  048F  0AB7               	incf	BuildByte@i_332+1,f
  2661  0490  3000               	movlw	0
  2662  0491  07B7               	addwf	BuildByte@i_332+1,f
  2663  0492                     l2569:	
  2664  0492  0837               	movf	BuildByte@i_332+1,w
  2665  0493  3A80               	xorlw	128
  2666  0494  00FF               	movwf	btemp+1
  2667  0495  3080               	movlw	128
  2668  0496  027F               	subwf	btemp+1,w
  2669  0497  1D03               	skipz
  2670  0498  2C9B               	goto	u2285
  2671  0499  3008               	movlw	8
  2672  049A  0236               	subwf	BuildByte@i_332,w
  2673  049B                     u2285:	
  2674  049B  1C03               	skipc
  2675  049C  2C9E               	goto	u2281
  2676  049D  2C9F               	goto	u2280
  2677  049E                     u2281:	
  2678  049E  2C4D               	goto	l2549
  2679  049F                     u2280:	
  2680  049F                     l2571:	
  2681                           
  2682                           ;./CustomLib/Serial.h: 49:     return txByte;
  2683  049F  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2684  04A0                     l128:	
  2685  04A0  0008               	return
  2686  04A1                     __end_of_BuildByte:	
  2687                           
  2688                           	psect	text4
  2689  0DE7                     __ptext4:	
  2690 ;; *************** function _map *****************
  2691 ;; Defined at:
  2692 ;;		line 1 in file "./CustomLib/Conversions.h"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  x               2   20[BANK0 ] int 
  2695 ;;  in_min          2   22[BANK0 ] int 
  2696 ;;  in_max          2   24[BANK0 ] int 
  2697 ;;  out_min         2   26[BANK0 ] int 
  2698 ;;  out_max         2   28[BANK0 ] int 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  2   20[BANK0 ] int 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         0      10       0       0       0
  2711 ;;      Locals:         0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0
  2713 ;;      Totals:         0      10       0       0       0
  2714 ;;Total ram usage:       10 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    4
  2717 ;; This function calls:
  2718 ;;		___awdiv
  2719 ;;		___wmul
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _map
  2727  0DE7                     _map:	
  2728  0DE7                     l2743:	
  2729                           ;incstack = 0
  2730                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2731                           
  2732                           
  2733                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2734  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0DE9  0836               	movf	map@in_min,w
  2737  0DEA  0238               	subwf	map@in_max,w
  2738  0DEB  00AB               	movwf	___awdiv@divisor
  2739  0DEC  0837               	movf	map@in_min+1,w
  2740  0DED  1C03               	skipc
  2741  0DEE  0A37               	incf	map@in_min+1,w
  2742  0DEF  0239               	subwf	map@in_max+1,w
  2743  0DF0  00AC               	movwf	___awdiv@divisor+1
  2744  0DF1  0836               	movf	map@in_min,w
  2745  0DF2  0234               	subwf	map@x,w
  2746  0DF3  00A4               	movwf	___wmul@multiplier
  2747  0DF4  0837               	movf	map@in_min+1,w
  2748  0DF5  1C03               	skipc
  2749  0DF6  0A37               	incf	map@in_min+1,w
  2750  0DF7  0235               	subwf	map@x+1,w
  2751  0DF8  00A5               	movwf	___wmul@multiplier+1
  2752  0DF9  083A               	movf	map@out_min,w
  2753  0DFA  023C               	subwf	map@out_max,w
  2754  0DFB  00A6               	movwf	___wmul@multiplicand
  2755  0DFC  083B               	movf	map@out_min+1,w
  2756  0DFD  1C03               	skipc
  2757  0DFE  0A3B               	incf	map@out_min+1,w
  2758  0DFF  023D               	subwf	map@out_max+1,w
  2759  0E00  00A7               	movwf	___wmul@multiplicand+1
  2760  0E01  120A  158A  258F  120A  158A  	fcall	___wmul
  2761  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  2763  0E08  0825               	movf	?___wmul+1,w
  2764  0E09  00AE               	movwf	___awdiv@dividend+1
  2765  0E0A  0824               	movf	?___wmul,w
  2766  0E0B  00AD               	movwf	___awdiv@dividend
  2767  0E0C  120A  118A  26FF  120A  158A  	fcall	___awdiv
  2768  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0E13  083A               	movf	map@out_min,w
  2771  0E14  072B               	addwf	?___awdiv,w
  2772  0E15  00B4               	movwf	?_map
  2773  0E16  083B               	movf	map@out_min+1,w
  2774  0E17  1803               	skipnc
  2775  0E18  0A3B               	incf	map@out_min+1,w
  2776  0E19  072C               	addwf	?___awdiv+1,w
  2777  0E1A  00B5               	movwf	?_map+1
  2778  0E1B                     l77:	
  2779  0E1B  0008               	return
  2780  0E1C                     __end_of_map:	
  2781                           
  2782                           	psect	text5
  2783  0D8F                     __ptext5:	
  2784 ;; *************** function ___wmul *****************
  2785 ;; Defined at:
  2786 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  multiplier      2    4[BANK0 ] unsigned int 
  2789 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  product         2    8[BANK0 ] unsigned int 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  2    4[BANK0 ] unsigned int 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       4       0       0       0
  2802 ;;      Locals:         0       2       0       0       0
  2803 ;;      Temps:          0       0       0       0       0
  2804 ;;      Totals:         0       6       0       0       0
  2805 ;;Total ram usage:        6 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    3
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_map
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function ___wmul
  2817  0D8F                     ___wmul:	
  2818  0D8F                     l2593:	
  2819                           ;incstack = 0
  2820                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2821                           
  2822  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0D91  01A8               	clrf	___wmul@product
  2825  0D92  01A9               	clrf	___wmul@product+1
  2826  0D93                     l2595:	
  2827  0D93  1C24               	btfss	___wmul@multiplier,0
  2828  0D94  2D96               	goto	u2311
  2829  0D95  2D97               	goto	u2310
  2830  0D96                     u2311:	
  2831  0D96  2D9D               	goto	l435
  2832  0D97                     u2310:	
  2833  0D97                     l2597:	
  2834  0D97  0826               	movf	___wmul@multiplicand,w
  2835  0D98  07A8               	addwf	___wmul@product,f
  2836  0D99  1803               	skipnc
  2837  0D9A  0AA9               	incf	___wmul@product+1,f
  2838  0D9B  0827               	movf	___wmul@multiplicand+1,w
  2839  0D9C  07A9               	addwf	___wmul@product+1,f
  2840  0D9D                     l435:	
  2841  0D9D  3001               	movlw	1
  2842  0D9E                     u2325:	
  2843  0D9E  1003               	clrc
  2844  0D9F  0DA6               	rlf	___wmul@multiplicand,f
  2845  0DA0  0DA7               	rlf	___wmul@multiplicand+1,f
  2846  0DA1  3EFF               	addlw	-1
  2847  0DA2  1D03               	skipz
  2848  0DA3  2D9E               	goto	u2325
  2849  0DA4                     l2599:	
  2850  0DA4  3001               	movlw	1
  2851  0DA5                     u2335:	
  2852  0DA5  1003               	clrc
  2853  0DA6  0CA5               	rrf	___wmul@multiplier+1,f
  2854  0DA7  0CA4               	rrf	___wmul@multiplier,f
  2855  0DA8  3EFF               	addlw	-1
  2856  0DA9  1D03               	skipz
  2857  0DAA  2DA5               	goto	u2335
  2858  0DAB                     l2601:	
  2859  0DAB  0824               	movf	___wmul@multiplier,w
  2860  0DAC  0425               	iorwf	___wmul@multiplier+1,w
  2861  0DAD  1D03               	btfss	3,2
  2862  0DAE  2DB0               	goto	u2341
  2863  0DAF  2DB1               	goto	u2340
  2864  0DB0                     u2341:	
  2865  0DB0  2D93               	goto	l2595
  2866  0DB1                     u2340:	
  2867  0DB1                     l2603:	
  2868  0DB1  0829               	movf	___wmul@product+1,w
  2869  0DB2  00A5               	movwf	?___wmul+1
  2870  0DB3  0828               	movf	___wmul@product,w
  2871  0DB4  00A4               	movwf	?___wmul
  2872  0DB5                     l437:	
  2873  0DB5  0008               	return
  2874  0DB6                     __end_of___wmul:	
  2875                           
  2876                           	psect	text6
  2877  0CF7                     __ptext6:	
  2878 ;; *************** function _init_ADC *****************
  2879 ;; Defined at:
  2880 ;;		line 307 in file "main.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       1       0       0       0
  2897 ;;      Totals:         0       1       0       0       0
  2898 ;;Total ram usage:        1 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    3
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function _init_ADC
  2910  0CF7                     _init_ADC:	
  2911  0CF7                     l2847:	
  2912                           ;incstack = 0
  2913                           ; Regs used in _init_ADC: [wreg+status,2]
  2914                           
  2915                           
  2916                           ;main.c: 309:     TRISA = 0xE3;
  2917  0CF7  30E3               	movlw	227
  2918  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  2920  0CFA  0085               	movwf	5	;volatile
  2921  0CFB                     l2849:	
  2922                           
  2923                           ;main.c: 310:     ADCON0 = 0x00;
  2924  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0CFD  019F               	clrf	31	;volatile
  2927  0CFE                     l2851:	
  2928                           
  2929                           ;main.c: 311:     ADCON1 = 0x80;
  2930  0CFE  3080               	movlw	128
  2931  0CFF  1683               	bsf	3,5	;RP0=1, select bank1
  2932  0D00  1303               	bcf	3,6	;RP1=0, select bank1
  2933  0D01  009F               	movwf	31	;volatile
  2934  0D02                     l2853:	
  2935                           
  2936                           ;main.c: 312:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  2937  0D02  3019               	movlw	25
  2938  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0D05  00A4               	movwf	??_init_ADC
  2941  0D06                     u3077:	
  2942  0D06  0BA4               	decfsz	??_init_ADC,f
  2943  0D07  2D06               	goto	u3077
  2944  0D08  2D09               	nop2
  2945  0D09                     l296:	
  2946  0D09  0008               	return
  2947  0D0A                     __end_of_init_ADC:	
  2948                           
  2949                           	psect	text7
  2950  0EAE                     __ptext7:	
  2951 ;; *************** function _UpdateTimes *****************
  2952 ;; Defined at:
  2953 ;;		line 3 in file "./CustomLib/TrafficLight.h"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  _semafori       1    wreg     PTR PTR struct .
  2956 ;;		 -> Semafori(32), 
  2957 ;;  _to_update      1    4[BANK0 ] PTR struct .
  2958 ;;		 -> to_update(7), 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  _semafori       1   16[BANK0 ] PTR PTR struct .
  2961 ;;		 -> Semafori(32), 
  2962 ;;  i               1   18[BANK0 ] unsigned char 
  2963 ;;  l               1   17[BANK0 ] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       1       0       0       0
  2974 ;;      Locals:         0       3       0       0       0
  2975 ;;      Temps:          0      11       0       0       0
  2976 ;;      Totals:         0      15       0       0       0
  2977 ;;Total ram usage:       15 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    3
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _UpdateTimes
  2989  0EAE                     _UpdateTimes:	
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  2993                           ;UpdateTimes@_semafori stored from wreg
  2994  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0EB0  00B0               	movwf	UpdateTimes@_semafori
  2997  0EB1                     l2759:	
  2998                           
  2999                           ;./CustomLib/TrafficLight.h: 3: void UpdateTimes(_Semafori _semafori, Update *_to_update
      +                          );./CustomLib/TrafficLight.h: 4: {;./CustomLib/TrafficLight.h: 6:     for (unsigned char
      +                           l = 0; l < 16; l++)
  3000  0EB1  01B1               	clrf	UpdateTimes@l
  3001  0EB2                     l2765:	
  3002                           
  3003                           ;./CustomLib/TrafficLight.h: 7:     {;./CustomLib/TrafficLight.h: 8:         if( l == (*
      +                          _to_update).id )
  3004  0EB2  0824               	movf	UpdateTimes@_to_update,w
  3005  0EB3  3E06               	addlw	6
  3006  0EB4  0084               	movwf	4
  3007  0EB5  1383               	bcf	3,7	;select IRP bank0
  3008  0EB6  0800               	movf	0,w
  3009  0EB7  0631               	xorwf	UpdateTimes@l,w
  3010  0EB8  1D03               	skipz
  3011  0EB9  2EBB               	goto	u2671
  3012  0EBA  2EBC               	goto	u2670
  3013  0EBB                     u2671:	
  3014  0EBB  2EF4               	goto	l2779
  3015  0EBC                     u2670:	
  3016  0EBC                     l2767:	
  3017                           
  3018                           ;./CustomLib/TrafficLight.h: 9:         {;./CustomLib/TrafficLight.h: 10:             fo
      +                          r(unsigned char i = 0; i < 3; i++)
  3019  0EBC  01B2               	clrf	UpdateTimes@i
  3020  0EBD                     l2773:	
  3021                           
  3022                           ;./CustomLib/TrafficLight.h: 11:             {;./CustomLib/TrafficLight.h: 12:          
      +                                (*(_semafori)[l]).times[i] = (*_to_update).new_times[i];
  3023  0EBD  0832               	movf	UpdateTimes@i,w
  3024  0EBE  00A5               	movwf	??_UpdateTimes
  3025  0EBF  0725               	addwf	??_UpdateTimes,w
  3026  0EC0  0724               	addwf	UpdateTimes@_to_update,w
  3027  0EC1  00A6               	movwf	??_UpdateTimes+1
  3028  0EC2  0826               	movf	??_UpdateTimes+1,w
  3029  0EC3  0084               	movwf	4
  3030  0EC4  1383               	bcf	3,7	;select IRP bank0
  3031  0EC5  0800               	movf	0,w
  3032  0EC6  00A7               	movwf	??_UpdateTimes+2
  3033  0EC7  0A84               	incf	4,f
  3034  0EC8  0800               	movf	0,w
  3035  0EC9  00A8               	movwf	??_UpdateTimes+3
  3036  0ECA  0831               	movf	UpdateTimes@l,w
  3037  0ECB  00A9               	movwf	??_UpdateTimes+4
  3038  0ECC  0729               	addwf	??_UpdateTimes+4,w
  3039  0ECD  0730               	addwf	UpdateTimes@_semafori,w
  3040  0ECE  00AA               	movwf	??_UpdateTimes+5
  3041  0ECF  082A               	movf	??_UpdateTimes+5,w
  3042  0ED0  0084               	movwf	4
  3043  0ED1  1783               	bsf	3,7	;select IRP bank2
  3044  0ED2  0800               	movf	0,w
  3045  0ED3  00AB               	movwf	??_UpdateTimes+6
  3046  0ED4  0A84               	incf	4,f
  3047  0ED5  0800               	movf	0,w
  3048  0ED6  00AC               	movwf	??_UpdateTimes+7
  3049  0ED7  0832               	movf	UpdateTimes@i,w
  3050  0ED8  00AD               	movwf	??_UpdateTimes+8
  3051  0ED9  072D               	addwf	??_UpdateTimes+8,w
  3052  0EDA  072B               	addwf	??_UpdateTimes+6,w
  3053  0EDB  00AE               	movwf	??_UpdateTimes+9
  3054  0EDC  082C               	movf	??_UpdateTimes+7,w
  3055  0EDD  1803               	skipnc
  3056  0EDE  3E01               	addlw	1
  3057  0EDF  00AF               	movwf	??_UpdateTimes+10
  3058  0EE0  082E               	movf	??_UpdateTimes+9,w
  3059  0EE1  0084               	movwf	4
  3060  0EE2  1783               	bsf	3,7
  3061  0EE3  1C2F               	btfss	??_UpdateTimes+10,0
  3062  0EE4  1383               	bcf	3,7
  3063  0EE5  0827               	movf	??_UpdateTimes+2,w
  3064  0EE6  0080               	movwf	0
  3065  0EE7  0A84               	incf	4,f
  3066  0EE8  0828               	movf	??_UpdateTimes+3,w
  3067  0EE9  0080               	movwf	0
  3068  0EEA                     l2775:	
  3069                           
  3070                           ;./CustomLib/TrafficLight.h: 13:             }
  3071  0EEA  3001               	movlw	1
  3072  0EEB  00A5               	movwf	??_UpdateTimes
  3073  0EEC  0825               	movf	??_UpdateTimes,w
  3074  0EED  07B2               	addwf	UpdateTimes@i,f
  3075  0EEE                     l2777:	
  3076  0EEE  3003               	movlw	3
  3077  0EEF  0232               	subwf	UpdateTimes@i,w
  3078  0EF0  1C03               	skipc
  3079  0EF1  2EF3               	goto	u2681
  3080  0EF2  2EF4               	goto	u2680
  3081  0EF3                     u2681:	
  3082  0EF3  2EBD               	goto	l2773
  3083  0EF4                     u2680:	
  3084  0EF4                     l2779:	
  3085                           
  3086                           ;./CustomLib/TrafficLight.h: 15:     }
  3087  0EF4  3001               	movlw	1
  3088  0EF5  00A5               	movwf	??_UpdateTimes
  3089  0EF6  0825               	movf	??_UpdateTimes,w
  3090  0EF7  07B1               	addwf	UpdateTimes@l,f
  3091  0EF8                     l2781:	
  3092  0EF8  3010               	movlw	16
  3093  0EF9  0231               	subwf	UpdateTimes@l,w
  3094  0EFA  1C03               	skipc
  3095  0EFB  2EFD               	goto	u2691
  3096  0EFC  2EFE               	goto	u2690
  3097  0EFD                     u2691:	
  3098  0EFD  2EB2               	goto	l2765
  3099  0EFE                     u2690:	
  3100  0EFE                     l136:	
  3101  0EFE  0008               	return
  3102  0EFF                     __end_of_UpdateTimes:	
  3103                           
  3104                           	psect	text8
  3105  07C3                     __ptext8:	
  3106 ;; *************** function _UART_Init *****************
  3107 ;; Defined at:
  3108 ;;		line 326 in file "main.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  baudrate        2   19[BANK0 ] int 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       2       0       0       0
  3123 ;;      Locals:         0       0       0       0       0
  3124 ;;      Temps:          0       4       0       0       0
  3125 ;;      Totals:         0       6       0       0       0
  3126 ;;Total ram usage:        6 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    4
  3129 ;; This function calls:
  3130 ;;		___aldiv
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _UART_Init
  3138  07C3                     _UART_Init:	
  3139  07C3                     l2855:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3142                           
  3143                           
  3144                           ;main.c: 326: void UART_Init(int baudrate);main.c: 327: {;main.c: 328:     TRISCbits.TRI
      +                          SC6 = 0;
  3145  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  3146  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  3147  07C5  1307               	bcf	7,6	;volatile
  3148                           
  3149                           ;main.c: 329:     TXSTAbits.TXEN = 1;
  3150  07C6  1698               	bsf	24,5	;volatile
  3151                           
  3152                           ;main.c: 330:     RCSTAbits.SPEN = 1;
  3153  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  3154  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  3155  07C9  1798               	bsf	24,7	;volatile
  3156                           
  3157                           ;main.c: 331:     RCSTAbits.CREN = 1;
  3158  07CA  1618               	bsf	24,4	;volatile
  3159  07CB                     l2857:	
  3160                           
  3161                           ;main.c: 332:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3162  07CB  0833               	movf	UART_Init@baudrate,w
  3163  07CC  00B5               	movwf	??_UART_Init
  3164  07CD  0834               	movf	UART_Init@baudrate+1,w
  3165  07CE  00B6               	movwf	??_UART_Init+1
  3166  07CF  3000               	movlw	0
  3167  07D0  1BB6               	btfsc	??_UART_Init+1,7
  3168  07D1  30FF               	movlw	255
  3169  07D2  00B7               	movwf	??_UART_Init+2
  3170  07D3  00B8               	movwf	??_UART_Init+3
  3171  07D4  3006               	movlw	6
  3172  07D5                     u2775:	
  3173  07D5  1003               	clrc
  3174  07D6  0DB5               	rlf	??_UART_Init,f
  3175  07D7  0DB6               	rlf	??_UART_Init+1,f
  3176  07D8  0DB7               	rlf	??_UART_Init+2,f
  3177  07D9  0DB8               	rlf	??_UART_Init+3,f
  3178  07DA                     u2770:	
  3179  07DA  3EFF               	addlw	-1
  3180  07DB  1D03               	skipz
  3181  07DC  2FD5               	goto	u2775
  3182  07DD  0838               	movf	??_UART_Init+3,w
  3183  07DE  00A7               	movwf	___aldiv@divisor+3
  3184  07DF  0837               	movf	??_UART_Init+2,w
  3185  07E0  00A6               	movwf	___aldiv@divisor+2
  3186  07E1  0836               	movf	??_UART_Init+1,w
  3187  07E2  00A5               	movwf	___aldiv@divisor+1
  3188  07E3  0835               	movf	??_UART_Init,w
  3189  07E4  00A4               	movwf	___aldiv@divisor
  3190  07E5  3001               	movlw	1
  3191  07E6  00AB               	movwf	___aldiv@dividend+3
  3192  07E7  30E8               	movlw	232
  3193  07E8  00AA               	movwf	___aldiv@dividend+2
  3194  07E9  3048               	movlw	72
  3195  07EA  00A9               	movwf	___aldiv@dividend+1
  3196  07EB  3000               	movlw	0
  3197  07EC  00A8               	movwf	___aldiv@dividend
  3198  07ED  120A  118A  24A1  120A  118A  	fcall	___aldiv
  3199  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  3200  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  3201  07F4  0824               	movf	?___aldiv,w
  3202  07F5  3EFF               	addlw	255
  3203  07F6  1683               	bsf	3,5	;RP0=1, select bank1
  3204  07F7  1303               	bcf	3,6	;RP1=0, select bank1
  3205  07F8  0099               	movwf	25	;volatile
  3206  07F9                     l2859:	
  3207                           
  3208                           ;main.c: 333:     INTCONbits.GIE = 1;
  3209  07F9  178B               	bsf	11,7	;volatile
  3210  07FA                     l2861:	
  3211                           
  3212                           ;main.c: 334:     INTCONbits.PEIE = 1;
  3213  07FA  170B               	bsf	11,6	;volatile
  3214  07FB                     l2863:	
  3215                           
  3216                           ;main.c: 335:     PIE1bits.RCIE = 1;
  3217  07FB  168C               	bsf	12,5	;volatile
  3218  07FC                     l305:	
  3219  07FC  0008               	return
  3220  07FD                     __end_of_UART_Init:	
  3221                           
  3222                           	psect	text9
  3223  04A1                     __ptext9:	
  3224 ;; *************** function ___aldiv *****************
  3225 ;; Defined at:
  3226 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  divisor         4    4[BANK0 ] long 
  3229 ;;  dividend        4    8[BANK0 ] long 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  quotient        4   15[BANK0 ] long 
  3232 ;;  sign            1   14[BANK0 ] unsigned char 
  3233 ;;  counter         1   13[BANK0 ] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  4    4[BANK0 ] long 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       8       0       0       0
  3244 ;;      Locals:         0       6       0       0       0
  3245 ;;      Temps:          0       1       0       0       0
  3246 ;;      Totals:         0      15       0       0       0
  3247 ;;Total ram usage:       15 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    3
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_UART_Init
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function ___aldiv
  3259  04A1                     ___aldiv:	
  3260  04A1                     l2621:	
  3261                           ;incstack = 0
  3262                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3263                           
  3264  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  3265  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  3266  04A3  01AE               	clrf	___aldiv@sign
  3267  04A4                     l2623:	
  3268  04A4  1FA7               	btfss	___aldiv@divisor+3,7
  3269  04A5  2CA7               	goto	u2371
  3270  04A6  2CA8               	goto	u2370
  3271  04A7                     u2371:	
  3272  04A7  2CB5               	goto	l500
  3273  04A8                     u2370:	
  3274  04A8                     l2625:	
  3275  04A8  09A4               	comf	___aldiv@divisor,f
  3276  04A9  09A5               	comf	___aldiv@divisor+1,f
  3277  04AA  09A6               	comf	___aldiv@divisor+2,f
  3278  04AB  09A7               	comf	___aldiv@divisor+3,f
  3279  04AC  0AA4               	incf	___aldiv@divisor,f
  3280  04AD  1903               	skipnz
  3281  04AE  0AA5               	incf	___aldiv@divisor+1,f
  3282  04AF  1903               	skipnz
  3283  04B0  0AA6               	incf	___aldiv@divisor+2,f
  3284  04B1  1903               	skipnz
  3285  04B2  0AA7               	incf	___aldiv@divisor+3,f
  3286  04B3  01AE               	clrf	___aldiv@sign
  3287  04B4  0AAE               	incf	___aldiv@sign,f
  3288  04B5                     l500:	
  3289  04B5  1FAB               	btfss	___aldiv@dividend+3,7
  3290  04B6  2CB8               	goto	u2381
  3291  04B7  2CB9               	goto	u2380
  3292  04B8                     u2381:	
  3293  04B8  2CC8               	goto	l2631
  3294  04B9                     u2380:	
  3295  04B9                     l2627:	
  3296  04B9  09A8               	comf	___aldiv@dividend,f
  3297  04BA  09A9               	comf	___aldiv@dividend+1,f
  3298  04BB  09AA               	comf	___aldiv@dividend+2,f
  3299  04BC  09AB               	comf	___aldiv@dividend+3,f
  3300  04BD  0AA8               	incf	___aldiv@dividend,f
  3301  04BE  1903               	skipnz
  3302  04BF  0AA9               	incf	___aldiv@dividend+1,f
  3303  04C0  1903               	skipnz
  3304  04C1  0AAA               	incf	___aldiv@dividend+2,f
  3305  04C2  1903               	skipnz
  3306  04C3  0AAB               	incf	___aldiv@dividend+3,f
  3307  04C4                     l2629:	
  3308  04C4  3001               	movlw	1
  3309  04C5  00AC               	movwf	??___aldiv
  3310  04C6  082C               	movf	??___aldiv,w
  3311  04C7  06AE               	xorwf	___aldiv@sign,f
  3312  04C8                     l2631:	
  3313  04C8  3000               	movlw	0
  3314  04C9  00B2               	movwf	___aldiv@quotient+3
  3315  04CA  3000               	movlw	0
  3316  04CB  00B1               	movwf	___aldiv@quotient+2
  3317  04CC  3000               	movlw	0
  3318  04CD  00B0               	movwf	___aldiv@quotient+1
  3319  04CE  3000               	movlw	0
  3320  04CF  00AF               	movwf	___aldiv@quotient
  3321  04D0                     l2633:	
  3322  04D0  0827               	movf	___aldiv@divisor+3,w
  3323  04D1  0426               	iorwf	___aldiv@divisor+2,w
  3324  04D2  0425               	iorwf	___aldiv@divisor+1,w
  3325  04D3  0424               	iorwf	___aldiv@divisor,w
  3326  04D4  1903               	skipnz
  3327  04D5  2CD7               	goto	u2391
  3328  04D6  2CD8               	goto	u2390
  3329  04D7                     u2391:	
  3330  04D7  2D25               	goto	l2653
  3331  04D8                     u2390:	
  3332  04D8                     l2635:	
  3333  04D8  01AD               	clrf	___aldiv@counter
  3334  04D9  0AAD               	incf	___aldiv@counter,f
  3335  04DA  2CE8               	goto	l2639
  3336  04DB                     l2637:	
  3337  04DB  3001               	movlw	1
  3338  04DC  00AC               	movwf	??___aldiv
  3339  04DD                     u2405:	
  3340  04DD  1003               	clrc
  3341  04DE  0DA4               	rlf	___aldiv@divisor,f
  3342  04DF  0DA5               	rlf	___aldiv@divisor+1,f
  3343  04E0  0DA6               	rlf	___aldiv@divisor+2,f
  3344  04E1  0DA7               	rlf	___aldiv@divisor+3,f
  3345  04E2  0BAC               	decfsz	??___aldiv,f
  3346  04E3  2CDD               	goto	u2405
  3347  04E4  3001               	movlw	1
  3348  04E5  00AC               	movwf	??___aldiv
  3349  04E6  082C               	movf	??___aldiv,w
  3350  04E7  07AD               	addwf	___aldiv@counter,f
  3351  04E8                     l2639:	
  3352  04E8  1FA7               	btfss	___aldiv@divisor+3,7
  3353  04E9  2CEB               	goto	u2411
  3354  04EA  2CEC               	goto	u2410
  3355  04EB                     u2411:	
  3356  04EB  2CDB               	goto	l2637
  3357  04EC                     u2410:	
  3358  04EC                     l2641:	
  3359  04EC  3001               	movlw	1
  3360  04ED  00AC               	movwf	??___aldiv
  3361  04EE                     u2425:	
  3362  04EE  1003               	clrc
  3363  04EF  0DAF               	rlf	___aldiv@quotient,f
  3364  04F0  0DB0               	rlf	___aldiv@quotient+1,f
  3365  04F1  0DB1               	rlf	___aldiv@quotient+2,f
  3366  04F2  0DB2               	rlf	___aldiv@quotient+3,f
  3367  04F3  0BAC               	decfsz	??___aldiv,f
  3368  04F4  2CEE               	goto	u2425
  3369  04F5                     l2643:	
  3370  04F5  0827               	movf	___aldiv@divisor+3,w
  3371  04F6  022B               	subwf	___aldiv@dividend+3,w
  3372  04F7  1D03               	skipz
  3373  04F8  2D03               	goto	u2435
  3374  04F9  0826               	movf	___aldiv@divisor+2,w
  3375  04FA  022A               	subwf	___aldiv@dividend+2,w
  3376  04FB  1D03               	skipz
  3377  04FC  2D03               	goto	u2435
  3378  04FD  0825               	movf	___aldiv@divisor+1,w
  3379  04FE  0229               	subwf	___aldiv@dividend+1,w
  3380  04FF  1D03               	skipz
  3381  0500  2D03               	goto	u2435
  3382  0501  0824               	movf	___aldiv@divisor,w
  3383  0502  0228               	subwf	___aldiv@dividend,w
  3384  0503                     u2435:	
  3385  0503  1C03               	skipc
  3386  0504  2D06               	goto	u2431
  3387  0505  2D07               	goto	u2430
  3388  0506                     u2431:	
  3389  0506  2D16               	goto	l2649
  3390  0507                     u2430:	
  3391  0507                     l2645:	
  3392  0507  0824               	movf	___aldiv@divisor,w
  3393  0508  02A8               	subwf	___aldiv@dividend,f
  3394  0509  0825               	movf	___aldiv@divisor+1,w
  3395  050A  1C03               	skipc
  3396  050B  0F25               	incfsz	___aldiv@divisor+1,w
  3397  050C  02A9               	subwf	___aldiv@dividend+1,f
  3398  050D  0826               	movf	___aldiv@divisor+2,w
  3399  050E  1C03               	skipc
  3400  050F  0F26               	incfsz	___aldiv@divisor+2,w
  3401  0510  02AA               	subwf	___aldiv@dividend+2,f
  3402  0511  0827               	movf	___aldiv@divisor+3,w
  3403  0512  1C03               	skipc
  3404  0513  0F27               	incfsz	___aldiv@divisor+3,w
  3405  0514  02AB               	subwf	___aldiv@dividend+3,f
  3406  0515                     l2647:	
  3407  0515  142F               	bsf	___aldiv@quotient,0
  3408  0516                     l2649:	
  3409  0516  3001               	movlw	1
  3410  0517                     u2445:	
  3411  0517  1003               	clrc
  3412  0518  0CA7               	rrf	___aldiv@divisor+3,f
  3413  0519  0CA6               	rrf	___aldiv@divisor+2,f
  3414  051A  0CA5               	rrf	___aldiv@divisor+1,f
  3415  051B  0CA4               	rrf	___aldiv@divisor,f
  3416  051C  3EFF               	addlw	-1
  3417  051D  1D03               	skipz
  3418  051E  2D17               	goto	u2445
  3419  051F                     l2651:	
  3420  051F  3001               	movlw	1
  3421  0520  02AD               	subwf	___aldiv@counter,f
  3422  0521  1D03               	btfss	3,2
  3423  0522  2D24               	goto	u2451
  3424  0523  2D25               	goto	u2450
  3425  0524                     u2451:	
  3426  0524  2CEC               	goto	l2641
  3427  0525                     u2450:	
  3428  0525                     l2653:	
  3429  0525  082E               	movf	___aldiv@sign,w
  3430  0526  1903               	btfsc	3,2
  3431  0527  2D29               	goto	u2461
  3432  0528  2D2A               	goto	u2460
  3433  0529                     u2461:	
  3434  0529  2D35               	goto	l2657
  3435  052A                     u2460:	
  3436  052A                     l2655:	
  3437  052A  09AF               	comf	___aldiv@quotient,f
  3438  052B  09B0               	comf	___aldiv@quotient+1,f
  3439  052C  09B1               	comf	___aldiv@quotient+2,f
  3440  052D  09B2               	comf	___aldiv@quotient+3,f
  3441  052E  0AAF               	incf	___aldiv@quotient,f
  3442  052F  1903               	skipnz
  3443  0530  0AB0               	incf	___aldiv@quotient+1,f
  3444  0531  1903               	skipnz
  3445  0532  0AB1               	incf	___aldiv@quotient+2,f
  3446  0533  1903               	skipnz
  3447  0534  0AB2               	incf	___aldiv@quotient+3,f
  3448  0535                     l2657:	
  3449  0535  0832               	movf	___aldiv@quotient+3,w
  3450  0536  00A7               	movwf	?___aldiv+3
  3451  0537  0831               	movf	___aldiv@quotient+2,w
  3452  0538  00A6               	movwf	?___aldiv+2
  3453  0539  0830               	movf	___aldiv@quotient+1,w
  3454  053A  00A5               	movwf	?___aldiv+1
  3455  053B  082F               	movf	___aldiv@quotient,w
  3456  053C  00A4               	movwf	?___aldiv
  3457  053D                     l510:	
  3458  053D  0008               	return
  3459  053E                     __end_of___aldiv:	
  3460                           
  3461                           	psect	text10
  3462  05DA                     __ptext10:	
  3463 ;; *************** function _SetReceivedTimes *****************
  3464 ;; Defined at:
  3465 ;;		line 76 in file "./CustomLib/TrafficLight.h"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  3468 ;;		 -> dataFromGateway(15), 
  3469 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  3470 ;;		 -> Semafori(32), 
  3471 ;;  _to_update      1   13[BANK0 ] PTR struct .
  3472 ;;		 -> to_update(7), 
  3473 ;;  _id_semaforo    1   14[BANK0 ] unsigned char 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  _dataFromGat    1   26[BANK0 ] PTR unsigned char 
  3476 ;;		 -> dataFromGateway(15), 
  3477 ;;  index           1   27[BANK0 ] unsigned char 
  3478 ;;  semaforoId      1   24[BANK0 ] unsigned char 
  3479 ;;  colorId         1   23[BANK0 ] unsigned char 
  3480 ;;  i               1   25[BANK0 ] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3490 ;;      Params:         0       3       0       0       0
  3491 ;;      Locals:         0       5       0       0       0
  3492 ;;      Temps:          0       8       0       0       0
  3493 ;;      Totals:         0      16       0       0       0
  3494 ;;Total ram usage:       16 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    4
  3497 ;; This function calls:
  3498 ;;		_GetTime
  3499 ;;		___bmul
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function _SetReceivedTimes
  3507  05DA                     _SetReceivedTimes:	
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3511                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  3512  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3513  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3514  05DC  00BA               	movwf	SetReceivedTimes@_dataFromGateway
  3515  05DD                     l2823:	
  3516                           
  3517                           ;./CustomLib/TrafficLight.h: 76: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori, Update *_to_update, unsigned char _id_semaforo);./CustomLib/TrafficL
      +                          ight.h: 77: {;./CustomLib/TrafficLight.h: 78:                 for (unsigned char i = 0; 
      +                          i < 3; i++)
  3518  05DD  01B9               	clrf	SetReceivedTimes@i
  3519  05DE                     l2825:	
  3520  05DE  3003               	movlw	3
  3521  05DF  0239               	subwf	SetReceivedTimes@i,w
  3522  05E0  1C03               	skipc
  3523  05E1  2DE3               	goto	u2741
  3524  05E2  2DE4               	goto	u2740
  3525  05E3                     u2741:	
  3526  05E3  2DE5               	goto	l2829
  3527  05E4                     u2740:	
  3528  05E4  2E6E               	goto	l165
  3529  05E5                     l2829:	
  3530                           
  3531                           ;./CustomLib/TrafficLight.h: 79:                 {;./CustomLib/TrafficLight.h: 80:      
      +                                         unsigned char index = i * 5;
  3532  05E5  3005               	movlw	5
  3533  05E6  00AF               	movwf	??_SetReceivedTimes
  3534  05E7  082F               	movf	??_SetReceivedTimes,w
  3535  05E8  00A4               	movwf	___bmul@multiplicand
  3536  05E9  0839               	movf	SetReceivedTimes@i,w
  3537  05EA  120A  158A  2532  120A  118A  	fcall	___bmul
  3538  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3539  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3540  05F1  00B0               	movwf	??_SetReceivedTimes+1
  3541  05F2  0830               	movf	??_SetReceivedTimes+1,w
  3542  05F3  00BB               	movwf	SetReceivedTimes@index
  3543  05F4                     l2831:	
  3544                           
  3545                           ;./CustomLib/TrafficLight.h: 81:                     unsigned char semaforoId = (_dataFr
      +                          omGateway[index] >> 1) & 0x0F;
  3546  05F4  083B               	movf	SetReceivedTimes@index,w
  3547  05F5  073A               	addwf	SetReceivedTimes@_dataFromGateway,w
  3548  05F6  00AF               	movwf	??_SetReceivedTimes
  3549  05F7  082F               	movf	??_SetReceivedTimes,w
  3550  05F8  0084               	movwf	4
  3551  05F9  1783               	bsf	3,7	;select IRP bank2
  3552  05FA  0800               	movf	0,w
  3553  05FB  00B0               	movwf	??_SetReceivedTimes+1
  3554  05FC  1003               	clrc
  3555  05FD  0C30               	rrf	??_SetReceivedTimes+1,w
  3556  05FE  390F               	andlw	15
  3557  05FF  00B1               	movwf	??_SetReceivedTimes+2
  3558  0600  0831               	movf	??_SetReceivedTimes+2,w
  3559  0601  00B8               	movwf	SetReceivedTimes@semaforoId
  3560  0602                     l2833:	
  3561                           
  3562                           ;./CustomLib/TrafficLight.h: 82:                     unsigned char colorId = ((_dataFrom
      +                          Gateway[index] >> 5) & 0x03) - 1;
  3563  0602  083B               	movf	SetReceivedTimes@index,w
  3564  0603  073A               	addwf	SetReceivedTimes@_dataFromGateway,w
  3565  0604  00AF               	movwf	??_SetReceivedTimes
  3566  0605  082F               	movf	??_SetReceivedTimes,w
  3567  0606  0084               	movwf	4
  3568  0607  0800               	movf	0,w
  3569  0608  00B0               	movwf	??_SetReceivedTimes+1
  3570  0609  3005               	movlw	5
  3571  060A                     u2755:	
  3572  060A  1003               	clrc
  3573  060B  0CB0               	rrf	??_SetReceivedTimes+1,f
  3574  060C  3EFF               	addlw	-1
  3575  060D  1D03               	skipz
  3576  060E  2E0A               	goto	u2755
  3577  060F  0830               	movf	??_SetReceivedTimes+1,w
  3578  0610  3903               	andlw	3
  3579  0611  3EFF               	addlw	255
  3580  0612  00B1               	movwf	??_SetReceivedTimes+2
  3581  0613  0831               	movf	??_SetReceivedTimes+2,w
  3582  0614  00B7               	movwf	SetReceivedTimes@colorId
  3583  0615                     l2835:	
  3584                           
  3585                           ;./CustomLib/TrafficLight.h: 84:                     if(semaforoId != _id_semaforo)
  3586  0615  0838               	movf	SetReceivedTimes@semaforoId,w
  3587  0616  062E               	xorwf	SetReceivedTimes@_id_semaforo,w
  3588  0617  1903               	skipnz
  3589  0618  2E1A               	goto	u2761
  3590  0619  2E1B               	goto	u2760
  3591  061A                     u2761:	
  3592  061A  2E48               	goto	l2839
  3593  061B                     u2760:	
  3594  061B                     l2837:	
  3595                           
  3596                           ;./CustomLib/TrafficLight.h: 85:                     {;./CustomLib/TrafficLight.h: 86:  
      +                                                 (*_semafori[semaforoId]).times[colorId] = GetTime(index, _dataFro
      +                          mGateway);
  3597  061B  083A               	movf	SetReceivedTimes@_dataFromGateway,w
  3598  061C  00AF               	movwf	??_SetReceivedTimes
  3599  061D  082F               	movf	??_SetReceivedTimes,w
  3600  061E  00A4               	movwf	GetTime@_dataFromGateway
  3601  061F  083B               	movf	SetReceivedTimes@index,w
  3602  0620  120A  158A  261C  120A  118A  	fcall	_GetTime
  3603  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0626  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0627  0838               	movf	SetReceivedTimes@semaforoId,w
  3606  0628  00B0               	movwf	??_SetReceivedTimes+1
  3607  0629  0730               	addwf	??_SetReceivedTimes+1,w
  3608  062A  072C               	addwf	SetReceivedTimes@_semafori,w
  3609  062B  00B1               	movwf	??_SetReceivedTimes+2
  3610  062C  0831               	movf	??_SetReceivedTimes+2,w
  3611  062D  0084               	movwf	4
  3612  062E  1783               	bsf	3,7	;select IRP bank2
  3613  062F  0800               	movf	0,w
  3614  0630  00B2               	movwf	??_SetReceivedTimes+3
  3615  0631  0A84               	incf	4,f
  3616  0632  0800               	movf	0,w
  3617  0633  00B3               	movwf	??_SetReceivedTimes+4
  3618  0634  0837               	movf	SetReceivedTimes@colorId,w
  3619  0635  00B4               	movwf	??_SetReceivedTimes+5
  3620  0636  0734               	addwf	??_SetReceivedTimes+5,w
  3621  0637  0732               	addwf	??_SetReceivedTimes+3,w
  3622  0638  00B5               	movwf	??_SetReceivedTimes+6
  3623  0639  0833               	movf	??_SetReceivedTimes+4,w
  3624  063A  1803               	skipnc
  3625  063B  3E01               	addlw	1
  3626  063C  00B6               	movwf	??_SetReceivedTimes+7
  3627  063D  0835               	movf	??_SetReceivedTimes+6,w
  3628  063E  0084               	movwf	4
  3629  063F  1783               	bsf	3,7
  3630  0640  1C36               	btfss	??_SetReceivedTimes+7,0
  3631  0641  1383               	bcf	3,7
  3632  0642  0824               	movf	?_GetTime,w
  3633  0643  0080               	movwf	0
  3634  0644  0A84               	incf	4,f
  3635  0645  0825               	movf	?_GetTime+1,w
  3636  0646  0080               	movwf	0
  3637                           
  3638                           ;./CustomLib/TrafficLight.h: 87:                     }
  3639  0647  2E69               	goto	l2843
  3640  0648                     l2839:	
  3641                           
  3642                           ;./CustomLib/TrafficLight.h: 89:                     {;./CustomLib/TrafficLight.h: 90:  
      +                                                 (*_to_update).id=semaforoId;
  3643  0648  0838               	movf	SetReceivedTimes@semaforoId,w
  3644  0649  00AF               	movwf	??_SetReceivedTimes
  3645  064A  082D               	movf	SetReceivedTimes@_to_update,w
  3646  064B  3E06               	addlw	6
  3647  064C  0084               	movwf	4
  3648  064D  082F               	movf	??_SetReceivedTimes,w
  3649  064E  1383               	bcf	3,7	;select IRP bank0
  3650  064F  0080               	movwf	0
  3651  0650                     l2841:	
  3652                           
  3653                           ;./CustomLib/TrafficLight.h: 91:                         (*_to_update).new_times[colorId
      +                          ]=GetTime(index, _dataFromGateway);
  3654  0650  083A               	movf	SetReceivedTimes@_dataFromGateway,w
  3655  0651  00AF               	movwf	??_SetReceivedTimes
  3656  0652  082F               	movf	??_SetReceivedTimes,w
  3657  0653  00A4               	movwf	GetTime@_dataFromGateway
  3658  0654  083B               	movf	SetReceivedTimes@index,w
  3659  0655  120A  158A  261C  120A  118A  	fcall	_GetTime
  3660  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3661  065B  1303               	bcf	3,6	;RP1=0, select bank0
  3662  065C  0837               	movf	SetReceivedTimes@colorId,w
  3663  065D  00B0               	movwf	??_SetReceivedTimes+1
  3664  065E  0730               	addwf	??_SetReceivedTimes+1,w
  3665  065F  072D               	addwf	SetReceivedTimes@_to_update,w
  3666  0660  00B1               	movwf	??_SetReceivedTimes+2
  3667  0661  0831               	movf	??_SetReceivedTimes+2,w
  3668  0662  0084               	movwf	4
  3669  0663  0824               	movf	?_GetTime,w
  3670  0664  1383               	bcf	3,7	;select IRP bank0
  3671  0665  0080               	movwf	0
  3672  0666  0A84               	incf	4,f
  3673  0667  0825               	movf	?_GetTime+1,w
  3674  0668  0080               	movwf	0
  3675  0669                     l2843:	
  3676                           
  3677                           ;./CustomLib/TrafficLight.h: 93:                 }
  3678  0669  3001               	movlw	1
  3679  066A  00AF               	movwf	??_SetReceivedTimes
  3680  066B  082F               	movf	??_SetReceivedTimes,w
  3681  066C  07B9               	addwf	SetReceivedTimes@i,f
  3682  066D  2DDE               	goto	l2825
  3683  066E                     l165:	
  3684  066E  0008               	return
  3685  066F                     __end_of_SetReceivedTimes:	
  3686                           
  3687                           	psect	text11
  3688  0D32                     __ptext11:	
  3689 ;; *************** function ___bmul *****************
  3690 ;; Defined at:
  3691 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  multiplier      1    wreg     unsigned char 
  3694 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  multiplier      1    7[BANK0 ] unsigned char 
  3697 ;;  product         1    6[BANK0 ] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      unsigned char 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3707 ;;      Params:         0       1       0       0       0
  3708 ;;      Locals:         0       2       0       0       0
  3709 ;;      Temps:          0       1       0       0       0
  3710 ;;      Totals:         0       4       0       0       0
  3711 ;;Total ram usage:        4 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    3
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_SetReceivedTimes
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           
  3722                           ;psect for function ___bmul
  3723  0D32                     ___bmul:	
  3724                           
  3725                           ;incstack = 0
  3726                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3727                           ;___bmul@multiplier stored from wreg
  3728  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0D34  00A7               	movwf	___bmul@multiplier
  3731  0D35                     l2607:	
  3732  0D35  01A6               	clrf	___bmul@product
  3733  0D36                     l2609:	
  3734  0D36  1C27               	btfss	___bmul@multiplier,0
  3735  0D37  2D39               	goto	u2351
  3736  0D38  2D3A               	goto	u2350
  3737  0D39                     u2351:	
  3738  0D39  2D3E               	goto	l2613
  3739  0D3A                     u2350:	
  3740  0D3A                     l2611:	
  3741  0D3A  0824               	movf	___bmul@multiplicand,w
  3742  0D3B  00A5               	movwf	??___bmul
  3743  0D3C  0825               	movf	??___bmul,w
  3744  0D3D  07A6               	addwf	___bmul@product,f
  3745  0D3E                     l2613:	
  3746  0D3E  1003               	clrc
  3747  0D3F  0DA4               	rlf	___bmul@multiplicand,f
  3748  0D40                     l2615:	
  3749  0D40  1003               	clrc
  3750  0D41  0CA7               	rrf	___bmul@multiplier,f
  3751  0D42  0827               	movf	___bmul@multiplier,w
  3752  0D43  1D03               	btfss	3,2
  3753  0D44  2D46               	goto	u2361
  3754  0D45  2D47               	goto	u2360
  3755  0D46                     u2361:	
  3756  0D46  2D36               	goto	l2609
  3757  0D47                     u2360:	
  3758  0D47                     l2617:	
  3759  0D47  0826               	movf	___bmul@product,w
  3760  0D48                     l461:	
  3761  0D48  0008               	return
  3762  0D49                     __end_of___bmul:	
  3763                           
  3764                           	psect	text12
  3765  0E1C                     __ptext12:	
  3766 ;; *************** function _GetTime *****************
  3767 ;; Defined at:
  3768 ;;		line 32 in file "./CustomLib/TrafficLight.h"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  index           1    wreg     unsigned char 
  3771 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  3772 ;;		 -> dataFromGateway(15), 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  index           1    8[BANK0 ] unsigned char 
  3775 ;;  tmp             2   10[BANK0 ] int 
  3776 ;;  shortInt        1    9[BANK0 ] struct .
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  2    4[BANK0 ] int 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3786 ;;      Params:         0       2       0       0       0
  3787 ;;      Locals:         0       4       0       0       0
  3788 ;;      Temps:          0       2       0       0       0
  3789 ;;      Totals:         0       8       0       0       0
  3790 ;;Total ram usage:        8 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    3
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_SetReceivedTimes
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function _GetTime
  3802  0E1C                     _GetTime:	
  3803                           
  3804                           ;incstack = 0
  3805                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  3806                           ;GetTime@index stored from wreg
  3807  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0E1E  00A8               	movwf	GetTime@index
  3810  0E1F                     l2575:	
  3811                           
  3812                           ;./CustomLib/TrafficLight.h: 32: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 33: {;./CustomLib/TrafficLight.h: 34:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 38:     } shortInt;;./CustomLib/TrafficLight.h: 40:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  3813  0E1F  0828               	movf	GetTime@index,w
  3814  0E20  0724               	addwf	GetTime@_dataFromGateway,w
  3815  0E21  00A6               	movwf	??_GetTime
  3816  0E22  0826               	movf	??_GetTime,w
  3817  0E23  3E03               	addlw	3
  3818  0E24  0084               	movwf	4
  3819  0E25  307F               	movlw	127
  3820  0E26  1783               	bsf	3,7	;select IRP bank2
  3821  0E27  0500               	andwf	0,w
  3822  0E28  00A7               	movwf	??_GetTime+1
  3823  0E29  0829               	movf	GetTime@shortInt,w
  3824  0E2A  0627               	xorwf	??_GetTime+1,w
  3825  0E2B  3980               	andlw	-128
  3826  0E2C  0627               	xorwf	??_GetTime+1,w
  3827  0E2D  00A9               	movwf	GetTime@shortInt
  3828  0E2E                     l2577:	
  3829                           
  3830                           ;./CustomLib/TrafficLight.h: 41:     tmp = shortInt.Val;
  3831  0E2E  0829               	movf	GetTime@shortInt,w
  3832  0E2F  397F               	andlw	127
  3833  0E30  00A6               	movwf	??_GetTime
  3834  0E31  01A7               	clrf	??_GetTime+1
  3835  0E32  0826               	movf	??_GetTime,w
  3836  0E33  00AA               	movwf	GetTime@tmp
  3837  0E34  0827               	movf	??_GetTime+1,w
  3838  0E35  00AB               	movwf	GetTime@tmp+1
  3839  0E36                     l2579:	
  3840                           
  3841                           ;./CustomLib/TrafficLight.h: 42:     tmp = (tmp << 7) & 0x80;
  3842  0E36  082B               	movf	GetTime@tmp+1,w
  3843  0E37  00A7               	movwf	??_GetTime+1
  3844  0E38  082A               	movf	GetTime@tmp,w
  3845  0E39  00A6               	movwf	??_GetTime
  3846  0E3A  3007               	movlw	7
  3847  0E3B  00FF               	movwf	btemp+1
  3848  0E3C                     u2295:	
  3849  0E3C  1003               	clrc
  3850  0E3D  0DA6               	rlf	??_GetTime,f
  3851  0E3E  0DA7               	rlf	??_GetTime+1,f
  3852  0E3F  0BFF               	decfsz	btemp+1,f
  3853  0E40  2E3C               	goto	u2295
  3854  0E41  3080               	movlw	128
  3855  0E42  0526               	andwf	??_GetTime,w
  3856  0E43  00AA               	movwf	GetTime@tmp
  3857  0E44  3000               	movlw	0
  3858  0E45  0527               	andwf	??_GetTime+1,w
  3859  0E46  00AB               	movwf	GetTime@tmp+1
  3860  0E47                     l2581:	
  3861                           
  3862                           ;./CustomLib/TrafficLight.h: 44:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  3863  0E47  0828               	movf	GetTime@index,w
  3864  0E48  0724               	addwf	GetTime@_dataFromGateway,w
  3865  0E49  00A6               	movwf	??_GetTime
  3866  0E4A  0826               	movf	??_GetTime,w
  3867  0E4B  3E02               	addlw	2
  3868  0E4C  0084               	movwf	4
  3869  0E4D  307F               	movlw	127
  3870  0E4E  0500               	andwf	0,w
  3871  0E4F  00A7               	movwf	??_GetTime+1
  3872  0E50  0829               	movf	GetTime@shortInt,w
  3873  0E51  0627               	xorwf	??_GetTime+1,w
  3874  0E52  3980               	andlw	-128
  3875  0E53  0627               	xorwf	??_GetTime+1,w
  3876  0E54  00A9               	movwf	GetTime@shortInt
  3877  0E55                     l2583:	
  3878                           
  3879                           ;./CustomLib/TrafficLight.h: 45:     tmp = tmp | shortInt.Val;
  3880  0E55  0829               	movf	GetTime@shortInt,w
  3881  0E56  397F               	andlw	127
  3882  0E57  00A6               	movwf	??_GetTime
  3883  0E58  082A               	movf	GetTime@tmp,w
  3884  0E59  0426               	iorwf	??_GetTime,w
  3885  0E5A  00AA               	movwf	GetTime@tmp
  3886  0E5B  082B               	movf	GetTime@tmp+1,w
  3887  0E5C  00AB               	movwf	GetTime@tmp+1
  3888  0E5D                     l2585:	
  3889                           
  3890                           ;./CustomLib/TrafficLight.h: 47:     return tmp;
  3891  0E5D  082B               	movf	GetTime@tmp+1,w
  3892  0E5E  00A5               	movwf	?_GetTime+1
  3893  0E5F  082A               	movf	GetTime@tmp,w
  3894  0E60  00A4               	movwf	?_GetTime
  3895  0E61                     l146:	
  3896  0E61  0008               	return
  3897  0E62                     __end_of_GetTime:	
  3898                           
  3899                           	psect	text13
  3900  0D1D                     __ptext13:	
  3901 ;; *************** function _SetDisplay *****************
  3902 ;; Defined at:
  3903 ;;		line 375 in file "main.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  d1              1    wreg     unsigned char 
  3906 ;;  d2              1    4[BANK0 ] unsigned char 
  3907 ;;  d3              1    5[BANK0 ] unsigned char 
  3908 ;;  value           1    6[BANK0 ] unsigned char 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  d1              1    7[BANK0 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3920 ;;      Params:         0       3       0       0       0
  3921 ;;      Locals:         0       1       0       0       0
  3922 ;;      Temps:          0       0       0       0       0
  3923 ;;      Totals:         0       4       0       0       0
  3924 ;;Total ram usage:        4 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    3
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           
  3935                           ;psect for function _SetDisplay
  3936  0D1D                     _SetDisplay:	
  3937                           
  3938                           ;incstack = 0
  3939                           ; Regs used in _SetDisplay: [wreg+status,0]
  3940                           ;SetDisplay@d1 stored from wreg
  3941  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0D1F  00A7               	movwf	SetDisplay@d1
  3944  0D20                     l2891:	
  3945                           
  3946                           ;main.c: 375: void SetDisplay(char d1, char d2, char d3, char value);main.c: 376: {;main
      +                          .c: 377:     PORTAbits.RA2 = d1;
  3947  0D20  0C27               	rrf	SetDisplay@d1,w
  3948  0D21  1C03               	skipc
  3949  0D22  1105               	bcf	5,2	;volatile
  3950  0D23  1803               	skipnc
  3951  0D24  1505               	bsf	5,2	;volatile
  3952                           
  3953                           ;main.c: 378:     PORTAbits.RA3 = d2;
  3954  0D25  0C24               	rrf	SetDisplay@d2,w
  3955  0D26  1C03               	skipc
  3956  0D27  1185               	bcf	5,3	;volatile
  3957  0D28  1803               	skipnc
  3958  0D29  1585               	bsf	5,3	;volatile
  3959                           
  3960                           ;main.c: 379:     PORTAbits.RA4 = d3;
  3961  0D2A  0C25               	rrf	SetDisplay@d3,w
  3962  0D2B  1C03               	skipc
  3963  0D2C  1205               	bcf	5,4	;volatile
  3964  0D2D  1803               	skipnc
  3965  0D2E  1605               	bsf	5,4	;volatile
  3966  0D2F                     l2893:	
  3967                           
  3968                           ;main.c: 380:     PORTD = value;
  3969  0D2F  0826               	movf	SetDisplay@value,w
  3970  0D30  0088               	movwf	8	;volatile
  3971  0D31                     l331:	
  3972  0D31  0008               	return
  3973  0D32                     __end_of_SetDisplay:	
  3974                           
  3975                           	psect	text14
  3976  066F                     __ptext14:	
  3977 ;; *************** function _SetDefaultTimers *****************
  3978 ;; Defined at:
  3979 ;;		line 52 in file "./CustomLib/TrafficLight.h"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  rosso           2    4[BANK0 ] int 
  3982 ;;  verde           2    6[BANK0 ] int 
  3983 ;;  giallo          2    8[BANK0 ] int 
  3984 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  3985 ;;		 -> Semafori(32), 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  i               1   19[BANK0 ] unsigned char 
  3988 ;;  l               1   18[BANK0 ] unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3998 ;;      Params:         0       7       0       0       0
  3999 ;;      Locals:         0       2       0       0       0
  4000 ;;      Temps:          0       7       0       0       0
  4001 ;;      Totals:         0      16       0       0       0
  4002 ;;Total ram usage:       16 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    3
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_main
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function _SetDefaultTimers
  4014  066F                     _SetDefaultTimers:	
  4015  066F                     l2789:	
  4016                           ;incstack = 0
  4017                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4018                           
  4019                           
  4020                           ;./CustomLib/TrafficLight.h: 52: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 53: {;./CustomLib/TrafficLight.h: 54: 
      +                              for (unsigned char l = 0; l < 16; l++)
  4021  066F  1283               	bcf	3,5	;RP0=0, select bank0
  4022  0670  1303               	bcf	3,6	;RP1=0, select bank0
  4023  0671  01B2               	clrf	SetDefaultTimers@l
  4024  0672                     l2795:	
  4025                           
  4026                           ;./CustomLib/TrafficLight.h: 55:     {;./CustomLib/TrafficLight.h: 56:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4027  0672  01B3               	clrf	SetDefaultTimers@i
  4028  0673  2ED7               	goto	l2809
  4029  0674                     l2801:	
  4030                           
  4031                           ;./CustomLib/TrafficLight.h: 61:                 (*(_semafori)[l]).times[i] = rosso;
  4032  0674  0832               	movf	SetDefaultTimers@l,w
  4033  0675  00AB               	movwf	??_SetDefaultTimers
  4034  0676  072B               	addwf	??_SetDefaultTimers,w
  4035  0677  072A               	addwf	SetDefaultTimers@_semafori,w
  4036  0678  00AC               	movwf	??_SetDefaultTimers+1
  4037  0679  082C               	movf	??_SetDefaultTimers+1,w
  4038  067A  0084               	movwf	4
  4039  067B  1783               	bsf	3,7	;select IRP bank2
  4040  067C  0800               	movf	0,w
  4041  067D  00AD               	movwf	??_SetDefaultTimers+2
  4042  067E  0A84               	incf	4,f
  4043  067F  0800               	movf	0,w
  4044  0680  00AE               	movwf	??_SetDefaultTimers+3
  4045  0681  0833               	movf	SetDefaultTimers@i,w
  4046  0682  00AF               	movwf	??_SetDefaultTimers+4
  4047  0683  072F               	addwf	??_SetDefaultTimers+4,w
  4048  0684  072D               	addwf	??_SetDefaultTimers+2,w
  4049  0685  00B0               	movwf	??_SetDefaultTimers+5
  4050  0686  082E               	movf	??_SetDefaultTimers+3,w
  4051  0687  1803               	skipnc
  4052  0688  3E01               	addlw	1
  4053  0689  00B1               	movwf	??_SetDefaultTimers+6
  4054  068A  0830               	movf	??_SetDefaultTimers+5,w
  4055  068B  0084               	movwf	4
  4056  068C  1783               	bsf	3,7
  4057  068D  1C31               	btfss	??_SetDefaultTimers+6,0
  4058  068E  1383               	bcf	3,7
  4059  068F  0824               	movf	SetDefaultTimers@rosso,w
  4060  0690  0080               	movwf	0
  4061  0691  0A84               	incf	4,f
  4062  0692  0825               	movf	SetDefaultTimers@rosso+1,w
  4063  0693  0080               	movwf	0
  4064                           
  4065                           ;./CustomLib/TrafficLight.h: 62:                 break;
  4066  0694  2EEA               	goto	l2811
  4067  0695                     l2803:	
  4068                           
  4069                           ;./CustomLib/TrafficLight.h: 64:                 (*(_semafori)[l]).times[i] = verde;
  4070  0695  0832               	movf	SetDefaultTimers@l,w
  4071  0696  00AB               	movwf	??_SetDefaultTimers
  4072  0697  072B               	addwf	??_SetDefaultTimers,w
  4073  0698  072A               	addwf	SetDefaultTimers@_semafori,w
  4074  0699  00AC               	movwf	??_SetDefaultTimers+1
  4075  069A  082C               	movf	??_SetDefaultTimers+1,w
  4076  069B  0084               	movwf	4
  4077  069C  1783               	bsf	3,7	;select IRP bank2
  4078  069D  0800               	movf	0,w
  4079  069E  00AD               	movwf	??_SetDefaultTimers+2
  4080  069F  0A84               	incf	4,f
  4081  06A0  0800               	movf	0,w
  4082  06A1  00AE               	movwf	??_SetDefaultTimers+3
  4083  06A2  0833               	movf	SetDefaultTimers@i,w
  4084  06A3  00AF               	movwf	??_SetDefaultTimers+4
  4085  06A4  072F               	addwf	??_SetDefaultTimers+4,w
  4086  06A5  072D               	addwf	??_SetDefaultTimers+2,w
  4087  06A6  00B0               	movwf	??_SetDefaultTimers+5
  4088  06A7  082E               	movf	??_SetDefaultTimers+3,w
  4089  06A8  1803               	skipnc
  4090  06A9  3E01               	addlw	1
  4091  06AA  00B1               	movwf	??_SetDefaultTimers+6
  4092  06AB  0830               	movf	??_SetDefaultTimers+5,w
  4093  06AC  0084               	movwf	4
  4094  06AD  1783               	bsf	3,7
  4095  06AE  1C31               	btfss	??_SetDefaultTimers+6,0
  4096  06AF  1383               	bcf	3,7
  4097  06B0  0826               	movf	SetDefaultTimers@verde,w
  4098  06B1  0080               	movwf	0
  4099  06B2  0A84               	incf	4,f
  4100  06B3  0827               	movf	SetDefaultTimers@verde+1,w
  4101  06B4  0080               	movwf	0
  4102                           
  4103                           ;./CustomLib/TrafficLight.h: 65:                 break;
  4104  06B5  2EEA               	goto	l2811
  4105  06B6                     l2805:	
  4106                           
  4107                           ;./CustomLib/TrafficLight.h: 67:                 (*(_semafori)[l]).times[i] = giallo;
  4108  06B6  0832               	movf	SetDefaultTimers@l,w
  4109  06B7  00AB               	movwf	??_SetDefaultTimers
  4110  06B8  072B               	addwf	??_SetDefaultTimers,w
  4111  06B9  072A               	addwf	SetDefaultTimers@_semafori,w
  4112  06BA  00AC               	movwf	??_SetDefaultTimers+1
  4113  06BB  082C               	movf	??_SetDefaultTimers+1,w
  4114  06BC  0084               	movwf	4
  4115  06BD  1783               	bsf	3,7	;select IRP bank2
  4116  06BE  0800               	movf	0,w
  4117  06BF  00AD               	movwf	??_SetDefaultTimers+2
  4118  06C0  0A84               	incf	4,f
  4119  06C1  0800               	movf	0,w
  4120  06C2  00AE               	movwf	??_SetDefaultTimers+3
  4121  06C3  0833               	movf	SetDefaultTimers@i,w
  4122  06C4  00AF               	movwf	??_SetDefaultTimers+4
  4123  06C5  072F               	addwf	??_SetDefaultTimers+4,w
  4124  06C6  072D               	addwf	??_SetDefaultTimers+2,w
  4125  06C7  00B0               	movwf	??_SetDefaultTimers+5
  4126  06C8  082E               	movf	??_SetDefaultTimers+3,w
  4127  06C9  1803               	skipnc
  4128  06CA  3E01               	addlw	1
  4129  06CB  00B1               	movwf	??_SetDefaultTimers+6
  4130  06CC  0830               	movf	??_SetDefaultTimers+5,w
  4131  06CD  0084               	movwf	4
  4132  06CE  1783               	bsf	3,7
  4133  06CF  1C31               	btfss	??_SetDefaultTimers+6,0
  4134  06D0  1383               	bcf	3,7
  4135  06D1  0828               	movf	SetDefaultTimers@giallo,w
  4136  06D2  0080               	movwf	0
  4137  06D3  0A84               	incf	4,f
  4138  06D4  0829               	movf	SetDefaultTimers@giallo+1,w
  4139  06D5  0080               	movwf	0
  4140                           
  4141                           ;./CustomLib/TrafficLight.h: 68:                 break;
  4142  06D6  2EEA               	goto	l2811
  4143  06D7                     l2809:	
  4144  06D7  0833               	movf	SetDefaultTimers@i,w
  4145  06D8  00AB               	movwf	??_SetDefaultTimers
  4146  06D9  01AC               	clrf	??_SetDefaultTimers+1
  4147                           
  4148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4149                           ; Switch size 1, requested type "simple"
  4150                           ; Number of cases is 1, Range of values is 0 to 0
  4151                           ; switch strategies available:
  4152                           ; Name         Instructions Cycles
  4153                           ; simple_byte            4     3 (average)
  4154                           ; direct_byte           11     8 (fixed)
  4155                           ; jumptable            260     6 (fixed)
  4156                           ;	Chosen strategy is simple_byte
  4157  06DA  082C               	movf	??_SetDefaultTimers+1,w
  4158  06DB  3A00               	xorlw	0	; case 0
  4159  06DC  1903               	skipnz
  4160  06DD  2EDF               	goto	l3173
  4161  06DE  2EEA               	goto	l2811
  4162  06DF                     l3173:	
  4163                           
  4164                           ; Switch size 1, requested type "simple"
  4165                           ; Number of cases is 3, Range of values is 0 to 2
  4166                           ; switch strategies available:
  4167                           ; Name         Instructions Cycles
  4168                           ; simple_byte           10     6 (average)
  4169                           ; direct_byte           17     8 (fixed)
  4170                           ; jumptable            260     6 (fixed)
  4171                           ;	Chosen strategy is simple_byte
  4172  06DF  082B               	movf	??_SetDefaultTimers,w
  4173  06E0  3A00               	xorlw	0	; case 0
  4174  06E1  1903               	skipnz
  4175  06E2  2E74               	goto	l2801
  4176  06E3  3A01               	xorlw	1	; case 1
  4177  06E4  1903               	skipnz
  4178  06E5  2E95               	goto	l2803
  4179  06E6  3A03               	xorlw	3	; case 2
  4180  06E7  1903               	skipnz
  4181  06E8  2EB6               	goto	l2805
  4182  06E9  2EEA               	goto	l2811
  4183  06EA                     l2811:	
  4184                           
  4185                           ;./CustomLib/TrafficLight.h: 70:         }
  4186  06EA  3001               	movlw	1
  4187  06EB  00AB               	movwf	??_SetDefaultTimers
  4188  06EC  082B               	movf	??_SetDefaultTimers,w
  4189  06ED  07B3               	addwf	SetDefaultTimers@i,f
  4190  06EE                     l2813:	
  4191  06EE  3003               	movlw	3
  4192  06EF  0233               	subwf	SetDefaultTimers@i,w
  4193  06F0  1C03               	skipc
  4194  06F1  2EF3               	goto	u2721
  4195  06F2  2EF4               	goto	u2720
  4196  06F3                     u2721:	
  4197  06F3  2ED7               	goto	l2809
  4198  06F4                     u2720:	
  4199  06F4                     l2815:	
  4200                           
  4201                           ;./CustomLib/TrafficLight.h: 71:     }
  4202  06F4  3001               	movlw	1
  4203  06F5  00AB               	movwf	??_SetDefaultTimers
  4204  06F6  082B               	movf	??_SetDefaultTimers,w
  4205  06F7  07B2               	addwf	SetDefaultTimers@l,f
  4206  06F8                     l2817:	
  4207  06F8  3010               	movlw	16
  4208  06F9  0232               	subwf	SetDefaultTimers@l,w
  4209  06FA  1C03               	skipc
  4210  06FB  2EFD               	goto	u2731
  4211  06FC  2EFE               	goto	u2730
  4212  06FD                     u2731:	
  4213  06FD  2E72               	goto	l2795
  4214  06FE                     u2730:	
  4215  06FE                     l158:	
  4216  06FE  0008               	return
  4217  06FF                     __end_of_SetDefaultTimers:	
  4218                           
  4219                           	psect	text15
  4220  053E                     __ptext15:	
  4221 ;; *************** function _GetDigits *****************
  4222 ;; Defined at:
  4223 ;;		line 29 in file "./CustomLib/Conversions.h"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  centinaia       1    wreg     PTR unsigned char 
  4226 ;;		 -> centinaia(1), 
  4227 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  4228 ;;		 -> decine(1), 
  4229 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  4230 ;;		 -> unita(1), 
  4231 ;;  Time            2   22[BANK0 ] int 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  4234 ;;		 -> centinaia(1), 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         0       4       0       0       0
  4245 ;;      Locals:         0       3       0       0       0
  4246 ;;      Temps:          0       1       0       0       0
  4247 ;;      Totals:         0       8       0       0       0
  4248 ;;Total ram usage:        8 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    4
  4251 ;; This function calls:
  4252 ;;		___awdiv
  4253 ;;		___awmod
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           
  4260                           ;psect for function _GetDigits
  4261  053E                     _GetDigits:	
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4265                           ;GetDigits@centinaia stored from wreg
  4266  053E  1283               	bcf	3,5	;RP0=0, select bank0
  4267  053F  1303               	bcf	3,6	;RP1=0, select bank0
  4268  0540  00BB               	movwf	GetDigits@centinaia
  4269  0541                     l2747:	
  4270                           
  4271                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     while(Time/1000>0)
  4272  0541  2D57               	goto	l2751
  4273  0542                     l2749:	
  4274                           
  4275                           ;./CustomLib/Conversions.h: 32:     {;./CustomLib/Conversions.h: 33:         Time=Time/1
      +                          0;
  4276  0542  300A               	movlw	10
  4277  0543  1283               	bcf	3,5	;RP0=0, select bank0
  4278  0544  1303               	bcf	3,6	;RP1=0, select bank0
  4279  0545  00AB               	movwf	___awdiv@divisor
  4280  0546  3000               	movlw	0
  4281  0547  00AC               	movwf	___awdiv@divisor+1
  4282  0548  0837               	movf	GetDigits@Time+1,w
  4283  0549  00AE               	movwf	___awdiv@dividend+1
  4284  054A  0836               	movf	GetDigits@Time,w
  4285  054B  00AD               	movwf	___awdiv@dividend
  4286  054C  120A  118A  26FF  120A  118A  	fcall	___awdiv
  4287  0551  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0552  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0553  082C               	movf	?___awdiv+1,w
  4290  0554  00B7               	movwf	GetDigits@Time+1
  4291  0555  082B               	movf	?___awdiv,w
  4292  0556  00B6               	movwf	GetDigits@Time
  4293  0557                     l2751:	
  4294                           
  4295                           ;./CustomLib/Conversions.h: 31:     while(Time/1000>0)
  4296  0557  30E8               	movlw	232
  4297  0558  00AB               	movwf	___awdiv@divisor
  4298  0559  3003               	movlw	3
  4299  055A  00AC               	movwf	___awdiv@divisor+1
  4300  055B  0837               	movf	GetDigits@Time+1,w
  4301  055C  00AE               	movwf	___awdiv@dividend+1
  4302  055D  0836               	movf	GetDigits@Time,w
  4303  055E  00AD               	movwf	___awdiv@dividend
  4304  055F  120A  118A  26FF  120A  118A  	fcall	___awdiv
  4305  0564  1283               	bcf	3,5	;RP0=0, select bank0
  4306  0565  1303               	bcf	3,6	;RP1=0, select bank0
  4307  0566  082C               	movf	?___awdiv+1,w
  4308  0567  3A80               	xorlw	128
  4309  0568  00FF               	movwf	btemp+1
  4310  0569  3080               	movlw	128
  4311  056A  027F               	subwf	btemp+1,w
  4312  056B  1D03               	skipz
  4313  056C  2D6F               	goto	u2665
  4314  056D  3001               	movlw	1
  4315  056E  022B               	subwf	?___awdiv,w
  4316  056F                     u2665:	
  4317  056F  1803               	skipnc
  4318  0570  2D72               	goto	u2661
  4319  0571  2D73               	goto	u2660
  4320  0572                     u2661:	
  4321  0572  2D42               	goto	l2749
  4322  0573                     u2660:	
  4323  0573                     l2753:	
  4324                           
  4325                           ;./CustomLib/Conversions.h: 36:     *centinaia = Time / 100;
  4326  0573  3064               	movlw	100
  4327  0574  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0575  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0576  00AB               	movwf	___awdiv@divisor
  4330  0577  3000               	movlw	0
  4331  0578  00AC               	movwf	___awdiv@divisor+1
  4332  0579  0837               	movf	GetDigits@Time+1,w
  4333  057A  00AE               	movwf	___awdiv@dividend+1
  4334  057B  0836               	movf	GetDigits@Time,w
  4335  057C  00AD               	movwf	___awdiv@dividend
  4336  057D  120A  118A  26FF  120A  118A  	fcall	___awdiv
  4337  0582  1283               	bcf	3,5	;RP0=0, select bank0
  4338  0583  1303               	bcf	3,6	;RP1=0, select bank0
  4339  0584  082B               	movf	?___awdiv,w
  4340  0585  00B8               	movwf	??_GetDigits
  4341  0586  083B               	movf	GetDigits@centinaia,w
  4342  0587  0084               	movwf	4
  4343  0588  0838               	movf	??_GetDigits,w
  4344  0589  1383               	bcf	3,7	;select IRP bank0
  4345  058A  0080               	movwf	0
  4346                           
  4347                           ;./CustomLib/Conversions.h: 37:     *decine = (Time % 100) / 10;
  4348  058B  300A               	movlw	10
  4349  058C  00AB               	movwf	___awdiv@divisor
  4350  058D  3000               	movlw	0
  4351  058E  00AC               	movwf	___awdiv@divisor+1
  4352  058F  0837               	movf	GetDigits@Time+1,w
  4353  0590  00A7               	movwf	___awmod@dividend+1
  4354  0591  0836               	movf	GetDigits@Time,w
  4355  0592  00A6               	movwf	___awmod@dividend
  4356  0593  3064               	movlw	100
  4357  0594  00A4               	movwf	___awmod@divisor
  4358  0595  3000               	movlw	0
  4359  0596  00A5               	movwf	___awmod@divisor+1
  4360  0597  120A  118A  2768  120A  118A  	fcall	___awmod
  4361  059C  1283               	bcf	3,5	;RP0=0, select bank0
  4362  059D  1303               	bcf	3,6	;RP1=0, select bank0
  4363  059E  0825               	movf	?___awmod+1,w
  4364  059F  00AE               	movwf	___awdiv@dividend+1
  4365  05A0  0824               	movf	?___awmod,w
  4366  05A1  00AD               	movwf	___awdiv@dividend
  4367  05A2  120A  118A  26FF  120A  118A  	fcall	___awdiv
  4368  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  4369  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  4370  05A9  082B               	movf	?___awdiv,w
  4371  05AA  00B8               	movwf	??_GetDigits
  4372  05AB  0834               	movf	GetDigits@decine,w
  4373  05AC  0084               	movwf	4
  4374  05AD  0838               	movf	??_GetDigits,w
  4375  05AE  1383               	bcf	3,7	;select IRP bank0
  4376  05AF  0080               	movwf	0
  4377  05B0                     l2755:	
  4378                           
  4379                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4380  05B0  0837               	movf	GetDigits@Time+1,w
  4381  05B1  00A7               	movwf	___awmod@dividend+1
  4382  05B2  0836               	movf	GetDigits@Time,w
  4383  05B3  00A6               	movwf	___awmod@dividend
  4384  05B4  3064               	movlw	100
  4385  05B5  00A4               	movwf	___awmod@divisor
  4386  05B6  3000               	movlw	0
  4387  05B7  00A5               	movwf	___awmod@divisor+1
  4388  05B8  120A  118A  2768  120A  118A  	fcall	___awmod
  4389  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  4390  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  4391  05BF  0825               	movf	?___awmod+1,w
  4392  05C0  00BA               	movwf	_GetDigits$1171+1
  4393  05C1  0824               	movf	?___awmod,w
  4394  05C2  00B9               	movwf	_GetDigits$1171
  4395  05C3                     l2757:	
  4396                           
  4397                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4398  05C3  300A               	movlw	10
  4399  05C4  00A4               	movwf	___awmod@divisor
  4400  05C5  3000               	movlw	0
  4401  05C6  00A5               	movwf	___awmod@divisor+1
  4402  05C7  083A               	movf	_GetDigits$1171+1,w
  4403  05C8  00A7               	movwf	___awmod@dividend+1
  4404  05C9  0839               	movf	_GetDigits$1171,w
  4405  05CA  00A6               	movwf	___awmod@dividend
  4406  05CB  120A  118A  2768  120A  118A  	fcall	___awmod
  4407  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  4408  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  4409  05D2  0824               	movf	?___awmod,w
  4410  05D3  00B8               	movwf	??_GetDigits
  4411  05D4  0835               	movf	GetDigits@unita,w
  4412  05D5  0084               	movwf	4
  4413  05D6  0838               	movf	??_GetDigits,w
  4414  05D7  1383               	bcf	3,7	;select IRP bank0
  4415  05D8  0080               	movwf	0
  4416  05D9                     l94:	
  4417  05D9  0008               	return
  4418  05DA                     __end_of_GetDigits:	
  4419                           
  4420                           	psect	text16
  4421  06FF                     __ptext16:	
  4422 ;; *************** function ___awdiv *****************
  4423 ;; Defined at:
  4424 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  divisor         2   11[BANK0 ] int 
  4427 ;;  dividend        2   13[BANK0 ] int 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  quotient        2   18[BANK0 ] int 
  4430 ;;  sign            1   17[BANK0 ] unsigned char 
  4431 ;;  counter         1   16[BANK0 ] unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  2   11[BANK0 ] int 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4441 ;;      Params:         0       4       0       0       0
  4442 ;;      Locals:         0       4       0       0       0
  4443 ;;      Temps:          0       1       0       0       0
  4444 ;;      Totals:         0       9       0       0       0
  4445 ;;Total ram usage:        9 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    3
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_map
  4452 ;;		_GetDigits
  4453 ;;		_intToString
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function ___awdiv
  4459  06FF                     ___awdiv:	
  4460  06FF                     l2661:	
  4461                           ;incstack = 0
  4462                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4463                           
  4464  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0700  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0701  01B1               	clrf	___awdiv@sign
  4467  0702                     l2663:	
  4468  0702  1FAC               	btfss	___awdiv@divisor+1,7
  4469  0703  2F05               	goto	u2471
  4470  0704  2F06               	goto	u2470
  4471  0705                     u2471:	
  4472  0705  2F0D               	goto	l2669
  4473  0706                     u2470:	
  4474  0706                     l2665:	
  4475  0706  09AB               	comf	___awdiv@divisor,f
  4476  0707  09AC               	comf	___awdiv@divisor+1,f
  4477  0708  0AAB               	incf	___awdiv@divisor,f
  4478  0709  1903               	skipnz
  4479  070A  0AAC               	incf	___awdiv@divisor+1,f
  4480  070B                     l2667:	
  4481  070B  01B1               	clrf	___awdiv@sign
  4482  070C  0AB1               	incf	___awdiv@sign,f
  4483  070D                     l2669:	
  4484  070D  1FAE               	btfss	___awdiv@dividend+1,7
  4485  070E  2F10               	goto	u2481
  4486  070F  2F11               	goto	u2480
  4487  0710                     u2481:	
  4488  0710  2F1A               	goto	l2675
  4489  0711                     u2480:	
  4490  0711                     l2671:	
  4491  0711  09AD               	comf	___awdiv@dividend,f
  4492  0712  09AE               	comf	___awdiv@dividend+1,f
  4493  0713  0AAD               	incf	___awdiv@dividend,f
  4494  0714  1903               	skipnz
  4495  0715  0AAE               	incf	___awdiv@dividend+1,f
  4496  0716                     l2673:	
  4497  0716  3001               	movlw	1
  4498  0717  00AF               	movwf	??___awdiv
  4499  0718  082F               	movf	??___awdiv,w
  4500  0719  06B1               	xorwf	___awdiv@sign,f
  4501  071A                     l2675:	
  4502  071A  01B2               	clrf	___awdiv@quotient
  4503  071B  01B3               	clrf	___awdiv@quotient+1
  4504  071C                     l2677:	
  4505  071C  082B               	movf	___awdiv@divisor,w
  4506  071D  042C               	iorwf	___awdiv@divisor+1,w
  4507  071E  1903               	btfsc	3,2
  4508  071F  2F21               	goto	u2491
  4509  0720  2F22               	goto	u2490
  4510  0721                     u2491:	
  4511  0721  2F59               	goto	l2697
  4512  0722                     u2490:	
  4513  0722                     l2679:	
  4514  0722  01B0               	clrf	___awdiv@counter
  4515  0723  0AB0               	incf	___awdiv@counter,f
  4516  0724  2F30               	goto	l2685
  4517  0725                     l2681:	
  4518  0725  3001               	movlw	1
  4519  0726                     u2505:	
  4520  0726  1003               	clrc
  4521  0727  0DAB               	rlf	___awdiv@divisor,f
  4522  0728  0DAC               	rlf	___awdiv@divisor+1,f
  4523  0729  3EFF               	addlw	-1
  4524  072A  1D03               	skipz
  4525  072B  2F26               	goto	u2505
  4526  072C                     l2683:	
  4527  072C  3001               	movlw	1
  4528  072D  00AF               	movwf	??___awdiv
  4529  072E  082F               	movf	??___awdiv,w
  4530  072F  07B0               	addwf	___awdiv@counter,f
  4531  0730                     l2685:	
  4532  0730  1FAC               	btfss	___awdiv@divisor+1,7
  4533  0731  2F33               	goto	u2511
  4534  0732  2F34               	goto	u2510
  4535  0733                     u2511:	
  4536  0733  2F25               	goto	l2681
  4537  0734                     u2510:	
  4538  0734                     l2687:	
  4539  0734  3001               	movlw	1
  4540  0735                     u2525:	
  4541  0735  1003               	clrc
  4542  0736  0DB2               	rlf	___awdiv@quotient,f
  4543  0737  0DB3               	rlf	___awdiv@quotient+1,f
  4544  0738  3EFF               	addlw	-1
  4545  0739  1D03               	skipz
  4546  073A  2F35               	goto	u2525
  4547  073B  082C               	movf	___awdiv@divisor+1,w
  4548  073C  022E               	subwf	___awdiv@dividend+1,w
  4549  073D  1D03               	skipz
  4550  073E  2F41               	goto	u2535
  4551  073F  082B               	movf	___awdiv@divisor,w
  4552  0740  022D               	subwf	___awdiv@dividend,w
  4553  0741                     u2535:	
  4554  0741  1C03               	skipc
  4555  0742  2F44               	goto	u2531
  4556  0743  2F45               	goto	u2530
  4557  0744                     u2531:	
  4558  0744  2F4C               	goto	l2693
  4559  0745                     u2530:	
  4560  0745                     l2689:	
  4561  0745  082B               	movf	___awdiv@divisor,w
  4562  0746  02AD               	subwf	___awdiv@dividend,f
  4563  0747  082C               	movf	___awdiv@divisor+1,w
  4564  0748  1C03               	skipc
  4565  0749  03AE               	decf	___awdiv@dividend+1,f
  4566  074A  02AE               	subwf	___awdiv@dividend+1,f
  4567  074B                     l2691:	
  4568  074B  1432               	bsf	___awdiv@quotient,0
  4569  074C                     l2693:	
  4570  074C  3001               	movlw	1
  4571  074D                     u2545:	
  4572  074D  1003               	clrc
  4573  074E  0CAC               	rrf	___awdiv@divisor+1,f
  4574  074F  0CAB               	rrf	___awdiv@divisor,f
  4575  0750  3EFF               	addlw	-1
  4576  0751  1D03               	skipz
  4577  0752  2F4D               	goto	u2545
  4578  0753                     l2695:	
  4579  0753  3001               	movlw	1
  4580  0754  02B0               	subwf	___awdiv@counter,f
  4581  0755  1D03               	btfss	3,2
  4582  0756  2F58               	goto	u2551
  4583  0757  2F59               	goto	u2550
  4584  0758                     u2551:	
  4585  0758  2F34               	goto	l2687
  4586  0759                     u2550:	
  4587  0759                     l2697:	
  4588  0759  0831               	movf	___awdiv@sign,w
  4589  075A  1903               	btfsc	3,2
  4590  075B  2F5D               	goto	u2561
  4591  075C  2F5E               	goto	u2560
  4592  075D                     u2561:	
  4593  075D  2F63               	goto	l2701
  4594  075E                     u2560:	
  4595  075E                     l2699:	
  4596  075E  09B2               	comf	___awdiv@quotient,f
  4597  075F  09B3               	comf	___awdiv@quotient+1,f
  4598  0760  0AB2               	incf	___awdiv@quotient,f
  4599  0761  1903               	skipnz
  4600  0762  0AB3               	incf	___awdiv@quotient+1,f
  4601  0763                     l2701:	
  4602  0763  0833               	movf	___awdiv@quotient+1,w
  4603  0764  00AC               	movwf	?___awdiv+1
  4604  0765  0832               	movf	___awdiv@quotient,w
  4605  0766  00AB               	movwf	?___awdiv
  4606  0767                     l588:	
  4607  0767  0008               	return
  4608  0768                     __end_of___awdiv:	
  4609                           
  4610                           	psect	text17
  4611  0EFF                     __ptext17:	
  4612 ;; *************** function _ChangeTrafficLight *****************
  4613 ;; Defined at:
  4614 ;;		line 18 in file "./CustomLib/TrafficLight.h"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  _semafori       1    wreg     PTR PTR struct .
  4617 ;;		 -> Semafori(32), 
  4618 ;;  _n_semafori     1   11[BANK0 ] PTR unsigned char 
  4619 ;;		 -> id_semaforo(1), 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  _semafori       1   18[BANK0 ] PTR PTR struct .
  4622 ;;		 -> Semafori(32), 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4632 ;;      Params:         0       1       0       0       0
  4633 ;;      Locals:         0       1       0       0       0
  4634 ;;      Temps:          0       6       0       0       0
  4635 ;;      Totals:         0       8       0       0       0
  4636 ;;Total ram usage:        8 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    4
  4639 ;; This function calls:
  4640 ;;		___awmod
  4641 ;; This function is called by:
  4642 ;;		_main
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _ChangeTrafficLight
  4648  0EFF                     _ChangeTrafficLight:	
  4649                           
  4650                           ;incstack = 0
  4651                           ; Regs used in _ChangeTrafficLight: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4652                           ;ChangeTrafficLight@_semafori stored from wreg
  4653  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4654  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4655  0F01  00B2               	movwf	ChangeTrafficLight@_semafori
  4656  0F02                     l139:	
  4657                           ;./CustomLib/TrafficLight.h: 18: void ChangeTrafficLight(_Semafori _semafori, unsigned c
      +                          har *_n_semafori);./CustomLib/TrafficLight.h: 19: {;./CustomLib/TrafficLight.h: 22:     
      +                          do
  4658                           
  4659  0F02                     l2783:	
  4660                           
  4661                           ;./CustomLib/TrafficLight.h: 23:     {;./CustomLib/TrafficLight.h: 24:         *_n_semaf
      +                          ori = ((*_n_semafori) + 1);
  4662  0F02  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4663  0F03  0084               	movwf	4
  4664  0F04  1383               	bcf	3,7	;select IRP bank0
  4665  0F05  0800               	movf	0,w
  4666  0F06  3E01               	addlw	1
  4667  0F07  00AC               	movwf	??_ChangeTrafficLight
  4668  0F08  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4669  0F09  0084               	movwf	4
  4670  0F0A  082C               	movf	??_ChangeTrafficLight,w
  4671  0F0B  0080               	movwf	0
  4672                           
  4673                           ;./CustomLib/TrafficLight.h: 25:     }while( (*(_semafori)[*_n_semafori]).times[0] == 0 
      +                          && *_n_semafori<10);
  4674  0F0C  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4675  0F0D  0084               	movwf	4
  4676  0F0E  0800               	movf	0,w
  4677  0F0F  00AC               	movwf	??_ChangeTrafficLight
  4678  0F10  072C               	addwf	??_ChangeTrafficLight,w
  4679  0F11  0732               	addwf	ChangeTrafficLight@_semafori,w
  4680  0F12  00AD               	movwf	??_ChangeTrafficLight+1
  4681  0F13  082D               	movf	??_ChangeTrafficLight+1,w
  4682  0F14  0084               	movwf	4
  4683  0F15  1783               	bsf	3,7	;select IRP bank2
  4684  0F16  0800               	movf	0,w
  4685  0F17  00AE               	movwf	??_ChangeTrafficLight+2
  4686  0F18  0A84               	incf	4,f
  4687  0F19  0800               	movf	0,w
  4688  0F1A  00AF               	movwf	??_ChangeTrafficLight+3
  4689  0F1B  082E               	movf	??_ChangeTrafficLight+2,w
  4690  0F1C  0084               	movwf	4
  4691  0F1D  1783               	bsf	3,7
  4692  0F1E  1C2F               	btfss	??_ChangeTrafficLight+3,0
  4693  0F1F  1383               	bcf	3,7
  4694  0F20  0800               	movf	0,w
  4695  0F21  00B0               	movwf	??_ChangeTrafficLight+4
  4696  0F22  0A84               	incf	4,f
  4697  0F23  0800               	movf	0,w
  4698  0F24  00B1               	movwf	??_ChangeTrafficLight+5
  4699  0F25  0830               	movf	??_ChangeTrafficLight+4,w
  4700  0F26  0431               	iorwf	??_ChangeTrafficLight+5,w
  4701  0F27  1D03               	btfss	3,2
  4702  0F28  2F2A               	goto	u2701
  4703  0F29  2F2B               	goto	u2700
  4704  0F2A                     u2701:	
  4705  0F2A  2F34               	goto	l2787
  4706  0F2B                     u2700:	
  4707  0F2B                     l2785:	
  4708  0F2B  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4709  0F2C  0084               	movwf	4
  4710  0F2D  300A               	movlw	10
  4711  0F2E  1383               	bcf	3,7	;select IRP bank0
  4712  0F2F  0200               	subwf	0,w
  4713  0F30  1C03               	skipc
  4714  0F31  2F33               	goto	u2711
  4715  0F32  2F34               	goto	u2710
  4716  0F33                     u2711:	
  4717  0F33  2F02               	goto	l139
  4718  0F34                     u2710:	
  4719  0F34                     l2787:	
  4720                           
  4721                           ;./CustomLib/TrafficLight.h: 27:     *_n_semafori=(*_n_semafori)%10;
  4722  0F34  300A               	movlw	10
  4723  0F35  00A4               	movwf	___awmod@divisor
  4724  0F36  3000               	movlw	0
  4725  0F37  00A5               	movwf	___awmod@divisor+1
  4726  0F38  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4727  0F39  0084               	movwf	4
  4728  0F3A  1383               	bcf	3,7	;select IRP bank0
  4729  0F3B  0800               	movf	0,w
  4730  0F3C  00AC               	movwf	??_ChangeTrafficLight
  4731  0F3D  01AD               	clrf	??_ChangeTrafficLight+1
  4732  0F3E  082C               	movf	??_ChangeTrafficLight,w
  4733  0F3F  00A6               	movwf	___awmod@dividend
  4734  0F40  082D               	movf	??_ChangeTrafficLight+1,w
  4735  0F41  00A7               	movwf	___awmod@dividend+1
  4736  0F42  120A  118A  2768  120A  158A  	fcall	___awmod
  4737  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  4738  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  4739  0F49  0824               	movf	?___awmod,w
  4740  0F4A  00AE               	movwf	??_ChangeTrafficLight+2
  4741  0F4B  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4742  0F4C  0084               	movwf	4
  4743  0F4D  082E               	movf	??_ChangeTrafficLight+2,w
  4744  0F4E  1383               	bcf	3,7	;select IRP bank0
  4745  0F4F  0080               	movwf	0
  4746  0F50                     l143:	
  4747  0F50  0008               	return
  4748  0F51                     __end_of_ChangeTrafficLight:	
  4749                           
  4750                           	psect	text18
  4751  0768                     __ptext18:	
  4752 ;; *************** function ___awmod *****************
  4753 ;; Defined at:
  4754 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  divisor         2    4[BANK0 ] int 
  4757 ;;  dividend        2    6[BANK0 ] int 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  sign            1   10[BANK0 ] unsigned char 
  4760 ;;  counter         1    9[BANK0 ] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  2    4[BANK0 ] int 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4770 ;;      Params:         0       4       0       0       0
  4771 ;;      Locals:         0       2       0       0       0
  4772 ;;      Temps:          0       1       0       0       0
  4773 ;;      Totals:         0       7       0       0       0
  4774 ;;Total ram usage:        7 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    3
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_GetDigits
  4781 ;;		_ChangeTrafficLight
  4782 ;;		_main
  4783 ;;		_intToString
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           
  4788                           ;psect for function ___awmod
  4789  0768                     ___awmod:	
  4790  0768                     l2705:	
  4791                           ;incstack = 0
  4792                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4793                           
  4794  0768  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0769  1303               	bcf	3,6	;RP1=0, select bank0
  4796  076A  01AA               	clrf	___awmod@sign
  4797  076B                     l2707:	
  4798  076B  1FA7               	btfss	___awmod@dividend+1,7
  4799  076C  2F6E               	goto	u2571
  4800  076D  2F6F               	goto	u2570
  4801  076E                     u2571:	
  4802  076E  2F76               	goto	l2713
  4803  076F                     u2570:	
  4804  076F                     l2709:	
  4805  076F  09A6               	comf	___awmod@dividend,f
  4806  0770  09A7               	comf	___awmod@dividend+1,f
  4807  0771  0AA6               	incf	___awmod@dividend,f
  4808  0772  1903               	skipnz
  4809  0773  0AA7               	incf	___awmod@dividend+1,f
  4810  0774                     l2711:	
  4811  0774  01AA               	clrf	___awmod@sign
  4812  0775  0AAA               	incf	___awmod@sign,f
  4813  0776                     l2713:	
  4814  0776  1FA5               	btfss	___awmod@divisor+1,7
  4815  0777  2F79               	goto	u2581
  4816  0778  2F7A               	goto	u2580
  4817  0779                     u2581:	
  4818  0779  2F7F               	goto	l2717
  4819  077A                     u2580:	
  4820  077A                     l2715:	
  4821  077A  09A4               	comf	___awmod@divisor,f
  4822  077B  09A5               	comf	___awmod@divisor+1,f
  4823  077C  0AA4               	incf	___awmod@divisor,f
  4824  077D  1903               	skipnz
  4825  077E  0AA5               	incf	___awmod@divisor+1,f
  4826  077F                     l2717:	
  4827  077F  0824               	movf	___awmod@divisor,w
  4828  0780  0425               	iorwf	___awmod@divisor+1,w
  4829  0781  1903               	btfsc	3,2
  4830  0782  2F84               	goto	u2591
  4831  0783  2F85               	goto	u2590
  4832  0784                     u2591:	
  4833  0784  2FB4               	goto	l2735
  4834  0785                     u2590:	
  4835  0785                     l2719:	
  4836  0785  01A9               	clrf	___awmod@counter
  4837  0786  0AA9               	incf	___awmod@counter,f
  4838  0787  2F93               	goto	l2725
  4839  0788                     l2721:	
  4840  0788  3001               	movlw	1
  4841  0789                     u2605:	
  4842  0789  1003               	clrc
  4843  078A  0DA4               	rlf	___awmod@divisor,f
  4844  078B  0DA5               	rlf	___awmod@divisor+1,f
  4845  078C  3EFF               	addlw	-1
  4846  078D  1D03               	skipz
  4847  078E  2F89               	goto	u2605
  4848  078F                     l2723:	
  4849  078F  3001               	movlw	1
  4850  0790  00A8               	movwf	??___awmod
  4851  0791  0828               	movf	??___awmod,w
  4852  0792  07A9               	addwf	___awmod@counter,f
  4853  0793                     l2725:	
  4854  0793  1FA5               	btfss	___awmod@divisor+1,7
  4855  0794  2F96               	goto	u2611
  4856  0795  2F97               	goto	u2610
  4857  0796                     u2611:	
  4858  0796  2F88               	goto	l2721
  4859  0797                     u2610:	
  4860  0797                     l2727:	
  4861  0797  0825               	movf	___awmod@divisor+1,w
  4862  0798  0227               	subwf	___awmod@dividend+1,w
  4863  0799  1D03               	skipz
  4864  079A  2F9D               	goto	u2625
  4865  079B  0824               	movf	___awmod@divisor,w
  4866  079C  0226               	subwf	___awmod@dividend,w
  4867  079D                     u2625:	
  4868  079D  1C03               	skipc
  4869  079E  2FA0               	goto	u2621
  4870  079F  2FA1               	goto	u2620
  4871  07A0                     u2621:	
  4872  07A0  2FA7               	goto	l2731
  4873  07A1                     u2620:	
  4874  07A1                     l2729:	
  4875  07A1  0824               	movf	___awmod@divisor,w
  4876  07A2  02A6               	subwf	___awmod@dividend,f
  4877  07A3  0825               	movf	___awmod@divisor+1,w
  4878  07A4  1C03               	skipc
  4879  07A5  03A7               	decf	___awmod@dividend+1,f
  4880  07A6  02A7               	subwf	___awmod@dividend+1,f
  4881  07A7                     l2731:	
  4882  07A7  3001               	movlw	1
  4883  07A8                     u2635:	
  4884  07A8  1003               	clrc
  4885  07A9  0CA5               	rrf	___awmod@divisor+1,f
  4886  07AA  0CA4               	rrf	___awmod@divisor,f
  4887  07AB  3EFF               	addlw	-1
  4888  07AC  1D03               	skipz
  4889  07AD  2FA8               	goto	u2635
  4890  07AE                     l2733:	
  4891  07AE  3001               	movlw	1
  4892  07AF  02A9               	subwf	___awmod@counter,f
  4893  07B0  1D03               	btfss	3,2
  4894  07B1  2FB3               	goto	u2641
  4895  07B2  2FB4               	goto	u2640
  4896  07B3                     u2641:	
  4897  07B3  2F97               	goto	l2727
  4898  07B4                     u2640:	
  4899  07B4                     l2735:	
  4900  07B4  082A               	movf	___awmod@sign,w
  4901  07B5  1903               	btfsc	3,2
  4902  07B6  2FB8               	goto	u2651
  4903  07B7  2FB9               	goto	u2650
  4904  07B8                     u2651:	
  4905  07B8  2FBE               	goto	l2739
  4906  07B9                     u2650:	
  4907  07B9                     l2737:	
  4908  07B9  09A6               	comf	___awmod@dividend,f
  4909  07BA  09A7               	comf	___awmod@dividend+1,f
  4910  07BB  0AA6               	incf	___awmod@dividend,f
  4911  07BC  1903               	skipnz
  4912  07BD  0AA7               	incf	___awmod@dividend+1,f
  4913  07BE                     l2739:	
  4914  07BE  0827               	movf	___awmod@dividend+1,w
  4915  07BF  00A5               	movwf	?___awmod+1
  4916  07C0  0826               	movf	___awmod@dividend,w
  4917  07C1  00A4               	movwf	?___awmod
  4918  07C2                     l601:	
  4919  07C2  0008               	return
  4920  07C3                     __end_of___awmod:	
  4921                           
  4922                           	psect	text19
  4923  0D69                     __ptext19:	
  4924 ;; *************** function _ADC_Read *****************
  4925 ;; Defined at:
  4926 ;;		line 316 in file "main.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  canale          1    wreg     unsigned char 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  canale          1    7[BANK0 ] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  2    4[BANK0 ] int 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4940 ;;      Params:         0       2       0       0       0
  4941 ;;      Locals:         0       1       0       0       0
  4942 ;;      Temps:          0       1       0       0       0
  4943 ;;      Totals:         0       4       0       0       0
  4944 ;;Total ram usage:        4 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    3
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function _ADC_Read
  4956  0D69                     _ADC_Read:	
  4957                           
  4958                           ;incstack = 0
  4959                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  4960                           ;ADC_Read@canale stored from wreg
  4961  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0D6B  00A7               	movwf	ADC_Read@canale
  4964  0D6C                     l2881:	
  4965                           
  4966                           ;main.c: 316: int ADC_Read(char canale);main.c: 317: {;main.c: 318:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  4967  0D6C  0827               	movf	ADC_Read@canale,w
  4968  0D6D  00A6               	movwf	??_ADC_Read
  4969  0D6E  3002               	movlw	2
  4970  0D6F                     u2795:	
  4971  0D6F  1003               	clrc
  4972  0D70  0DA6               	rlf	??_ADC_Read,f
  4973  0D71  3EFF               	addlw	-1
  4974  0D72  1D03               	skipz
  4975  0D73  2D6F               	goto	u2795
  4976  0D74  1003               	clrc
  4977  0D75  0D26               	rlf	??_ADC_Read,w
  4978  0D76  3801               	iorlw	1
  4979  0D77  009F               	movwf	31	;volatile
  4980  0D78                     l2883:	
  4981                           
  4982                           ;main.c: 319:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  4983  0D78  3004               	movlw	4
  4984  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  4986  0D7B  00A6               	movwf	??_ADC_Read
  4987  0D7C                     u3087:	
  4988  0D7C  0BA6               	decfsz	??_ADC_Read,f
  4989  0D7D  2D7C               	goto	u3087
  4990  0D7E  0000               	nop
  4991  0D7F                     l2885:	
  4992                           
  4993                           ;main.c: 320:     GO_nDONE = 1;
  4994  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  4995  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  4996  0D81  151F               	bsf	31,2	;volatile
  4997  0D82                     l299:	
  4998                           ;main.c: 322:         ;
  4999                           
  5000                           
  5001                           ;main.c: 321:     while (GO_nDONE)
  5002  0D82  191F               	btfsc	31,2	;volatile
  5003  0D83  2D85               	goto	u2801
  5004  0D84  2D86               	goto	u2800
  5005  0D85                     u2801:	
  5006  0D85  2D82               	goto	l299
  5007  0D86                     u2800:	
  5008  0D86                     l2887:	
  5009                           
  5010                           ;main.c: 323:     return ADRESL + (ADRESH << 8);
  5011  0D86  081E               	movf	30,w	;volatile
  5012  0D87  00A5               	movwf	?_ADC_Read+1
  5013  0D88  1683               	bsf	3,5	;RP0=1, select bank1
  5014  0D89  1303               	bcf	3,6	;RP1=0, select bank1
  5015  0D8A  081E               	movf	30,w	;volatile
  5016  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  5018  0D8D  00A4               	movwf	?_ADC_Read
  5019  0D8E                     l302:	
  5020  0D8E  0008               	return
  5021  0D8F                     __end_of_ADC_Read:	
  5022                           
  5023                           	psect	text20
  5024  0FA8                     __ptext20:	
  5025 ;; *************** function _ISR *****************
  5026 ;; Defined at:
  5027 ;;		line 407 in file "main.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5041 ;;      Params:         0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0
  5043 ;;      Temps:          0       4       0       0       0
  5044 ;;      Totals:         0       4       0       0       0
  5045 ;;Total ram usage:        4 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    2
  5048 ;; This function calls:
  5049 ;;		_UART_Read
  5050 ;;		_conteggioVeicoli
  5051 ;; This function is called by:
  5052 ;;		Interrupt level 1
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           
  5057                           ;psect for function _ISR
  5058  0FA8                     _ISR:	
  5059  0FA8                     i1l2383:	
  5060                           
  5061                           ;main.c: 410:     if (RCIF && readGateway.Bit == 0)
  5062  0FA8  1E8C               	btfss	12,5	;volatile
  5063  0FA9  2FAB               	goto	u212_21
  5064  0FAA  2FAC               	goto	u212_20
  5065  0FAB                     u212_21:	
  5066  0FAB  2FB5               	goto	i1l2391
  5067  0FAC                     u212_20:	
  5068  0FAC                     i1l2385:	
  5069  0FAC  1859               	btfsc	_readGateway,0
  5070  0FAD  2FAF               	goto	u213_21
  5071  0FAE  2FB0               	goto	u213_20
  5072  0FAF                     u213_21:	
  5073  0FAF  2FB5               	goto	i1l2391
  5074  0FB0                     u213_20:	
  5075  0FB0                     i1l2387:	
  5076                           
  5077                           ;main.c: 411:     {;main.c: 412:         readGateway.Bit = 1;
  5078  0FB0  1459               	bsf	_readGateway,0
  5079                           
  5080                           ;main.c: 413:         readGatewayDone.Bit = 0;
  5081  0FB1  105A               	bcf	_readGatewayDone,0
  5082                           
  5083                           ;main.c: 414:         readGatewayDone.Timeout = 0;
  5084  0FB2  10DA               	bcf	_readGatewayDone,1
  5085  0FB3                     i1l2389:	
  5086                           
  5087                           ;main.c: 415:         dataFromGatewayIndex = 0;
  5088  0FB3  01D1               	clrf	_dataFromGatewayIndex
  5089                           
  5090                           ;main.c: 416:         timerReadFromGateway = 0;
  5091  0FB4  01D0               	clrf	_timerReadFromGateway
  5092  0FB5                     i1l2391:	
  5093                           
  5094                           ;main.c: 418:     if (RCIF && readGateway.Bit == 1)
  5095  0FB5  1E8C               	btfss	12,5	;volatile
  5096  0FB6  2FB8               	goto	u214_21
  5097  0FB7  2FB9               	goto	u214_20
  5098  0FB8                     u214_21:	
  5099  0FB8  2FD0               	goto	i1l2401
  5100  0FB9                     u214_20:	
  5101  0FB9                     i1l2393:	
  5102  0FB9  1C59               	btfss	_readGateway,0
  5103  0FBA  2FBC               	goto	u215_21
  5104  0FBB  2FBD               	goto	u215_20
  5105  0FBC                     u215_21:	
  5106  0FBC  2FD0               	goto	i1l2401
  5107  0FBD                     u215_20:	
  5108  0FBD                     i1l2395:	
  5109                           
  5110                           ;main.c: 419:     {;main.c: 420:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  5111  0FBD  120A  158A  24E3  120A  158A  	fcall	_UART_Read
  5112  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  5113  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  5114  0FC4  00A0               	movwf	??_ISR
  5115  0FC5  0851               	movf	_dataFromGatewayIndex,w
  5116  0FC6  3E90               	addlw	(low (_dataFromGateway| (0+256)))& (0+255)
  5117  0FC7  0084               	movwf	4
  5118  0FC8  0820               	movf	??_ISR,w
  5119  0FC9  1783               	bsf	3,7	;select IRP bank3
  5120  0FCA  0080               	movwf	0
  5121  0FCB                     i1l2397:	
  5122                           
  5123                           ;main.c: 421:         dataFromGatewayIndex++;
  5124  0FCB  3001               	movlw	1
  5125  0FCC  00A0               	movwf	??_ISR
  5126  0FCD  0820               	movf	??_ISR,w
  5127  0FCE  07D1               	addwf	_dataFromGatewayIndex,f
  5128  0FCF                     i1l2399:	
  5129                           
  5130                           ;main.c: 422:         timerReadFromGateway = 0;
  5131  0FCF  01D0               	clrf	_timerReadFromGateway
  5132  0FD0                     i1l2401:	
  5133                           
  5134                           ;main.c: 427:     if (TMR0IF)
  5135  0FD0  1D0B               	btfss	11,2	;volatile
  5136  0FD1  2FD3               	goto	u216_21
  5137  0FD2  2FD4               	goto	u216_20
  5138  0FD3                     u216_21:	
  5139  0FD3  2FDE               	goto	i1l2409
  5140  0FD4                     u216_20:	
  5141  0FD4                     i1l2403:	
  5142                           
  5143                           ;main.c: 428:     {;main.c: 429:         TMR0IF = 0;
  5144  0FD4  110B               	bcf	11,2	;volatile
  5145  0FD5                     i1l2405:	
  5146                           
  5147                           ;main.c: 430:         conteggioVeicoli();
  5148  0FD5  120A  158A  2751  120A  158A  	fcall	_conteggioVeicoli
  5149  0FDA                     i1l2407:	
  5150                           
  5151                           ;main.c: 431:         TMR0 = 6;
  5152  0FDA  3006               	movlw	6
  5153  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  5154  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  5155  0FDD  0081               	movwf	1	;volatile
  5156  0FDE                     i1l2409:	
  5157                           
  5158                           ;main.c: 434:     if (TMR1IF)
  5159  0FDE  1C0C               	btfss	12,0	;volatile
  5160  0FDF  2FE1               	goto	u217_21
  5161  0FE0  2FE2               	goto	u217_20
  5162  0FE1                     u217_21:	
  5163  0FE1  2FF7               	goto	i1l349
  5164  0FE2                     u217_20:	
  5165  0FE2                     i1l2411:	
  5166                           
  5167                           ;main.c: 435:     {;main.c: 436:         TMR1IF = 0;
  5168  0FE2  100C               	bcf	12,0	;volatile
  5169  0FE3                     i1l2413:	
  5170                           
  5171                           ;main.c: 437:         count_lux++;
  5172  0FE3  3001               	movlw	1
  5173  0FE4  00A0               	movwf	??_ISR
  5174  0FE5  0820               	movf	??_ISR,w
  5175  0FE6  07D4               	addwf	_count_lux,f
  5176  0FE7                     i1l2415:	
  5177                           
  5178                           ;main.c: 439:         if (count_lux >= 20)
  5179  0FE7  3014               	movlw	20
  5180  0FE8  0254               	subwf	_count_lux,w
  5181  0FE9  1C03               	skipc
  5182  0FEA  2FEC               	goto	u218_21
  5183  0FEB  2FED               	goto	u218_20
  5184  0FEC                     u218_21:	
  5185  0FEC  2FF3               	goto	i1l2423
  5186  0FED                     u218_20:	
  5187  0FED                     i1l2417:	
  5188                           
  5189                           ;main.c: 440:         {;main.c: 441:             secondPassed.Bit = 1;
  5190  0FED  1458               	bsf	_secondPassed,0
  5191  0FEE                     i1l2419:	
  5192                           
  5193                           ;main.c: 442:             count_lux = 0;
  5194  0FEE  01D4               	clrf	_count_lux
  5195  0FEF                     i1l2421:	
  5196                           
  5197                           ;main.c: 443:             timerReadFromGateway++;
  5198  0FEF  3001               	movlw	1
  5199  0FF0  00A0               	movwf	??_ISR
  5200  0FF1  0820               	movf	??_ISR,w
  5201  0FF2  07D0               	addwf	_timerReadFromGateway,f
  5202  0FF3                     i1l2423:	
  5203                           
  5204                           ;main.c: 446:         TMR1H = 60;
  5205  0FF3  303C               	movlw	60
  5206  0FF4  008F               	movwf	15	;volatile
  5207  0FF5                     i1l2425:	
  5208                           
  5209                           ;main.c: 447:         TMR1L = 176;
  5210  0FF5  30B0               	movlw	176
  5211  0FF6  008E               	movwf	14	;volatile
  5212  0FF7                     i1l349:	
  5213  0FF7  0823               	movf	??_ISR+3,w
  5214  0FF8  008A               	movwf	10
  5215  0FF9  0822               	movf	??_ISR+2,w
  5216  0FFA  0084               	movwf	4
  5217  0FFB  0E21               	swapf	(??_ISR+1)^0,w
  5218  0FFC  0083               	movwf	3
  5219  0FFD  0EFE               	swapf	btemp,f
  5220  0FFE  0E7E               	swapf	btemp,w
  5221  0FFF  0009               	retfie
  5222  1000                     __end_of_ISR:	
  5223                           
  5224                           	psect	intentry
  5225  0004                     __pintentry:	
  5226                           ;incstack = 0
  5227                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5228                           
  5229  0004                     interrupt_function:	
  5230  007E                     saved_w	set	btemp
  5231  0004  00FE               	movwf	btemp
  5232  0005  0E03               	swapf	3,w
  5233  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5235  0008  00A1               	movwf	??_ISR+1
  5236  0009  0804               	movf	4,w
  5237  000A  00A2               	movwf	??_ISR+2
  5238  000B  080A               	movf	10,w
  5239  000C  00A3               	movwf	??_ISR+3
  5240  000D  120A  158A  2FA8   	ljmp	_ISR
  5241                           
  5242                           	psect	text21
  5243  0F51                     __ptext21:	
  5244 ;; *************** function _conteggioVeicoli *****************
  5245 ;; Defined at:
  5246 ;;		line 384 in file "main.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  i               1   13[COMMON] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5260 ;;      Params:         0       0       0       0       0
  5261 ;;      Locals:         1       0       0       0       0
  5262 ;;      Temps:          4       0       0       0       0
  5263 ;;      Totals:         5       0       0       0       0
  5264 ;;Total ram usage:        5 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    1
  5267 ;; This function calls:
  5268 ;;		_Conteggio
  5269 ;; This function is called by:
  5270 ;;		_ISR
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function _conteggioVeicoli
  5276  0F51                     _conteggioVeicoli:	
  5277  0F51                     i1l2169:	
  5278                           ;incstack = 0
  5279                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5280                           
  5281                           
  5282                           ;main.c: 386:     RoadsSensors[0]=PORTBbits.RB3;
  5283  0F51  3000               	movlw	0
  5284  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  5285  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  5286  0F54  1986               	btfsc	6,3	;volatile
  5287  0F55  3001               	movlw	1
  5288  0F56  00CA               	movwf	_RoadsSensors
  5289                           
  5290                           ;main.c: 387:     RoadsSensors[1]=PORTBbits.RB4;
  5291  0F57  3000               	movlw	0
  5292  0F58  1A06               	btfsc	6,4	;volatile
  5293  0F59  3001               	movlw	1
  5294  0F5A  00CB               	movwf	_RoadsSensors+1
  5295                           
  5296                           ;main.c: 388:     RoadsSensors[2]=PORTBbits.RB5;
  5297  0F5B  3000               	movlw	0
  5298  0F5C  1A86               	btfsc	6,5	;volatile
  5299  0F5D  3001               	movlw	1
  5300  0F5E  00CC               	movwf	_RoadsSensors+2
  5301                           
  5302                           ;main.c: 389:     RoadsSensors[3]=PORTAbits.RA5;
  5303  0F5F  3000               	movlw	0
  5304  0F60  1A85               	btfsc	5,5	;volatile
  5305  0F61  3001               	movlw	1
  5306  0F62  00CD               	movwf	_RoadsSensors+3
  5307  0F63                     i1l2171:	
  5308                           
  5309                           ;main.c: 391:     for(unsigned char i=0; i<4; i++)
  5310  0F63  01FD               	clrf	conteggioVeicoli@i
  5311  0F64                     i1l2175:	
  5312                           
  5313                           ;main.c: 392:     {;main.c: 393:         if (!RoadsSensors[i])
  5314  0F64  087D               	movf	conteggioVeicoli@i,w
  5315  0F65  3E4A               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5316  0F66  0084               	movwf	4
  5317  0F67  1383               	bcf	3,7	;select IRP bank0
  5318  0F68  0800               	movf	0,w
  5319  0F69  1D03               	btfss	3,2
  5320  0F6A  2F6C               	goto	u183_21
  5321  0F6B  2F6D               	goto	u183_20
  5322  0F6C                     u183_21:	
  5323  0F6C  2F76               	goto	i1l2179
  5324  0F6D                     u183_20:	
  5325  0F6D                     i1l2177:	
  5326                           
  5327                           ;main.c: 394:         {;main.c: 395:             count++;
  5328  0F6D  3001               	movlw	1
  5329  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  5330  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  5331  0F70  07CE               	addwf	_count,f
  5332  0F71  1803               	skipnc
  5333  0F72  0ACF               	incf	_count+1,f
  5334  0F73  3000               	movlw	0
  5335  0F74  07CF               	addwf	_count+1,f
  5336                           
  5337                           ;main.c: 396:         }
  5338  0F75  2F9D               	goto	i1l2185
  5339  0F76                     i1l2179:	
  5340  0F76  087D               	movf	conteggioVeicoli@i,w
  5341  0F77  3E4A               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5342  0F78  0084               	movwf	4
  5343  0F79  0800               	movf	0,w
  5344  0F7A  1903               	btfsc	3,2
  5345  0F7B  2F7D               	goto	u184_21
  5346  0F7C  2F7E               	goto	u184_20
  5347  0F7D                     u184_21:	
  5348  0F7D  2F9D               	goto	i1l2185
  5349  0F7E                     u184_20:	
  5350  0F7E                     i1l2181:	
  5351                           
  5352                           ;main.c: 398:         {;main.c: 399:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  5353  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  5354  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  5355  0F80  084F               	movf	_count+1,w
  5356  0F81  00F1               	movwf	Conteggio@_count+1
  5357  0F82  084E               	movf	_count,w
  5358  0F83  00F0               	movwf	Conteggio@_count
  5359  0F84  305F               	movlw	(low (_motorcycle| 0))& (0+255)
  5360  0F85  00F9               	movwf	??_conteggioVeicoli
  5361  0F86  0879               	movf	??_conteggioVeicoli,w
  5362  0F87  00F2               	movwf	Conteggio@_motorcycle
  5363  0F88  305B               	movlw	(low (_car| 0))& (0+255)
  5364  0F89  00FA               	movwf	??_conteggioVeicoli+1
  5365  0F8A  087A               	movf	??_conteggioVeicoli+1,w
  5366  0F8B  00F3               	movwf	Conteggio@_car
  5367  0F8C  30E9               	movlw	(low (_truck| 0))& (0+255)
  5368  0F8D  00FB               	movwf	??_conteggioVeicoli+2
  5369  0F8E  087B               	movf	??_conteggioVeicoli+2,w
  5370  0F8F  00F4               	movwf	Conteggio@_truck
  5371  0F90  087D               	movf	conteggioVeicoli@i,w
  5372  0F91  00FC               	movwf	??_conteggioVeicoli+3
  5373  0F92  087C               	movf	??_conteggioVeicoli+3,w
  5374  0F93  00F5               	movwf	Conteggio@index
  5375  0F94  120A  158A  2662  120A  158A  	fcall	_Conteggio
  5376  0F99                     i1l2183:	
  5377                           
  5378                           ;main.c: 400:             count = 0;
  5379  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0F9B  01CE               	clrf	_count
  5382  0F9C  01CF               	clrf	_count+1
  5383  0F9D                     i1l2185:	
  5384                           
  5385                           ;main.c: 402:     }
  5386  0F9D  3001               	movlw	1
  5387  0F9E  00F9               	movwf	??_conteggioVeicoli
  5388  0F9F  0879               	movf	??_conteggioVeicoli,w
  5389  0FA0  07FD               	addwf	conteggioVeicoli@i,f
  5390  0FA1                     i1l2187:	
  5391  0FA1  3004               	movlw	4
  5392  0FA2  027D               	subwf	conteggioVeicoli@i,w
  5393  0FA3  1C03               	skipc
  5394  0FA4  2FA6               	goto	u185_21
  5395  0FA5  2FA7               	goto	u185_20
  5396  0FA6                     u185_21:	
  5397  0FA6  2F64               	goto	i1l2175
  5398  0FA7                     u185_20:	
  5399  0FA7                     i1l339:	
  5400  0FA7  0008               	return
  5401  0FA8                     __end_of_conteggioVeicoli:	
  5402                           
  5403                           	psect	text22
  5404  0E62                     __ptext22:	
  5405 ;; *************** function _Conteggio *****************
  5406 ;; Defined at:
  5407 ;;		line 98 in file "./CustomLib/TrafficLight.h"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  _count          2    0[COMMON] unsigned int 
  5410 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5411 ;;		 -> motorcycle(4), 
  5412 ;;  _car            1    3[COMMON] PTR unsigned char 
  5413 ;;		 -> car(4), 
  5414 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5415 ;;		 -> truck(4), 
  5416 ;;  index           1    5[COMMON] unsigned char 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5428 ;;      Params:         6       0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0
  5430 ;;      Temps:          3       0       0       0       0
  5431 ;;      Totals:         9       0       0       0       0
  5432 ;;Total ram usage:        9 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_conteggioVeicoli
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _Conteggio
  5443  0E62                     _Conteggio:	
  5444  0E62                     i1l1845:	
  5445                           ;incstack = 0
  5446                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5447                           
  5448                           
  5449                           ;./CustomLib/TrafficLight.h: 98: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 99: {;./CustomLib/TrafficLight.h: 100:         if (_count >= 500)
  5450  0E62  3001               	movlw	1
  5451  0E63  0271               	subwf	Conteggio@_count+1,w
  5452  0E64  30F4               	movlw	244
  5453  0E65  1903               	skipnz
  5454  0E66  0270               	subwf	Conteggio@_count,w
  5455  0E67  1C03               	skipc
  5456  0E68  2E6A               	goto	u128_21
  5457  0E69  2E6B               	goto	u128_20
  5458  0E6A                     u128_21:	
  5459  0E6A  2E7B               	goto	i1l1849
  5460  0E6B                     u128_20:	
  5461  0E6B                     i1l1847:	
  5462                           
  5463                           ;./CustomLib/TrafficLight.h: 101:         {;./CustomLib/TrafficLight.h: 102:            
      +                           _motorcycle[index]=_motorcycle[index]+1;
  5464  0E6B  0875               	movf	Conteggio@index,w
  5465  0E6C  0772               	addwf	Conteggio@_motorcycle,w
  5466  0E6D  00F6               	movwf	??_Conteggio
  5467  0E6E  0876               	movf	??_Conteggio,w
  5468  0E6F  0084               	movwf	4
  5469  0E70  1383               	bcf	3,7	;select IRP bank0
  5470  0E71  0800               	movf	0,w
  5471  0E72  3E01               	addlw	1
  5472  0E73  00F7               	movwf	??_Conteggio+1
  5473  0E74  0875               	movf	Conteggio@index,w
  5474  0E75  0772               	addwf	Conteggio@_motorcycle,w
  5475  0E76  00F8               	movwf	??_Conteggio+2
  5476  0E77  0878               	movf	??_Conteggio+2,w
  5477  0E78  0084               	movwf	4
  5478  0E79  0877               	movf	??_Conteggio+1,w
  5479  0E7A  0080               	movwf	0
  5480  0E7B                     i1l1849:	
  5481                           
  5482                           ;./CustomLib/TrafficLight.h: 104:         if (_count >= 1500)
  5483  0E7B  3005               	movlw	5
  5484  0E7C  0271               	subwf	Conteggio@_count+1,w
  5485  0E7D  30DC               	movlw	220
  5486  0E7E  1903               	skipnz
  5487  0E7F  0270               	subwf	Conteggio@_count,w
  5488  0E80  1C03               	skipc
  5489  0E81  2E83               	goto	u129_21
  5490  0E82  2E84               	goto	u129_20
  5491  0E83                     u129_21:	
  5492  0E83  2E94               	goto	i1l1853
  5493  0E84                     u129_20:	
  5494  0E84                     i1l1851:	
  5495                           
  5496                           ;./CustomLib/TrafficLight.h: 105:         {;./CustomLib/TrafficLight.h: 106:            
      +                           _car[index]=_car[index]+1;
  5497  0E84  0875               	movf	Conteggio@index,w
  5498  0E85  0773               	addwf	Conteggio@_car,w
  5499  0E86  00F6               	movwf	??_Conteggio
  5500  0E87  0876               	movf	??_Conteggio,w
  5501  0E88  0084               	movwf	4
  5502  0E89  1383               	bcf	3,7	;select IRP bank0
  5503  0E8A  0800               	movf	0,w
  5504  0E8B  3E01               	addlw	1
  5505  0E8C  00F7               	movwf	??_Conteggio+1
  5506  0E8D  0875               	movf	Conteggio@index,w
  5507  0E8E  0773               	addwf	Conteggio@_car,w
  5508  0E8F  00F8               	movwf	??_Conteggio+2
  5509  0E90  0878               	movf	??_Conteggio+2,w
  5510  0E91  0084               	movwf	4
  5511  0E92  0877               	movf	??_Conteggio+1,w
  5512  0E93  0080               	movwf	0
  5513  0E94                     i1l1853:	
  5514                           
  5515                           ;./CustomLib/TrafficLight.h: 108:         if (_count >= 3000)
  5516  0E94  300B               	movlw	11
  5517  0E95  0271               	subwf	Conteggio@_count+1,w
  5518  0E96  30B8               	movlw	184
  5519  0E97  1903               	skipnz
  5520  0E98  0270               	subwf	Conteggio@_count,w
  5521  0E99  1C03               	skipc
  5522  0E9A  2E9C               	goto	u130_21
  5523  0E9B  2E9D               	goto	u130_20
  5524  0E9C                     u130_21:	
  5525  0E9C  2EAD               	goto	i1l171
  5526  0E9D                     u130_20:	
  5527  0E9D                     i1l1855:	
  5528                           
  5529                           ;./CustomLib/TrafficLight.h: 109:         {;./CustomLib/TrafficLight.h: 110:            
      +                           _truck[index]=_truck[index]+1;
  5530  0E9D  0875               	movf	Conteggio@index,w
  5531  0E9E  0774               	addwf	Conteggio@_truck,w
  5532  0E9F  00F6               	movwf	??_Conteggio
  5533  0EA0  0876               	movf	??_Conteggio,w
  5534  0EA1  0084               	movwf	4
  5535  0EA2  1383               	bcf	3,7	;select IRP bank0
  5536  0EA3  0800               	movf	0,w
  5537  0EA4  3E01               	addlw	1
  5538  0EA5  00F7               	movwf	??_Conteggio+1
  5539  0EA6  0875               	movf	Conteggio@index,w
  5540  0EA7  0774               	addwf	Conteggio@_truck,w
  5541  0EA8  00F8               	movwf	??_Conteggio+2
  5542  0EA9  0878               	movf	??_Conteggio+2,w
  5543  0EAA  0084               	movwf	4
  5544  0EAB  0877               	movf	??_Conteggio+1,w
  5545  0EAC  0080               	movwf	0
  5546  0EAD                     i1l171:	
  5547  0EAD  0008               	return
  5548  0EAE                     __end_of_Conteggio:	
  5549                           
  5550                           	psect	text23
  5551  0CE3                     __ptext23:	
  5552 ;; *************** function _UART_Read *****************
  5553 ;; Defined at:
  5554 ;;		line 355 in file "main.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;		None
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      unsigned char 
  5561 ;; Registers used:
  5562 ;;		wreg
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5568 ;;      Params:         0       0       0       0       0
  5569 ;;      Locals:         0       0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0
  5571 ;;      Totals:         0       0       0       0       0
  5572 ;;Total ram usage:        0 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_ISR
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _UART_Read
  5583  0CE3                     _UART_Read:	
  5584  0CE3                     i1l2163:	
  5585                           ;incstack = 0
  5586                           ; Regs used in _UART_Read: [wreg]
  5587                           
  5588  0CE3                     i1l320:	
  5589                           ;main.c: 358:         ;
  5590                           
  5591                           
  5592                           ;main.c: 357:     while (!RCIF)
  5593  0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  5594  0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  5595  0CE5  1E8C               	btfss	12,5	;volatile
  5596  0CE6  2CE8               	goto	u182_21
  5597  0CE7  2CE9               	goto	u182_20
  5598  0CE8                     u182_21:	
  5599  0CE8  2CE3               	goto	i1l320
  5600  0CE9                     u182_20:	
  5601  0CE9                     i1l322:	
  5602                           
  5603                           ;main.c: 359:     RCIF = 0;
  5604  0CE9  128C               	bcf	12,5	;volatile
  5605  0CEA                     i1l2165:	
  5606                           
  5607                           ;main.c: 360:     return RCREG;
  5608  0CEA  081A               	movf	26,w	;volatile
  5609  0CEB                     i1l323:	
  5610  0CEB  0008               	return
  5611  0CEC                     __end_of_UART_Read:	
  5612  007E                     btemp	set	126	;btemp
  5613  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    11
    Data        32
    BSS         151
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      71
    BANK1            80      0      77
    BANK3            96     12      89
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[16] size(2) Largest target is 6
		 -> s15(BANK3[6]), s14(BANK3[6]), s13(BANK3[6]), s12(BANK3[6]), 
		 -> s11(BANK3[6]), s10(BANK1[6]), s9(BANK1[6]), s8(BANK1[6]), 
		 -> s7(BANK1[6]), s6(BANK1[6]), s5(BANK1[6]), s4(BANK1[6]), 
		 -> s3(BANK1[6]), s2(BANK1[6]), s1(BANK1[6]), s0(BANK1[6]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK1[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetReceivedTimes@_to_update	PTR struct . size(1) Largest target is 7
		 -> to_update(BANK1[7]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK3[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK3[15]), 

    ChangeTrafficLight@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    ChangeTrafficLight@_n_semafori	PTR unsigned char  size(1) Largest target is 1
		 -> id_semaforo(BANK0[1]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 32
		 -> Semafori(BANK3[32]), 

    UpdateTimes@_to_update	PTR struct . size(1) Largest target is 7
		 -> to_update(BANK1[7]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod
    _ChangeTrafficLight->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   19177
                                             32 BANK0     10    10      0
                                              0 BANK3     12    12      0
                           _ADC_Read
                 _ChangeTrafficLight
                          _GetDigits
                   _SetDefaultTimers
                         _SetDisplay
                   _SetReceivedTimes
                          _UART_Init
                        _UpdateTimes
                            ___awmod
                           _init_ADC
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    2447
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    3928
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     836
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         15    14      1     479
                                              4 BANK0     15    14      1
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    16    13      3    1821
                                             12 BANK0     16    13      3
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     474
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDisplay                                           4     1      3     934
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7     899
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    3629
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ChangeTrafficLight                                   8     7      1    1856
                                             11 BANK0      8     7      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1513
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _ChangeTrafficLight
     ___awmod
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _SetDefaultTimers
   _SetDisplay
   _SetReceivedTimes
     _GetTime
     ___bmul
   _UART_Init
     ___aldiv
   _UpdateTimes
   ___awmod
   _init_ADC
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      C      59       9       92.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      FB      12        0.0%
ABS                  0      0      FB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun 28 15:09:19 2020

                               pc 0002                    ___bmul@product 0026                       __CFG_CP$OFF 0000  
                              l77 0E1B                                l94 05D9                      ___awdiv@sign 0031  
                              _s0 00E3                                _s1 00DD                                _s2 00D7  
                              _s3 00D1                                _s4 00CB                                _s5 00C5  
                              _s6 00BF                                _s7 00B9                                _s8 00B3  
                              _s9 00AD                                fsr 0004               ___wmul@multiplicand 0026  
                  _GetDigits$1171 0039                       __CFG_LVP$ON 0000                               l125 0478  
                             l302 0D8E                               l310 0CF3                               l143 0F50  
                             l119 0427                               l311 0CF6                               l136 0EFE  
                             l128 04A0                               l305 07FC                               l146 0E61  
                             l139 0F02                               l331 0D31                               l500 04B5  
                             l308 0CEF                               l165 066E                               l158 06FE  
                             l510 053D                               l328 0DE6                               l601 07C2  
                             l257 0266                               l435 0D9D                               l267 015D  
                             l259 008D                               l461 0D48                               l437 0DB5  
                             l296 0D09                               l289 03CC                               l299 0D82  
                             l588 0767                      __CFG_CPD$OFF 0000                               _ISR 0FA8  
                             _s10 00A7                               _s11 01B7                               _s12 01B1  
                             _s13 01AB                               _s14 01A5                               _s15 019F  
                             _car 005B                               _map 0DE7                               fsr0 0004  
                             indf 0000                      ___awmod@sign 002A                      __CFG_FOSC$HS 0000  
                            ?_ISR 0070                              l3001 0251                              l3011 0274  
                            l3003 026C                              l3021 029A                              l3013 0276  
                            l3005 026D                              l3031 02E3                              l3023 02D2  
                            l3007 026E                              l3015 0288                              l3041 034A  
                            l3033 02EF                              l3025 02D8                              l3017 028E  
                            l3009 0270                              l3051 0382                              l3043 034F  
                            l3027 02DC                              l3035 02FB                              l3019 0292  
                            l3061 03C6                              l3045 0363                              l3029 02E2  
                            l3037 033D                              l2511 03F8                              l3063 03CA  
                            l3047 0368                              l3055 0397                              l3039 0345  
                            l2601 0DAB                              l2521 03FC                              l2513 03F9  
                            l3065 03D0                              l3049 036D                              l3057 03AA  
                            l2611 0D3A                              l2603 0DB1                              l2531 041A  
                            l2515 03FA                              l2507 03DC                              l3067 03D4  
                            l3059 03C2                              l3171 039F                              l2701 0763  
                            l3173 06DF                              l2613 0D3E                              l2621 04A1  
                            l2541 043C                              l2533 042D                              l2509 03EB  
                            l2711 0774                              l2615 0D40                              l2607 0D35  
                            l2631 04C8                              l2623 04A4                              l2543 0449  
                            l2535 0435                              l2527 0400                              l2721 0788  
                            l2713 0776                              l2705 0768                              l2801 0674  
                            l2617 0D47                              l2609 0D36                              l2641 04EC  
                            l2633 04D0                              l2625 04A8                              l2561 047E  
                            l2529 0414                              l3169 025E                              l2731 07A7  
                            l2723 078F                              l2715 077A                              l2707 076B  
                            l2803 0695                              l2811 06EA                              l2651 051F  
                            l2643 04F5                              l2635 04D8                              l2627 04B9  
                            l2571 049F                              l2563 048B                              l2555 0451  
                            l2539 0436                              l2733 07AE                              l2725 0793  
                            l2717 077F                              l2709 076F                              l2661 06FF  
                            l2813 06EE                              l2805 06B6                              l2581 0E47  
                            l2645 0507                              l2637 04DB                              l2653 0525  
                            l2629 04C4                              l2557 0465                              l2549 044D  
                            l2727 0797                              l2719 0785                              l2735 07B4  
                            l2671 0711                              l2663 0702                              l2751 0557  
                            l2815 06F4                              l2583 0E55                              l2575 0E1F  
                            l2831 05F4                              l2823 05DD                              l2655 052A  
                            l2647 0515                              l2639 04E8                              l2743 0DE7  
                            l2567 048C                              l2559 046B                              l2591 0CF4  
                            l2911 0045                              l2737 07B9                              l2729 07A1  
                            l2681 0725                              l2673 0716                              l2665 0706  
                            l2753 0573                              l2817 06F8                              l2809 06D7  
                            l2585 0E5D                              l2577 0E2E                              l2841 0650  
                            l2833 0602                              l2825 05DE                              l2657 0535  
                            l2649 0516                              l2593 0D8F                              l2569 0492  
                            l2921 0051                              l2913 0047                              l2739 07BE  
                            l2691 074B                              l2683 072C                              l2675 071A  
                            l2667 070B                              l2755 05B0                              l2747 0541  
                            l2579 0E36                              l2843 0669                              l2835 0615  
                            l2851 0CFE                              l2595 0D93                              l2931 0086  
                            l2923 0053                              l2915 0049                              l2907 003E  
                            l2693 074C                              l2685 0730                              l2677 071C  
                            l2669 070D                              l2757 05C3                              l2749 0542  
                            l2837 061B                              l2829 05E5                              l2861 07FA  
                            l2781 0EF8                              l2773 0EBD                              l2765 0EB2  
                            l2853 0D02                              l2597 0D97                              l2589 0CEF  
                            l2941 00A1                              l2925 005F                              l2917 004B  
                            l2909 0044                              ?_map 0034                              l2783 0F02  
                            l2695 0753                              l2687 0734                              l2679 0722  
                            l2839 0648                              l2863 07FB                              l2855 07C3  
                            l2775 0EEA                              l2767 0EBC                              l2759 0EB1  
                            l2847 0CF7                              l2599 0DA4                              l2943 0117  
                            l2935 008F                              l2927 0064                              l2919 004F  
                            l2881 0D6C                              l2785 0F2B                              l2689 0745  
                            l2697 0759                              l2857 07CB                              l2777 0EEE  
                            l2849 0CFB                              l2873 0DCD                              l2865 0DB9  
                            l2953 0124                              l2937 0093                              l2929 006F  
                            l2883 0D78                              l2787 0F34                              l2699 075E  
                            l2795 0672                              l2891 0D20                              l2859 07F9  
                            l2779 0EF4                              l2875 0DD6                              l2867 0DCC  
                            l2971 015F                              l2955 0133                              l2947 0120  
                            l2885 0D7F                              l2789 066F                              l2893 0D2F  
                            l2877 0DDC                              l2981 0229                              l2973 01F3  
                            l2965 0149                              l2957 0139                              l2887 0D86  
                            l2879 0DE0                              l2991 023E                              l2975 0204  
                            l2967 014E                              l2959 0146                              l2993 0244  
                            l2985 0230                              l2977 0215                              l2969 0156  
                            l2995 0247                              l2987 0235                              l2979 0226  
                            l2997 024D                              u3000 0368                              u3001 0367  
                            u2210 0427                              u3010 036D                              u2211 0426  
                            u3011 036C                              u2220 042D                              u2204 040C  
                            u2300 0CF3                              u3020 03C6                              u2221 042C  
                            u2205 040A                              u2301 0CF2                              u3021 03C5  
                            u2310 0D97                              u2230 0449                              u3030 03CA  
                            u2311 0D96                              u2231 0448                              u2215 0423  
                            u3031 03C9                              u3040 03D0                              u3041 03CF  
                            u2410 04EC                              u2250 0478                              u3050 03D4  
                            u2411 04EB                              u2251 0477                              u2235 0445  
                            u3051 03D3                              u2340 0DB1                              u2260 047E  
                            u2244 045D                              u2405 04DD                              u2341 0DB0  
                            u2325 0D9E                              u2261 047D                              u2245 045B  
                            u2510 0734                              u2350 0D3A                              u2430 0507  
                            u2511 0733                              u2351 0D39                              u2431 0506  
                            u2335 0DA5                              u2255 0474                              u2360 0D47  
                            u2280 049F                              u2505 0726                              u2361 0D46  
                            u2425 04EE                              u2281 049E                              u2610 0797  
                            u2530 0745                              u2450 0525                              u2370 04A8  
                            u2274 0484                              u2611 0796                              u2531 0744  
                            u2451 0524                              u2435 0503                              u2371 04A7  
                            u2275 0482                              u2195 03EE                              u2620 07A1  
                            u2700 0F2B                              u2460 052A                              u2380 04B9  
                            u2621 07A0                              u2605 0789                              u2701 0F2A  
                            u2525 0735                              u2461 0529                              u2445 0517  
                            u2381 04B8                              u3077 0D06                              u2285 049B  
                            u2710 0F34                              u2550 0759                              u2470 0706  
                            u2390 04D8                              u3087 0D7C                              u2711 0F33  
                            u2551 0758                              u2535 0741                              u2471 0705  
                            u2295 0E3C                              u2391 04D7                              u2800 0D86  
                            u2640 07B4                              u2560 075E                              u2480 0711  
                            u2720 06F4                              u2801 0D85                              u2641 07B3  
                            u2625 079D                              u2561 075D                              u2545 074D  
                            u2481 0710                              u2721 06F3                              u2650 07B9  
                            u2570 076F                              u2490 0722                              u2730 06FE  
                            u2651 07B8                              u2635 07A8                              u2571 076E  
                            u2491 0721                              u2731 06FD                              u2580 077A  
                            u2660 0573                              u2740 05E4                              u2900 0244  
                            u2820 008C                              u2581 0779                              u2661 0572  
                            u2741 05E3                              u2901 0243                              u2821 008B  
                            u2590 0785                              u2670 0EBC                              u2910 024D  
                            u2830 00A0                              u2591 0784                              u2671 0EBB  
                            u2911 024C                              u2831 009F                              u2760 061B  
                            u2680 0EF4                              u2920 026C                              u2665 056F  
                            u2761 061A                              u2681 0EF3                              u2921 026B  
                            u2770 07DA                              u2690 0EFE                              u2930 0274  
                            u2755 060A                              u2691 0EFD                              u2931 0273  
                            u2835 009C                              u2780 0DE6                              u2940 028E  
                            u2844 00BD                              u2781 0DE5                              u2941 028D  
                            u2845 00BB                              u2950 0292                              u2870 0146  
                            u2854 00E5                              u2775 07D5                              u2951 0291  
                            u2871 0145                              u2855 00E3                              u2960 02D2  
                            u2880 015C                              u2864 010D                              u2961 02D1  
                            u2881 015B                              u2865 010B                              u2970 02E2  
                            u2890 022F                              u2795 0D6F                              u2971 02E1  
                            u2891 022E                              u2875 0142                              u2980 0345  
                            _RCIF 0065                              u2981 0344                              u2990 034F  
                            u2991 034E                              _TMR0 0001                              _TXIF 0064  
                    __CFG_WRT$OFF 0000                              _disp 0055                              _main 003E  
                            _time 0052                              map@x 0034                              btemp 007E  
                __end_of_ADC_Read 0D8F                     __CFG_BOREN$ON 0000                       main@umidita 01DE  
                            start 0010                   __end_of_GetTime 0E62                 ___bmul@multiplier 0027  
                           ??_ISR 0020         __size_of_conteggioVeicoli 0057                             ??_map 003E  
                 __end_of___aldiv 053E                             ?_main 0070                   __end_of___awdiv 0768  
                   __CFG_WDTE$OFF 0000                   __end_of___awmod 07C3                   ___awdiv@divisor 002B  
                           _T1CON 0010                             i1l320 0CE3                             i1l322 0CE9  
                           i1l323 0CEB                             i1l171 0EAD                             i1l339 0FA7  
                           i1l349 0FF7                   ___awdiv@counter 0030                             _RCREG 001A  
            UpdateTimes@_semafori 0030                             _TMR1H 000F                             _TMR1L 000E  
                           _SPBRG 0099                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISC 0087                             _TRISD 0088  
                           _TRISE 0089                             _TXREG 0019                _ChangeTrafficLight 0EFF  
                   __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A                __size_of_UART_Read 0009  
                 __end_of_display 0811                             _count 004E                             _unita 0066  
                           main@i 01E7                             _truck 00E9               ?_ChangeTrafficLight 002B  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 0013                      __end_of_main 03D9              ??_ChangeTrafficLight 002C  
       __size_of_SetReceivedTimes 0095                __size_of_GetDigits 009C                            ??_main 0040  
               SetDefaultTimers@i 0033                 SetDefaultTimers@l 0032                __size_of_BuildByte 00C8  
                      _SetDisplay 0D1D                            _ADCON0 001F                            _ADCON1 009F  
              __size_of_Conteggio 004C                            _ADRESH 001E                            _ADRESL 009E  
                ___awdiv@dividend 002D                            i1l2401 0FD0                            i1l2163 0CE3  
                          i1l2171 0F63                            i1l2411 0FE2                            i1l2403 0FD4  
                          i1l2165 0CEA                            i1l2181 0F7E                            i1l2421 0FEF  
                          i1l2413 0FE3                            i1l2405 0FD5                            i1l2183 0F99  
                          i1l2175 0F64                            i1l2423 0FF3                            i1l2415 0FE7  
                          i1l2407 0FDA                            i1l2185 0F9D                            i1l2177 0F6D  
                          i1l2169 0F51                            i1l2425 0FF5                            i1l2417 0FED  
                          i1l2409 0FDE                            i1l2187 0FA1                            i1l2179 0F76  
                          i1l2419 0FEE                            i1l2391 0FB5                            i1l2383 0FA8  
                          u130_20 0E9D                            u130_21 0E9C                            i1l2393 0FB9  
                          i1l2385 0FAC                            i1l1851 0E84                            i1l2395 0FBD  
                          i1l2387 0FB0                            i1l1853 0E94                            i1l1845 0E62  
                          i1l2397 0FCB                            i1l2389 0FB3                            i1l1855 0E9D  
                          i1l1847 0E6B                            i1l2399 0FCF                            i1l1849 0E7B  
                          u212_20 0FAC                            u212_21 0FAB                            u213_20 0FB0  
                          u213_21 0FAF                            u214_20 0FB9                            u214_21 0FB8  
                          u215_20 0FBD                            u215_21 0FBC                            u128_20 0E6B  
                          u216_20 0FD4                            u128_21 0E6A                            u216_21 0FD3  
                          u129_20 0E84                            u217_20 0FE2                            _INTCON 000B  
                          u129_21 0E83                            u217_21 0FE1                            u218_20 0FED  
                          u218_21 0FEC                            u182_20 0CE9                            u182_21 0CE8  
                          u183_20 0F6D                            u183_21 0F6C                            u184_20 0F7E  
                          u184_21 0F7D                            u185_20 0FA7                            u185_21 0FA6  
                          _TMR0IF 005A                            _TMR1IF 0060                         ??_GetTime 0026  
   ChangeTrafficLight@_n_semafori 002B                      ?_UART_TxChar 0070                 __end_of_UART_Init 07FD  
               __end_of_UART_Read 0CEC                            ___bmul 0D32                         ??___aldiv 002C  
           UpdateTimes@_to_update 0024                   GetTime@shortInt 0029                            ___wmul 0D8F  
                       ??___awdiv 002F                            _decine 0065                         ??___awmod 0028  
                __end_of_init_ADC 0D0A                            _cycled 0057                  ___awdiv@quotient 0032  
                 ___awmod@divisor 0024                   ___awmod@counter 0029                  __end_of_sendByte 0DE7  
                 GetDigits@decine 0034                     main@pressione 01DF                         ?_ADC_Read 0024  
                          saved_w 007E           __end_of__initialization 003A                 __end_of_GetDigits 05DA  
                   ??_UpdateTimes 0025         __size_of_SetDefaultTimers 0090               ___bmul@multiplicand 0024  
                  __pcstackCOMMON 0070                 __end_of_BuildByte 04A1                      __pidataBANK3 0D49  
                _conteggioVeicoli 0F51                 __end_of_Conteggio 0EAE                        ??_ADC_Read 0026  
          SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C                       ?_SetDisplay 0024  
                   GetDigits@Time 0036              _dataFromGatewayIndex 0051              _timerReadFromGateway 0050  
                      __pbssBANK0 004A                        __pbssBANK1 00A0                        __pbssBANK3 0190  
                      __pmaintext 003E                           ?___bmul 0024                           ?___wmul 0024  
             __end_of_UpdateTimes 0EFF                     sendByte@byte0 003D                     sendByte@byte1 0038  
                      __pintentry 0004                  _SetReceivedTimes 05DA                        __stringtab 0800  
                       ?_init_ADC 0070                           _GetTime 0E1C                   BuildByte@valore 0025  
                 BuildByte@txByte 0029           GetTime@_dataFromGateway 0024                         ?_sendByte 0038  
            __size_of_UART_TxChar 000B                           ___aldiv 04A1                   __size_of___bmul 0017  
                         ___awdiv 06FF                           ___awmod 0768               __size_of_SetDisplay 0015  
                 __size_of___wmul 0027                 conteggioVeicoli@i 007D                           __ptext1 0DB6  
                         __ptext2 0CEC                           __ptext3 03D9                           __ptext4 0DE7  
                         __ptext5 0D8F                           __ptext6 0CF7                           __ptext7 0EAE  
                         __ptext8 07C3                           __ptext9 04A1                           _comando 0053  
                         _display 0806                      __size_of_ISR 0058                      __size_of_map 0035  
                ___awmod@dividend 0026                  ___aldiv@dividend 0028              BuildByte@sommaColumn 002F  
                         clrloop0 0CDC              end_of_initialization 003A                        ??_init_ADC 0024  
                  main@lux_select 01E4                       _UpdateTimes 0EAE                        ??_sendByte 003A  
                _SetDefaultTimers 066F                         _RCSTAbits 0018                  ___aldiv@quotient 002F  
     __size_of_ChangeTrafficLight 0052                        _motorcycle 005F                         _UART_Init 07C3  
                       _UART_Read 0CE3             SetReceivedTimes@index 003B                         _PORTAbits 0005  
                       _PORTBbits 0006                      SetDisplay@d1 0027                      SetDisplay@d2 0024  
                    SetDisplay@d3 0025                         _TRISCbits 0087                 __size_of_ADC_Read 0026  
        __end_of_conteggioVeicoli 0FA8                        map@out_max 003C                        map@out_min 003A  
SetReceivedTimes@_dataFromGateway 003A                         _TXSTAbits 0098                         _GetDigits 053E  
                  __end_of___bmul 0D49                    __end_of___wmul 0DB6                        ?_UART_Init 0033  
                      ?_UART_Read 0070                         _BuildByte 03D9                         _Conteggio 0E62  
               BuildByte@sommaRow 002E               start_initialization 0013                       __end_of_ISR 1000  
                    ??_SetDisplay 0027                       __end_of_map 0E1C          __end_of_SetReceivedTimes 066F  
                      ?_GetDigits 0034                          ??___bmul 0025                    ADC_Read@canale 0027  
                        ??___wmul 0028                        init_fetch0 0D0A                       __pdataBANK3 01BD  
              __end_of_SetDisplay 0D32                        ?_BuildByte 0024                    GetDigits@unita 0035  
                      ?_Conteggio 0070        SetReceivedTimes@_to_update 002D                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK3 01DD                          ?_GetTime 0024  
           SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013  
     ChangeTrafficLight@_semafori 0032                         _centinaia 0064                 __size_of_sendByte 0031  
                        ?___aldiv 0024                          ?___awdiv 002B                          ?___awmod 0024  
                     ??_UART_Init 0035                       ??_UART_Read 0070                    BuildByte@i_332 0036  
                       __pstrings 0800                    BuildByte@y_333 0032                    sendByte@valore 0039  
                  sendByte@txByte 003E                    BuildByte@byte0 0028                    BuildByte@byte1 0024  
        __end_of_SetDefaultTimers 06FF                          _ADC_Read 0D69                         _count_lux 0054  
                   UART_TxChar@ch 0024                       _id_semaforo 0063                   ___aldiv@divisor 0024  
               SetReceivedTimes@i 0039                 interrupt_function 0004                   ___aldiv@counter 002D  
                  ___wmul@product 0028        SetReceivedTimes@semaforoId 0038                      ?_UpdateTimes 0024  
                       clear_ram0 0CDB                          _PIE1bits 008C                     ??_UART_TxChar 0024  
                     ??_GetDigits 0038                          _GO_nDONE 00FA                 UART_Init@baudrate 0033  
                       _to_update 00A0                       ??_BuildByte 0026                         map@in_max 0038  
                       map@in_min 0036                       __stringbase 0805                         main@i_460 01E3  
                       main@i_457 01E5                         main@i_458 01E2                       ??_Conteggio 0076  
               ___wmul@multiplier 0024                      GetTime@index 0028                      _RoadsSensors 004A  
               ?_conteggioVeicoli 0070                      _secondPassed 0058                ??_conteggioVeicoli 0079  
                __size_of_GetTime 0046                          _Semafori 01BD                GetDigits@centinaia 003B  
      __end_of_ChangeTrafficLight 0F51                       _readGateway 0059                  __size_of___aldiv 009D  
             __end_of_UART_TxChar 0CF7                  __size_of___awdiv 0069                  __size_of___awmod 005B  
              __end_of__stringtab 0806                         sendByte@i 003F                          __ptext10 05DA  
                        __ptext11 0D32                          __ptext20 0FA8                          __ptext12 0E1C  
                        __ptext21 0F51                          __ptext13 0D1D                          __ptext22 0E62  
                        __ptext14 066F                          __ptext23 0CE3                          __ptext15 053E  
                        __ptext16 06FF                          __ptext17 0EFF                          __ptext18 0768  
                        __ptext19 0D69                          _init_ADC 0CF7                 ?_SetReceivedTimes 002C  
                   __size_of_main 039B                   _dataFromGateway 0190                          _old_disp 0056  
                        _sendByte 0DB6                ??_SetReceivedTimes 002F                          main@temp 01DD  
                        main@time 01E0                        _INTCONbits 000B                          init_ram0 0D0E  
            Conteggio@_motorcycle 0072                          intlevel1 0000                   _readGatewayDone 005A  
                       stringcode 0800                       _UART_TxChar 0CEC           SetReceivedTimes@colorId 0037  
            __size_of_UpdateTimes 0051                        GetTime@tmp 002A                        _OPTION_REG 0081  
                 SetDisplay@value 0026                          stringdir 0800                          stringtab 0800  
                    UpdateTimes@i 0032                      UpdateTimes@l 0031                 ?_SetDefaultTimers 0024  
                    ___aldiv@sign 002E                ??_SetDefaultTimers 002B      SetReceivedTimes@_id_semaforo 002E  
                      BuildByte@i 0034                        BuildByte@y 0030         SetDefaultTimers@_semafori 002A  
                 Conteggio@_count 0070                     Conteggio@_car 0073                   Conteggio@_truck 0074  
                  Conteggio@index 0075  
