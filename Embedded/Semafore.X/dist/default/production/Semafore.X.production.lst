

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 02 12:58:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK1
   199  0C2C                     __pidataBANK1:	
   200                           
   201                           ;initializer for _Semafori
   202  0C2C  34CF               	retlw	low (_s0| 0)
   203  0C2D  3400               	retlw	high (_s0| 0)
   204  0C2E  34C1               	retlw	low (_s1| 0)
   205  0C2F  3400               	retlw	high (_s1| 0)
   206  0C30  34B3               	retlw	low (_s2| 0)
   207  0C31  3400               	retlw	high (_s2| 0)
   208  0C32  34C8               	retlw	low (_s3| (0+256))
   209  0C33  3401               	retlw	high (_s3| (0+256))
   210  0C34  34BA               	retlw	low (_s4| (0+256))
   211  0C35  3401               	retlw	high (_s4| (0+256))
   212  0C36  34AC               	retlw	low (_s5| (0+256))
   213  0C37  3401               	retlw	high (_s5| (0+256))
   214  0C38  349E               	retlw	low (_s6| (0+256))
   215  0C39  3401               	retlw	high (_s6| (0+256))
   216  0C3A  3490               	retlw	low (_s7| (0+256))
   217  0C3B  3401               	retlw	high (_s7| (0+256))
   218                           
   219                           	psect	strings
   220  0800                     __pstrings:	
   221  0800                     stringtab:	
   222  0800                     __stringtab:	
   223  0800                     stringcode:	
   224                           ;	String table - string pointers are 1 byte each
   225                           
   226  0800                     stringdir:	
   227  0800  3008               	movlw	high stringdir
   228  0801  008A               	movwf	10
   229  0802  0804               	movf	4,w
   230  0803  0A84               	incf	4,f
   231  0804  0782               	addwf	2,f
   232  0805                     __stringbase:	
   233  0805  3400               	retlw	0
   234  0806                     __end_of__stringtab:	
   235  0806                     _display:	
   236  0806  343F               	retlw	63
   237  0807  3406               	retlw	6
   238  0808  345B               	retlw	91
   239  0809  344F               	retlw	79
   240  080A  3466               	retlw	102
   241  080B  346D               	retlw	109
   242  080C  347D               	retlw	125
   243  080D  3407               	retlw	7
   244  080E  347F               	retlw	127
   245  080F  346F               	retlw	111
   246  0810  3400               	retlw	0
   247  0811                     __end_of_display:	
   248  0006                     _PORTBbits	set	6
   249  0008                     _PORTD	set	8
   250  0005                     _PORTAbits	set	5
   251  001A                     _RCREG	set	26
   252  0019                     _TXREG	set	25
   253  000B                     _INTCONbits	set	11
   254  0018                     _RCSTAbits	set	24
   255  001E                     _ADRESH	set	30
   256  001F                     _ADCON0	set	31
   257  000E                     _TMR1L	set	14
   258  000F                     _TMR1H	set	15
   259  0010                     _T1CON	set	16
   260  0001                     _TMR0	set	1
   261  000B                     _INTCON	set	11
   262  0060                     _TMR1IF	set	96
   263  005A                     _TMR0IF	set	90
   264  0065                     _RCIF	set	101
   265  0064                     _TXIF	set	100
   266  00FA                     _GO_nDONE	set	250
   267  008C                     _PIE1bits	set	140
   268  0099                     _SPBRG	set	153
   269  0098                     _TXSTAbits	set	152
   270  0087                     _TRISCbits	set	135
   271  009E                     _ADRESL	set	158
   272  009F                     _ADCON1	set	159
   273  0085                     _TRISA	set	133
   274  0081                     _OPTION_REG	set	129
   275  0089                     _TRISE	set	137
   276  0088                     _TRISD	set	136
   277  0087                     _TRISC	set	135
   278  0086                     _TRISB	set	134
   279                           
   280                           ; #config settings
   281  0000                     
   282                           	psect	cinit
   283  0013                     start_initialization:	
   284  0013                     __initialization:	
   285                           
   286                           ; Initialize objects allocated to BANK1
   287  0013  1383               	bcf	3,7	;select IRP bank0
   288  0014  30ED               	movlw	low (__pdataBANK1+16)
   289  0015  00FD               	movwf	btemp+-1
   290  0016  300C               	movlw	high __pidataBANK1
   291  0017  00FE               	movwf	btemp
   292  0018  302C               	movlw	low __pidataBANK1
   293  0019  00FF               	movwf	btemp+1
   294  001A  30DD               	movlw	low __pdataBANK1
   295  001B  0084               	movwf	4
   296  001C  120A  158A  2453  120A  118A  	fcall	init_ram0
   297                           
   298                           ; Clear objects allocated to BANK3
   299  0021  1783               	bsf	3,7	;select IRP bank2
   300  0022  3090               	movlw	low __pbssBANK3
   301  0023  0084               	movwf	4
   302  0024  30D6               	movlw	low (__pbssBANK3+70)
   303  0025  120A  158A  2410  120A  118A  	fcall	clear_ram0
   304                           
   305                           ; Clear objects allocated to BANK1
   306  002A  1383               	bcf	3,7	;select IRP bank0
   307  002B  30A0               	movlw	low __pbssBANK1
   308  002C  0084               	movwf	4
   309  002D  30DD               	movlw	low (__pbssBANK1+61)
   310  002E  120A  158A  2410  120A  118A  	fcall	clear_ram0
   311                           
   312                           ; Clear objects allocated to BANK0
   313  0033  304A               	movlw	low __pbssBANK0
   314  0034  0084               	movwf	4
   315  0035  3066               	movlw	low (__pbssBANK0+28)
   316  0036  120A  158A  2410  120A  118A  	fcall	clear_ram0
   317  003B                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  003B                     __end_of__initialization:	
   321  003B  0183               	clrf	3
   322  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssBANK0
   325  004A                     __pbssBANK0:	
   326  004A                     _count:	
   327  004A                     	ds	2
   328  004C                     _timerReadFromGateway:	
   329  004C                     	ds	1
   330  004D                     _dataFromGatewayIndex:	
   331  004D                     	ds	1
   332  004E                     _time:	
   333  004E                     	ds	1
   334  004F                     _comando:	
   335  004F                     	ds	1
   336  0050                     _count_lux:	
   337  0050                     	ds	1
   338  0051                     _disp:	
   339  0051                     	ds	1
   340  0052                     _cycled:	
   341  0052                     	ds	1
   342  0053                     _secondPassed:	
   343  0053                     	ds	1
   344  0054                     _readGateway:	
   345  0054                     	ds	1
   346  0055                     _readGatewayDone:	
   347  0055                     	ds	1
   348  0056                     _truck:	
   349  0056                     	ds	4
   350  005A                     _car:	
   351  005A                     	ds	4
   352  005E                     _motorcycle:	
   353  005E                     	ds	4
   354  0062                     _id_semaforo:	
   355  0062                     	ds	1
   356  0063                     _centinaia:	
   357  0063                     	ds	1
   358  0064                     _decine:	
   359  0064                     	ds	1
   360  0065                     _unita:	
   361  0065                     	ds	1
   362                           
   363                           	psect	bssBANK1
   364  00A0                     __pbssBANK1:	
   365  00A0                     _RoadsSensors:	
   366  00A0                     	ds	4
   367  00A4                     _dataFromGateway:	
   368  00A4                     	ds	15
   369  00B3                     _s2:	
   370  00B3                     	ds	14
   371  00C1                     _s1:	
   372  00C1                     	ds	14
   373  00CF                     _s0:	
   374  00CF                     	ds	14
   375                           
   376                           	psect	dataBANK1
   377  00DD                     __pdataBANK1:	
   378  00DD                     _Semafori:	
   379  00DD                     	ds	16
   380                           
   381                           	psect	bssBANK3
   382  0190                     __pbssBANK3:	
   383  0190                     _s7:	
   384  0190                     	ds	14
   385  019E                     _s6:	
   386  019E                     	ds	14
   387  01AC                     _s5:	
   388  01AC                     	ds	14
   389  01BA                     _s4:	
   390  01BA                     	ds	14
   391  01C8                     _s3:	
   392  01C8                     	ds	14
   393                           
   394                           	psect	inittext
   395  0C4F                     init_fetch0:	
   396                           ;	Called with low address in FSR and high address in W
   397                           
   398  0C4F  087E               	movf	btemp,w
   399  0C50  008A               	movwf	10
   400  0C51  087F               	movf	btemp+1,w
   401  0C52  0082               	movwf	2
   402  0C53                     init_ram0:	
   403                           ;Called with:
   404                           ;	high address of idata address in btemp 
   405                           ;	low address of idata address in btemp+1 
   406                           ;	low address of data in FSR
   407                           ;	high address + 1 of data in btemp-1
   408                           
   409  0C53  120A  158A  244F  120A  158A  	fcall	init_fetch0
   410  0C58  0080               	movwf	0
   411  0C59  0A84               	incf	4,f
   412  0C5A  0804               	movf	4,w
   413  0C5B  067D               	xorwf	btemp+-1,w
   414  0C5C  1903               	btfsc	3,2
   415  0C5D  3400               	retlw	0
   416  0C5E  0AFF               	incf	btemp+1,f
   417  0C5F  1903               	btfsc	3,2
   418  0C60  0AFE               	incf	btemp,f
   419  0C61  2C53               	goto	init_ram0
   420                           
   421                           	psect	clrtext
   422  0C10                     clear_ram0:	
   423                           ;	Called with FSR containing the base address, and
   424                           ;	W with the last address+1
   425                           
   426  0C10  0064               	clrwdt	;clear the watchdog before getting into this loop
   427  0C11                     clrloop0:	
   428  0C11  0180               	clrf	0	;clear RAM location pointed to by FSR
   429  0C12  0A84               	incf	4,f	;increment pointer
   430  0C13  0604               	xorwf	4,w	;XOR with final address
   431  0C14  1903               	btfsc	3,2	;have we reached the end yet?
   432  0C15  3400               	retlw	0	;all done for this memory range, return
   433  0C16  0604               	xorwf	4,w	;XOR again to restore value
   434  0C17  2C11               	goto	clrloop0	;do the next byte
   435                           
   436                           	psect	cstackBANK3
   437  01D6                     __pcstackBANK3:	
   438  01D6                     main@temp:	
   439                           
   440                           ; 1 bytes @ 0x0
   441  01D6                     	ds	1
   442  01D7                     main@umidita:	
   443                           
   444                           ; 1 bytes @ 0x1
   445  01D7                     	ds	1
   446  01D8                     main@pressione:	
   447                           
   448                           ; 1 bytes @ 0x2
   449  01D8                     	ds	1
   450  01D9                     main@time:	
   451                           
   452                           ; 2 bytes @ 0x3
   453  01D9                     	ds	2
   454  01DB                     main@i_467:	
   455                           
   456                           ; 1 bytes @ 0x5
   457  01DB                     	ds	1
   458  01DC                     main@i_469:	
   459                           
   460                           ; 1 bytes @ 0x6
   461  01DC                     	ds	1
   462  01DD                     main@lux_select:	
   463                           
   464                           ; 1 bytes @ 0x7
   465  01DD                     	ds	1
   466  01DE                     main@i_466:	
   467                           
   468                           ; 2 bytes @ 0x8
   469  01DE                     	ds	2
   470  01E0                     main@i:	
   471                           
   472                           ; 2 bytes @ 0xA
   473  01E0                     	ds	2
   474                           
   475                           	psect	cstackCOMMON
   476  0070                     __pcstackCOMMON:	
   477  0070                     ?_init_ADC:	
   478  0070                     ?_UpdateTimes:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_Conteggio:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_main:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_UART_TxChar:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_UART_Read:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ??_UART_Read:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_conteggioVeicoli:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_ISR:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     Conteggio@_count:	
   503                           ; 1 bytes @ 0x0
   504                           
   505                           
   506                           ; 2 bytes @ 0x0
   507  0070                     	ds	2
   508  0072                     Conteggio@_motorcycle:	
   509                           
   510                           ; 1 bytes @ 0x2
   511  0072                     	ds	1
   512  0073                     Conteggio@_car:	
   513                           
   514                           ; 1 bytes @ 0x3
   515  0073                     	ds	1
   516  0074                     Conteggio@_truck:	
   517                           
   518                           ; 1 bytes @ 0x4
   519  0074                     	ds	1
   520  0075                     Conteggio@index:	
   521                           
   522                           ; 1 bytes @ 0x5
   523  0075                     	ds	1
   524  0076                     ??_Conteggio:	
   525                           
   526                           ; 1 bytes @ 0x6
   527  0076                     	ds	3
   528  0079                     ??_conteggioVeicoli:	
   529                           
   530                           ; 1 bytes @ 0x9
   531  0079                     	ds	4
   532  007D                     conteggioVeicoli@i:	
   533                           
   534                           ; 1 bytes @ 0xD
   535  007D                     	ds	1
   536                           
   537                           	psect	cstackBANK0
   538  0020                     __pcstackBANK0:	
   539  0020                     ??_ISR:	
   540                           
   541                           ; 1 bytes @ 0x0
   542  0020                     	ds	4
   543  0024                     ??_init_ADC:	
   544  0024                     ?_SetDisplay:	
   545                           ; 1 bytes @ 0x4
   546                           
   547  0024                     ?_BuildByte:	
   548                           ; 1 bytes @ 0x4
   549                           
   550  0024                     ??_UpdateTimes:	
   551                           ; 1 bytes @ 0x4
   552                           
   553  0024                     ?_SetDefaultTimers:	
   554                           ; 1 bytes @ 0x4
   555                           
   556  0024                     ??_UART_TxChar:	
   557                           ; 1 bytes @ 0x4
   558                           
   559  0024                     ?___bmul:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0024                     ?_ADC_Read:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0024                     ?_GetTime:	
   566                           ; 2 bytes @ 0x4
   567                           
   568  0024                     ?___wmul:	
   569                           ; 2 bytes @ 0x4
   570                           
   571  0024                     ?___awmod:	
   572                           ; 2 bytes @ 0x4
   573                           
   574  0024                     ?___aldiv:	
   575                           ; 2 bytes @ 0x4
   576                           
   577  0024                     BuildByte@byte1:	
   578                           ; 4 bytes @ 0x4
   579                           
   580  0024                     GetTime@_dataFromGateway:	
   581                           ; 1 bytes @ 0x4
   582                           
   583  0024                     UART_TxChar@ch:	
   584                           ; 1 bytes @ 0x4
   585                           
   586  0024                     SetDisplay@d2:	
   587                           ; 1 bytes @ 0x4
   588                           
   589  0024                     ___bmul@multiplicand:	
   590                           ; 1 bytes @ 0x4
   591                           
   592  0024                     SetDefaultTimers@rosso:	
   593                           ; 1 bytes @ 0x4
   594                           
   595  0024                     ___wmul@multiplier:	
   596                           ; 2 bytes @ 0x4
   597                           
   598  0024                     ___awmod@divisor:	
   599                           ; 2 bytes @ 0x4
   600                           
   601  0024                     ___aldiv@divisor:	
   602                           ; 2 bytes @ 0x4
   603                           
   604                           
   605                           ; 4 bytes @ 0x4
   606  0024                     	ds	1
   607  0025                     ??___bmul:	
   608  0025                     BuildByte@valore:	
   609                           ; 1 bytes @ 0x5
   610                           
   611  0025                     SetDisplay@d3:	
   612                           ; 1 bytes @ 0x5
   613                           
   614                           
   615                           ; 1 bytes @ 0x5
   616  0025                     	ds	1
   617  0026                     ??_ADC_Read:	
   618  0026                     ??_BuildByte:	
   619                           ; 1 bytes @ 0x6
   620                           
   621  0026                     ??_GetTime:	
   622                           ; 1 bytes @ 0x6
   623                           
   624  0026                     SetDisplay@value:	
   625                           ; 1 bytes @ 0x6
   626                           
   627  0026                     ___bmul@product:	
   628                           ; 1 bytes @ 0x6
   629                           
   630  0026                     SetDefaultTimers@verde:	
   631                           ; 1 bytes @ 0x6
   632                           
   633  0026                     ___wmul@multiplicand:	
   634                           ; 2 bytes @ 0x6
   635                           
   636  0026                     ___awmod@dividend:	
   637                           ; 2 bytes @ 0x6
   638                           
   639                           
   640                           ; 2 bytes @ 0x6
   641  0026                     	ds	1
   642  0027                     ??_SetDisplay:	
   643  0027                     ADC_Read@canale:	
   644                           ; 1 bytes @ 0x7
   645                           
   646  0027                     SetDisplay@d1:	
   647                           ; 1 bytes @ 0x7
   648                           
   649  0027                     ___bmul@multiplier:	
   650                           ; 1 bytes @ 0x7
   651                           
   652                           
   653                           ; 1 bytes @ 0x7
   654  0027                     	ds	1
   655  0028                     ??___wmul:	
   656  0028                     ??___awmod:	
   657                           ; 1 bytes @ 0x8
   658                           
   659  0028                     BuildByte@byte0:	
   660                           ; 1 bytes @ 0x8
   661                           
   662  0028                     GetTime@index:	
   663                           ; 1 bytes @ 0x8
   664                           
   665  0028                     SetDefaultTimers@giallo:	
   666                           ; 1 bytes @ 0x8
   667                           
   668  0028                     ___wmul@product:	
   669                           ; 2 bytes @ 0x8
   670                           
   671  0028                     ___aldiv@dividend:	
   672                           ; 2 bytes @ 0x8
   673                           
   674                           
   675                           ; 4 bytes @ 0x8
   676  0028                     	ds	1
   677  0029                     GetTime@shortInt:	
   678  0029                     ___awmod@counter:	
   679                           ; 1 bytes @ 0x9
   680                           
   681  0029                     BuildByte@txByte:	
   682                           ; 1 bytes @ 0x9
   683                           
   684                           
   685                           ; 5 bytes @ 0x9
   686  0029                     	ds	1
   687  002A                     SetDefaultTimers@_semafori:	
   688  002A                     ___awmod@sign:	
   689                           ; 1 bytes @ 0xA
   690                           
   691  002A                     GetTime@tmp:	
   692                           ; 1 bytes @ 0xA
   693                           
   694                           
   695                           ; 2 bytes @ 0xA
   696  002A                     	ds	1
   697  002B                     ?_ChangeTrafficLight:	
   698  002B                     ??_SetDefaultTimers:	
   699                           ; 1 bytes @ 0xB
   700                           
   701  002B                     ?___awdiv:	
   702                           ; 1 bytes @ 0xB
   703                           
   704  002B                     ChangeTrafficLight@_n_semafori:	
   705                           ; 2 bytes @ 0xB
   706                           
   707  002B                     ___awdiv@divisor:	
   708                           ; 1 bytes @ 0xB
   709                           
   710                           
   711                           ; 2 bytes @ 0xB
   712  002B                     	ds	1
   713  002C                     ??_ChangeTrafficLight:	
   714  002C                     ?_SetReceivedTimes:	
   715                           ; 1 bytes @ 0xC
   716                           
   717  002C                     ??___aldiv:	
   718                           ; 1 bytes @ 0xC
   719                           
   720  002C                     SetReceivedTimes@_semafori:	
   721                           ; 1 bytes @ 0xC
   722                           
   723                           
   724                           ; 1 bytes @ 0xC
   725  002C                     	ds	1
   726  002D                     ??_SetReceivedTimes:	
   727  002D                     ___aldiv@counter:	
   728                           ; 1 bytes @ 0xD
   729                           
   730  002D                     ___awdiv@dividend:	
   731                           ; 1 bytes @ 0xD
   732                           
   733                           
   734                           ; 2 bytes @ 0xD
   735  002D                     	ds	1
   736  002E                     BuildByte@sommaRow:	
   737  002E                     ___aldiv@sign:	
   738                           ; 1 bytes @ 0xE
   739                           
   740                           
   741                           ; 1 bytes @ 0xE
   742  002E                     	ds	1
   743  002F                     ??___awdiv:	
   744  002F                     BuildByte@sommaColumn:	
   745                           ; 1 bytes @ 0xF
   746                           
   747  002F                     ___aldiv@quotient:	
   748                           ; 1 bytes @ 0xF
   749                           
   750                           
   751                           ; 4 bytes @ 0xF
   752  002F                     	ds	1
   753  0030                     ___awdiv@counter:	
   754  0030                     BuildByte@y:	
   755                           ; 1 bytes @ 0x10
   756                           
   757                           
   758                           ; 2 bytes @ 0x10
   759  0030                     	ds	1
   760  0031                     ___awdiv@sign:	
   761                           
   762                           ; 1 bytes @ 0x11
   763  0031                     	ds	1
   764  0032                     ChangeTrafficLight@_semafori:	
   765  0032                     SetDefaultTimers@l:	
   766                           ; 1 bytes @ 0x12
   767                           
   768  0032                     BuildByte@y_333:	
   769                           ; 1 bytes @ 0x12
   770                           
   771  0032                     ___awdiv@quotient:	
   772                           ; 2 bytes @ 0x12
   773                           
   774                           
   775                           ; 2 bytes @ 0x12
   776  0032                     	ds	1
   777  0033                     ?_UART_Init:	
   778  0033                     SetDefaultTimers@i:	
   779                           ; 1 bytes @ 0x13
   780                           
   781  0033                     UART_Init@baudrate:	
   782                           ; 1 bytes @ 0x13
   783                           
   784                           
   785                           ; 2 bytes @ 0x13
   786  0033                     	ds	1
   787  0034                     ?_GetDigits:	
   788  0034                     ?_map:	
   789                           ; 1 bytes @ 0x14
   790                           
   791  0034                     GetDigits@decine:	
   792                           ; 2 bytes @ 0x14
   793                           
   794  0034                     UpdateTimes@_semafori:	
   795                           ; 1 bytes @ 0x14
   796                           
   797  0034                     map@x:	
   798                           ; 1 bytes @ 0x14
   799                           
   800  0034                     BuildByte@i:	
   801                           ; 2 bytes @ 0x14
   802                           
   803                           
   804                           ; 2 bytes @ 0x14
   805  0034                     	ds	1
   806  0035                     ??_UART_Init:	
   807  0035                     GetDigits@unita:	
   808                           ; 1 bytes @ 0x15
   809                           
   810  0035                     UpdateTimes@l:	
   811                           ; 1 bytes @ 0x15
   812                           
   813  0035                     SetReceivedTimes@semaforoId:	
   814                           ; 1 bytes @ 0x15
   815                           
   816                           
   817                           ; 1 bytes @ 0x15
   818  0035                     	ds	1
   819  0036                     UpdateTimes@i:	
   820  0036                     SetReceivedTimes@colorId:	
   821                           ; 1 bytes @ 0x16
   822                           
   823  0036                     map@in_min:	
   824                           ; 1 bytes @ 0x16
   825                           
   826  0036                     GetDigits@Time:	
   827                           ; 2 bytes @ 0x16
   828                           
   829  0036                     BuildByte@i_332:	
   830                           ; 2 bytes @ 0x16
   831                           
   832                           
   833                           ; 2 bytes @ 0x16
   834  0036                     	ds	1
   835  0037                     SetReceivedTimes@_dataFromGateway:	
   836                           
   837                           ; 1 bytes @ 0x17
   838  0037                     	ds	1
   839  0038                     ?_sendByte:	
   840  0038                     ??_GetDigits:	
   841                           ; 1 bytes @ 0x18
   842                           
   843  0038                     SetReceivedTimes@index:	
   844                           ; 1 bytes @ 0x18
   845                           
   846  0038                     sendByte@byte1:	
   847                           ; 1 bytes @ 0x18
   848                           
   849  0038                     map@in_max:	
   850                           ; 1 bytes @ 0x18
   851                           
   852                           
   853                           ; 2 bytes @ 0x18
   854  0038                     	ds	1
   855  0039                     SetReceivedTimes@i:	
   856  0039                     sendByte@valore:	
   857                           ; 1 bytes @ 0x19
   858                           
   859  0039                     _GetDigits$1183:	
   860                           ; 1 bytes @ 0x19
   861                           
   862                           
   863                           ; 2 bytes @ 0x19
   864  0039                     	ds	1
   865  003A                     ??_sendByte:	
   866  003A                     map@out_min:	
   867                           ; 1 bytes @ 0x1A
   868                           
   869                           
   870                           ; 2 bytes @ 0x1A
   871  003A                     	ds	1
   872  003B                     GetDigits@centinaia:	
   873                           
   874                           ; 1 bytes @ 0x1B
   875  003B                     	ds	1
   876  003C                     map@out_max:	
   877                           
   878                           ; 2 bytes @ 0x1C
   879  003C                     	ds	1
   880  003D                     sendByte@byte0:	
   881                           
   882                           ; 1 bytes @ 0x1D
   883  003D                     	ds	1
   884  003E                     ??_map:	
   885  003E                     sendByte@txByte:	
   886                           ; 1 bytes @ 0x1E
   887                           
   888                           
   889                           ; 1 bytes @ 0x1E
   890  003E                     	ds	1
   891  003F                     sendByte@i:	
   892                           
   893                           ; 1 bytes @ 0x1F
   894  003F                     	ds	1
   895  0040                     ??_main:	
   896                           
   897                           ; 1 bytes @ 0x20
   898  0040                     	ds	10
   899                           
   900                           	psect	maintext
   901  003F                     __pmaintext:	
   902 ;;
   903 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   904 ;;
   905 ;; *************** function _main *****************
   906 ;; Defined at:
   907 ;;		line 130 in file "main.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  i               1    6[BANK3 ] unsigned char 
   912 ;;  i               1    5[BANK3 ] unsigned char 
   913 ;;  i               2    8[BANK3 ] int 
   914 ;;  i               2   10[BANK3 ] int 
   915 ;;  time            2    3[BANK3 ] int 
   916 ;;  lux_select      1    7[BANK3 ] unsigned char 
   917 ;;  pressione       1    2[BANK3 ] unsigned char 
   918 ;;  umidita         1    1[BANK3 ] unsigned char 
   919 ;;  temp            1    0[BANK3 ] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : B00/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0       0      12       0
   931 ;;      Temps:          0      10       0       0       0
   932 ;;      Totals:         0      10       0      12       0
   933 ;;Total ram usage:       22 bytes
   934 ;; Hardware stack levels required when called:    5
   935 ;; This function calls:
   936 ;;		_ADC_Read
   937 ;;		_ChangeTrafficLight
   938 ;;		_GetDigits
   939 ;;		_SetDefaultTimers
   940 ;;		_SetDisplay
   941 ;;		_SetReceivedTimes
   942 ;;		_UART_Init
   943 ;;		_UpdateTimes
   944 ;;		___awmod
   945 ;;		_init_ADC
   946 ;;		_map
   947 ;;		_sendByte
   948 ;; This function is called by:
   949 ;;		Startup code after reset
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _main
   955  003F                     _main:	
   956  003F                     l2968:	
   957                           ;incstack = 0
   958                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   959                           
   960                           
   961                           ;main.c: 132:     TRISB = 0x1F;
   962  003F  301F               	movlw	31
   963  0040  1683               	bsf	3,5	;RP0=1, select bank1
   964  0041  1303               	bcf	3,6	;RP1=0, select bank1
   965  0042  0086               	movwf	6	;volatile
   966                           
   967                           ;main.c: 133:     TRISC = 0x80;
   968  0043  3080               	movlw	128
   969  0044  0087               	movwf	7	;volatile
   970  0045                     l2970:	
   971                           
   972                           ;main.c: 134:     TRISD = 0x00;
   973  0045  0188               	clrf	8	;volatile
   974  0046                     l2972:	
   975                           
   976                           ;main.c: 135:     TRISE = 0x01;
   977  0046  3001               	movlw	1
   978  0047  0089               	movwf	9	;volatile
   979  0048                     l2974:	
   980                           
   981                           ;main.c: 136:     INTCON = 0xE0;
   982  0048  30E0               	movlw	224
   983  0049  008B               	movwf	11	;volatile
   984  004A                     l2976:	
   985                           
   986                           ;main.c: 137:     OPTION_REG = 0x04;
   987  004A  3004               	movlw	4
   988  004B  0081               	movwf	1	;volatile
   989  004C                     l2978:	
   990                           
   991                           ;main.c: 138:     TMR0 = 6;
   992  004C  3006               	movlw	6
   993  004D  1283               	bcf	3,5	;RP0=0, select bank0
   994  004E  1303               	bcf	3,6	;RP1=0, select bank0
   995  004F  0081               	movwf	1	;volatile
   996  0050                     l2980:	
   997                           
   998                           ;main.c: 139:     T1CON = 0x31;
   999  0050  3031               	movlw	49
  1000  0051  0090               	movwf	16	;volatile
  1001  0052                     l2982:	
  1002                           
  1003                           ;main.c: 141:     TMR1H = 60;
  1004  0052  303C               	movlw	60
  1005  0053  008F               	movwf	15	;volatile
  1006  0054                     l2984:	
  1007                           
  1008                           ;main.c: 142:     TMR1L = 176;
  1009  0054  30B0               	movlw	176
  1010  0055  008E               	movwf	14	;volatile
  1011                           
  1012                           ;main.c: 147:     disp = 0;
  1013  0056  01D1               	clrf	_disp
  1014                           
  1015                           ;main.c: 148:     unsigned char temp = 0;
  1016  0057  1683               	bsf	3,5	;RP0=1, select bank3
  1017  0058  1703               	bsf	3,6	;RP1=1, select bank3
  1018  0059  01D6               	clrf	main@temp^(0+384)
  1019                           
  1020                           ;main.c: 149:     unsigned char umidita = 0;
  1021  005A  01D7               	clrf	main@umidita^(0+384)
  1022                           
  1023                           ;main.c: 150:     unsigned char pressione = 0;
  1024  005B  01D8               	clrf	main@pressione^(0+384)
  1025  005C                     l2986:	
  1026                           
  1027                           ;main.c: 152:     init_ADC();
  1028  005C  120A  158A  243C  120A  118A  	fcall	_init_ADC
  1029  0061                     l2988:	
  1030                           
  1031                           ;main.c: 153:     UART_Init(9600);
  1032  0061  3080               	movlw	128
  1033  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0064  00B3               	movwf	UART_Init@baudrate
  1036  0065  3025               	movlw	37
  1037  0066  00B4               	movwf	UART_Init@baudrate+1
  1038  0067  120A  118A  27C1  120A  118A  	fcall	_UART_Init
  1039  006C                     l2990:	
  1040                           
  1041                           ;main.c: 154:     SetDefaultTimers(1,1,1, Semafori);
  1042  006C  3001               	movlw	1
  1043  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1044  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1045  006F  00A4               	movwf	SetDefaultTimers@rosso
  1046  0070  3000               	movlw	0
  1047  0071  00A5               	movwf	SetDefaultTimers@rosso+1
  1048  0072  3001               	movlw	1
  1049  0073  00A6               	movwf	SetDefaultTimers@verde
  1050  0074  3000               	movlw	0
  1051  0075  00A7               	movwf	SetDefaultTimers@verde+1
  1052  0076  3001               	movlw	1
  1053  0077  00A8               	movwf	SetDefaultTimers@giallo
  1054  0078  3000               	movlw	0
  1055  0079  00A9               	movwf	SetDefaultTimers@giallo+1
  1056  007A  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1057  007B  00C0               	movwf	??_main
  1058  007C  0840               	movf	??_main,w
  1059  007D  00AA               	movwf	SetDefaultTimers@_semafori
  1060  007E  120A  118A  26C3  120A  118A  	fcall	_SetDefaultTimers
  1061  0083                     l2992:	
  1062                           
  1063                           ;main.c: 157:     {;main.c: 159:         if (readGateway.Bit)
  1064  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0085  1C54               	btfss	_readGateway,0
  1067  0086  2888               	goto	u2721
  1068  0087  2889               	goto	u2720
  1069  0088                     u2721:	
  1070  0088  2B1D               	goto	l234
  1071  0089                     u2720:	
  1072  0089  2B08               	goto	l3072
  1073  008A                     l236:	
  1074                           ;main.c: 162:             {;main.c: 163:             case 0x08:
  1075                           
  1076                           
  1077                           ;main.c: 164:                 readGatewayDone.Bit = 1;
  1078  008A  1455               	bsf	_readGatewayDone,0
  1079                           
  1080                           ;main.c: 165:                 readGateway.Bit = 0;
  1081  008B  1054               	bcf	_readGateway,0
  1082  008C                     l2996:	
  1083                           
  1084                           ;main.c: 167:                 for (int i = 0; i < 4; i++)
  1085  008C  1683               	bsf	3,5	;RP0=1, select bank3
  1086  008D  1703               	bsf	3,6	;RP1=1, select bank3
  1087  008E  01E0               	clrf	main@i^(0+384)
  1088  008F  01E1               	clrf	(main@i+1)^(0+384)
  1089  0090  29AD               	goto	l3012
  1090  0091                     l3002:	
  1091                           
  1092                           ;main.c: 172:                         sendByte(0x03, 0x01, motorcycle[i]);
  1093  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0093  01B8               	clrf	sendByte@byte1
  1096  0094  0AB8               	incf	sendByte@byte1,f
  1097  0095  1683               	bsf	3,5	;RP0=1, select bank3
  1098  0096  1703               	bsf	3,6	;RP1=1, select bank3
  1099  0097  0860               	movf	main@i^(0+384),w
  1100  0098  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1101  0099  0084               	movwf	4
  1102  009A  1383               	bcf	3,7	;select IRP bank0
  1103  009B  0800               	movf	0,w
  1104  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1105  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1106  009E  00C0               	movwf	??_main
  1107  009F  0840               	movf	??_main,w
  1108  00A0  00B9               	movwf	sendByte@valore
  1109  00A1  3003               	movlw	3
  1110  00A2  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1111                           
  1112                           ;main.c: 173:                         sendByte(0x03, 0x02, car[i]);
  1113  00A7  3002               	movlw	2
  1114  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1115  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1116  00AA  00C0               	movwf	??_main
  1117  00AB  0840               	movf	??_main,w
  1118  00AC  00B8               	movwf	sendByte@byte1
  1119  00AD  1683               	bsf	3,5	;RP0=1, select bank3
  1120  00AE  1703               	bsf	3,6	;RP1=1, select bank3
  1121  00AF  0860               	movf	main@i^(0+384),w
  1122  00B0  3E5A               	addlw	(low (_car| 0))& (0+255)
  1123  00B1  0084               	movwf	4
  1124  00B2  1383               	bcf	3,7	;select IRP bank0
  1125  00B3  0800               	movf	0,w
  1126  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1127  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1128  00B6  00C1               	movwf	??_main+1
  1129  00B7  0841               	movf	??_main+1,w
  1130  00B8  00B9               	movwf	sendByte@valore
  1131  00B9  3003               	movlw	3
  1132  00BA  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1133                           
  1134                           ;main.c: 174:                         sendByte(0x03, 0x03, truck[i]);
  1135  00BF  3003               	movlw	3
  1136  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00C2  00C0               	movwf	??_main
  1139  00C3  0840               	movf	??_main,w
  1140  00C4  00B8               	movwf	sendByte@byte1
  1141  00C5  1683               	bsf	3,5	;RP0=1, select bank3
  1142  00C6  1703               	bsf	3,6	;RP1=1, select bank3
  1143  00C7  0860               	movf	main@i^(0+384),w
  1144  00C8  3E56               	addlw	(low (_truck| 0))& (0+255)
  1145  00C9  0084               	movwf	4
  1146  00CA  1383               	bcf	3,7	;select IRP bank0
  1147  00CB  0800               	movf	0,w
  1148  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1149  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1150  00CE  00C1               	movwf	??_main+1
  1151  00CF  0841               	movf	??_main+1,w
  1152  00D0  00B9               	movwf	sendByte@valore
  1153  00D1  3003               	movlw	3
  1154  00D2  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1155                           
  1156                           ;main.c: 175:                         break;
  1157  00D7  29C2               	goto	l3014
  1158  00D8                     l3004:	
  1159                           
  1160                           ;main.c: 177:                         sendByte(0x05, 0x01, motorcycle[i]);
  1161  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1162  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1163  00DA  01B8               	clrf	sendByte@byte1
  1164  00DB  0AB8               	incf	sendByte@byte1,f
  1165  00DC  1683               	bsf	3,5	;RP0=1, select bank3
  1166  00DD  1703               	bsf	3,6	;RP1=1, select bank3
  1167  00DE  0860               	movf	main@i^(0+384),w
  1168  00DF  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1169  00E0  0084               	movwf	4
  1170  00E1  1383               	bcf	3,7	;select IRP bank0
  1171  00E2  0800               	movf	0,w
  1172  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1173  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1174  00E5  00C0               	movwf	??_main
  1175  00E6  0840               	movf	??_main,w
  1176  00E7  00B9               	movwf	sendByte@valore
  1177  00E8  3005               	movlw	5
  1178  00E9  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1179                           
  1180                           ;main.c: 178:                         sendByte(0x05, 0x02, car[i]);
  1181  00EE  3002               	movlw	2
  1182  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1183  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1184  00F1  00C0               	movwf	??_main
  1185  00F2  0840               	movf	??_main,w
  1186  00F3  00B8               	movwf	sendByte@byte1
  1187  00F4  1683               	bsf	3,5	;RP0=1, select bank3
  1188  00F5  1703               	bsf	3,6	;RP1=1, select bank3
  1189  00F6  0860               	movf	main@i^(0+384),w
  1190  00F7  3E5A               	addlw	(low (_car| 0))& (0+255)
  1191  00F8  0084               	movwf	4
  1192  00F9  1383               	bcf	3,7	;select IRP bank0
  1193  00FA  0800               	movf	0,w
  1194  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1195  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1196  00FD  00C1               	movwf	??_main+1
  1197  00FE  0841               	movf	??_main+1,w
  1198  00FF  00B9               	movwf	sendByte@valore
  1199  0100  3005               	movlw	5
  1200  0101  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1201                           
  1202                           ;main.c: 179:                         sendByte(0x05, 0x03, truck[i]);
  1203  0106  3003               	movlw	3
  1204  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0109  00C0               	movwf	??_main
  1207  010A  0840               	movf	??_main,w
  1208  010B  00B8               	movwf	sendByte@byte1
  1209  010C  1683               	bsf	3,5	;RP0=1, select bank3
  1210  010D  1703               	bsf	3,6	;RP1=1, select bank3
  1211  010E  0860               	movf	main@i^(0+384),w
  1212  010F  3E56               	addlw	(low (_truck| 0))& (0+255)
  1213  0110  0084               	movwf	4
  1214  0111  1383               	bcf	3,7	;select IRP bank0
  1215  0112  0800               	movf	0,w
  1216  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0115  00C1               	movwf	??_main+1
  1219  0116  0841               	movf	??_main+1,w
  1220  0117  00B9               	movwf	sendByte@valore
  1221  0118  3005               	movlw	5
  1222  0119  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1223                           
  1224                           ;main.c: 180:                         break;
  1225  011E  29C2               	goto	l3014
  1226  011F                     l3006:	
  1227                           
  1228                           ;main.c: 182:                         sendByte(0x07, 0x01, motorcycle[i]);
  1229  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0121  01B8               	clrf	sendByte@byte1
  1232  0122  0AB8               	incf	sendByte@byte1,f
  1233  0123  1683               	bsf	3,5	;RP0=1, select bank3
  1234  0124  1703               	bsf	3,6	;RP1=1, select bank3
  1235  0125  0860               	movf	main@i^(0+384),w
  1236  0126  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1237  0127  0084               	movwf	4
  1238  0128  1383               	bcf	3,7	;select IRP bank0
  1239  0129  0800               	movf	0,w
  1240  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1241  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1242  012C  00C0               	movwf	??_main
  1243  012D  0840               	movf	??_main,w
  1244  012E  00B9               	movwf	sendByte@valore
  1245  012F  3007               	movlw	7
  1246  0130  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1247                           
  1248                           ;main.c: 183:                         sendByte(0x07, 0x02, car[i]);
  1249  0135  3002               	movlw	2
  1250  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0138  00C0               	movwf	??_main
  1253  0139  0840               	movf	??_main,w
  1254  013A  00B8               	movwf	sendByte@byte1
  1255  013B  1683               	bsf	3,5	;RP0=1, select bank3
  1256  013C  1703               	bsf	3,6	;RP1=1, select bank3
  1257  013D  0860               	movf	main@i^(0+384),w
  1258  013E  3E5A               	addlw	(low (_car| 0))& (0+255)
  1259  013F  0084               	movwf	4
  1260  0140  1383               	bcf	3,7	;select IRP bank0
  1261  0141  0800               	movf	0,w
  1262  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0144  00C1               	movwf	??_main+1
  1265  0145  0841               	movf	??_main+1,w
  1266  0146  00B9               	movwf	sendByte@valore
  1267  0147  3007               	movlw	7
  1268  0148  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1269                           
  1270                           ;main.c: 184:                         sendByte(0x07, 0x03, truck[i]);
  1271  014D  3003               	movlw	3
  1272  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1273  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0150  00C0               	movwf	??_main
  1275  0151  0840               	movf	??_main,w
  1276  0152  00B8               	movwf	sendByte@byte1
  1277  0153  1683               	bsf	3,5	;RP0=1, select bank3
  1278  0154  1703               	bsf	3,6	;RP1=1, select bank3
  1279  0155  0860               	movf	main@i^(0+384),w
  1280  0156  3E56               	addlw	(low (_truck| 0))& (0+255)
  1281  0157  0084               	movwf	4
  1282  0158  1383               	bcf	3,7	;select IRP bank0
  1283  0159  0800               	movf	0,w
  1284  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1285  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1286  015C  00C1               	movwf	??_main+1
  1287  015D  0841               	movf	??_main+1,w
  1288  015E  00B9               	movwf	sendByte@valore
  1289  015F  3007               	movlw	7
  1290  0160  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1291                           
  1292                           ;main.c: 185:                         break;
  1293  0165  29C2               	goto	l3014
  1294  0166                     l3008:	
  1295                           
  1296                           ;main.c: 187:                         sendByte(0x09, 0x01, motorcycle[i]);
  1297  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0168  01B8               	clrf	sendByte@byte1
  1300  0169  0AB8               	incf	sendByte@byte1,f
  1301  016A  1683               	bsf	3,5	;RP0=1, select bank3
  1302  016B  1703               	bsf	3,6	;RP1=1, select bank3
  1303  016C  0860               	movf	main@i^(0+384),w
  1304  016D  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1305  016E  0084               	movwf	4
  1306  016F  1383               	bcf	3,7	;select IRP bank0
  1307  0170  0800               	movf	0,w
  1308  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1310  0173  00C0               	movwf	??_main
  1311  0174  0840               	movf	??_main,w
  1312  0175  00B9               	movwf	sendByte@valore
  1313  0176  3009               	movlw	9
  1314  0177  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1315                           
  1316                           ;main.c: 188:                         sendByte(0x09, 0x02, car[i]);
  1317  017C  3002               	movlw	2
  1318  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1319  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1320  017F  00C0               	movwf	??_main
  1321  0180  0840               	movf	??_main,w
  1322  0181  00B8               	movwf	sendByte@byte1
  1323  0182  1683               	bsf	3,5	;RP0=1, select bank3
  1324  0183  1703               	bsf	3,6	;RP1=1, select bank3
  1325  0184  0860               	movf	main@i^(0+384),w
  1326  0185  3E5A               	addlw	(low (_car| 0))& (0+255)
  1327  0186  0084               	movwf	4
  1328  0187  1383               	bcf	3,7	;select IRP bank0
  1329  0188  0800               	movf	0,w
  1330  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1331  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1332  018B  00C1               	movwf	??_main+1
  1333  018C  0841               	movf	??_main+1,w
  1334  018D  00B9               	movwf	sendByte@valore
  1335  018E  3009               	movlw	9
  1336  018F  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1337                           
  1338                           ;main.c: 189:                         sendByte(0x09, 0x03, truck[i]);
  1339  0194  3003               	movlw	3
  1340  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0197  00C0               	movwf	??_main
  1343  0198  0840               	movf	??_main,w
  1344  0199  00B8               	movwf	sendByte@byte1
  1345  019A  1683               	bsf	3,5	;RP0=1, select bank3
  1346  019B  1703               	bsf	3,6	;RP1=1, select bank3
  1347  019C  0860               	movf	main@i^(0+384),w
  1348  019D  3E56               	addlw	(low (_truck| 0))& (0+255)
  1349  019E  0084               	movwf	4
  1350  019F  1383               	bcf	3,7	;select IRP bank0
  1351  01A0  0800               	movf	0,w
  1352  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1353  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1354  01A3  00C1               	movwf	??_main+1
  1355  01A4  0841               	movf	??_main+1,w
  1356  01A5  00B9               	movwf	sendByte@valore
  1357  01A6  3009               	movlw	9
  1358  01A7  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1359                           
  1360                           ;main.c: 190:                         break;
  1361  01AC  29C2               	goto	l3014
  1362  01AD                     l3012:	
  1363                           
  1364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1365                           ; Switch size 1, requested type "simple"
  1366                           ; Number of cases is 1, Range of values is 0 to 0
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; simple_byte            4     3 (average)
  1370                           ; direct_byte           11     8 (fixed)
  1371                           ; jumptable            260     6 (fixed)
  1372                           ;	Chosen strategy is simple_byte
  1373  01AD  1683               	bsf	3,5	;RP0=1, select bank3
  1374  01AE  1703               	bsf	3,6	;RP1=1, select bank3
  1375  01AF  0861               	movf	(main@i+1)^(0+384),w
  1376  01B0  3A00               	xorlw	0	; case 0
  1377  01B1  1903               	skipnz
  1378  01B2  29B4               	goto	l3280
  1379  01B3  29C2               	goto	l3014
  1380  01B4                     l3280:	
  1381                           
  1382                           ; Switch size 1, requested type "simple"
  1383                           ; Number of cases is 4, Range of values is 0 to 3
  1384                           ; switch strategies available:
  1385                           ; Name         Instructions Cycles
  1386                           ; simple_byte           13     7 (average)
  1387                           ; direct_byte           20     8 (fixed)
  1388                           ; jumptable            260     6 (fixed)
  1389                           ;	Chosen strategy is simple_byte
  1390  01B4  0860               	movf	main@i^(0+384),w
  1391  01B5  3A00               	xorlw	0	; case 0
  1392  01B6  1903               	skipnz
  1393  01B7  2891               	goto	l3002
  1394  01B8  3A01               	xorlw	1	; case 1
  1395  01B9  1903               	skipnz
  1396  01BA  28D8               	goto	l3004
  1397  01BB  3A03               	xorlw	3	; case 2
  1398  01BC  1903               	skipnz
  1399  01BD  291F               	goto	l3006
  1400  01BE  3A01               	xorlw	1	; case 3
  1401  01BF  1903               	skipnz
  1402  01C0  2966               	goto	l3008
  1403  01C1  29C2               	goto	l3014
  1404  01C2                     l3014:	
  1405                           
  1406                           ;main.c: 192:                 }
  1407  01C2  3001               	movlw	1
  1408  01C3  1683               	bsf	3,5	;RP0=1, select bank3
  1409  01C4  1703               	bsf	3,6	;RP1=1, select bank3
  1410  01C5  07E0               	addwf	main@i^(0+384),f
  1411  01C6  1803               	skipnc
  1412  01C7  0AE1               	incf	(main@i+1)^(0+384),f
  1413  01C8  3000               	movlw	0
  1414  01C9  07E1               	addwf	(main@i+1)^(0+384),f
  1415  01CA                     l3016:	
  1416  01CA  0861               	movf	(main@i+1)^(0+384),w
  1417  01CB  3A80               	xorlw	128
  1418  01CC  00FF               	movwf	btemp+1
  1419  01CD  3080               	movlw	128
  1420  01CE  027F               	subwf	btemp+1,w
  1421  01CF  1D03               	skipz
  1422  01D0  29D3               	goto	u2735
  1423  01D1  3004               	movlw	4
  1424  01D2  0260               	subwf	main@i^(0+384),w
  1425  01D3                     u2735:	
  1426  01D3  1C03               	skipc
  1427  01D4  29D6               	goto	u2731
  1428  01D5  29D7               	goto	u2730
  1429  01D6                     u2731:	
  1430  01D6  29AD               	goto	l3012
  1431  01D7                     u2730:	
  1432  01D7                     l3018:	
  1433                           
  1434                           ;main.c: 194:                 for (int i = 0; i < 4; i++)
  1435  01D7  1683               	bsf	3,5	;RP0=1, select bank3
  1436  01D8  1703               	bsf	3,6	;RP1=1, select bank3
  1437  01D9  01DE               	clrf	main@i_466^(0+384)
  1438  01DA  01DF               	clrf	(main@i_466+1)^(0+384)
  1439  01DB                     l3024:	
  1440                           
  1441                           ;main.c: 195:                 {;main.c: 196:                     motorcycle[i] = 0;
  1442  01DB  1683               	bsf	3,5	;RP0=1, select bank3
  1443  01DC  1703               	bsf	3,6	;RP1=1, select bank3
  1444  01DD  085E               	movf	main@i_466^(0+384),w
  1445  01DE  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1446  01DF  0084               	movwf	4
  1447  01E0  1383               	bcf	3,7	;select IRP bank0
  1448  01E1  0180               	clrf	0
  1449                           
  1450                           ;main.c: 197:                     car[i] = 0;
  1451  01E2  085E               	movf	main@i_466^(0+384),w
  1452  01E3  3E5A               	addlw	(low (_car| 0))& (0+255)
  1453  01E4  0084               	movwf	4
  1454  01E5  0180               	clrf	0
  1455                           
  1456                           ;main.c: 198:                     truck[i] = 0;
  1457  01E6  085E               	movf	main@i_466^(0+384),w
  1458  01E7  3E56               	addlw	(low (_truck| 0))& (0+255)
  1459  01E8  0084               	movwf	4
  1460  01E9  0180               	clrf	0
  1461  01EA                     l3026:	
  1462                           
  1463                           ;main.c: 199:                 }
  1464  01EA  3001               	movlw	1
  1465  01EB  07DE               	addwf	main@i_466^(0+384),f
  1466  01EC  1803               	skipnc
  1467  01ED  0ADF               	incf	(main@i_466+1)^(0+384),f
  1468  01EE  3000               	movlw	0
  1469  01EF  07DF               	addwf	(main@i_466+1)^(0+384),f
  1470  01F0                     l3028:	
  1471  01F0  085F               	movf	(main@i_466+1)^(0+384),w
  1472  01F1  3A80               	xorlw	128
  1473  01F2  00FF               	movwf	btemp+1
  1474  01F3  3080               	movlw	128
  1475  01F4  027F               	subwf	btemp+1,w
  1476  01F5  1D03               	skipz
  1477  01F6  29F9               	goto	u2745
  1478  01F7  3004               	movlw	4
  1479  01F8  025E               	subwf	main@i_466^(0+384),w
  1480  01F9                     u2745:	
  1481  01F9  1C03               	skipc
  1482  01FA  29FC               	goto	u2741
  1483  01FB  29FD               	goto	u2740
  1484  01FC                     u2741:	
  1485  01FC  29DB               	goto	l3024
  1486  01FD                     u2740:	
  1487  01FD                     l3030:	
  1488                           
  1489                           ;main.c: 201:                 for (unsigned char i = 0; i < 5; i++)
  1490  01FD  1683               	bsf	3,5	;RP0=1, select bank3
  1491  01FE  1703               	bsf	3,6	;RP1=1, select bank3
  1492  01FF  01DB               	clrf	main@i_467^(0+384)
  1493  0200                     l3036:	
  1494                           
  1495                           ;main.c: 202:                 {;main.c: 203:                     dataFromGateway[i] = 0;
  1496  0200  085B               	movf	main@i_467^(0+384),w
  1497  0201  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1498  0202  0084               	movwf	4
  1499  0203  1383               	bcf	3,7	;select IRP bank1
  1500  0204  0180               	clrf	0
  1501  0205                     l3038:	
  1502                           
  1503                           ;main.c: 204:                 }
  1504  0205  3001               	movlw	1
  1505  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0208  00C0               	movwf	??_main
  1508  0209  0840               	movf	??_main,w
  1509  020A  1683               	bsf	3,5	;RP0=1, select bank3
  1510  020B  1703               	bsf	3,6	;RP1=1, select bank3
  1511  020C  07DB               	addwf	main@i_467^(0+384),f
  1512  020D                     l3040:	
  1513  020D  3005               	movlw	5
  1514  020E  025B               	subwf	main@i_467^(0+384),w
  1515  020F  1C03               	skipc
  1516  0210  2A12               	goto	u2751
  1517  0211  2A13               	goto	u2750
  1518  0212                     u2751:	
  1519  0212  2A00               	goto	l3036
  1520  0213                     u2750:	
  1521  0213  2B1D               	goto	l234
  1522  0214                     l250:	
  1523                           ;main.c: 206:             case 0x0A:
  1524                           
  1525                           
  1526                           ;main.c: 207:                 readGatewayDone.Bit = 1;
  1527  0214  1455               	bsf	_readGatewayDone,0
  1528                           
  1529                           ;main.c: 208:                 readGateway.Bit = 0;
  1530  0215  1054               	bcf	_readGateway,0
  1531  0216                     l3042:	
  1532                           
  1533                           ;main.c: 210:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1534  0216  3000               	movlw	0
  1535  0217  120A  158A  248E  120A  118A  	fcall	_ADC_Read
  1536  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1537  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1538  021E  0824               	movf	?_ADC_Read,w
  1539  021F  00C0               	movwf	??_main
  1540  0220  0825               	movf	?_ADC_Read+1,w
  1541  0221  00C1               	movwf	??_main+1
  1542  0222  0D41               	rlf	??_main+1,w
  1543  0223  0CC1               	rrf	??_main+1,f
  1544  0224  0CC0               	rrf	??_main,f
  1545  0225  0D41               	rlf	??_main+1,w
  1546  0226  0CC1               	rrf	??_main+1,f
  1547  0227  0CC0               	rrf	??_main,f
  1548  0228  0840               	movf	??_main,w
  1549  0229  00B4               	movwf	map@x
  1550  022A  0841               	movf	??_main+1,w
  1551  022B  00B5               	movwf	map@x+1
  1552  022C  3000               	movlw	0
  1553  022D  00B6               	movwf	map@in_min
  1554  022E  00B7               	movwf	map@in_min+1
  1555  022F  30FF               	movlw	255
  1556  0230  00B8               	movwf	map@in_max
  1557  0231  3000               	movlw	0
  1558  0232  00B9               	movwf	map@in_max+1
  1559  0233  30EC               	movlw	236
  1560  0234  00BA               	movwf	map@out_min
  1561  0235  30FF               	movlw	255
  1562  0236  00BB               	movwf	map@out_min+1
  1563  0237  303C               	movlw	60
  1564  0238  00BC               	movwf	map@out_max
  1565  0239  3000               	movlw	0
  1566  023A  00BD               	movwf	map@out_max+1
  1567  023B  120A  158A  250C  120A  118A  	fcall	_map
  1568  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0242  0834               	movf	?_map,w
  1571  0243  00C2               	movwf	??_main+2
  1572  0244  0842               	movf	??_main+2,w
  1573  0245  1683               	bsf	3,5	;RP0=1, select bank3
  1574  0246  1703               	bsf	3,6	;RP1=1, select bank3
  1575  0247  00D6               	movwf	main@temp^(0+384)
  1576                           
  1577                           ;main.c: 211:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1578  0248  3001               	movlw	1
  1579  0249  120A  158A  248E  120A  118A  	fcall	_ADC_Read
  1580  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1581  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0250  0824               	movf	?_ADC_Read,w
  1583  0251  00C0               	movwf	??_main
  1584  0252  0825               	movf	?_ADC_Read+1,w
  1585  0253  00C1               	movwf	??_main+1
  1586  0254  0D41               	rlf	??_main+1,w
  1587  0255  0CC1               	rrf	??_main+1,f
  1588  0256  0CC0               	rrf	??_main,f
  1589  0257  0D41               	rlf	??_main+1,w
  1590  0258  0CC1               	rrf	??_main+1,f
  1591  0259  0CC0               	rrf	??_main,f
  1592  025A  0840               	movf	??_main,w
  1593  025B  00B4               	movwf	map@x
  1594  025C  0841               	movf	??_main+1,w
  1595  025D  00B5               	movwf	map@x+1
  1596  025E  3000               	movlw	0
  1597  025F  00B6               	movwf	map@in_min
  1598  0260  00B7               	movwf	map@in_min+1
  1599  0261  30FF               	movlw	255
  1600  0262  00B8               	movwf	map@in_max
  1601  0263  3000               	movlw	0
  1602  0264  00B9               	movwf	map@in_max+1
  1603  0265  3000               	movlw	0
  1604  0266  00BA               	movwf	map@out_min
  1605  0267  00BB               	movwf	map@out_min+1
  1606  0268  3064               	movlw	100
  1607  0269  00BC               	movwf	map@out_max
  1608  026A  3000               	movlw	0
  1609  026B  00BD               	movwf	map@out_max+1
  1610  026C  120A  158A  250C  120A  118A  	fcall	_map
  1611  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0273  0834               	movf	?_map,w
  1614  0274  00C2               	movwf	??_main+2
  1615  0275  0842               	movf	??_main+2,w
  1616  0276  1683               	bsf	3,5	;RP0=1, select bank3
  1617  0277  1703               	bsf	3,6	;RP1=1, select bank3
  1618  0278  00D7               	movwf	main@umidita^(0+384)
  1619                           
  1620                           ;main.c: 212:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1621  0279  3005               	movlw	5
  1622  027A  120A  158A  248E  120A  118A  	fcall	_ADC_Read
  1623  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1625  0281  0824               	movf	?_ADC_Read,w
  1626  0282  00C0               	movwf	??_main
  1627  0283  0825               	movf	?_ADC_Read+1,w
  1628  0284  00C1               	movwf	??_main+1
  1629  0285  0D41               	rlf	??_main+1,w
  1630  0286  0CC1               	rrf	??_main+1,f
  1631  0287  0CC0               	rrf	??_main,f
  1632  0288  0D41               	rlf	??_main+1,w
  1633  0289  0CC1               	rrf	??_main+1,f
  1634  028A  0CC0               	rrf	??_main,f
  1635  028B  0840               	movf	??_main,w
  1636  028C  00B4               	movwf	map@x
  1637  028D  0841               	movf	??_main+1,w
  1638  028E  00B5               	movwf	map@x+1
  1639  028F  3000               	movlw	0
  1640  0290  00B6               	movwf	map@in_min
  1641  0291  00B7               	movwf	map@in_min+1
  1642  0292  30FF               	movlw	255
  1643  0293  00B8               	movwf	map@in_max
  1644  0294  3000               	movlw	0
  1645  0295  00B9               	movwf	map@in_max+1
  1646  0296  3000               	movlw	0
  1647  0297  00BA               	movwf	map@out_min
  1648  0298  00BB               	movwf	map@out_min+1
  1649  0299  3064               	movlw	100
  1650  029A  00BC               	movwf	map@out_max
  1651  029B  3000               	movlw	0
  1652  029C  00BD               	movwf	map@out_max+1
  1653  029D  120A  158A  250C  120A  118A  	fcall	_map
  1654  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1655  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1656  02A4  0834               	movf	?_map,w
  1657  02A5  00C2               	movwf	??_main+2
  1658  02A6  0842               	movf	??_main+2,w
  1659  02A7  1683               	bsf	3,5	;RP0=1, select bank3
  1660  02A8  1703               	bsf	3,6	;RP1=1, select bank3
  1661  02A9  00D8               	movwf	main@pressione^(0+384)
  1662  02AA                     l3044:	
  1663                           
  1664                           ;main.c: 213:                 sendByte(0x02, 0x00, temp);
  1665  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1666  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1667  02AC  01B8               	clrf	sendByte@byte1
  1668  02AD  1683               	bsf	3,5	;RP0=1, select bank3
  1669  02AE  1703               	bsf	3,6	;RP1=1, select bank3
  1670  02AF  0856               	movf	main@temp^(0+384),w
  1671  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1672  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1673  02B2  00C0               	movwf	??_main
  1674  02B3  0840               	movf	??_main,w
  1675  02B4  00B9               	movwf	sendByte@valore
  1676  02B5  3002               	movlw	2
  1677  02B6  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1678  02BB                     l3046:	
  1679                           
  1680                           ;main.c: 214:                 sendByte(0x04, 0x00, umidita);
  1681  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1682  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1683  02BD  01B8               	clrf	sendByte@byte1
  1684  02BE  1683               	bsf	3,5	;RP0=1, select bank3
  1685  02BF  1703               	bsf	3,6	;RP1=1, select bank3
  1686  02C0  0857               	movf	main@umidita^(0+384),w
  1687  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1688  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1689  02C3  00C0               	movwf	??_main
  1690  02C4  0840               	movf	??_main,w
  1691  02C5  00B9               	movwf	sendByte@valore
  1692  02C6  3004               	movlw	4
  1693  02C7  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1694  02CC                     l3048:	
  1695                           
  1696                           ;main.c: 215:                 sendByte(0x06, 0x00, pressione);
  1697  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1698  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1699  02CE  01B8               	clrf	sendByte@byte1
  1700  02CF  1683               	bsf	3,5	;RP0=1, select bank3
  1701  02D0  1703               	bsf	3,6	;RP1=1, select bank3
  1702  02D1  0858               	movf	main@pressione^(0+384),w
  1703  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1704  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1705  02D4  00C0               	movwf	??_main
  1706  02D5  0840               	movf	??_main,w
  1707  02D6  00B9               	movwf	sendByte@valore
  1708  02D7  3006               	movlw	6
  1709  02D8  120A  158A  24DB  120A  118A  	fcall	_sendByte
  1710  02DD                     l3050:	
  1711                           
  1712                           ;main.c: 217:                 for (unsigned char i = 0; i < 5; i++)
  1713  02DD  1683               	bsf	3,5	;RP0=1, select bank3
  1714  02DE  1703               	bsf	3,6	;RP1=1, select bank3
  1715  02DF  01DC               	clrf	main@i_469^(0+384)
  1716  02E0                     l3052:	
  1717  02E0  3005               	movlw	5
  1718  02E1  025C               	subwf	main@i_469^(0+384),w
  1719  02E2  1C03               	skipc
  1720  02E3  2AE5               	goto	u2761
  1721  02E4  2AE6               	goto	u2760
  1722  02E5                     u2761:	
  1723  02E5  2AE7               	goto	l3056
  1724  02E6                     u2760:	
  1725  02E6  2B1D               	goto	l234
  1726  02E7                     l3056:	
  1727                           
  1728                           ;main.c: 218:                 {;main.c: 219:                     dataFromGateway[i] = 0;
  1729  02E7  085C               	movf	main@i_469^(0+384),w
  1730  02E8  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1731  02E9  0084               	movwf	4
  1732  02EA  1383               	bcf	3,7	;select IRP bank1
  1733  02EB  0180               	clrf	0
  1734  02EC                     l3058:	
  1735                           
  1736                           ;main.c: 220:                 }
  1737  02EC  3001               	movlw	1
  1738  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1739  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1740  02EF  00C0               	movwf	??_main
  1741  02F0  0840               	movf	??_main,w
  1742  02F1  1683               	bsf	3,5	;RP0=1, select bank3
  1743  02F2  1703               	bsf	3,6	;RP1=1, select bank3
  1744  02F3  07DC               	addwf	main@i_469^(0+384),f
  1745  02F4  2AE0               	goto	l3052
  1746  02F5                     l3062:	
  1747                           
  1748                           ;main.c: 224:                 if (timerReadFromGateway >= 4)
  1749  02F5  3004               	movlw	4
  1750  02F6  024C               	subwf	_timerReadFromGateway,w
  1751  02F7  1C03               	skipc
  1752  02F8  2AFA               	goto	u2771
  1753  02F9  2AFB               	goto	u2770
  1754  02FA                     u2771:	
  1755  02FA  2AFE               	goto	l3066
  1756  02FB                     u2770:	
  1757  02FB                     l3064:	
  1758                           
  1759                           ;main.c: 225:                 {;main.c: 226:                     readGatewayDone.Bit = 1
      +                          ;
  1760  02FB  1455               	bsf	_readGatewayDone,0
  1761                           
  1762                           ;main.c: 227:                     readGatewayDone.Timeout = 1;
  1763  02FC  14D5               	bsf	_readGatewayDone,1
  1764                           
  1765                           ;main.c: 228:                     readGateway.Bit = 0;
  1766  02FD  1054               	bcf	_readGateway,0
  1767  02FE                     l3066:	
  1768                           
  1769                           ;main.c: 231:                 if (dataFromGatewayIndex >= 15)
  1770  02FE  300F               	movlw	15
  1771  02FF  024D               	subwf	_dataFromGatewayIndex,w
  1772  0300  1C03               	skipc
  1773  0301  2B03               	goto	u2781
  1774  0302  2B04               	goto	u2780
  1775  0303                     u2781:	
  1776  0303  2B1D               	goto	l234
  1777  0304                     u2780:	
  1778  0304                     l3068:	
  1779                           
  1780                           ;main.c: 232:                 {;main.c: 233:                     readGatewayDone.Bit = 1
      +                          ;
  1781  0304  1455               	bsf	_readGatewayDone,0
  1782                           
  1783                           ;main.c: 234:                     readGatewayDone.Timeout = 0;
  1784  0305  10D5               	bcf	_readGatewayDone,1
  1785                           
  1786                           ;main.c: 235:                     readGateway.Bit = 0;
  1787  0306  1054               	bcf	_readGateway,0
  1788  0307  2B1D               	goto	l234
  1789  0308                     l3072:	
  1790  0308  1683               	bsf	3,5	;RP0=1, select bank1
  1791  0309  1303               	bcf	3,6	;RP1=0, select bank1
  1792  030A  0824               	movf	_dataFromGateway^(0+128),w
  1793  030B  397F               	andlw	127
  1794  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1795  030D  1303               	bcf	3,6	;RP1=0, select bank0
  1796  030E  00C0               	movwf	??_main
  1797  030F  01C1               	clrf	??_main+1
  1798                           
  1799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 1, Range of values is 0 to 0
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte            4     3 (average)
  1805                           ; direct_byte           11     8 (fixed)
  1806                           ; jumptable            260     6 (fixed)
  1807                           ;	Chosen strategy is simple_byte
  1808  0310  0841               	movf	??_main+1,w
  1809  0311  3A00               	xorlw	0	; case 0
  1810  0312  1903               	skipnz
  1811  0313  2B15               	goto	l3282
  1812  0314  2AF5               	goto	l3062
  1813  0315                     l3282:	
  1814                           
  1815                           ; Switch size 1, requested type "simple"
  1816                           ; Number of cases is 2, Range of values is 8 to 10
  1817                           ; switch strategies available:
  1818                           ; Name         Instructions Cycles
  1819                           ; simple_byte            7     4 (average)
  1820                           ; direct_byte           20    11 (fixed)
  1821                           ; jumptable            263     9 (fixed)
  1822                           ;	Chosen strategy is simple_byte
  1823  0315  0840               	movf	??_main,w
  1824  0316  3A08               	xorlw	8	; case 8
  1825  0317  1903               	skipnz
  1826  0318  288A               	goto	l236
  1827  0319  3A02               	xorlw	2	; case 10
  1828  031A  1903               	skipnz
  1829  031B  2A14               	goto	l250
  1830  031C  2AF5               	goto	l3062
  1831  031D                     l234:	
  1832                           ;main.c: 239:         }
  1833                           
  1834                           
  1835                           ;main.c: 242:         if (readGatewayDone.Bit)
  1836  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1837  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1838  031F  1C55               	btfss	_readGatewayDone,0
  1839  0320  2B22               	goto	u2791
  1840  0321  2B23               	goto	u2790
  1841  0322                     u2791:	
  1842  0322  2B37               	goto	l3086
  1843  0323                     u2790:	
  1844  0323                     l3074:	
  1845                           
  1846                           ;main.c: 243:         {;main.c: 245:             readGateway.Bit = 0;
  1847  0323  1054               	bcf	_readGateway,0
  1848  0324                     l3076:	
  1849                           
  1850                           ;main.c: 246:             dataFromGatewayIndex = 0;
  1851  0324  01CD               	clrf	_dataFromGatewayIndex
  1852  0325                     l3078:	
  1853                           
  1854                           ;main.c: 247:             readGatewayDone.Bit = 0;
  1855  0325  1055               	bcf	_readGatewayDone,0
  1856                           
  1857                           ;main.c: 248:             timerReadFromGateway = 0;
  1858  0326  01CC               	clrf	_timerReadFromGateway
  1859  0327                     l3080:	
  1860                           
  1861                           ;main.c: 251:             if (readGatewayDone.Timeout)
  1862  0327  1CD5               	btfss	_readGatewayDone,1
  1863  0328  2B2A               	goto	u2801
  1864  0329  2B2B               	goto	u2800
  1865  032A                     u2801:	
  1866  032A  2B2D               	goto	l3084
  1867  032B                     u2800:	
  1868  032B                     l3082:	
  1869                           
  1870                           ;main.c: 252:             {;main.c: 253:                 readGatewayDone.Timeout = 0;
  1871  032B  10D5               	bcf	_readGatewayDone,1
  1872                           
  1873                           ;main.c: 254:             }
  1874  032C  2B37               	goto	l3086
  1875  032D                     l3084:	
  1876                           
  1877                           ;main.c: 257:             {;main.c: 259:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1878  032D  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1879  032E  00C0               	movwf	??_main
  1880  032F  0840               	movf	??_main,w
  1881  0330  00AC               	movwf	SetReceivedTimes@_semafori
  1882  0331  30A4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1883  0332  120A  118A  2753  120A  118A  	fcall	_SetReceivedTimes
  1884  0337                     l3086:	
  1885                           
  1886                           ;main.c: 266:         if (secondPassed.Bit && cycled.Bit)
  1887  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1888  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1889  0339  1C53               	btfss	_secondPassed,0
  1890  033A  2B3C               	goto	u2811
  1891  033B  2B3D               	goto	u2810
  1892  033C                     u2811:	
  1893  033C  2C80               	goto	l3130
  1894  033D                     u2810:	
  1895  033D                     l3088:	
  1896  033D  1C52               	btfss	_cycled,0
  1897  033E  2B40               	goto	u2821
  1898  033F  2B41               	goto	u2820
  1899  0340                     u2821:	
  1900  0340  2C80               	goto	l3130
  1901  0341                     u2820:	
  1902  0341                     l3090:	
  1903                           
  1904                           ;main.c: 267:         {;main.c: 268:             time++;
  1905  0341  3001               	movlw	1
  1906  0342  1683               	bsf	3,5	;RP0=1, select bank3
  1907  0343  1703               	bsf	3,6	;RP1=1, select bank3
  1908  0344  07D9               	addwf	main@time^(0+384),f
  1909  0345  1803               	skipnc
  1910  0346  0ADA               	incf	(main@time+1)^(0+384),f
  1911  0347  3000               	movlw	0
  1912  0348  07DA               	addwf	(main@time+1)^(0+384),f
  1913  0349                     l3092:	
  1914                           
  1915                           ;main.c: 271:             {;main.c: 272:                 ChangeTrafficLight(Semafori, &i
      +                          d_semaforo);
  1916  0349  3062               	movlw	(low (_id_semaforo| 0))& (0+255)
  1917  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1918  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1919  034C  00C0               	movwf	??_main
  1920  034D  0840               	movf	??_main,w
  1921  034E  00AB               	movwf	ChangeTrafficLight@_n_semafori
  1922  034F  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1923  0350  120A  158A  25D3  120A  118A  	fcall	_ChangeTrafficLight
  1924  0355                     l3094:	
  1925                           
  1926                           ;main.c: 273:                 lux_select=(*Semafori[id_semaforo]).lux_select;
  1927  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0357  0862               	movf	_id_semaforo,w
  1930  0358  00C0               	movwf	??_main
  1931  0359  0740               	addwf	??_main,w
  1932  035A  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1933  035B  0084               	movwf	4
  1934  035C  1383               	bcf	3,7	;select IRP bank1
  1935  035D  0800               	movf	0,w
  1936  035E  00C1               	movwf	??_main+1
  1937  035F  0A84               	incf	4,f
  1938  0360  0800               	movf	0,w
  1939  0361  00C2               	movwf	??_main+2
  1940  0362  0841               	movf	??_main+1,w
  1941  0363  3E0C               	addlw	12
  1942  0364  00C3               	movwf	??_main+3
  1943  0365  0842               	movf	??_main+2,w
  1944  0366  1803               	skipnc
  1945  0367  3E01               	addlw	1
  1946  0368  3E00               	addlw	0
  1947  0369  00C4               	movwf	??_main+4
  1948  036A  0843               	movf	??_main+3,w
  1949  036B  0084               	movwf	4
  1950  036C  1783               	bsf	3,7
  1951  036D  1C44               	btfss	??_main+4,0
  1952  036E  1383               	bcf	3,7
  1953  036F  0800               	movf	0,w
  1954  0370  00C5               	movwf	??_main+5
  1955  0371  0845               	movf	??_main+5,w
  1956  0372  1683               	bsf	3,5	;RP0=1, select bank3
  1957  0373  1703               	bsf	3,6	;RP1=1, select bank3
  1958  0374  00DD               	movwf	main@lux_select^(0+384)
  1959  0375                     l3096:	
  1960                           
  1961                           ;main.c: 275:                 if ((*Semafori[id_semaforo]).times[lux_select] - time < 0)
  1962  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0377  0862               	movf	_id_semaforo,w
  1965  0378  00C0               	movwf	??_main
  1966  0379  0740               	addwf	??_main,w
  1967  037A  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1968  037B  0084               	movwf	4
  1969  037C  1383               	bcf	3,7	;select IRP bank1
  1970  037D  0800               	movf	0,w
  1971  037E  00C1               	movwf	??_main+1
  1972  037F  0A84               	incf	4,f
  1973  0380  0800               	movf	0,w
  1974  0381  00C2               	movwf	??_main+2
  1975  0382  1683               	bsf	3,5	;RP0=1, select bank3
  1976  0383  1703               	bsf	3,6	;RP1=1, select bank3
  1977  0384  085D               	movf	main@lux_select^(0+384),w
  1978  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0387  00C3               	movwf	??_main+3
  1981  0388  0743               	addwf	??_main+3,w
  1982  0389  0741               	addwf	??_main+1,w
  1983  038A  00C4               	movwf	??_main+4
  1984  038B  0842               	movf	??_main+2,w
  1985  038C  1803               	skipnc
  1986  038D  3E01               	addlw	1
  1987  038E  00C5               	movwf	??_main+5
  1988  038F  0844               	movf	??_main+4,w
  1989  0390  0084               	movwf	4
  1990  0391  1783               	bsf	3,7
  1991  0392  1C45               	btfss	??_main+5,0
  1992  0393  1383               	bcf	3,7
  1993  0394  0800               	movf	0,w
  1994  0395  00C6               	movwf	??_main+6
  1995  0396  0A84               	incf	4,f
  1996  0397  0800               	movf	0,w
  1997  0398  00C7               	movwf	??_main+7
  1998  0399  1683               	bsf	3,5	;RP0=1, select bank3
  1999  039A  1703               	bsf	3,6	;RP1=1, select bank3
  2000  039B  0859               	movf	main@time^(0+384),w
  2001  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2002  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2003  039E  0246               	subwf	??_main+6,w
  2004  039F  00C8               	movwf	??_main+8
  2005  03A0  1683               	bsf	3,5	;RP0=1, select bank3
  2006  03A1  1703               	bsf	3,6	;RP1=1, select bank3
  2007  03A2  085A               	movf	(main@time+1)^(0+384),w
  2008  03A3  1C03               	skipc
  2009  03A4  0A5A               	incf	(main@time+1)^(0+384),w
  2010  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2011  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2012  03A7  0247               	subwf	??_main+7,w
  2013  03A8  00C9               	movwf	??_main+9
  2014  03A9  1FC9               	btfss	??_main+9,7
  2015  03AA  2BAC               	goto	u2831
  2016  03AB  2BAD               	goto	u2830
  2017  03AC                     u2831:	
  2018  03AC  2BCB               	goto	l3110
  2019  03AD                     u2830:	
  2020  03AD                     l3098:	
  2021                           
  2022                           ;main.c: 276:                 {;main.c: 277:                     lux_select++;
  2023  03AD  3001               	movlw	1
  2024  03AE  00C0               	movwf	??_main
  2025  03AF  0840               	movf	??_main,w
  2026  03B0  1683               	bsf	3,5	;RP0=1, select bank3
  2027  03B1  1703               	bsf	3,6	;RP1=1, select bank3
  2028  03B2  07DD               	addwf	main@lux_select^(0+384),f
  2029  03B3                     l3100:	
  2030                           
  2031                           ;main.c: 278:                     time=1;
  2032  03B3  3001               	movlw	1
  2033  03B4  00D9               	movwf	main@time^(0+384)
  2034  03B5  3000               	movlw	0
  2035  03B6  00DA               	movwf	(main@time^(0+384)+1)
  2036  03B7                     l3102:	
  2037                           
  2038                           ;main.c: 280:                     if (lux_select >= 3)
  2039  03B7  3003               	movlw	3
  2040  03B8  025D               	subwf	main@lux_select^(0+384),w
  2041  03B9  1C03               	skipc
  2042  03BA  2BBC               	goto	u2841
  2043  03BB  2BBD               	goto	u2840
  2044  03BC                     u2841:	
  2045  03BC  2BCB               	goto	l3110
  2046  03BD                     u2840:	
  2047  03BD                     l3104:	
  2048                           
  2049                           ;main.c: 281:                     {;main.c: 282:                         lux_select=0;
  2050  03BD  01DD               	clrf	main@lux_select^(0+384)
  2051  03BE                     l3106:	
  2052                           
  2053                           ;main.c: 284:                         if(id_semaforo==0)
  2054  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2055  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2056  03C0  0862               	movf	_id_semaforo,w
  2057  03C1  1D03               	btfss	3,2
  2058  03C2  2BC4               	goto	u2851
  2059  03C3  2BC5               	goto	u2850
  2060  03C4                     u2851:	
  2061  03C4  2BCB               	goto	l3110
  2062  03C5                     u2850:	
  2063  03C5                     l3108:	
  2064                           
  2065                           ;main.c: 285:                         {;main.c: 287:                             UpdateT
      +                          imes(Semafori);
  2066  03C5  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  2067  03C6  120A  158A  26D7  120A  118A  	fcall	_UpdateTimes
  2068  03CB                     l3110:	
  2069                           
  2070                           ;main.c: 292:                 (*Semafori[id_semaforo]).lux_select=lux_select;
  2071  03CB  1683               	bsf	3,5	;RP0=1, select bank3
  2072  03CC  1703               	bsf	3,6	;RP1=1, select bank3
  2073  03CD  085D               	movf	main@lux_select^(0+384),w
  2074  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2075  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2076  03D0  00C0               	movwf	??_main
  2077  03D1  0862               	movf	_id_semaforo,w
  2078  03D2  00C1               	movwf	??_main+1
  2079  03D3  0741               	addwf	??_main+1,w
  2080  03D4  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2081  03D5  0084               	movwf	4
  2082  03D6  1383               	bcf	3,7	;select IRP bank1
  2083  03D7  0800               	movf	0,w
  2084  03D8  00C2               	movwf	??_main+2
  2085  03D9  0A84               	incf	4,f
  2086  03DA  0800               	movf	0,w
  2087  03DB  00C3               	movwf	??_main+3
  2088  03DC  0842               	movf	??_main+2,w
  2089  03DD  3E0C               	addlw	12
  2090  03DE  00C4               	movwf	??_main+4
  2091  03DF  0843               	movf	??_main+3,w
  2092  03E0  1803               	skipnc
  2093  03E1  3E01               	addlw	1
  2094  03E2  3E00               	addlw	0
  2095  03E3  00C5               	movwf	??_main+5
  2096  03E4  0844               	movf	??_main+4,w
  2097  03E5  0084               	movwf	4
  2098  03E6  1783               	bsf	3,7
  2099  03E7  1C45               	btfss	??_main+5,0
  2100  03E8  1383               	bcf	3,7
  2101  03E9  0840               	movf	??_main,w
  2102  03EA  0080               	movwf	0
  2103  03EB                     l3112:	
  2104                           
  2105                           ;main.c: 293:                 GetDigits(&centinaia, &decine, &unita, (*Semafori[id_semaf
      +                          oro]).times[lux_select] - time);
  2106  03EB  3064               	movlw	(low (_decine| 0))& (0+255)
  2107  03EC  00C0               	movwf	??_main
  2108  03ED  0840               	movf	??_main,w
  2109  03EE  00B4               	movwf	GetDigits@decine
  2110  03EF  3065               	movlw	(low (_unita| 0))& (0+255)
  2111  03F0  00C1               	movwf	??_main+1
  2112  03F1  0841               	movf	??_main+1,w
  2113  03F2  00B5               	movwf	GetDigits@unita
  2114  03F3  0862               	movf	_id_semaforo,w
  2115  03F4  00C2               	movwf	??_main+2
  2116  03F5  0742               	addwf	??_main+2,w
  2117  03F6  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2118  03F7  0084               	movwf	4
  2119  03F8  1383               	bcf	3,7	;select IRP bank1
  2120  03F9  0800               	movf	0,w
  2121  03FA  00C3               	movwf	??_main+3
  2122  03FB  0A84               	incf	4,f
  2123  03FC  0800               	movf	0,w
  2124  03FD  00C4               	movwf	??_main+4
  2125  03FE  1683               	bsf	3,5	;RP0=1, select bank3
  2126  03FF  1703               	bsf	3,6	;RP1=1, select bank3
  2127  0400  085D               	movf	main@lux_select^(0+384),w
  2128  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0403  00C5               	movwf	??_main+5
  2131  0404  0745               	addwf	??_main+5,w
  2132  0405  0743               	addwf	??_main+3,w
  2133  0406  00C6               	movwf	??_main+6
  2134  0407  0844               	movf	??_main+4,w
  2135  0408  1803               	skipnc
  2136  0409  3E01               	addlw	1
  2137  040A  00C7               	movwf	??_main+7
  2138  040B  0846               	movf	??_main+6,w
  2139  040C  0084               	movwf	4
  2140  040D  1783               	bsf	3,7
  2141  040E  1C47               	btfss	??_main+7,0
  2142  040F  1383               	bcf	3,7
  2143  0410  0800               	movf	0,w
  2144  0411  00C8               	movwf	??_main+8
  2145  0412  0A84               	incf	4,f
  2146  0413  0800               	movf	0,w
  2147  0414  00C9               	movwf	??_main+9
  2148  0415  1683               	bsf	3,5	;RP0=1, select bank3
  2149  0416  1703               	bsf	3,6	;RP1=1, select bank3
  2150  0417  0859               	movf	main@time^(0+384),w
  2151  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2153  041A  0248               	subwf	??_main+8,w
  2154  041B  00B6               	movwf	GetDigits@Time
  2155  041C  1683               	bsf	3,5	;RP0=1, select bank3
  2156  041D  1703               	bsf	3,6	;RP1=1, select bank3
  2157  041E  085A               	movf	(main@time+1)^(0+384),w
  2158  041F  1C03               	skipc
  2159  0420  0A5A               	incf	(main@time+1)^(0+384),w
  2160  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0423  0249               	subwf	??_main+9,w
  2163  0424  00B7               	movwf	GetDigits@Time+1
  2164  0425  3063               	movlw	(low (_centinaia| 0))& (0+255)
  2165  0426  120A  118A  2627  120A  118A  	fcall	_GetDigits
  2166  042B                     l3114:	
  2167                           
  2168                           ;main.c: 295:             }while(id_semaforo>0);
  2169  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2170  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2171  042D  0862               	movf	_id_semaforo,w
  2172  042E  1D03               	btfss	3,2
  2173  042F  2C31               	goto	u2861
  2174  0430  2C32               	goto	u2860
  2175  0431                     u2861:	
  2176  0431  2B49               	goto	l3092
  2177  0432                     u2860:	
  2178  0432  2C80               	goto	l3130
  2179  0433                     l3116:	
  2180                           
  2181                           ;main.c: 302:             if (centinaia > 0)
  2182  0433  0863               	movf	_centinaia,w
  2183  0434  1903               	btfsc	3,2
  2184  0435  2C37               	goto	u2871
  2185  0436  2C38               	goto	u2870
  2186  0437                     u2871:	
  2187  0437  2C93               	goto	l3132
  2188  0438                     u2870:	
  2189  0438                     l3118:	
  2190                           
  2191                           ;main.c: 303:             {;main.c: 304:                 SetDisplay(1, 0, 0, display[cen
      +                          tinaia]);
  2192  0438  01A4               	clrf	SetDisplay@d2
  2193  0439  01A5               	clrf	SetDisplay@d3
  2194  043A  0863               	movf	_centinaia,w
  2195  043B  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2196  043C  0084               	movwf	4
  2197  043D  120A  158A  2000  120A  118A  	fcall	stringdir
  2198  0442  00C0               	movwf	??_main
  2199  0443  0840               	movf	??_main,w
  2200  0444  00A6               	movwf	SetDisplay@value
  2201  0445  3001               	movlw	1
  2202  0446  120A  158A  2462  120A  118A  	fcall	_SetDisplay
  2203  044B  2C93               	goto	l3132
  2204  044C                     l3120:	
  2205                           
  2206                           ;main.c: 308:             if (decine > 0 || centinaia > 0)
  2207  044C  0864               	movf	_decine,w
  2208  044D  1D03               	btfss	3,2
  2209  044E  2C50               	goto	u2881
  2210  044F  2C51               	goto	u2880
  2211  0450                     u2881:	
  2212  0450  2C56               	goto	l3124
  2213  0451                     u2880:	
  2214  0451                     l3122:	
  2215  0451  0863               	movf	_centinaia,w
  2216  0452  1903               	btfsc	3,2
  2217  0453  2C55               	goto	u2891
  2218  0454  2C56               	goto	u2890
  2219  0455                     u2891:	
  2220  0455  2C93               	goto	l3132
  2221  0456                     u2890:	
  2222  0456                     l3124:	
  2223                           
  2224                           ;main.c: 309:             {;main.c: 310:                 SetDisplay(0, 1, 0, display[dec
      +                          ine]);
  2225  0456  01A4               	clrf	SetDisplay@d2
  2226  0457  0AA4               	incf	SetDisplay@d2,f
  2227  0458  01A5               	clrf	SetDisplay@d3
  2228  0459  0864               	movf	_decine,w
  2229  045A  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2230  045B  0084               	movwf	4
  2231  045C  120A  158A  2000  120A  118A  	fcall	stringdir
  2232  0461  00C0               	movwf	??_main
  2233  0462  0840               	movf	??_main,w
  2234  0463  00A6               	movwf	SetDisplay@value
  2235  0464  3000               	movlw	0
  2236  0465  120A  158A  2462  120A  118A  	fcall	_SetDisplay
  2237  046A  2C93               	goto	l3132
  2238  046B                     l3126:	
  2239                           
  2240                           ;main.c: 314:             SetDisplay(0, 0, 1, display[unita]);
  2241  046B  01A4               	clrf	SetDisplay@d2
  2242  046C  01A5               	clrf	SetDisplay@d3
  2243  046D  0AA5               	incf	SetDisplay@d3,f
  2244  046E  0865               	movf	_unita,w
  2245  046F  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  2246  0470  0084               	movwf	4
  2247  0471  120A  158A  2000  120A  118A  	fcall	stringdir
  2248  0476  00C0               	movwf	??_main
  2249  0477  0840               	movf	??_main,w
  2250  0478  00A6               	movwf	SetDisplay@value
  2251  0479  3000               	movlw	0
  2252  047A  120A  158A  2462  120A  118A  	fcall	_SetDisplay
  2253                           
  2254                           ;main.c: 315:             break;
  2255  047F  2C93               	goto	l3132
  2256  0480                     l3130:	
  2257  0480  0851               	movf	_disp,w
  2258  0481  00C0               	movwf	??_main
  2259  0482  01C1               	clrf	??_main+1
  2260                           
  2261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2262                           ; Switch size 1, requested type "simple"
  2263                           ; Number of cases is 1, Range of values is 0 to 0
  2264                           ; switch strategies available:
  2265                           ; Name         Instructions Cycles
  2266                           ; simple_byte            4     3 (average)
  2267                           ; direct_byte           11     8 (fixed)
  2268                           ; jumptable            260     6 (fixed)
  2269                           ;	Chosen strategy is simple_byte
  2270  0483  0841               	movf	??_main+1,w
  2271  0484  3A00               	xorlw	0	; case 0
  2272  0485  1903               	skipnz
  2273  0486  2C88               	goto	l3284
  2274  0487  2C93               	goto	l3132
  2275  0488                     l3284:	
  2276                           
  2277                           ; Switch size 1, requested type "simple"
  2278                           ; Number of cases is 3, Range of values is 0 to 2
  2279                           ; switch strategies available:
  2280                           ; Name         Instructions Cycles
  2281                           ; simple_byte           10     6 (average)
  2282                           ; direct_byte           17     8 (fixed)
  2283                           ; jumptable            260     6 (fixed)
  2284                           ;	Chosen strategy is simple_byte
  2285  0488  0840               	movf	??_main,w
  2286  0489  3A00               	xorlw	0	; case 0
  2287  048A  1903               	skipnz
  2288  048B  2C33               	goto	l3116
  2289  048C  3A01               	xorlw	1	; case 1
  2290  048D  1903               	skipnz
  2291  048E  2C4C               	goto	l3120
  2292  048F  3A03               	xorlw	3	; case 2
  2293  0490  1903               	skipnz
  2294  0491  2C6B               	goto	l3126
  2295  0492  2C93               	goto	l3132
  2296  0493                     l3132:	
  2297                           
  2298                           ;main.c: 317:         disp = (disp + 1) % 3;
  2299  0493  3003               	movlw	3
  2300  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0496  00A4               	movwf	___awmod@divisor
  2303  0497  3000               	movlw	0
  2304  0498  00A5               	movwf	___awmod@divisor+1
  2305  0499  0851               	movf	_disp,w
  2306  049A  3E01               	addlw	1
  2307  049B  00A6               	movwf	___awmod@dividend
  2308  049C  3000               	movlw	0
  2309  049D  1803               	skipnc
  2310  049E  3001               	movlw	1
  2311  049F  00A7               	movwf	___awmod@dividend+1
  2312  04A0  120A  158A  267C  120A  118A  	fcall	___awmod
  2313  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2314  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2315  04A7  0824               	movf	?___awmod,w
  2316  04A8  00C0               	movwf	??_main
  2317  04A9  0840               	movf	??_main,w
  2318  04AA  00D1               	movwf	_disp
  2319  04AB                     l3134:	
  2320                           
  2321                           ;main.c: 323:         if (secondPassed.Bit && cycled.Bit)
  2322  04AB  1C53               	btfss	_secondPassed,0
  2323  04AC  2CAE               	goto	u2901
  2324  04AD  2CAF               	goto	u2900
  2325  04AE                     u2901:	
  2326  04AE  2CB5               	goto	l274
  2327  04AF                     u2900:	
  2328  04AF                     l3136:	
  2329  04AF  1C52               	btfss	_cycled,0
  2330  04B0  2CB2               	goto	u2911
  2331  04B1  2CB3               	goto	u2910
  2332  04B2                     u2911:	
  2333  04B2  2CB5               	goto	l274
  2334  04B3                     u2910:	
  2335  04B3                     l3138:	
  2336                           
  2337                           ;main.c: 324:         {;main.c: 325:             secondPassed.Bit = 0;
  2338  04B3  1053               	bcf	_secondPassed,0
  2339                           
  2340                           ;main.c: 326:             cycled.Bit = 0;
  2341  04B4  1052               	bcf	_cycled,0
  2342  04B5                     l274:	
  2343                           ;main.c: 327:         }
  2344                           
  2345                           
  2346                           ;main.c: 328:         if (secondPassed.Bit && !cycled.Bit)
  2347  04B5  1C53               	btfss	_secondPassed,0
  2348  04B6  2CB8               	goto	u2921
  2349  04B7  2CB9               	goto	u2920
  2350  04B8                     u2921:	
  2351  04B8  2883               	goto	l2992
  2352  04B9                     u2920:	
  2353  04B9                     l3140:	
  2354  04B9  1852               	btfsc	_cycled,0
  2355  04BA  2CBC               	goto	u2931
  2356  04BB  2CBD               	goto	u2930
  2357  04BC                     u2931:	
  2358  04BC  2883               	goto	l2992
  2359  04BD                     u2930:	
  2360  04BD                     l3142:	
  2361                           
  2362                           ;main.c: 329:         {;main.c: 330:             cycled.Bit = 1;
  2363  04BD  1452               	bsf	_cycled,0
  2364  04BE  2883               	goto	l2992
  2365  04BF  120A  118A  2810   	ljmp	start
  2366  04C2                     __end_of_main:	
  2367                           
  2368                           	psect	text1
  2369  0CDB                     __ptext1:	
  2370 ;; *************** function _sendByte *****************
  2371 ;; Defined at:
  2372 ;;		line 394 in file "main.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  byte0           1    wreg     unsigned char 
  2375 ;;  byte1           1   24[BANK0 ] unsigned char 
  2376 ;;  valore          1   25[BANK0 ] unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  byte0           1   29[BANK0 ] unsigned char 
  2379 ;;  i               1   31[BANK0 ] unsigned char 
  2380 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2381 ;;		 -> BuildByte@txByte(5), 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       2       0       0       0
  2392 ;;      Locals:         0       3       0       0       0
  2393 ;;      Temps:          0       3       0       0       0
  2394 ;;      Totals:         0       8       0       0       0
  2395 ;;Total ram usage:        8 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    4
  2398 ;; This function calls:
  2399 ;;		_BuildByte
  2400 ;;		_UART_TxChar
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _sendByte
  2408  0CDB                     _sendByte:	
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2412                           ;sendByte@byte0 stored from wreg
  2413  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0CDD  00BD               	movwf	sendByte@byte0
  2416  0CDE                     l2926:	
  2417                           
  2418                           ;main.c: 394: void sendByte(char byte0, char byte1, char valore);main.c: 395: {;main.c: 
      +                          396:     char *txByte;;main.c: 397:     txByte = BuildByte(byte0, byte1, valore);
  2419  0CDE  0838               	movf	sendByte@byte1,w
  2420  0CDF  00BA               	movwf	??_sendByte
  2421  0CE0  083A               	movf	??_sendByte,w
  2422  0CE1  00A4               	movwf	BuildByte@byte1
  2423  0CE2  0839               	movf	sendByte@valore,w
  2424  0CE3  00BB               	movwf	??_sendByte+1
  2425  0CE4  083B               	movf	??_sendByte+1,w
  2426  0CE5  00A5               	movwf	BuildByte@valore
  2427  0CE6  083D               	movf	sendByte@byte0,w
  2428  0CE7  120A  118A  24C2  120A  158A  	fcall	_BuildByte
  2429  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0CEE  00BC               	movwf	??_sendByte+2
  2432  0CEF  083C               	movf	??_sendByte+2,w
  2433  0CF0  00BE               	movwf	sendByte@txByte
  2434  0CF1                     l2928:	
  2435                           
  2436                           ;main.c: 399:     for (unsigned char i = 0; i < 5; i++)
  2437  0CF1  01BF               	clrf	sendByte@i
  2438  0CF2                     l2934:	
  2439                           
  2440                           ;main.c: 400:     {;main.c: 401:         UART_TxChar(*(txByte++));
  2441  0CF2  083E               	movf	sendByte@txByte,w
  2442  0CF3  0084               	movwf	4
  2443  0CF4  1383               	bcf	3,7	;select IRP bank0
  2444  0CF5  0800               	movf	0,w
  2445  0CF6  120A  158A  2421  120A  158A  	fcall	_UART_TxChar
  2446  0CFB                     l2936:	
  2447  0CFB  3001               	movlw	1
  2448  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  2450  0CFE  00BA               	movwf	??_sendByte
  2451  0CFF  083A               	movf	??_sendByte,w
  2452  0D00  07BE               	addwf	sendByte@txByte,f
  2453  0D01                     l2938:	
  2454                           
  2455                           ;main.c: 402:     }
  2456  0D01  3001               	movlw	1
  2457  0D02  00BA               	movwf	??_sendByte
  2458  0D03  083A               	movf	??_sendByte,w
  2459  0D04  07BF               	addwf	sendByte@i,f
  2460  0D05                     l2940:	
  2461  0D05  3005               	movlw	5
  2462  0D06  023F               	subwf	sendByte@i,w
  2463  0D07  1C03               	skipc
  2464  0D08  2D0A               	goto	u2681
  2465  0D09  2D0B               	goto	u2680
  2466  0D0A                     u2681:	
  2467  0D0A  2CF2               	goto	l2934
  2468  0D0B                     u2680:	
  2469  0D0B                     l313:	
  2470  0D0B  0008               	return
  2471  0D0C                     __end_of_sendByte:	
  2472                           
  2473                           	psect	text2
  2474  0C21                     __ptext2:	
  2475 ;; *************** function _UART_TxChar *****************
  2476 ;; Defined at:
  2477 ;;		line 369 in file "main.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  ch              1    wreg     unsigned char 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  ch              1    4[BANK0 ] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       0       0       0       0
  2492 ;;      Locals:         0       1       0       0       0
  2493 ;;      Temps:          0       0       0       0       0
  2494 ;;      Totals:         0       1       0       0       0
  2495 ;;Total ram usage:        1 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    3
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_sendByte
  2502 ;;		_UART_Write_Text
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _UART_TxChar
  2508  0C21                     _UART_TxChar:	
  2509                           
  2510                           ;incstack = 0
  2511                           ; Regs used in _UART_TxChar: [wreg]
  2512                           ;UART_TxChar@ch stored from wreg
  2513  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0C23  00A4               	movwf	UART_TxChar@ch
  2516  0C24                     l2658:	
  2517  0C24                     l293:	
  2518                           ;main.c: 372:         ;
  2519                           
  2520                           
  2521                           ;main.c: 371:     while (!TXIF)
  2522  0C24  1E0C               	btfss	12,4	;volatile
  2523  0C25  2C27               	goto	u2221
  2524  0C26  2C28               	goto	u2220
  2525  0C27                     u2221:	
  2526  0C27  2C24               	goto	l293
  2527  0C28                     u2220:	
  2528  0C28                     l295:	
  2529                           
  2530                           ;main.c: 373:     TXIF = 0;
  2531  0C28  120C               	bcf	12,4	;volatile
  2532  0C29                     l2660:	
  2533                           
  2534                           ;main.c: 374:     TXREG = ch;
  2535  0C29  0824               	movf	UART_TxChar@ch,w
  2536  0C2A  0099               	movwf	25	;volatile
  2537  0C2B                     l296:	
  2538  0C2B  0008               	return
  2539  0C2C                     __end_of_UART_TxChar:	
  2540                           
  2541                           	psect	text3
  2542  04C2                     __ptext3:	
  2543 ;; *************** function _BuildByte *****************
  2544 ;; Defined at:
  2545 ;;		line 2 in file "./CustomLib/Serial.h"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  byte0           1    wreg     unsigned char 
  2548 ;;  byte1           1    4[BANK0 ] unsigned char 
  2549 ;;  valore          1    5[BANK0 ] unsigned char 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  byte0           1    8[BANK0 ] unsigned char 
  2552 ;;  y               2   18[BANK0 ] int 
  2553 ;;  y               2   16[BANK0 ] int 
  2554 ;;  i               2   22[BANK0 ] int 
  2555 ;;  i               2   20[BANK0 ] int 
  2556 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2557 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2558 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      PTR unsigned char 
  2561 ;; Registers used:
  2562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2568 ;;      Params:         0       2       0       0       0
  2569 ;;      Locals:         0      16       0       0       0
  2570 ;;      Temps:          0       2       0       0       0
  2571 ;;      Totals:         0      20       0       0       0
  2572 ;;Total ram usage:       20 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    3
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_sendByte
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _BuildByte
  2584  04C2                     _BuildByte:	
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2588                           ;BuildByte@byte0 stored from wreg
  2589  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2590  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2591  04C4  00A8               	movwf	BuildByte@byte0
  2592  04C5                     l2576:	
  2593                           
  2594                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2595  04C5  0828               	movf	BuildByte@byte0,w
  2596  04C6  397F               	andlw	127
  2597  04C7  00A6               	movwf	??_BuildByte
  2598  04C8  0826               	movf	??_BuildByte,w
  2599  04C9  00A9               	movwf	BuildByte@txByte
  2600                           
  2601                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2602  04CA  0824               	movf	BuildByte@byte1,w
  2603  04CB  397F               	andlw	127
  2604  04CC  00A6               	movwf	??_BuildByte
  2605  04CD  0826               	movf	??_BuildByte,w
  2606  04CE  00AA               	movwf	BuildByte@txByte+1
  2607                           
  2608                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2609  04CF  0825               	movf	BuildByte@valore,w
  2610  04D0  397F               	andlw	127
  2611  04D1  00A6               	movwf	??_BuildByte
  2612  04D2  0826               	movf	??_BuildByte,w
  2613  04D3  00AB               	movwf	BuildByte@txByte+2
  2614  04D4                     l2578:	
  2615                           
  2616                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2617  04D4  0825               	movf	BuildByte@valore,w
  2618  04D5  00A6               	movwf	??_BuildByte
  2619  04D6  3007               	movlw	7
  2620  04D7                     u2115:	
  2621  04D7  1003               	clrc
  2622  04D8  0CA6               	rrf	??_BuildByte,f
  2623  04D9  3EFF               	addlw	-1
  2624  04DA  1D03               	skipz
  2625  04DB  2CD7               	goto	u2115
  2626  04DC  0826               	movf	??_BuildByte,w
  2627  04DD  397F               	andlw	127
  2628  04DE  00A7               	movwf	??_BuildByte+1
  2629  04DF  0827               	movf	??_BuildByte+1,w
  2630  04E0  00AC               	movwf	BuildByte@txByte+3
  2631  04E1                     l2580:	
  2632                           
  2633                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2634  04E1  01AE               	clrf	BuildByte@sommaRow
  2635  04E2                     l2582:	
  2636                           
  2637                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2638  04E2  01AF               	clrf	BuildByte@sommaColumn
  2639  04E3                     l2584:	
  2640                           
  2641                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2642  04E3  01B4               	clrf	BuildByte@i
  2643  04E4  01B5               	clrf	BuildByte@i+1
  2644  04E5                     l2590:	
  2645                           
  2646                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2647  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2648  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2649  04E7  01B0               	clrf	BuildByte@y
  2650  04E8  01B1               	clrf	BuildByte@y+1
  2651  04E9                     l2596:	
  2652                           
  2653                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2654  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2655  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2656  04EB  0834               	movf	BuildByte@i,w
  2657  04EC  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2658  04ED  0084               	movwf	4
  2659  04EE  1383               	bcf	3,7	;select IRP bank0
  2660  04EF  0800               	movf	0,w
  2661  04F0  00A6               	movwf	??_BuildByte
  2662  04F1  0A30               	incf	BuildByte@y,w
  2663  04F2  2CF5               	goto	u2124
  2664  04F3                     u2125:	
  2665  04F3  1003               	clrc
  2666  04F4  0CA6               	rrf	??_BuildByte,f
  2667  04F5                     u2124:	
  2668  04F5  3EFF               	addlw	-1
  2669  04F6  1D03               	skipz
  2670  04F7  2CF3               	goto	u2125
  2671  04F8  0826               	movf	??_BuildByte,w
  2672  04F9  3901               	andlw	1
  2673  04FA  00A7               	movwf	??_BuildByte+1
  2674  04FB  0827               	movf	??_BuildByte+1,w
  2675  04FC  07AE               	addwf	BuildByte@sommaRow,f
  2676  04FD                     l2598:	
  2677                           
  2678                           ;./CustomLib/Serial.h: 18:         }
  2679  04FD  3001               	movlw	1
  2680  04FE  07B0               	addwf	BuildByte@y,f
  2681  04FF  1803               	skipnc
  2682  0500  0AB1               	incf	BuildByte@y+1,f
  2683  0501  3000               	movlw	0
  2684  0502  07B1               	addwf	BuildByte@y+1,f
  2685  0503                     l2600:	
  2686  0503  0831               	movf	BuildByte@y+1,w
  2687  0504  3A80               	xorlw	128
  2688  0505  00FF               	movwf	btemp+1
  2689  0506  3080               	movlw	128
  2690  0507  027F               	subwf	btemp+1,w
  2691  0508  1D03               	skipz
  2692  0509  2D0C               	goto	u2135
  2693  050A  3008               	movlw	8
  2694  050B  0230               	subwf	BuildByte@y,w
  2695  050C                     u2135:	
  2696  050C  1C03               	skipc
  2697  050D  2D0F               	goto	u2131
  2698  050E  2D10               	goto	u2130
  2699  050F                     u2131:	
  2700  050F  2CE9               	goto	l2596
  2701  0510                     u2130:	
  2702  0510                     l119:	
  2703                           
  2704                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2705  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0512  1C2E               	btfss	BuildByte@sommaRow,0
  2708  0513  2D15               	goto	u2141
  2709  0514  2D16               	goto	u2140
  2710  0515                     u2141:	
  2711  0515  2D1E               	goto	l2604
  2712  0516                     u2140:	
  2713  0516                     l2602:	
  2714                           
  2715                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2716  0516  3080               	movlw	128
  2717  0517  00A6               	movwf	??_BuildByte
  2718  0518  0834               	movf	BuildByte@i,w
  2719  0519  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2720  051A  0084               	movwf	4
  2721  051B  0826               	movf	??_BuildByte,w
  2722  051C  1383               	bcf	3,7	;select IRP bank0
  2723  051D  0780               	addwf	0,f
  2724  051E                     l2604:	
  2725                           
  2726                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2727  051E  01AE               	clrf	BuildByte@sommaRow
  2728  051F                     l2608:	
  2729                           ;./CustomLib/Serial.h: 23:         }
  2730                           
  2731                           
  2732                           ;./CustomLib/Serial.h: 28:     }
  2733  051F  3001               	movlw	1
  2734  0520  07B4               	addwf	BuildByte@i,f
  2735  0521  1803               	skipnc
  2736  0522  0AB5               	incf	BuildByte@i+1,f
  2737  0523  3000               	movlw	0
  2738  0524  07B5               	addwf	BuildByte@i+1,f
  2739  0525                     l2610:	
  2740  0525  0835               	movf	BuildByte@i+1,w
  2741  0526  3A80               	xorlw	128
  2742  0527  00FF               	movwf	btemp+1
  2743  0528  3080               	movlw	128
  2744  0529  027F               	subwf	btemp+1,w
  2745  052A  1D03               	skipz
  2746  052B  2D2E               	goto	u2155
  2747  052C  3004               	movlw	4
  2748  052D  0234               	subwf	BuildByte@i,w
  2749  052E                     u2155:	
  2750  052E  1C03               	skipc
  2751  052F  2D31               	goto	u2151
  2752  0530  2D32               	goto	u2150
  2753  0531                     u2151:	
  2754  0531  2CE5               	goto	l2590
  2755  0532                     u2150:	
  2756  0532                     l2612:	
  2757                           
  2758                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2759  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0534  01B6               	clrf	BuildByte@i_332
  2762  0535  01B7               	clrf	BuildByte@i_332+1
  2763  0536                     l2618:	
  2764                           
  2765                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2766  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0537  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0538  01B2               	clrf	BuildByte@y_333
  2769  0539  01B3               	clrf	BuildByte@y_333+1
  2770  053A                     l2624:	
  2771                           
  2772                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2773  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2774  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2775  053C  0832               	movf	BuildByte@y_333,w
  2776  053D  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2777  053E  0084               	movwf	4
  2778  053F  1383               	bcf	3,7	;select IRP bank0
  2779  0540  0800               	movf	0,w
  2780  0541  00A6               	movwf	??_BuildByte
  2781  0542  0A36               	incf	BuildByte@i_332,w
  2782  0543  2D46               	goto	u2164
  2783  0544                     u2165:	
  2784  0544  1003               	clrc
  2785  0545  0CA6               	rrf	??_BuildByte,f
  2786  0546                     u2164:	
  2787  0546  3EFF               	addlw	-1
  2788  0547  1D03               	skipz
  2789  0548  2D44               	goto	u2165
  2790  0549  0826               	movf	??_BuildByte,w
  2791  054A  3901               	andlw	1
  2792  054B  00A7               	movwf	??_BuildByte+1
  2793  054C  0827               	movf	??_BuildByte+1,w
  2794  054D  07AF               	addwf	BuildByte@sommaColumn,f
  2795  054E                     l2626:	
  2796                           
  2797                           ;./CustomLib/Serial.h: 37:         }
  2798  054E  3001               	movlw	1
  2799  054F  07B2               	addwf	BuildByte@y_333,f
  2800  0550  1803               	skipnc
  2801  0551  0AB3               	incf	BuildByte@y_333+1,f
  2802  0552  3000               	movlw	0
  2803  0553  07B3               	addwf	BuildByte@y_333+1,f
  2804  0554                     l2628:	
  2805  0554  0833               	movf	BuildByte@y_333+1,w
  2806  0555  3A80               	xorlw	128
  2807  0556  00FF               	movwf	btemp+1
  2808  0557  3080               	movlw	128
  2809  0558  027F               	subwf	btemp+1,w
  2810  0559  1D03               	skipz
  2811  055A  2D5D               	goto	u2175
  2812  055B  3004               	movlw	4
  2813  055C  0232               	subwf	BuildByte@y_333,w
  2814  055D                     u2175:	
  2815  055D  1C03               	skipc
  2816  055E  2D60               	goto	u2171
  2817  055F  2D61               	goto	u2170
  2818  0560                     u2171:	
  2819  0560  2D3A               	goto	l2624
  2820  0561                     u2170:	
  2821  0561                     l125:	
  2822                           
  2823                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2824  0561  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0562  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0563  1C2F               	btfss	BuildByte@sommaColumn,0
  2827  0564  2D66               	goto	u2181
  2828  0565  2D67               	goto	u2180
  2829  0566                     u2181:	
  2830  0566  2D74               	goto	l2632
  2831  0567                     u2180:	
  2832  0567                     l2630:	
  2833                           
  2834                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2835  0567  3001               	movlw	1
  2836  0568  00A6               	movwf	??_BuildByte
  2837  0569  0A36               	incf	BuildByte@i_332,w
  2838  056A  2D6D               	goto	u2194
  2839  056B                     u2195:	
  2840  056B  1003               	clrc
  2841  056C  0DA6               	rlf	??_BuildByte,f
  2842  056D                     u2194:	
  2843  056D  3EFF               	addlw	-1
  2844  056E  1D03               	skipz
  2845  056F  2D6B               	goto	u2195
  2846  0570  0826               	movf	??_BuildByte,w
  2847  0571  00A7               	movwf	??_BuildByte+1
  2848  0572  0827               	movf	??_BuildByte+1,w
  2849  0573  07AD               	addwf	BuildByte@txByte+4,f
  2850  0574                     l2632:	
  2851                           
  2852                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2853  0574  01AF               	clrf	BuildByte@sommaColumn
  2854  0575                     l2636:	
  2855                           ;./CustomLib/Serial.h: 42:         }
  2856                           
  2857                           
  2858                           ;./CustomLib/Serial.h: 47:     }
  2859  0575  3001               	movlw	1
  2860  0576  07B6               	addwf	BuildByte@i_332,f
  2861  0577  1803               	skipnc
  2862  0578  0AB7               	incf	BuildByte@i_332+1,f
  2863  0579  3000               	movlw	0
  2864  057A  07B7               	addwf	BuildByte@i_332+1,f
  2865  057B                     l2638:	
  2866  057B  0837               	movf	BuildByte@i_332+1,w
  2867  057C  3A80               	xorlw	128
  2868  057D  00FF               	movwf	btemp+1
  2869  057E  3080               	movlw	128
  2870  057F  027F               	subwf	btemp+1,w
  2871  0580  1D03               	skipz
  2872  0581  2D84               	goto	u2205
  2873  0582  3008               	movlw	8
  2874  0583  0236               	subwf	BuildByte@i_332,w
  2875  0584                     u2205:	
  2876  0584  1C03               	skipc
  2877  0585  2D87               	goto	u2201
  2878  0586  2D88               	goto	u2200
  2879  0587                     u2201:	
  2880  0587  2D36               	goto	l2618
  2881  0588                     u2200:	
  2882  0588                     l2640:	
  2883                           
  2884                           ;./CustomLib/Serial.h: 49:     return txByte;
  2885  0588  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2886  0589                     l128:	
  2887  0589  0008               	return
  2888  058A                     __end_of_BuildByte:	
  2889                           
  2890                           	psect	text4
  2891  0D0C                     __ptext4:	
  2892 ;; *************** function _map *****************
  2893 ;; Defined at:
  2894 ;;		line 1 in file "./CustomLib/Conversions.h"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  x               2   20[BANK0 ] int 
  2897 ;;  in_min          2   22[BANK0 ] int 
  2898 ;;  in_max          2   24[BANK0 ] int 
  2899 ;;  out_min         2   26[BANK0 ] int 
  2900 ;;  out_max         2   28[BANK0 ] int 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  2   20[BANK0 ] int 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, pclath, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2912 ;;      Params:         0      10       0       0       0
  2913 ;;      Locals:         0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0
  2915 ;;      Totals:         0      10       0       0       0
  2916 ;;Total ram usage:       10 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    4
  2919 ;; This function calls:
  2920 ;;		___awdiv
  2921 ;;		___wmul
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _map
  2929  0D0C                     _map:	
  2930  0D0C                     l2812:	
  2931                           ;incstack = 0
  2932                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2933                           
  2934                           
  2935                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2936  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0D0E  0836               	movf	map@in_min,w
  2939  0D0F  0238               	subwf	map@in_max,w
  2940  0D10  00AB               	movwf	___awdiv@divisor
  2941  0D11  0837               	movf	map@in_min+1,w
  2942  0D12  1C03               	skipc
  2943  0D13  0A37               	incf	map@in_min+1,w
  2944  0D14  0239               	subwf	map@in_max+1,w
  2945  0D15  00AC               	movwf	___awdiv@divisor+1
  2946  0D16  0836               	movf	map@in_min,w
  2947  0D17  0234               	subwf	map@x,w
  2948  0D18  00A4               	movwf	___wmul@multiplier
  2949  0D19  0837               	movf	map@in_min+1,w
  2950  0D1A  1C03               	skipc
  2951  0D1B  0A37               	incf	map@in_min+1,w
  2952  0D1C  0235               	subwf	map@x+1,w
  2953  0D1D  00A5               	movwf	___wmul@multiplier+1
  2954  0D1E  083A               	movf	map@out_min,w
  2955  0D1F  023C               	subwf	map@out_max,w
  2956  0D20  00A6               	movwf	___wmul@multiplicand
  2957  0D21  083B               	movf	map@out_min+1,w
  2958  0D22  1C03               	skipc
  2959  0D23  0A3B               	incf	map@out_min+1,w
  2960  0D24  023D               	subwf	map@out_max+1,w
  2961  0D25  00A7               	movwf	___wmul@multiplicand+1
  2962  0D26  120A  158A  24B4  120A  158A  	fcall	___wmul
  2963  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0D2D  0825               	movf	?___wmul+1,w
  2966  0D2E  00AE               	movwf	___awdiv@dividend+1
  2967  0D2F  0824               	movf	?___wmul,w
  2968  0D30  00AD               	movwf	___awdiv@dividend
  2969  0D31  120A  158A  2797  120A  158A  	fcall	___awdiv
  2970  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  2972  0D38  083A               	movf	map@out_min,w
  2973  0D39  072B               	addwf	?___awdiv,w
  2974  0D3A  00B4               	movwf	?_map
  2975  0D3B  083B               	movf	map@out_min+1,w
  2976  0D3C  1803               	skipnc
  2977  0D3D  0A3B               	incf	map@out_min+1,w
  2978  0D3E  072C               	addwf	?___awdiv+1,w
  2979  0D3F  00B5               	movwf	?_map+1
  2980  0D40                     l77:	
  2981  0D40  0008               	return
  2982  0D41                     __end_of_map:	
  2983                           
  2984                           	psect	text5
  2985  0CB4                     __ptext5:	
  2986 ;; *************** function ___wmul *****************
  2987 ;; Defined at:
  2988 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  multiplier      2    4[BANK0 ] unsigned int 
  2991 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  product         2    8[BANK0 ] unsigned int 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  2    4[BANK0 ] unsigned int 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       4       0       0       0
  3004 ;;      Locals:         0       2       0       0       0
  3005 ;;      Temps:          0       0       0       0       0
  3006 ;;      Totals:         0       6       0       0       0
  3007 ;;Total ram usage:        6 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    3
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_map
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           
  3018                           ;psect for function ___wmul
  3019  0CB4                     ___wmul:	
  3020  0CB4                     l2662:	
  3021                           ;incstack = 0
  3022                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3023                           
  3024  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0CB6  01A8               	clrf	___wmul@product
  3027  0CB7  01A9               	clrf	___wmul@product+1
  3028  0CB8                     l2664:	
  3029  0CB8  1C24               	btfss	___wmul@multiplier,0
  3030  0CB9  2CBB               	goto	u2231
  3031  0CBA  2CBC               	goto	u2230
  3032  0CBB                     u2231:	
  3033  0CBB  2CC2               	goto	l420
  3034  0CBC                     u2230:	
  3035  0CBC                     l2666:	
  3036  0CBC  0826               	movf	___wmul@multiplicand,w
  3037  0CBD  07A8               	addwf	___wmul@product,f
  3038  0CBE  1803               	skipnc
  3039  0CBF  0AA9               	incf	___wmul@product+1,f
  3040  0CC0  0827               	movf	___wmul@multiplicand+1,w
  3041  0CC1  07A9               	addwf	___wmul@product+1,f
  3042  0CC2                     l420:	
  3043  0CC2  3001               	movlw	1
  3044  0CC3                     u2245:	
  3045  0CC3  1003               	clrc
  3046  0CC4  0DA6               	rlf	___wmul@multiplicand,f
  3047  0CC5  0DA7               	rlf	___wmul@multiplicand+1,f
  3048  0CC6  3EFF               	addlw	-1
  3049  0CC7  1D03               	skipz
  3050  0CC8  2CC3               	goto	u2245
  3051  0CC9                     l2668:	
  3052  0CC9  3001               	movlw	1
  3053  0CCA                     u2255:	
  3054  0CCA  1003               	clrc
  3055  0CCB  0CA5               	rrf	___wmul@multiplier+1,f
  3056  0CCC  0CA4               	rrf	___wmul@multiplier,f
  3057  0CCD  3EFF               	addlw	-1
  3058  0CCE  1D03               	skipz
  3059  0CCF  2CCA               	goto	u2255
  3060  0CD0                     l2670:	
  3061  0CD0  0824               	movf	___wmul@multiplier,w
  3062  0CD1  0425               	iorwf	___wmul@multiplier+1,w
  3063  0CD2  1D03               	btfss	3,2
  3064  0CD3  2CD5               	goto	u2261
  3065  0CD4  2CD6               	goto	u2260
  3066  0CD5                     u2261:	
  3067  0CD5  2CB8               	goto	l2664
  3068  0CD6                     u2260:	
  3069  0CD6                     l2672:	
  3070  0CD6  0829               	movf	___wmul@product+1,w
  3071  0CD7  00A5               	movwf	?___wmul+1
  3072  0CD8  0828               	movf	___wmul@product,w
  3073  0CD9  00A4               	movwf	?___wmul
  3074  0CDA                     l422:	
  3075  0CDA  0008               	return
  3076  0CDB                     __end_of___wmul:	
  3077                           
  3078                           	psect	text6
  3079  0C3C                     __ptext6:	
  3080 ;; *************** function _init_ADC *****************
  3081 ;; Defined at:
  3082 ;;		line 338 in file "main.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0
  3098 ;;      Temps:          0       1       0       0       0
  3099 ;;      Totals:         0       1       0       0       0
  3100 ;;Total ram usage:        1 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    3
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _init_ADC
  3112  0C3C                     _init_ADC:	
  3113  0C3C                     l2908:	
  3114                           ;incstack = 0
  3115                           ; Regs used in _init_ADC: [wreg+status,2]
  3116                           
  3117                           
  3118                           ;main.c: 340:     TRISA = 0xE3;
  3119  0C3C  30E3               	movlw	227
  3120  0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0C3F  0085               	movwf	5	;volatile
  3123  0C40                     l2910:	
  3124                           
  3125                           ;main.c: 341:     ADCON0 = 0x00;
  3126  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  3128  0C42  019F               	clrf	31	;volatile
  3129  0C43                     l2912:	
  3130                           
  3131                           ;main.c: 342:     ADCON1 = 0x80;
  3132  0C43  3080               	movlw	128
  3133  0C44  1683               	bsf	3,5	;RP0=1, select bank1
  3134  0C45  1303               	bcf	3,6	;RP1=0, select bank1
  3135  0C46  009F               	movwf	31	;volatile
  3136  0C47                     l2914:	
  3137                           
  3138                           ;main.c: 343:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3139  0C47  3019               	movlw	25
  3140  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0C4A  00A4               	movwf	??_init_ADC
  3143  0C4B                     u2957:	
  3144  0C4B  0BA4               	decfsz	??_init_ADC,f
  3145  0C4C  2C4B               	goto	u2957
  3146  0C4D  2C4E               	nop2
  3147  0C4E                     l281:	
  3148  0C4E  0008               	return
  3149  0C4F                     __end_of_init_ADC:	
  3150                           
  3151                           	psect	text7
  3152  0ED7                     __ptext7:	
  3153 ;; *************** function _UpdateTimes *****************
  3154 ;; Defined at:
  3155 ;;		line 3 in file "./CustomLib/TrafficLight.h"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  _semafori       1    wreg     PTR PTR struct .
  3158 ;;		 -> Semafori(16), 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  _semafori       1   20[BANK0 ] PTR PTR struct .
  3161 ;;		 -> Semafori(16), 
  3162 ;;  i               1   22[BANK0 ] unsigned char 
  3163 ;;  l               1   21[BANK0 ] unsigned char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3173 ;;      Params:         0       0       0       0       0
  3174 ;;      Locals:         0       3       0       0       0
  3175 ;;      Temps:          0      16       0       0       0
  3176 ;;      Totals:         0      19       0       0       0
  3177 ;;Total ram usage:       19 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    3
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _UpdateTimes
  3189  0ED7                     _UpdateTimes:	
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3193                           ;UpdateTimes@_semafori stored from wreg
  3194  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  3196  0ED9  00B4               	movwf	UpdateTimes@_semafori
  3197  0EDA                     l2828:	
  3198                           
  3199                           ;./CustomLib/TrafficLight.h: 3: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 4: {;./CustomLib/TrafficLight.h: 6:     for (unsigned char l = 0; l < 16; l++)
  3200  0EDA  01B5               	clrf	UpdateTimes@l
  3201  0EDB                     l2834:	
  3202                           
  3203                           ;./CustomLib/TrafficLight.h: 7:     {;./CustomLib/TrafficLight.h: 8:         for(unsigne
      +                          d char i = 0; i < 3; i++)
  3204  0EDB  01B6               	clrf	UpdateTimes@i
  3205  0EDC                     l2840:	
  3206                           
  3207                           ;./CustomLib/TrafficLight.h: 9:         {;./CustomLib/TrafficLight.h: 10:             (*
      +                          (_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3208  0EDC  0835               	movf	UpdateTimes@l,w
  3209  0EDD  00A4               	movwf	??_UpdateTimes
  3210  0EDE  0724               	addwf	??_UpdateTimes,w
  3211  0EDF  0734               	addwf	UpdateTimes@_semafori,w
  3212  0EE0  00A5               	movwf	??_UpdateTimes+1
  3213  0EE1  0825               	movf	??_UpdateTimes+1,w
  3214  0EE2  0084               	movwf	4
  3215  0EE3  1383               	bcf	3,7	;select IRP bank0
  3216  0EE4  0800               	movf	0,w
  3217  0EE5  00A6               	movwf	??_UpdateTimes+2
  3218  0EE6  0A84               	incf	4,f
  3219  0EE7  0800               	movf	0,w
  3220  0EE8  00A7               	movwf	??_UpdateTimes+3
  3221  0EE9  0836               	movf	UpdateTimes@i,w
  3222  0EEA  00A8               	movwf	??_UpdateTimes+4
  3223  0EEB  0728               	addwf	??_UpdateTimes+4,w
  3224  0EEC  3E06               	addlw	6
  3225  0EED  0726               	addwf	??_UpdateTimes+2,w
  3226  0EEE  00A9               	movwf	??_UpdateTimes+5
  3227  0EEF  0827               	movf	??_UpdateTimes+3,w
  3228  0EF0  1803               	skipnc
  3229  0EF1  3E01               	addlw	1
  3230  0EF2  00AA               	movwf	??_UpdateTimes+6
  3231  0EF3  0829               	movf	??_UpdateTimes+5,w
  3232  0EF4  0084               	movwf	4
  3233  0EF5  1783               	bsf	3,7
  3234  0EF6  1C2A               	btfss	??_UpdateTimes+6,0
  3235  0EF7  1383               	bcf	3,7
  3236  0EF8  0800               	movf	0,w
  3237  0EF9  00AB               	movwf	??_UpdateTimes+7
  3238  0EFA  0A84               	incf	4,f
  3239  0EFB  0800               	movf	0,w
  3240  0EFC  00AC               	movwf	??_UpdateTimes+8
  3241  0EFD  0835               	movf	UpdateTimes@l,w
  3242  0EFE  00AD               	movwf	??_UpdateTimes+9
  3243  0EFF  072D               	addwf	??_UpdateTimes+9,w
  3244  0F00  0734               	addwf	UpdateTimes@_semafori,w
  3245  0F01  00AE               	movwf	??_UpdateTimes+10
  3246  0F02  082E               	movf	??_UpdateTimes+10,w
  3247  0F03  0084               	movwf	4
  3248  0F04  1383               	bcf	3,7	;select IRP bank0
  3249  0F05  0800               	movf	0,w
  3250  0F06  00AF               	movwf	??_UpdateTimes+11
  3251  0F07  0A84               	incf	4,f
  3252  0F08  0800               	movf	0,w
  3253  0F09  00B0               	movwf	??_UpdateTimes+12
  3254  0F0A  0836               	movf	UpdateTimes@i,w
  3255  0F0B  00B1               	movwf	??_UpdateTimes+13
  3256  0F0C  0731               	addwf	??_UpdateTimes+13,w
  3257  0F0D  072F               	addwf	??_UpdateTimes+11,w
  3258  0F0E  00B2               	movwf	??_UpdateTimes+14
  3259  0F0F  0830               	movf	??_UpdateTimes+12,w
  3260  0F10  1803               	skipnc
  3261  0F11  3E01               	addlw	1
  3262  0F12  00B3               	movwf	??_UpdateTimes+15
  3263  0F13  0832               	movf	??_UpdateTimes+14,w
  3264  0F14  0084               	movwf	4
  3265  0F15  1783               	bsf	3,7
  3266  0F16  1C33               	btfss	??_UpdateTimes+15,0
  3267  0F17  1383               	bcf	3,7
  3268  0F18  082B               	movf	??_UpdateTimes+7,w
  3269  0F19  0080               	movwf	0
  3270  0F1A  0A84               	incf	4,f
  3271  0F1B  082C               	movf	??_UpdateTimes+8,w
  3272  0F1C  0080               	movwf	0
  3273  0F1D                     l2842:	
  3274                           
  3275                           ;./CustomLib/TrafficLight.h: 11:         }
  3276  0F1D  3001               	movlw	1
  3277  0F1E  00A4               	movwf	??_UpdateTimes
  3278  0F1F  0824               	movf	??_UpdateTimes,w
  3279  0F20  07B6               	addwf	UpdateTimes@i,f
  3280  0F21                     l2844:	
  3281  0F21  3003               	movlw	3
  3282  0F22  0236               	subwf	UpdateTimes@i,w
  3283  0F23  1C03               	skipc
  3284  0F24  2F26               	goto	u2591
  3285  0F25  2F27               	goto	u2590
  3286  0F26                     u2591:	
  3287  0F26  2EDC               	goto	l2840
  3288  0F27                     u2590:	
  3289  0F27                     l2846:	
  3290                           
  3291                           ;./CustomLib/TrafficLight.h: 12:     }
  3292  0F27  3001               	movlw	1
  3293  0F28  00A4               	movwf	??_UpdateTimes
  3294  0F29  0824               	movf	??_UpdateTimes,w
  3295  0F2A  07B5               	addwf	UpdateTimes@l,f
  3296  0F2B                     l2848:	
  3297  0F2B  3010               	movlw	16
  3298  0F2C  0235               	subwf	UpdateTimes@l,w
  3299  0F2D  1C03               	skipc
  3300  0F2E  2F30               	goto	u2601
  3301  0F2F  2F31               	goto	u2600
  3302  0F30                     u2601:	
  3303  0F30  2EDB               	goto	l2834
  3304  0F31                     u2600:	
  3305  0F31                     l135:	
  3306  0F31  0008               	return
  3307  0F32                     __end_of_UpdateTimes:	
  3308                           
  3309                           	psect	text8
  3310  07C1                     __ptext8:	
  3311 ;; *************** function _UART_Init *****************
  3312 ;; Defined at:
  3313 ;;		line 357 in file "main.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  baudrate        2   19[BANK0 ] int 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0, pclath, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         0       2       0       0       0
  3328 ;;      Locals:         0       0       0       0       0
  3329 ;;      Temps:          0       4       0       0       0
  3330 ;;      Totals:         0       6       0       0       0
  3331 ;;Total ram usage:        6 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    4
  3334 ;; This function calls:
  3335 ;;		___aldiv
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _UART_Init
  3343  07C1                     _UART_Init:	
  3344  07C1                     l2916:	
  3345                           ;incstack = 0
  3346                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3347                           
  3348                           
  3349                           ;main.c: 357: void UART_Init(int baudrate);main.c: 358: {;main.c: 359:     TRISCbits.TRI
      +                          SC6 = 0;
  3350  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  3351  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  3352  07C3  1307               	bcf	7,6	;volatile
  3353                           
  3354                           ;main.c: 360:     TXSTAbits.TXEN = 1;
  3355  07C4  1698               	bsf	24,5	;volatile
  3356                           
  3357                           ;main.c: 361:     RCSTAbits.SPEN = 1;
  3358  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  3359  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  3360  07C7  1798               	bsf	24,7	;volatile
  3361                           
  3362                           ;main.c: 362:     RCSTAbits.CREN = 1;
  3363  07C8  1618               	bsf	24,4	;volatile
  3364  07C9                     l2918:	
  3365                           
  3366                           ;main.c: 363:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3367  07C9  0833               	movf	UART_Init@baudrate,w
  3368  07CA  00B5               	movwf	??_UART_Init
  3369  07CB  0834               	movf	UART_Init@baudrate+1,w
  3370  07CC  00B6               	movwf	??_UART_Init+1
  3371  07CD  3000               	movlw	0
  3372  07CE  1BB6               	btfsc	??_UART_Init+1,7
  3373  07CF  30FF               	movlw	255
  3374  07D0  00B7               	movwf	??_UART_Init+2
  3375  07D1  00B8               	movwf	??_UART_Init+3
  3376  07D2  3006               	movlw	6
  3377  07D3                     u2675:	
  3378  07D3  1003               	clrc
  3379  07D4  0DB5               	rlf	??_UART_Init,f
  3380  07D5  0DB6               	rlf	??_UART_Init+1,f
  3381  07D6  0DB7               	rlf	??_UART_Init+2,f
  3382  07D7  0DB8               	rlf	??_UART_Init+3,f
  3383  07D8                     u2670:	
  3384  07D8  3EFF               	addlw	-1
  3385  07D9  1D03               	skipz
  3386  07DA  2FD3               	goto	u2675
  3387  07DB  0838               	movf	??_UART_Init+3,w
  3388  07DC  00A7               	movwf	___aldiv@divisor+3
  3389  07DD  0837               	movf	??_UART_Init+2,w
  3390  07DE  00A6               	movwf	___aldiv@divisor+2
  3391  07DF  0836               	movf	??_UART_Init+1,w
  3392  07E0  00A5               	movwf	___aldiv@divisor+1
  3393  07E1  0835               	movf	??_UART_Init,w
  3394  07E2  00A4               	movwf	___aldiv@divisor
  3395  07E3  3001               	movlw	1
  3396  07E4  00AB               	movwf	___aldiv@dividend+3
  3397  07E5  30E8               	movlw	232
  3398  07E6  00AA               	movwf	___aldiv@dividend+2
  3399  07E7  3048               	movlw	72
  3400  07E8  00A9               	movwf	___aldiv@dividend+1
  3401  07E9  3000               	movlw	0
  3402  07EA  00A8               	movwf	___aldiv@dividend
  3403  07EB  120A  118A  258A  120A  118A  	fcall	___aldiv
  3404  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  3405  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  3406  07F2  0824               	movf	?___aldiv,w
  3407  07F3  3EFF               	addlw	255
  3408  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  3409  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  3410  07F6  0099               	movwf	25	;volatile
  3411  07F7                     l2920:	
  3412                           
  3413                           ;main.c: 364:     INTCONbits.GIE = 1;
  3414  07F7  178B               	bsf	11,7	;volatile
  3415  07F8                     l2922:	
  3416                           
  3417                           ;main.c: 365:     INTCONbits.PEIE = 1;
  3418  07F8  170B               	bsf	11,6	;volatile
  3419  07F9                     l2924:	
  3420                           
  3421                           ;main.c: 366:     PIE1bits.RCIE = 1;
  3422  07F9  168C               	bsf	12,5	;volatile
  3423  07FA                     l290:	
  3424  07FA  0008               	return
  3425  07FB                     __end_of_UART_Init:	
  3426                           
  3427                           	psect	text9
  3428  058A                     __ptext9:	
  3429 ;; *************** function ___aldiv *****************
  3430 ;; Defined at:
  3431 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  divisor         4    4[BANK0 ] long 
  3434 ;;  dividend        4    8[BANK0 ] long 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  quotient        4   15[BANK0 ] long 
  3437 ;;  sign            1   14[BANK0 ] unsigned char 
  3438 ;;  counter         1   13[BANK0 ] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  4    4[BANK0 ] long 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3448 ;;      Params:         0       8       0       0       0
  3449 ;;      Locals:         0       6       0       0       0
  3450 ;;      Temps:          0       1       0       0       0
  3451 ;;      Totals:         0      15       0       0       0
  3452 ;;Total ram usage:       15 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    3
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_UART_Init
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           
  3463                           ;psect for function ___aldiv
  3464  058A                     ___aldiv:	
  3465  058A                     l2690:	
  3466                           ;incstack = 0
  3467                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3468                           
  3469  058A  1283               	bcf	3,5	;RP0=0, select bank0
  3470  058B  1303               	bcf	3,6	;RP1=0, select bank0
  3471  058C  01AE               	clrf	___aldiv@sign
  3472  058D                     l2692:	
  3473  058D  1FA7               	btfss	___aldiv@divisor+3,7
  3474  058E  2D90               	goto	u2291
  3475  058F  2D91               	goto	u2290
  3476  0590                     u2291:	
  3477  0590  2D9E               	goto	l485
  3478  0591                     u2290:	
  3479  0591                     l2694:	
  3480  0591  09A4               	comf	___aldiv@divisor,f
  3481  0592  09A5               	comf	___aldiv@divisor+1,f
  3482  0593  09A6               	comf	___aldiv@divisor+2,f
  3483  0594  09A7               	comf	___aldiv@divisor+3,f
  3484  0595  0AA4               	incf	___aldiv@divisor,f
  3485  0596  1903               	skipnz
  3486  0597  0AA5               	incf	___aldiv@divisor+1,f
  3487  0598  1903               	skipnz
  3488  0599  0AA6               	incf	___aldiv@divisor+2,f
  3489  059A  1903               	skipnz
  3490  059B  0AA7               	incf	___aldiv@divisor+3,f
  3491  059C  01AE               	clrf	___aldiv@sign
  3492  059D  0AAE               	incf	___aldiv@sign,f
  3493  059E                     l485:	
  3494  059E  1FAB               	btfss	___aldiv@dividend+3,7
  3495  059F  2DA1               	goto	u2301
  3496  05A0  2DA2               	goto	u2300
  3497  05A1                     u2301:	
  3498  05A1  2DB1               	goto	l2700
  3499  05A2                     u2300:	
  3500  05A2                     l2696:	
  3501  05A2  09A8               	comf	___aldiv@dividend,f
  3502  05A3  09A9               	comf	___aldiv@dividend+1,f
  3503  05A4  09AA               	comf	___aldiv@dividend+2,f
  3504  05A5  09AB               	comf	___aldiv@dividend+3,f
  3505  05A6  0AA8               	incf	___aldiv@dividend,f
  3506  05A7  1903               	skipnz
  3507  05A8  0AA9               	incf	___aldiv@dividend+1,f
  3508  05A9  1903               	skipnz
  3509  05AA  0AAA               	incf	___aldiv@dividend+2,f
  3510  05AB  1903               	skipnz
  3511  05AC  0AAB               	incf	___aldiv@dividend+3,f
  3512  05AD                     l2698:	
  3513  05AD  3001               	movlw	1
  3514  05AE  00AC               	movwf	??___aldiv
  3515  05AF  082C               	movf	??___aldiv,w
  3516  05B0  06AE               	xorwf	___aldiv@sign,f
  3517  05B1                     l2700:	
  3518  05B1  3000               	movlw	0
  3519  05B2  00B2               	movwf	___aldiv@quotient+3
  3520  05B3  3000               	movlw	0
  3521  05B4  00B1               	movwf	___aldiv@quotient+2
  3522  05B5  3000               	movlw	0
  3523  05B6  00B0               	movwf	___aldiv@quotient+1
  3524  05B7  3000               	movlw	0
  3525  05B8  00AF               	movwf	___aldiv@quotient
  3526  05B9                     l2702:	
  3527  05B9  0827               	movf	___aldiv@divisor+3,w
  3528  05BA  0426               	iorwf	___aldiv@divisor+2,w
  3529  05BB  0425               	iorwf	___aldiv@divisor+1,w
  3530  05BC  0424               	iorwf	___aldiv@divisor,w
  3531  05BD  1903               	skipnz
  3532  05BE  2DC0               	goto	u2311
  3533  05BF  2DC1               	goto	u2310
  3534  05C0                     u2311:	
  3535  05C0  2E0E               	goto	l2722
  3536  05C1                     u2310:	
  3537  05C1                     l2704:	
  3538  05C1  01AD               	clrf	___aldiv@counter
  3539  05C2  0AAD               	incf	___aldiv@counter,f
  3540  05C3  2DD1               	goto	l2708
  3541  05C4                     l2706:	
  3542  05C4  3001               	movlw	1
  3543  05C5  00AC               	movwf	??___aldiv
  3544  05C6                     u2325:	
  3545  05C6  1003               	clrc
  3546  05C7  0DA4               	rlf	___aldiv@divisor,f
  3547  05C8  0DA5               	rlf	___aldiv@divisor+1,f
  3548  05C9  0DA6               	rlf	___aldiv@divisor+2,f
  3549  05CA  0DA7               	rlf	___aldiv@divisor+3,f
  3550  05CB  0BAC               	decfsz	??___aldiv,f
  3551  05CC  2DC6               	goto	u2325
  3552  05CD  3001               	movlw	1
  3553  05CE  00AC               	movwf	??___aldiv
  3554  05CF  082C               	movf	??___aldiv,w
  3555  05D0  07AD               	addwf	___aldiv@counter,f
  3556  05D1                     l2708:	
  3557  05D1  1FA7               	btfss	___aldiv@divisor+3,7
  3558  05D2  2DD4               	goto	u2331
  3559  05D3  2DD5               	goto	u2330
  3560  05D4                     u2331:	
  3561  05D4  2DC4               	goto	l2706
  3562  05D5                     u2330:	
  3563  05D5                     l2710:	
  3564  05D5  3001               	movlw	1
  3565  05D6  00AC               	movwf	??___aldiv
  3566  05D7                     u2345:	
  3567  05D7  1003               	clrc
  3568  05D8  0DAF               	rlf	___aldiv@quotient,f
  3569  05D9  0DB0               	rlf	___aldiv@quotient+1,f
  3570  05DA  0DB1               	rlf	___aldiv@quotient+2,f
  3571  05DB  0DB2               	rlf	___aldiv@quotient+3,f
  3572  05DC  0BAC               	decfsz	??___aldiv,f
  3573  05DD  2DD7               	goto	u2345
  3574  05DE                     l2712:	
  3575  05DE  0827               	movf	___aldiv@divisor+3,w
  3576  05DF  022B               	subwf	___aldiv@dividend+3,w
  3577  05E0  1D03               	skipz
  3578  05E1  2DEC               	goto	u2355
  3579  05E2  0826               	movf	___aldiv@divisor+2,w
  3580  05E3  022A               	subwf	___aldiv@dividend+2,w
  3581  05E4  1D03               	skipz
  3582  05E5  2DEC               	goto	u2355
  3583  05E6  0825               	movf	___aldiv@divisor+1,w
  3584  05E7  0229               	subwf	___aldiv@dividend+1,w
  3585  05E8  1D03               	skipz
  3586  05E9  2DEC               	goto	u2355
  3587  05EA  0824               	movf	___aldiv@divisor,w
  3588  05EB  0228               	subwf	___aldiv@dividend,w
  3589  05EC                     u2355:	
  3590  05EC  1C03               	skipc
  3591  05ED  2DEF               	goto	u2351
  3592  05EE  2DF0               	goto	u2350
  3593  05EF                     u2351:	
  3594  05EF  2DFF               	goto	l2718
  3595  05F0                     u2350:	
  3596  05F0                     l2714:	
  3597  05F0  0824               	movf	___aldiv@divisor,w
  3598  05F1  02A8               	subwf	___aldiv@dividend,f
  3599  05F2  0825               	movf	___aldiv@divisor+1,w
  3600  05F3  1C03               	skipc
  3601  05F4  0F25               	incfsz	___aldiv@divisor+1,w
  3602  05F5  02A9               	subwf	___aldiv@dividend+1,f
  3603  05F6  0826               	movf	___aldiv@divisor+2,w
  3604  05F7  1C03               	skipc
  3605  05F8  0F26               	incfsz	___aldiv@divisor+2,w
  3606  05F9  02AA               	subwf	___aldiv@dividend+2,f
  3607  05FA  0827               	movf	___aldiv@divisor+3,w
  3608  05FB  1C03               	skipc
  3609  05FC  0F27               	incfsz	___aldiv@divisor+3,w
  3610  05FD  02AB               	subwf	___aldiv@dividend+3,f
  3611  05FE                     l2716:	
  3612  05FE  142F               	bsf	___aldiv@quotient,0
  3613  05FF                     l2718:	
  3614  05FF  3001               	movlw	1
  3615  0600                     u2365:	
  3616  0600  1003               	clrc
  3617  0601  0CA7               	rrf	___aldiv@divisor+3,f
  3618  0602  0CA6               	rrf	___aldiv@divisor+2,f
  3619  0603  0CA5               	rrf	___aldiv@divisor+1,f
  3620  0604  0CA4               	rrf	___aldiv@divisor,f
  3621  0605  3EFF               	addlw	-1
  3622  0606  1D03               	skipz
  3623  0607  2E00               	goto	u2365
  3624  0608                     l2720:	
  3625  0608  3001               	movlw	1
  3626  0609  02AD               	subwf	___aldiv@counter,f
  3627  060A  1D03               	btfss	3,2
  3628  060B  2E0D               	goto	u2371
  3629  060C  2E0E               	goto	u2370
  3630  060D                     u2371:	
  3631  060D  2DD5               	goto	l2710
  3632  060E                     u2370:	
  3633  060E                     l2722:	
  3634  060E  082E               	movf	___aldiv@sign,w
  3635  060F  1903               	btfsc	3,2
  3636  0610  2E12               	goto	u2381
  3637  0611  2E13               	goto	u2380
  3638  0612                     u2381:	
  3639  0612  2E1E               	goto	l2726
  3640  0613                     u2380:	
  3641  0613                     l2724:	
  3642  0613  09AF               	comf	___aldiv@quotient,f
  3643  0614  09B0               	comf	___aldiv@quotient+1,f
  3644  0615  09B1               	comf	___aldiv@quotient+2,f
  3645  0616  09B2               	comf	___aldiv@quotient+3,f
  3646  0617  0AAF               	incf	___aldiv@quotient,f
  3647  0618  1903               	skipnz
  3648  0619  0AB0               	incf	___aldiv@quotient+1,f
  3649  061A  1903               	skipnz
  3650  061B  0AB1               	incf	___aldiv@quotient+2,f
  3651  061C  1903               	skipnz
  3652  061D  0AB2               	incf	___aldiv@quotient+3,f
  3653  061E                     l2726:	
  3654  061E  0832               	movf	___aldiv@quotient+3,w
  3655  061F  00A7               	movwf	?___aldiv+3
  3656  0620  0831               	movf	___aldiv@quotient+2,w
  3657  0621  00A6               	movwf	?___aldiv+2
  3658  0622  0830               	movf	___aldiv@quotient+1,w
  3659  0623  00A5               	movwf	?___aldiv+1
  3660  0624  082F               	movf	___aldiv@quotient,w
  3661  0625  00A4               	movwf	?___aldiv
  3662  0626                     l495:	
  3663  0626  0008               	return
  3664  0627                     __end_of___aldiv:	
  3665                           
  3666                           	psect	text10
  3667  0753                     __ptext10:	
  3668 ;; *************** function _SetReceivedTimes *****************
  3669 ;; Defined at:
  3670 ;;		line 73 in file "./CustomLib/TrafficLight.h"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  3673 ;;		 -> dataFromGateway(15), 
  3674 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  3675 ;;		 -> Semafori(16), 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  _dataFromGat    1   23[BANK0 ] PTR unsigned char 
  3678 ;;		 -> dataFromGateway(15), 
  3679 ;;  index           1   24[BANK0 ] unsigned char 
  3680 ;;  colorId         1   22[BANK0 ] unsigned char 
  3681 ;;  semaforoId      1   21[BANK0 ] unsigned char 
  3682 ;;  i               1   25[BANK0 ] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       1       0       0       0
  3693 ;;      Locals:         0       5       0       0       0
  3694 ;;      Temps:          0       8       0       0       0
  3695 ;;      Totals:         0      14       0       0       0
  3696 ;;Total ram usage:       14 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    4
  3699 ;; This function calls:
  3700 ;;		_GetTime
  3701 ;;		___bmul
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _SetReceivedTimes
  3709  0753                     _SetReceivedTimes:	
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3713                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  3714  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0754  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0755  00B7               	movwf	SetReceivedTimes@_dataFromGateway
  3717  0756                     l2890:	
  3718                           
  3719                           ;./CustomLib/TrafficLight.h: 73: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 74: {;./CustomLib/TrafficLight.h: 75:   
      +                                        for (unsigned char i = 0; i < 3; i++)
  3720  0756  01B9               	clrf	SetReceivedTimes@i
  3721  0757                     l2892:	
  3722  0757  3003               	movlw	3
  3723  0758  0239               	subwf	SetReceivedTimes@i,w
  3724  0759  1C03               	skipc
  3725  075A  2F5C               	goto	u2651
  3726  075B  2F5D               	goto	u2650
  3727  075C                     u2651:	
  3728  075C  2F5E               	goto	l2896
  3729  075D                     u2650:	
  3730  075D  2FC0               	goto	l162
  3731  075E                     l2896:	
  3732                           
  3733                           ;./CustomLib/TrafficLight.h: 76:                 {;./CustomLib/TrafficLight.h: 77:      
      +                                         unsigned char index = i * 5;
  3734  075E  3005               	movlw	5
  3735  075F  00AD               	movwf	??_SetReceivedTimes
  3736  0760  082D               	movf	??_SetReceivedTimes,w
  3737  0761  00A4               	movwf	___bmul@multiplicand
  3738  0762  0839               	movf	SetReceivedTimes@i,w
  3739  0763  120A  158A  2477  120A  118A  	fcall	___bmul
  3740  0768  1283               	bcf	3,5	;RP0=0, select bank0
  3741  0769  1303               	bcf	3,6	;RP1=0, select bank0
  3742  076A  00AE               	movwf	??_SetReceivedTimes+1
  3743  076B  082E               	movf	??_SetReceivedTimes+1,w
  3744  076C  00B8               	movwf	SetReceivedTimes@index
  3745  076D                     l2898:	
  3746                           
  3747                           ;./CustomLib/TrafficLight.h: 78:                     unsigned char semaforoId = (_dataFr
      +                          omGateway[index] >> 1) & 0x0F;
  3748  076D  0838               	movf	SetReceivedTimes@index,w
  3749  076E  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  3750  076F  00AD               	movwf	??_SetReceivedTimes
  3751  0770  082D               	movf	??_SetReceivedTimes,w
  3752  0771  0084               	movwf	4
  3753  0772  1383               	bcf	3,7	;select IRP bank0
  3754  0773  0800               	movf	0,w
  3755  0774  00AE               	movwf	??_SetReceivedTimes+1
  3756  0775  1003               	clrc
  3757  0776  0C2E               	rrf	??_SetReceivedTimes+1,w
  3758  0777  390F               	andlw	15
  3759  0778  00AF               	movwf	??_SetReceivedTimes+2
  3760  0779  082F               	movf	??_SetReceivedTimes+2,w
  3761  077A  00B5               	movwf	SetReceivedTimes@semaforoId
  3762  077B                     l2900:	
  3763                           
  3764                           ;./CustomLib/TrafficLight.h: 79:                     unsigned char colorId = ((_dataFrom
      +                          Gateway[index] >> 5) & 0x03) - 1;
  3765  077B  0838               	movf	SetReceivedTimes@index,w
  3766  077C  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  3767  077D  00AD               	movwf	??_SetReceivedTimes
  3768  077E  082D               	movf	??_SetReceivedTimes,w
  3769  077F  0084               	movwf	4
  3770  0780  0800               	movf	0,w
  3771  0781  00AE               	movwf	??_SetReceivedTimes+1
  3772  0782  3005               	movlw	5
  3773  0783                     u2665:	
  3774  0783  1003               	clrc
  3775  0784  0CAE               	rrf	??_SetReceivedTimes+1,f
  3776  0785  3EFF               	addlw	-1
  3777  0786  1D03               	skipz
  3778  0787  2F83               	goto	u2665
  3779  0788  082E               	movf	??_SetReceivedTimes+1,w
  3780  0789  3903               	andlw	3
  3781  078A  3EFF               	addlw	255
  3782  078B  00AF               	movwf	??_SetReceivedTimes+2
  3783  078C  082F               	movf	??_SetReceivedTimes+2,w
  3784  078D  00B6               	movwf	SetReceivedTimes@colorId
  3785  078E                     l2902:	
  3786                           
  3787                           ;./CustomLib/TrafficLight.h: 81:                     (*(_semafori)[semaforoId]).new_time
      +                          s[colorId]=GetTime(index, _dataFromGateway);
  3788  078E  0837               	movf	SetReceivedTimes@_dataFromGateway,w
  3789  078F  00AD               	movwf	??_SetReceivedTimes
  3790  0790  082D               	movf	??_SetReceivedTimes,w
  3791  0791  00A4               	movwf	GetTime@_dataFromGateway
  3792  0792  0838               	movf	SetReceivedTimes@index,w
  3793  0793  120A  158A  2541  120A  118A  	fcall	_GetTime
  3794  0798  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0799  1303               	bcf	3,6	;RP1=0, select bank0
  3796  079A  0835               	movf	SetReceivedTimes@semaforoId,w
  3797  079B  00AE               	movwf	??_SetReceivedTimes+1
  3798  079C  072E               	addwf	??_SetReceivedTimes+1,w
  3799  079D  072C               	addwf	SetReceivedTimes@_semafori,w
  3800  079E  00AF               	movwf	??_SetReceivedTimes+2
  3801  079F  082F               	movf	??_SetReceivedTimes+2,w
  3802  07A0  0084               	movwf	4
  3803  07A1  1383               	bcf	3,7	;select IRP bank0
  3804  07A2  0800               	movf	0,w
  3805  07A3  00B0               	movwf	??_SetReceivedTimes+3
  3806  07A4  0A84               	incf	4,f
  3807  07A5  0800               	movf	0,w
  3808  07A6  00B1               	movwf	??_SetReceivedTimes+4
  3809  07A7  0836               	movf	SetReceivedTimes@colorId,w
  3810  07A8  00B2               	movwf	??_SetReceivedTimes+5
  3811  07A9  0732               	addwf	??_SetReceivedTimes+5,w
  3812  07AA  3E06               	addlw	6
  3813  07AB  0730               	addwf	??_SetReceivedTimes+3,w
  3814  07AC  00B3               	movwf	??_SetReceivedTimes+6
  3815  07AD  0831               	movf	??_SetReceivedTimes+4,w
  3816  07AE  1803               	skipnc
  3817  07AF  3E01               	addlw	1
  3818  07B0  00B4               	movwf	??_SetReceivedTimes+7
  3819  07B1  0833               	movf	??_SetReceivedTimes+6,w
  3820  07B2  0084               	movwf	4
  3821  07B3  1783               	bsf	3,7
  3822  07B4  1C34               	btfss	??_SetReceivedTimes+7,0
  3823  07B5  1383               	bcf	3,7
  3824  07B6  0824               	movf	?_GetTime,w
  3825  07B7  0080               	movwf	0
  3826  07B8  0A84               	incf	4,f
  3827  07B9  0825               	movf	?_GetTime+1,w
  3828  07BA  0080               	movwf	0
  3829  07BB                     l2904:	
  3830                           
  3831                           ;./CustomLib/TrafficLight.h: 82:                 }
  3832  07BB  3001               	movlw	1
  3833  07BC  00AD               	movwf	??_SetReceivedTimes
  3834  07BD  082D               	movf	??_SetReceivedTimes,w
  3835  07BE  07B9               	addwf	SetReceivedTimes@i,f
  3836  07BF  2F57               	goto	l2892
  3837  07C0                     l162:	
  3838  07C0  0008               	return
  3839  07C1                     __end_of_SetReceivedTimes:	
  3840                           
  3841                           	psect	text11
  3842  0C77                     __ptext11:	
  3843 ;; *************** function ___bmul *****************
  3844 ;; Defined at:
  3845 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  multiplier      1    wreg     unsigned char 
  3848 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  multiplier      1    7[BANK0 ] unsigned char 
  3851 ;;  product         1    6[BANK0 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      unsigned char 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       1       0       0       0
  3862 ;;      Locals:         0       2       0       0       0
  3863 ;;      Temps:          0       1       0       0       0
  3864 ;;      Totals:         0       4       0       0       0
  3865 ;;Total ram usage:        4 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    3
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_SetReceivedTimes
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function ___bmul
  3877  0C77                     ___bmul:	
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3881                           ;___bmul@multiplier stored from wreg
  3882  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0C78  1303               	bcf	3,6	;RP1=0, select bank0
  3884  0C79  00A7               	movwf	___bmul@multiplier
  3885  0C7A                     l2676:	
  3886  0C7A  01A6               	clrf	___bmul@product
  3887  0C7B                     l2678:	
  3888  0C7B  1C27               	btfss	___bmul@multiplier,0
  3889  0C7C  2C7E               	goto	u2271
  3890  0C7D  2C7F               	goto	u2270
  3891  0C7E                     u2271:	
  3892  0C7E  2C83               	goto	l2682
  3893  0C7F                     u2270:	
  3894  0C7F                     l2680:	
  3895  0C7F  0824               	movf	___bmul@multiplicand,w
  3896  0C80  00A5               	movwf	??___bmul
  3897  0C81  0825               	movf	??___bmul,w
  3898  0C82  07A6               	addwf	___bmul@product,f
  3899  0C83                     l2682:	
  3900  0C83  1003               	clrc
  3901  0C84  0DA4               	rlf	___bmul@multiplicand,f
  3902  0C85                     l2684:	
  3903  0C85  1003               	clrc
  3904  0C86  0CA7               	rrf	___bmul@multiplier,f
  3905  0C87  0827               	movf	___bmul@multiplier,w
  3906  0C88  1D03               	btfss	3,2
  3907  0C89  2C8B               	goto	u2281
  3908  0C8A  2C8C               	goto	u2280
  3909  0C8B                     u2281:	
  3910  0C8B  2C7B               	goto	l2678
  3911  0C8C                     u2280:	
  3912  0C8C                     l2686:	
  3913  0C8C  0826               	movf	___bmul@product,w
  3914  0C8D                     l446:	
  3915  0C8D  0008               	return
  3916  0C8E                     __end_of___bmul:	
  3917                           
  3918                           	psect	text12
  3919  0D41                     __ptext12:	
  3920 ;; *************** function _GetTime *****************
  3921 ;; Defined at:
  3922 ;;		line 29 in file "./CustomLib/TrafficLight.h"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  index           1    wreg     unsigned char 
  3925 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  3926 ;;		 -> dataFromGateway(15), 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  index           1    8[BANK0 ] unsigned char 
  3929 ;;  tmp             2   10[BANK0 ] int 
  3930 ;;  shortInt        1    9[BANK0 ] struct .
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  2    4[BANK0 ] int 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       2       0       0       0
  3941 ;;      Locals:         0       4       0       0       0
  3942 ;;      Temps:          0       2       0       0       0
  3943 ;;      Totals:         0       8       0       0       0
  3944 ;;Total ram usage:        8 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    3
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_SetReceivedTimes
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function _GetTime
  3956  0D41                     _GetTime:	
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  3960                           ;GetTime@index stored from wreg
  3961  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  3963  0D43  00A8               	movwf	GetTime@index
  3964  0D44                     l2644:	
  3965                           
  3966                           ;./CustomLib/TrafficLight.h: 29: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 30: {;./CustomLib/TrafficLight.h: 31:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 35:     } shortInt;;./CustomLib/TrafficLight.h: 37:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  3967  0D44  0828               	movf	GetTime@index,w
  3968  0D45  0724               	addwf	GetTime@_dataFromGateway,w
  3969  0D46  00A6               	movwf	??_GetTime
  3970  0D47  0826               	movf	??_GetTime,w
  3971  0D48  3E03               	addlw	3
  3972  0D49  0084               	movwf	4
  3973  0D4A  307F               	movlw	127
  3974  0D4B  1383               	bcf	3,7	;select IRP bank0
  3975  0D4C  0500               	andwf	0,w
  3976  0D4D  00A7               	movwf	??_GetTime+1
  3977  0D4E  0829               	movf	GetTime@shortInt,w
  3978  0D4F  0627               	xorwf	??_GetTime+1,w
  3979  0D50  3980               	andlw	-128
  3980  0D51  0627               	xorwf	??_GetTime+1,w
  3981  0D52  00A9               	movwf	GetTime@shortInt
  3982  0D53                     l2646:	
  3983                           
  3984                           ;./CustomLib/TrafficLight.h: 38:     tmp = shortInt.Val;
  3985  0D53  0829               	movf	GetTime@shortInt,w
  3986  0D54  397F               	andlw	127
  3987  0D55  00A6               	movwf	??_GetTime
  3988  0D56  01A7               	clrf	??_GetTime+1
  3989  0D57  0826               	movf	??_GetTime,w
  3990  0D58  00AA               	movwf	GetTime@tmp
  3991  0D59  0827               	movf	??_GetTime+1,w
  3992  0D5A  00AB               	movwf	GetTime@tmp+1
  3993  0D5B                     l2648:	
  3994                           
  3995                           ;./CustomLib/TrafficLight.h: 39:     tmp = (tmp << 7) & 0x80;
  3996  0D5B  082B               	movf	GetTime@tmp+1,w
  3997  0D5C  00A7               	movwf	??_GetTime+1
  3998  0D5D  082A               	movf	GetTime@tmp,w
  3999  0D5E  00A6               	movwf	??_GetTime
  4000  0D5F  3007               	movlw	7
  4001  0D60  00FF               	movwf	btemp+1
  4002  0D61                     u2215:	
  4003  0D61  1003               	clrc
  4004  0D62  0DA6               	rlf	??_GetTime,f
  4005  0D63  0DA7               	rlf	??_GetTime+1,f
  4006  0D64  0BFF               	decfsz	btemp+1,f
  4007  0D65  2D61               	goto	u2215
  4008  0D66  3080               	movlw	128
  4009  0D67  0526               	andwf	??_GetTime,w
  4010  0D68  00AA               	movwf	GetTime@tmp
  4011  0D69  3000               	movlw	0
  4012  0D6A  0527               	andwf	??_GetTime+1,w
  4013  0D6B  00AB               	movwf	GetTime@tmp+1
  4014  0D6C                     l2650:	
  4015                           
  4016                           ;./CustomLib/TrafficLight.h: 41:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4017  0D6C  0828               	movf	GetTime@index,w
  4018  0D6D  0724               	addwf	GetTime@_dataFromGateway,w
  4019  0D6E  00A6               	movwf	??_GetTime
  4020  0D6F  0826               	movf	??_GetTime,w
  4021  0D70  3E02               	addlw	2
  4022  0D71  0084               	movwf	4
  4023  0D72  307F               	movlw	127
  4024  0D73  0500               	andwf	0,w
  4025  0D74  00A7               	movwf	??_GetTime+1
  4026  0D75  0829               	movf	GetTime@shortInt,w
  4027  0D76  0627               	xorwf	??_GetTime+1,w
  4028  0D77  3980               	andlw	-128
  4029  0D78  0627               	xorwf	??_GetTime+1,w
  4030  0D79  00A9               	movwf	GetTime@shortInt
  4031  0D7A                     l2652:	
  4032                           
  4033                           ;./CustomLib/TrafficLight.h: 42:     tmp = tmp | shortInt.Val;
  4034  0D7A  0829               	movf	GetTime@shortInt,w
  4035  0D7B  397F               	andlw	127
  4036  0D7C  00A6               	movwf	??_GetTime
  4037  0D7D  082A               	movf	GetTime@tmp,w
  4038  0D7E  0426               	iorwf	??_GetTime,w
  4039  0D7F  00AA               	movwf	GetTime@tmp
  4040  0D80  082B               	movf	GetTime@tmp+1,w
  4041  0D81  00AB               	movwf	GetTime@tmp+1
  4042  0D82                     l2654:	
  4043                           
  4044                           ;./CustomLib/TrafficLight.h: 44:     return tmp;
  4045  0D82  082B               	movf	GetTime@tmp+1,w
  4046  0D83  00A5               	movwf	?_GetTime+1
  4047  0D84  082A               	movf	GetTime@tmp,w
  4048  0D85  00A4               	movwf	?_GetTime
  4049  0D86                     l145:	
  4050  0D86  0008               	return
  4051  0D87                     __end_of_GetTime:	
  4052                           
  4053                           	psect	text13
  4054  0C62                     __ptext13:	
  4055 ;; *************** function _SetDisplay *****************
  4056 ;; Defined at:
  4057 ;;		line 406 in file "main.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  d1              1    wreg     unsigned char 
  4060 ;;  d2              1    4[BANK0 ] unsigned char 
  4061 ;;  d3              1    5[BANK0 ] unsigned char 
  4062 ;;  value           1    6[BANK0 ] unsigned char 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  d1              1    7[BANK0 ] unsigned char 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      void 
  4067 ;; Registers used:
  4068 ;;		wreg, status,0
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4074 ;;      Params:         0       3       0       0       0
  4075 ;;      Locals:         0       1       0       0       0
  4076 ;;      Temps:          0       0       0       0       0
  4077 ;;      Totals:         0       4       0       0       0
  4078 ;;Total ram usage:        4 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    3
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_main
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           
  4089                           ;psect for function _SetDisplay
  4090  0C62                     _SetDisplay:	
  4091                           
  4092                           ;incstack = 0
  4093                           ; Regs used in _SetDisplay: [wreg+status,0]
  4094                           ;SetDisplay@d1 stored from wreg
  4095  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  4096  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  4097  0C64  00A7               	movwf	SetDisplay@d1
  4098  0C65                     l2952:	
  4099                           
  4100                           ;main.c: 406: void SetDisplay(char d1, char d2, char d3, char value);main.c: 407: {;main
      +                          .c: 408:     PORTAbits.RA2 = d1;
  4101  0C65  0C27               	rrf	SetDisplay@d1,w
  4102  0C66  1C03               	skipc
  4103  0C67  1105               	bcf	5,2	;volatile
  4104  0C68  1803               	skipnc
  4105  0C69  1505               	bsf	5,2	;volatile
  4106                           
  4107                           ;main.c: 409:     PORTAbits.RA3 = d2;
  4108  0C6A  0C24               	rrf	SetDisplay@d2,w
  4109  0C6B  1C03               	skipc
  4110  0C6C  1185               	bcf	5,3	;volatile
  4111  0C6D  1803               	skipnc
  4112  0C6E  1585               	bsf	5,3	;volatile
  4113                           
  4114                           ;main.c: 410:     PORTAbits.RA4 = d3;
  4115  0C6F  0C25               	rrf	SetDisplay@d3,w
  4116  0C70  1C03               	skipc
  4117  0C71  1205               	bcf	5,4	;volatile
  4118  0C72  1803               	skipnc
  4119  0C73  1605               	bsf	5,4	;volatile
  4120  0C74                     l2954:	
  4121                           
  4122                           ;main.c: 411:     PORTD = value;
  4123  0C74  0826               	movf	SetDisplay@value,w
  4124  0C75  0088               	movwf	8	;volatile
  4125  0C76                     l316:	
  4126  0C76  0008               	return
  4127  0C77                     __end_of_SetDisplay:	
  4128                           
  4129                           	psect	text14
  4130  06C3                     __ptext14:	
  4131 ;; *************** function _SetDefaultTimers *****************
  4132 ;; Defined at:
  4133 ;;		line 49 in file "./CustomLib/TrafficLight.h"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  rosso           2    4[BANK0 ] int 
  4136 ;;  verde           2    6[BANK0 ] int 
  4137 ;;  giallo          2    8[BANK0 ] int 
  4138 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4139 ;;		 -> Semafori(16), 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  i               1   19[BANK0 ] unsigned char 
  4142 ;;  l               1   18[BANK0 ] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       7       0       0       0
  4153 ;;      Locals:         0       2       0       0       0
  4154 ;;      Temps:          0       7       0       0       0
  4155 ;;      Totals:         0      16       0       0       0
  4156 ;;Total ram usage:       16 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    3
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _SetDefaultTimers
  4168  06C3                     _SetDefaultTimers:	
  4169  06C3                     l2856:	
  4170                           ;incstack = 0
  4171                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4172                           
  4173                           
  4174                           ;./CustomLib/TrafficLight.h: 49: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 50: {;./CustomLib/TrafficLight.h: 51: 
      +                              for (unsigned char l = 0; l < 16; l++)
  4175  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  4176  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  4177  06C5  01B2               	clrf	SetDefaultTimers@l
  4178  06C6                     l2862:	
  4179                           
  4180                           ;./CustomLib/TrafficLight.h: 52:     {;./CustomLib/TrafficLight.h: 53:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4181  06C6  01B3               	clrf	SetDefaultTimers@i
  4182  06C7  2F2B               	goto	l2876
  4183  06C8                     l2868:	
  4184                           
  4185                           ;./CustomLib/TrafficLight.h: 58:                 (*(_semafori)[l]).times[i] = rosso;
  4186  06C8  0832               	movf	SetDefaultTimers@l,w
  4187  06C9  00AB               	movwf	??_SetDefaultTimers
  4188  06CA  072B               	addwf	??_SetDefaultTimers,w
  4189  06CB  072A               	addwf	SetDefaultTimers@_semafori,w
  4190  06CC  00AC               	movwf	??_SetDefaultTimers+1
  4191  06CD  082C               	movf	??_SetDefaultTimers+1,w
  4192  06CE  0084               	movwf	4
  4193  06CF  1383               	bcf	3,7	;select IRP bank0
  4194  06D0  0800               	movf	0,w
  4195  06D1  00AD               	movwf	??_SetDefaultTimers+2
  4196  06D2  0A84               	incf	4,f
  4197  06D3  0800               	movf	0,w
  4198  06D4  00AE               	movwf	??_SetDefaultTimers+3
  4199  06D5  0833               	movf	SetDefaultTimers@i,w
  4200  06D6  00AF               	movwf	??_SetDefaultTimers+4
  4201  06D7  072F               	addwf	??_SetDefaultTimers+4,w
  4202  06D8  072D               	addwf	??_SetDefaultTimers+2,w
  4203  06D9  00B0               	movwf	??_SetDefaultTimers+5
  4204  06DA  082E               	movf	??_SetDefaultTimers+3,w
  4205  06DB  1803               	skipnc
  4206  06DC  3E01               	addlw	1
  4207  06DD  00B1               	movwf	??_SetDefaultTimers+6
  4208  06DE  0830               	movf	??_SetDefaultTimers+5,w
  4209  06DF  0084               	movwf	4
  4210  06E0  1783               	bsf	3,7
  4211  06E1  1C31               	btfss	??_SetDefaultTimers+6,0
  4212  06E2  1383               	bcf	3,7
  4213  06E3  0824               	movf	SetDefaultTimers@rosso,w
  4214  06E4  0080               	movwf	0
  4215  06E5  0A84               	incf	4,f
  4216  06E6  0825               	movf	SetDefaultTimers@rosso+1,w
  4217  06E7  0080               	movwf	0
  4218                           
  4219                           ;./CustomLib/TrafficLight.h: 59:                 break;
  4220  06E8  2F3E               	goto	l2878
  4221  06E9                     l2870:	
  4222                           
  4223                           ;./CustomLib/TrafficLight.h: 61:                 (*(_semafori)[l]).times[i] = verde;
  4224  06E9  0832               	movf	SetDefaultTimers@l,w
  4225  06EA  00AB               	movwf	??_SetDefaultTimers
  4226  06EB  072B               	addwf	??_SetDefaultTimers,w
  4227  06EC  072A               	addwf	SetDefaultTimers@_semafori,w
  4228  06ED  00AC               	movwf	??_SetDefaultTimers+1
  4229  06EE  082C               	movf	??_SetDefaultTimers+1,w
  4230  06EF  0084               	movwf	4
  4231  06F0  1383               	bcf	3,7	;select IRP bank0
  4232  06F1  0800               	movf	0,w
  4233  06F2  00AD               	movwf	??_SetDefaultTimers+2
  4234  06F3  0A84               	incf	4,f
  4235  06F4  0800               	movf	0,w
  4236  06F5  00AE               	movwf	??_SetDefaultTimers+3
  4237  06F6  0833               	movf	SetDefaultTimers@i,w
  4238  06F7  00AF               	movwf	??_SetDefaultTimers+4
  4239  06F8  072F               	addwf	??_SetDefaultTimers+4,w
  4240  06F9  072D               	addwf	??_SetDefaultTimers+2,w
  4241  06FA  00B0               	movwf	??_SetDefaultTimers+5
  4242  06FB  082E               	movf	??_SetDefaultTimers+3,w
  4243  06FC  1803               	skipnc
  4244  06FD  3E01               	addlw	1
  4245  06FE  00B1               	movwf	??_SetDefaultTimers+6
  4246  06FF  0830               	movf	??_SetDefaultTimers+5,w
  4247  0700  0084               	movwf	4
  4248  0701  1783               	bsf	3,7
  4249  0702  1C31               	btfss	??_SetDefaultTimers+6,0
  4250  0703  1383               	bcf	3,7
  4251  0704  0826               	movf	SetDefaultTimers@verde,w
  4252  0705  0080               	movwf	0
  4253  0706  0A84               	incf	4,f
  4254  0707  0827               	movf	SetDefaultTimers@verde+1,w
  4255  0708  0080               	movwf	0
  4256                           
  4257                           ;./CustomLib/TrafficLight.h: 62:                 break;
  4258  0709  2F3E               	goto	l2878
  4259  070A                     l2872:	
  4260                           
  4261                           ;./CustomLib/TrafficLight.h: 64:                 (*(_semafori)[l]).times[i] = giallo;
  4262  070A  0832               	movf	SetDefaultTimers@l,w
  4263  070B  00AB               	movwf	??_SetDefaultTimers
  4264  070C  072B               	addwf	??_SetDefaultTimers,w
  4265  070D  072A               	addwf	SetDefaultTimers@_semafori,w
  4266  070E  00AC               	movwf	??_SetDefaultTimers+1
  4267  070F  082C               	movf	??_SetDefaultTimers+1,w
  4268  0710  0084               	movwf	4
  4269  0711  1383               	bcf	3,7	;select IRP bank0
  4270  0712  0800               	movf	0,w
  4271  0713  00AD               	movwf	??_SetDefaultTimers+2
  4272  0714  0A84               	incf	4,f
  4273  0715  0800               	movf	0,w
  4274  0716  00AE               	movwf	??_SetDefaultTimers+3
  4275  0717  0833               	movf	SetDefaultTimers@i,w
  4276  0718  00AF               	movwf	??_SetDefaultTimers+4
  4277  0719  072F               	addwf	??_SetDefaultTimers+4,w
  4278  071A  072D               	addwf	??_SetDefaultTimers+2,w
  4279  071B  00B0               	movwf	??_SetDefaultTimers+5
  4280  071C  082E               	movf	??_SetDefaultTimers+3,w
  4281  071D  1803               	skipnc
  4282  071E  3E01               	addlw	1
  4283  071F  00B1               	movwf	??_SetDefaultTimers+6
  4284  0720  0830               	movf	??_SetDefaultTimers+5,w
  4285  0721  0084               	movwf	4
  4286  0722  1783               	bsf	3,7
  4287  0723  1C31               	btfss	??_SetDefaultTimers+6,0
  4288  0724  1383               	bcf	3,7
  4289  0725  0828               	movf	SetDefaultTimers@giallo,w
  4290  0726  0080               	movwf	0
  4291  0727  0A84               	incf	4,f
  4292  0728  0829               	movf	SetDefaultTimers@giallo+1,w
  4293  0729  0080               	movwf	0
  4294                           
  4295                           ;./CustomLib/TrafficLight.h: 65:                 break;
  4296  072A  2F3E               	goto	l2878
  4297  072B                     l2876:	
  4298  072B  0833               	movf	SetDefaultTimers@i,w
  4299  072C  00AB               	movwf	??_SetDefaultTimers
  4300  072D  01AC               	clrf	??_SetDefaultTimers+1
  4301                           
  4302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4303                           ; Switch size 1, requested type "simple"
  4304                           ; Number of cases is 1, Range of values is 0 to 0
  4305                           ; switch strategies available:
  4306                           ; Name         Instructions Cycles
  4307                           ; simple_byte            4     3 (average)
  4308                           ; direct_byte           11     8 (fixed)
  4309                           ; jumptable            260     6 (fixed)
  4310                           ;	Chosen strategy is simple_byte
  4311  072E  082C               	movf	??_SetDefaultTimers+1,w
  4312  072F  3A00               	xorlw	0	; case 0
  4313  0730  1903               	skipnz
  4314  0731  2F33               	goto	l3286
  4315  0732  2F3E               	goto	l2878
  4316  0733                     l3286:	
  4317                           
  4318                           ; Switch size 1, requested type "simple"
  4319                           ; Number of cases is 3, Range of values is 0 to 2
  4320                           ; switch strategies available:
  4321                           ; Name         Instructions Cycles
  4322                           ; simple_byte           10     6 (average)
  4323                           ; direct_byte           17     8 (fixed)
  4324                           ; jumptable            260     6 (fixed)
  4325                           ;	Chosen strategy is simple_byte
  4326  0733  082B               	movf	??_SetDefaultTimers,w
  4327  0734  3A00               	xorlw	0	; case 0
  4328  0735  1903               	skipnz
  4329  0736  2EC8               	goto	l2868
  4330  0737  3A01               	xorlw	1	; case 1
  4331  0738  1903               	skipnz
  4332  0739  2EE9               	goto	l2870
  4333  073A  3A03               	xorlw	3	; case 2
  4334  073B  1903               	skipnz
  4335  073C  2F0A               	goto	l2872
  4336  073D  2F3E               	goto	l2878
  4337  073E                     l2878:	
  4338                           
  4339                           ;./CustomLib/TrafficLight.h: 67:         }
  4340  073E  3001               	movlw	1
  4341  073F  00AB               	movwf	??_SetDefaultTimers
  4342  0740  082B               	movf	??_SetDefaultTimers,w
  4343  0741  07B3               	addwf	SetDefaultTimers@i,f
  4344  0742                     l2880:	
  4345  0742  3003               	movlw	3
  4346  0743  0233               	subwf	SetDefaultTimers@i,w
  4347  0744  1C03               	skipc
  4348  0745  2F47               	goto	u2631
  4349  0746  2F48               	goto	u2630
  4350  0747                     u2631:	
  4351  0747  2F2B               	goto	l2876
  4352  0748                     u2630:	
  4353  0748                     l2882:	
  4354                           
  4355                           ;./CustomLib/TrafficLight.h: 68:     }
  4356  0748  3001               	movlw	1
  4357  0749  00AB               	movwf	??_SetDefaultTimers
  4358  074A  082B               	movf	??_SetDefaultTimers,w
  4359  074B  07B2               	addwf	SetDefaultTimers@l,f
  4360  074C                     l2884:	
  4361  074C  3010               	movlw	16
  4362  074D  0232               	subwf	SetDefaultTimers@l,w
  4363  074E  1C03               	skipc
  4364  074F  2F51               	goto	u2641
  4365  0750  2F52               	goto	u2640
  4366  0751                     u2641:	
  4367  0751  2EC6               	goto	l2862
  4368  0752                     u2640:	
  4369  0752                     l157:	
  4370  0752  0008               	return
  4371  0753                     __end_of_SetDefaultTimers:	
  4372                           
  4373                           	psect	text15
  4374  0627                     __ptext15:	
  4375 ;; *************** function _GetDigits *****************
  4376 ;; Defined at:
  4377 ;;		line 29 in file "./CustomLib/Conversions.h"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  centinaia       1    wreg     PTR unsigned char 
  4380 ;;		 -> centinaia(1), 
  4381 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  4382 ;;		 -> decine(1), 
  4383 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  4384 ;;		 -> unita(1), 
  4385 ;;  Time            2   22[BANK0 ] int 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  4388 ;;		 -> centinaia(1), 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4398 ;;      Params:         0       4       0       0       0
  4399 ;;      Locals:         0       3       0       0       0
  4400 ;;      Temps:          0       1       0       0       0
  4401 ;;      Totals:         0       8       0       0       0
  4402 ;;Total ram usage:        8 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    4
  4405 ;; This function calls:
  4406 ;;		___awdiv
  4407 ;;		___awmod
  4408 ;; This function is called by:
  4409 ;;		_main
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function _GetDigits
  4415  0627                     _GetDigits:	
  4416                           
  4417                           ;incstack = 0
  4418                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4419                           ;GetDigits@centinaia stored from wreg
  4420  0627  1283               	bcf	3,5	;RP0=0, select bank0
  4421  0628  1303               	bcf	3,6	;RP1=0, select bank0
  4422  0629  00BB               	movwf	GetDigits@centinaia
  4423  062A                     l2816:	
  4424                           
  4425                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     while(Time/1000>0)
  4426  062A  2E40               	goto	l2820
  4427  062B                     l2818:	
  4428                           
  4429                           ;./CustomLib/Conversions.h: 32:     {;./CustomLib/Conversions.h: 33:         Time=Time/1
      +                          0;
  4430  062B  300A               	movlw	10
  4431  062C  1283               	bcf	3,5	;RP0=0, select bank0
  4432  062D  1303               	bcf	3,6	;RP1=0, select bank0
  4433  062E  00AB               	movwf	___awdiv@divisor
  4434  062F  3000               	movlw	0
  4435  0630  00AC               	movwf	___awdiv@divisor+1
  4436  0631  0837               	movf	GetDigits@Time+1,w
  4437  0632  00AE               	movwf	___awdiv@dividend+1
  4438  0633  0836               	movf	GetDigits@Time,w
  4439  0634  00AD               	movwf	___awdiv@dividend
  4440  0635  120A  158A  2797  120A  118A  	fcall	___awdiv
  4441  063A  1283               	bcf	3,5	;RP0=0, select bank0
  4442  063B  1303               	bcf	3,6	;RP1=0, select bank0
  4443  063C  082C               	movf	?___awdiv+1,w
  4444  063D  00B7               	movwf	GetDigits@Time+1
  4445  063E  082B               	movf	?___awdiv,w
  4446  063F  00B6               	movwf	GetDigits@Time
  4447  0640                     l2820:	
  4448                           
  4449                           ;./CustomLib/Conversions.h: 31:     while(Time/1000>0)
  4450  0640  30E8               	movlw	232
  4451  0641  00AB               	movwf	___awdiv@divisor
  4452  0642  3003               	movlw	3
  4453  0643  00AC               	movwf	___awdiv@divisor+1
  4454  0644  0837               	movf	GetDigits@Time+1,w
  4455  0645  00AE               	movwf	___awdiv@dividend+1
  4456  0646  0836               	movf	GetDigits@Time,w
  4457  0647  00AD               	movwf	___awdiv@dividend
  4458  0648  120A  158A  2797  120A  118A  	fcall	___awdiv
  4459  064D  1283               	bcf	3,5	;RP0=0, select bank0
  4460  064E  1303               	bcf	3,6	;RP1=0, select bank0
  4461  064F  082C               	movf	?___awdiv+1,w
  4462  0650  3A80               	xorlw	128
  4463  0651  00FF               	movwf	btemp+1
  4464  0652  3080               	movlw	128
  4465  0653  027F               	subwf	btemp+1,w
  4466  0654  1D03               	skipz
  4467  0655  2E58               	goto	u2585
  4468  0656  3001               	movlw	1
  4469  0657  022B               	subwf	?___awdiv,w
  4470  0658                     u2585:	
  4471  0658  1803               	skipnc
  4472  0659  2E5B               	goto	u2581
  4473  065A  2E5C               	goto	u2580
  4474  065B                     u2581:	
  4475  065B  2E2B               	goto	l2818
  4476  065C                     u2580:	
  4477  065C                     l2822:	
  4478                           
  4479                           ;./CustomLib/Conversions.h: 36:     *centinaia = Time / 100;
  4480  065C  3064               	movlw	100
  4481  065D  1283               	bcf	3,5	;RP0=0, select bank0
  4482  065E  1303               	bcf	3,6	;RP1=0, select bank0
  4483  065F  00AB               	movwf	___awdiv@divisor
  4484  0660  3000               	movlw	0
  4485  0661  00AC               	movwf	___awdiv@divisor+1
  4486  0662  0837               	movf	GetDigits@Time+1,w
  4487  0663  00AE               	movwf	___awdiv@dividend+1
  4488  0664  0836               	movf	GetDigits@Time,w
  4489  0665  00AD               	movwf	___awdiv@dividend
  4490  0666  120A  158A  2797  120A  118A  	fcall	___awdiv
  4491  066B  1283               	bcf	3,5	;RP0=0, select bank0
  4492  066C  1303               	bcf	3,6	;RP1=0, select bank0
  4493  066D  082B               	movf	?___awdiv,w
  4494  066E  00B8               	movwf	??_GetDigits
  4495  066F  083B               	movf	GetDigits@centinaia,w
  4496  0670  0084               	movwf	4
  4497  0671  0838               	movf	??_GetDigits,w
  4498  0672  1383               	bcf	3,7	;select IRP bank0
  4499  0673  0080               	movwf	0
  4500                           
  4501                           ;./CustomLib/Conversions.h: 37:     *decine = (Time % 100) / 10;
  4502  0674  300A               	movlw	10
  4503  0675  00AB               	movwf	___awdiv@divisor
  4504  0676  3000               	movlw	0
  4505  0677  00AC               	movwf	___awdiv@divisor+1
  4506  0678  0837               	movf	GetDigits@Time+1,w
  4507  0679  00A7               	movwf	___awmod@dividend+1
  4508  067A  0836               	movf	GetDigits@Time,w
  4509  067B  00A6               	movwf	___awmod@dividend
  4510  067C  3064               	movlw	100
  4511  067D  00A4               	movwf	___awmod@divisor
  4512  067E  3000               	movlw	0
  4513  067F  00A5               	movwf	___awmod@divisor+1
  4514  0680  120A  158A  267C  120A  118A  	fcall	___awmod
  4515  0685  1283               	bcf	3,5	;RP0=0, select bank0
  4516  0686  1303               	bcf	3,6	;RP1=0, select bank0
  4517  0687  0825               	movf	?___awmod+1,w
  4518  0688  00AE               	movwf	___awdiv@dividend+1
  4519  0689  0824               	movf	?___awmod,w
  4520  068A  00AD               	movwf	___awdiv@dividend
  4521  068B  120A  158A  2797  120A  118A  	fcall	___awdiv
  4522  0690  1283               	bcf	3,5	;RP0=0, select bank0
  4523  0691  1303               	bcf	3,6	;RP1=0, select bank0
  4524  0692  082B               	movf	?___awdiv,w
  4525  0693  00B8               	movwf	??_GetDigits
  4526  0694  0834               	movf	GetDigits@decine,w
  4527  0695  0084               	movwf	4
  4528  0696  0838               	movf	??_GetDigits,w
  4529  0697  1383               	bcf	3,7	;select IRP bank0
  4530  0698  0080               	movwf	0
  4531  0699                     l2824:	
  4532                           
  4533                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4534  0699  0837               	movf	GetDigits@Time+1,w
  4535  069A  00A7               	movwf	___awmod@dividend+1
  4536  069B  0836               	movf	GetDigits@Time,w
  4537  069C  00A6               	movwf	___awmod@dividend
  4538  069D  3064               	movlw	100
  4539  069E  00A4               	movwf	___awmod@divisor
  4540  069F  3000               	movlw	0
  4541  06A0  00A5               	movwf	___awmod@divisor+1
  4542  06A1  120A  158A  267C  120A  118A  	fcall	___awmod
  4543  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  4544  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  4545  06A8  0825               	movf	?___awmod+1,w
  4546  06A9  00BA               	movwf	_GetDigits$1183+1
  4547  06AA  0824               	movf	?___awmod,w
  4548  06AB  00B9               	movwf	_GetDigits$1183
  4549  06AC                     l2826:	
  4550                           
  4551                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4552  06AC  300A               	movlw	10
  4553  06AD  00A4               	movwf	___awmod@divisor
  4554  06AE  3000               	movlw	0
  4555  06AF  00A5               	movwf	___awmod@divisor+1
  4556  06B0  083A               	movf	_GetDigits$1183+1,w
  4557  06B1  00A7               	movwf	___awmod@dividend+1
  4558  06B2  0839               	movf	_GetDigits$1183,w
  4559  06B3  00A6               	movwf	___awmod@dividend
  4560  06B4  120A  158A  267C  120A  118A  	fcall	___awmod
  4561  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  4562  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  4563  06BB  0824               	movf	?___awmod,w
  4564  06BC  00B8               	movwf	??_GetDigits
  4565  06BD  0835               	movf	GetDigits@unita,w
  4566  06BE  0084               	movwf	4
  4567  06BF  0838               	movf	??_GetDigits,w
  4568  06C0  1383               	bcf	3,7	;select IRP bank0
  4569  06C1  0080               	movwf	0
  4570  06C2                     l94:	
  4571  06C2  0008               	return
  4572  06C3                     __end_of_GetDigits:	
  4573                           
  4574                           	psect	text16
  4575  0F97                     __ptext16:	
  4576 ;; *************** function ___awdiv *****************
  4577 ;; Defined at:
  4578 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  divisor         2   11[BANK0 ] int 
  4581 ;;  dividend        2   13[BANK0 ] int 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  quotient        2   18[BANK0 ] int 
  4584 ;;  sign            1   17[BANK0 ] unsigned char 
  4585 ;;  counter         1   16[BANK0 ] unsigned char 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  2   11[BANK0 ] int 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4595 ;;      Params:         0       4       0       0       0
  4596 ;;      Locals:         0       4       0       0       0
  4597 ;;      Temps:          0       1       0       0       0
  4598 ;;      Totals:         0       9       0       0       0
  4599 ;;Total ram usage:        9 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    3
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_map
  4606 ;;		_GetDigits
  4607 ;;		_intToString
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function ___awdiv
  4613  0F97                     ___awdiv:	
  4614  0F97                     l2730:	
  4615                           ;incstack = 0
  4616                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4617                           
  4618  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0F99  01B1               	clrf	___awdiv@sign
  4621  0F9A                     l2732:	
  4622  0F9A  1FAC               	btfss	___awdiv@divisor+1,7
  4623  0F9B  2F9D               	goto	u2391
  4624  0F9C  2F9E               	goto	u2390
  4625  0F9D                     u2391:	
  4626  0F9D  2FA5               	goto	l2738
  4627  0F9E                     u2390:	
  4628  0F9E                     l2734:	
  4629  0F9E  09AB               	comf	___awdiv@divisor,f
  4630  0F9F  09AC               	comf	___awdiv@divisor+1,f
  4631  0FA0  0AAB               	incf	___awdiv@divisor,f
  4632  0FA1  1903               	skipnz
  4633  0FA2  0AAC               	incf	___awdiv@divisor+1,f
  4634  0FA3                     l2736:	
  4635  0FA3  01B1               	clrf	___awdiv@sign
  4636  0FA4  0AB1               	incf	___awdiv@sign,f
  4637  0FA5                     l2738:	
  4638  0FA5  1FAE               	btfss	___awdiv@dividend+1,7
  4639  0FA6  2FA8               	goto	u2401
  4640  0FA7  2FA9               	goto	u2400
  4641  0FA8                     u2401:	
  4642  0FA8  2FB2               	goto	l2744
  4643  0FA9                     u2400:	
  4644  0FA9                     l2740:	
  4645  0FA9  09AD               	comf	___awdiv@dividend,f
  4646  0FAA  09AE               	comf	___awdiv@dividend+1,f
  4647  0FAB  0AAD               	incf	___awdiv@dividend,f
  4648  0FAC  1903               	skipnz
  4649  0FAD  0AAE               	incf	___awdiv@dividend+1,f
  4650  0FAE                     l2742:	
  4651  0FAE  3001               	movlw	1
  4652  0FAF  00AF               	movwf	??___awdiv
  4653  0FB0  082F               	movf	??___awdiv,w
  4654  0FB1  06B1               	xorwf	___awdiv@sign,f
  4655  0FB2                     l2744:	
  4656  0FB2  01B2               	clrf	___awdiv@quotient
  4657  0FB3  01B3               	clrf	___awdiv@quotient+1
  4658  0FB4                     l2746:	
  4659  0FB4  082B               	movf	___awdiv@divisor,w
  4660  0FB5  042C               	iorwf	___awdiv@divisor+1,w
  4661  0FB6  1903               	btfsc	3,2
  4662  0FB7  2FB9               	goto	u2411
  4663  0FB8  2FBA               	goto	u2410
  4664  0FB9                     u2411:	
  4665  0FB9  2FF1               	goto	l2766
  4666  0FBA                     u2410:	
  4667  0FBA                     l2748:	
  4668  0FBA  01B0               	clrf	___awdiv@counter
  4669  0FBB  0AB0               	incf	___awdiv@counter,f
  4670  0FBC  2FC8               	goto	l2754
  4671  0FBD                     l2750:	
  4672  0FBD  3001               	movlw	1
  4673  0FBE                     u2425:	
  4674  0FBE  1003               	clrc
  4675  0FBF  0DAB               	rlf	___awdiv@divisor,f
  4676  0FC0  0DAC               	rlf	___awdiv@divisor+1,f
  4677  0FC1  3EFF               	addlw	-1
  4678  0FC2  1D03               	skipz
  4679  0FC3  2FBE               	goto	u2425
  4680  0FC4                     l2752:	
  4681  0FC4  3001               	movlw	1
  4682  0FC5  00AF               	movwf	??___awdiv
  4683  0FC6  082F               	movf	??___awdiv,w
  4684  0FC7  07B0               	addwf	___awdiv@counter,f
  4685  0FC8                     l2754:	
  4686  0FC8  1FAC               	btfss	___awdiv@divisor+1,7
  4687  0FC9  2FCB               	goto	u2431
  4688  0FCA  2FCC               	goto	u2430
  4689  0FCB                     u2431:	
  4690  0FCB  2FBD               	goto	l2750
  4691  0FCC                     u2430:	
  4692  0FCC                     l2756:	
  4693  0FCC  3001               	movlw	1
  4694  0FCD                     u2445:	
  4695  0FCD  1003               	clrc
  4696  0FCE  0DB2               	rlf	___awdiv@quotient,f
  4697  0FCF  0DB3               	rlf	___awdiv@quotient+1,f
  4698  0FD0  3EFF               	addlw	-1
  4699  0FD1  1D03               	skipz
  4700  0FD2  2FCD               	goto	u2445
  4701  0FD3  082C               	movf	___awdiv@divisor+1,w
  4702  0FD4  022E               	subwf	___awdiv@dividend+1,w
  4703  0FD5  1D03               	skipz
  4704  0FD6  2FD9               	goto	u2455
  4705  0FD7  082B               	movf	___awdiv@divisor,w
  4706  0FD8  022D               	subwf	___awdiv@dividend,w
  4707  0FD9                     u2455:	
  4708  0FD9  1C03               	skipc
  4709  0FDA  2FDC               	goto	u2451
  4710  0FDB  2FDD               	goto	u2450
  4711  0FDC                     u2451:	
  4712  0FDC  2FE4               	goto	l2762
  4713  0FDD                     u2450:	
  4714  0FDD                     l2758:	
  4715  0FDD  082B               	movf	___awdiv@divisor,w
  4716  0FDE  02AD               	subwf	___awdiv@dividend,f
  4717  0FDF  082C               	movf	___awdiv@divisor+1,w
  4718  0FE0  1C03               	skipc
  4719  0FE1  03AE               	decf	___awdiv@dividend+1,f
  4720  0FE2  02AE               	subwf	___awdiv@dividend+1,f
  4721  0FE3                     l2760:	
  4722  0FE3  1432               	bsf	___awdiv@quotient,0
  4723  0FE4                     l2762:	
  4724  0FE4  3001               	movlw	1
  4725  0FE5                     u2465:	
  4726  0FE5  1003               	clrc
  4727  0FE6  0CAC               	rrf	___awdiv@divisor+1,f
  4728  0FE7  0CAB               	rrf	___awdiv@divisor,f
  4729  0FE8  3EFF               	addlw	-1
  4730  0FE9  1D03               	skipz
  4731  0FEA  2FE5               	goto	u2465
  4732  0FEB                     l2764:	
  4733  0FEB  3001               	movlw	1
  4734  0FEC  02B0               	subwf	___awdiv@counter,f
  4735  0FED  1D03               	btfss	3,2
  4736  0FEE  2FF0               	goto	u2471
  4737  0FEF  2FF1               	goto	u2470
  4738  0FF0                     u2471:	
  4739  0FF0  2FCC               	goto	l2756
  4740  0FF1                     u2470:	
  4741  0FF1                     l2766:	
  4742  0FF1  0831               	movf	___awdiv@sign,w
  4743  0FF2  1903               	btfsc	3,2
  4744  0FF3  2FF5               	goto	u2481
  4745  0FF4  2FF6               	goto	u2480
  4746  0FF5                     u2481:	
  4747  0FF5  2FFB               	goto	l2770
  4748  0FF6                     u2480:	
  4749  0FF6                     l2768:	
  4750  0FF6  09B2               	comf	___awdiv@quotient,f
  4751  0FF7  09B3               	comf	___awdiv@quotient+1,f
  4752  0FF8  0AB2               	incf	___awdiv@quotient,f
  4753  0FF9  1903               	skipnz
  4754  0FFA  0AB3               	incf	___awdiv@quotient+1,f
  4755  0FFB                     l2770:	
  4756  0FFB  0833               	movf	___awdiv@quotient+1,w
  4757  0FFC  00AC               	movwf	?___awdiv+1
  4758  0FFD  0832               	movf	___awdiv@quotient,w
  4759  0FFE  00AB               	movwf	?___awdiv
  4760  0FFF                     l573:	
  4761  0FFF  0008               	return
  4762  1000                     __end_of___awdiv:	
  4763                           
  4764                           	psect	text17
  4765  0DD3                     __ptext17:	
  4766 ;; *************** function _ChangeTrafficLight *****************
  4767 ;; Defined at:
  4768 ;;		line 15 in file "./CustomLib/TrafficLight.h"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  _semafori       1    wreg     PTR PTR struct .
  4771 ;;		 -> Semafori(16), 
  4772 ;;  _n_semafori     1   11[BANK0 ] PTR unsigned char 
  4773 ;;		 -> id_semaforo(1), 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  _semafori       1   18[BANK0 ] PTR PTR struct .
  4776 ;;		 -> Semafori(16), 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4786 ;;      Params:         0       1       0       0       0
  4787 ;;      Locals:         0       1       0       0       0
  4788 ;;      Temps:          0       6       0       0       0
  4789 ;;      Totals:         0       8       0       0       0
  4790 ;;Total ram usage:        8 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    4
  4793 ;; This function calls:
  4794 ;;		___awmod
  4795 ;; This function is called by:
  4796 ;;		_main
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function _ChangeTrafficLight
  4802  0DD3                     _ChangeTrafficLight:	
  4803                           
  4804                           ;incstack = 0
  4805                           ; Regs used in _ChangeTrafficLight: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4806                           ;ChangeTrafficLight@_semafori stored from wreg
  4807  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0DD5  00B2               	movwf	ChangeTrafficLight@_semafori
  4810  0DD6                     l138:	
  4811                           ;./CustomLib/TrafficLight.h: 15: void ChangeTrafficLight(_Semafori _semafori, unsigned c
      +                          har *_n_semafori);./CustomLib/TrafficLight.h: 16: {;./CustomLib/TrafficLight.h: 19:     
      +                          do
  4812                           
  4813  0DD6                     l2850:	
  4814                           
  4815                           ;./CustomLib/TrafficLight.h: 20:     {;./CustomLib/TrafficLight.h: 21:         *_n_semaf
      +                          ori = ((*_n_semafori) + 1);
  4816  0DD6  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4817  0DD7  0084               	movwf	4
  4818  0DD8  1383               	bcf	3,7	;select IRP bank0
  4819  0DD9  0800               	movf	0,w
  4820  0DDA  3E01               	addlw	1
  4821  0DDB  00AC               	movwf	??_ChangeTrafficLight
  4822  0DDC  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4823  0DDD  0084               	movwf	4
  4824  0DDE  082C               	movf	??_ChangeTrafficLight,w
  4825  0DDF  0080               	movwf	0
  4826                           
  4827                           ;./CustomLib/TrafficLight.h: 22:     }while( (*(_semafori)[*_n_semafori]).times[0] == 0 
      +                          && *_n_semafori<10);
  4828  0DE0  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4829  0DE1  0084               	movwf	4
  4830  0DE2  0800               	movf	0,w
  4831  0DE3  00AC               	movwf	??_ChangeTrafficLight
  4832  0DE4  072C               	addwf	??_ChangeTrafficLight,w
  4833  0DE5  0732               	addwf	ChangeTrafficLight@_semafori,w
  4834  0DE6  00AD               	movwf	??_ChangeTrafficLight+1
  4835  0DE7  082D               	movf	??_ChangeTrafficLight+1,w
  4836  0DE8  0084               	movwf	4
  4837  0DE9  0800               	movf	0,w
  4838  0DEA  00AE               	movwf	??_ChangeTrafficLight+2
  4839  0DEB  0A84               	incf	4,f
  4840  0DEC  0800               	movf	0,w
  4841  0DED  00AF               	movwf	??_ChangeTrafficLight+3
  4842  0DEE  082E               	movf	??_ChangeTrafficLight+2,w
  4843  0DEF  0084               	movwf	4
  4844  0DF0  1783               	bsf	3,7
  4845  0DF1  1C2F               	btfss	??_ChangeTrafficLight+3,0
  4846  0DF2  1383               	bcf	3,7
  4847  0DF3  0800               	movf	0,w
  4848  0DF4  00B0               	movwf	??_ChangeTrafficLight+4
  4849  0DF5  0A84               	incf	4,f
  4850  0DF6  0800               	movf	0,w
  4851  0DF7  00B1               	movwf	??_ChangeTrafficLight+5
  4852  0DF8  0830               	movf	??_ChangeTrafficLight+4,w
  4853  0DF9  0431               	iorwf	??_ChangeTrafficLight+5,w
  4854  0DFA  1D03               	btfss	3,2
  4855  0DFB  2DFD               	goto	u2611
  4856  0DFC  2DFE               	goto	u2610
  4857  0DFD                     u2611:	
  4858  0DFD  2E07               	goto	l2854
  4859  0DFE                     u2610:	
  4860  0DFE                     l2852:	
  4861  0DFE  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4862  0DFF  0084               	movwf	4
  4863  0E00  300A               	movlw	10
  4864  0E01  1383               	bcf	3,7	;select IRP bank0
  4865  0E02  0200               	subwf	0,w
  4866  0E03  1C03               	skipc
  4867  0E04  2E06               	goto	u2621
  4868  0E05  2E07               	goto	u2620
  4869  0E06                     u2621:	
  4870  0E06  2DD6               	goto	l138
  4871  0E07                     u2620:	
  4872  0E07                     l2854:	
  4873                           
  4874                           ;./CustomLib/TrafficLight.h: 24:     *_n_semafori=(*_n_semafori)%10;
  4875  0E07  300A               	movlw	10
  4876  0E08  00A4               	movwf	___awmod@divisor
  4877  0E09  3000               	movlw	0
  4878  0E0A  00A5               	movwf	___awmod@divisor+1
  4879  0E0B  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4880  0E0C  0084               	movwf	4
  4881  0E0D  1383               	bcf	3,7	;select IRP bank0
  4882  0E0E  0800               	movf	0,w
  4883  0E0F  00AC               	movwf	??_ChangeTrafficLight
  4884  0E10  01AD               	clrf	??_ChangeTrafficLight+1
  4885  0E11  082C               	movf	??_ChangeTrafficLight,w
  4886  0E12  00A6               	movwf	___awmod@dividend
  4887  0E13  082D               	movf	??_ChangeTrafficLight+1,w
  4888  0E14  00A7               	movwf	___awmod@dividend+1
  4889  0E15  120A  158A  267C  120A  158A  	fcall	___awmod
  4890  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  4891  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  4892  0E1C  0824               	movf	?___awmod,w
  4893  0E1D  00AE               	movwf	??_ChangeTrafficLight+2
  4894  0E1E  082B               	movf	ChangeTrafficLight@_n_semafori,w
  4895  0E1F  0084               	movwf	4
  4896  0E20  082E               	movf	??_ChangeTrafficLight+2,w
  4897  0E21  1383               	bcf	3,7	;select IRP bank0
  4898  0E22  0080               	movwf	0
  4899  0E23                     l142:	
  4900  0E23  0008               	return
  4901  0E24                     __end_of_ChangeTrafficLight:	
  4902                           
  4903                           	psect	text18
  4904  0E7C                     __ptext18:	
  4905 ;; *************** function ___awmod *****************
  4906 ;; Defined at:
  4907 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  divisor         2    4[BANK0 ] int 
  4910 ;;  dividend        2    6[BANK0 ] int 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  sign            1   10[BANK0 ] unsigned char 
  4913 ;;  counter         1    9[BANK0 ] unsigned char 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  2    4[BANK0 ] int 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4923 ;;      Params:         0       4       0       0       0
  4924 ;;      Locals:         0       2       0       0       0
  4925 ;;      Temps:          0       1       0       0       0
  4926 ;;      Totals:         0       7       0       0       0
  4927 ;;Total ram usage:        7 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    3
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_GetDigits
  4934 ;;		_ChangeTrafficLight
  4935 ;;		_main
  4936 ;;		_intToString
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           
  4941                           ;psect for function ___awmod
  4942  0E7C                     ___awmod:	
  4943  0E7C                     l2774:	
  4944                           ;incstack = 0
  4945                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4946                           
  4947  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  4948  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  4949  0E7E  01AA               	clrf	___awmod@sign
  4950  0E7F                     l2776:	
  4951  0E7F  1FA7               	btfss	___awmod@dividend+1,7
  4952  0E80  2E82               	goto	u2491
  4953  0E81  2E83               	goto	u2490
  4954  0E82                     u2491:	
  4955  0E82  2E8A               	goto	l2782
  4956  0E83                     u2490:	
  4957  0E83                     l2778:	
  4958  0E83  09A6               	comf	___awmod@dividend,f
  4959  0E84  09A7               	comf	___awmod@dividend+1,f
  4960  0E85  0AA6               	incf	___awmod@dividend,f
  4961  0E86  1903               	skipnz
  4962  0E87  0AA7               	incf	___awmod@dividend+1,f
  4963  0E88                     l2780:	
  4964  0E88  01AA               	clrf	___awmod@sign
  4965  0E89  0AAA               	incf	___awmod@sign,f
  4966  0E8A                     l2782:	
  4967  0E8A  1FA5               	btfss	___awmod@divisor+1,7
  4968  0E8B  2E8D               	goto	u2501
  4969  0E8C  2E8E               	goto	u2500
  4970  0E8D                     u2501:	
  4971  0E8D  2E93               	goto	l2786
  4972  0E8E                     u2500:	
  4973  0E8E                     l2784:	
  4974  0E8E  09A4               	comf	___awmod@divisor,f
  4975  0E8F  09A5               	comf	___awmod@divisor+1,f
  4976  0E90  0AA4               	incf	___awmod@divisor,f
  4977  0E91  1903               	skipnz
  4978  0E92  0AA5               	incf	___awmod@divisor+1,f
  4979  0E93                     l2786:	
  4980  0E93  0824               	movf	___awmod@divisor,w
  4981  0E94  0425               	iorwf	___awmod@divisor+1,w
  4982  0E95  1903               	btfsc	3,2
  4983  0E96  2E98               	goto	u2511
  4984  0E97  2E99               	goto	u2510
  4985  0E98                     u2511:	
  4986  0E98  2EC8               	goto	l2804
  4987  0E99                     u2510:	
  4988  0E99                     l2788:	
  4989  0E99  01A9               	clrf	___awmod@counter
  4990  0E9A  0AA9               	incf	___awmod@counter,f
  4991  0E9B  2EA7               	goto	l2794
  4992  0E9C                     l2790:	
  4993  0E9C  3001               	movlw	1
  4994  0E9D                     u2525:	
  4995  0E9D  1003               	clrc
  4996  0E9E  0DA4               	rlf	___awmod@divisor,f
  4997  0E9F  0DA5               	rlf	___awmod@divisor+1,f
  4998  0EA0  3EFF               	addlw	-1
  4999  0EA1  1D03               	skipz
  5000  0EA2  2E9D               	goto	u2525
  5001  0EA3                     l2792:	
  5002  0EA3  3001               	movlw	1
  5003  0EA4  00A8               	movwf	??___awmod
  5004  0EA5  0828               	movf	??___awmod,w
  5005  0EA6  07A9               	addwf	___awmod@counter,f
  5006  0EA7                     l2794:	
  5007  0EA7  1FA5               	btfss	___awmod@divisor+1,7
  5008  0EA8  2EAA               	goto	u2531
  5009  0EA9  2EAB               	goto	u2530
  5010  0EAA                     u2531:	
  5011  0EAA  2E9C               	goto	l2790
  5012  0EAB                     u2530:	
  5013  0EAB                     l2796:	
  5014  0EAB  0825               	movf	___awmod@divisor+1,w
  5015  0EAC  0227               	subwf	___awmod@dividend+1,w
  5016  0EAD  1D03               	skipz
  5017  0EAE  2EB1               	goto	u2545
  5018  0EAF  0824               	movf	___awmod@divisor,w
  5019  0EB0  0226               	subwf	___awmod@dividend,w
  5020  0EB1                     u2545:	
  5021  0EB1  1C03               	skipc
  5022  0EB2  2EB4               	goto	u2541
  5023  0EB3  2EB5               	goto	u2540
  5024  0EB4                     u2541:	
  5025  0EB4  2EBB               	goto	l2800
  5026  0EB5                     u2540:	
  5027  0EB5                     l2798:	
  5028  0EB5  0824               	movf	___awmod@divisor,w
  5029  0EB6  02A6               	subwf	___awmod@dividend,f
  5030  0EB7  0825               	movf	___awmod@divisor+1,w
  5031  0EB8  1C03               	skipc
  5032  0EB9  03A7               	decf	___awmod@dividend+1,f
  5033  0EBA  02A7               	subwf	___awmod@dividend+1,f
  5034  0EBB                     l2800:	
  5035  0EBB  3001               	movlw	1
  5036  0EBC                     u2555:	
  5037  0EBC  1003               	clrc
  5038  0EBD  0CA5               	rrf	___awmod@divisor+1,f
  5039  0EBE  0CA4               	rrf	___awmod@divisor,f
  5040  0EBF  3EFF               	addlw	-1
  5041  0EC0  1D03               	skipz
  5042  0EC1  2EBC               	goto	u2555
  5043  0EC2                     l2802:	
  5044  0EC2  3001               	movlw	1
  5045  0EC3  02A9               	subwf	___awmod@counter,f
  5046  0EC4  1D03               	btfss	3,2
  5047  0EC5  2EC7               	goto	u2561
  5048  0EC6  2EC8               	goto	u2560
  5049  0EC7                     u2561:	
  5050  0EC7  2EAB               	goto	l2796
  5051  0EC8                     u2560:	
  5052  0EC8                     l2804:	
  5053  0EC8  082A               	movf	___awmod@sign,w
  5054  0EC9  1903               	btfsc	3,2
  5055  0ECA  2ECC               	goto	u2571
  5056  0ECB  2ECD               	goto	u2570
  5057  0ECC                     u2571:	
  5058  0ECC  2ED2               	goto	l2808
  5059  0ECD                     u2570:	
  5060  0ECD                     l2806:	
  5061  0ECD  09A6               	comf	___awmod@dividend,f
  5062  0ECE  09A7               	comf	___awmod@dividend+1,f
  5063  0ECF  0AA6               	incf	___awmod@dividend,f
  5064  0ED0  1903               	skipnz
  5065  0ED1  0AA7               	incf	___awmod@dividend+1,f
  5066  0ED2                     l2808:	
  5067  0ED2  0827               	movf	___awmod@dividend+1,w
  5068  0ED3  00A5               	movwf	?___awmod+1
  5069  0ED4  0826               	movf	___awmod@dividend,w
  5070  0ED5  00A4               	movwf	?___awmod
  5071  0ED6                     l586:	
  5072  0ED6  0008               	return
  5073  0ED7                     __end_of___awmod:	
  5074                           
  5075                           	psect	text19
  5076  0C8E                     __ptext19:	
  5077 ;; *************** function _ADC_Read *****************
  5078 ;; Defined at:
  5079 ;;		line 347 in file "main.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  canale          1    wreg     unsigned char 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  canale          1    7[BANK0 ] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  2    4[BANK0 ] int 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5093 ;;      Params:         0       2       0       0       0
  5094 ;;      Locals:         0       1       0       0       0
  5095 ;;      Temps:          0       1       0       0       0
  5096 ;;      Totals:         0       4       0       0       0
  5097 ;;Total ram usage:        4 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    3
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function _ADC_Read
  5109  0C8E                     _ADC_Read:	
  5110                           
  5111                           ;incstack = 0
  5112                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5113                           ;ADC_Read@canale stored from wreg
  5114  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  5115  0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0C90  00A7               	movwf	ADC_Read@canale
  5117  0C91                     l2942:	
  5118                           
  5119                           ;main.c: 347: int ADC_Read(char canale);main.c: 348: {;main.c: 349:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5120  0C91  0827               	movf	ADC_Read@canale,w
  5121  0C92  00A6               	movwf	??_ADC_Read
  5122  0C93  3002               	movlw	2
  5123  0C94                     u2695:	
  5124  0C94  1003               	clrc
  5125  0C95  0DA6               	rlf	??_ADC_Read,f
  5126  0C96  3EFF               	addlw	-1
  5127  0C97  1D03               	skipz
  5128  0C98  2C94               	goto	u2695
  5129  0C99  1003               	clrc
  5130  0C9A  0D26               	rlf	??_ADC_Read,w
  5131  0C9B  3801               	iorlw	1
  5132  0C9C  009F               	movwf	31	;volatile
  5133  0C9D                     l2944:	
  5134                           
  5135                           ;main.c: 350:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5136  0C9D  3004               	movlw	4
  5137  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0CA0  00A6               	movwf	??_ADC_Read
  5140  0CA1                     u2967:	
  5141  0CA1  0BA6               	decfsz	??_ADC_Read,f
  5142  0CA2  2CA1               	goto	u2967
  5143  0CA3  0000               	nop
  5144  0CA4                     l2946:	
  5145                           
  5146                           ;main.c: 351:     GO_nDONE = 1;
  5147  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  5148  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  5149  0CA6  151F               	bsf	31,2	;volatile
  5150  0CA7                     l284:	
  5151                           ;main.c: 353:         ;
  5152                           
  5153                           
  5154                           ;main.c: 352:     while (GO_nDONE)
  5155  0CA7  191F               	btfsc	31,2	;volatile
  5156  0CA8  2CAA               	goto	u2701
  5157  0CA9  2CAB               	goto	u2700
  5158  0CAA                     u2701:	
  5159  0CAA  2CA7               	goto	l284
  5160  0CAB                     u2700:	
  5161  0CAB                     l2948:	
  5162                           
  5163                           ;main.c: 354:     return ADRESL + (ADRESH << 8);
  5164  0CAB  081E               	movf	30,w	;volatile
  5165  0CAC  00A5               	movwf	?_ADC_Read+1
  5166  0CAD  1683               	bsf	3,5	;RP0=1, select bank1
  5167  0CAE  1303               	bcf	3,6	;RP1=0, select bank1
  5168  0CAF  081E               	movf	30,w	;volatile
  5169  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  5170  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  5171  0CB2  00A4               	movwf	?_ADC_Read
  5172  0CB3                     l287:	
  5173  0CB3  0008               	return
  5174  0CB4                     __end_of_ADC_Read:	
  5175                           
  5176                           	psect	text20
  5177  0E24                     __ptext20:	
  5178 ;; *************** function _ISR *****************
  5179 ;; Defined at:
  5180 ;;		line 438 in file "main.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5194 ;;      Params:         0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0
  5196 ;;      Temps:          0       4       0       0       0
  5197 ;;      Totals:         0       4       0       0       0
  5198 ;;Total ram usage:        4 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    2
  5201 ;; This function calls:
  5202 ;;		_UART_Read
  5203 ;;		_conteggioVeicoli
  5204 ;; This function is called by:
  5205 ;;		Interrupt level 1
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _ISR
  5211  0E24                     _ISR:	
  5212  0E24                     i1l2422:	
  5213                           
  5214                           ;main.c: 441:     if (RCIF && readGateway.Bit == 0)
  5215  0E24  1E8C               	btfss	12,5	;volatile
  5216  0E25  2E27               	goto	u204_21
  5217  0E26  2E28               	goto	u204_20
  5218  0E27                     u204_21:	
  5219  0E27  2E31               	goto	i1l2430
  5220  0E28                     u204_20:	
  5221  0E28                     i1l2424:	
  5222  0E28  1854               	btfsc	_readGateway,0
  5223  0E29  2E2B               	goto	u205_21
  5224  0E2A  2E2C               	goto	u205_20
  5225  0E2B                     u205_21:	
  5226  0E2B  2E31               	goto	i1l2430
  5227  0E2C                     u205_20:	
  5228  0E2C                     i1l2426:	
  5229                           
  5230                           ;main.c: 442:     {;main.c: 443:         readGateway.Bit = 1;
  5231  0E2C  1454               	bsf	_readGateway,0
  5232                           
  5233                           ;main.c: 444:         readGatewayDone.Bit = 0;
  5234  0E2D  1055               	bcf	_readGatewayDone,0
  5235                           
  5236                           ;main.c: 445:         readGatewayDone.Timeout = 0;
  5237  0E2E  10D5               	bcf	_readGatewayDone,1
  5238  0E2F                     i1l2428:	
  5239                           
  5240                           ;main.c: 446:         dataFromGatewayIndex = 0;
  5241  0E2F  01CD               	clrf	_dataFromGatewayIndex
  5242                           
  5243                           ;main.c: 447:         timerReadFromGateway = 0;
  5244  0E30  01CC               	clrf	_timerReadFromGateway
  5245  0E31                     i1l2430:	
  5246                           
  5247                           ;main.c: 449:     if (RCIF && readGateway.Bit == 1)
  5248  0E31  1E8C               	btfss	12,5	;volatile
  5249  0E32  2E34               	goto	u206_21
  5250  0E33  2E35               	goto	u206_20
  5251  0E34                     u206_21:	
  5252  0E34  2E4C               	goto	i1l2440
  5253  0E35                     u206_20:	
  5254  0E35                     i1l2432:	
  5255  0E35  1C54               	btfss	_readGateway,0
  5256  0E36  2E38               	goto	u207_21
  5257  0E37  2E39               	goto	u207_20
  5258  0E38                     u207_21:	
  5259  0E38  2E4C               	goto	i1l2440
  5260  0E39                     u207_20:	
  5261  0E39                     i1l2434:	
  5262                           
  5263                           ;main.c: 450:     {;main.c: 451:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  5264  0E39  120A  158A  2418  120A  158A  	fcall	_UART_Read
  5265  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0E40  00A0               	movwf	??_ISR
  5268  0E41  084D               	movf	_dataFromGatewayIndex,w
  5269  0E42  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  5270  0E43  0084               	movwf	4
  5271  0E44  0820               	movf	??_ISR,w
  5272  0E45  1383               	bcf	3,7	;select IRP bank1
  5273  0E46  0080               	movwf	0
  5274  0E47                     i1l2436:	
  5275                           
  5276                           ;main.c: 452:         dataFromGatewayIndex++;
  5277  0E47  3001               	movlw	1
  5278  0E48  00A0               	movwf	??_ISR
  5279  0E49  0820               	movf	??_ISR,w
  5280  0E4A  07CD               	addwf	_dataFromGatewayIndex,f
  5281  0E4B                     i1l2438:	
  5282                           
  5283                           ;main.c: 453:         timerReadFromGateway = 0;
  5284  0E4B  01CC               	clrf	_timerReadFromGateway
  5285  0E4C                     i1l2440:	
  5286                           
  5287                           ;main.c: 458:     if (TMR0IF)
  5288  0E4C  1D0B               	btfss	11,2	;volatile
  5289  0E4D  2E4F               	goto	u208_21
  5290  0E4E  2E50               	goto	u208_20
  5291  0E4F                     u208_21:	
  5292  0E4F  2E5A               	goto	i1l2448
  5293  0E50                     u208_20:	
  5294  0E50                     i1l2442:	
  5295                           
  5296                           ;main.c: 459:     {;main.c: 460:         TMR0IF = 0;
  5297  0E50  110B               	bcf	11,2	;volatile
  5298  0E51                     i1l2444:	
  5299                           
  5300                           ;main.c: 461:         conteggioVeicoli();
  5301  0E51  120A  158A  2732  120A  158A  	fcall	_conteggioVeicoli
  5302  0E56                     i1l2446:	
  5303                           
  5304                           ;main.c: 462:         TMR0 = 6;
  5305  0E56  3006               	movlw	6
  5306  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0E59  0081               	movwf	1	;volatile
  5309  0E5A                     i1l2448:	
  5310                           
  5311                           ;main.c: 465:     if (TMR1IF)
  5312  0E5A  1C0C               	btfss	12,0	;volatile
  5313  0E5B  2E5D               	goto	u209_21
  5314  0E5C  2E5E               	goto	u209_20
  5315  0E5D                     u209_21:	
  5316  0E5D  2E73               	goto	i1l334
  5317  0E5E                     u209_20:	
  5318  0E5E                     i1l2450:	
  5319                           
  5320                           ;main.c: 466:     {;main.c: 467:         TMR1IF = 0;
  5321  0E5E  100C               	bcf	12,0	;volatile
  5322  0E5F                     i1l2452:	
  5323                           
  5324                           ;main.c: 468:         count_lux++;
  5325  0E5F  3001               	movlw	1
  5326  0E60  00A0               	movwf	??_ISR
  5327  0E61  0820               	movf	??_ISR,w
  5328  0E62  07D0               	addwf	_count_lux,f
  5329  0E63                     i1l2454:	
  5330                           
  5331                           ;main.c: 470:         if (count_lux >= 20)
  5332  0E63  3014               	movlw	20
  5333  0E64  0250               	subwf	_count_lux,w
  5334  0E65  1C03               	skipc
  5335  0E66  2E68               	goto	u210_21
  5336  0E67  2E69               	goto	u210_20
  5337  0E68                     u210_21:	
  5338  0E68  2E6F               	goto	i1l2462
  5339  0E69                     u210_20:	
  5340  0E69                     i1l2456:	
  5341                           
  5342                           ;main.c: 471:         {;main.c: 472:             secondPassed.Bit = 1;
  5343  0E69  1453               	bsf	_secondPassed,0
  5344  0E6A                     i1l2458:	
  5345                           
  5346                           ;main.c: 473:             count_lux = 0;
  5347  0E6A  01D0               	clrf	_count_lux
  5348  0E6B                     i1l2460:	
  5349                           
  5350                           ;main.c: 474:             timerReadFromGateway++;
  5351  0E6B  3001               	movlw	1
  5352  0E6C  00A0               	movwf	??_ISR
  5353  0E6D  0820               	movf	??_ISR,w
  5354  0E6E  07CC               	addwf	_timerReadFromGateway,f
  5355  0E6F                     i1l2462:	
  5356                           
  5357                           ;main.c: 477:         TMR1H = 60;
  5358  0E6F  303C               	movlw	60
  5359  0E70  008F               	movwf	15	;volatile
  5360  0E71                     i1l2464:	
  5361                           
  5362                           ;main.c: 478:         TMR1L = 176;
  5363  0E71  30B0               	movlw	176
  5364  0E72  008E               	movwf	14	;volatile
  5365  0E73                     i1l334:	
  5366  0E73  0823               	movf	??_ISR+3,w
  5367  0E74  008A               	movwf	10
  5368  0E75  0822               	movf	??_ISR+2,w
  5369  0E76  0084               	movwf	4
  5370  0E77  0E21               	swapf	(??_ISR+1)^0,w
  5371  0E78  0083               	movwf	3
  5372  0E79  0EFE               	swapf	btemp,f
  5373  0E7A  0E7E               	swapf	btemp,w
  5374  0E7B  0009               	retfie
  5375  0E7C                     __end_of_ISR:	
  5376                           
  5377                           	psect	intentry
  5378  0004                     __pintentry:	
  5379                           ;incstack = 0
  5380                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5381                           
  5382  0004                     interrupt_function:	
  5383  007E                     saved_w	set	btemp
  5384  0004  00FE               	movwf	btemp
  5385  0005  0E03               	swapf	3,w
  5386  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0008  00A1               	movwf	??_ISR+1
  5389  0009  0804               	movf	4,w
  5390  000A  00A2               	movwf	??_ISR+2
  5391  000B  080A               	movf	10,w
  5392  000C  00A3               	movwf	??_ISR+3
  5393  000D  120A  158A  2E24   	ljmp	_ISR
  5394                           
  5395                           	psect	text21
  5396  0F32                     __ptext21:	
  5397 ;; *************** function _conteggioVeicoli *****************
  5398 ;; Defined at:
  5399 ;;		line 415 in file "main.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;		None
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  i               1   13[COMMON] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5413 ;;      Params:         0       0       0       0       0
  5414 ;;      Locals:         1       0       0       0       0
  5415 ;;      Temps:          4       0       0       0       0
  5416 ;;      Totals:         5       0       0       0       0
  5417 ;;Total ram usage:        5 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    1
  5420 ;; This function calls:
  5421 ;;		_Conteggio
  5422 ;; This function is called by:
  5423 ;;		_ISR
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function _conteggioVeicoli
  5429  0F32                     _conteggioVeicoli:	
  5430  0F32                     i1l2188:	
  5431                           ;incstack = 0
  5432                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5433                           
  5434                           
  5435                           ;main.c: 417:     RoadsSensors[0]=PORTBbits.RB3;
  5436  0F32  3000               	movlw	0
  5437  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  5438  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  5439  0F35  1986               	btfsc	6,3	;volatile
  5440  0F36  3001               	movlw	1
  5441  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  5442  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  5443  0F39  00A0               	movwf	_RoadsSensors^(0+128)
  5444                           
  5445                           ;main.c: 418:     RoadsSensors[1]=PORTBbits.RB4;
  5446  0F3A  3000               	movlw	0
  5447  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  5448  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  5449  0F3D  1A06               	btfsc	6,4	;volatile
  5450  0F3E  3001               	movlw	1
  5451  0F3F  1683               	bsf	3,5	;RP0=1, select bank1
  5452  0F40  1303               	bcf	3,6	;RP1=0, select bank1
  5453  0F41  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  5454                           
  5455                           ;main.c: 419:     RoadsSensors[2]=PORTBbits.RB5;
  5456  0F42  3000               	movlw	0
  5457  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  5458  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  5459  0F45  1A86               	btfsc	6,5	;volatile
  5460  0F46  3001               	movlw	1
  5461  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  5462  0F48  1303               	bcf	3,6	;RP1=0, select bank1
  5463  0F49  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  5464                           
  5465                           ;main.c: 420:     RoadsSensors[3]=PORTAbits.RA5;
  5466  0F4A  3000               	movlw	0
  5467  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  5468  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  5469  0F4D  1A85               	btfsc	5,5	;volatile
  5470  0F4E  3001               	movlw	1
  5471  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  5472  0F50  1303               	bcf	3,6	;RP1=0, select bank1
  5473  0F51  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  5474  0F52                     i1l2190:	
  5475                           
  5476                           ;main.c: 422:     for(unsigned char i=0; i<4; i++)
  5477  0F52  01FD               	clrf	conteggioVeicoli@i
  5478  0F53                     i1l2194:	
  5479                           
  5480                           ;main.c: 423:     {;main.c: 424:         if (!RoadsSensors[i])
  5481  0F53  087D               	movf	conteggioVeicoli@i,w
  5482  0F54  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5483  0F55  0084               	movwf	4
  5484  0F56  1383               	bcf	3,7	;select IRP bank1
  5485  0F57  0800               	movf	0,w
  5486  0F58  1D03               	btfss	3,2
  5487  0F59  2F5B               	goto	u177_21
  5488  0F5A  2F5C               	goto	u177_20
  5489  0F5B                     u177_21:	
  5490  0F5B  2F65               	goto	i1l2198
  5491  0F5C                     u177_20:	
  5492  0F5C                     i1l2196:	
  5493                           
  5494                           ;main.c: 425:         {;main.c: 426:             count++;
  5495  0F5C  3001               	movlw	1
  5496  0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  5497  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  5498  0F5F  07CA               	addwf	_count,f
  5499  0F60  1803               	skipnc
  5500  0F61  0ACB               	incf	_count+1,f
  5501  0F62  3000               	movlw	0
  5502  0F63  07CB               	addwf	_count+1,f
  5503                           
  5504                           ;main.c: 427:         }
  5505  0F64  2F8C               	goto	i1l2204
  5506  0F65                     i1l2198:	
  5507  0F65  087D               	movf	conteggioVeicoli@i,w
  5508  0F66  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5509  0F67  0084               	movwf	4
  5510  0F68  0800               	movf	0,w
  5511  0F69  1903               	btfsc	3,2
  5512  0F6A  2F6C               	goto	u178_21
  5513  0F6B  2F6D               	goto	u178_20
  5514  0F6C                     u178_21:	
  5515  0F6C  2F8C               	goto	i1l2204
  5516  0F6D                     u178_20:	
  5517  0F6D                     i1l2200:	
  5518                           
  5519                           ;main.c: 429:         {;main.c: 430:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  5520  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  5521  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  5522  0F6F  084B               	movf	_count+1,w
  5523  0F70  00F1               	movwf	Conteggio@_count+1
  5524  0F71  084A               	movf	_count,w
  5525  0F72  00F0               	movwf	Conteggio@_count
  5526  0F73  305E               	movlw	(low (_motorcycle| 0))& (0+255)
  5527  0F74  00F9               	movwf	??_conteggioVeicoli
  5528  0F75  0879               	movf	??_conteggioVeicoli,w
  5529  0F76  00F2               	movwf	Conteggio@_motorcycle
  5530  0F77  305A               	movlw	(low (_car| 0))& (0+255)
  5531  0F78  00FA               	movwf	??_conteggioVeicoli+1
  5532  0F79  087A               	movf	??_conteggioVeicoli+1,w
  5533  0F7A  00F3               	movwf	Conteggio@_car
  5534  0F7B  3056               	movlw	(low (_truck| 0))& (0+255)
  5535  0F7C  00FB               	movwf	??_conteggioVeicoli+2
  5536  0F7D  087B               	movf	??_conteggioVeicoli+2,w
  5537  0F7E  00F4               	movwf	Conteggio@_truck
  5538  0F7F  087D               	movf	conteggioVeicoli@i,w
  5539  0F80  00FC               	movwf	??_conteggioVeicoli+3
  5540  0F81  087C               	movf	??_conteggioVeicoli+3,w
  5541  0F82  00F5               	movwf	Conteggio@index
  5542  0F83  120A  158A  2587  120A  158A  	fcall	_Conteggio
  5543  0F88                     i1l2202:	
  5544                           
  5545                           ;main.c: 431:             count = 0;
  5546  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  5547  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  5548  0F8A  01CA               	clrf	_count
  5549  0F8B  01CB               	clrf	_count+1
  5550  0F8C                     i1l2204:	
  5551                           
  5552                           ;main.c: 433:     }
  5553  0F8C  3001               	movlw	1
  5554  0F8D  00F9               	movwf	??_conteggioVeicoli
  5555  0F8E  0879               	movf	??_conteggioVeicoli,w
  5556  0F8F  07FD               	addwf	conteggioVeicoli@i,f
  5557  0F90                     i1l2206:	
  5558  0F90  3004               	movlw	4
  5559  0F91  027D               	subwf	conteggioVeicoli@i,w
  5560  0F92  1C03               	skipc
  5561  0F93  2F95               	goto	u179_21
  5562  0F94  2F96               	goto	u179_20
  5563  0F95                     u179_21:	
  5564  0F95  2F53               	goto	i1l2194
  5565  0F96                     u179_20:	
  5566  0F96                     i1l324:	
  5567  0F96  0008               	return
  5568  0F97                     __end_of_conteggioVeicoli:	
  5569                           
  5570                           	psect	text22
  5571  0D87                     __ptext22:	
  5572 ;; *************** function _Conteggio *****************
  5573 ;; Defined at:
  5574 ;;		line 87 in file "./CustomLib/TrafficLight.h"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  _count          2    0[COMMON] unsigned int 
  5577 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5578 ;;		 -> motorcycle(4), 
  5579 ;;  _car            1    3[COMMON] PTR unsigned char 
  5580 ;;		 -> car(4), 
  5581 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5582 ;;		 -> truck(4), 
  5583 ;;  index           1    5[COMMON] unsigned char 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      void 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5595 ;;      Params:         6       0       0       0       0
  5596 ;;      Locals:         0       0       0       0       0
  5597 ;;      Temps:          3       0       0       0       0
  5598 ;;      Totals:         9       0       0       0       0
  5599 ;;Total ram usage:        9 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; This function calls:
  5602 ;;		Nothing
  5603 ;; This function is called by:
  5604 ;;		_conteggioVeicoli
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function _Conteggio
  5610  0D87                     _Conteggio:	
  5611  0D87                     i1l1872:	
  5612                           ;incstack = 0
  5613                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5614                           
  5615                           
  5616                           ;./CustomLib/TrafficLight.h: 87: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 88: {;./CustomLib/TrafficLight.h: 89:         if (_count >= 500)
  5617  0D87  3001               	movlw	1
  5618  0D88  0271               	subwf	Conteggio@_count+1,w
  5619  0D89  30F4               	movlw	244
  5620  0D8A  1903               	skipnz
  5621  0D8B  0270               	subwf	Conteggio@_count,w
  5622  0D8C  1C03               	skipc
  5623  0D8D  2D8F               	goto	u124_21
  5624  0D8E  2D90               	goto	u124_20
  5625  0D8F                     u124_21:	
  5626  0D8F  2DA0               	goto	i1l1876
  5627  0D90                     u124_20:	
  5628  0D90                     i1l1874:	
  5629                           
  5630                           ;./CustomLib/TrafficLight.h: 90:         {;./CustomLib/TrafficLight.h: 91:             _
      +                          motorcycle[index]=_motorcycle[index]+1;
  5631  0D90  0875               	movf	Conteggio@index,w
  5632  0D91  0772               	addwf	Conteggio@_motorcycle,w
  5633  0D92  00F6               	movwf	??_Conteggio
  5634  0D93  0876               	movf	??_Conteggio,w
  5635  0D94  0084               	movwf	4
  5636  0D95  1383               	bcf	3,7	;select IRP bank0
  5637  0D96  0800               	movf	0,w
  5638  0D97  3E01               	addlw	1
  5639  0D98  00F7               	movwf	??_Conteggio+1
  5640  0D99  0875               	movf	Conteggio@index,w
  5641  0D9A  0772               	addwf	Conteggio@_motorcycle,w
  5642  0D9B  00F8               	movwf	??_Conteggio+2
  5643  0D9C  0878               	movf	??_Conteggio+2,w
  5644  0D9D  0084               	movwf	4
  5645  0D9E  0877               	movf	??_Conteggio+1,w
  5646  0D9F  0080               	movwf	0
  5647  0DA0                     i1l1876:	
  5648                           
  5649                           ;./CustomLib/TrafficLight.h: 93:         if (_count >= 1500)
  5650  0DA0  3005               	movlw	5
  5651  0DA1  0271               	subwf	Conteggio@_count+1,w
  5652  0DA2  30DC               	movlw	220
  5653  0DA3  1903               	skipnz
  5654  0DA4  0270               	subwf	Conteggio@_count,w
  5655  0DA5  1C03               	skipc
  5656  0DA6  2DA8               	goto	u125_21
  5657  0DA7  2DA9               	goto	u125_20
  5658  0DA8                     u125_21:	
  5659  0DA8  2DB9               	goto	i1l1880
  5660  0DA9                     u125_20:	
  5661  0DA9                     i1l1878:	
  5662                           
  5663                           ;./CustomLib/TrafficLight.h: 94:         {;./CustomLib/TrafficLight.h: 95:             _
      +                          car[index]=_car[index]+1;
  5664  0DA9  0875               	movf	Conteggio@index,w
  5665  0DAA  0773               	addwf	Conteggio@_car,w
  5666  0DAB  00F6               	movwf	??_Conteggio
  5667  0DAC  0876               	movf	??_Conteggio,w
  5668  0DAD  0084               	movwf	4
  5669  0DAE  1383               	bcf	3,7	;select IRP bank0
  5670  0DAF  0800               	movf	0,w
  5671  0DB0  3E01               	addlw	1
  5672  0DB1  00F7               	movwf	??_Conteggio+1
  5673  0DB2  0875               	movf	Conteggio@index,w
  5674  0DB3  0773               	addwf	Conteggio@_car,w
  5675  0DB4  00F8               	movwf	??_Conteggio+2
  5676  0DB5  0878               	movf	??_Conteggio+2,w
  5677  0DB6  0084               	movwf	4
  5678  0DB7  0877               	movf	??_Conteggio+1,w
  5679  0DB8  0080               	movwf	0
  5680  0DB9                     i1l1880:	
  5681                           
  5682                           ;./CustomLib/TrafficLight.h: 97:         if (_count >= 3000)
  5683  0DB9  300B               	movlw	11
  5684  0DBA  0271               	subwf	Conteggio@_count+1,w
  5685  0DBB  30B8               	movlw	184
  5686  0DBC  1903               	skipnz
  5687  0DBD  0270               	subwf	Conteggio@_count,w
  5688  0DBE  1C03               	skipc
  5689  0DBF  2DC1               	goto	u126_21
  5690  0DC0  2DC2               	goto	u126_20
  5691  0DC1                     u126_21:	
  5692  0DC1  2DD2               	goto	i1l168
  5693  0DC2                     u126_20:	
  5694  0DC2                     i1l1882:	
  5695                           
  5696                           ;./CustomLib/TrafficLight.h: 98:         {;./CustomLib/TrafficLight.h: 99:             _
      +                          truck[index]=_truck[index]+1;
  5697  0DC2  0875               	movf	Conteggio@index,w
  5698  0DC3  0774               	addwf	Conteggio@_truck,w
  5699  0DC4  00F6               	movwf	??_Conteggio
  5700  0DC5  0876               	movf	??_Conteggio,w
  5701  0DC6  0084               	movwf	4
  5702  0DC7  1383               	bcf	3,7	;select IRP bank0
  5703  0DC8  0800               	movf	0,w
  5704  0DC9  3E01               	addlw	1
  5705  0DCA  00F7               	movwf	??_Conteggio+1
  5706  0DCB  0875               	movf	Conteggio@index,w
  5707  0DCC  0774               	addwf	Conteggio@_truck,w
  5708  0DCD  00F8               	movwf	??_Conteggio+2
  5709  0DCE  0878               	movf	??_Conteggio+2,w
  5710  0DCF  0084               	movwf	4
  5711  0DD0  0877               	movf	??_Conteggio+1,w
  5712  0DD1  0080               	movwf	0
  5713  0DD2                     i1l168:	
  5714  0DD2  0008               	return
  5715  0DD3                     __end_of_Conteggio:	
  5716                           
  5717                           	psect	text23
  5718  0C18                     __ptext23:	
  5719 ;; *************** function _UART_Read *****************
  5720 ;; Defined at:
  5721 ;;		line 386 in file "main.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      unsigned char 
  5728 ;; Registers used:
  5729 ;;		wreg
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5735 ;;      Params:         0       0       0       0       0
  5736 ;;      Locals:         0       0       0       0       0
  5737 ;;      Temps:          0       0       0       0       0
  5738 ;;      Totals:         0       0       0       0       0
  5739 ;;Total ram usage:        0 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_ISR
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           
  5749                           ;psect for function _UART_Read
  5750  0C18                     _UART_Read:	
  5751  0C18                     i1l2182:	
  5752                           ;incstack = 0
  5753                           ; Regs used in _UART_Read: [wreg]
  5754                           
  5755  0C18                     i1l305:	
  5756                           ;main.c: 389:         ;
  5757                           
  5758                           
  5759                           ;main.c: 388:     while (!RCIF)
  5760  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  5761  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  5762  0C1A  1E8C               	btfss	12,5	;volatile
  5763  0C1B  2C1D               	goto	u176_21
  5764  0C1C  2C1E               	goto	u176_20
  5765  0C1D                     u176_21:	
  5766  0C1D  2C18               	goto	i1l305
  5767  0C1E                     u176_20:	
  5768  0C1E                     i1l307:	
  5769                           
  5770                           ;main.c: 390:     RCIF = 0;
  5771  0C1E  128C               	bcf	12,5	;volatile
  5772  0C1F                     i1l2184:	
  5773                           
  5774                           ;main.c: 391:     return RCREG;
  5775  0C1F  081A               	movf	26,w	;volatile
  5776  0C20                     i1l308:	
  5777  0C20  0008               	return
  5778  0C21                     __end_of_UART_Read:	
  5779  007E                     btemp	set	126	;btemp
  5780  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    11
    Data        16
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      70
    BANK1            80      0      77
    BANK3            96     12      82
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[8] size(2) Largest target is 14
		 -> s7(BANK3[14]), s6(BANK3[14]), s5(BANK3[14]), s4(BANK3[14]), 
		 -> s3(BANK3[14]), s2(BANK1[14]), s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK0[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    ChangeTrafficLight@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    ChangeTrafficLight@_n_semafori	PTR unsigned char  size(1) Largest target is 1
		 -> id_semaforo(BANK0[1]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod
    _ChangeTrafficLight->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   20709
                                             32 BANK0     10    10      0
                                              0 BANK3     12    12      0
                           _ADC_Read
                 _ChangeTrafficLight
                          _GetDigits
                   _SetDefaultTimers
                         _SetDisplay
                   _SetReceivedTimes
                          _UART_Init
                        _UpdateTimes
                            ___awmod
                           _init_ADC
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    4198
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1106
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         19    19      0     358
                                              4 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    14    13      1    1333
                                             12 BANK0     14    13      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     436
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDisplay                                           4     1      3     934
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7     899
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    3629
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ChangeTrafficLight                                   8     7      1    1856
                                             11 BANK0      8     7      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1513
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _ChangeTrafficLight
     ___awmod
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _SetDefaultTimers
   _SetDisplay
   _SetReceivedTimes
     _GetTime
     ___bmul
   _UART_Init
     ___aldiv
   _UpdateTimes
   ___awmod
   _init_ADC
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      C      52       9       85.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      F3      12        0.0%
ABS                  0      0      F3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 02 12:58:32 2020

                               pc 0002                    ___bmul@product 0026                       __CFG_CP$OFF 0000  
                              l77 0D40                                l94 06C2                      ___awdiv@sign 0031  
                              _s0 00CF                                _s1 00C1                                _s2 00B3  
                              _s3 01C8                                _s4 01BA                                _s5 01AC  
                              _s6 019E                                _s7 0190                                fsr 0004  
             ___wmul@multiplicand 0026                    _GetDigits$1183 0039                       __CFG_LVP$ON 0000  
                             l125 0561                               l142 0E23                               l135 0F31  
                             l119 0510                               l128 0589                               l145 0D86  
                             l313 0D0B                               l138 0DD6                               l162 07C0  
                             l250 0214                               l234 031D                               l316 0C76  
                             l420 0CC2                               l236 008A                               l157 0752  
                             l422 0CDA                               l281 0C4E                               l290 07FA  
                             l274 04B5                               l284 0CA7                               l293 0C24  
                             l446 0C8D                               l287 0CB3                               l295 0C28  
                             l296 0C2B                               l573 0FFF                               l485 059E  
                             l495 0626                               l586 0ED6                      __CFG_CPD$OFF 0000  
                             _ISR 0E24                               _car 005A                               _map 0D0C  
                             fsr0 0004                               indf 0000                      ___awmod@sign 002A  
                    __CFG_FOSC$HS 0000                              ?_ISR 0070                              l3002 0091  
                            l3100 03B3                              l3004 00D8                              l3012 01AD  
                            l3102 03B7                              l3110 03CB                              l3030 01FD  
                            l3006 011F                              l3014 01C2                              l3120 044C  
                            l3112 03EB                              l3104 03BD                              l3040 020D  
                            l3024 01DB                              l3016 01CA                              l3008 0166  
                            l3122 0451                              l3114 042B                              l3106 03BE  
                            l3130 0480                              l3050 02DD                              l3042 0216  
                            l3026 01EA                              l3018 01D7                              l3140 04B9  
                            l3124 0456                              l3132 0493                              l3116 0433  
                            l3108 03C5                              l3052 02E0                              l3044 02AA  
                            l3036 0200                              l3028 01F0                              l3142 04BD  
                            l3134 04AB                              l3126 046B                              l3118 0438  
                            l3062 02F5                              l3046 02BB                              l3038 0205  
                            l2600 0503                              l3136 04AF                              l3080 0327  
                            l3064 02FB                              l3056 02E7                              l3048 02CC  
                            l3072 0308                              l2610 0525                              l2602 0516  
                            l3138 04B3                              l3090 0341                              l3082 032B  
                            l3074 0323                              l3066 02FE                              l3058 02EC  
                            l2700 05B1                              l2612 0532                              l2604 051E  
                            l3092 0349                              l3084 032D                              l3076 0324  
                            l3068 0304                              l2710 05D5                              l2702 05B9  
                            l2630 0567                              l3094 0355                              l3078 0325  
                            l3086 0337                              l2800 0EBB                              l2720 0608  
                            l2712 05DE                              l2704 05C1                              l2640 0588  
                            l2632 0574                              l2624 053A                              l2608 051F  
                            l3096 0375                              l3088 033D                              l3280 01B4  
                            l2802 0EC2                              l2730 0F97                              l2650 0D6C  
                            l2714 05F0                              l2706 05C4                              l2722 060E  
                            l2626 054E                              l2618 0536                              l3098 03AD  
                            l3282 0315                              l2804 0EC8                              l2740 0FA9  
                            l2732 0F9A                              l2820 0640                              l2652 0D7A  
                            l2644 0D44                              l2900 077B                              l2724 0613  
                            l2716 05FE                              l2708 05D1                              l2812 0D0C  
                            l2636 0575                              l2628 0554                              l2580 04E1  
                            l2660 0C29                              l3284 0488                              l2806 0ECD  
                            l2750 0FBD                              l2742 0FAE                              l2734 0F9E  
                            l2822 065C                              l3286 0733                              l2654 0D82  
                            l2646 0D53                              l2902 078E                              l2726 061E  
                            l2718 05FF                              l2910 0C40                              l2670 0CD0  
                            l2662 0CB4                              l2638 057B                              l2590 04E5  
                            l2582 04E2                              l2808 0ED2                              l2760 0FE3  
                            l2752 0FC4                              l2744 0FB2                              l2736 0FA3  
                            l2824 0699                              l2816 062A                              l2648 0D5B  
                            l2680 0C7F                              l2904 07BB                              l2920 07F7  
                            l2840 0EDC                              l2912 0C43                              l2672 0CD6  
                            l2664 0CB8                              l2584 04E3                              l2576 04C5  
                            l2850 0DD6                              l2770 0FFB                              l2762 0FE4  
                            l2754 0FC8                              l2746 0FB4                              l2738 0FA5  
                            l2826 06AC                              l2818 062B                              l2682 0C83  
                            l2690 058A                              l2922 07F8                              l2842 0F1D  
                            l2834 0EDB                              l2914 0C47                              l2666 0CBC  
                            l2578 04D4                              l2658 0C24                              l2780 0E88  
                            l2852 0DFE                              l2764 0FEB                              l2756 0FCC  
                            l2748 0FBA                              l2684 0C85                              l2676 0C7A  
                            l2692 058D                              l2924 07F9                              l2916 07C1  
                            l2844 0F21                              l2828 0EDA                              l2908 0C3C  
                            l2668 0CC9                              l2596 04E9                              l2940 0D05  
                            l2942 0C91                              l2790 0E9C                              l2782 0E8A  
                            l2774 0E7C                              l2854 0E07                              l2758 0FDD  
                            l2766 0FF1                              l2870 06E9                              l2862 06C6  
                            l2686 0C8C                              l2678 0C7B                              l2694 0591  
                            l2918 07C9                              l2846 0F27                              l2598 04FD  
                            l2934 0CF2                              l2926 0CDE                              ?_map 0034  
                            l2944 0C9D                              l2792 0EA3                              l2784 0E8E  
                            l2776 0E7F                              l2768 0FF6                              l2880 0742  
                            l2872 070A                              l2856 06C3                              l2952 0C65  
                            l2696 05A2                              l2848 0F2B                              l2936 0CFB  
                            l2928 0CF1                              l2946 0CA4                              l2794 0EA7  
                            l2786 0E93                              l2778 0E83                              l2882 0748  
                            l2954 0C74                              l2890 0756                              l2698 05AD  
                            l2938 0D01                              l2970 0045                              l2948 0CAB  
                            l2796 0EAB                              l2788 0E99                              l2884 074C  
                            l2868 06C8                              l2876 072B                              l2892 0757  
                            l2980 0050                              l2972 0046                              l2798 0EB5  
                            l2878 073E                              l2990 006C                              l2982 0052  
                            l2974 0048                              l2896 075E                              l2992 0083  
                            l2984 0054                              l2976 004A                              l2968 003F  
                            l2898 076D                              l2986 005C                              l2978 004C  
                            l2996 008C                              l2988 0061                              u2200 0588  
                            u2201 0587                              u2130 0510                              u2131 050F  
                            u2115 04D7                              u2300 05A2                              u2140 0516  
                            u2124 04F5                              u2220 0C28                              u2301 05A1  
                            u2205 0584                              u2141 0515                              u2125 04F3  
                            u2221 0C27                              u2310 05C1                              u2230 0CBC  
                            u2150 0532                              u2215 0D61                              u2311 05C0  
                            u2231 0CBB                              u2151 0531                              u2135 050C  
                            u2400 0FA9                              u2401 0FA8                              u2410 0FBA  
                            u2330 05D5                              u2170 0561                              u2411 0FB9  
                            u2331 05D4                              u2171 0560                              u2155 052E  
                            u2500 0E8E                              u2260 0CD6                              u2180 0567  
                            u2164 0546                              u2501 0E8D                              u2325 05C6  
                            u2261 0CD5                              u2245 0CC3                              u2181 0566  
                            u2165 0544                              u2510 0E99                              u2430 0FCC  
                            u2270 0C7F                              u2350 05F0                              u2511 0E98  
                            u2431 0FCB                              u2271 0C7E                              u2351 05EF  
                            u2255 0CCA                              u2175 055D                              u2280 0C8C  
                            u2600 0F31                              u2425 0FBE                              u2281 0C8B  
                            u2345 05D7                              u2601 0F30                              u2530 0EAB  
                            u2610 0DFE                              u2450 0FDD                              u2370 060E  
                            u2290 0591                              u2194 056D                              u2531 0EAA  
                            u2611 0DFD                              u2451 0FDC                              u2371 060D  
                            u2355 05EC                              u2291 0590                              u2195 056B  
                            u2700 0CAB                              u2540 0EB5                              u2620 0E07  
                            u2380 0613                              u2701 0CAA                              u2541 0EB4  
                            u2525 0E9D                              u2621 0E06                              u2445 0FCD  
                            u2381 0612                              u2365 0600                              u2470 0FF1  
                            u2390 0F9E                              u2630 0748                              u2471 0FF0  
                            u2455 0FD9                              u2391 0F9D                              u2631 0747  
                            u2560 0EC8                              u2480 0FF6                              u2640 0752  
                            u2800 032B                              u2720 0089                              u2561 0EC7  
                            u2545 0EB1                              u2481 0FF5                              u2465 0FE5  
                            u2641 0751                              u2801 032A                              u2721 0088  
                            u2570 0ECD                              u2490 0E83                              u2650 075D  
                            u2810 033D                              u2730 01D7                              u2571 0ECC  
                            u2555 0EBC                              u2491 0E82                              u2651 075C  
                            u2811 033C                              u2731 01D6                              u2580 065C  
                            u2900 04AF                              u2820 0341                              u2740 01FD  
                            u2581 065B                              u2901 04AE                              u2821 0340  
                            u2741 01FC                              u2670 07D8                              u2590 0F27  
                            u2910 04B3                              u2830 03AD                              u2750 0213  
                            u2591 0F26                              u2911 04B2                              u2831 03AC  
                            u2751 0212                              u2735 01D3                              u2680 0D0B  
                            u2920 04B9                              u2840 03BD                              u2760 02E6  
                            u2585 0658                              u2665 0783                              u2681 0D0A  
                            u2921 04B8                              u2841 03BC                              u2761 02E5  
                            u2745 01F9                              u2930 04BD                              u2850 03C5  
                            u2770 02FB                              u2675 07D3                              u2931 04BC  
                            u2851 03C4                              u2771 02FA                              u2860 0432  
                            u2780 0304                              u2861 0431                              u2781 0303  
                            u2870 0438                              u2790 0323                              u2695 0C94  
                            u2871 0437                              u2791 0322                              u2880 0451  
                            u2881 0450                              u2890 0456                              u2891 0455  
                            _RCIF 0065                              u2957 0C4B                              u2967 0CA1  
                            _TMR0 0001                              _TXIF 0064                      __CFG_WRT$OFF 0000  
                            _disp 0051                              _main 003F                              _time 004E  
                            map@x 0034                              btemp 007E                  __end_of_ADC_Read 0CB4  
                   __CFG_BOREN$ON 0000                       main@umidita 01D7                              start 0010  
                 __end_of_GetTime 0D87                 ___bmul@multiplier 0027                             ??_ISR 0020  
       __size_of_conteggioVeicoli 0065                             ??_map 003E                   __end_of___aldiv 0627  
                           ?_main 0070                   __end_of___awdiv 1000                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 0ED7                   ___awdiv@divisor 002B                             _T1CON 0010  
                           i1l305 0C18                             i1l307 0C1E                             i1l308 0C20  
                           i1l324 0F96                             i1l334 0E73                             i1l168 0DD2  
                 ___awdiv@counter 0030                             _RCREG 001A              UpdateTimes@_semafori 0034  
                           _TMR1H 000F                             _TMR1L 000E                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _TRISE 0089  
                           _TXREG 0019                _ChangeTrafficLight 0DD3                     __CFG_PWRTE$ON 0000  
              __size_of_UART_Init 003A                __size_of_UART_Read 0009                   __end_of_display 0811  
                           _count 004A                             _unita 0065                             main@i 01E0  
                           _truck 0056               ?_ChangeTrafficLight 002B                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 0013  
                    __end_of_main 04C2              ??_ChangeTrafficLight 002C         __size_of_SetReceivedTimes 006E  
              __size_of_GetDigits 009C                            ??_main 0040                 SetDefaultTimers@i 0033  
               SetDefaultTimers@l 0032                __size_of_BuildByte 00C8                        _SetDisplay 0C62  
                          _ADCON0 001F                            _ADCON1 009F                __size_of_Conteggio 004C  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 002D  
                          i1l2200 0F6D                            i1l2202 0F88                            i1l2204 0F8C  
                          i1l2206 0F90                            i1l2182 0C18                            i1l2190 0F52  
                          i1l2430 0E31                            i1l2422 0E24                            i1l2184 0C1F  
                          i1l2432 0E35                            i1l2440 0E4C                            i1l2424 0E28  
                          i1l2194 0F53                            i1l2450 0E5E                            i1l2442 0E50  
                          i1l2434 0E39                            i1l2426 0E2C                            i1l2196 0F5C  
                          i1l2188 0F32                            i1l2460 0E6B                            i1l2452 0E5F  
                          i1l2444 0E51                            i1l2436 0E47                            i1l2428 0E2F  
                          i1l2198 0F65                            i1l2462 0E6F                            i1l2454 0E63  
                          i1l2446 0E56                            i1l2438 0E4B                            i1l2464 0E71  
                          i1l2456 0E69                            u210_20 0E69                            i1l2448 0E5A  
                          u210_21 0E68                            i1l2458 0E6A                            i1l1880 0DB9  
                          i1l1872 0D87                            i1l1882 0DC2                            i1l1874 0D90  
                          i1l1876 0DA0                            i1l1878 0DA9                            u124_20 0D90  
                          u204_20 0E28                            u124_21 0D8F                            u204_21 0E27  
                          u125_20 0DA9                            u205_20 0E2C                            u125_21 0DA8  
                          u205_21 0E2B                            u126_20 0DC2                            u206_20 0E35  
                          u126_21 0DC1                            u206_21 0E34                            u207_20 0E39  
                          u207_21 0E38                            u208_20 0E50                            u208_21 0E4F  
                          u209_20 0E5E                            _INTCON 000B                            u209_21 0E5D  
                          u176_20 0C1E                            u176_21 0C1D                            u177_20 0F5C  
                          u177_21 0F5B                            u178_20 0F6D                            u178_21 0F6C  
                          u179_20 0F96                            u179_21 0F95                            _TMR0IF 005A  
                          _TMR1IF 0060                         ??_GetTime 0026     ChangeTrafficLight@_n_semafori 002B  
                    ?_UART_TxChar 0070                 __end_of_UART_Init 07FB                 __end_of_UART_Read 0C21  
                          ___bmul 0C77                         ??___aldiv 002C                   GetTime@shortInt 0029  
                          ___wmul 0CB4                         ??___awdiv 002F                            _decine 0064  
                       ??___awmod 0028                  __end_of_init_ADC 0C4F                            _cycled 0052  
                ___awdiv@quotient 0032                   ___awmod@divisor 0024                   ___awmod@counter 0029  
                __end_of_sendByte 0D0C                   GetDigits@decine 0034                     main@pressione 01D8  
                       ?_ADC_Read 0024                            saved_w 007E           __end_of__initialization 003B  
               __end_of_GetDigits 06C3                     ??_UpdateTimes 0024         __size_of_SetDefaultTimers 0090  
             ___bmul@multiplicand 0024                    __pcstackCOMMON 0070                 __end_of_BuildByte 058A  
                    __pidataBANK1 0C2C                  _conteggioVeicoli 0F32                 __end_of_Conteggio 0DD3  
                      ??_ADC_Read 0026            SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C  
                     ?_SetDisplay 0024                     GetDigits@Time 0036              _dataFromGatewayIndex 004D  
            _timerReadFromGateway 004C                        __pbssBANK0 004A                        __pbssBANK1 00A0  
                      __pbssBANK3 0190                        __pmaintext 003F                           ?___bmul 0024  
                         ?___wmul 0024               __end_of_UpdateTimes 0F32                     sendByte@byte0 003D  
                   sendByte@byte1 0038                        __pintentry 0004                  _SetReceivedTimes 0753  
                      __stringtab 0800                         ?_init_ADC 0070                           _GetTime 0D41  
                 BuildByte@valore 0025                   BuildByte@txByte 0029           GetTime@_dataFromGateway 0024  
                       ?_sendByte 0038              __size_of_UART_TxChar 000B                           ___aldiv 058A  
                 __size_of___bmul 0017                           ___awdiv 0F97                           ___awmod 0E7C  
             __size_of_SetDisplay 0015                   __size_of___wmul 0027                 conteggioVeicoli@i 007D  
                         __ptext1 0CDB                           __ptext2 0C21                           __ptext3 04C2  
                         __ptext4 0D0C                           __ptext5 0CB4                           __ptext6 0C3C  
                         __ptext7 0ED7                           __ptext8 07C1                           __ptext9 058A  
                         _comando 004F                           _display 0806                      __size_of_ISR 0058  
                    __size_of_map 0035                  ___awmod@dividend 0026                  ___aldiv@dividend 0028  
            BuildByte@sommaColumn 002F                           clrloop0 0C11              end_of_initialization 003B  
                      ??_init_ADC 0024                    main@lux_select 01DD                       _UpdateTimes 0ED7  
                      ??_sendByte 003A                  _SetDefaultTimers 06C3                         _RCSTAbits 0018  
                ___aldiv@quotient 002F       __size_of_ChangeTrafficLight 0051                        _motorcycle 005E  
                       _UART_Init 07C1                         _UART_Read 0C18             SetReceivedTimes@index 0038  
                       _PORTAbits 0005                         _PORTBbits 0006                      SetDisplay@d1 0027  
                    SetDisplay@d2 0024                      SetDisplay@d3 0025                         _TRISCbits 0087  
               __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0F97                        map@out_max 003C  
                      map@out_min 003A  SetReceivedTimes@_dataFromGateway 0037                         _TXSTAbits 0098  
                       _GetDigits 0627                    __end_of___bmul 0C8E                    __end_of___wmul 0CDB  
                      ?_UART_Init 0033                        ?_UART_Read 0070                         _BuildByte 04C2  
                       _Conteggio 0D87                 BuildByte@sommaRow 002E               start_initialization 0013  
                     __end_of_ISR 0E7C                      ??_SetDisplay 0027                       __end_of_map 0D41  
        __end_of_SetReceivedTimes 07C1                        ?_GetDigits 0034                          ??___bmul 0025  
                  ADC_Read@canale 0027                          ??___wmul 0028                        init_fetch0 0C4F  
                     __pdataBANK1 00DD                __end_of_SetDisplay 0C77                        ?_BuildByte 0024  
                  GetDigits@unita 0035                        ?_Conteggio 0070                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK3 01D6                          ?_GetTime 0024  
           SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024                 __size_of_init_ADC 0013  
     ChangeTrafficLight@_semafori 0032                         _centinaia 0063                 __size_of_sendByte 0031  
                        ?___aldiv 0024                          ?___awdiv 002B                          ?___awmod 0024  
                     ??_UART_Init 0035                       ??_UART_Read 0070                    BuildByte@i_332 0036  
                       __pstrings 0800                    BuildByte@y_333 0032                    sendByte@valore 0039  
                  sendByte@txByte 003E                    BuildByte@byte0 0028                    BuildByte@byte1 0024  
        __end_of_SetDefaultTimers 0753                          _ADC_Read 0C8E                         _count_lux 0050  
                   UART_TxChar@ch 0024                       _id_semaforo 0062                   ___aldiv@divisor 0024  
               SetReceivedTimes@i 0039                 interrupt_function 0004                   ___aldiv@counter 002D  
                  ___wmul@product 0028        SetReceivedTimes@semaforoId 0035                      ?_UpdateTimes 0070  
                       clear_ram0 0C10                          _PIE1bits 008C                     ??_UART_TxChar 0024  
                     ??_GetDigits 0038                          _GO_nDONE 00FA                 UART_Init@baudrate 0033  
                     ??_BuildByte 0026                         map@in_max 0038                         map@in_min 0036  
                     __stringbase 0805                         main@i_466 01DE                         main@i_467 01DB  
                       main@i_469 01DC                       ??_Conteggio 0076                 ___wmul@multiplier 0024  
                    GetTime@index 0028                      _RoadsSensors 00A0                 ?_conteggioVeicoli 0070  
                    _secondPassed 0053                ??_conteggioVeicoli 0079                  __size_of_GetTime 0046  
                        _Semafori 00DD                GetDigits@centinaia 003B        __end_of_ChangeTrafficLight 0E24  
                     _readGateway 0054                  __size_of___aldiv 009D               __end_of_UART_TxChar 0C2C  
                __size_of___awdiv 0069                  __size_of___awmod 005B                __end_of__stringtab 0806  
                       sendByte@i 003F                          __ptext10 0753                          __ptext11 0C77  
                        __ptext20 0E24                          __ptext12 0D41                          __ptext21 0F32  
                        __ptext13 0C62                          __ptext22 0D87                          __ptext14 06C3  
                        __ptext23 0C18                          __ptext15 0627                          __ptext16 0F97  
                        __ptext17 0DD3                          __ptext18 0E7C                          __ptext19 0C8E  
                        _init_ADC 0C3C                 ?_SetReceivedTimes 002C                     __size_of_main 0483  
                 _dataFromGateway 00A4                          _sendByte 0CDB                ??_SetReceivedTimes 002D  
                        main@temp 01D6                          main@time 01D9                        _INTCONbits 000B  
                        init_ram0 0C53              Conteggio@_motorcycle 0072                          intlevel1 0000  
                 _readGatewayDone 0055                         stringcode 0800                       _UART_TxChar 0C21  
         SetReceivedTimes@colorId 0036              __size_of_UpdateTimes 005B                        GetTime@tmp 002A  
                      _OPTION_REG 0081                   SetDisplay@value 0026                          stringdir 0800  
                        stringtab 0800                      UpdateTimes@i 0036                      UpdateTimes@l 0035  
               ?_SetDefaultTimers 0024                      ___aldiv@sign 002E                ??_SetDefaultTimers 002B  
                      BuildByte@i 0034                        BuildByte@y 0030         SetDefaultTimers@_semafori 002A  
                 Conteggio@_count 0070                     Conteggio@_car 0073                   Conteggio@_truck 0074  
                  Conteggio@index 0075  
