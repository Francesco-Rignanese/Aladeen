

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 09 12:03:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	idataBANK1
   200  0BBC                     __pidataBANK1:	
   201                           
   202                           ;initializer for _Semafori
   203  0BBC  34CF               	retlw	low (_s0| 0)
   204  0BBD  3400               	retlw	high (_s0| 0)
   205  0BBE  34C1               	retlw	low (_s1| 0)
   206  0BBF  3400               	retlw	high (_s1| 0)
   207  0BC0  34B3               	retlw	low (_s2| 0)
   208  0BC1  3400               	retlw	high (_s2| 0)
   209  0BC2  34C8               	retlw	low (_s3| (0+256))
   210  0BC3  3401               	retlw	high (_s3| (0+256))
   211  0BC4  34BA               	retlw	low (_s4| (0+256))
   212  0BC5  3401               	retlw	high (_s4| (0+256))
   213  0BC6  34AC               	retlw	low (_s5| (0+256))
   214  0BC7  3401               	retlw	high (_s5| (0+256))
   215  0BC8  349E               	retlw	low (_s6| (0+256))
   216  0BC9  3401               	retlw	high (_s6| (0+256))
   217  0BCA  3490               	retlw	low (_s7| (0+256))
   218  0BCB  3401               	retlw	high (_s7| (0+256))
   219                           
   220                           	psect	strings
   221  0800                     __pstrings:	
   222  0800                     stringtab:	
   223  0800                     __stringtab:	
   224  0800                     stringcode:	
   225                           ;	String table - string pointers are 1 byte each
   226                           
   227  0800                     stringdir:	
   228  0800  3008               	movlw	high stringdir
   229  0801  008A               	movwf	10
   230  0802  0804               	movf	4,w
   231  0803  0A84               	incf	4,f
   232  0804  0782               	addwf	2,f
   233  0805                     __stringbase:	
   234  0805  3400               	retlw	0
   235  0806                     __end_of__stringtab:	
   236  0806                     _display:	
   237  0806  343F               	retlw	63
   238  0807  3406               	retlw	6
   239  0808  345B               	retlw	91
   240  0809  344F               	retlw	79
   241  080A  3466               	retlw	102
   242  080B  346D               	retlw	109
   243  080C  347D               	retlw	125
   244  080D  3407               	retlw	7
   245  080E  347F               	retlw	127
   246  080F  346F               	retlw	111
   247  0810  3400               	retlw	0
   248  0811                     __end_of_display:	
   249  0811                     _n_semafori:	
   250  0811  3408               	retlw	8
   251  0812                     __end_of_n_semafori:	
   252  0007                     _PORTCbits	set	7
   253  0006                     _PORTBbits	set	6
   254  0008                     _PORTD	set	8
   255  0005                     _PORTAbits	set	5
   256  001A                     _RCREG	set	26
   257  0019                     _TXREG	set	25
   258  000B                     _INTCONbits	set	11
   259  0018                     _RCSTAbits	set	24
   260  001E                     _ADRESH	set	30
   261  001F                     _ADCON0	set	31
   262  000E                     _TMR1L	set	14
   263  000F                     _TMR1H	set	15
   264  0010                     _T1CON	set	16
   265  0001                     _TMR0	set	1
   266  000B                     _INTCON	set	11
   267  0060                     _TMR1IF	set	96
   268  005A                     _TMR0IF	set	90
   269  0065                     _RCIF	set	101
   270  0064                     _TXIF	set	100
   271  00FA                     _GO_nDONE	set	250
   272  008C                     _PIE1bits	set	140
   273  0099                     _SPBRG	set	153
   274  0098                     _TXSTAbits	set	152
   275  0087                     _TRISCbits	set	135
   276  009E                     _ADRESL	set	158
   277  009F                     _ADCON1	set	159
   278  0085                     _TRISA	set	133
   279  0081                     _OPTION_REG	set	129
   280  0089                     _TRISE	set	137
   281  0088                     _TRISD	set	136
   282  0087                     _TRISC	set	135
   283  0086                     _TRISB	set	134
   284                           
   285                           ; #config settings
   286  0000                     
   287                           	psect	cinit
   288  0013                     start_initialization:	
   289  0013                     __initialization:	
   290                           
   291                           ; Initialize objects allocated to BANK1
   292  0013  1383               	bcf	3,7	;select IRP bank0
   293  0014  30ED               	movlw	low (__pdataBANK1+16)
   294  0015  00FD               	movwf	btemp+-1
   295  0016  300B               	movlw	high __pidataBANK1
   296  0017  00FE               	movwf	btemp
   297  0018  30BC               	movlw	low __pidataBANK1
   298  0019  00FF               	movwf	btemp+1
   299  001A  30DD               	movlw	low __pdataBANK1
   300  001B  0084               	movwf	4
   301  001C  120A  158A  23E3  120A  118A  	fcall	init_ram0
   302                           
   303                           ; Clear objects allocated to BANK3
   304  0021  1783               	bsf	3,7	;select IRP bank2
   305  0022  3090               	movlw	low __pbssBANK3
   306  0023  0084               	movwf	4
   307  0024  30D6               	movlw	low (__pbssBANK3+70)
   308  0025  120A  158A  23A0  120A  118A  	fcall	clear_ram0
   309                           
   310                           ; Clear objects allocated to BANK1
   311  002A  1383               	bcf	3,7	;select IRP bank0
   312  002B  30A0               	movlw	low __pbssBANK1
   313  002C  0084               	movwf	4
   314  002D  30DD               	movlw	low (__pbssBANK1+61)
   315  002E  120A  158A  23A0  120A  118A  	fcall	clear_ram0
   316                           
   317                           ; Clear objects allocated to BANK0
   318  0033  304A               	movlw	low __pbssBANK0
   319  0034  0084               	movwf	4
   320  0035  3065               	movlw	low (__pbssBANK0+27)
   321  0036  120A  158A  23A0  120A  118A  	fcall	clear_ram0
   322  003B                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  003B                     __end_of__initialization:	
   326  003B  0183               	clrf	3
   327  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssBANK0
   330  004A                     __pbssBANK0:	
   331  004A                     _count:	
   332  004A                     	ds	2
   333  004C                     _timerReadFromGateway:	
   334  004C                     	ds	1
   335  004D                     _dataFromGatewayIndex:	
   336  004D                     	ds	1
   337  004E                     _time:	
   338  004E                     	ds	1
   339  004F                     _comando:	
   340  004F                     	ds	1
   341  0050                     _count_lux:	
   342  0050                     	ds	1
   343  0051                     _disp:	
   344  0051                     	ds	1
   345  0052                     _cycled:	
   346  0052                     	ds	1
   347  0053                     _secondPassed:	
   348  0053                     	ds	1
   349  0054                     _readGateway:	
   350  0054                     	ds	1
   351  0055                     _readGatewayDone:	
   352  0055                     	ds	1
   353  0056                     _truck:	
   354  0056                     	ds	4
   355  005A                     _car:	
   356  005A                     	ds	4
   357  005E                     _motorcycle:	
   358  005E                     	ds	4
   359  0062                     _centinaia:	
   360  0062                     	ds	1
   361  0063                     _decine:	
   362  0063                     	ds	1
   363  0064                     _unita:	
   364  0064                     	ds	1
   365                           
   366                           	psect	bssBANK1
   367  00A0                     __pbssBANK1:	
   368  00A0                     _RoadsSensors:	
   369  00A0                     	ds	4
   370  00A4                     _dataFromGateway:	
   371  00A4                     	ds	15
   372  00B3                     _s2:	
   373  00B3                     	ds	14
   374  00C1                     _s1:	
   375  00C1                     	ds	14
   376  00CF                     _s0:	
   377  00CF                     	ds	14
   378                           
   379                           	psect	dataBANK1
   380  00DD                     __pdataBANK1:	
   381  00DD                     _Semafori:	
   382  00DD                     	ds	16
   383                           
   384                           	psect	bssBANK3
   385  0190                     __pbssBANK3:	
   386  0190                     _s7:	
   387  0190                     	ds	14
   388  019E                     _s6:	
   389  019E                     	ds	14
   390  01AC                     _s5:	
   391  01AC                     	ds	14
   392  01BA                     _s4:	
   393  01BA                     	ds	14
   394  01C8                     _s3:	
   395  01C8                     	ds	14
   396                           
   397                           	psect	inittext
   398  0BDF                     init_fetch0:	
   399                           ;	Called with low address in FSR and high address in W
   400                           
   401  0BDF  087E               	movf	btemp,w
   402  0BE0  008A               	movwf	10
   403  0BE1  087F               	movf	btemp+1,w
   404  0BE2  0082               	movwf	2
   405  0BE3                     init_ram0:	
   406                           ;Called with:
   407                           ;	high address of idata address in btemp 
   408                           ;	low address of idata address in btemp+1 
   409                           ;	low address of data in FSR
   410                           ;	high address + 1 of data in btemp-1
   411                           
   412  0BE3  120A  158A  23DF  120A  158A  	fcall	init_fetch0
   413  0BE8  0080               	movwf	0
   414  0BE9  0A84               	incf	4,f
   415  0BEA  0804               	movf	4,w
   416  0BEB  067D               	xorwf	btemp+-1,w
   417  0BEC  1903               	btfsc	3,2
   418  0BED  3400               	retlw	0
   419  0BEE  0AFF               	incf	btemp+1,f
   420  0BEF  1903               	btfsc	3,2
   421  0BF0  0AFE               	incf	btemp,f
   422  0BF1  2BE3               	goto	init_ram0
   423                           
   424                           	psect	clrtext
   425  0BA0                     clear_ram0:	
   426                           ;	Called with FSR containing the base address, and
   427                           ;	W with the last address+1
   428                           
   429  0BA0  0064               	clrwdt	;clear the watchdog before getting into this loop
   430  0BA1                     clrloop0:	
   431  0BA1  0180               	clrf	0	;clear RAM location pointed to by FSR
   432  0BA2  0A84               	incf	4,f	;increment pointer
   433  0BA3  0604               	xorwf	4,w	;XOR with final address
   434  0BA4  1903               	btfsc	3,2	;have we reached the end yet?
   435  0BA5  3400               	retlw	0	;all done for this memory range, return
   436  0BA6  0604               	xorwf	4,w	;XOR again to restore value
   437  0BA7  2BA1               	goto	clrloop0	;do the next byte
   438                           
   439                           	psect	cstackBANK3
   440  01D6                     __pcstackBANK3:	
   441  01D6                     main@temp:	
   442                           
   443                           ; 1 bytes @ 0x0
   444  01D6                     	ds	1
   445  01D7                     main@umidita:	
   446                           
   447                           ; 1 bytes @ 0x1
   448  01D7                     	ds	1
   449  01D8                     main@pressione:	
   450                           
   451                           ; 1 bytes @ 0x2
   452  01D8                     	ds	1
   453  01D9                     main@time:	
   454                           
   455                           ; 2 bytes @ 0x3
   456  01D9                     	ds	2
   457  01DB                     main@i_489:	
   458                           
   459                           ; 1 bytes @ 0x5
   460  01DB                     	ds	1
   461  01DC                     main@i_491:	
   462                           
   463                           ; 1 bytes @ 0x6
   464  01DC                     	ds	1
   465  01DD                     main@i_488:	
   466                           
   467                           ; 2 bytes @ 0x7
   468  01DD                     	ds	2
   469  01DF                     main@lux_select:	
   470                           
   471                           ; 1 bytes @ 0x9
   472  01DF                     	ds	1
   473  01E0                     main@i_493:	
   474                           
   475                           ; 1 bytes @ 0xA
   476  01E0                     	ds	1
   477  01E1                     main@i:	
   478                           
   479                           ; 2 bytes @ 0xB
   480  01E1                     	ds	2
   481                           
   482                           	psect	cstackCOMMON
   483  0070                     __pcstackCOMMON:	
   484  0070                     ?_init_ADC:	
   485  0070                     ?_ShowDigitsOnDisplay:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_UpdateTimes:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_Conteggio:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_main:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_UART_TxChar:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_UART_Read:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ??_UART_Read:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_conteggioVeicoli:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_ISR:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     Conteggio@_count:	
   513                           ; 1 bytes @ 0x0
   514                           
   515                           
   516                           ; 2 bytes @ 0x0
   517  0070                     	ds	2
   518  0072                     Conteggio@_motorcycle:	
   519                           
   520                           ; 1 bytes @ 0x2
   521  0072                     	ds	1
   522  0073                     Conteggio@_car:	
   523                           
   524                           ; 1 bytes @ 0x3
   525  0073                     	ds	1
   526  0074                     Conteggio@_truck:	
   527                           
   528                           ; 1 bytes @ 0x4
   529  0074                     	ds	1
   530  0075                     Conteggio@index:	
   531                           
   532                           ; 1 bytes @ 0x5
   533  0075                     	ds	1
   534  0076                     ??_Conteggio:	
   535                           
   536                           ; 1 bytes @ 0x6
   537  0076                     	ds	3
   538  0079                     ??_conteggioVeicoli:	
   539                           
   540                           ; 1 bytes @ 0x9
   541  0079                     	ds	4
   542  007D                     conteggioVeicoli@i:	
   543                           
   544                           ; 1 bytes @ 0xD
   545  007D                     	ds	1
   546                           
   547                           	psect	cstackBANK0
   548  0020                     __pcstackBANK0:	
   549  0020                     ??_ISR:	
   550                           
   551                           ; 1 bytes @ 0x0
   552  0020                     	ds	4
   553  0024                     ??_init_ADC:	
   554  0024                     ?_luciSemaforo:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  0024                     ?_BuildByte:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  0024                     ??_UpdateTimes:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0024                     ?_SetDefaultTimers:	
   564                           ; 1 bytes @ 0x4
   565                           
   566  0024                     ??_UART_TxChar:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0024                     ?_SetDisplay:	
   570                           ; 1 bytes @ 0x4
   571                           
   572  0024                     ?___bmul:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0024                     ?_ADC_Read:	
   576                           ; 1 bytes @ 0x4
   577                           
   578  0024                     ?_GetTime:	
   579                           ; 2 bytes @ 0x4
   580                           
   581  0024                     ?___wmul:	
   582                           ; 2 bytes @ 0x4
   583                           
   584  0024                     ?___awmod:	
   585                           ; 2 bytes @ 0x4
   586                           
   587  0024                     ?___aldiv:	
   588                           ; 2 bytes @ 0x4
   589                           
   590  0024                     BuildByte@byte1:	
   591                           ; 4 bytes @ 0x4
   592                           
   593  0024                     GetTime@_dataFromGateway:	
   594                           ; 1 bytes @ 0x4
   595                           
   596  0024                     UART_TxChar@ch:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0024                     SetDisplay@d2:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0024                     luciSemaforo@lux:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0024                     ___bmul@multiplicand:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0024                     SetDefaultTimers@rosso:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0024                     ___wmul@multiplier:	
   612                           ; 2 bytes @ 0x4
   613                           
   614  0024                     ___awmod@divisor:	
   615                           ; 2 bytes @ 0x4
   616                           
   617  0024                     ___aldiv@divisor:	
   618                           ; 2 bytes @ 0x4
   619                           
   620                           
   621                           ; 4 bytes @ 0x4
   622  0024                     	ds	1
   623  0025                     ??_luciSemaforo:	
   624  0025                     ??___bmul:	
   625                           ; 1 bytes @ 0x5
   626                           
   627  0025                     BuildByte@valore:	
   628                           ; 1 bytes @ 0x5
   629                           
   630  0025                     SetDisplay@d3:	
   631                           ; 1 bytes @ 0x5
   632                           
   633                           
   634                           ; 1 bytes @ 0x5
   635  0025                     	ds	1
   636  0026                     ??_ADC_Read:	
   637  0026                     ??_BuildByte:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0026                     ??_GetTime:	
   641                           ; 1 bytes @ 0x6
   642                           
   643  0026                     SetDisplay@value:	
   644                           ; 1 bytes @ 0x6
   645                           
   646  0026                     ___bmul@product:	
   647                           ; 1 bytes @ 0x6
   648                           
   649  0026                     SetDefaultTimers@verde:	
   650                           ; 1 bytes @ 0x6
   651                           
   652  0026                     ___wmul@multiplicand:	
   653                           ; 2 bytes @ 0x6
   654                           
   655  0026                     ___awmod@dividend:	
   656                           ; 2 bytes @ 0x6
   657                           
   658                           
   659                           ; 2 bytes @ 0x6
   660  0026                     	ds	1
   661  0027                     ??_SetDisplay:	
   662  0027                     ADC_Read@canale:	
   663                           ; 1 bytes @ 0x7
   664                           
   665  0027                     SetDisplay@d1:	
   666                           ; 1 bytes @ 0x7
   667                           
   668  0027                     luciSemaforo@index:	
   669                           ; 1 bytes @ 0x7
   670                           
   671  0027                     ___bmul@multiplier:	
   672                           ; 1 bytes @ 0x7
   673                           
   674                           
   675                           ; 1 bytes @ 0x7
   676  0027                     	ds	1
   677  0028                     ??___wmul:	
   678  0028                     ??___awmod:	
   679                           ; 1 bytes @ 0x8
   680                           
   681  0028                     BuildByte@byte0:	
   682                           ; 1 bytes @ 0x8
   683                           
   684  0028                     GetTime@index:	
   685                           ; 1 bytes @ 0x8
   686                           
   687  0028                     SetDefaultTimers@giallo:	
   688                           ; 1 bytes @ 0x8
   689                           
   690  0028                     ___wmul@product:	
   691                           ; 2 bytes @ 0x8
   692                           
   693  0028                     ___aldiv@dividend:	
   694                           ; 2 bytes @ 0x8
   695                           
   696                           
   697                           ; 4 bytes @ 0x8
   698  0028                     	ds	1
   699  0029                     GetTime@shortInt:	
   700  0029                     ___awmod@counter:	
   701                           ; 1 bytes @ 0x9
   702                           
   703  0029                     BuildByte@txByte:	
   704                           ; 1 bytes @ 0x9
   705                           
   706                           
   707                           ; 5 bytes @ 0x9
   708  0029                     	ds	1
   709  002A                     SetDefaultTimers@_semafori:	
   710  002A                     ___awmod@sign:	
   711                           ; 1 bytes @ 0xA
   712                           
   713  002A                     GetTime@tmp:	
   714                           ; 1 bytes @ 0xA
   715                           
   716                           
   717                           ; 2 bytes @ 0xA
   718  002A                     	ds	1
   719  002B                     ??_ShowDigitsOnDisplay:	
   720  002B                     ??_SetDefaultTimers:	
   721                           ; 1 bytes @ 0xB
   722                           
   723  002B                     ?___awdiv:	
   724                           ; 1 bytes @ 0xB
   725                           
   726  002B                     ___awdiv@divisor:	
   727                           ; 2 bytes @ 0xB
   728                           
   729                           
   730                           ; 2 bytes @ 0xB
   731  002B                     	ds	1
   732  002C                     ?_SetReceivedTimes:	
   733  002C                     ??___aldiv:	
   734                           ; 1 bytes @ 0xC
   735                           
   736  002C                     SetReceivedTimes@_semafori:	
   737                           ; 1 bytes @ 0xC
   738                           
   739                           
   740                           ; 1 bytes @ 0xC
   741  002C                     	ds	1
   742  002D                     ??_SetReceivedTimes:	
   743  002D                     ___aldiv@counter:	
   744                           ; 1 bytes @ 0xD
   745                           
   746  002D                     ___awdiv@dividend:	
   747                           ; 1 bytes @ 0xD
   748                           
   749                           
   750                           ; 2 bytes @ 0xD
   751  002D                     	ds	1
   752  002E                     BuildByte@sommaRow:	
   753  002E                     ___aldiv@sign:	
   754                           ; 1 bytes @ 0xE
   755                           
   756                           
   757                           ; 1 bytes @ 0xE
   758  002E                     	ds	1
   759  002F                     ??___awdiv:	
   760  002F                     BuildByte@sommaColumn:	
   761                           ; 1 bytes @ 0xF
   762                           
   763  002F                     ___aldiv@quotient:	
   764                           ; 1 bytes @ 0xF
   765                           
   766                           
   767                           ; 4 bytes @ 0xF
   768  002F                     	ds	1
   769  0030                     ___awdiv@counter:	
   770  0030                     BuildByte@y:	
   771                           ; 1 bytes @ 0x10
   772                           
   773                           
   774                           ; 2 bytes @ 0x10
   775  0030                     	ds	1
   776  0031                     ___awdiv@sign:	
   777                           
   778                           ; 1 bytes @ 0x11
   779  0031                     	ds	1
   780  0032                     SetDefaultTimers@l:	
   781  0032                     BuildByte@y_356:	
   782                           ; 1 bytes @ 0x12
   783                           
   784  0032                     ___awdiv@quotient:	
   785                           ; 2 bytes @ 0x12
   786                           
   787                           
   788                           ; 2 bytes @ 0x12
   789  0032                     	ds	1
   790  0033                     ?_UART_Init:	
   791  0033                     SetDefaultTimers@i:	
   792                           ; 1 bytes @ 0x13
   793                           
   794  0033                     UART_Init@baudrate:	
   795                           ; 1 bytes @ 0x13
   796                           
   797                           
   798                           ; 2 bytes @ 0x13
   799  0033                     	ds	1
   800  0034                     ?_GetDigits:	
   801  0034                     ?_map:	
   802                           ; 1 bytes @ 0x14
   803                           
   804  0034                     GetDigits@decine:	
   805                           ; 2 bytes @ 0x14
   806                           
   807  0034                     UpdateTimes@_semafori:	
   808                           ; 1 bytes @ 0x14
   809                           
   810  0034                     map@x:	
   811                           ; 1 bytes @ 0x14
   812                           
   813  0034                     BuildByte@i:	
   814                           ; 2 bytes @ 0x14
   815                           
   816                           
   817                           ; 2 bytes @ 0x14
   818  0034                     	ds	1
   819  0035                     ??_UART_Init:	
   820  0035                     GetDigits@unita:	
   821                           ; 1 bytes @ 0x15
   822                           
   823  0035                     UpdateTimes@l:	
   824                           ; 1 bytes @ 0x15
   825                           
   826  0035                     SetReceivedTimes@semaforoId:	
   827                           ; 1 bytes @ 0x15
   828                           
   829                           
   830                           ; 1 bytes @ 0x15
   831  0035                     	ds	1
   832  0036                     UpdateTimes@i:	
   833  0036                     SetReceivedTimes@colorId:	
   834                           ; 1 bytes @ 0x16
   835                           
   836  0036                     map@in_min:	
   837                           ; 1 bytes @ 0x16
   838                           
   839  0036                     GetDigits@Time:	
   840                           ; 2 bytes @ 0x16
   841                           
   842  0036                     BuildByte@i_355:	
   843                           ; 2 bytes @ 0x16
   844                           
   845                           
   846                           ; 2 bytes @ 0x16
   847  0036                     	ds	1
   848  0037                     SetReceivedTimes@_dataFromGateway:	
   849                           
   850                           ; 1 bytes @ 0x17
   851  0037                     	ds	1
   852  0038                     ?_sendByte:	
   853  0038                     ??_GetDigits:	
   854                           ; 1 bytes @ 0x18
   855                           
   856  0038                     SetReceivedTimes@index:	
   857                           ; 1 bytes @ 0x18
   858                           
   859  0038                     sendByte@byte1:	
   860                           ; 1 bytes @ 0x18
   861                           
   862  0038                     map@in_max:	
   863                           ; 1 bytes @ 0x18
   864                           
   865                           
   866                           ; 2 bytes @ 0x18
   867  0038                     	ds	1
   868  0039                     SetReceivedTimes@i:	
   869  0039                     sendByte@valore:	
   870                           ; 1 bytes @ 0x19
   871                           
   872  0039                     _GetDigits$1222:	
   873                           ; 1 bytes @ 0x19
   874                           
   875                           
   876                           ; 2 bytes @ 0x19
   877  0039                     	ds	1
   878  003A                     ??_sendByte:	
   879  003A                     map@out_min:	
   880                           ; 1 bytes @ 0x1A
   881                           
   882                           
   883                           ; 2 bytes @ 0x1A
   884  003A                     	ds	1
   885  003B                     GetDigits@centinaia:	
   886                           
   887                           ; 1 bytes @ 0x1B
   888  003B                     	ds	1
   889  003C                     map@out_max:	
   890                           
   891                           ; 2 bytes @ 0x1C
   892  003C                     	ds	1
   893  003D                     sendByte@byte0:	
   894                           
   895                           ; 1 bytes @ 0x1D
   896  003D                     	ds	1
   897  003E                     ??_map:	
   898  003E                     sendByte@txByte:	
   899                           ; 1 bytes @ 0x1E
   900                           
   901                           
   902                           ; 1 bytes @ 0x1E
   903  003E                     	ds	1
   904  003F                     sendByte@i:	
   905                           
   906                           ; 1 bytes @ 0x1F
   907  003F                     	ds	1
   908  0040                     ??_main:	
   909                           
   910                           ; 1 bytes @ 0x20
   911  0040                     	ds	10
   912                           
   913                           	psect	maintext
   914  003F                     __pmaintext:	
   915 ;;
   916 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   917 ;;
   918 ;; *************** function _main *****************
   919 ;; Defined at:
   920 ;;		line 125 in file "main.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  lux_select      1    9[BANK3 ] unsigned char 
   925 ;;  i               1    6[BANK3 ] unsigned char 
   926 ;;  i               1    5[BANK3 ] unsigned char 
   927 ;;  i               2    7[BANK3 ] int 
   928 ;;  i               2   11[BANK3 ] int 
   929 ;;  i               1   10[BANK3 ] unsigned char 
   930 ;;  time            2    3[BANK3 ] int 
   931 ;;  pressione       1    2[BANK3 ] unsigned char 
   932 ;;  umidita         1    1[BANK3 ] unsigned char 
   933 ;;  temp            1    0[BANK3 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : B00/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         0       0       0      13       0
   945 ;;      Temps:          0      10       0       0       0
   946 ;;      Totals:         0      10       0      13       0
   947 ;;Total ram usage:       23 bytes
   948 ;; Hardware stack levels required when called:    5
   949 ;; This function calls:
   950 ;;		_ADC_Read
   951 ;;		_GetDigits
   952 ;;		_SetDefaultTimers
   953 ;;		_SetReceivedTimes
   954 ;;		_ShowDigitsOnDisplay
   955 ;;		_UART_Init
   956 ;;		_UpdateTimes
   957 ;;		_init_ADC
   958 ;;		_luciSemaforo
   959 ;;		_map
   960 ;;		_sendByte
   961 ;; This function is called by:
   962 ;;		Startup code after reset
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _main
   968  003F                     _main:	
   969  003F                     l3283:	
   970                           ;incstack = 0
   971                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   972                           
   973                           
   974                           ;main.c: 127:     TRISB = 0x00;
   975  003F  1683               	bsf	3,5	;RP0=1, select bank1
   976  0040  1303               	bcf	3,6	;RP1=0, select bank1
   977  0041  0186               	clrf	6	;volatile
   978  0042                     l3285:	
   979                           
   980                           ;main.c: 128:     TRISC = 0x80;
   981  0042  3080               	movlw	128
   982  0043  0087               	movwf	7	;volatile
   983  0044                     l3287:	
   984                           
   985                           ;main.c: 129:     TRISD = 0x00;
   986  0044  0188               	clrf	8	;volatile
   987                           
   988                           ;main.c: 130:     TRISE = 0x01;
   989  0045  3001               	movlw	1
   990  0046  0089               	movwf	9	;volatile
   991                           
   992                           ;main.c: 131:     INTCON = 0xE0;
   993  0047  30E0               	movlw	224
   994  0048  008B               	movwf	11	;volatile
   995                           
   996                           ;main.c: 132:     OPTION_REG = 0x04;
   997  0049  3004               	movlw	4
   998  004A  0081               	movwf	1	;volatile
   999                           
  1000                           ;main.c: 133:     TMR0 = 6;
  1001  004B  3006               	movlw	6
  1002  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1003  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1004  004E  0081               	movwf	1	;volatile
  1005                           
  1006                           ;main.c: 134:     T1CON = 0x31;
  1007  004F  3031               	movlw	49
  1008  0050  0090               	movwf	16	;volatile
  1009                           
  1010                           ;main.c: 136:     TMR1H = 60;
  1011  0051  303C               	movlw	60
  1012  0052  008F               	movwf	15	;volatile
  1013                           
  1014                           ;main.c: 137:     TMR1L = 176;
  1015  0053  30B0               	movlw	176
  1016  0054  008E               	movwf	14	;volatile
  1017  0055                     l3289:	
  1018                           
  1019                           ;main.c: 140:     int time;;main.c: 141:     disp = 0;
  1020  0055  01D1               	clrf	_disp
  1021  0056                     l3291:	
  1022  0056                     l3293:	
  1023  0056                     l3295:	
  1024  0056                     l3297:	
  1025                           
  1026                           ;main.c: 146:     init_ADC();
  1027  0056  120A  158A  23CC  120A  118A  	fcall	_init_ADC
  1028  005B                     l3299:	
  1029                           
  1030                           ;main.c: 147:     UART_Init(9600);
  1031  005B  3080               	movlw	128
  1032  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1033  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1034  005E  00B3               	movwf	UART_Init@baudrate
  1035  005F  3025               	movlw	37
  1036  0060  00B4               	movwf	UART_Init@baudrate+1
  1037  0061  120A  118A  27C4  120A  118A  	fcall	_UART_Init
  1038  0066                     l3301:	
  1039                           
  1040                           ;main.c: 148:     SetDefaultTimers(1, 1, 1, Semafori);
  1041  0066  3001               	movlw	1
  1042  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0069  00A4               	movwf	SetDefaultTimers@rosso
  1045  006A  3000               	movlw	0
  1046  006B  00A5               	movwf	SetDefaultTimers@rosso+1
  1047  006C  3001               	movlw	1
  1048  006D  00A6               	movwf	SetDefaultTimers@verde
  1049  006E  3000               	movlw	0
  1050  006F  00A7               	movwf	SetDefaultTimers@verde+1
  1051  0070  3001               	movlw	1
  1052  0071  00A8               	movwf	SetDefaultTimers@giallo
  1053  0072  3000               	movlw	0
  1054  0073  00A9               	movwf	SetDefaultTimers@giallo+1
  1055  0074  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1056  0075  00C0               	movwf	??_main
  1057  0076  0840               	movf	??_main,w
  1058  0077  00AA               	movwf	SetDefaultTimers@_semafori
  1059  0078  120A  118A  2734  120A  118A  	fcall	_SetDefaultTimers
  1060  007D                     l3303:	
  1061                           
  1062                           ;main.c: 151:     {;main.c: 153:         if (readGateway.Bit)
  1063  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1064  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1065  007F  1C54               	btfss	_readGateway,0
  1066  0080  2882               	goto	u2771
  1067  0081  2883               	goto	u2770
  1068  0082                     u2771:	
  1069  0082  2B17               	goto	l238
  1070  0083                     u2770:	
  1071  0083  2B02               	goto	l3383
  1072  0084                     l240:	
  1073                           ;main.c: 156:             {;main.c: 157:             case 0x08:
  1074                           
  1075                           
  1076                           ;main.c: 158:                 readGatewayDone.Bit = 1;
  1077  0084  1455               	bsf	_readGatewayDone,0
  1078                           
  1079                           ;main.c: 159:                 readGateway.Bit = 0;
  1080  0085  1054               	bcf	_readGateway,0
  1081  0086                     l3307:	
  1082                           
  1083                           ;main.c: 161:                 for (int i = 0; i < 4; i++)
  1084  0086  1683               	bsf	3,5	;RP0=1, select bank3
  1085  0087  1703               	bsf	3,6	;RP1=1, select bank3
  1086  0088  01E1               	clrf	main@i^(0+384)
  1087  0089  01E2               	clrf	(main@i+1)^(0+384)
  1088  008A  29A7               	goto	l3323
  1089  008B                     l3313:	
  1090                           
  1091                           ;main.c: 166:                         sendByte(0x03, 0x01, motorcycle[i]);
  1092  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1093  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1094  008D  01B8               	clrf	sendByte@byte1
  1095  008E  0AB8               	incf	sendByte@byte1,f
  1096  008F  1683               	bsf	3,5	;RP0=1, select bank3
  1097  0090  1703               	bsf	3,6	;RP1=1, select bank3
  1098  0091  0861               	movf	main@i^(0+384),w
  1099  0092  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1100  0093  0084               	movwf	4
  1101  0094  1383               	bcf	3,7	;select IRP bank0
  1102  0095  0800               	movf	0,w
  1103  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0098  00C0               	movwf	??_main
  1106  0099  0840               	movf	??_main,w
  1107  009A  00B9               	movwf	sendByte@valore
  1108  009B  3003               	movlw	3
  1109  009C  120A  158A  246B  120A  118A  	fcall	_sendByte
  1110                           
  1111                           ;main.c: 167:                         sendByte(0x03, 0x02, car[i]);
  1112  00A1  3002               	movlw	2
  1113  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1114  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1115  00A4  00C0               	movwf	??_main
  1116  00A5  0840               	movf	??_main,w
  1117  00A6  00B8               	movwf	sendByte@byte1
  1118  00A7  1683               	bsf	3,5	;RP0=1, select bank3
  1119  00A8  1703               	bsf	3,6	;RP1=1, select bank3
  1120  00A9  0861               	movf	main@i^(0+384),w
  1121  00AA  3E5A               	addlw	(low (_car| 0))& (0+255)
  1122  00AB  0084               	movwf	4
  1123  00AC  1383               	bcf	3,7	;select IRP bank0
  1124  00AD  0800               	movf	0,w
  1125  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1126  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1127  00B0  00C1               	movwf	??_main+1
  1128  00B1  0841               	movf	??_main+1,w
  1129  00B2  00B9               	movwf	sendByte@valore
  1130  00B3  3003               	movlw	3
  1131  00B4  120A  158A  246B  120A  118A  	fcall	_sendByte
  1132                           
  1133                           ;main.c: 168:                         sendByte(0x03, 0x03, truck[i]);
  1134  00B9  3003               	movlw	3
  1135  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1136  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1137  00BC  00C0               	movwf	??_main
  1138  00BD  0840               	movf	??_main,w
  1139  00BE  00B8               	movwf	sendByte@byte1
  1140  00BF  1683               	bsf	3,5	;RP0=1, select bank3
  1141  00C0  1703               	bsf	3,6	;RP1=1, select bank3
  1142  00C1  0861               	movf	main@i^(0+384),w
  1143  00C2  3E56               	addlw	(low (_truck| 0))& (0+255)
  1144  00C3  0084               	movwf	4
  1145  00C4  1383               	bcf	3,7	;select IRP bank0
  1146  00C5  0800               	movf	0,w
  1147  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1149  00C8  00C1               	movwf	??_main+1
  1150  00C9  0841               	movf	??_main+1,w
  1151  00CA  00B9               	movwf	sendByte@valore
  1152  00CB  3003               	movlw	3
  1153  00CC  120A  158A  246B  120A  118A  	fcall	_sendByte
  1154                           
  1155                           ;main.c: 169:                         break;
  1156  00D1  29BC               	goto	l3325
  1157  00D2                     l3315:	
  1158                           
  1159                           ;main.c: 171:                         sendByte(0x05, 0x01, motorcycle[i]);
  1160  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1161  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1162  00D4  01B8               	clrf	sendByte@byte1
  1163  00D5  0AB8               	incf	sendByte@byte1,f
  1164  00D6  1683               	bsf	3,5	;RP0=1, select bank3
  1165  00D7  1703               	bsf	3,6	;RP1=1, select bank3
  1166  00D8  0861               	movf	main@i^(0+384),w
  1167  00D9  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1168  00DA  0084               	movwf	4
  1169  00DB  1383               	bcf	3,7	;select IRP bank0
  1170  00DC  0800               	movf	0,w
  1171  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1173  00DF  00C0               	movwf	??_main
  1174  00E0  0840               	movf	??_main,w
  1175  00E1  00B9               	movwf	sendByte@valore
  1176  00E2  3005               	movlw	5
  1177  00E3  120A  158A  246B  120A  118A  	fcall	_sendByte
  1178                           
  1179                           ;main.c: 172:                         sendByte(0x05, 0x02, car[i]);
  1180  00E8  3002               	movlw	2
  1181  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1183  00EB  00C0               	movwf	??_main
  1184  00EC  0840               	movf	??_main,w
  1185  00ED  00B8               	movwf	sendByte@byte1
  1186  00EE  1683               	bsf	3,5	;RP0=1, select bank3
  1187  00EF  1703               	bsf	3,6	;RP1=1, select bank3
  1188  00F0  0861               	movf	main@i^(0+384),w
  1189  00F1  3E5A               	addlw	(low (_car| 0))& (0+255)
  1190  00F2  0084               	movwf	4
  1191  00F3  1383               	bcf	3,7	;select IRP bank0
  1192  00F4  0800               	movf	0,w
  1193  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1194  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1195  00F7  00C1               	movwf	??_main+1
  1196  00F8  0841               	movf	??_main+1,w
  1197  00F9  00B9               	movwf	sendByte@valore
  1198  00FA  3005               	movlw	5
  1199  00FB  120A  158A  246B  120A  118A  	fcall	_sendByte
  1200                           
  1201                           ;main.c: 173:                         sendByte(0x05, 0x03, truck[i]);
  1202  0100  3003               	movlw	3
  1203  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0103  00C0               	movwf	??_main
  1206  0104  0840               	movf	??_main,w
  1207  0105  00B8               	movwf	sendByte@byte1
  1208  0106  1683               	bsf	3,5	;RP0=1, select bank3
  1209  0107  1703               	bsf	3,6	;RP1=1, select bank3
  1210  0108  0861               	movf	main@i^(0+384),w
  1211  0109  3E56               	addlw	(low (_truck| 0))& (0+255)
  1212  010A  0084               	movwf	4
  1213  010B  1383               	bcf	3,7	;select IRP bank0
  1214  010C  0800               	movf	0,w
  1215  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1216  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1217  010F  00C1               	movwf	??_main+1
  1218  0110  0841               	movf	??_main+1,w
  1219  0111  00B9               	movwf	sendByte@valore
  1220  0112  3005               	movlw	5
  1221  0113  120A  158A  246B  120A  118A  	fcall	_sendByte
  1222                           
  1223                           ;main.c: 174:                         break;
  1224  0118  29BC               	goto	l3325
  1225  0119                     l3317:	
  1226                           
  1227                           ;main.c: 176:                         sendByte(0x07, 0x01, motorcycle[i]);
  1228  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1229  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1230  011B  01B8               	clrf	sendByte@byte1
  1231  011C  0AB8               	incf	sendByte@byte1,f
  1232  011D  1683               	bsf	3,5	;RP0=1, select bank3
  1233  011E  1703               	bsf	3,6	;RP1=1, select bank3
  1234  011F  0861               	movf	main@i^(0+384),w
  1235  0120  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1236  0121  0084               	movwf	4
  1237  0122  1383               	bcf	3,7	;select IRP bank0
  1238  0123  0800               	movf	0,w
  1239  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0126  00C0               	movwf	??_main
  1242  0127  0840               	movf	??_main,w
  1243  0128  00B9               	movwf	sendByte@valore
  1244  0129  3007               	movlw	7
  1245  012A  120A  158A  246B  120A  118A  	fcall	_sendByte
  1246                           
  1247                           ;main.c: 177:                         sendByte(0x07, 0x02, car[i]);
  1248  012F  3002               	movlw	2
  1249  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0132  00C0               	movwf	??_main
  1252  0133  0840               	movf	??_main,w
  1253  0134  00B8               	movwf	sendByte@byte1
  1254  0135  1683               	bsf	3,5	;RP0=1, select bank3
  1255  0136  1703               	bsf	3,6	;RP1=1, select bank3
  1256  0137  0861               	movf	main@i^(0+384),w
  1257  0138  3E5A               	addlw	(low (_car| 0))& (0+255)
  1258  0139  0084               	movwf	4
  1259  013A  1383               	bcf	3,7	;select IRP bank0
  1260  013B  0800               	movf	0,w
  1261  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1262  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1263  013E  00C1               	movwf	??_main+1
  1264  013F  0841               	movf	??_main+1,w
  1265  0140  00B9               	movwf	sendByte@valore
  1266  0141  3007               	movlw	7
  1267  0142  120A  158A  246B  120A  118A  	fcall	_sendByte
  1268                           
  1269                           ;main.c: 178:                         sendByte(0x07, 0x03, truck[i]);
  1270  0147  3003               	movlw	3
  1271  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1273  014A  00C0               	movwf	??_main
  1274  014B  0840               	movf	??_main,w
  1275  014C  00B8               	movwf	sendByte@byte1
  1276  014D  1683               	bsf	3,5	;RP0=1, select bank3
  1277  014E  1703               	bsf	3,6	;RP1=1, select bank3
  1278  014F  0861               	movf	main@i^(0+384),w
  1279  0150  3E56               	addlw	(low (_truck| 0))& (0+255)
  1280  0151  0084               	movwf	4
  1281  0152  1383               	bcf	3,7	;select IRP bank0
  1282  0153  0800               	movf	0,w
  1283  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0155  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0156  00C1               	movwf	??_main+1
  1286  0157  0841               	movf	??_main+1,w
  1287  0158  00B9               	movwf	sendByte@valore
  1288  0159  3007               	movlw	7
  1289  015A  120A  158A  246B  120A  118A  	fcall	_sendByte
  1290                           
  1291                           ;main.c: 179:                         break;
  1292  015F  29BC               	goto	l3325
  1293  0160                     l3319:	
  1294                           
  1295                           ;main.c: 181:                         sendByte(0x09, 0x01, motorcycle[i]);
  1296  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0162  01B8               	clrf	sendByte@byte1
  1299  0163  0AB8               	incf	sendByte@byte1,f
  1300  0164  1683               	bsf	3,5	;RP0=1, select bank3
  1301  0165  1703               	bsf	3,6	;RP1=1, select bank3
  1302  0166  0861               	movf	main@i^(0+384),w
  1303  0167  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1304  0168  0084               	movwf	4
  1305  0169  1383               	bcf	3,7	;select IRP bank0
  1306  016A  0800               	movf	0,w
  1307  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1308  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1309  016D  00C0               	movwf	??_main
  1310  016E  0840               	movf	??_main,w
  1311  016F  00B9               	movwf	sendByte@valore
  1312  0170  3009               	movlw	9
  1313  0171  120A  158A  246B  120A  118A  	fcall	_sendByte
  1314                           
  1315                           ;main.c: 182:                         sendByte(0x09, 0x02, car[i]);
  1316  0176  3002               	movlw	2
  1317  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0179  00C0               	movwf	??_main
  1320  017A  0840               	movf	??_main,w
  1321  017B  00B8               	movwf	sendByte@byte1
  1322  017C  1683               	bsf	3,5	;RP0=1, select bank3
  1323  017D  1703               	bsf	3,6	;RP1=1, select bank3
  1324  017E  0861               	movf	main@i^(0+384),w
  1325  017F  3E5A               	addlw	(low (_car| 0))& (0+255)
  1326  0180  0084               	movwf	4
  1327  0181  1383               	bcf	3,7	;select IRP bank0
  1328  0182  0800               	movf	0,w
  1329  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0185  00C1               	movwf	??_main+1
  1332  0186  0841               	movf	??_main+1,w
  1333  0187  00B9               	movwf	sendByte@valore
  1334  0188  3009               	movlw	9
  1335  0189  120A  158A  246B  120A  118A  	fcall	_sendByte
  1336                           
  1337                           ;main.c: 183:                         sendByte(0x09, 0x03, truck[i]);
  1338  018E  3003               	movlw	3
  1339  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0191  00C0               	movwf	??_main
  1342  0192  0840               	movf	??_main,w
  1343  0193  00B8               	movwf	sendByte@byte1
  1344  0194  1683               	bsf	3,5	;RP0=1, select bank3
  1345  0195  1703               	bsf	3,6	;RP1=1, select bank3
  1346  0196  0861               	movf	main@i^(0+384),w
  1347  0197  3E56               	addlw	(low (_truck| 0))& (0+255)
  1348  0198  0084               	movwf	4
  1349  0199  1383               	bcf	3,7	;select IRP bank0
  1350  019A  0800               	movf	0,w
  1351  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1352  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1353  019D  00C1               	movwf	??_main+1
  1354  019E  0841               	movf	??_main+1,w
  1355  019F  00B9               	movwf	sendByte@valore
  1356  01A0  3009               	movlw	9
  1357  01A1  120A  158A  246B  120A  118A  	fcall	_sendByte
  1358                           
  1359                           ;main.c: 184:                         break;
  1360  01A6  29BC               	goto	l3325
  1361  01A7                     l3323:	
  1362                           
  1363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1364                           ; Switch size 1, requested type "simple"
  1365                           ; Number of cases is 1, Range of values is 0 to 0
  1366                           ; switch strategies available:
  1367                           ; Name         Instructions Cycles
  1368                           ; simple_byte            4     3 (average)
  1369                           ; direct_byte           11     8 (fixed)
  1370                           ; jumptable            260     6 (fixed)
  1371                           ;	Chosen strategy is simple_byte
  1372  01A7  1683               	bsf	3,5	;RP0=1, select bank3
  1373  01A8  1703               	bsf	3,6	;RP1=1, select bank3
  1374  01A9  0862               	movf	(main@i+1)^(0+384),w
  1375  01AA  3A00               	xorlw	0	; case 0
  1376  01AB  1903               	skipnz
  1377  01AC  29AE               	goto	l3655
  1378  01AD  29BC               	goto	l3325
  1379  01AE                     l3655:	
  1380                           
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 4, Range of values is 0 to 3
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte           13     7 (average)
  1386                           ; direct_byte           20     8 (fixed)
  1387                           ; jumptable            260     6 (fixed)
  1388                           ;	Chosen strategy is simple_byte
  1389  01AE  0861               	movf	main@i^(0+384),w
  1390  01AF  3A00               	xorlw	0	; case 0
  1391  01B0  1903               	skipnz
  1392  01B1  288B               	goto	l3313
  1393  01B2  3A01               	xorlw	1	; case 1
  1394  01B3  1903               	skipnz
  1395  01B4  28D2               	goto	l3315
  1396  01B5  3A03               	xorlw	3	; case 2
  1397  01B6  1903               	skipnz
  1398  01B7  2919               	goto	l3317
  1399  01B8  3A01               	xorlw	1	; case 3
  1400  01B9  1903               	skipnz
  1401  01BA  2960               	goto	l3319
  1402  01BB  29BC               	goto	l3325
  1403  01BC                     l3325:	
  1404                           
  1405                           ;main.c: 186:                 }
  1406  01BC  3001               	movlw	1
  1407  01BD  1683               	bsf	3,5	;RP0=1, select bank3
  1408  01BE  1703               	bsf	3,6	;RP1=1, select bank3
  1409  01BF  07E1               	addwf	main@i^(0+384),f
  1410  01C0  1803               	skipnc
  1411  01C1  0AE2               	incf	(main@i+1)^(0+384),f
  1412  01C2  3000               	movlw	0
  1413  01C3  07E2               	addwf	(main@i+1)^(0+384),f
  1414  01C4                     l3327:	
  1415  01C4  0862               	movf	(main@i+1)^(0+384),w
  1416  01C5  3A80               	xorlw	128
  1417  01C6  00FF               	movwf	btemp+1
  1418  01C7  3080               	movlw	128
  1419  01C8  027F               	subwf	btemp+1,w
  1420  01C9  1D03               	skipz
  1421  01CA  29CD               	goto	u2785
  1422  01CB  3004               	movlw	4
  1423  01CC  0261               	subwf	main@i^(0+384),w
  1424  01CD                     u2785:	
  1425  01CD  1C03               	skipc
  1426  01CE  29D0               	goto	u2781
  1427  01CF  29D1               	goto	u2780
  1428  01D0                     u2781:	
  1429  01D0  29A7               	goto	l3323
  1430  01D1                     u2780:	
  1431  01D1                     l3329:	
  1432                           
  1433                           ;main.c: 188:                 for (int i = 0; i < 4; i++)
  1434  01D1  1683               	bsf	3,5	;RP0=1, select bank3
  1435  01D2  1703               	bsf	3,6	;RP1=1, select bank3
  1436  01D3  01DD               	clrf	main@i_488^(0+384)
  1437  01D4  01DE               	clrf	(main@i_488+1)^(0+384)
  1438  01D5                     l3335:	
  1439                           
  1440                           ;main.c: 189:                 {;main.c: 190:                     motorcycle[i] = 0;
  1441  01D5  1683               	bsf	3,5	;RP0=1, select bank3
  1442  01D6  1703               	bsf	3,6	;RP1=1, select bank3
  1443  01D7  085D               	movf	main@i_488^(0+384),w
  1444  01D8  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1445  01D9  0084               	movwf	4
  1446  01DA  1383               	bcf	3,7	;select IRP bank0
  1447  01DB  0180               	clrf	0
  1448                           
  1449                           ;main.c: 191:                     car[i] = 0;
  1450  01DC  085D               	movf	main@i_488^(0+384),w
  1451  01DD  3E5A               	addlw	(low (_car| 0))& (0+255)
  1452  01DE  0084               	movwf	4
  1453  01DF  0180               	clrf	0
  1454                           
  1455                           ;main.c: 192:                     truck[i] = 0;
  1456  01E0  085D               	movf	main@i_488^(0+384),w
  1457  01E1  3E56               	addlw	(low (_truck| 0))& (0+255)
  1458  01E2  0084               	movwf	4
  1459  01E3  0180               	clrf	0
  1460  01E4                     l3337:	
  1461                           
  1462                           ;main.c: 193:                 }
  1463  01E4  3001               	movlw	1
  1464  01E5  07DD               	addwf	main@i_488^(0+384),f
  1465  01E6  1803               	skipnc
  1466  01E7  0ADE               	incf	(main@i_488+1)^(0+384),f
  1467  01E8  3000               	movlw	0
  1468  01E9  07DE               	addwf	(main@i_488+1)^(0+384),f
  1469  01EA                     l3339:	
  1470  01EA  085E               	movf	(main@i_488+1)^(0+384),w
  1471  01EB  3A80               	xorlw	128
  1472  01EC  00FF               	movwf	btemp+1
  1473  01ED  3080               	movlw	128
  1474  01EE  027F               	subwf	btemp+1,w
  1475  01EF  1D03               	skipz
  1476  01F0  29F3               	goto	u2795
  1477  01F1  3004               	movlw	4
  1478  01F2  025D               	subwf	main@i_488^(0+384),w
  1479  01F3                     u2795:	
  1480  01F3  1C03               	skipc
  1481  01F4  29F6               	goto	u2791
  1482  01F5  29F7               	goto	u2790
  1483  01F6                     u2791:	
  1484  01F6  29D5               	goto	l3335
  1485  01F7                     u2790:	
  1486  01F7                     l3341:	
  1487                           
  1488                           ;main.c: 195:                 for (unsigned char i = 0; i < 5; i++)
  1489  01F7  1683               	bsf	3,5	;RP0=1, select bank3
  1490  01F8  1703               	bsf	3,6	;RP1=1, select bank3
  1491  01F9  01DB               	clrf	main@i_489^(0+384)
  1492  01FA                     l3347:	
  1493                           
  1494                           ;main.c: 196:                 {;main.c: 197:                     dataFromGateway[i] = 0;
  1495  01FA  085B               	movf	main@i_489^(0+384),w
  1496  01FB  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1497  01FC  0084               	movwf	4
  1498  01FD  1383               	bcf	3,7	;select IRP bank1
  1499  01FE  0180               	clrf	0
  1500  01FF                     l3349:	
  1501                           
  1502                           ;main.c: 198:                 }
  1503  01FF  3001               	movlw	1
  1504  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0202  00C0               	movwf	??_main
  1507  0203  0840               	movf	??_main,w
  1508  0204  1683               	bsf	3,5	;RP0=1, select bank3
  1509  0205  1703               	bsf	3,6	;RP1=1, select bank3
  1510  0206  07DB               	addwf	main@i_489^(0+384),f
  1511  0207                     l3351:	
  1512  0207  3005               	movlw	5
  1513  0208  025B               	subwf	main@i_489^(0+384),w
  1514  0209  1C03               	skipc
  1515  020A  2A0C               	goto	u2801
  1516  020B  2A0D               	goto	u2800
  1517  020C                     u2801:	
  1518  020C  29FA               	goto	l3347
  1519  020D                     u2800:	
  1520  020D  2B17               	goto	l238
  1521  020E                     l254:	
  1522                           ;main.c: 200:             case 0x0A:
  1523                           
  1524                           
  1525                           ;main.c: 201:                 readGatewayDone.Bit = 1;
  1526  020E  1455               	bsf	_readGatewayDone,0
  1527                           
  1528                           ;main.c: 202:                 readGateway.Bit = 0;
  1529  020F  1054               	bcf	_readGateway,0
  1530  0210                     l3353:	
  1531                           
  1532                           ;main.c: 204:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1533  0210  3000               	movlw	0
  1534  0211  120A  158A  241E  120A  118A  	fcall	_ADC_Read
  1535  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0218  0824               	movf	?_ADC_Read,w
  1538  0219  00C0               	movwf	??_main
  1539  021A  0825               	movf	?_ADC_Read+1,w
  1540  021B  00C1               	movwf	??_main+1
  1541  021C  0D41               	rlf	??_main+1,w
  1542  021D  0CC1               	rrf	??_main+1,f
  1543  021E  0CC0               	rrf	??_main,f
  1544  021F  0D41               	rlf	??_main+1,w
  1545  0220  0CC1               	rrf	??_main+1,f
  1546  0221  0CC0               	rrf	??_main,f
  1547  0222  0840               	movf	??_main,w
  1548  0223  00B4               	movwf	map@x
  1549  0224  0841               	movf	??_main+1,w
  1550  0225  00B5               	movwf	map@x+1
  1551  0226  3000               	movlw	0
  1552  0227  00B6               	movwf	map@in_min
  1553  0228  00B7               	movwf	map@in_min+1
  1554  0229  30FF               	movlw	255
  1555  022A  00B8               	movwf	map@in_max
  1556  022B  3000               	movlw	0
  1557  022C  00B9               	movwf	map@in_max+1
  1558  022D  30EC               	movlw	236
  1559  022E  00BA               	movwf	map@out_min
  1560  022F  30FF               	movlw	255
  1561  0230  00BB               	movwf	map@out_min+1
  1562  0231  303C               	movlw	60
  1563  0232  00BC               	movwf	map@out_max
  1564  0233  3000               	movlw	0
  1565  0234  00BD               	movwf	map@out_max+1
  1566  0235  120A  158A  249C  120A  118A  	fcall	_map
  1567  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1568  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1569  023C  0834               	movf	?_map,w
  1570  023D  00C2               	movwf	??_main+2
  1571  023E  0842               	movf	??_main+2,w
  1572  023F  1683               	bsf	3,5	;RP0=1, select bank3
  1573  0240  1703               	bsf	3,6	;RP1=1, select bank3
  1574  0241  00D6               	movwf	main@temp^(0+384)
  1575                           
  1576                           ;main.c: 205:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1577  0242  3001               	movlw	1
  1578  0243  120A  158A  241E  120A  118A  	fcall	_ADC_Read
  1579  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1581  024A  0824               	movf	?_ADC_Read,w
  1582  024B  00C0               	movwf	??_main
  1583  024C  0825               	movf	?_ADC_Read+1,w
  1584  024D  00C1               	movwf	??_main+1
  1585  024E  0D41               	rlf	??_main+1,w
  1586  024F  0CC1               	rrf	??_main+1,f
  1587  0250  0CC0               	rrf	??_main,f
  1588  0251  0D41               	rlf	??_main+1,w
  1589  0252  0CC1               	rrf	??_main+1,f
  1590  0253  0CC0               	rrf	??_main,f
  1591  0254  0840               	movf	??_main,w
  1592  0255  00B4               	movwf	map@x
  1593  0256  0841               	movf	??_main+1,w
  1594  0257  00B5               	movwf	map@x+1
  1595  0258  3000               	movlw	0
  1596  0259  00B6               	movwf	map@in_min
  1597  025A  00B7               	movwf	map@in_min+1
  1598  025B  30FF               	movlw	255
  1599  025C  00B8               	movwf	map@in_max
  1600  025D  3000               	movlw	0
  1601  025E  00B9               	movwf	map@in_max+1
  1602  025F  3000               	movlw	0
  1603  0260  00BA               	movwf	map@out_min
  1604  0261  00BB               	movwf	map@out_min+1
  1605  0262  3064               	movlw	100
  1606  0263  00BC               	movwf	map@out_max
  1607  0264  3000               	movlw	0
  1608  0265  00BD               	movwf	map@out_max+1
  1609  0266  120A  158A  249C  120A  118A  	fcall	_map
  1610  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1611  026C  1303               	bcf	3,6	;RP1=0, select bank0
  1612  026D  0834               	movf	?_map,w
  1613  026E  00C2               	movwf	??_main+2
  1614  026F  0842               	movf	??_main+2,w
  1615  0270  1683               	bsf	3,5	;RP0=1, select bank3
  1616  0271  1703               	bsf	3,6	;RP1=1, select bank3
  1617  0272  00D7               	movwf	main@umidita^(0+384)
  1618                           
  1619                           ;main.c: 206:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1620  0273  3005               	movlw	5
  1621  0274  120A  158A  241E  120A  118A  	fcall	_ADC_Read
  1622  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1623  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1624  027B  0824               	movf	?_ADC_Read,w
  1625  027C  00C0               	movwf	??_main
  1626  027D  0825               	movf	?_ADC_Read+1,w
  1627  027E  00C1               	movwf	??_main+1
  1628  027F  0D41               	rlf	??_main+1,w
  1629  0280  0CC1               	rrf	??_main+1,f
  1630  0281  0CC0               	rrf	??_main,f
  1631  0282  0D41               	rlf	??_main+1,w
  1632  0283  0CC1               	rrf	??_main+1,f
  1633  0284  0CC0               	rrf	??_main,f
  1634  0285  0840               	movf	??_main,w
  1635  0286  00B4               	movwf	map@x
  1636  0287  0841               	movf	??_main+1,w
  1637  0288  00B5               	movwf	map@x+1
  1638  0289  3000               	movlw	0
  1639  028A  00B6               	movwf	map@in_min
  1640  028B  00B7               	movwf	map@in_min+1
  1641  028C  30FF               	movlw	255
  1642  028D  00B8               	movwf	map@in_max
  1643  028E  3000               	movlw	0
  1644  028F  00B9               	movwf	map@in_max+1
  1645  0290  3000               	movlw	0
  1646  0291  00BA               	movwf	map@out_min
  1647  0292  00BB               	movwf	map@out_min+1
  1648  0293  3064               	movlw	100
  1649  0294  00BC               	movwf	map@out_max
  1650  0295  3000               	movlw	0
  1651  0296  00BD               	movwf	map@out_max+1
  1652  0297  120A  158A  249C  120A  118A  	fcall	_map
  1653  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1654  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1655  029E  0834               	movf	?_map,w
  1656  029F  00C2               	movwf	??_main+2
  1657  02A0  0842               	movf	??_main+2,w
  1658  02A1  1683               	bsf	3,5	;RP0=1, select bank3
  1659  02A2  1703               	bsf	3,6	;RP1=1, select bank3
  1660  02A3  00D8               	movwf	main@pressione^(0+384)
  1661  02A4                     l3355:	
  1662                           
  1663                           ;main.c: 207:                 sendByte(0x02, 0x00, temp);
  1664  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1665  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1666  02A6  01B8               	clrf	sendByte@byte1
  1667  02A7  1683               	bsf	3,5	;RP0=1, select bank3
  1668  02A8  1703               	bsf	3,6	;RP1=1, select bank3
  1669  02A9  0856               	movf	main@temp^(0+384),w
  1670  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1671  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1672  02AC  00C0               	movwf	??_main
  1673  02AD  0840               	movf	??_main,w
  1674  02AE  00B9               	movwf	sendByte@valore
  1675  02AF  3002               	movlw	2
  1676  02B0  120A  158A  246B  120A  118A  	fcall	_sendByte
  1677  02B5                     l3357:	
  1678                           
  1679                           ;main.c: 208:                 sendByte(0x04, 0x00, umidita);
  1680  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1681  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1682  02B7  01B8               	clrf	sendByte@byte1
  1683  02B8  1683               	bsf	3,5	;RP0=1, select bank3
  1684  02B9  1703               	bsf	3,6	;RP1=1, select bank3
  1685  02BA  0857               	movf	main@umidita^(0+384),w
  1686  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1687  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1688  02BD  00C0               	movwf	??_main
  1689  02BE  0840               	movf	??_main,w
  1690  02BF  00B9               	movwf	sendByte@valore
  1691  02C0  3004               	movlw	4
  1692  02C1  120A  158A  246B  120A  118A  	fcall	_sendByte
  1693  02C6                     l3359:	
  1694                           
  1695                           ;main.c: 209:                 sendByte(0x06, 0x00, pressione);
  1696  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1697  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1698  02C8  01B8               	clrf	sendByte@byte1
  1699  02C9  1683               	bsf	3,5	;RP0=1, select bank3
  1700  02CA  1703               	bsf	3,6	;RP1=1, select bank3
  1701  02CB  0858               	movf	main@pressione^(0+384),w
  1702  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1703  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1704  02CE  00C0               	movwf	??_main
  1705  02CF  0840               	movf	??_main,w
  1706  02D0  00B9               	movwf	sendByte@valore
  1707  02D1  3006               	movlw	6
  1708  02D2  120A  158A  246B  120A  118A  	fcall	_sendByte
  1709  02D7                     l3361:	
  1710                           
  1711                           ;main.c: 211:                 for (unsigned char i = 0; i < 5; i++)
  1712  02D7  1683               	bsf	3,5	;RP0=1, select bank3
  1713  02D8  1703               	bsf	3,6	;RP1=1, select bank3
  1714  02D9  01DC               	clrf	main@i_491^(0+384)
  1715  02DA                     l3363:	
  1716  02DA  3005               	movlw	5
  1717  02DB  025C               	subwf	main@i_491^(0+384),w
  1718  02DC  1C03               	skipc
  1719  02DD  2ADF               	goto	u2811
  1720  02DE  2AE0               	goto	u2810
  1721  02DF                     u2811:	
  1722  02DF  2AE1               	goto	l3367
  1723  02E0                     u2810:	
  1724  02E0  2B17               	goto	l238
  1725  02E1                     l3367:	
  1726                           
  1727                           ;main.c: 212:                 {;main.c: 213:                     dataFromGateway[i] = 0;
  1728  02E1  085C               	movf	main@i_491^(0+384),w
  1729  02E2  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1730  02E3  0084               	movwf	4
  1731  02E4  1383               	bcf	3,7	;select IRP bank1
  1732  02E5  0180               	clrf	0
  1733  02E6                     l3369:	
  1734                           
  1735                           ;main.c: 214:                 }
  1736  02E6  3001               	movlw	1
  1737  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1738  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1739  02E9  00C0               	movwf	??_main
  1740  02EA  0840               	movf	??_main,w
  1741  02EB  1683               	bsf	3,5	;RP0=1, select bank3
  1742  02EC  1703               	bsf	3,6	;RP1=1, select bank3
  1743  02ED  07DC               	addwf	main@i_491^(0+384),f
  1744  02EE  2ADA               	goto	l3363
  1745  02EF                     l3373:	
  1746                           
  1747                           ;main.c: 218:                 if (timerReadFromGateway >= 4)
  1748  02EF  3004               	movlw	4
  1749  02F0  024C               	subwf	_timerReadFromGateway,w
  1750  02F1  1C03               	skipc
  1751  02F2  2AF4               	goto	u2821
  1752  02F3  2AF5               	goto	u2820
  1753  02F4                     u2821:	
  1754  02F4  2AF8               	goto	l3377
  1755  02F5                     u2820:	
  1756  02F5                     l3375:	
  1757                           
  1758                           ;main.c: 219:                 {;main.c: 220:                     readGatewayDone.Bit = 1
      +                          ;
  1759  02F5  1455               	bsf	_readGatewayDone,0
  1760                           
  1761                           ;main.c: 221:                     readGatewayDone.Timeout = 1;
  1762  02F6  14D5               	bsf	_readGatewayDone,1
  1763                           
  1764                           ;main.c: 222:                     readGateway.Bit = 0;
  1765  02F7  1054               	bcf	_readGateway,0
  1766  02F8                     l3377:	
  1767                           
  1768                           ;main.c: 225:                 if (dataFromGatewayIndex >= 15)
  1769  02F8  300F               	movlw	15
  1770  02F9  024D               	subwf	_dataFromGatewayIndex,w
  1771  02FA  1C03               	skipc
  1772  02FB  2AFD               	goto	u2831
  1773  02FC  2AFE               	goto	u2830
  1774  02FD                     u2831:	
  1775  02FD  2B17               	goto	l238
  1776  02FE                     u2830:	
  1777  02FE                     l3379:	
  1778                           
  1779                           ;main.c: 226:                 {;main.c: 227:                     readGatewayDone.Bit = 1
      +                          ;
  1780  02FE  1455               	bsf	_readGatewayDone,0
  1781                           
  1782                           ;main.c: 228:                     readGatewayDone.Timeout = 0;
  1783  02FF  10D5               	bcf	_readGatewayDone,1
  1784                           
  1785                           ;main.c: 229:                     readGateway.Bit = 0;
  1786  0300  1054               	bcf	_readGateway,0
  1787  0301  2B17               	goto	l238
  1788  0302                     l3383:	
  1789  0302  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0303  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0304  0824               	movf	_dataFromGateway^(0+128),w
  1792  0305  397F               	andlw	127
  1793  0306  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0307  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0308  00C0               	movwf	??_main
  1796  0309  01C1               	clrf	??_main+1
  1797                           
  1798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1799                           ; Switch size 1, requested type "simple"
  1800                           ; Number of cases is 1, Range of values is 0 to 0
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte            4     3 (average)
  1804                           ; direct_byte           11     8 (fixed)
  1805                           ; jumptable            260     6 (fixed)
  1806                           ;	Chosen strategy is simple_byte
  1807  030A  0841               	movf	??_main+1,w
  1808  030B  3A00               	xorlw	0	; case 0
  1809  030C  1903               	skipnz
  1810  030D  2B0F               	goto	l3657
  1811  030E  2AEF               	goto	l3373
  1812  030F                     l3657:	
  1813                           
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 2, Range of values is 8 to 10
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            7     4 (average)
  1819                           ; direct_byte           20    11 (fixed)
  1820                           ; jumptable            263     9 (fixed)
  1821                           ;	Chosen strategy is simple_byte
  1822  030F  0840               	movf	??_main,w
  1823  0310  3A08               	xorlw	8	; case 8
  1824  0311  1903               	skipnz
  1825  0312  2884               	goto	l240
  1826  0313  3A02               	xorlw	2	; case 10
  1827  0314  1903               	skipnz
  1828  0315  2A0E               	goto	l254
  1829  0316  2AEF               	goto	l3373
  1830  0317                     l238:	
  1831                           ;main.c: 233:         }
  1832                           
  1833                           
  1834                           ;main.c: 236:         if (readGatewayDone.Bit)
  1835  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0319  1C55               	btfss	_readGatewayDone,0
  1838  031A  2B1C               	goto	u2841
  1839  031B  2B1D               	goto	u2840
  1840  031C                     u2841:	
  1841  031C  2B31               	goto	l3397
  1842  031D                     u2840:	
  1843  031D                     l3385:	
  1844                           
  1845                           ;main.c: 237:         {;main.c: 239:             readGateway.Bit = 0;
  1846  031D  1054               	bcf	_readGateway,0
  1847  031E                     l3387:	
  1848                           
  1849                           ;main.c: 240:             dataFromGatewayIndex = 0;
  1850  031E  01CD               	clrf	_dataFromGatewayIndex
  1851  031F                     l3389:	
  1852                           
  1853                           ;main.c: 241:             readGatewayDone.Bit = 0;
  1854  031F  1055               	bcf	_readGatewayDone,0
  1855                           
  1856                           ;main.c: 242:             timerReadFromGateway = 0;
  1857  0320  01CC               	clrf	_timerReadFromGateway
  1858  0321                     l3391:	
  1859                           
  1860                           ;main.c: 245:             if (readGatewayDone.Timeout)
  1861  0321  1CD5               	btfss	_readGatewayDone,1
  1862  0322  2B24               	goto	u2851
  1863  0323  2B25               	goto	u2850
  1864  0324                     u2851:	
  1865  0324  2B27               	goto	l3395
  1866  0325                     u2850:	
  1867  0325                     l3393:	
  1868                           
  1869                           ;main.c: 246:             {;main.c: 247:                 readGatewayDone.Timeout = 0;
  1870  0325  10D5               	bcf	_readGatewayDone,1
  1871                           
  1872                           ;main.c: 248:             }
  1873  0326  2B31               	goto	l3397
  1874  0327                     l3395:	
  1875                           
  1876                           ;main.c: 251:             {;main.c: 253:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1877  0327  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1878  0328  00C0               	movwf	??_main
  1879  0329  0840               	movf	??_main,w
  1880  032A  00AC               	movwf	SetReceivedTimes@_semafori
  1881  032B  30A4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1882  032C  120A  158A  2792  120A  118A  	fcall	_SetReceivedTimes
  1883  0331                     l3397:	
  1884                           
  1885                           ;main.c: 259:         if (secondPassed.Bit && cycled.Bit)
  1886  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0333  1C53               	btfss	_secondPassed,0
  1889  0334  2B36               	goto	u2861
  1890  0335  2B37               	goto	u2860
  1891  0336                     u2861:	
  1892  0336  2C8A               	goto	l263
  1893  0337                     u2860:	
  1894  0337                     l3399:	
  1895  0337  1C52               	btfss	_cycled,0
  1896  0338  2B3A               	goto	u2871
  1897  0339  2B3B               	goto	u2870
  1898  033A                     u2871:	
  1899  033A  2C8A               	goto	l263
  1900  033B                     u2870:	
  1901  033B                     l3401:	
  1902                           
  1903                           ;main.c: 260:         {;main.c: 261:             time++;
  1904  033B  3001               	movlw	1
  1905  033C  1683               	bsf	3,5	;RP0=1, select bank3
  1906  033D  1703               	bsf	3,6	;RP1=1, select bank3
  1907  033E  07D9               	addwf	main@time^(0+384),f
  1908  033F  1803               	skipnc
  1909  0340  0ADA               	incf	(main@time+1)^(0+384),f
  1910  0341  3000               	movlw	0
  1911  0342  07DA               	addwf	(main@time+1)^(0+384),f
  1912  0343                     l3403:	
  1913                           
  1914                           ;main.c: 263:             unsigned char i = 0;
  1915  0343  01E0               	clrf	main@i_493^(0+384)
  1916                           
  1917                           ;main.c: 264:             while (i < 2)
  1918  0344  2C84               	goto	l3435
  1919  0345                     l3405:	
  1920                           
  1921                           ;main.c: 265:             {;main.c: 266:                 if ((*Semafori[i]).times[0] == 
      +                          0)
  1922  0345  0860               	movf	main@i_493^(0+384),w
  1923  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0348  00C0               	movwf	??_main
  1926  0349  0740               	addwf	??_main,w
  1927  034A  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1928  034B  0084               	movwf	4
  1929  034C  1383               	bcf	3,7	;select IRP bank1
  1930  034D  0800               	movf	0,w
  1931  034E  00C1               	movwf	??_main+1
  1932  034F  0A84               	incf	4,f
  1933  0350  0800               	movf	0,w
  1934  0351  00C2               	movwf	??_main+2
  1935  0352  0841               	movf	??_main+1,w
  1936  0353  0084               	movwf	4
  1937  0354  1783               	bsf	3,7
  1938  0355  1C42               	btfss	??_main+2,0
  1939  0356  1383               	bcf	3,7
  1940  0357  0800               	movf	0,w
  1941  0358  00C3               	movwf	??_main+3
  1942  0359  0A84               	incf	4,f
  1943  035A  0800               	movf	0,w
  1944  035B  00C4               	movwf	??_main+4
  1945  035C  0843               	movf	??_main+3,w
  1946  035D  0444               	iorwf	??_main+4,w
  1947  035E  1D03               	btfss	3,2
  1948  035F  2B61               	goto	u2881
  1949  0360  2B62               	goto	u2880
  1950  0361                     u2881:	
  1951  0361  2B6B               	goto	l3409
  1952  0362                     u2880:	
  1953  0362                     l3407:	
  1954                           
  1955                           ;main.c: 267:                 {;main.c: 268:                     i++;
  1956  0362  3001               	movlw	1
  1957  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1958  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1959  0365  00C0               	movwf	??_main
  1960  0366  0840               	movf	??_main,w
  1961  0367  1683               	bsf	3,5	;RP0=1, select bank3
  1962  0368  1703               	bsf	3,6	;RP1=1, select bank3
  1963  0369  07E0               	addwf	main@i_493^(0+384),f
  1964                           
  1965                           ;main.c: 269:                 }
  1966  036A  2C84               	goto	l3435
  1967  036B                     l3409:	
  1968                           
  1969                           ;main.c: 271:                 {;main.c: 272:                     unsigned char lux_selec
      +                          t = (*Semafori[i]).lux_select;
  1970  036B  1683               	bsf	3,5	;RP0=1, select bank3
  1971  036C  1703               	bsf	3,6	;RP1=1, select bank3
  1972  036D  0860               	movf	main@i_493^(0+384),w
  1973  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1974  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0370  00C0               	movwf	??_main
  1976  0371  0740               	addwf	??_main,w
  1977  0372  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1978  0373  0084               	movwf	4
  1979  0374  1383               	bcf	3,7	;select IRP bank1
  1980  0375  0800               	movf	0,w
  1981  0376  00C1               	movwf	??_main+1
  1982  0377  0A84               	incf	4,f
  1983  0378  0800               	movf	0,w
  1984  0379  00C2               	movwf	??_main+2
  1985  037A  0841               	movf	??_main+1,w
  1986  037B  3E0C               	addlw	12
  1987  037C  00C3               	movwf	??_main+3
  1988  037D  0842               	movf	??_main+2,w
  1989  037E  1803               	skipnc
  1990  037F  3E01               	addlw	1
  1991  0380  3E00               	addlw	0
  1992  0381  00C4               	movwf	??_main+4
  1993  0382  0843               	movf	??_main+3,w
  1994  0383  0084               	movwf	4
  1995  0384  1783               	bsf	3,7
  1996  0385  1C44               	btfss	??_main+4,0
  1997  0386  1383               	bcf	3,7
  1998  0387  0800               	movf	0,w
  1999  0388  00C5               	movwf	??_main+5
  2000  0389  0845               	movf	??_main+5,w
  2001  038A  1683               	bsf	3,5	;RP0=1, select bank3
  2002  038B  1703               	bsf	3,6	;RP1=1, select bank3
  2003  038C  00DF               	movwf	main@lux_select^(0+384)
  2004                           
  2005                           ;main.c: 273:                     if ((*Semafori[i]).times[lux_select] - time < 0)
  2006  038D  0860               	movf	main@i_493^(0+384),w
  2007  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2008  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0390  00C0               	movwf	??_main
  2010  0391  0740               	addwf	??_main,w
  2011  0392  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2012  0393  0084               	movwf	4
  2013  0394  1383               	bcf	3,7	;select IRP bank1
  2014  0395  0800               	movf	0,w
  2015  0396  00C1               	movwf	??_main+1
  2016  0397  0A84               	incf	4,f
  2017  0398  0800               	movf	0,w
  2018  0399  00C2               	movwf	??_main+2
  2019  039A  1683               	bsf	3,5	;RP0=1, select bank3
  2020  039B  1703               	bsf	3,6	;RP1=1, select bank3
  2021  039C  085F               	movf	main@lux_select^(0+384),w
  2022  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2023  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2024  039F  00C3               	movwf	??_main+3
  2025  03A0  0743               	addwf	??_main+3,w
  2026  03A1  0741               	addwf	??_main+1,w
  2027  03A2  00C4               	movwf	??_main+4
  2028  03A3  0842               	movf	??_main+2,w
  2029  03A4  1803               	skipnc
  2030  03A5  3E01               	addlw	1
  2031  03A6  00C5               	movwf	??_main+5
  2032  03A7  0844               	movf	??_main+4,w
  2033  03A8  0084               	movwf	4
  2034  03A9  1783               	bsf	3,7
  2035  03AA  1C45               	btfss	??_main+5,0
  2036  03AB  1383               	bcf	3,7
  2037  03AC  0800               	movf	0,w
  2038  03AD  00C6               	movwf	??_main+6
  2039  03AE  0A84               	incf	4,f
  2040  03AF  0800               	movf	0,w
  2041  03B0  00C7               	movwf	??_main+7
  2042  03B1  1683               	bsf	3,5	;RP0=1, select bank3
  2043  03B2  1703               	bsf	3,6	;RP1=1, select bank3
  2044  03B3  0859               	movf	main@time^(0+384),w
  2045  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2046  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2047  03B6  0246               	subwf	??_main+6,w
  2048  03B7  00C8               	movwf	??_main+8
  2049  03B8  1683               	bsf	3,5	;RP0=1, select bank3
  2050  03B9  1703               	bsf	3,6	;RP1=1, select bank3
  2051  03BA  085A               	movf	(main@time+1)^(0+384),w
  2052  03BB  1C03               	skipc
  2053  03BC  0A5A               	incf	(main@time+1)^(0+384),w
  2054  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2055  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2056  03BF  0247               	subwf	??_main+7,w
  2057  03C0  00C9               	movwf	??_main+9
  2058  03C1  1FC9               	btfss	??_main+9,7
  2059  03C2  2BC4               	goto	u2891
  2060  03C3  2BC5               	goto	u2890
  2061  03C4                     u2891:	
  2062  03C4  2C06               	goto	l3425
  2063  03C5                     u2890:	
  2064  03C5                     l3411:	
  2065                           
  2066                           ;main.c: 274:                     {;main.c: 275:                         lux_select++;
  2067  03C5  3001               	movlw	1
  2068  03C6  00C0               	movwf	??_main
  2069  03C7  0840               	movf	??_main,w
  2070  03C8  1683               	bsf	3,5	;RP0=1, select bank3
  2071  03C9  1703               	bsf	3,6	;RP1=1, select bank3
  2072  03CA  07DF               	addwf	main@lux_select^(0+384),f
  2073  03CB                     l3413:	
  2074                           
  2075                           ;main.c: 276:                         time = 1;
  2076  03CB  3001               	movlw	1
  2077  03CC  00D9               	movwf	main@time^(0+384)
  2078  03CD  3000               	movlw	0
  2079  03CE  00DA               	movwf	(main@time^(0+384)+1)
  2080  03CF                     l3415:	
  2081                           
  2082                           ;main.c: 277:                         if (lux_select >= 3)
  2083  03CF  3003               	movlw	3
  2084  03D0  025F               	subwf	main@lux_select^(0+384),w
  2085  03D1  1C03               	skipc
  2086  03D2  2BD4               	goto	u2901
  2087  03D3  2BD5               	goto	u2900
  2088  03D4                     u2901:	
  2089  03D4  2BE2               	goto	l3423
  2090  03D5                     u2900:	
  2091  03D5                     l3417:	
  2092                           
  2093                           ;main.c: 278:                         {;main.c: 279:                             lux_sel
      +                          ect = 0;
  2094  03D5  01DF               	clrf	main@lux_select^(0+384)
  2095  03D6                     l3419:	
  2096  03D6  3007               	movlw	7
  2097  03D7  0660               	xorwf	main@i_493^(0+384),w
  2098  03D8  1D03               	btfss	3,2
  2099  03D9  2BDB               	goto	u2911
  2100  03DA  2BDC               	goto	u2910
  2101  03DB                     u2911:	
  2102  03DB  2BE2               	goto	l3423
  2103  03DC                     u2910:	
  2104  03DC                     l3421:	
  2105                           
  2106                           ;main.c: 281:                             {;main.c: 283:                                
      +                           UpdateTimes(Semafori);
  2107  03DC  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  2108  03DD  120A  158A  2669  120A  118A  	fcall	_UpdateTimes
  2109  03E2                     l3423:	
  2110                           
  2111                           ;main.c: 287:                         (*Semafori[i]).lux_select = lux_select;
  2112  03E2  1683               	bsf	3,5	;RP0=1, select bank3
  2113  03E3  1703               	bsf	3,6	;RP1=1, select bank3
  2114  03E4  085F               	movf	main@lux_select^(0+384),w
  2115  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2116  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2117  03E7  00C0               	movwf	??_main
  2118  03E8  1683               	bsf	3,5	;RP0=1, select bank3
  2119  03E9  1703               	bsf	3,6	;RP1=1, select bank3
  2120  03EA  0860               	movf	main@i_493^(0+384),w
  2121  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2122  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2123  03ED  00C1               	movwf	??_main+1
  2124  03EE  0741               	addwf	??_main+1,w
  2125  03EF  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2126  03F0  0084               	movwf	4
  2127  03F1  1383               	bcf	3,7	;select IRP bank1
  2128  03F2  0800               	movf	0,w
  2129  03F3  00C2               	movwf	??_main+2
  2130  03F4  0A84               	incf	4,f
  2131  03F5  0800               	movf	0,w
  2132  03F6  00C3               	movwf	??_main+3
  2133  03F7  0842               	movf	??_main+2,w
  2134  03F8  3E0C               	addlw	12
  2135  03F9  00C4               	movwf	??_main+4
  2136  03FA  0843               	movf	??_main+3,w
  2137  03FB  1803               	skipnc
  2138  03FC  3E01               	addlw	1
  2139  03FD  3E00               	addlw	0
  2140  03FE  00C5               	movwf	??_main+5
  2141  03FF  0844               	movf	??_main+4,w
  2142  0400  0084               	movwf	4
  2143  0401  1783               	bsf	3,7
  2144  0402  1C45               	btfss	??_main+5,0
  2145  0403  1383               	bcf	3,7
  2146  0404  0840               	movf	??_main,w
  2147  0405  0080               	movwf	0
  2148  0406                     l3425:	
  2149                           
  2150                           ;main.c: 290:                     (*Semafori[i]).lux_select = lux_select;
  2151  0406  1683               	bsf	3,5	;RP0=1, select bank3
  2152  0407  1703               	bsf	3,6	;RP1=1, select bank3
  2153  0408  085F               	movf	main@lux_select^(0+384),w
  2154  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2155  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2156  040B  00C0               	movwf	??_main
  2157  040C  1683               	bsf	3,5	;RP0=1, select bank3
  2158  040D  1703               	bsf	3,6	;RP1=1, select bank3
  2159  040E  0860               	movf	main@i_493^(0+384),w
  2160  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0411  00C1               	movwf	??_main+1
  2163  0412  0741               	addwf	??_main+1,w
  2164  0413  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2165  0414  0084               	movwf	4
  2166  0415  1383               	bcf	3,7	;select IRP bank1
  2167  0416  0800               	movf	0,w
  2168  0417  00C2               	movwf	??_main+2
  2169  0418  0A84               	incf	4,f
  2170  0419  0800               	movf	0,w
  2171  041A  00C3               	movwf	??_main+3
  2172  041B  0842               	movf	??_main+2,w
  2173  041C  3E0C               	addlw	12
  2174  041D  00C4               	movwf	??_main+4
  2175  041E  0843               	movf	??_main+3,w
  2176  041F  1803               	skipnc
  2177  0420  3E01               	addlw	1
  2178  0421  3E00               	addlw	0
  2179  0422  00C5               	movwf	??_main+5
  2180  0423  0844               	movf	??_main+4,w
  2181  0424  0084               	movwf	4
  2182  0425  1783               	bsf	3,7
  2183  0426  1C45               	btfss	??_main+5,0
  2184  0427  1383               	bcf	3,7
  2185  0428  0840               	movf	??_main,w
  2186  0429  0080               	movwf	0
  2187  042A                     l3427:	
  2188                           
  2189                           ;main.c: 291:                     GetDigits(&centinaia, &decine, &unita, (*Semafori[i]).
      +                          times[lux_select] - time);
  2190  042A  3063               	movlw	(low (_decine| 0))& (0+255)
  2191  042B  00C0               	movwf	??_main
  2192  042C  0840               	movf	??_main,w
  2193  042D  00B4               	movwf	GetDigits@decine
  2194  042E  3064               	movlw	(low (_unita| 0))& (0+255)
  2195  042F  00C1               	movwf	??_main+1
  2196  0430  0841               	movf	??_main+1,w
  2197  0431  00B5               	movwf	GetDigits@unita
  2198  0432  1683               	bsf	3,5	;RP0=1, select bank3
  2199  0433  1703               	bsf	3,6	;RP1=1, select bank3
  2200  0434  0860               	movf	main@i_493^(0+384),w
  2201  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0437  00C2               	movwf	??_main+2
  2204  0438  0742               	addwf	??_main+2,w
  2205  0439  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2206  043A  0084               	movwf	4
  2207  043B  1383               	bcf	3,7	;select IRP bank1
  2208  043C  0800               	movf	0,w
  2209  043D  00C3               	movwf	??_main+3
  2210  043E  0A84               	incf	4,f
  2211  043F  0800               	movf	0,w
  2212  0440  00C4               	movwf	??_main+4
  2213  0441  1683               	bsf	3,5	;RP0=1, select bank3
  2214  0442  1703               	bsf	3,6	;RP1=1, select bank3
  2215  0443  085F               	movf	main@lux_select^(0+384),w
  2216  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2218  0446  00C5               	movwf	??_main+5
  2219  0447  0745               	addwf	??_main+5,w
  2220  0448  0743               	addwf	??_main+3,w
  2221  0449  00C6               	movwf	??_main+6
  2222  044A  0844               	movf	??_main+4,w
  2223  044B  1803               	skipnc
  2224  044C  3E01               	addlw	1
  2225  044D  00C7               	movwf	??_main+7
  2226  044E  0846               	movf	??_main+6,w
  2227  044F  0084               	movwf	4
  2228  0450  1783               	bsf	3,7
  2229  0451  1C47               	btfss	??_main+7,0
  2230  0452  1383               	bcf	3,7
  2231  0453  0800               	movf	0,w
  2232  0454  00C8               	movwf	??_main+8
  2233  0455  0A84               	incf	4,f
  2234  0456  0800               	movf	0,w
  2235  0457  00C9               	movwf	??_main+9
  2236  0458  1683               	bsf	3,5	;RP0=1, select bank3
  2237  0459  1703               	bsf	3,6	;RP1=1, select bank3
  2238  045A  0859               	movf	main@time^(0+384),w
  2239  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2240  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2241  045D  0248               	subwf	??_main+8,w
  2242  045E  00B6               	movwf	GetDigits@Time
  2243  045F  1683               	bsf	3,5	;RP0=1, select bank3
  2244  0460  1703               	bsf	3,6	;RP1=1, select bank3
  2245  0461  085A               	movf	(main@time+1)^(0+384),w
  2246  0462  1C03               	skipc
  2247  0463  0A5A               	incf	(main@time+1)^(0+384),w
  2248  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0466  0249               	subwf	??_main+9,w
  2251  0467  00B7               	movwf	GetDigits@Time+1
  2252  0468  3062               	movlw	(low (_centinaia| 0))& (0+255)
  2253  0469  120A  118A  2608  120A  118A  	fcall	_GetDigits
  2254  046E                     l3429:	
  2255                           
  2256                           ;main.c: 292:                     ShowDigitsOnDisplay();
  2257  046E  120A  118A  26A4  120A  118A  	fcall	_ShowDigitsOnDisplay
  2258  0473                     l3431:	
  2259                           
  2260                           ;main.c: 293:                     luciSemaforo(i, lux_select);
  2261  0473  1683               	bsf	3,5	;RP0=1, select bank3
  2262  0474  1703               	bsf	3,6	;RP1=1, select bank3
  2263  0475  085F               	movf	main@lux_select^(0+384),w
  2264  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0478  00C0               	movwf	??_main
  2267  0479  0840               	movf	??_main,w
  2268  047A  00A4               	movwf	luciSemaforo@lux
  2269  047B  1683               	bsf	3,5	;RP0=1, select bank3
  2270  047C  1703               	bsf	3,6	;RP1=1, select bank3
  2271  047D  0860               	movf	main@i_493^(0+384),w
  2272  047E  120A  158A  2563  120A  118A  	fcall	_luciSemaforo
  2273  0483  2B62               	goto	l3407
  2274  0484                     l3435:	
  2275                           
  2276                           ;main.c: 264:             while (i < 2)
  2277  0484  3002               	movlw	2
  2278  0485  0260               	subwf	main@i_493^(0+384),w
  2279  0486  1C03               	skipc
  2280  0487  2C89               	goto	u2921
  2281  0488  2C8A               	goto	u2920
  2282  0489                     u2921:	
  2283  0489  2B45               	goto	l3405
  2284  048A                     u2920:	
  2285  048A                     l263:	
  2286                           ;main.c: 297:         }
  2287                           
  2288                           
  2289                           ;main.c: 303:         if (secondPassed.Bit && cycled.Bit)
  2290  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2291  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2292  048C  1C53               	btfss	_secondPassed,0
  2293  048D  2C8F               	goto	u2931
  2294  048E  2C90               	goto	u2930
  2295  048F                     u2931:	
  2296  048F  2C96               	goto	l272
  2297  0490                     u2930:	
  2298  0490                     l3437:	
  2299  0490  1C52               	btfss	_cycled,0
  2300  0491  2C93               	goto	u2941
  2301  0492  2C94               	goto	u2940
  2302  0493                     u2941:	
  2303  0493  2C96               	goto	l272
  2304  0494                     u2940:	
  2305  0494                     l3439:	
  2306                           
  2307                           ;main.c: 304:         {;main.c: 305:             secondPassed.Bit = 0;
  2308  0494  1053               	bcf	_secondPassed,0
  2309                           
  2310                           ;main.c: 306:             cycled.Bit = 0;
  2311  0495  1052               	bcf	_cycled,0
  2312  0496                     l272:	
  2313                           ;main.c: 307:         }
  2314                           
  2315                           
  2316                           ;main.c: 308:         if (secondPassed.Bit && !cycled.Bit)
  2317  0496  1C53               	btfss	_secondPassed,0
  2318  0497  2C99               	goto	u2951
  2319  0498  2C9A               	goto	u2950
  2320  0499                     u2951:	
  2321  0499  287D               	goto	l3303
  2322  049A                     u2950:	
  2323  049A                     l3441:	
  2324  049A  1852               	btfsc	_cycled,0
  2325  049B  2C9D               	goto	u2961
  2326  049C  2C9E               	goto	u2960
  2327  049D                     u2961:	
  2328  049D  287D               	goto	l3303
  2329  049E                     u2960:	
  2330  049E                     l3443:	
  2331                           
  2332                           ;main.c: 309:         {;main.c: 310:             cycled.Bit = 1;
  2333  049E  1452               	bsf	_cycled,0
  2334  049F  287D               	goto	l3303
  2335  04A0  120A  118A  2810   	ljmp	start
  2336  04A3                     __end_of_main:	
  2337                           
  2338                           	psect	text1
  2339  0C6B                     __ptext1:	
  2340 ;; *************** function _sendByte *****************
  2341 ;; Defined at:
  2342 ;;		line 374 in file "main.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  byte0           1    wreg     unsigned char 
  2345 ;;  byte1           1   24[BANK0 ] unsigned char 
  2346 ;;  valore          1   25[BANK0 ] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  byte0           1   29[BANK0 ] unsigned char 
  2349 ;;  i               1   31[BANK0 ] unsigned char 
  2350 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2351 ;;		 -> BuildByte@txByte(5), 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       2       0       0       0
  2362 ;;      Locals:         0       3       0       0       0
  2363 ;;      Temps:          0       3       0       0       0
  2364 ;;      Totals:         0       8       0       0       0
  2365 ;;Total ram usage:        8 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    4
  2368 ;; This function calls:
  2369 ;;		_BuildByte
  2370 ;;		_UART_TxChar
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function _sendByte
  2378  0C6B                     _sendByte:	
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2382                           ;sendByte@byte0 stored from wreg
  2383  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0C6D  00BD               	movwf	sendByte@byte0
  2386  0C6E                     l3183:	
  2387                           
  2388                           ;main.c: 374: void sendByte(char byte0, char byte1, char valore);main.c: 375: {;main.c: 
      +                          376:     char *txByte;;main.c: 377:     txByte = BuildByte(byte0, byte1, valore);
  2389  0C6E  0838               	movf	sendByte@byte1,w
  2390  0C6F  00BA               	movwf	??_sendByte
  2391  0C70  083A               	movf	??_sendByte,w
  2392  0C71  00A4               	movwf	BuildByte@byte1
  2393  0C72  0839               	movf	sendByte@valore,w
  2394  0C73  00BB               	movwf	??_sendByte+1
  2395  0C74  083B               	movf	??_sendByte+1,w
  2396  0C75  00A5               	movwf	BuildByte@valore
  2397  0C76  083D               	movf	sendByte@byte0,w
  2398  0C77  120A  118A  24A3  120A  158A  	fcall	_BuildByte
  2399  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0C7E  00BC               	movwf	??_sendByte+2
  2402  0C7F  083C               	movf	??_sendByte+2,w
  2403  0C80  00BE               	movwf	sendByte@txByte
  2404  0C81                     l3185:	
  2405                           
  2406                           ;main.c: 379:     for (unsigned char i = 0; i < 5; i++)
  2407  0C81  01BF               	clrf	sendByte@i
  2408  0C82                     l3191:	
  2409                           
  2410                           ;main.c: 380:     {;main.c: 381:         UART_TxChar(*(txByte++));
  2411  0C82  083E               	movf	sendByte@txByte,w
  2412  0C83  0084               	movwf	4
  2413  0C84  1383               	bcf	3,7	;select IRP bank0
  2414  0C85  0800               	movf	0,w
  2415  0C86  120A  158A  23B1  120A  158A  	fcall	_UART_TxChar
  2416  0C8B                     l3193:	
  2417  0C8B  3001               	movlw	1
  2418  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  2419  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  2420  0C8E  00BA               	movwf	??_sendByte
  2421  0C8F  083A               	movf	??_sendByte,w
  2422  0C90  07BE               	addwf	sendByte@txByte,f
  2423  0C91                     l3195:	
  2424                           
  2425                           ;main.c: 382:     }
  2426  0C91  3001               	movlw	1
  2427  0C92  00BA               	movwf	??_sendByte
  2428  0C93  083A               	movf	??_sendByte,w
  2429  0C94  07BF               	addwf	sendByte@i,f
  2430  0C95                     l3197:	
  2431  0C95  3005               	movlw	5
  2432  0C96  023F               	subwf	sendByte@i,w
  2433  0C97  1C03               	skipc
  2434  0C98  2C9A               	goto	u2681
  2435  0C99  2C9B               	goto	u2680
  2436  0C9A                     u2681:	
  2437  0C9A  2C82               	goto	l3191
  2438  0C9B                     u2680:	
  2439  0C9B                     l311:	
  2440  0C9B  0008               	return
  2441  0C9C                     __end_of_sendByte:	
  2442                           
  2443                           	psect	text2
  2444  0BB1                     __ptext2:	
  2445 ;; *************** function _UART_TxChar *****************
  2446 ;; Defined at:
  2447 ;;		line 349 in file "main.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  ch              1    wreg     unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  ch              1    4[BANK0 ] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2461 ;;      Params:         0       0       0       0       0
  2462 ;;      Locals:         0       1       0       0       0
  2463 ;;      Temps:          0       0       0       0       0
  2464 ;;      Totals:         0       1       0       0       0
  2465 ;;Total ram usage:        1 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    3
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_sendByte
  2472 ;;		_UART_Write_Text
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _UART_TxChar
  2478  0BB1                     _UART_TxChar:	
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _UART_TxChar: [wreg]
  2482                           ;UART_TxChar@ch stored from wreg
  2483  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0BB3  00A4               	movwf	UART_TxChar@ch
  2486  0BB4                     l2917:	
  2487  0BB4                     l291:	
  2488                           ;main.c: 352:         ;
  2489                           
  2490                           
  2491                           ;main.c: 351:     while (!TXIF)
  2492  0BB4  1E0C               	btfss	12,4	;volatile
  2493  0BB5  2BB7               	goto	u2241
  2494  0BB6  2BB8               	goto	u2240
  2495  0BB7                     u2241:	
  2496  0BB7  2BB4               	goto	l291
  2497  0BB8                     u2240:	
  2498  0BB8                     l293:	
  2499                           
  2500                           ;main.c: 353:     TXIF = 0;
  2501  0BB8  120C               	bcf	12,4	;volatile
  2502  0BB9                     l2919:	
  2503                           
  2504                           ;main.c: 354:     TXREG = ch;
  2505  0BB9  0824               	movf	UART_TxChar@ch,w
  2506  0BBA  0099               	movwf	25	;volatile
  2507  0BBB                     l294:	
  2508  0BBB  0008               	return
  2509  0BBC                     __end_of_UART_TxChar:	
  2510                           
  2511                           	psect	text3
  2512  04A3                     __ptext3:	
  2513 ;; *************** function _BuildByte *****************
  2514 ;; Defined at:
  2515 ;;		line 2 in file "./CustomLib/Serial.h"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  byte0           1    wreg     unsigned char 
  2518 ;;  byte1           1    4[BANK0 ] unsigned char 
  2519 ;;  valore          1    5[BANK0 ] unsigned char 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  byte0           1    8[BANK0 ] unsigned char 
  2522 ;;  y               2   18[BANK0 ] int 
  2523 ;;  y               2   16[BANK0 ] int 
  2524 ;;  i               2   22[BANK0 ] int 
  2525 ;;  i               2   20[BANK0 ] int 
  2526 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2527 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2528 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      PTR unsigned char 
  2531 ;; Registers used:
  2532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2538 ;;      Params:         0       2       0       0       0
  2539 ;;      Locals:         0      16       0       0       0
  2540 ;;      Temps:          0       2       0       0       0
  2541 ;;      Totals:         0      20       0       0       0
  2542 ;;Total ram usage:       20 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    3
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_sendByte
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           
  2553                           ;psect for function _BuildByte
  2554  04A3                     _BuildByte:	
  2555                           
  2556                           ;incstack = 0
  2557                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2558                           ;BuildByte@byte0 stored from wreg
  2559  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2560  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2561  04A5  00A8               	movwf	BuildByte@byte0
  2562  04A6                     l2835:	
  2563                           
  2564                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2565  04A6  0828               	movf	BuildByte@byte0,w
  2566  04A7  397F               	andlw	127
  2567  04A8  00A6               	movwf	??_BuildByte
  2568  04A9  0826               	movf	??_BuildByte,w
  2569  04AA  00A9               	movwf	BuildByte@txByte
  2570                           
  2571                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2572  04AB  0824               	movf	BuildByte@byte1,w
  2573  04AC  397F               	andlw	127
  2574  04AD  00A6               	movwf	??_BuildByte
  2575  04AE  0826               	movf	??_BuildByte,w
  2576  04AF  00AA               	movwf	BuildByte@txByte+1
  2577                           
  2578                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2579  04B0  0825               	movf	BuildByte@valore,w
  2580  04B1  397F               	andlw	127
  2581  04B2  00A6               	movwf	??_BuildByte
  2582  04B3  0826               	movf	??_BuildByte,w
  2583  04B4  00AB               	movwf	BuildByte@txByte+2
  2584  04B5                     l2837:	
  2585                           
  2586                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2587  04B5  0825               	movf	BuildByte@valore,w
  2588  04B6  00A6               	movwf	??_BuildByte
  2589  04B7  3007               	movlw	7
  2590  04B8                     u2135:	
  2591  04B8  1003               	clrc
  2592  04B9  0CA6               	rrf	??_BuildByte,f
  2593  04BA  3EFF               	addlw	-1
  2594  04BB  1D03               	skipz
  2595  04BC  2CB8               	goto	u2135
  2596  04BD  0826               	movf	??_BuildByte,w
  2597  04BE  397F               	andlw	127
  2598  04BF  00A7               	movwf	??_BuildByte+1
  2599  04C0  0827               	movf	??_BuildByte+1,w
  2600  04C1  00AC               	movwf	BuildByte@txByte+3
  2601  04C2                     l2839:	
  2602                           
  2603                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2604  04C2  01AE               	clrf	BuildByte@sommaRow
  2605  04C3                     l2841:	
  2606                           
  2607                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2608  04C3  01AF               	clrf	BuildByte@sommaColumn
  2609  04C4                     l2843:	
  2610                           
  2611                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2612  04C4  01B4               	clrf	BuildByte@i
  2613  04C5  01B5               	clrf	BuildByte@i+1
  2614  04C6                     l2849:	
  2615                           
  2616                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2617  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2618  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2619  04C8  01B0               	clrf	BuildByte@y
  2620  04C9  01B1               	clrf	BuildByte@y+1
  2621  04CA                     l2855:	
  2622                           
  2623                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2624  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2625  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2626  04CC  0834               	movf	BuildByte@i,w
  2627  04CD  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2628  04CE  0084               	movwf	4
  2629  04CF  1383               	bcf	3,7	;select IRP bank0
  2630  04D0  0800               	movf	0,w
  2631  04D1  00A6               	movwf	??_BuildByte
  2632  04D2  0A30               	incf	BuildByte@y,w
  2633  04D3  2CD6               	goto	u2144
  2634  04D4                     u2145:	
  2635  04D4  1003               	clrc
  2636  04D5  0CA6               	rrf	??_BuildByte,f
  2637  04D6                     u2144:	
  2638  04D6  3EFF               	addlw	-1
  2639  04D7  1D03               	skipz
  2640  04D8  2CD4               	goto	u2145
  2641  04D9  0826               	movf	??_BuildByte,w
  2642  04DA  3901               	andlw	1
  2643  04DB  00A7               	movwf	??_BuildByte+1
  2644  04DC  0827               	movf	??_BuildByte+1,w
  2645  04DD  07AE               	addwf	BuildByte@sommaRow,f
  2646  04DE                     l2857:	
  2647                           
  2648                           ;./CustomLib/Serial.h: 18:         }
  2649  04DE  3001               	movlw	1
  2650  04DF  07B0               	addwf	BuildByte@y,f
  2651  04E0  1803               	skipnc
  2652  04E1  0AB1               	incf	BuildByte@y+1,f
  2653  04E2  3000               	movlw	0
  2654  04E3  07B1               	addwf	BuildByte@y+1,f
  2655  04E4                     l2859:	
  2656  04E4  0831               	movf	BuildByte@y+1,w
  2657  04E5  3A80               	xorlw	128
  2658  04E6  00FF               	movwf	btemp+1
  2659  04E7  3080               	movlw	128
  2660  04E8  027F               	subwf	btemp+1,w
  2661  04E9  1D03               	skipz
  2662  04EA  2CED               	goto	u2155
  2663  04EB  3008               	movlw	8
  2664  04EC  0230               	subwf	BuildByte@y,w
  2665  04ED                     u2155:	
  2666  04ED  1C03               	skipc
  2667  04EE  2CF0               	goto	u2151
  2668  04EF  2CF1               	goto	u2150
  2669  04F0                     u2151:	
  2670  04F0  2CCA               	goto	l2855
  2671  04F1                     u2150:	
  2672  04F1                     l123:	
  2673                           
  2674                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2675  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2676  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2677  04F3  1C2E               	btfss	BuildByte@sommaRow,0
  2678  04F4  2CF6               	goto	u2161
  2679  04F5  2CF7               	goto	u2160
  2680  04F6                     u2161:	
  2681  04F6  2CFF               	goto	l2863
  2682  04F7                     u2160:	
  2683  04F7                     l2861:	
  2684                           
  2685                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2686  04F7  3080               	movlw	128
  2687  04F8  00A6               	movwf	??_BuildByte
  2688  04F9  0834               	movf	BuildByte@i,w
  2689  04FA  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2690  04FB  0084               	movwf	4
  2691  04FC  0826               	movf	??_BuildByte,w
  2692  04FD  1383               	bcf	3,7	;select IRP bank0
  2693  04FE  0780               	addwf	0,f
  2694  04FF                     l2863:	
  2695                           
  2696                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2697  04FF  01AE               	clrf	BuildByte@sommaRow
  2698  0500                     l2867:	
  2699                           ;./CustomLib/Serial.h: 23:         }
  2700                           
  2701                           
  2702                           ;./CustomLib/Serial.h: 28:     }
  2703  0500  3001               	movlw	1
  2704  0501  07B4               	addwf	BuildByte@i,f
  2705  0502  1803               	skipnc
  2706  0503  0AB5               	incf	BuildByte@i+1,f
  2707  0504  3000               	movlw	0
  2708  0505  07B5               	addwf	BuildByte@i+1,f
  2709  0506                     l2869:	
  2710  0506  0835               	movf	BuildByte@i+1,w
  2711  0507  3A80               	xorlw	128
  2712  0508  00FF               	movwf	btemp+1
  2713  0509  3080               	movlw	128
  2714  050A  027F               	subwf	btemp+1,w
  2715  050B  1D03               	skipz
  2716  050C  2D0F               	goto	u2175
  2717  050D  3004               	movlw	4
  2718  050E  0234               	subwf	BuildByte@i,w
  2719  050F                     u2175:	
  2720  050F  1C03               	skipc
  2721  0510  2D12               	goto	u2171
  2722  0511  2D13               	goto	u2170
  2723  0512                     u2171:	
  2724  0512  2CC6               	goto	l2849
  2725  0513                     u2170:	
  2726  0513                     l2871:	
  2727                           
  2728                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2729  0513  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0514  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0515  01B6               	clrf	BuildByte@i_355
  2732  0516  01B7               	clrf	BuildByte@i_355+1
  2733  0517                     l2877:	
  2734                           
  2735                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2736  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0519  01B2               	clrf	BuildByte@y_356
  2739  051A  01B3               	clrf	BuildByte@y_356+1
  2740  051B                     l2883:	
  2741                           
  2742                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2743  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2744  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2745  051D  0832               	movf	BuildByte@y_356,w
  2746  051E  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2747  051F  0084               	movwf	4
  2748  0520  1383               	bcf	3,7	;select IRP bank0
  2749  0521  0800               	movf	0,w
  2750  0522  00A6               	movwf	??_BuildByte
  2751  0523  0A36               	incf	BuildByte@i_355,w
  2752  0524  2D27               	goto	u2184
  2753  0525                     u2185:	
  2754  0525  1003               	clrc
  2755  0526  0CA6               	rrf	??_BuildByte,f
  2756  0527                     u2184:	
  2757  0527  3EFF               	addlw	-1
  2758  0528  1D03               	skipz
  2759  0529  2D25               	goto	u2185
  2760  052A  0826               	movf	??_BuildByte,w
  2761  052B  3901               	andlw	1
  2762  052C  00A7               	movwf	??_BuildByte+1
  2763  052D  0827               	movf	??_BuildByte+1,w
  2764  052E  07AF               	addwf	BuildByte@sommaColumn,f
  2765  052F                     l2885:	
  2766                           
  2767                           ;./CustomLib/Serial.h: 37:         }
  2768  052F  3001               	movlw	1
  2769  0530  07B2               	addwf	BuildByte@y_356,f
  2770  0531  1803               	skipnc
  2771  0532  0AB3               	incf	BuildByte@y_356+1,f
  2772  0533  3000               	movlw	0
  2773  0534  07B3               	addwf	BuildByte@y_356+1,f
  2774  0535                     l2887:	
  2775  0535  0833               	movf	BuildByte@y_356+1,w
  2776  0536  3A80               	xorlw	128
  2777  0537  00FF               	movwf	btemp+1
  2778  0538  3080               	movlw	128
  2779  0539  027F               	subwf	btemp+1,w
  2780  053A  1D03               	skipz
  2781  053B  2D3E               	goto	u2195
  2782  053C  3004               	movlw	4
  2783  053D  0232               	subwf	BuildByte@y_356,w
  2784  053E                     u2195:	
  2785  053E  1C03               	skipc
  2786  053F  2D41               	goto	u2191
  2787  0540  2D42               	goto	u2190
  2788  0541                     u2191:	
  2789  0541  2D1B               	goto	l2883
  2790  0542                     u2190:	
  2791  0542                     l129:	
  2792                           
  2793                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2794  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0544  1C2F               	btfss	BuildByte@sommaColumn,0
  2797  0545  2D47               	goto	u2201
  2798  0546  2D48               	goto	u2200
  2799  0547                     u2201:	
  2800  0547  2D55               	goto	l2891
  2801  0548                     u2200:	
  2802  0548                     l2889:	
  2803                           
  2804                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2805  0548  3001               	movlw	1
  2806  0549  00A6               	movwf	??_BuildByte
  2807  054A  0A36               	incf	BuildByte@i_355,w
  2808  054B  2D4E               	goto	u2214
  2809  054C                     u2215:	
  2810  054C  1003               	clrc
  2811  054D  0DA6               	rlf	??_BuildByte,f
  2812  054E                     u2214:	
  2813  054E  3EFF               	addlw	-1
  2814  054F  1D03               	skipz
  2815  0550  2D4C               	goto	u2215
  2816  0551  0826               	movf	??_BuildByte,w
  2817  0552  00A7               	movwf	??_BuildByte+1
  2818  0553  0827               	movf	??_BuildByte+1,w
  2819  0554  07AD               	addwf	BuildByte@txByte+4,f
  2820  0555                     l2891:	
  2821                           
  2822                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2823  0555  01AF               	clrf	BuildByte@sommaColumn
  2824  0556                     l2895:	
  2825                           ;./CustomLib/Serial.h: 42:         }
  2826                           
  2827                           
  2828                           ;./CustomLib/Serial.h: 47:     }
  2829  0556  3001               	movlw	1
  2830  0557  07B6               	addwf	BuildByte@i_355,f
  2831  0558  1803               	skipnc
  2832  0559  0AB7               	incf	BuildByte@i_355+1,f
  2833  055A  3000               	movlw	0
  2834  055B  07B7               	addwf	BuildByte@i_355+1,f
  2835  055C                     l2897:	
  2836  055C  0837               	movf	BuildByte@i_355+1,w
  2837  055D  3A80               	xorlw	128
  2838  055E  00FF               	movwf	btemp+1
  2839  055F  3080               	movlw	128
  2840  0560  027F               	subwf	btemp+1,w
  2841  0561  1D03               	skipz
  2842  0562  2D65               	goto	u2225
  2843  0563  3008               	movlw	8
  2844  0564  0236               	subwf	BuildByte@i_355,w
  2845  0565                     u2225:	
  2846  0565  1C03               	skipc
  2847  0566  2D68               	goto	u2221
  2848  0567  2D69               	goto	u2220
  2849  0568                     u2221:	
  2850  0568  2D17               	goto	l2877
  2851  0569                     u2220:	
  2852  0569                     l2899:	
  2853                           
  2854                           ;./CustomLib/Serial.h: 49:     return txByte;
  2855  0569  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2856  056A                     l132:	
  2857  056A  0008               	return
  2858  056B                     __end_of_BuildByte:	
  2859                           
  2860                           	psect	text4
  2861  0C9C                     __ptext4:	
  2862 ;; *************** function _map *****************
  2863 ;; Defined at:
  2864 ;;		line 1 in file "./CustomLib/Conversions.h"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  x               2   20[BANK0 ] int 
  2867 ;;  in_min          2   22[BANK0 ] int 
  2868 ;;  in_max          2   24[BANK0 ] int 
  2869 ;;  out_min         2   26[BANK0 ] int 
  2870 ;;  out_max         2   28[BANK0 ] int 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  2   20[BANK0 ] int 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, pclath, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0      10       0       0       0
  2883 ;;      Locals:         0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0
  2885 ;;      Totals:         0      10       0       0       0
  2886 ;;Total ram usage:       10 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    4
  2889 ;; This function calls:
  2890 ;;		___awdiv
  2891 ;;		___wmul
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function _map
  2899  0C9C                     _map:	
  2900  0C9C                     l3075:	
  2901                           ;incstack = 0
  2902                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2903                           
  2904                           
  2905                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2906  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0C9E  0836               	movf	map@in_min,w
  2909  0C9F  0238               	subwf	map@in_max,w
  2910  0CA0  00AB               	movwf	___awdiv@divisor
  2911  0CA1  0837               	movf	map@in_min+1,w
  2912  0CA2  1C03               	skipc
  2913  0CA3  0A37               	incf	map@in_min+1,w
  2914  0CA4  0239               	subwf	map@in_max+1,w
  2915  0CA5  00AC               	movwf	___awdiv@divisor+1
  2916  0CA6  0836               	movf	map@in_min,w
  2917  0CA7  0234               	subwf	map@x,w
  2918  0CA8  00A4               	movwf	___wmul@multiplier
  2919  0CA9  0837               	movf	map@in_min+1,w
  2920  0CAA  1C03               	skipc
  2921  0CAB  0A37               	incf	map@in_min+1,w
  2922  0CAC  0235               	subwf	map@x+1,w
  2923  0CAD  00A5               	movwf	___wmul@multiplier+1
  2924  0CAE  083A               	movf	map@out_min,w
  2925  0CAF  023C               	subwf	map@out_max,w
  2926  0CB0  00A6               	movwf	___wmul@multiplicand
  2927  0CB1  083B               	movf	map@out_min+1,w
  2928  0CB2  1C03               	skipc
  2929  0CB3  0A3B               	incf	map@out_min+1,w
  2930  0CB4  023D               	subwf	map@out_max+1,w
  2931  0CB5  00A7               	movwf	___wmul@multiplicand+1
  2932  0CB6  120A  158A  2444  120A  158A  	fcall	___wmul
  2933  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0CBD  0825               	movf	?___wmul+1,w
  2936  0CBE  00AE               	movwf	___awdiv@dividend+1
  2937  0CBF  0824               	movf	?___wmul,w
  2938  0CC0  00AD               	movwf	___awdiv@dividend
  2939  0CC1  120A  158A  2729  120A  158A  	fcall	___awdiv
  2940  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  2941  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  2942  0CC8  083A               	movf	map@out_min,w
  2943  0CC9  072B               	addwf	?___awdiv,w
  2944  0CCA  00B4               	movwf	?_map
  2945  0CCB  083B               	movf	map@out_min+1,w
  2946  0CCC  1803               	skipnc
  2947  0CCD  0A3B               	incf	map@out_min+1,w
  2948  0CCE  072C               	addwf	?___awdiv+1,w
  2949  0CCF  00B5               	movwf	?_map+1
  2950  0CD0                     l81:	
  2951  0CD0  0008               	return
  2952  0CD1                     __end_of_map:	
  2953                           
  2954                           	psect	text5
  2955  0C44                     __ptext5:	
  2956 ;; *************** function ___wmul *****************
  2957 ;; Defined at:
  2958 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  multiplier      2    4[BANK0 ] unsigned int 
  2961 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  product         2    8[BANK0 ] unsigned int 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  2    4[BANK0 ] unsigned int 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       4       0       0       0
  2974 ;;      Locals:         0       2       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         0       6       0       0       0
  2977 ;;Total ram usage:        6 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    3
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_map
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function ___wmul
  2989  0C44                     ___wmul:	
  2990  0C44                     l2925:	
  2991                           ;incstack = 0
  2992                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2993                           
  2994  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0C46  01A8               	clrf	___wmul@product
  2997  0C47  01A9               	clrf	___wmul@product+1
  2998  0C48                     l2927:	
  2999  0C48  1C24               	btfss	___wmul@multiplier,0
  3000  0C49  2C4B               	goto	u2251
  3001  0C4A  2C4C               	goto	u2250
  3002  0C4B                     u2251:	
  3003  0C4B  2C52               	goto	l447
  3004  0C4C                     u2250:	
  3005  0C4C                     l2929:	
  3006  0C4C  0826               	movf	___wmul@multiplicand,w
  3007  0C4D  07A8               	addwf	___wmul@product,f
  3008  0C4E  1803               	skipnc
  3009  0C4F  0AA9               	incf	___wmul@product+1,f
  3010  0C50  0827               	movf	___wmul@multiplicand+1,w
  3011  0C51  07A9               	addwf	___wmul@product+1,f
  3012  0C52                     l447:	
  3013  0C52  3001               	movlw	1
  3014  0C53                     u2265:	
  3015  0C53  1003               	clrc
  3016  0C54  0DA6               	rlf	___wmul@multiplicand,f
  3017  0C55  0DA7               	rlf	___wmul@multiplicand+1,f
  3018  0C56  3EFF               	addlw	-1
  3019  0C57  1D03               	skipz
  3020  0C58  2C53               	goto	u2265
  3021  0C59                     l2931:	
  3022  0C59  3001               	movlw	1
  3023  0C5A                     u2275:	
  3024  0C5A  1003               	clrc
  3025  0C5B  0CA5               	rrf	___wmul@multiplier+1,f
  3026  0C5C  0CA4               	rrf	___wmul@multiplier,f
  3027  0C5D  3EFF               	addlw	-1
  3028  0C5E  1D03               	skipz
  3029  0C5F  2C5A               	goto	u2275
  3030  0C60                     l2933:	
  3031  0C60  0824               	movf	___wmul@multiplier,w
  3032  0C61  0425               	iorwf	___wmul@multiplier+1,w
  3033  0C62  1D03               	btfss	3,2
  3034  0C63  2C65               	goto	u2281
  3035  0C64  2C66               	goto	u2280
  3036  0C65                     u2281:	
  3037  0C65  2C48               	goto	l2927
  3038  0C66                     u2280:	
  3039  0C66                     l2935:	
  3040  0C66  0829               	movf	___wmul@product+1,w
  3041  0C67  00A5               	movwf	?___wmul+1
  3042  0C68  0828               	movf	___wmul@product,w
  3043  0C69  00A4               	movwf	?___wmul
  3044  0C6A                     l449:	
  3045  0C6A  0008               	return
  3046  0C6B                     __end_of___wmul:	
  3047                           
  3048                           	psect	text6
  3049  0D63                     __ptext6:	
  3050 ;; *************** function _luciSemaforo *****************
  3051 ;; Defined at:
  3052 ;;		line 414 in file "main.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  index           1    wreg     unsigned char 
  3055 ;;  lux             1    4[BANK0 ] unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  index           1    7[BANK0 ] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3067 ;;      Params:         0       1       0       0       0
  3068 ;;      Locals:         0       1       0       0       0
  3069 ;;      Temps:          0       2       0       0       0
  3070 ;;      Totals:         0       4       0       0       0
  3071 ;;Total ram usage:        4 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    3
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function _luciSemaforo
  3083  0D63                     _luciSemaforo:	
  3084                           
  3085                           ;incstack = 0
  3086                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3087                           ;luciSemaforo@index stored from wreg
  3088  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0D64  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0D65  00A7               	movwf	luciSemaforo@index
  3091  0D66                     l3233:	
  3092                           
  3093                           ;main.c: 414: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 415: {;m
      +                          ain.c: 416:     switch (index)
  3094  0D66  2DA5               	goto	l3245
  3095  0D67                     l328:	
  3096                           ;main.c: 420:         {;main.c: 421:         case 0:
  3097                           
  3098                           
  3099                           ;main.c: 422:             PORTCbits.RC1 = 0;
  3100  0D67  1087               	bcf	7,1	;volatile
  3101                           
  3102                           ;main.c: 423:             PORTCbits.RC2 = 0;
  3103  0D68  1107               	bcf	7,2	;volatile
  3104                           
  3105                           ;main.c: 424:             PORTCbits.RC0 = 1;
  3106  0D69  1407               	bsf	7,0	;volatile
  3107                           
  3108                           ;main.c: 425:             break;
  3109  0D6A  2DB5               	goto	l339
  3110  0D6B                     l330:	
  3111                           ;main.c: 426:         case 1:
  3112                           
  3113                           
  3114                           ;main.c: 427:             PORTCbits.RC0 = 0;
  3115  0D6B  1007               	bcf	7,0	;volatile
  3116                           
  3117                           ;main.c: 428:             PORTCbits.RC2 = 0;
  3118  0D6C  1107               	bcf	7,2	;volatile
  3119                           
  3120                           ;main.c: 429:             PORTCbits.RC1 = 1;
  3121  0D6D  1487               	bsf	7,1	;volatile
  3122                           
  3123                           ;main.c: 430:             break;
  3124  0D6E  2DB5               	goto	l339
  3125  0D6F                     l331:	
  3126                           ;main.c: 431:         case 2:
  3127                           
  3128                           
  3129                           ;main.c: 432:             PORTCbits.RC0 = 0;
  3130  0D6F  1007               	bcf	7,0	;volatile
  3131                           
  3132                           ;main.c: 433:             PORTCbits.RC1 = 0;
  3133  0D70  1087               	bcf	7,1	;volatile
  3134                           
  3135                           ;main.c: 434:             PORTCbits.RC2 = 1;
  3136  0D71  1507               	bsf	7,2	;volatile
  3137                           
  3138                           ;main.c: 435:             break;
  3139  0D72  2DB5               	goto	l339
  3140  0D73                     l3237:	
  3141  0D73  0824               	movf	luciSemaforo@lux,w
  3142  0D74  00A5               	movwf	??_luciSemaforo
  3143  0D75  01A6               	clrf	??_luciSemaforo+1
  3144                           
  3145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3146                           ; Switch size 1, requested type "simple"
  3147                           ; Number of cases is 1, Range of values is 0 to 0
  3148                           ; switch strategies available:
  3149                           ; Name         Instructions Cycles
  3150                           ; simple_byte            4     3 (average)
  3151                           ; direct_byte           11     8 (fixed)
  3152                           ; jumptable            260     6 (fixed)
  3153                           ;	Chosen strategy is simple_byte
  3154  0D76  0826               	movf	??_luciSemaforo+1,w
  3155  0D77  3A00               	xorlw	0	; case 0
  3156  0D78  1903               	skipnz
  3157  0D79  2D7B               	goto	l3659
  3158  0D7A  2DB5               	goto	l339
  3159  0D7B                     l3659:	
  3160                           
  3161                           ; Switch size 1, requested type "simple"
  3162                           ; Number of cases is 3, Range of values is 0 to 2
  3163                           ; switch strategies available:
  3164                           ; Name         Instructions Cycles
  3165                           ; simple_byte           10     6 (average)
  3166                           ; direct_byte           17     8 (fixed)
  3167                           ; jumptable            260     6 (fixed)
  3168                           ;	Chosen strategy is simple_byte
  3169  0D7B  0825               	movf	??_luciSemaforo,w
  3170  0D7C  3A00               	xorlw	0	; case 0
  3171  0D7D  1903               	skipnz
  3172  0D7E  2D67               	goto	l328
  3173  0D7F  3A01               	xorlw	1	; case 1
  3174  0D80  1903               	skipnz
  3175  0D81  2D6B               	goto	l330
  3176  0D82  3A03               	xorlw	3	; case 2
  3177  0D83  1903               	skipnz
  3178  0D84  2D6F               	goto	l331
  3179  0D85  2DB5               	goto	l339
  3180  0D86                     l335:	
  3181                           ;main.c: 440:         {;main.c: 441:         case 0:
  3182                           
  3183                           
  3184                           ;main.c: 442:             PORTBbits.RB1 = 0;
  3185  0D86  1086               	bcf	6,1	;volatile
  3186                           
  3187                           ;main.c: 443:             PORTBbits.RB6 = 0;
  3188  0D87  1306               	bcf	6,6	;volatile
  3189                           
  3190                           ;main.c: 444:             PORTBbits.RB0 = 1;
  3191  0D88  1406               	bsf	6,0	;volatile
  3192                           
  3193                           ;main.c: 445:             break;
  3194  0D89  2DB5               	goto	l339
  3195  0D8A                     l337:	
  3196                           ;main.c: 446:         case 1:
  3197                           
  3198                           
  3199                           ;main.c: 447:             PORTBbits.RB0 = 0;
  3200  0D8A  1006               	bcf	6,0	;volatile
  3201                           
  3202                           ;main.c: 448:             PORTBbits.RB6 = 0;
  3203  0D8B  1306               	bcf	6,6	;volatile
  3204                           
  3205                           ;main.c: 449:             PORTBbits.RB1 = 1;
  3206  0D8C  1486               	bsf	6,1	;volatile
  3207                           
  3208                           ;main.c: 450:             break;
  3209  0D8D  2DB5               	goto	l339
  3210  0D8E                     l338:	
  3211                           ;main.c: 451:         case 2:
  3212                           
  3213                           
  3214                           ;main.c: 452:             PORTBbits.RB0 = 0;
  3215  0D8E  1006               	bcf	6,0	;volatile
  3216                           
  3217                           ;main.c: 453:             PORTBbits.RB1 = 0;
  3218  0D8F  1086               	bcf	6,1	;volatile
  3219                           
  3220                           ;main.c: 454:             PORTBbits.RB6 = 1;
  3221  0D90  1706               	bsf	6,6	;volatile
  3222                           
  3223                           ;main.c: 455:             break;
  3224  0D91  2DB5               	goto	l339
  3225  0D92                     l3241:	
  3226  0D92  0824               	movf	luciSemaforo@lux,w
  3227  0D93  00A5               	movwf	??_luciSemaforo
  3228  0D94  01A6               	clrf	??_luciSemaforo+1
  3229                           
  3230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3231                           ; Switch size 1, requested type "simple"
  3232                           ; Number of cases is 1, Range of values is 0 to 0
  3233                           ; switch strategies available:
  3234                           ; Name         Instructions Cycles
  3235                           ; simple_byte            4     3 (average)
  3236                           ; direct_byte           11     8 (fixed)
  3237                           ; jumptable            260     6 (fixed)
  3238                           ;	Chosen strategy is simple_byte
  3239  0D95  0826               	movf	??_luciSemaforo+1,w
  3240  0D96  3A00               	xorlw	0	; case 0
  3241  0D97  1903               	skipnz
  3242  0D98  2D9A               	goto	l3661
  3243  0D99  2DB5               	goto	l339
  3244  0D9A                     l3661:	
  3245                           
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 3, Range of values is 0 to 2
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte           10     6 (average)
  3251                           ; direct_byte           17     8 (fixed)
  3252                           ; jumptable            260     6 (fixed)
  3253                           ;	Chosen strategy is simple_byte
  3254  0D9A  0825               	movf	??_luciSemaforo,w
  3255  0D9B  3A00               	xorlw	0	; case 0
  3256  0D9C  1903               	skipnz
  3257  0D9D  2D86               	goto	l335
  3258  0D9E  3A01               	xorlw	1	; case 1
  3259  0D9F  1903               	skipnz
  3260  0DA0  2D8A               	goto	l337
  3261  0DA1  3A03               	xorlw	3	; case 2
  3262  0DA2  1903               	skipnz
  3263  0DA3  2D8E               	goto	l338
  3264  0DA4  2DB5               	goto	l339
  3265  0DA5                     l3245:	
  3266  0DA5  0827               	movf	luciSemaforo@index,w
  3267  0DA6  00A5               	movwf	??_luciSemaforo
  3268  0DA7  01A6               	clrf	??_luciSemaforo+1
  3269                           
  3270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3271                           ; Switch size 1, requested type "simple"
  3272                           ; Number of cases is 1, Range of values is 0 to 0
  3273                           ; switch strategies available:
  3274                           ; Name         Instructions Cycles
  3275                           ; simple_byte            4     3 (average)
  3276                           ; direct_byte           11     8 (fixed)
  3277                           ; jumptable            260     6 (fixed)
  3278                           ;	Chosen strategy is simple_byte
  3279  0DA8  0826               	movf	??_luciSemaforo+1,w
  3280  0DA9  3A00               	xorlw	0	; case 0
  3281  0DAA  1903               	skipnz
  3282  0DAB  2DAD               	goto	l3663
  3283  0DAC  2DB5               	goto	l339
  3284  0DAD                     l3663:	
  3285                           
  3286                           ; Switch size 1, requested type "simple"
  3287                           ; Number of cases is 2, Range of values is 0 to 1
  3288                           ; switch strategies available:
  3289                           ; Name         Instructions Cycles
  3290                           ; simple_byte            7     4 (average)
  3291                           ; direct_byte           14     8 (fixed)
  3292                           ; jumptable            260     6 (fixed)
  3293                           ;	Chosen strategy is simple_byte
  3294  0DAD  0825               	movf	??_luciSemaforo,w
  3295  0DAE  3A00               	xorlw	0	; case 0
  3296  0DAF  1903               	skipnz
  3297  0DB0  2D73               	goto	l3237
  3298  0DB1  3A01               	xorlw	1	; case 1
  3299  0DB2  1903               	skipnz
  3300  0DB3  2D92               	goto	l3241
  3301  0DB4  2DB5               	goto	l339
  3302  0DB5                     l339:	
  3303  0DB5  0008               	return
  3304  0DB6                     __end_of_luciSemaforo:	
  3305                           
  3306                           	psect	text7
  3307  0BCC                     __ptext7:	
  3308 ;; *************** function _init_ADC *****************
  3309 ;; Defined at:
  3310 ;;		line 318 in file "main.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0
  3326 ;;      Temps:          0       1       0       0       0
  3327 ;;      Totals:         0       1       0       0       0
  3328 ;;Total ram usage:        1 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    3
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function _init_ADC
  3340  0BCC                     _init_ADC:	
  3341  0BCC                     l3165:	
  3342                           ;incstack = 0
  3343                           ; Regs used in _init_ADC: [wreg+status,2]
  3344                           
  3345                           
  3346                           ;main.c: 320:     TRISA = 0xE3;
  3347  0BCC  30E3               	movlw	227
  3348  0BCD  1683               	bsf	3,5	;RP0=1, select bank1
  3349  0BCE  1303               	bcf	3,6	;RP1=0, select bank1
  3350  0BCF  0085               	movwf	5	;volatile
  3351  0BD0                     l3167:	
  3352                           
  3353                           ;main.c: 321:     ADCON0 = 0x00;
  3354  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0BD2  019F               	clrf	31	;volatile
  3357  0BD3                     l3169:	
  3358                           
  3359                           ;main.c: 322:     ADCON1 = 0x80;
  3360  0BD3  3080               	movlw	128
  3361  0BD4  1683               	bsf	3,5	;RP0=1, select bank1
  3362  0BD5  1303               	bcf	3,6	;RP1=0, select bank1
  3363  0BD6  009F               	movwf	31	;volatile
  3364  0BD7                     l3171:	
  3365                           
  3366                           ;main.c: 323:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3367  0BD7  3019               	movlw	25
  3368  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0BDA  00A4               	movwf	??_init_ADC
  3371  0BDB                     u2987:	
  3372  0BDB  0BA4               	decfsz	??_init_ADC,f
  3373  0BDC  2BDB               	goto	u2987
  3374  0BDD  2BDE               	nop2
  3375  0BDE                     l279:	
  3376  0BDE  0008               	return
  3377  0BDF                     __end_of_init_ADC:	
  3378                           
  3379                           	psect	text8
  3380  0E69                     __ptext8:	
  3381 ;; *************** function _UpdateTimes *****************
  3382 ;; Defined at:
  3383 ;;		line 3 in file "./CustomLib/TrafficLight.h"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  _semafori       1    wreg     PTR PTR struct .
  3386 ;;		 -> Semafori(16), 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  _semafori       1   20[BANK0 ] PTR PTR struct .
  3389 ;;		 -> Semafori(16), 
  3390 ;;  i               1   22[BANK0 ] unsigned char 
  3391 ;;  l               1   21[BANK0 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         0       3       0       0       0
  3403 ;;      Temps:          0      16       0       0       0
  3404 ;;      Totals:         0      19       0       0       0
  3405 ;;Total ram usage:       19 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    3
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function _UpdateTimes
  3417  0E69                     _UpdateTimes:	
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3421                           ;UpdateTimes@_semafori stored from wreg
  3422  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0E6B  00B4               	movwf	UpdateTimes@_semafori
  3425  0E6C                     l3091:	
  3426                           
  3427                           ;./CustomLib/TrafficLight.h: 3: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 4: {;./CustomLib/TrafficLight.h: 6:     for (unsigned char l = 0; l < 16; l++)
  3428  0E6C  01B5               	clrf	UpdateTimes@l
  3429  0E6D                     l3097:	
  3430                           
  3431                           ;./CustomLib/TrafficLight.h: 7:     {;./CustomLib/TrafficLight.h: 8:         for(unsigne
      +                          d char i = 0; i < 3; i++)
  3432  0E6D  01B6               	clrf	UpdateTimes@i
  3433  0E6E                     l3103:	
  3434                           
  3435                           ;./CustomLib/TrafficLight.h: 9:         {;./CustomLib/TrafficLight.h: 10:             (*
      +                          (_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3436  0E6E  0835               	movf	UpdateTimes@l,w
  3437  0E6F  00A4               	movwf	??_UpdateTimes
  3438  0E70  0724               	addwf	??_UpdateTimes,w
  3439  0E71  0734               	addwf	UpdateTimes@_semafori,w
  3440  0E72  00A5               	movwf	??_UpdateTimes+1
  3441  0E73  0825               	movf	??_UpdateTimes+1,w
  3442  0E74  0084               	movwf	4
  3443  0E75  1383               	bcf	3,7	;select IRP bank0
  3444  0E76  0800               	movf	0,w
  3445  0E77  00A6               	movwf	??_UpdateTimes+2
  3446  0E78  0A84               	incf	4,f
  3447  0E79  0800               	movf	0,w
  3448  0E7A  00A7               	movwf	??_UpdateTimes+3
  3449  0E7B  0836               	movf	UpdateTimes@i,w
  3450  0E7C  00A8               	movwf	??_UpdateTimes+4
  3451  0E7D  0728               	addwf	??_UpdateTimes+4,w
  3452  0E7E  3E06               	addlw	6
  3453  0E7F  0726               	addwf	??_UpdateTimes+2,w
  3454  0E80  00A9               	movwf	??_UpdateTimes+5
  3455  0E81  0827               	movf	??_UpdateTimes+3,w
  3456  0E82  1803               	skipnc
  3457  0E83  3E01               	addlw	1
  3458  0E84  00AA               	movwf	??_UpdateTimes+6
  3459  0E85  0829               	movf	??_UpdateTimes+5,w
  3460  0E86  0084               	movwf	4
  3461  0E87  1783               	bsf	3,7
  3462  0E88  1C2A               	btfss	??_UpdateTimes+6,0
  3463  0E89  1383               	bcf	3,7
  3464  0E8A  0800               	movf	0,w
  3465  0E8B  00AB               	movwf	??_UpdateTimes+7
  3466  0E8C  0A84               	incf	4,f
  3467  0E8D  0800               	movf	0,w
  3468  0E8E  00AC               	movwf	??_UpdateTimes+8
  3469  0E8F  0835               	movf	UpdateTimes@l,w
  3470  0E90  00AD               	movwf	??_UpdateTimes+9
  3471  0E91  072D               	addwf	??_UpdateTimes+9,w
  3472  0E92  0734               	addwf	UpdateTimes@_semafori,w
  3473  0E93  00AE               	movwf	??_UpdateTimes+10
  3474  0E94  082E               	movf	??_UpdateTimes+10,w
  3475  0E95  0084               	movwf	4
  3476  0E96  1383               	bcf	3,7	;select IRP bank0
  3477  0E97  0800               	movf	0,w
  3478  0E98  00AF               	movwf	??_UpdateTimes+11
  3479  0E99  0A84               	incf	4,f
  3480  0E9A  0800               	movf	0,w
  3481  0E9B  00B0               	movwf	??_UpdateTimes+12
  3482  0E9C  0836               	movf	UpdateTimes@i,w
  3483  0E9D  00B1               	movwf	??_UpdateTimes+13
  3484  0E9E  0731               	addwf	??_UpdateTimes+13,w
  3485  0E9F  072F               	addwf	??_UpdateTimes+11,w
  3486  0EA0  00B2               	movwf	??_UpdateTimes+14
  3487  0EA1  0830               	movf	??_UpdateTimes+12,w
  3488  0EA2  1803               	skipnc
  3489  0EA3  3E01               	addlw	1
  3490  0EA4  00B3               	movwf	??_UpdateTimes+15
  3491  0EA5  0832               	movf	??_UpdateTimes+14,w
  3492  0EA6  0084               	movwf	4
  3493  0EA7  1783               	bsf	3,7
  3494  0EA8  1C33               	btfss	??_UpdateTimes+15,0
  3495  0EA9  1383               	bcf	3,7
  3496  0EAA  082B               	movf	??_UpdateTimes+7,w
  3497  0EAB  0080               	movwf	0
  3498  0EAC  0A84               	incf	4,f
  3499  0EAD  082C               	movf	??_UpdateTimes+8,w
  3500  0EAE  0080               	movwf	0
  3501  0EAF                     l3105:	
  3502                           
  3503                           ;./CustomLib/TrafficLight.h: 11:         }
  3504  0EAF  3001               	movlw	1
  3505  0EB0  00A4               	movwf	??_UpdateTimes
  3506  0EB1  0824               	movf	??_UpdateTimes,w
  3507  0EB2  07B6               	addwf	UpdateTimes@i,f
  3508  0EB3                     l3107:	
  3509  0EB3  3003               	movlw	3
  3510  0EB4  0236               	subwf	UpdateTimes@i,w
  3511  0EB5  1C03               	skipc
  3512  0EB6  2EB8               	goto	u2611
  3513  0EB7  2EB9               	goto	u2610
  3514  0EB8                     u2611:	
  3515  0EB8  2E6E               	goto	l3103
  3516  0EB9                     u2610:	
  3517  0EB9                     l3109:	
  3518                           
  3519                           ;./CustomLib/TrafficLight.h: 12:     }
  3520  0EB9  3001               	movlw	1
  3521  0EBA  00A4               	movwf	??_UpdateTimes
  3522  0EBB  0824               	movf	??_UpdateTimes,w
  3523  0EBC  07B5               	addwf	UpdateTimes@l,f
  3524  0EBD                     l3111:	
  3525  0EBD  3010               	movlw	16
  3526  0EBE  0235               	subwf	UpdateTimes@l,w
  3527  0EBF  1C03               	skipc
  3528  0EC0  2EC2               	goto	u2621
  3529  0EC1  2EC3               	goto	u2620
  3530  0EC2                     u2621:	
  3531  0EC2  2E6D               	goto	l3097
  3532  0EC3                     u2620:	
  3533  0EC3                     l139:	
  3534  0EC3  0008               	return
  3535  0EC4                     __end_of_UpdateTimes:	
  3536                           
  3537                           	psect	text9
  3538  07C4                     __ptext9:	
  3539 ;; *************** function _UART_Init *****************
  3540 ;; Defined at:
  3541 ;;		line 337 in file "main.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  baudrate        2   19[BANK0 ] int 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, pclath, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3555 ;;      Params:         0       2       0       0       0
  3556 ;;      Locals:         0       0       0       0       0
  3557 ;;      Temps:          0       4       0       0       0
  3558 ;;      Totals:         0       6       0       0       0
  3559 ;;Total ram usage:        6 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    4
  3562 ;; This function calls:
  3563 ;;		___aldiv
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           
  3570                           ;psect for function _UART_Init
  3571  07C4                     _UART_Init:	
  3572  07C4                     l3173:	
  3573                           ;incstack = 0
  3574                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3575                           
  3576                           
  3577                           ;main.c: 337: void UART_Init(int baudrate);main.c: 338: {;main.c: 339:     TRISCbits.TRI
      +                          SC6 = 0;
  3578  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  3579  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  3580  07C6  1307               	bcf	7,6	;volatile
  3581                           
  3582                           ;main.c: 340:     TXSTAbits.TXEN = 1;
  3583  07C7  1698               	bsf	24,5	;volatile
  3584                           
  3585                           ;main.c: 341:     RCSTAbits.SPEN = 1;
  3586  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  3587  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  3588  07CA  1798               	bsf	24,7	;volatile
  3589                           
  3590                           ;main.c: 342:     RCSTAbits.CREN = 1;
  3591  07CB  1618               	bsf	24,4	;volatile
  3592  07CC                     l3175:	
  3593                           
  3594                           ;main.c: 343:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3595  07CC  0833               	movf	UART_Init@baudrate,w
  3596  07CD  00B5               	movwf	??_UART_Init
  3597  07CE  0834               	movf	UART_Init@baudrate+1,w
  3598  07CF  00B6               	movwf	??_UART_Init+1
  3599  07D0  3000               	movlw	0
  3600  07D1  1BB6               	btfsc	??_UART_Init+1,7
  3601  07D2  30FF               	movlw	255
  3602  07D3  00B7               	movwf	??_UART_Init+2
  3603  07D4  00B8               	movwf	??_UART_Init+3
  3604  07D5  3006               	movlw	6
  3605  07D6                     u2675:	
  3606  07D6  1003               	clrc
  3607  07D7  0DB5               	rlf	??_UART_Init,f
  3608  07D8  0DB6               	rlf	??_UART_Init+1,f
  3609  07D9  0DB7               	rlf	??_UART_Init+2,f
  3610  07DA  0DB8               	rlf	??_UART_Init+3,f
  3611  07DB                     u2670:	
  3612  07DB  3EFF               	addlw	-1
  3613  07DC  1D03               	skipz
  3614  07DD  2FD6               	goto	u2675
  3615  07DE  0838               	movf	??_UART_Init+3,w
  3616  07DF  00A7               	movwf	___aldiv@divisor+3
  3617  07E0  0837               	movf	??_UART_Init+2,w
  3618  07E1  00A6               	movwf	___aldiv@divisor+2
  3619  07E2  0836               	movf	??_UART_Init+1,w
  3620  07E3  00A5               	movwf	___aldiv@divisor+1
  3621  07E4  0835               	movf	??_UART_Init,w
  3622  07E5  00A4               	movwf	___aldiv@divisor
  3623  07E6  3001               	movlw	1
  3624  07E7  00AB               	movwf	___aldiv@dividend+3
  3625  07E8  30E8               	movlw	232
  3626  07E9  00AA               	movwf	___aldiv@dividend+2
  3627  07EA  3048               	movlw	72
  3628  07EB  00A9               	movwf	___aldiv@dividend+1
  3629  07EC  3000               	movlw	0
  3630  07ED  00A8               	movwf	___aldiv@dividend
  3631  07EE  120A  118A  256B  120A  118A  	fcall	___aldiv
  3632  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  3633  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  3634  07F5  0824               	movf	?___aldiv,w
  3635  07F6  3EFF               	addlw	255
  3636  07F7  1683               	bsf	3,5	;RP0=1, select bank1
  3637  07F8  1303               	bcf	3,6	;RP1=0, select bank1
  3638  07F9  0099               	movwf	25	;volatile
  3639  07FA                     l3177:	
  3640                           
  3641                           ;main.c: 344:     INTCONbits.GIE = 1;
  3642  07FA  178B               	bsf	11,7	;volatile
  3643  07FB                     l3179:	
  3644                           
  3645                           ;main.c: 345:     INTCONbits.PEIE = 1;
  3646  07FB  170B               	bsf	11,6	;volatile
  3647  07FC                     l3181:	
  3648                           
  3649                           ;main.c: 346:     PIE1bits.RCIE = 1;
  3650  07FC  168C               	bsf	12,5	;volatile
  3651  07FD                     l288:	
  3652  07FD  0008               	return
  3653  07FE                     __end_of_UART_Init:	
  3654                           
  3655                           	psect	text10
  3656  056B                     __ptext10:	
  3657 ;; *************** function ___aldiv *****************
  3658 ;; Defined at:
  3659 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  divisor         4    4[BANK0 ] long 
  3662 ;;  dividend        4    8[BANK0 ] long 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  quotient        4   15[BANK0 ] long 
  3665 ;;  sign            1   14[BANK0 ] unsigned char 
  3666 ;;  counter         1   13[BANK0 ] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  4    4[BANK0 ] long 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       8       0       0       0
  3677 ;;      Locals:         0       6       0       0       0
  3678 ;;      Temps:          0       1       0       0       0
  3679 ;;      Totals:         0      15       0       0       0
  3680 ;;Total ram usage:       15 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    3
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_UART_Init
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function ___aldiv
  3692  056B                     ___aldiv:	
  3693  056B                     l2953:	
  3694                           ;incstack = 0
  3695                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3696                           
  3697  056B  1283               	bcf	3,5	;RP0=0, select bank0
  3698  056C  1303               	bcf	3,6	;RP1=0, select bank0
  3699  056D  01AE               	clrf	___aldiv@sign
  3700  056E                     l2955:	
  3701  056E  1FA7               	btfss	___aldiv@divisor+3,7
  3702  056F  2D71               	goto	u2311
  3703  0570  2D72               	goto	u2310
  3704  0571                     u2311:	
  3705  0571  2D7F               	goto	l512
  3706  0572                     u2310:	
  3707  0572                     l2957:	
  3708  0572  09A4               	comf	___aldiv@divisor,f
  3709  0573  09A5               	comf	___aldiv@divisor+1,f
  3710  0574  09A6               	comf	___aldiv@divisor+2,f
  3711  0575  09A7               	comf	___aldiv@divisor+3,f
  3712  0576  0AA4               	incf	___aldiv@divisor,f
  3713  0577  1903               	skipnz
  3714  0578  0AA5               	incf	___aldiv@divisor+1,f
  3715  0579  1903               	skipnz
  3716  057A  0AA6               	incf	___aldiv@divisor+2,f
  3717  057B  1903               	skipnz
  3718  057C  0AA7               	incf	___aldiv@divisor+3,f
  3719  057D  01AE               	clrf	___aldiv@sign
  3720  057E  0AAE               	incf	___aldiv@sign,f
  3721  057F                     l512:	
  3722  057F  1FAB               	btfss	___aldiv@dividend+3,7
  3723  0580  2D82               	goto	u2321
  3724  0581  2D83               	goto	u2320
  3725  0582                     u2321:	
  3726  0582  2D92               	goto	l2963
  3727  0583                     u2320:	
  3728  0583                     l2959:	
  3729  0583  09A8               	comf	___aldiv@dividend,f
  3730  0584  09A9               	comf	___aldiv@dividend+1,f
  3731  0585  09AA               	comf	___aldiv@dividend+2,f
  3732  0586  09AB               	comf	___aldiv@dividend+3,f
  3733  0587  0AA8               	incf	___aldiv@dividend,f
  3734  0588  1903               	skipnz
  3735  0589  0AA9               	incf	___aldiv@dividend+1,f
  3736  058A  1903               	skipnz
  3737  058B  0AAA               	incf	___aldiv@dividend+2,f
  3738  058C  1903               	skipnz
  3739  058D  0AAB               	incf	___aldiv@dividend+3,f
  3740  058E                     l2961:	
  3741  058E  3001               	movlw	1
  3742  058F  00AC               	movwf	??___aldiv
  3743  0590  082C               	movf	??___aldiv,w
  3744  0591  06AE               	xorwf	___aldiv@sign,f
  3745  0592                     l2963:	
  3746  0592  3000               	movlw	0
  3747  0593  00B2               	movwf	___aldiv@quotient+3
  3748  0594  3000               	movlw	0
  3749  0595  00B1               	movwf	___aldiv@quotient+2
  3750  0596  3000               	movlw	0
  3751  0597  00B0               	movwf	___aldiv@quotient+1
  3752  0598  3000               	movlw	0
  3753  0599  00AF               	movwf	___aldiv@quotient
  3754  059A                     l2965:	
  3755  059A  0827               	movf	___aldiv@divisor+3,w
  3756  059B  0426               	iorwf	___aldiv@divisor+2,w
  3757  059C  0425               	iorwf	___aldiv@divisor+1,w
  3758  059D  0424               	iorwf	___aldiv@divisor,w
  3759  059E  1903               	skipnz
  3760  059F  2DA1               	goto	u2331
  3761  05A0  2DA2               	goto	u2330
  3762  05A1                     u2331:	
  3763  05A1  2DEF               	goto	l2985
  3764  05A2                     u2330:	
  3765  05A2                     l2967:	
  3766  05A2  01AD               	clrf	___aldiv@counter
  3767  05A3  0AAD               	incf	___aldiv@counter,f
  3768  05A4  2DB2               	goto	l2971
  3769  05A5                     l2969:	
  3770  05A5  3001               	movlw	1
  3771  05A6  00AC               	movwf	??___aldiv
  3772  05A7                     u2345:	
  3773  05A7  1003               	clrc
  3774  05A8  0DA4               	rlf	___aldiv@divisor,f
  3775  05A9  0DA5               	rlf	___aldiv@divisor+1,f
  3776  05AA  0DA6               	rlf	___aldiv@divisor+2,f
  3777  05AB  0DA7               	rlf	___aldiv@divisor+3,f
  3778  05AC  0BAC               	decfsz	??___aldiv,f
  3779  05AD  2DA7               	goto	u2345
  3780  05AE  3001               	movlw	1
  3781  05AF  00AC               	movwf	??___aldiv
  3782  05B0  082C               	movf	??___aldiv,w
  3783  05B1  07AD               	addwf	___aldiv@counter,f
  3784  05B2                     l2971:	
  3785  05B2  1FA7               	btfss	___aldiv@divisor+3,7
  3786  05B3  2DB5               	goto	u2351
  3787  05B4  2DB6               	goto	u2350
  3788  05B5                     u2351:	
  3789  05B5  2DA5               	goto	l2969
  3790  05B6                     u2350:	
  3791  05B6                     l2973:	
  3792  05B6  3001               	movlw	1
  3793  05B7  00AC               	movwf	??___aldiv
  3794  05B8                     u2365:	
  3795  05B8  1003               	clrc
  3796  05B9  0DAF               	rlf	___aldiv@quotient,f
  3797  05BA  0DB0               	rlf	___aldiv@quotient+1,f
  3798  05BB  0DB1               	rlf	___aldiv@quotient+2,f
  3799  05BC  0DB2               	rlf	___aldiv@quotient+3,f
  3800  05BD  0BAC               	decfsz	??___aldiv,f
  3801  05BE  2DB8               	goto	u2365
  3802  05BF                     l2975:	
  3803  05BF  0827               	movf	___aldiv@divisor+3,w
  3804  05C0  022B               	subwf	___aldiv@dividend+3,w
  3805  05C1  1D03               	skipz
  3806  05C2  2DCD               	goto	u2375
  3807  05C3  0826               	movf	___aldiv@divisor+2,w
  3808  05C4  022A               	subwf	___aldiv@dividend+2,w
  3809  05C5  1D03               	skipz
  3810  05C6  2DCD               	goto	u2375
  3811  05C7  0825               	movf	___aldiv@divisor+1,w
  3812  05C8  0229               	subwf	___aldiv@dividend+1,w
  3813  05C9  1D03               	skipz
  3814  05CA  2DCD               	goto	u2375
  3815  05CB  0824               	movf	___aldiv@divisor,w
  3816  05CC  0228               	subwf	___aldiv@dividend,w
  3817  05CD                     u2375:	
  3818  05CD  1C03               	skipc
  3819  05CE  2DD0               	goto	u2371
  3820  05CF  2DD1               	goto	u2370
  3821  05D0                     u2371:	
  3822  05D0  2DE0               	goto	l2981
  3823  05D1                     u2370:	
  3824  05D1                     l2977:	
  3825  05D1  0824               	movf	___aldiv@divisor,w
  3826  05D2  02A8               	subwf	___aldiv@dividend,f
  3827  05D3  0825               	movf	___aldiv@divisor+1,w
  3828  05D4  1C03               	skipc
  3829  05D5  0F25               	incfsz	___aldiv@divisor+1,w
  3830  05D6  02A9               	subwf	___aldiv@dividend+1,f
  3831  05D7  0826               	movf	___aldiv@divisor+2,w
  3832  05D8  1C03               	skipc
  3833  05D9  0F26               	incfsz	___aldiv@divisor+2,w
  3834  05DA  02AA               	subwf	___aldiv@dividend+2,f
  3835  05DB  0827               	movf	___aldiv@divisor+3,w
  3836  05DC  1C03               	skipc
  3837  05DD  0F27               	incfsz	___aldiv@divisor+3,w
  3838  05DE  02AB               	subwf	___aldiv@dividend+3,f
  3839  05DF                     l2979:	
  3840  05DF  142F               	bsf	___aldiv@quotient,0
  3841  05E0                     l2981:	
  3842  05E0  3001               	movlw	1
  3843  05E1                     u2385:	
  3844  05E1  1003               	clrc
  3845  05E2  0CA7               	rrf	___aldiv@divisor+3,f
  3846  05E3  0CA6               	rrf	___aldiv@divisor+2,f
  3847  05E4  0CA5               	rrf	___aldiv@divisor+1,f
  3848  05E5  0CA4               	rrf	___aldiv@divisor,f
  3849  05E6  3EFF               	addlw	-1
  3850  05E7  1D03               	skipz
  3851  05E8  2DE1               	goto	u2385
  3852  05E9                     l2983:	
  3853  05E9  3001               	movlw	1
  3854  05EA  02AD               	subwf	___aldiv@counter,f
  3855  05EB  1D03               	btfss	3,2
  3856  05EC  2DEE               	goto	u2391
  3857  05ED  2DEF               	goto	u2390
  3858  05EE                     u2391:	
  3859  05EE  2DB6               	goto	l2973
  3860  05EF                     u2390:	
  3861  05EF                     l2985:	
  3862  05EF  082E               	movf	___aldiv@sign,w
  3863  05F0  1903               	btfsc	3,2
  3864  05F1  2DF3               	goto	u2401
  3865  05F2  2DF4               	goto	u2400
  3866  05F3                     u2401:	
  3867  05F3  2DFF               	goto	l2989
  3868  05F4                     u2400:	
  3869  05F4                     l2987:	
  3870  05F4  09AF               	comf	___aldiv@quotient,f
  3871  05F5  09B0               	comf	___aldiv@quotient+1,f
  3872  05F6  09B1               	comf	___aldiv@quotient+2,f
  3873  05F7  09B2               	comf	___aldiv@quotient+3,f
  3874  05F8  0AAF               	incf	___aldiv@quotient,f
  3875  05F9  1903               	skipnz
  3876  05FA  0AB0               	incf	___aldiv@quotient+1,f
  3877  05FB  1903               	skipnz
  3878  05FC  0AB1               	incf	___aldiv@quotient+2,f
  3879  05FD  1903               	skipnz
  3880  05FE  0AB2               	incf	___aldiv@quotient+3,f
  3881  05FF                     l2989:	
  3882  05FF  0832               	movf	___aldiv@quotient+3,w
  3883  0600  00A7               	movwf	?___aldiv+3
  3884  0601  0831               	movf	___aldiv@quotient+2,w
  3885  0602  00A6               	movwf	?___aldiv+2
  3886  0603  0830               	movf	___aldiv@quotient+1,w
  3887  0604  00A5               	movwf	?___aldiv+1
  3888  0605  082F               	movf	___aldiv@quotient,w
  3889  0606  00A4               	movwf	?___aldiv
  3890  0607                     l522:	
  3891  0607  0008               	return
  3892  0608                     __end_of___aldiv:	
  3893                           
  3894                           	psect	text11
  3895  06A4                     __ptext11:	
  3896 ;; *************** function _ShowDigitsOnDisplay *****************
  3897 ;; Defined at:
  3898 ;;		line 462 in file "main.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0
  3914 ;;      Temps:          0       2       0       0       0
  3915 ;;      Totals:         0       2       0       0       0
  3916 ;;Total ram usage:        2 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    4
  3919 ;; This function calls:
  3920 ;;		_SetDisplay
  3921 ;;		___awmod
  3922 ;; This function is called by:
  3923 ;;		_main
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           
  3928                           ;psect for function _ShowDigitsOnDisplay
  3929  06A4                     _ShowDigitsOnDisplay:	
  3930  06A4                     l3209:	
  3931                           ;incstack = 0
  3932                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3933                           
  3934                           
  3935                           ;main.c: 465:     switch (disp)
  3936  06A4  2F06               	goto	l3225
  3937  06A5                     l3211:	
  3938                           
  3939                           ;main.c: 468:             if (centinaia > 0)
  3940  06A5  0862               	movf	_centinaia,w
  3941  06A6  1903               	btfsc	3,2
  3942  06A7  2EA9               	goto	u2711
  3943  06A8  2EAA               	goto	u2710
  3944  06A9                     u2711:	
  3945  06A9  2EBD               	goto	l344
  3946  06AA                     u2710:	
  3947  06AA                     l3213:	
  3948                           
  3949                           ;main.c: 469:             {;main.c: 470:                 SetDisplay(1, 0, 0, display[cen
      +                          tinaia]);
  3950  06AA  01A4               	clrf	SetDisplay@d2
  3951  06AB  01A5               	clrf	SetDisplay@d3
  3952  06AC  0862               	movf	_centinaia,w
  3953  06AD  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3954  06AE  0084               	movwf	4
  3955  06AF  120A  158A  2000  120A  118A  	fcall	stringdir
  3956  06B4  00AB               	movwf	??_ShowDigitsOnDisplay
  3957  06B5  082B               	movf	??_ShowDigitsOnDisplay,w
  3958  06B6  00A6               	movwf	SetDisplay@value
  3959  06B7  3001               	movlw	1
  3960  06B8  120A  158A  23F2  120A  118A  	fcall	_SetDisplay
  3961  06BD                     l344:	
  3962                           ;main.c: 471:             }
  3963                           
  3964  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  3965  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  3966  06BF  01A4               	clrf	SetDisplay@d2
  3967  06C0  01A5               	clrf	SetDisplay@d3
  3968  06C1  3009               	movlw	low (((_display+8)-__stringbase)| (0+32768))
  3969  06C2  0084               	movwf	4
  3970  06C3  120A  158A  2000  120A  118A  	fcall	stringdir
  3971  06C8  00AB               	movwf	??_ShowDigitsOnDisplay
  3972  06C9  082B               	movf	??_ShowDigitsOnDisplay,w
  3973  06CA  00A6               	movwf	SetDisplay@value
  3974  06CB  3001               	movlw	1
  3975  06CC  120A  158A  23F2  120A  118A  	fcall	_SetDisplay
  3976                           
  3977                           ;main.c: 474:             break;
  3978  06D1  2F1B               	goto	l3227
  3979  06D2                     l3215:	
  3980                           
  3981                           ;main.c: 476:             if (decine > 0 || centinaia > 0)
  3982  06D2  0863               	movf	_decine,w
  3983  06D3  1D03               	btfss	3,2
  3984  06D4  2ED6               	goto	u2721
  3985  06D5  2ED7               	goto	u2720
  3986  06D6                     u2721:	
  3987  06D6  2EDC               	goto	l3219
  3988  06D7                     u2720:	
  3989  06D7                     l3217:	
  3990  06D7  0862               	movf	_centinaia,w
  3991  06D8  1903               	btfsc	3,2
  3992  06D9  2EDB               	goto	u2731
  3993  06DA  2EDC               	goto	u2730
  3994  06DB                     u2731:	
  3995  06DB  2F1B               	goto	l3227
  3996  06DC                     u2730:	
  3997  06DC                     l3219:	
  3998                           
  3999                           ;main.c: 477:             {;main.c: 478:                 SetDisplay(0, 1, 0, display[dec
      +                          ine]);
  4000  06DC  01A4               	clrf	SetDisplay@d2
  4001  06DD  0AA4               	incf	SetDisplay@d2,f
  4002  06DE  01A5               	clrf	SetDisplay@d3
  4003  06DF  0863               	movf	_decine,w
  4004  06E0  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4005  06E1  0084               	movwf	4
  4006  06E2  120A  158A  2000  120A  118A  	fcall	stringdir
  4007  06E7  00AB               	movwf	??_ShowDigitsOnDisplay
  4008  06E8  082B               	movf	??_ShowDigitsOnDisplay,w
  4009  06E9  00A6               	movwf	SetDisplay@value
  4010  06EA  3000               	movlw	0
  4011  06EB  120A  158A  23F2  120A  118A  	fcall	_SetDisplay
  4012  06F0  2F1B               	goto	l3227
  4013  06F1                     l3221:	
  4014                           
  4015                           ;main.c: 482:             SetDisplay(0, 0, 1, display[unita]);
  4016  06F1  01A4               	clrf	SetDisplay@d2
  4017  06F2  01A5               	clrf	SetDisplay@d3
  4018  06F3  0AA5               	incf	SetDisplay@d3,f
  4019  06F4  0864               	movf	_unita,w
  4020  06F5  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  4021  06F6  0084               	movwf	4
  4022  06F7  120A  158A  2000  120A  118A  	fcall	stringdir
  4023  06FC  00AB               	movwf	??_ShowDigitsOnDisplay
  4024  06FD  082B               	movf	??_ShowDigitsOnDisplay,w
  4025  06FE  00A6               	movwf	SetDisplay@value
  4026  06FF  3000               	movlw	0
  4027  0700  120A  158A  23F2  120A  118A  	fcall	_SetDisplay
  4028                           
  4029                           ;main.c: 483:             break;
  4030  0705  2F1B               	goto	l3227
  4031  0706                     l3225:	
  4032  0706  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0707  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0708  0851               	movf	_disp,w
  4035  0709  00AB               	movwf	??_ShowDigitsOnDisplay
  4036  070A  01AC               	clrf	??_ShowDigitsOnDisplay+1
  4037                           
  4038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4039                           ; Switch size 1, requested type "simple"
  4040                           ; Number of cases is 1, Range of values is 0 to 0
  4041                           ; switch strategies available:
  4042                           ; Name         Instructions Cycles
  4043                           ; simple_byte            4     3 (average)
  4044                           ; direct_byte           11     8 (fixed)
  4045                           ; jumptable            260     6 (fixed)
  4046                           ;	Chosen strategy is simple_byte
  4047  070B  082C               	movf	??_ShowDigitsOnDisplay+1,w
  4048  070C  3A00               	xorlw	0	; case 0
  4049  070D  1903               	skipnz
  4050  070E  2F10               	goto	l3665
  4051  070F  2F1B               	goto	l3227
  4052  0710                     l3665:	
  4053                           
  4054                           ; Switch size 1, requested type "simple"
  4055                           ; Number of cases is 3, Range of values is 0 to 2
  4056                           ; switch strategies available:
  4057                           ; Name         Instructions Cycles
  4058                           ; simple_byte           10     6 (average)
  4059                           ; direct_byte           17     8 (fixed)
  4060                           ; jumptable            260     6 (fixed)
  4061                           ;	Chosen strategy is simple_byte
  4062  0710  082B               	movf	??_ShowDigitsOnDisplay,w
  4063  0711  3A00               	xorlw	0	; case 0
  4064  0712  1903               	skipnz
  4065  0713  2EA5               	goto	l3211
  4066  0714  3A01               	xorlw	1	; case 1
  4067  0715  1903               	skipnz
  4068  0716  2ED2               	goto	l3215
  4069  0717  3A03               	xorlw	3	; case 2
  4070  0718  1903               	skipnz
  4071  0719  2EF1               	goto	l3221
  4072  071A  2F1B               	goto	l3227
  4073  071B                     l3227:	
  4074                           
  4075                           ;main.c: 485:     disp = (disp + 1) % 3;
  4076  071B  3003               	movlw	3
  4077  071C  1283               	bcf	3,5	;RP0=0, select bank0
  4078  071D  1303               	bcf	3,6	;RP1=0, select bank0
  4079  071E  00A4               	movwf	___awmod@divisor
  4080  071F  3000               	movlw	0
  4081  0720  00A5               	movwf	___awmod@divisor+1
  4082  0721  0851               	movf	_disp,w
  4083  0722  3E01               	addlw	1
  4084  0723  00A6               	movwf	___awmod@dividend
  4085  0724  3000               	movlw	0
  4086  0725  1803               	skipnc
  4087  0726  3001               	movlw	1
  4088  0727  00A7               	movwf	___awmod@dividend+1
  4089  0728  120A  158A  260E  120A  118A  	fcall	___awmod
  4090  072D  1283               	bcf	3,5	;RP0=0, select bank0
  4091  072E  1303               	bcf	3,6	;RP1=0, select bank0
  4092  072F  0824               	movf	?___awmod,w
  4093  0730  00AB               	movwf	??_ShowDigitsOnDisplay
  4094  0731  082B               	movf	??_ShowDigitsOnDisplay,w
  4095  0732  00D1               	movwf	_disp
  4096  0733                     l351:	
  4097  0733  0008               	return
  4098  0734                     __end_of_ShowDigitsOnDisplay:	
  4099                           
  4100                           	psect	text12
  4101  0BF2                     __ptext12:	
  4102 ;; *************** function _SetDisplay *****************
  4103 ;; Defined at:
  4104 ;;		line 385 in file "main.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  d1              1    wreg     unsigned char 
  4107 ;;  d2              1    4[BANK0 ] unsigned char 
  4108 ;;  d3              1    5[BANK0 ] unsigned char 
  4109 ;;  value           1    6[BANK0 ] unsigned char 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  d1              1    7[BANK0 ] unsigned char 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  1    wreg      void 
  4114 ;; Registers used:
  4115 ;;		wreg, status,0
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4121 ;;      Params:         0       3       0       0       0
  4122 ;;      Locals:         0       1       0       0       0
  4123 ;;      Temps:          0       0       0       0       0
  4124 ;;      Totals:         0       4       0       0       0
  4125 ;;Total ram usage:        4 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    3
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_ShowDigitsOnDisplay
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function _SetDisplay
  4137  0BF2                     _SetDisplay:	
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in _SetDisplay: [wreg+status,0]
  4141                           ;SetDisplay@d1 stored from wreg
  4142  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  4143  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  4144  0BF4  00A7               	movwf	SetDisplay@d1
  4145  0BF5                     l2921:	
  4146                           
  4147                           ;main.c: 385: void SetDisplay(char d1, char d2, char d3, char value);main.c: 386: {;main
      +                          .c: 387:     PORTAbits.RA2 = d1;
  4148  0BF5  0C27               	rrf	SetDisplay@d1,w
  4149  0BF6  1C03               	skipc
  4150  0BF7  1105               	bcf	5,2	;volatile
  4151  0BF8  1803               	skipnc
  4152  0BF9  1505               	bsf	5,2	;volatile
  4153                           
  4154                           ;main.c: 388:     PORTAbits.RA3 = d2;
  4155  0BFA  0C24               	rrf	SetDisplay@d2,w
  4156  0BFB  1C03               	skipc
  4157  0BFC  1185               	bcf	5,3	;volatile
  4158  0BFD  1803               	skipnc
  4159  0BFE  1585               	bsf	5,3	;volatile
  4160                           
  4161                           ;main.c: 389:     PORTAbits.RA4 = d3;
  4162  0BFF  0C25               	rrf	SetDisplay@d3,w
  4163  0C00  1C03               	skipc
  4164  0C01  1205               	bcf	5,4	;volatile
  4165  0C02  1803               	skipnc
  4166  0C03  1605               	bsf	5,4	;volatile
  4167  0C04                     l2923:	
  4168                           
  4169                           ;main.c: 390:     PORTD = value;
  4170  0C04  0826               	movf	SetDisplay@value,w
  4171  0C05  0088               	movwf	8	;volatile
  4172  0C06                     l314:	
  4173  0C06  0008               	return
  4174  0C07                     __end_of_SetDisplay:	
  4175                           
  4176                           	psect	text13
  4177  0F92                     __ptext13:	
  4178 ;; *************** function _SetReceivedTimes *****************
  4179 ;; Defined at:
  4180 ;;		line 73 in file "./CustomLib/TrafficLight.h"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4183 ;;		 -> dataFromGateway(15), 
  4184 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4185 ;;		 -> Semafori(16), 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  _dataFromGat    1   23[BANK0 ] PTR unsigned char 
  4188 ;;		 -> dataFromGateway(15), 
  4189 ;;  index           1   24[BANK0 ] unsigned char 
  4190 ;;  colorId         1   22[BANK0 ] unsigned char 
  4191 ;;  semaforoId      1   21[BANK0 ] unsigned char 
  4192 ;;  i               1   25[BANK0 ] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4202 ;;      Params:         0       1       0       0       0
  4203 ;;      Locals:         0       5       0       0       0
  4204 ;;      Temps:          0       8       0       0       0
  4205 ;;      Totals:         0      14       0       0       0
  4206 ;;Total ram usage:       14 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    4
  4209 ;; This function calls:
  4210 ;;		_GetTime
  4211 ;;		___bmul
  4212 ;; This function is called by:
  4213 ;;		_main
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           
  4218                           ;psect for function _SetReceivedTimes
  4219  0F92                     _SetReceivedTimes:	
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4223                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4224  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4225  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4226  0F94  00B7               	movwf	SetReceivedTimes@_dataFromGateway
  4227  0F95                     l3147:	
  4228                           
  4229                           ;./CustomLib/TrafficLight.h: 73: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 74: {;./CustomLib/TrafficLight.h: 75:   
      +                                        for (unsigned char i = 0; i < 3; i++)
  4230  0F95  01B9               	clrf	SetReceivedTimes@i
  4231  0F96                     l3149:	
  4232  0F96  3003               	movlw	3
  4233  0F97  0239               	subwf	SetReceivedTimes@i,w
  4234  0F98  1C03               	skipc
  4235  0F99  2F9B               	goto	u2651
  4236  0F9A  2F9C               	goto	u2650
  4237  0F9B                     u2651:	
  4238  0F9B  2F9D               	goto	l3153
  4239  0F9C                     u2650:	
  4240  0F9C  2FFF               	goto	l166
  4241  0F9D                     l3153:	
  4242                           
  4243                           ;./CustomLib/TrafficLight.h: 76:                 {;./CustomLib/TrafficLight.h: 77:      
      +                                         unsigned char index = i * 5;
  4244  0F9D  3005               	movlw	5
  4245  0F9E  00AD               	movwf	??_SetReceivedTimes
  4246  0F9F  082D               	movf	??_SetReceivedTimes,w
  4247  0FA0  00A4               	movwf	___bmul@multiplicand
  4248  0FA1  0839               	movf	SetReceivedTimes@i,w
  4249  0FA2  120A  158A  2407  120A  158A  	fcall	___bmul
  4250  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  4251  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  4252  0FA9  00AE               	movwf	??_SetReceivedTimes+1
  4253  0FAA  082E               	movf	??_SetReceivedTimes+1,w
  4254  0FAB  00B8               	movwf	SetReceivedTimes@index
  4255  0FAC                     l3155:	
  4256                           
  4257                           ;./CustomLib/TrafficLight.h: 78:                     unsigned char semaforoId = (_dataFr
      +                          omGateway[index] >> 1) & 0x0F;
  4258  0FAC  0838               	movf	SetReceivedTimes@index,w
  4259  0FAD  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4260  0FAE  00AD               	movwf	??_SetReceivedTimes
  4261  0FAF  082D               	movf	??_SetReceivedTimes,w
  4262  0FB0  0084               	movwf	4
  4263  0FB1  1383               	bcf	3,7	;select IRP bank0
  4264  0FB2  0800               	movf	0,w
  4265  0FB3  00AE               	movwf	??_SetReceivedTimes+1
  4266  0FB4  1003               	clrc
  4267  0FB5  0C2E               	rrf	??_SetReceivedTimes+1,w
  4268  0FB6  390F               	andlw	15
  4269  0FB7  00AF               	movwf	??_SetReceivedTimes+2
  4270  0FB8  082F               	movf	??_SetReceivedTimes+2,w
  4271  0FB9  00B5               	movwf	SetReceivedTimes@semaforoId
  4272  0FBA                     l3157:	
  4273                           
  4274                           ;./CustomLib/TrafficLight.h: 79:                     unsigned char colorId = ((_dataFrom
      +                          Gateway[index] >> 5) & 0x03) - 1;
  4275  0FBA  0838               	movf	SetReceivedTimes@index,w
  4276  0FBB  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4277  0FBC  00AD               	movwf	??_SetReceivedTimes
  4278  0FBD  082D               	movf	??_SetReceivedTimes,w
  4279  0FBE  0084               	movwf	4
  4280  0FBF  0800               	movf	0,w
  4281  0FC0  00AE               	movwf	??_SetReceivedTimes+1
  4282  0FC1  3005               	movlw	5
  4283  0FC2                     u2665:	
  4284  0FC2  1003               	clrc
  4285  0FC3  0CAE               	rrf	??_SetReceivedTimes+1,f
  4286  0FC4  3EFF               	addlw	-1
  4287  0FC5  1D03               	skipz
  4288  0FC6  2FC2               	goto	u2665
  4289  0FC7  082E               	movf	??_SetReceivedTimes+1,w
  4290  0FC8  3903               	andlw	3
  4291  0FC9  3EFF               	addlw	255
  4292  0FCA  00AF               	movwf	??_SetReceivedTimes+2
  4293  0FCB  082F               	movf	??_SetReceivedTimes+2,w
  4294  0FCC  00B6               	movwf	SetReceivedTimes@colorId
  4295  0FCD                     l3159:	
  4296                           
  4297                           ;./CustomLib/TrafficLight.h: 81:                     (*(_semafori)[semaforoId]).new_time
      +                          s[colorId]=GetTime(index, _dataFromGateway);
  4298  0FCD  0837               	movf	SetReceivedTimes@_dataFromGateway,w
  4299  0FCE  00AD               	movwf	??_SetReceivedTimes
  4300  0FCF  082D               	movf	??_SetReceivedTimes,w
  4301  0FD0  00A4               	movwf	GetTime@_dataFromGateway
  4302  0FD1  0838               	movf	SetReceivedTimes@index,w
  4303  0FD2  120A  158A  24D1  120A  158A  	fcall	_GetTime
  4304  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  4305  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  4306  0FD9  0835               	movf	SetReceivedTimes@semaforoId,w
  4307  0FDA  00AE               	movwf	??_SetReceivedTimes+1
  4308  0FDB  072E               	addwf	??_SetReceivedTimes+1,w
  4309  0FDC  072C               	addwf	SetReceivedTimes@_semafori,w
  4310  0FDD  00AF               	movwf	??_SetReceivedTimes+2
  4311  0FDE  082F               	movf	??_SetReceivedTimes+2,w
  4312  0FDF  0084               	movwf	4
  4313  0FE0  1383               	bcf	3,7	;select IRP bank0
  4314  0FE1  0800               	movf	0,w
  4315  0FE2  00B0               	movwf	??_SetReceivedTimes+3
  4316  0FE3  0A84               	incf	4,f
  4317  0FE4  0800               	movf	0,w
  4318  0FE5  00B1               	movwf	??_SetReceivedTimes+4
  4319  0FE6  0836               	movf	SetReceivedTimes@colorId,w
  4320  0FE7  00B2               	movwf	??_SetReceivedTimes+5
  4321  0FE8  0732               	addwf	??_SetReceivedTimes+5,w
  4322  0FE9  3E06               	addlw	6
  4323  0FEA  0730               	addwf	??_SetReceivedTimes+3,w
  4324  0FEB  00B3               	movwf	??_SetReceivedTimes+6
  4325  0FEC  0831               	movf	??_SetReceivedTimes+4,w
  4326  0FED  1803               	skipnc
  4327  0FEE  3E01               	addlw	1
  4328  0FEF  00B4               	movwf	??_SetReceivedTimes+7
  4329  0FF0  0833               	movf	??_SetReceivedTimes+6,w
  4330  0FF1  0084               	movwf	4
  4331  0FF2  1783               	bsf	3,7
  4332  0FF3  1C34               	btfss	??_SetReceivedTimes+7,0
  4333  0FF4  1383               	bcf	3,7
  4334  0FF5  0824               	movf	?_GetTime,w
  4335  0FF6  0080               	movwf	0
  4336  0FF7  0A84               	incf	4,f
  4337  0FF8  0825               	movf	?_GetTime+1,w
  4338  0FF9  0080               	movwf	0
  4339  0FFA                     l3161:	
  4340                           
  4341                           ;./CustomLib/TrafficLight.h: 82:                 }
  4342  0FFA  3001               	movlw	1
  4343  0FFB  00AD               	movwf	??_SetReceivedTimes
  4344  0FFC  082D               	movf	??_SetReceivedTimes,w
  4345  0FFD  07B9               	addwf	SetReceivedTimes@i,f
  4346  0FFE  2F96               	goto	l3149
  4347  0FFF                     l166:	
  4348  0FFF  0008               	return
  4349  1000                     __end_of_SetReceivedTimes:	
  4350                           
  4351                           	psect	text14
  4352  0C07                     __ptext14:	
  4353 ;; *************** function ___bmul *****************
  4354 ;; Defined at:
  4355 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  multiplier      1    wreg     unsigned char 
  4358 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4361 ;;  product         1    6[BANK0 ] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      unsigned char 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4371 ;;      Params:         0       1       0       0       0
  4372 ;;      Locals:         0       2       0       0       0
  4373 ;;      Temps:          0       1       0       0       0
  4374 ;;      Totals:         0       4       0       0       0
  4375 ;;Total ram usage:        4 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    3
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_SetReceivedTimes
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           
  4386                           ;psect for function ___bmul
  4387  0C07                     ___bmul:	
  4388                           
  4389                           ;incstack = 0
  4390                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4391                           ;___bmul@multiplier stored from wreg
  4392  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  4393  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  4394  0C09  00A7               	movwf	___bmul@multiplier
  4395  0C0A                     l2939:	
  4396  0C0A  01A6               	clrf	___bmul@product
  4397  0C0B                     l2941:	
  4398  0C0B  1C27               	btfss	___bmul@multiplier,0
  4399  0C0C  2C0E               	goto	u2291
  4400  0C0D  2C0F               	goto	u2290
  4401  0C0E                     u2291:	
  4402  0C0E  2C13               	goto	l2945
  4403  0C0F                     u2290:	
  4404  0C0F                     l2943:	
  4405  0C0F  0824               	movf	___bmul@multiplicand,w
  4406  0C10  00A5               	movwf	??___bmul
  4407  0C11  0825               	movf	??___bmul,w
  4408  0C12  07A6               	addwf	___bmul@product,f
  4409  0C13                     l2945:	
  4410  0C13  1003               	clrc
  4411  0C14  0DA4               	rlf	___bmul@multiplicand,f
  4412  0C15                     l2947:	
  4413  0C15  1003               	clrc
  4414  0C16  0CA7               	rrf	___bmul@multiplier,f
  4415  0C17  0827               	movf	___bmul@multiplier,w
  4416  0C18  1D03               	btfss	3,2
  4417  0C19  2C1B               	goto	u2301
  4418  0C1A  2C1C               	goto	u2300
  4419  0C1B                     u2301:	
  4420  0C1B  2C0B               	goto	l2941
  4421  0C1C                     u2300:	
  4422  0C1C                     l2949:	
  4423  0C1C  0826               	movf	___bmul@product,w
  4424  0C1D                     l473:	
  4425  0C1D  0008               	return
  4426  0C1E                     __end_of___bmul:	
  4427                           
  4428                           	psect	text15
  4429  0CD1                     __ptext15:	
  4430 ;; *************** function _GetTime *****************
  4431 ;; Defined at:
  4432 ;;		line 29 in file "./CustomLib/TrafficLight.h"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  index           1    wreg     unsigned char 
  4435 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4436 ;;		 -> dataFromGateway(15), 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  index           1    8[BANK0 ] unsigned char 
  4439 ;;  tmp             2   10[BANK0 ] int 
  4440 ;;  shortInt        1    9[BANK0 ] struct .
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  2    4[BANK0 ] int 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4450 ;;      Params:         0       2       0       0       0
  4451 ;;      Locals:         0       4       0       0       0
  4452 ;;      Temps:          0       2       0       0       0
  4453 ;;      Totals:         0       8       0       0       0
  4454 ;;Total ram usage:        8 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    3
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_SetReceivedTimes
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function _GetTime
  4466  0CD1                     _GetTime:	
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4470                           ;GetTime@index stored from wreg
  4471  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0CD3  00A8               	movwf	GetTime@index
  4474  0CD4                     l2903:	
  4475                           
  4476                           ;./CustomLib/TrafficLight.h: 29: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 30: {;./CustomLib/TrafficLight.h: 31:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 35:     } shortInt;;./CustomLib/TrafficLight.h: 37:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4477  0CD4  0828               	movf	GetTime@index,w
  4478  0CD5  0724               	addwf	GetTime@_dataFromGateway,w
  4479  0CD6  00A6               	movwf	??_GetTime
  4480  0CD7  0826               	movf	??_GetTime,w
  4481  0CD8  3E03               	addlw	3
  4482  0CD9  0084               	movwf	4
  4483  0CDA  307F               	movlw	127
  4484  0CDB  1383               	bcf	3,7	;select IRP bank0
  4485  0CDC  0500               	andwf	0,w
  4486  0CDD  00A7               	movwf	??_GetTime+1
  4487  0CDE  0829               	movf	GetTime@shortInt,w
  4488  0CDF  0627               	xorwf	??_GetTime+1,w
  4489  0CE0  3980               	andlw	-128
  4490  0CE1  0627               	xorwf	??_GetTime+1,w
  4491  0CE2  00A9               	movwf	GetTime@shortInt
  4492  0CE3                     l2905:	
  4493                           
  4494                           ;./CustomLib/TrafficLight.h: 38:     tmp = shortInt.Val;
  4495  0CE3  0829               	movf	GetTime@shortInt,w
  4496  0CE4  397F               	andlw	127
  4497  0CE5  00A6               	movwf	??_GetTime
  4498  0CE6  01A7               	clrf	??_GetTime+1
  4499  0CE7  0826               	movf	??_GetTime,w
  4500  0CE8  00AA               	movwf	GetTime@tmp
  4501  0CE9  0827               	movf	??_GetTime+1,w
  4502  0CEA  00AB               	movwf	GetTime@tmp+1
  4503  0CEB                     l2907:	
  4504                           
  4505                           ;./CustomLib/TrafficLight.h: 39:     tmp = (tmp << 7) & 0x80;
  4506  0CEB  082B               	movf	GetTime@tmp+1,w
  4507  0CEC  00A7               	movwf	??_GetTime+1
  4508  0CED  082A               	movf	GetTime@tmp,w
  4509  0CEE  00A6               	movwf	??_GetTime
  4510  0CEF  3007               	movlw	7
  4511  0CF0  00FF               	movwf	btemp+1
  4512  0CF1                     u2235:	
  4513  0CF1  1003               	clrc
  4514  0CF2  0DA6               	rlf	??_GetTime,f
  4515  0CF3  0DA7               	rlf	??_GetTime+1,f
  4516  0CF4  0BFF               	decfsz	btemp+1,f
  4517  0CF5  2CF1               	goto	u2235
  4518  0CF6  3080               	movlw	128
  4519  0CF7  0526               	andwf	??_GetTime,w
  4520  0CF8  00AA               	movwf	GetTime@tmp
  4521  0CF9  3000               	movlw	0
  4522  0CFA  0527               	andwf	??_GetTime+1,w
  4523  0CFB  00AB               	movwf	GetTime@tmp+1
  4524  0CFC                     l2909:	
  4525                           
  4526                           ;./CustomLib/TrafficLight.h: 41:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4527  0CFC  0828               	movf	GetTime@index,w
  4528  0CFD  0724               	addwf	GetTime@_dataFromGateway,w
  4529  0CFE  00A6               	movwf	??_GetTime
  4530  0CFF  0826               	movf	??_GetTime,w
  4531  0D00  3E02               	addlw	2
  4532  0D01  0084               	movwf	4
  4533  0D02  307F               	movlw	127
  4534  0D03  0500               	andwf	0,w
  4535  0D04  00A7               	movwf	??_GetTime+1
  4536  0D05  0829               	movf	GetTime@shortInt,w
  4537  0D06  0627               	xorwf	??_GetTime+1,w
  4538  0D07  3980               	andlw	-128
  4539  0D08  0627               	xorwf	??_GetTime+1,w
  4540  0D09  00A9               	movwf	GetTime@shortInt
  4541  0D0A                     l2911:	
  4542                           
  4543                           ;./CustomLib/TrafficLight.h: 42:     tmp = tmp | shortInt.Val;
  4544  0D0A  0829               	movf	GetTime@shortInt,w
  4545  0D0B  397F               	andlw	127
  4546  0D0C  00A6               	movwf	??_GetTime
  4547  0D0D  082A               	movf	GetTime@tmp,w
  4548  0D0E  0426               	iorwf	??_GetTime,w
  4549  0D0F  00AA               	movwf	GetTime@tmp
  4550  0D10  082B               	movf	GetTime@tmp+1,w
  4551  0D11  00AB               	movwf	GetTime@tmp+1
  4552  0D12                     l2913:	
  4553                           
  4554                           ;./CustomLib/TrafficLight.h: 44:     return tmp;
  4555  0D12  082B               	movf	GetTime@tmp+1,w
  4556  0D13  00A5               	movwf	?_GetTime+1
  4557  0D14  082A               	movf	GetTime@tmp,w
  4558  0D15  00A4               	movwf	?_GetTime
  4559  0D16                     l149:	
  4560  0D16  0008               	return
  4561  0D17                     __end_of_GetTime:	
  4562                           
  4563                           	psect	text16
  4564  0734                     __ptext16:	
  4565 ;; *************** function _SetDefaultTimers *****************
  4566 ;; Defined at:
  4567 ;;		line 49 in file "./CustomLib/TrafficLight.h"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  rosso           2    4[BANK0 ] int 
  4570 ;;  verde           2    6[BANK0 ] int 
  4571 ;;  giallo          2    8[BANK0 ] int 
  4572 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4573 ;;		 -> Semafori(16), 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  i               1   19[BANK0 ] unsigned char 
  4576 ;;  l               1   18[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4586 ;;      Params:         0       7       0       0       0
  4587 ;;      Locals:         0       2       0       0       0
  4588 ;;      Temps:          0       7       0       0       0
  4589 ;;      Totals:         0      16       0       0       0
  4590 ;;Total ram usage:       16 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    3
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           
  4601                           ;psect for function _SetDefaultTimers
  4602  0734                     _SetDefaultTimers:	
  4603  0734                     l3113:	
  4604                           ;incstack = 0
  4605                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4606                           
  4607                           
  4608                           ;./CustomLib/TrafficLight.h: 49: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 50: {;./CustomLib/TrafficLight.h: 51: 
      +                              for (unsigned char l = 0; l < 16; l++)
  4609  0734  1283               	bcf	3,5	;RP0=0, select bank0
  4610  0735  1303               	bcf	3,6	;RP1=0, select bank0
  4611  0736  01B2               	clrf	SetDefaultTimers@l
  4612  0737                     l3119:	
  4613                           
  4614                           ;./CustomLib/TrafficLight.h: 52:     {;./CustomLib/TrafficLight.h: 53:         for (unsi
      +                          gned char i = 0; i < 3; i++)
  4615  0737  01B3               	clrf	SetDefaultTimers@i
  4616  0738  2F9C               	goto	l3133
  4617  0739                     l3125:	
  4618                           
  4619                           ;./CustomLib/TrafficLight.h: 58:                 (*(_semafori)[l]).times[i] = rosso;
  4620  0739  0832               	movf	SetDefaultTimers@l,w
  4621  073A  00AB               	movwf	??_SetDefaultTimers
  4622  073B  072B               	addwf	??_SetDefaultTimers,w
  4623  073C  072A               	addwf	SetDefaultTimers@_semafori,w
  4624  073D  00AC               	movwf	??_SetDefaultTimers+1
  4625  073E  082C               	movf	??_SetDefaultTimers+1,w
  4626  073F  0084               	movwf	4
  4627  0740  1383               	bcf	3,7	;select IRP bank0
  4628  0741  0800               	movf	0,w
  4629  0742  00AD               	movwf	??_SetDefaultTimers+2
  4630  0743  0A84               	incf	4,f
  4631  0744  0800               	movf	0,w
  4632  0745  00AE               	movwf	??_SetDefaultTimers+3
  4633  0746  0833               	movf	SetDefaultTimers@i,w
  4634  0747  00AF               	movwf	??_SetDefaultTimers+4
  4635  0748  072F               	addwf	??_SetDefaultTimers+4,w
  4636  0749  072D               	addwf	??_SetDefaultTimers+2,w
  4637  074A  00B0               	movwf	??_SetDefaultTimers+5
  4638  074B  082E               	movf	??_SetDefaultTimers+3,w
  4639  074C  1803               	skipnc
  4640  074D  3E01               	addlw	1
  4641  074E  00B1               	movwf	??_SetDefaultTimers+6
  4642  074F  0830               	movf	??_SetDefaultTimers+5,w
  4643  0750  0084               	movwf	4
  4644  0751  1783               	bsf	3,7
  4645  0752  1C31               	btfss	??_SetDefaultTimers+6,0
  4646  0753  1383               	bcf	3,7
  4647  0754  0824               	movf	SetDefaultTimers@rosso,w
  4648  0755  0080               	movwf	0
  4649  0756  0A84               	incf	4,f
  4650  0757  0825               	movf	SetDefaultTimers@rosso+1,w
  4651  0758  0080               	movwf	0
  4652                           
  4653                           ;./CustomLib/TrafficLight.h: 59:                 break;
  4654  0759  2FAF               	goto	l3135
  4655  075A                     l3127:	
  4656                           
  4657                           ;./CustomLib/TrafficLight.h: 61:                 (*(_semafori)[l]).times[i] = verde;
  4658  075A  0832               	movf	SetDefaultTimers@l,w
  4659  075B  00AB               	movwf	??_SetDefaultTimers
  4660  075C  072B               	addwf	??_SetDefaultTimers,w
  4661  075D  072A               	addwf	SetDefaultTimers@_semafori,w
  4662  075E  00AC               	movwf	??_SetDefaultTimers+1
  4663  075F  082C               	movf	??_SetDefaultTimers+1,w
  4664  0760  0084               	movwf	4
  4665  0761  1383               	bcf	3,7	;select IRP bank0
  4666  0762  0800               	movf	0,w
  4667  0763  00AD               	movwf	??_SetDefaultTimers+2
  4668  0764  0A84               	incf	4,f
  4669  0765  0800               	movf	0,w
  4670  0766  00AE               	movwf	??_SetDefaultTimers+3
  4671  0767  0833               	movf	SetDefaultTimers@i,w
  4672  0768  00AF               	movwf	??_SetDefaultTimers+4
  4673  0769  072F               	addwf	??_SetDefaultTimers+4,w
  4674  076A  072D               	addwf	??_SetDefaultTimers+2,w
  4675  076B  00B0               	movwf	??_SetDefaultTimers+5
  4676  076C  082E               	movf	??_SetDefaultTimers+3,w
  4677  076D  1803               	skipnc
  4678  076E  3E01               	addlw	1
  4679  076F  00B1               	movwf	??_SetDefaultTimers+6
  4680  0770  0830               	movf	??_SetDefaultTimers+5,w
  4681  0771  0084               	movwf	4
  4682  0772  1783               	bsf	3,7
  4683  0773  1C31               	btfss	??_SetDefaultTimers+6,0
  4684  0774  1383               	bcf	3,7
  4685  0775  0826               	movf	SetDefaultTimers@verde,w
  4686  0776  0080               	movwf	0
  4687  0777  0A84               	incf	4,f
  4688  0778  0827               	movf	SetDefaultTimers@verde+1,w
  4689  0779  0080               	movwf	0
  4690                           
  4691                           ;./CustomLib/TrafficLight.h: 62:                 break;
  4692  077A  2FAF               	goto	l3135
  4693  077B                     l3129:	
  4694                           
  4695                           ;./CustomLib/TrafficLight.h: 64:                 (*(_semafori)[l]).times[i] = giallo;
  4696  077B  0832               	movf	SetDefaultTimers@l,w
  4697  077C  00AB               	movwf	??_SetDefaultTimers
  4698  077D  072B               	addwf	??_SetDefaultTimers,w
  4699  077E  072A               	addwf	SetDefaultTimers@_semafori,w
  4700  077F  00AC               	movwf	??_SetDefaultTimers+1
  4701  0780  082C               	movf	??_SetDefaultTimers+1,w
  4702  0781  0084               	movwf	4
  4703  0782  1383               	bcf	3,7	;select IRP bank0
  4704  0783  0800               	movf	0,w
  4705  0784  00AD               	movwf	??_SetDefaultTimers+2
  4706  0785  0A84               	incf	4,f
  4707  0786  0800               	movf	0,w
  4708  0787  00AE               	movwf	??_SetDefaultTimers+3
  4709  0788  0833               	movf	SetDefaultTimers@i,w
  4710  0789  00AF               	movwf	??_SetDefaultTimers+4
  4711  078A  072F               	addwf	??_SetDefaultTimers+4,w
  4712  078B  072D               	addwf	??_SetDefaultTimers+2,w
  4713  078C  00B0               	movwf	??_SetDefaultTimers+5
  4714  078D  082E               	movf	??_SetDefaultTimers+3,w
  4715  078E  1803               	skipnc
  4716  078F  3E01               	addlw	1
  4717  0790  00B1               	movwf	??_SetDefaultTimers+6
  4718  0791  0830               	movf	??_SetDefaultTimers+5,w
  4719  0792  0084               	movwf	4
  4720  0793  1783               	bsf	3,7
  4721  0794  1C31               	btfss	??_SetDefaultTimers+6,0
  4722  0795  1383               	bcf	3,7
  4723  0796  0828               	movf	SetDefaultTimers@giallo,w
  4724  0797  0080               	movwf	0
  4725  0798  0A84               	incf	4,f
  4726  0799  0829               	movf	SetDefaultTimers@giallo+1,w
  4727  079A  0080               	movwf	0
  4728                           
  4729                           ;./CustomLib/TrafficLight.h: 65:                 break;
  4730  079B  2FAF               	goto	l3135
  4731  079C                     l3133:	
  4732  079C  0833               	movf	SetDefaultTimers@i,w
  4733  079D  00AB               	movwf	??_SetDefaultTimers
  4734  079E  01AC               	clrf	??_SetDefaultTimers+1
  4735                           
  4736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4737                           ; Switch size 1, requested type "simple"
  4738                           ; Number of cases is 1, Range of values is 0 to 0
  4739                           ; switch strategies available:
  4740                           ; Name         Instructions Cycles
  4741                           ; simple_byte            4     3 (average)
  4742                           ; direct_byte           11     8 (fixed)
  4743                           ; jumptable            260     6 (fixed)
  4744                           ;	Chosen strategy is simple_byte
  4745  079F  082C               	movf	??_SetDefaultTimers+1,w
  4746  07A0  3A00               	xorlw	0	; case 0
  4747  07A1  1903               	skipnz
  4748  07A2  2FA4               	goto	l3667
  4749  07A3  2FAF               	goto	l3135
  4750  07A4                     l3667:	
  4751                           
  4752                           ; Switch size 1, requested type "simple"
  4753                           ; Number of cases is 3, Range of values is 0 to 2
  4754                           ; switch strategies available:
  4755                           ; Name         Instructions Cycles
  4756                           ; simple_byte           10     6 (average)
  4757                           ; direct_byte           17     8 (fixed)
  4758                           ; jumptable            260     6 (fixed)
  4759                           ;	Chosen strategy is simple_byte
  4760  07A4  082B               	movf	??_SetDefaultTimers,w
  4761  07A5  3A00               	xorlw	0	; case 0
  4762  07A6  1903               	skipnz
  4763  07A7  2F39               	goto	l3125
  4764  07A8  3A01               	xorlw	1	; case 1
  4765  07A9  1903               	skipnz
  4766  07AA  2F5A               	goto	l3127
  4767  07AB  3A03               	xorlw	3	; case 2
  4768  07AC  1903               	skipnz
  4769  07AD  2F7B               	goto	l3129
  4770  07AE  2FAF               	goto	l3135
  4771  07AF                     l3135:	
  4772                           
  4773                           ;./CustomLib/TrafficLight.h: 67:         }
  4774  07AF  3001               	movlw	1
  4775  07B0  00AB               	movwf	??_SetDefaultTimers
  4776  07B1  082B               	movf	??_SetDefaultTimers,w
  4777  07B2  07B3               	addwf	SetDefaultTimers@i,f
  4778  07B3                     l3137:	
  4779  07B3  3003               	movlw	3
  4780  07B4  0233               	subwf	SetDefaultTimers@i,w
  4781  07B5  1C03               	skipc
  4782  07B6  2FB8               	goto	u2631
  4783  07B7  2FB9               	goto	u2630
  4784  07B8                     u2631:	
  4785  07B8  2F9C               	goto	l3133
  4786  07B9                     u2630:	
  4787  07B9                     l3139:	
  4788                           
  4789                           ;./CustomLib/TrafficLight.h: 68:     }
  4790  07B9  3001               	movlw	1
  4791  07BA  00AB               	movwf	??_SetDefaultTimers
  4792  07BB  082B               	movf	??_SetDefaultTimers,w
  4793  07BC  07B2               	addwf	SetDefaultTimers@l,f
  4794  07BD                     l3141:	
  4795  07BD  3010               	movlw	16
  4796  07BE  0232               	subwf	SetDefaultTimers@l,w
  4797  07BF  1C03               	skipc
  4798  07C0  2FC2               	goto	u2641
  4799  07C1  2FC3               	goto	u2640
  4800  07C2                     u2641:	
  4801  07C2  2F37               	goto	l3119
  4802  07C3                     u2640:	
  4803  07C3                     l161:	
  4804  07C3  0008               	return
  4805  07C4                     __end_of_SetDefaultTimers:	
  4806                           
  4807                           	psect	text17
  4808  0608                     __ptext17:	
  4809 ;; *************** function _GetDigits *****************
  4810 ;; Defined at:
  4811 ;;		line 29 in file "./CustomLib/Conversions.h"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  centinaia       1    wreg     PTR unsigned char 
  4814 ;;		 -> centinaia(1), 
  4815 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  4816 ;;		 -> decine(1), 
  4817 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  4818 ;;		 -> unita(1), 
  4819 ;;  Time            2   22[BANK0 ] int 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  4822 ;;		 -> centinaia(1), 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4832 ;;      Params:         0       4       0       0       0
  4833 ;;      Locals:         0       3       0       0       0
  4834 ;;      Temps:          0       1       0       0       0
  4835 ;;      Totals:         0       8       0       0       0
  4836 ;;Total ram usage:        8 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    4
  4839 ;; This function calls:
  4840 ;;		___awdiv
  4841 ;;		___awmod
  4842 ;; This function is called by:
  4843 ;;		_main
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           
  4848                           ;psect for function _GetDigits
  4849  0608                     _GetDigits:	
  4850                           
  4851                           ;incstack = 0
  4852                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4853                           ;GetDigits@centinaia stored from wreg
  4854  0608  1283               	bcf	3,5	;RP0=0, select bank0
  4855  0609  1303               	bcf	3,6	;RP1=0, select bank0
  4856  060A  00BB               	movwf	GetDigits@centinaia
  4857  060B                     l3079:	
  4858                           
  4859                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     while(Time/1000>0)
  4860  060B  2E21               	goto	l3083
  4861  060C                     l3081:	
  4862                           
  4863                           ;./CustomLib/Conversions.h: 32:     {;./CustomLib/Conversions.h: 33:         Time=Time/1
      +                          0;
  4864  060C  300A               	movlw	10
  4865  060D  1283               	bcf	3,5	;RP0=0, select bank0
  4866  060E  1303               	bcf	3,6	;RP1=0, select bank0
  4867  060F  00AB               	movwf	___awdiv@divisor
  4868  0610  3000               	movlw	0
  4869  0611  00AC               	movwf	___awdiv@divisor+1
  4870  0612  0837               	movf	GetDigits@Time+1,w
  4871  0613  00AE               	movwf	___awdiv@dividend+1
  4872  0614  0836               	movf	GetDigits@Time,w
  4873  0615  00AD               	movwf	___awdiv@dividend
  4874  0616  120A  158A  2729  120A  118A  	fcall	___awdiv
  4875  061B  1283               	bcf	3,5	;RP0=0, select bank0
  4876  061C  1303               	bcf	3,6	;RP1=0, select bank0
  4877  061D  082C               	movf	?___awdiv+1,w
  4878  061E  00B7               	movwf	GetDigits@Time+1
  4879  061F  082B               	movf	?___awdiv,w
  4880  0620  00B6               	movwf	GetDigits@Time
  4881  0621                     l3083:	
  4882                           
  4883                           ;./CustomLib/Conversions.h: 31:     while(Time/1000>0)
  4884  0621  30E8               	movlw	232
  4885  0622  00AB               	movwf	___awdiv@divisor
  4886  0623  3003               	movlw	3
  4887  0624  00AC               	movwf	___awdiv@divisor+1
  4888  0625  0837               	movf	GetDigits@Time+1,w
  4889  0626  00AE               	movwf	___awdiv@dividend+1
  4890  0627  0836               	movf	GetDigits@Time,w
  4891  0628  00AD               	movwf	___awdiv@dividend
  4892  0629  120A  158A  2729  120A  118A  	fcall	___awdiv
  4893  062E  1283               	bcf	3,5	;RP0=0, select bank0
  4894  062F  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0630  082C               	movf	?___awdiv+1,w
  4896  0631  3A80               	xorlw	128
  4897  0632  00FF               	movwf	btemp+1
  4898  0633  3080               	movlw	128
  4899  0634  027F               	subwf	btemp+1,w
  4900  0635  1D03               	skipz
  4901  0636  2E39               	goto	u2605
  4902  0637  3001               	movlw	1
  4903  0638  022B               	subwf	?___awdiv,w
  4904  0639                     u2605:	
  4905  0639  1803               	skipnc
  4906  063A  2E3C               	goto	u2601
  4907  063B  2E3D               	goto	u2600
  4908  063C                     u2601:	
  4909  063C  2E0C               	goto	l3081
  4910  063D                     u2600:	
  4911  063D                     l3085:	
  4912                           
  4913                           ;./CustomLib/Conversions.h: 36:     *centinaia = Time / 100;
  4914  063D  3064               	movlw	100
  4915  063E  1283               	bcf	3,5	;RP0=0, select bank0
  4916  063F  1303               	bcf	3,6	;RP1=0, select bank0
  4917  0640  00AB               	movwf	___awdiv@divisor
  4918  0641  3000               	movlw	0
  4919  0642  00AC               	movwf	___awdiv@divisor+1
  4920  0643  0837               	movf	GetDigits@Time+1,w
  4921  0644  00AE               	movwf	___awdiv@dividend+1
  4922  0645  0836               	movf	GetDigits@Time,w
  4923  0646  00AD               	movwf	___awdiv@dividend
  4924  0647  120A  158A  2729  120A  118A  	fcall	___awdiv
  4925  064C  1283               	bcf	3,5	;RP0=0, select bank0
  4926  064D  1303               	bcf	3,6	;RP1=0, select bank0
  4927  064E  082B               	movf	?___awdiv,w
  4928  064F  00B8               	movwf	??_GetDigits
  4929  0650  083B               	movf	GetDigits@centinaia,w
  4930  0651  0084               	movwf	4
  4931  0652  0838               	movf	??_GetDigits,w
  4932  0653  1383               	bcf	3,7	;select IRP bank0
  4933  0654  0080               	movwf	0
  4934                           
  4935                           ;./CustomLib/Conversions.h: 37:     *decine = (Time % 100) / 10;
  4936  0655  300A               	movlw	10
  4937  0656  00AB               	movwf	___awdiv@divisor
  4938  0657  3000               	movlw	0
  4939  0658  00AC               	movwf	___awdiv@divisor+1
  4940  0659  0837               	movf	GetDigits@Time+1,w
  4941  065A  00A7               	movwf	___awmod@dividend+1
  4942  065B  0836               	movf	GetDigits@Time,w
  4943  065C  00A6               	movwf	___awmod@dividend
  4944  065D  3064               	movlw	100
  4945  065E  00A4               	movwf	___awmod@divisor
  4946  065F  3000               	movlw	0
  4947  0660  00A5               	movwf	___awmod@divisor+1
  4948  0661  120A  158A  260E  120A  118A  	fcall	___awmod
  4949  0666  1283               	bcf	3,5	;RP0=0, select bank0
  4950  0667  1303               	bcf	3,6	;RP1=0, select bank0
  4951  0668  0825               	movf	?___awmod+1,w
  4952  0669  00AE               	movwf	___awdiv@dividend+1
  4953  066A  0824               	movf	?___awmod,w
  4954  066B  00AD               	movwf	___awdiv@dividend
  4955  066C  120A  158A  2729  120A  118A  	fcall	___awdiv
  4956  0671  1283               	bcf	3,5	;RP0=0, select bank0
  4957  0672  1303               	bcf	3,6	;RP1=0, select bank0
  4958  0673  082B               	movf	?___awdiv,w
  4959  0674  00B8               	movwf	??_GetDigits
  4960  0675  0834               	movf	GetDigits@decine,w
  4961  0676  0084               	movwf	4
  4962  0677  0838               	movf	??_GetDigits,w
  4963  0678  1383               	bcf	3,7	;select IRP bank0
  4964  0679  0080               	movwf	0
  4965  067A                     l3087:	
  4966                           
  4967                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4968  067A  0837               	movf	GetDigits@Time+1,w
  4969  067B  00A7               	movwf	___awmod@dividend+1
  4970  067C  0836               	movf	GetDigits@Time,w
  4971  067D  00A6               	movwf	___awmod@dividend
  4972  067E  3064               	movlw	100
  4973  067F  00A4               	movwf	___awmod@divisor
  4974  0680  3000               	movlw	0
  4975  0681  00A5               	movwf	___awmod@divisor+1
  4976  0682  120A  158A  260E  120A  118A  	fcall	___awmod
  4977  0687  1283               	bcf	3,5	;RP0=0, select bank0
  4978  0688  1303               	bcf	3,6	;RP1=0, select bank0
  4979  0689  0825               	movf	?___awmod+1,w
  4980  068A  00BA               	movwf	_GetDigits$1222+1
  4981  068B  0824               	movf	?___awmod,w
  4982  068C  00B9               	movwf	_GetDigits$1222
  4983  068D                     l3089:	
  4984                           
  4985                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4986  068D  300A               	movlw	10
  4987  068E  00A4               	movwf	___awmod@divisor
  4988  068F  3000               	movlw	0
  4989  0690  00A5               	movwf	___awmod@divisor+1
  4990  0691  083A               	movf	_GetDigits$1222+1,w
  4991  0692  00A7               	movwf	___awmod@dividend+1
  4992  0693  0839               	movf	_GetDigits$1222,w
  4993  0694  00A6               	movwf	___awmod@dividend
  4994  0695  120A  158A  260E  120A  118A  	fcall	___awmod
  4995  069A  1283               	bcf	3,5	;RP0=0, select bank0
  4996  069B  1303               	bcf	3,6	;RP1=0, select bank0
  4997  069C  0824               	movf	?___awmod,w
  4998  069D  00B8               	movwf	??_GetDigits
  4999  069E  0835               	movf	GetDigits@unita,w
  5000  069F  0084               	movwf	4
  5001  06A0  0838               	movf	??_GetDigits,w
  5002  06A1  1383               	bcf	3,7	;select IRP bank0
  5003  06A2  0080               	movwf	0
  5004  06A3                     l98:	
  5005  06A3  0008               	return
  5006  06A4                     __end_of_GetDigits:	
  5007                           
  5008                           	psect	text18
  5009  0E0E                     __ptext18:	
  5010 ;; *************** function ___awmod *****************
  5011 ;; Defined at:
  5012 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  divisor         2    4[BANK0 ] int 
  5015 ;;  dividend        2    6[BANK0 ] int 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  sign            1   10[BANK0 ] unsigned char 
  5018 ;;  counter         1    9[BANK0 ] unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  2    4[BANK0 ] int 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5028 ;;      Params:         0       4       0       0       0
  5029 ;;      Locals:         0       2       0       0       0
  5030 ;;      Temps:          0       1       0       0       0
  5031 ;;      Totals:         0       7       0       0       0
  5032 ;;Total ram usage:        7 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    3
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_GetDigits
  5039 ;;		_ShowDigitsOnDisplay
  5040 ;;		_intToString
  5041 ;;		_ChangeTrafficLight
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           
  5046                           ;psect for function ___awmod
  5047  0E0E                     ___awmod:	
  5048  0E0E                     l3037:	
  5049                           ;incstack = 0
  5050                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5051                           
  5052  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  5053  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  5054  0E10  01AA               	clrf	___awmod@sign
  5055  0E11                     l3039:	
  5056  0E11  1FA7               	btfss	___awmod@dividend+1,7
  5057  0E12  2E14               	goto	u2511
  5058  0E13  2E15               	goto	u2510
  5059  0E14                     u2511:	
  5060  0E14  2E1C               	goto	l3045
  5061  0E15                     u2510:	
  5062  0E15                     l3041:	
  5063  0E15  09A6               	comf	___awmod@dividend,f
  5064  0E16  09A7               	comf	___awmod@dividend+1,f
  5065  0E17  0AA6               	incf	___awmod@dividend,f
  5066  0E18  1903               	skipnz
  5067  0E19  0AA7               	incf	___awmod@dividend+1,f
  5068  0E1A                     l3043:	
  5069  0E1A  01AA               	clrf	___awmod@sign
  5070  0E1B  0AAA               	incf	___awmod@sign,f
  5071  0E1C                     l3045:	
  5072  0E1C  1FA5               	btfss	___awmod@divisor+1,7
  5073  0E1D  2E1F               	goto	u2521
  5074  0E1E  2E20               	goto	u2520
  5075  0E1F                     u2521:	
  5076  0E1F  2E25               	goto	l3049
  5077  0E20                     u2520:	
  5078  0E20                     l3047:	
  5079  0E20  09A4               	comf	___awmod@divisor,f
  5080  0E21  09A5               	comf	___awmod@divisor+1,f
  5081  0E22  0AA4               	incf	___awmod@divisor,f
  5082  0E23  1903               	skipnz
  5083  0E24  0AA5               	incf	___awmod@divisor+1,f
  5084  0E25                     l3049:	
  5085  0E25  0824               	movf	___awmod@divisor,w
  5086  0E26  0425               	iorwf	___awmod@divisor+1,w
  5087  0E27  1903               	btfsc	3,2
  5088  0E28  2E2A               	goto	u2531
  5089  0E29  2E2B               	goto	u2530
  5090  0E2A                     u2531:	
  5091  0E2A  2E5A               	goto	l3067
  5092  0E2B                     u2530:	
  5093  0E2B                     l3051:	
  5094  0E2B  01A9               	clrf	___awmod@counter
  5095  0E2C  0AA9               	incf	___awmod@counter,f
  5096  0E2D  2E39               	goto	l3057
  5097  0E2E                     l3053:	
  5098  0E2E  3001               	movlw	1
  5099  0E2F                     u2545:	
  5100  0E2F  1003               	clrc
  5101  0E30  0DA4               	rlf	___awmod@divisor,f
  5102  0E31  0DA5               	rlf	___awmod@divisor+1,f
  5103  0E32  3EFF               	addlw	-1
  5104  0E33  1D03               	skipz
  5105  0E34  2E2F               	goto	u2545
  5106  0E35                     l3055:	
  5107  0E35  3001               	movlw	1
  5108  0E36  00A8               	movwf	??___awmod
  5109  0E37  0828               	movf	??___awmod,w
  5110  0E38  07A9               	addwf	___awmod@counter,f
  5111  0E39                     l3057:	
  5112  0E39  1FA5               	btfss	___awmod@divisor+1,7
  5113  0E3A  2E3C               	goto	u2551
  5114  0E3B  2E3D               	goto	u2550
  5115  0E3C                     u2551:	
  5116  0E3C  2E2E               	goto	l3053
  5117  0E3D                     u2550:	
  5118  0E3D                     l3059:	
  5119  0E3D  0825               	movf	___awmod@divisor+1,w
  5120  0E3E  0227               	subwf	___awmod@dividend+1,w
  5121  0E3F  1D03               	skipz
  5122  0E40  2E43               	goto	u2565
  5123  0E41  0824               	movf	___awmod@divisor,w
  5124  0E42  0226               	subwf	___awmod@dividend,w
  5125  0E43                     u2565:	
  5126  0E43  1C03               	skipc
  5127  0E44  2E46               	goto	u2561
  5128  0E45  2E47               	goto	u2560
  5129  0E46                     u2561:	
  5130  0E46  2E4D               	goto	l3063
  5131  0E47                     u2560:	
  5132  0E47                     l3061:	
  5133  0E47  0824               	movf	___awmod@divisor,w
  5134  0E48  02A6               	subwf	___awmod@dividend,f
  5135  0E49  0825               	movf	___awmod@divisor+1,w
  5136  0E4A  1C03               	skipc
  5137  0E4B  03A7               	decf	___awmod@dividend+1,f
  5138  0E4C  02A7               	subwf	___awmod@dividend+1,f
  5139  0E4D                     l3063:	
  5140  0E4D  3001               	movlw	1
  5141  0E4E                     u2575:	
  5142  0E4E  1003               	clrc
  5143  0E4F  0CA5               	rrf	___awmod@divisor+1,f
  5144  0E50  0CA4               	rrf	___awmod@divisor,f
  5145  0E51  3EFF               	addlw	-1
  5146  0E52  1D03               	skipz
  5147  0E53  2E4E               	goto	u2575
  5148  0E54                     l3065:	
  5149  0E54  3001               	movlw	1
  5150  0E55  02A9               	subwf	___awmod@counter,f
  5151  0E56  1D03               	btfss	3,2
  5152  0E57  2E59               	goto	u2581
  5153  0E58  2E5A               	goto	u2580
  5154  0E59                     u2581:	
  5155  0E59  2E3D               	goto	l3059
  5156  0E5A                     u2580:	
  5157  0E5A                     l3067:	
  5158  0E5A  082A               	movf	___awmod@sign,w
  5159  0E5B  1903               	btfsc	3,2
  5160  0E5C  2E5E               	goto	u2591
  5161  0E5D  2E5F               	goto	u2590
  5162  0E5E                     u2591:	
  5163  0E5E  2E64               	goto	l3071
  5164  0E5F                     u2590:	
  5165  0E5F                     l3069:	
  5166  0E5F  09A6               	comf	___awmod@dividend,f
  5167  0E60  09A7               	comf	___awmod@dividend+1,f
  5168  0E61  0AA6               	incf	___awmod@dividend,f
  5169  0E62  1903               	skipnz
  5170  0E63  0AA7               	incf	___awmod@dividend+1,f
  5171  0E64                     l3071:	
  5172  0E64  0827               	movf	___awmod@dividend+1,w
  5173  0E65  00A5               	movwf	?___awmod+1
  5174  0E66  0826               	movf	___awmod@dividend,w
  5175  0E67  00A4               	movwf	?___awmod
  5176  0E68                     l613:	
  5177  0E68  0008               	return
  5178  0E69                     __end_of___awmod:	
  5179                           
  5180                           	psect	text19
  5181  0F29                     __ptext19:	
  5182 ;; *************** function ___awdiv *****************
  5183 ;; Defined at:
  5184 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  divisor         2   11[BANK0 ] int 
  5187 ;;  dividend        2   13[BANK0 ] int 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  quotient        2   18[BANK0 ] int 
  5190 ;;  sign            1   17[BANK0 ] unsigned char 
  5191 ;;  counter         1   16[BANK0 ] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  2   11[BANK0 ] int 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5201 ;;      Params:         0       4       0       0       0
  5202 ;;      Locals:         0       4       0       0       0
  5203 ;;      Temps:          0       1       0       0       0
  5204 ;;      Totals:         0       9       0       0       0
  5205 ;;Total ram usage:        9 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    3
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_map
  5212 ;;		_GetDigits
  5213 ;;		_intToString
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           
  5218                           ;psect for function ___awdiv
  5219  0F29                     ___awdiv:	
  5220  0F29                     l2993:	
  5221                           ;incstack = 0
  5222                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5223                           
  5224  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  5226  0F2B  01B1               	clrf	___awdiv@sign
  5227  0F2C                     l2995:	
  5228  0F2C  1FAC               	btfss	___awdiv@divisor+1,7
  5229  0F2D  2F2F               	goto	u2411
  5230  0F2E  2F30               	goto	u2410
  5231  0F2F                     u2411:	
  5232  0F2F  2F37               	goto	l3001
  5233  0F30                     u2410:	
  5234  0F30                     l2997:	
  5235  0F30  09AB               	comf	___awdiv@divisor,f
  5236  0F31  09AC               	comf	___awdiv@divisor+1,f
  5237  0F32  0AAB               	incf	___awdiv@divisor,f
  5238  0F33  1903               	skipnz
  5239  0F34  0AAC               	incf	___awdiv@divisor+1,f
  5240  0F35                     l2999:	
  5241  0F35  01B1               	clrf	___awdiv@sign
  5242  0F36  0AB1               	incf	___awdiv@sign,f
  5243  0F37                     l3001:	
  5244  0F37  1FAE               	btfss	___awdiv@dividend+1,7
  5245  0F38  2F3A               	goto	u2421
  5246  0F39  2F3B               	goto	u2420
  5247  0F3A                     u2421:	
  5248  0F3A  2F44               	goto	l3007
  5249  0F3B                     u2420:	
  5250  0F3B                     l3003:	
  5251  0F3B  09AD               	comf	___awdiv@dividend,f
  5252  0F3C  09AE               	comf	___awdiv@dividend+1,f
  5253  0F3D  0AAD               	incf	___awdiv@dividend,f
  5254  0F3E  1903               	skipnz
  5255  0F3F  0AAE               	incf	___awdiv@dividend+1,f
  5256  0F40                     l3005:	
  5257  0F40  3001               	movlw	1
  5258  0F41  00AF               	movwf	??___awdiv
  5259  0F42  082F               	movf	??___awdiv,w
  5260  0F43  06B1               	xorwf	___awdiv@sign,f
  5261  0F44                     l3007:	
  5262  0F44  01B2               	clrf	___awdiv@quotient
  5263  0F45  01B3               	clrf	___awdiv@quotient+1
  5264  0F46                     l3009:	
  5265  0F46  082B               	movf	___awdiv@divisor,w
  5266  0F47  042C               	iorwf	___awdiv@divisor+1,w
  5267  0F48  1903               	btfsc	3,2
  5268  0F49  2F4B               	goto	u2431
  5269  0F4A  2F4C               	goto	u2430
  5270  0F4B                     u2431:	
  5271  0F4B  2F83               	goto	l3029
  5272  0F4C                     u2430:	
  5273  0F4C                     l3011:	
  5274  0F4C  01B0               	clrf	___awdiv@counter
  5275  0F4D  0AB0               	incf	___awdiv@counter,f
  5276  0F4E  2F5A               	goto	l3017
  5277  0F4F                     l3013:	
  5278  0F4F  3001               	movlw	1
  5279  0F50                     u2445:	
  5280  0F50  1003               	clrc
  5281  0F51  0DAB               	rlf	___awdiv@divisor,f
  5282  0F52  0DAC               	rlf	___awdiv@divisor+1,f
  5283  0F53  3EFF               	addlw	-1
  5284  0F54  1D03               	skipz
  5285  0F55  2F50               	goto	u2445
  5286  0F56                     l3015:	
  5287  0F56  3001               	movlw	1
  5288  0F57  00AF               	movwf	??___awdiv
  5289  0F58  082F               	movf	??___awdiv,w
  5290  0F59  07B0               	addwf	___awdiv@counter,f
  5291  0F5A                     l3017:	
  5292  0F5A  1FAC               	btfss	___awdiv@divisor+1,7
  5293  0F5B  2F5D               	goto	u2451
  5294  0F5C  2F5E               	goto	u2450
  5295  0F5D                     u2451:	
  5296  0F5D  2F4F               	goto	l3013
  5297  0F5E                     u2450:	
  5298  0F5E                     l3019:	
  5299  0F5E  3001               	movlw	1
  5300  0F5F                     u2465:	
  5301  0F5F  1003               	clrc
  5302  0F60  0DB2               	rlf	___awdiv@quotient,f
  5303  0F61  0DB3               	rlf	___awdiv@quotient+1,f
  5304  0F62  3EFF               	addlw	-1
  5305  0F63  1D03               	skipz
  5306  0F64  2F5F               	goto	u2465
  5307  0F65  082C               	movf	___awdiv@divisor+1,w
  5308  0F66  022E               	subwf	___awdiv@dividend+1,w
  5309  0F67  1D03               	skipz
  5310  0F68  2F6B               	goto	u2475
  5311  0F69  082B               	movf	___awdiv@divisor,w
  5312  0F6A  022D               	subwf	___awdiv@dividend,w
  5313  0F6B                     u2475:	
  5314  0F6B  1C03               	skipc
  5315  0F6C  2F6E               	goto	u2471
  5316  0F6D  2F6F               	goto	u2470
  5317  0F6E                     u2471:	
  5318  0F6E  2F76               	goto	l3025
  5319  0F6F                     u2470:	
  5320  0F6F                     l3021:	
  5321  0F6F  082B               	movf	___awdiv@divisor,w
  5322  0F70  02AD               	subwf	___awdiv@dividend,f
  5323  0F71  082C               	movf	___awdiv@divisor+1,w
  5324  0F72  1C03               	skipc
  5325  0F73  03AE               	decf	___awdiv@dividend+1,f
  5326  0F74  02AE               	subwf	___awdiv@dividend+1,f
  5327  0F75                     l3023:	
  5328  0F75  1432               	bsf	___awdiv@quotient,0
  5329  0F76                     l3025:	
  5330  0F76  3001               	movlw	1
  5331  0F77                     u2485:	
  5332  0F77  1003               	clrc
  5333  0F78  0CAC               	rrf	___awdiv@divisor+1,f
  5334  0F79  0CAB               	rrf	___awdiv@divisor,f
  5335  0F7A  3EFF               	addlw	-1
  5336  0F7B  1D03               	skipz
  5337  0F7C  2F77               	goto	u2485
  5338  0F7D                     l3027:	
  5339  0F7D  3001               	movlw	1
  5340  0F7E  02B0               	subwf	___awdiv@counter,f
  5341  0F7F  1D03               	btfss	3,2
  5342  0F80  2F82               	goto	u2491
  5343  0F81  2F83               	goto	u2490
  5344  0F82                     u2491:	
  5345  0F82  2F5E               	goto	l3019
  5346  0F83                     u2490:	
  5347  0F83                     l3029:	
  5348  0F83  0831               	movf	___awdiv@sign,w
  5349  0F84  1903               	btfsc	3,2
  5350  0F85  2F87               	goto	u2501
  5351  0F86  2F88               	goto	u2500
  5352  0F87                     u2501:	
  5353  0F87  2F8D               	goto	l3033
  5354  0F88                     u2500:	
  5355  0F88                     l3031:	
  5356  0F88  09B2               	comf	___awdiv@quotient,f
  5357  0F89  09B3               	comf	___awdiv@quotient+1,f
  5358  0F8A  0AB2               	incf	___awdiv@quotient,f
  5359  0F8B  1903               	skipnz
  5360  0F8C  0AB3               	incf	___awdiv@quotient+1,f
  5361  0F8D                     l3033:	
  5362  0F8D  0833               	movf	___awdiv@quotient+1,w
  5363  0F8E  00AC               	movwf	?___awdiv+1
  5364  0F8F  0832               	movf	___awdiv@quotient,w
  5365  0F90  00AB               	movwf	?___awdiv
  5366  0F91                     l600:	
  5367  0F91  0008               	return
  5368  0F92                     __end_of___awdiv:	
  5369                           
  5370                           	psect	text20
  5371  0C1E                     __ptext20:	
  5372 ;; *************** function _ADC_Read *****************
  5373 ;; Defined at:
  5374 ;;		line 327 in file "main.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  canale          1    wreg     unsigned char 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  canale          1    7[BANK0 ] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  2    4[BANK0 ] int 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5388 ;;      Params:         0       2       0       0       0
  5389 ;;      Locals:         0       1       0       0       0
  5390 ;;      Temps:          0       1       0       0       0
  5391 ;;      Totals:         0       4       0       0       0
  5392 ;;Total ram usage:        4 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    3
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_main
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           
  5403                           ;psect for function _ADC_Read
  5404  0C1E                     _ADC_Read:	
  5405                           
  5406                           ;incstack = 0
  5407                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5408                           ;ADC_Read@canale stored from wreg
  5409  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  5410  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  5411  0C20  00A7               	movwf	ADC_Read@canale
  5412  0C21                     l3199:	
  5413                           
  5414                           ;main.c: 327: int ADC_Read(char canale);main.c: 328: {;main.c: 329:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5415  0C21  0827               	movf	ADC_Read@canale,w
  5416  0C22  00A6               	movwf	??_ADC_Read
  5417  0C23  3002               	movlw	2
  5418  0C24                     u2695:	
  5419  0C24  1003               	clrc
  5420  0C25  0DA6               	rlf	??_ADC_Read,f
  5421  0C26  3EFF               	addlw	-1
  5422  0C27  1D03               	skipz
  5423  0C28  2C24               	goto	u2695
  5424  0C29  1003               	clrc
  5425  0C2A  0D26               	rlf	??_ADC_Read,w
  5426  0C2B  3801               	iorlw	1
  5427  0C2C  009F               	movwf	31	;volatile
  5428  0C2D                     l3201:	
  5429                           
  5430                           ;main.c: 330:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5431  0C2D  3004               	movlw	4
  5432  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5433  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0C30  00A6               	movwf	??_ADC_Read
  5435  0C31                     u2997:	
  5436  0C31  0BA6               	decfsz	??_ADC_Read,f
  5437  0C32  2C31               	goto	u2997
  5438  0C33  0000               	nop
  5439  0C34                     l3203:	
  5440                           
  5441                           ;main.c: 331:     GO_nDONE = 1;
  5442  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  5443  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  5444  0C36  151F               	bsf	31,2	;volatile
  5445  0C37                     l282:	
  5446                           ;main.c: 333:         ;
  5447                           
  5448                           
  5449                           ;main.c: 332:     while (GO_nDONE)
  5450  0C37  191F               	btfsc	31,2	;volatile
  5451  0C38  2C3A               	goto	u2701
  5452  0C39  2C3B               	goto	u2700
  5453  0C3A                     u2701:	
  5454  0C3A  2C37               	goto	l282
  5455  0C3B                     u2700:	
  5456  0C3B                     l3205:	
  5457                           
  5458                           ;main.c: 334:     return ADRESL + (ADRESH << 8);
  5459  0C3B  081E               	movf	30,w	;volatile
  5460  0C3C  00A5               	movwf	?_ADC_Read+1
  5461  0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  5462  0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  5463  0C3F  081E               	movf	30,w	;volatile
  5464  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  5465  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  5466  0C42  00A4               	movwf	?_ADC_Read
  5467  0C43                     l285:	
  5468  0C43  0008               	return
  5469  0C44                     __end_of_ADC_Read:	
  5470                           
  5471                           	psect	text21
  5472  0DB6                     __ptext21:	
  5473 ;; *************** function _ISR *****************
  5474 ;; Defined at:
  5475 ;;		line 489 in file "main.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         0       0       0       0       0
  5490 ;;      Locals:         0       0       0       0       0
  5491 ;;      Temps:          0       4       0       0       0
  5492 ;;      Totals:         0       4       0       0       0
  5493 ;;Total ram usage:        4 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    2
  5496 ;; This function calls:
  5497 ;;		_UART_Read
  5498 ;;		_conteggioVeicoli
  5499 ;; This function is called by:
  5500 ;;		Interrupt level 1
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           
  5505                           ;psect for function _ISR
  5506  0DB6                     _ISR:	
  5507  0DB6                     i1l2601:	
  5508                           
  5509                           ;main.c: 492:     if (RCIF && readGateway.Bit == 0)
  5510  0DB6  1E8C               	btfss	12,5	;volatile
  5511  0DB7  2DB9               	goto	u206_21
  5512  0DB8  2DBA               	goto	u206_20
  5513  0DB9                     u206_21:	
  5514  0DB9  2DC3               	goto	i1l2609
  5515  0DBA                     u206_20:	
  5516  0DBA                     i1l2603:	
  5517  0DBA  1854               	btfsc	_readGateway,0
  5518  0DBB  2DBD               	goto	u207_21
  5519  0DBC  2DBE               	goto	u207_20
  5520  0DBD                     u207_21:	
  5521  0DBD  2DC3               	goto	i1l2609
  5522  0DBE                     u207_20:	
  5523  0DBE                     i1l2605:	
  5524                           
  5525                           ;main.c: 493:     {;main.c: 494:         readGateway.Bit = 1;
  5526  0DBE  1454               	bsf	_readGateway,0
  5527                           
  5528                           ;main.c: 495:         readGatewayDone.Bit = 0;
  5529  0DBF  1055               	bcf	_readGatewayDone,0
  5530                           
  5531                           ;main.c: 496:         readGatewayDone.Timeout = 0;
  5532  0DC0  10D5               	bcf	_readGatewayDone,1
  5533  0DC1                     i1l2607:	
  5534                           
  5535                           ;main.c: 497:         dataFromGatewayIndex = 0;
  5536  0DC1  01CD               	clrf	_dataFromGatewayIndex
  5537                           
  5538                           ;main.c: 498:         timerReadFromGateway = 0;
  5539  0DC2  01CC               	clrf	_timerReadFromGateway
  5540  0DC3                     i1l2609:	
  5541                           
  5542                           ;main.c: 500:     if (RCIF && readGateway.Bit == 1)
  5543  0DC3  1E8C               	btfss	12,5	;volatile
  5544  0DC4  2DC6               	goto	u208_21
  5545  0DC5  2DC7               	goto	u208_20
  5546  0DC6                     u208_21:	
  5547  0DC6  2DDE               	goto	i1l2619
  5548  0DC7                     u208_20:	
  5549  0DC7                     i1l2611:	
  5550  0DC7  1C54               	btfss	_readGateway,0
  5551  0DC8  2DCA               	goto	u209_21
  5552  0DC9  2DCB               	goto	u209_20
  5553  0DCA                     u209_21:	
  5554  0DCA  2DDE               	goto	i1l2619
  5555  0DCB                     u209_20:	
  5556  0DCB                     i1l2613:	
  5557                           
  5558                           ;main.c: 501:     {;main.c: 502:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  5559  0DCB  120A  158A  23A8  120A  158A  	fcall	_UART_Read
  5560  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  5561  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  5562  0DD2  00A0               	movwf	??_ISR
  5563  0DD3  084D               	movf	_dataFromGatewayIndex,w
  5564  0DD4  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  5565  0DD5  0084               	movwf	4
  5566  0DD6  0820               	movf	??_ISR,w
  5567  0DD7  1383               	bcf	3,7	;select IRP bank1
  5568  0DD8  0080               	movwf	0
  5569  0DD9                     i1l2615:	
  5570                           
  5571                           ;main.c: 503:         dataFromGatewayIndex++;
  5572  0DD9  3001               	movlw	1
  5573  0DDA  00A0               	movwf	??_ISR
  5574  0DDB  0820               	movf	??_ISR,w
  5575  0DDC  07CD               	addwf	_dataFromGatewayIndex,f
  5576  0DDD                     i1l2617:	
  5577                           
  5578                           ;main.c: 504:         timerReadFromGateway = 0;
  5579  0DDD  01CC               	clrf	_timerReadFromGateway
  5580  0DDE                     i1l2619:	
  5581                           
  5582                           ;main.c: 509:     if (TMR0IF)
  5583  0DDE  1D0B               	btfss	11,2	;volatile
  5584  0DDF  2DE1               	goto	u210_21
  5585  0DE0  2DE2               	goto	u210_20
  5586  0DE1                     u210_21:	
  5587  0DE1  2DEC               	goto	i1l2627
  5588  0DE2                     u210_20:	
  5589  0DE2                     i1l2621:	
  5590                           
  5591                           ;main.c: 510:     {;main.c: 511:         TMR0IF = 0;
  5592  0DE2  110B               	bcf	11,2	;volatile
  5593  0DE3                     i1l2623:	
  5594                           
  5595                           ;main.c: 512:         conteggioVeicoli();
  5596  0DE3  120A  158A  26C4  120A  158A  	fcall	_conteggioVeicoli
  5597  0DE8                     i1l2625:	
  5598                           
  5599                           ;main.c: 513:         TMR0 = 6;
  5600  0DE8  3006               	movlw	6
  5601  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  5602  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  5603  0DEB  0081               	movwf	1	;volatile
  5604  0DEC                     i1l2627:	
  5605                           
  5606                           ;main.c: 516:     if (TMR1IF)
  5607  0DEC  1C0C               	btfss	12,0	;volatile
  5608  0DED  2DEF               	goto	u211_21
  5609  0DEE  2DF0               	goto	u211_20
  5610  0DEF                     u211_21:	
  5611  0DEF  2E05               	goto	i1l361
  5612  0DF0                     u211_20:	
  5613  0DF0                     i1l2629:	
  5614                           
  5615                           ;main.c: 517:     {;main.c: 518:         TMR1IF = 0;
  5616  0DF0  100C               	bcf	12,0	;volatile
  5617  0DF1                     i1l2631:	
  5618                           
  5619                           ;main.c: 519:         count_lux++;
  5620  0DF1  3001               	movlw	1
  5621  0DF2  00A0               	movwf	??_ISR
  5622  0DF3  0820               	movf	??_ISR,w
  5623  0DF4  07D0               	addwf	_count_lux,f
  5624  0DF5                     i1l2633:	
  5625                           
  5626                           ;main.c: 521:         if (count_lux >= 20)
  5627  0DF5  3014               	movlw	20
  5628  0DF6  0250               	subwf	_count_lux,w
  5629  0DF7  1C03               	skipc
  5630  0DF8  2DFA               	goto	u212_21
  5631  0DF9  2DFB               	goto	u212_20
  5632  0DFA                     u212_21:	
  5633  0DFA  2E01               	goto	i1l2641
  5634  0DFB                     u212_20:	
  5635  0DFB                     i1l2635:	
  5636                           
  5637                           ;main.c: 522:         {;main.c: 523:             secondPassed.Bit = 1;
  5638  0DFB  1453               	bsf	_secondPassed,0
  5639  0DFC                     i1l2637:	
  5640                           
  5641                           ;main.c: 524:             count_lux = 0;
  5642  0DFC  01D0               	clrf	_count_lux
  5643  0DFD                     i1l2639:	
  5644                           
  5645                           ;main.c: 525:             timerReadFromGateway++;
  5646  0DFD  3001               	movlw	1
  5647  0DFE  00A0               	movwf	??_ISR
  5648  0DFF  0820               	movf	??_ISR,w
  5649  0E00  07CC               	addwf	_timerReadFromGateway,f
  5650  0E01                     i1l2641:	
  5651                           
  5652                           ;main.c: 528:         TMR1H = 60;
  5653  0E01  303C               	movlw	60
  5654  0E02  008F               	movwf	15	;volatile
  5655  0E03                     i1l2643:	
  5656                           
  5657                           ;main.c: 529:         TMR1L = 176;
  5658  0E03  30B0               	movlw	176
  5659  0E04  008E               	movwf	14	;volatile
  5660  0E05                     i1l361:	
  5661  0E05  0823               	movf	??_ISR+3,w
  5662  0E06  008A               	movwf	10
  5663  0E07  0822               	movf	??_ISR+2,w
  5664  0E08  0084               	movwf	4
  5665  0E09  0E21               	swapf	(??_ISR+1)^0,w
  5666  0E0A  0083               	movwf	3
  5667  0E0B  0EFE               	swapf	btemp,f
  5668  0E0C  0E7E               	swapf	btemp,w
  5669  0E0D  0009               	retfie
  5670  0E0E                     __end_of_ISR:	
  5671                           
  5672                           	psect	intentry
  5673  0004                     __pintentry:	
  5674                           ;incstack = 0
  5675                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5676                           
  5677  0004                     interrupt_function:	
  5678  007E                     saved_w	set	btemp
  5679  0004  00FE               	movwf	btemp
  5680  0005  0E03               	swapf	3,w
  5681  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5682  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5683  0008  00A1               	movwf	??_ISR+1
  5684  0009  0804               	movf	4,w
  5685  000A  00A2               	movwf	??_ISR+2
  5686  000B  080A               	movf	10,w
  5687  000C  00A3               	movwf	??_ISR+3
  5688  000D  120A  158A  2DB6   	ljmp	_ISR
  5689                           
  5690                           	psect	text22
  5691  0EC4                     __ptext22:	
  5692 ;; *************** function _conteggioVeicoli *****************
  5693 ;; Defined at:
  5694 ;;		line 393 in file "main.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  i               1   13[COMMON] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5708 ;;      Params:         0       0       0       0       0
  5709 ;;      Locals:         1       0       0       0       0
  5710 ;;      Temps:          4       0       0       0       0
  5711 ;;      Totals:         5       0       0       0       0
  5712 ;;Total ram usage:        5 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    1
  5715 ;; This function calls:
  5716 ;;		_Conteggio
  5717 ;; This function is called by:
  5718 ;;		_ISR
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function _conteggioVeicoli
  5724  0EC4                     _conteggioVeicoli:	
  5725  0EC4                     i1l2381:	
  5726                           ;incstack = 0
  5727                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5728                           
  5729                           
  5730                           ;main.c: 395:     RoadsSensors[0] = PORTBbits.RB3;
  5731  0EC4  3000               	movlw	0
  5732  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5733  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  5734  0EC7  1986               	btfsc	6,3	;volatile
  5735  0EC8  3001               	movlw	1
  5736  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  5737  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  5738  0ECB  00A0               	movwf	_RoadsSensors^(0+128)
  5739                           
  5740                           ;main.c: 396:     RoadsSensors[1] = PORTBbits.RB4;
  5741  0ECC  3000               	movlw	0
  5742  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  5743  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  5744  0ECF  1A06               	btfsc	6,4	;volatile
  5745  0ED0  3001               	movlw	1
  5746  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  5747  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  5748  0ED3  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  5749                           
  5750                           ;main.c: 397:     RoadsSensors[2] = PORTBbits.RB5;
  5751  0ED4  3000               	movlw	0
  5752  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5753  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  5754  0ED7  1A86               	btfsc	6,5	;volatile
  5755  0ED8  3001               	movlw	1
  5756  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  5757  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  5758  0EDB  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  5759                           
  5760                           ;main.c: 398:     RoadsSensors[3] = PORTAbits.RA5;
  5761  0EDC  3000               	movlw	0
  5762  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  5763  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  5764  0EDF  1A85               	btfsc	5,5	;volatile
  5765  0EE0  3001               	movlw	1
  5766  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  5767  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  5768  0EE3  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  5769  0EE4                     i1l2383:	
  5770                           
  5771                           ;main.c: 400:     for (unsigned char i = 0; i < 4; i++)
  5772  0EE4  01FD               	clrf	conteggioVeicoli@i
  5773  0EE5                     i1l2387:	
  5774                           
  5775                           ;main.c: 401:     {;main.c: 402:         if (!RoadsSensors[i])
  5776  0EE5  087D               	movf	conteggioVeicoli@i,w
  5777  0EE6  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5778  0EE7  0084               	movwf	4
  5779  0EE8  1383               	bcf	3,7	;select IRP bank1
  5780  0EE9  0800               	movf	0,w
  5781  0EEA  1D03               	btfss	3,2
  5782  0EEB  2EED               	goto	u179_21
  5783  0EEC  2EEE               	goto	u179_20
  5784  0EED                     u179_21:	
  5785  0EED  2EF7               	goto	i1l2391
  5786  0EEE                     u179_20:	
  5787  0EEE                     i1l2389:	
  5788                           
  5789                           ;main.c: 403:         {;main.c: 404:             count++;
  5790  0EEE  3001               	movlw	1
  5791  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  5792  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  5793  0EF1  07CA               	addwf	_count,f
  5794  0EF2  1803               	skipnc
  5795  0EF3  0ACB               	incf	_count+1,f
  5796  0EF4  3000               	movlw	0
  5797  0EF5  07CB               	addwf	_count+1,f
  5798                           
  5799                           ;main.c: 405:         }
  5800  0EF6  2F1E               	goto	i1l2397
  5801  0EF7                     i1l2391:	
  5802  0EF7  087D               	movf	conteggioVeicoli@i,w
  5803  0EF8  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5804  0EF9  0084               	movwf	4
  5805  0EFA  0800               	movf	0,w
  5806  0EFB  1903               	btfsc	3,2
  5807  0EFC  2EFE               	goto	u180_21
  5808  0EFD  2EFF               	goto	u180_20
  5809  0EFE                     u180_21:	
  5810  0EFE  2F1E               	goto	i1l2397
  5811  0EFF                     u180_20:	
  5812  0EFF                     i1l2393:	
  5813                           
  5814                           ;main.c: 407:         {;main.c: 408:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  5815  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5817  0F01  084B               	movf	_count+1,w
  5818  0F02  00F1               	movwf	Conteggio@_count+1
  5819  0F03  084A               	movf	_count,w
  5820  0F04  00F0               	movwf	Conteggio@_count
  5821  0F05  305E               	movlw	(low (_motorcycle| 0))& (0+255)
  5822  0F06  00F9               	movwf	??_conteggioVeicoli
  5823  0F07  0879               	movf	??_conteggioVeicoli,w
  5824  0F08  00F2               	movwf	Conteggio@_motorcycle
  5825  0F09  305A               	movlw	(low (_car| 0))& (0+255)
  5826  0F0A  00FA               	movwf	??_conteggioVeicoli+1
  5827  0F0B  087A               	movf	??_conteggioVeicoli+1,w
  5828  0F0C  00F3               	movwf	Conteggio@_car
  5829  0F0D  3056               	movlw	(low (_truck| 0))& (0+255)
  5830  0F0E  00FB               	movwf	??_conteggioVeicoli+2
  5831  0F0F  087B               	movf	??_conteggioVeicoli+2,w
  5832  0F10  00F4               	movwf	Conteggio@_truck
  5833  0F11  087D               	movf	conteggioVeicoli@i,w
  5834  0F12  00FC               	movwf	??_conteggioVeicoli+3
  5835  0F13  087C               	movf	??_conteggioVeicoli+3,w
  5836  0F14  00F5               	movwf	Conteggio@index
  5837  0F15  120A  158A  2517  120A  158A  	fcall	_Conteggio
  5838  0F1A                     i1l2395:	
  5839                           
  5840                           ;main.c: 409:             count = 0;
  5841  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5842  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  5843  0F1C  01CA               	clrf	_count
  5844  0F1D  01CB               	clrf	_count+1
  5845  0F1E                     i1l2397:	
  5846                           
  5847                           ;main.c: 411:     }
  5848  0F1E  3001               	movlw	1
  5849  0F1F  00F9               	movwf	??_conteggioVeicoli
  5850  0F20  0879               	movf	??_conteggioVeicoli,w
  5851  0F21  07FD               	addwf	conteggioVeicoli@i,f
  5852  0F22                     i1l2399:	
  5853  0F22  3004               	movlw	4
  5854  0F23  027D               	subwf	conteggioVeicoli@i,w
  5855  0F24  1C03               	skipc
  5856  0F25  2F27               	goto	u181_21
  5857  0F26  2F28               	goto	u181_20
  5858  0F27                     u181_21:	
  5859  0F27  2EE5               	goto	i1l2387
  5860  0F28                     u181_20:	
  5861  0F28                     i1l322:	
  5862  0F28  0008               	return
  5863  0F29                     __end_of_conteggioVeicoli:	
  5864                           
  5865                           	psect	text23
  5866  0D17                     __ptext23:	
  5867 ;; *************** function _Conteggio *****************
  5868 ;; Defined at:
  5869 ;;		line 87 in file "./CustomLib/TrafficLight.h"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;  _count          2    0[COMMON] unsigned int 
  5872 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5873 ;;		 -> motorcycle(4), 
  5874 ;;  _car            1    3[COMMON] PTR unsigned char 
  5875 ;;		 -> car(4), 
  5876 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5877 ;;		 -> truck(4), 
  5878 ;;  index           1    5[COMMON] unsigned char 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5890 ;;      Params:         6       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0
  5892 ;;      Temps:          3       0       0       0       0
  5893 ;;      Totals:         9       0       0       0       0
  5894 ;;Total ram usage:        9 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_conteggioVeicoli
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           
  5904                           ;psect for function _Conteggio
  5905  0D17                     _Conteggio:	
  5906  0D17                     i1l2015:	
  5907                           ;incstack = 0
  5908                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5909                           
  5910                           
  5911                           ;./CustomLib/TrafficLight.h: 87: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 88: {;./CustomLib/TrafficLight.h: 89:         if (_count >= 500)
  5912  0D17  3001               	movlw	1
  5913  0D18  0271               	subwf	Conteggio@_count+1,w
  5914  0D19  30F4               	movlw	244
  5915  0D1A  1903               	skipnz
  5916  0D1B  0270               	subwf	Conteggio@_count,w
  5917  0D1C  1C03               	skipc
  5918  0D1D  2D1F               	goto	u125_21
  5919  0D1E  2D20               	goto	u125_20
  5920  0D1F                     u125_21:	
  5921  0D1F  2D30               	goto	i1l2019
  5922  0D20                     u125_20:	
  5923  0D20                     i1l2017:	
  5924                           
  5925                           ;./CustomLib/TrafficLight.h: 90:         {;./CustomLib/TrafficLight.h: 91:             _
      +                          motorcycle[index]=_motorcycle[index]+1;
  5926  0D20  0875               	movf	Conteggio@index,w
  5927  0D21  0772               	addwf	Conteggio@_motorcycle,w
  5928  0D22  00F6               	movwf	??_Conteggio
  5929  0D23  0876               	movf	??_Conteggio,w
  5930  0D24  0084               	movwf	4
  5931  0D25  1383               	bcf	3,7	;select IRP bank0
  5932  0D26  0800               	movf	0,w
  5933  0D27  3E01               	addlw	1
  5934  0D28  00F7               	movwf	??_Conteggio+1
  5935  0D29  0875               	movf	Conteggio@index,w
  5936  0D2A  0772               	addwf	Conteggio@_motorcycle,w
  5937  0D2B  00F8               	movwf	??_Conteggio+2
  5938  0D2C  0878               	movf	??_Conteggio+2,w
  5939  0D2D  0084               	movwf	4
  5940  0D2E  0877               	movf	??_Conteggio+1,w
  5941  0D2F  0080               	movwf	0
  5942  0D30                     i1l2019:	
  5943                           
  5944                           ;./CustomLib/TrafficLight.h: 93:         if (_count >= 1500)
  5945  0D30  3005               	movlw	5
  5946  0D31  0271               	subwf	Conteggio@_count+1,w
  5947  0D32  30DC               	movlw	220
  5948  0D33  1903               	skipnz
  5949  0D34  0270               	subwf	Conteggio@_count,w
  5950  0D35  1C03               	skipc
  5951  0D36  2D38               	goto	u126_21
  5952  0D37  2D39               	goto	u126_20
  5953  0D38                     u126_21:	
  5954  0D38  2D49               	goto	i1l2023
  5955  0D39                     u126_20:	
  5956  0D39                     i1l2021:	
  5957                           
  5958                           ;./CustomLib/TrafficLight.h: 94:         {;./CustomLib/TrafficLight.h: 95:             _
      +                          car[index]=_car[index]+1;
  5959  0D39  0875               	movf	Conteggio@index,w
  5960  0D3A  0773               	addwf	Conteggio@_car,w
  5961  0D3B  00F6               	movwf	??_Conteggio
  5962  0D3C  0876               	movf	??_Conteggio,w
  5963  0D3D  0084               	movwf	4
  5964  0D3E  1383               	bcf	3,7	;select IRP bank0
  5965  0D3F  0800               	movf	0,w
  5966  0D40  3E01               	addlw	1
  5967  0D41  00F7               	movwf	??_Conteggio+1
  5968  0D42  0875               	movf	Conteggio@index,w
  5969  0D43  0773               	addwf	Conteggio@_car,w
  5970  0D44  00F8               	movwf	??_Conteggio+2
  5971  0D45  0878               	movf	??_Conteggio+2,w
  5972  0D46  0084               	movwf	4
  5973  0D47  0877               	movf	??_Conteggio+1,w
  5974  0D48  0080               	movwf	0
  5975  0D49                     i1l2023:	
  5976                           
  5977                           ;./CustomLib/TrafficLight.h: 97:         if (_count >= 3000)
  5978  0D49  300B               	movlw	11
  5979  0D4A  0271               	subwf	Conteggio@_count+1,w
  5980  0D4B  30B8               	movlw	184
  5981  0D4C  1903               	skipnz
  5982  0D4D  0270               	subwf	Conteggio@_count,w
  5983  0D4E  1C03               	skipc
  5984  0D4F  2D51               	goto	u127_21
  5985  0D50  2D52               	goto	u127_20
  5986  0D51                     u127_21:	
  5987  0D51  2D62               	goto	i1l172
  5988  0D52                     u127_20:	
  5989  0D52                     i1l2025:	
  5990                           
  5991                           ;./CustomLib/TrafficLight.h: 98:         {;./CustomLib/TrafficLight.h: 99:             _
      +                          truck[index]=_truck[index]+1;
  5992  0D52  0875               	movf	Conteggio@index,w
  5993  0D53  0774               	addwf	Conteggio@_truck,w
  5994  0D54  00F6               	movwf	??_Conteggio
  5995  0D55  0876               	movf	??_Conteggio,w
  5996  0D56  0084               	movwf	4
  5997  0D57  1383               	bcf	3,7	;select IRP bank0
  5998  0D58  0800               	movf	0,w
  5999  0D59  3E01               	addlw	1
  6000  0D5A  00F7               	movwf	??_Conteggio+1
  6001  0D5B  0875               	movf	Conteggio@index,w
  6002  0D5C  0774               	addwf	Conteggio@_truck,w
  6003  0D5D  00F8               	movwf	??_Conteggio+2
  6004  0D5E  0878               	movf	??_Conteggio+2,w
  6005  0D5F  0084               	movwf	4
  6006  0D60  0877               	movf	??_Conteggio+1,w
  6007  0D61  0080               	movwf	0
  6008  0D62                     i1l172:	
  6009  0D62  0008               	return
  6010  0D63                     __end_of_Conteggio:	
  6011                           
  6012                           	psect	text24
  6013  0BA8                     __ptext24:	
  6014 ;; *************** function _UART_Read *****************
  6015 ;; Defined at:
  6016 ;;		line 366 in file "main.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;		None
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      unsigned char 
  6023 ;; Registers used:
  6024 ;;		wreg
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6030 ;;      Params:         0       0       0       0       0
  6031 ;;      Locals:         0       0       0       0       0
  6032 ;;      Temps:          0       0       0       0       0
  6033 ;;      Totals:         0       0       0       0       0
  6034 ;;Total ram usage:        0 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; This function calls:
  6037 ;;		Nothing
  6038 ;; This function is called by:
  6039 ;;		_ISR
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           
  6044                           ;psect for function _UART_Read
  6045  0BA8                     _UART_Read:	
  6046  0BA8                     i1l2375:	
  6047                           ;incstack = 0
  6048                           ; Regs used in _UART_Read: [wreg]
  6049                           
  6050  0BA8                     i1l303:	
  6051                           ;main.c: 369:         ;
  6052                           
  6053                           
  6054                           ;main.c: 368:     while (!RCIF)
  6055  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  6056  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  6057  0BAA  1E8C               	btfss	12,5	;volatile
  6058  0BAB  2BAD               	goto	u178_21
  6059  0BAC  2BAE               	goto	u178_20
  6060  0BAD                     u178_21:	
  6061  0BAD  2BA8               	goto	i1l303
  6062  0BAE                     u178_20:	
  6063  0BAE                     i1l305:	
  6064                           
  6065                           ;main.c: 370:     RCIF = 0;
  6066  0BAE  128C               	bcf	12,5	;volatile
  6067  0BAF                     i1l2377:	
  6068                           
  6069                           ;main.c: 371:     return RCREG;
  6070  0BAF  081A               	movf	26,w	;volatile
  6071  0BB0                     i1l306:	
  6072  0BB0  0008               	return
  6073  0BB1                     __end_of_UART_Read:	
  6074  007E                     btemp	set	126	;btemp
  6075  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        16
    BSS         158
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      69
    BANK1            80      0      77
    BANK3            96     13      83
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[8] size(2) Largest target is 14
		 -> s7(BANK3[14]), s6(BANK3[14]), s5(BANK3[14]), s4(BANK3[14]), 
		 -> s3(BANK3[14]), s2(BANK1[14]), s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK0[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   19903
                                             32 BANK0     10    10      0
                                              0 BANK3     13    13      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                           _init_ADC
                       _luciSemaforo
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    4478
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1386
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     183
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         19    19      0     358
                                              4 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  2     2      0    2717
                                             11 BANK0      2     2      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           4     1      3    1204
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    14    13      1    1303
                                             12 BANK0     14    13      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7     899
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    3629
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _UpdateTimes
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D      53       9       86.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      45       5       86.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      F3      12        0.0%
ABS                  0      0      F3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 09 12:03:17 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                                l81 0CD0                                l98 06A3  
                    ___awdiv@sign 0031                                _s0 00CF                                _s1 00C1  
                              _s2 00B3                                _s3 01C8                                _s4 01BA  
                              _s5 01AC                                _s6 019E                                _s7 0190  
                              fsr 0004               ___wmul@multiplicand 0026                    _GetDigits$1222 0039  
               luciSemaforo@index 0027                       __CFG_LVP$ON 0000                               l123 04F1  
                             l132 056A                               l311 0C9B                               l240 0084  
                             l161 07C3                               l129 0542                               l314 0C06  
                             l330 0D6B                               l139 0EC3                               l331 0D6F  
                             l149 0D16                               l166 0FFF                               l254 020E  
                             l238 0317                               l351 0733                               l335 0D86  
                             l263 048A                               l600 0F91                               l344 06BD  
                             l512 057F                               l328 0D67                               l272 0496  
                             l337 0D8A                               l282 0C37                               l522 0607  
                             l338 0D8E                               l339 0DB5                               l291 0BB4  
                             l285 0C43                               l613 0E68                               l293 0BB8  
                             l294 0BBB                               l279 0BDE                               l447 0C52  
                             l288 07FD                               l473 0C1D                               l449 0C6A  
                    __CFG_CPD$OFF 0000                               _ISR 0DB6                               _car 005A  
                             _map 0C9C                               fsr0 0004                               indf 0000  
                    ___awmod@sign 002A                      __CFG_FOSC$HS 0000                              ?_ISR 0070  
           ??_ShowDigitsOnDisplay 002B                              l3001 0F37                              l3011 0F4C  
                            l3003 0F3B                              l3021 0F6F                              l3013 0F4F  
                            l3005 0F40                              l3031 0F88                              l3023 0F75  
                            l3015 0F56                              l3007 0F44                              l3111 0EBD  
                            l3103 0E6E                              l3201 0C2D                              l3033 0F8D  
                            l3025 0F76                              l3017 0F5A                              l3009 0F46  
                            l3041 0E15                              l3113 0734                              l3105 0EAF  
                            l3203 0C34                              l3027 0F7D                              l3019 0F5E  
                            l3051 0E2B                              l3043 0E1A                              l3211 06A5  
                            l3107 0EB3                              l3205 0C3B                              l3029 0F83  
                            l3061 0E47                              l3053 0E2E                              l3045 0E1C  
                            l3037 0E0E                              l3141 07BD                              l3125 0739  
                            l3133 079C                              l3221 06F1                              l3213 06AA  
                            l3109 0EB9                              l3301 0066                              l3071 0E64  
                            l3063 0E4D                              l3055 0E35                              l3047 0E20  
                            l3039 0E11                              l3127 075A                              l3135 07AF  
                            l3119 0737                              l3215 06D2                              l3303 007D  
                            l3065 0E54                              l3057 0E39                              l3049 0E25  
                            l3081 060C                              l3137 07B3                              l3129 077B  
                            l3161 0FFA                              l3153 0F9D                              l3217 06D7  
                            l3225 0706                              l3209 06A4                              l3241 0D92  
                            l3233 0D66                              l3401 033B                              l3313 008B  
                            l3059 0E3D                              l3067 0E5A                              l3083 0621  
                            l3139 07B9                              l3155 0FAC                              l3147 0F95  
                            l3219 06DC                              l3227 071B                              l3091 0E6C  
                            l3171 0BD7                              l3075 0C9C                              l3411 03C5  
                            l3403 0343                              l3315 00D2                              l3323 01A7  
                            l3307 0086                              l3069 0E5F                              l3085 063D  
                            l3157 0FBA                              l3149 0F96                              l3181 07FC  
                            l3173 07C4                              l3165 0BCC                              l3237 0D73  
                            l3245 0DA5                              l3421 03DC                              l3413 03CB  
                            l3405 0345                              l3341 01F7                              l3317 0119  
                            l3325 01BC                              l3087 067A                              l3079 060B  
                            l3159 0FCD                              l3175 07CC                              l3167 0BD0  
                            l3191 0C82                              l3183 0C6E                              l3431 0473  
                            l3423 03E2                              l3415 03CF                              l3407 0362  
                            l3351 0207                              l3335 01D5                              l3327 01C4  
                            l3319 0160                              l3089 068D                              l3177 07FA  
                            l3097 0E6D                              l3169 0BD3                              l3193 0C8B  
                            l3185 0C81                              l3441 049A                              l3417 03D5  
                            l3425 0406                              l3409 036B                              l3361 02D7  
                            l3353 0210                              l3337 01E4                              l3329 01D1  
                            l3179 07FB                              l3195 0C91                              l3443 049E  
                            l3427 042A                              l3419 03D6                              l3435 0484  
                            l3363 02DA                              l3355 02A4                              l3347 01FA  
                            l3339 01EA                              l3291 0056                              l3283 003F  
                            l3197 0C95                              l3437 0490                              l3429 046E  
                            l3373 02EF                              l3357 02B5                              l3349 01FF  
                            l3293 0056                              l3285 0042                              l3199 0C21  
                            l2911 0D0A                              l2903 0CD4                              l3439 0494  
                            l3391 0321                              l3375 02F5                              l3367 02E1  
                            l3359 02C6                              l3383 0302                              l3295 0056  
                            l3287 0044                              l2913 0D12                              l2905 0CE3  
                            l2921 0BF5                              l2841 04C3                              l3393 0325  
                            l3385 031D                              l3377 02F8                              l3369 02E6  
                            l3297 0056                              l3289 0055                              l2907 0CEB  
                            l2923 0C04                              l2931 0C59                              l2843 04C4  
                            l2835 04A6                              l3395 0327                              l3387 031E  
                            l3379 02FE                              l3299 005B                              l2909 0CFC  
                            l2941 0C0B                              l3661 0D9A                              l2933 0C60  
                            l2925 0C44                              l2861 04F7                              l2837 04B5  
                            l2917 0BB4                              l3389 031F                              l3397 0331  
                            ?_map 0034                              l2943 0C0F                              l3663 0DAD  
                            l2935 0C66                              l2927 0C48                              l2871 0513  
                            l2863 04FF                              l2855 04CA                              l2839 04C2  
                            l2919 0BB9                              l3399 0337                              l3655 01AE  
                            l2945 0C13                              l3665 0710                              l2961 058E  
                            l2953 056B                              l2929 0C4C                              l2857 04DE  
                            l2849 04C6                              l3657 030F                              l3667 07A4  
                            l2947 0C15                              l2939 0C0A                              l2971 05B2  
                            l2963 0592                              l2955 056E                              l3659 0D7B  
                            l2891 0555                              l2883 051B                              l2867 0500  
                            l2859 04E4                              l2949 0C1C                              l2981 05E0  
                            l2973 05B6                              l2965 059A                              l2957 0572  
                            l2885 052F                              l2877 0517                              l2869 0506  
                            l2983 05E9                              l2975 05BF                              l2967 05A2  
                            l2959 0583                              l2895 0556                              l2887 0535  
                            l2993 0F29                              l2977 05D1                              l2969 05A5  
                            l2985 05EF                              l2897 055C                              l2889 0548  
                            l2995 0F2C                              l2987 05F4                              l2979 05DF  
                            l2899 0569                              l2997 0F30                              l2989 05FF  
                            l2999 0F35                              u2200 0548                              u2201 0547  
                            u2300 0C1C                              u2220 0569                              u2301 0C1B  
                            u2221 0568                              u2310 0572                              u2214 054E  
                            u2150 04F1                              u2311 0571                              u2215 054C  
                            u2151 04F0                              u2135 04B8                              u2400 05F4  
                            u2320 0583                              u2160 04F7                              u2144 04D6  
                            u2240 0BB8                              u2401 05F3                              u2321 0582  
                            u2225 0565                              u2161 04F6                              u2145 04D4  
                            u2241 0BB7                              u2410 0F30                              u2330 05A2  
                            u2250 0C4C                              u2170 0513                              u2411 0F2F  
                            u2235 0CF1                              u2331 05A1                              u2251 0C4B  
                            u2171 0512                              u2155 04ED                              u2500 0F88  
                            u2420 0F3B                              u2501 0F87                              u2421 0F3A  
                            u2430 0F4C                              u2510 0E15                              u2350 05B6  
                            u2190 0542                              u2431 0F4B                              u2511 0E14  
                            u2351 05B5                              u2191 0541                              u2175 050F  
                            u2520 0E20                              u2600 063D                              u2280 0C66  
                            u2184 0527                              u2521 0E1F                              u2601 063C  
                            u2345 05A7                              u2281 0C65                              u2265 0C53  
                            u2185 0525                              u2450 0F5E                              u2530 0E2B  
                            u2290 0C0F                              u2370 05D1                              u2610 0EB9  
                            u2451 0F5D                              u2531 0E2A                              u2291 0C0E  
                            u2371 05D0                              u2611 0EB8                              u2275 0C5A  
                            u2195 053E                              u2700 0C3B                              u2620 0EC3  
                            u2701 0C3A                              u2445 0F50                              u2605 0639  
                            u2365 05B8                              u2621 0EC2                              u2470 0F6F  
                            u2550 0E3D                              u2630 07B9                              u2710 06AA  
                            u2390 05EF                              u2471 0F6E                              u2551 0E3C  
                            u2631 07B8                              u2711 06A9                              u2391 05EE  
                            u2375 05CD                              u2560 0E47                              u2640 07C3  
                            u2720 06D7                              u2800 020D                              u2465 0F5F  
                            u2561 0E46                              u2545 0E2F                              u2641 07C2  
                            u2721 06D6                              u2385 05E1                              u2801 020C  
                            u2490 0F83                              u2650 0F9C                              u2730 06DC  
                            u2810 02E0                              u2491 0F82                              u2475 0F6B  
                            u2651 0F9B                              u2731 06DB                              u2811 02DF  
                            u2580 0E5A                              u2900 03D5                              u2820 02F5  
                            u2485 0F77                              u2581 0E59                              u2565 0E43  
                            u2901 03D4                              u2821 02F4                              u2590 0E5F  
                            u2670 07DB                              u2910 03DC                              u2830 02FE  
                            u2591 0E5E                              u2575 0E4E                              u2911 03DB  
                            u2831 02FD                              u2680 0C9B                              u2920 048A  
                            u2840 031D                              u2665 0FC2                              u2681 0C9A  
                            u2921 0489                              u2841 031C                              u2930 0490  
                            u2850 0325                              u2770 0083                              u2675 07D6  
                            u2931 048F                              u2851 0324                              u2771 0082  
                            u2940 0494                              u2860 0337                              u2780 01D1  
                            u2941 0493                              u2861 0336                              u2781 01D0  
                            u2950 049A                              u2870 033B                              u2790 01F7  
                            u2695 0C24                              u2951 0499                              u2871 033A  
                            u2791 01F6                              u2960 049E                              u2880 0362  
                            u2961 049D                              u2881 0361                              u2785 01CD  
                            u2890 03C5                              u2891 03C4                              u2795 01F3  
                            _RCIF 0065                              u2987 0BDB                              u2997 0C31  
                            _TMR0 0001                              _TXIF 0064                      __CFG_WRT$OFF 0000  
                            _disp 0051                              _main 003F                              _time 004E  
                            map@x 0034                              btemp 007E                  __end_of_ADC_Read 0C44  
                   __CFG_BOREN$ON 0000                       main@umidita 01D7                              start 0010  
                 __end_of_GetTime 0D17                 ___bmul@multiplier 0027                             ??_ISR 0020  
       __size_of_conteggioVeicoli 0065                             ??_map 003E                   __end_of___aldiv 0608  
                           ?_main 0070                   __end_of___awdiv 0F92                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 0E69                   ___awdiv@divisor 002B                             _T1CON 0010  
                           i1l303 0BA8                             i1l305 0BAE                             i1l306 0BB0  
                           i1l322 0F28                             i1l172 0D62                             i1l361 0E05  
                 ___awdiv@counter 0030                             _RCREG 001A              UpdateTimes@_semafori 0034  
                           _TMR1H 000F                             _TMR1L 000E                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _TRISE 0089  
                           _TXREG 0019                     __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A  
              __size_of_UART_Read 0009                   __end_of_display 0811                             _count 004A  
                           _unita 0064                             main@i 01E1                             _truck 0056  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 0013                      __end_of_main 04A3         __size_of_SetReceivedTimes 006E  
              __size_of_GetDigits 009C                            ??_main 0040                 SetDefaultTimers@i 0033  
               SetDefaultTimers@l 0032                __size_of_BuildByte 00C8                        _SetDisplay 0BF2  
                          _ADCON0 001F                            _ADCON1 009F                __size_of_Conteggio 004C  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 002D  
                          i1l2021 0D39                            i1l2023 0D49                            i1l2015 0D17  
                          i1l2025 0D52                            i1l2017 0D20                            i1l2019 0D30  
                          i1l2601 0DB6                            i1l2611 0DC7                            i1l2603 0DBA  
                          i1l2381 0EC4                            i1l2621 0DE2                            i1l2613 0DCB  
                          i1l2605 0DBE                            i1l2375 0BA8                            i1l2391 0EF7  
                          i1l2383 0EE4                            i1l2631 0DF1                            i1l2623 0DE3  
                          i1l2615 0DD9                            i1l2607 0DC1                            u210_20 0DE2  
                          i1l2377 0BAF                            i1l2393 0EFF                            i1l2641 0E01  
                          i1l2633 0DF5                            i1l2625 0DE8                            u210_21 0DE1  
                          i1l2617 0DDD                            i1l2609 0DC3                            i1l2395 0F1A  
                          i1l2387 0EE5                            i1l2643 0E03                            i1l2635 0DFB  
                          i1l2627 0DEC                            i1l2619 0DDE                            i1l2397 0F1E  
                          i1l2389 0EEE                            i1l2637 0DFC                            i1l2629 0DF0  
                          i1l2399 0F22                            i1l2639 0DFD                            u211_20 0DF0  
                          u211_21 0DEF                            u212_20 0DFB                            u212_21 0DFA  
                          u125_20 0D20                            u125_21 0D1F                            u126_20 0D39  
                          u206_20 0DBA                            u126_21 0D38                            u206_21 0DB9  
                          u127_20 0D52                            u207_20 0DBE                            u127_21 0D51  
                          u207_21 0DBD                            u208_20 0DC7                            u208_21 0DC6  
                          u209_20 0DCB                            _INTCON 000B                            u209_21 0DCA  
                          u180_20 0EFF                            u180_21 0EFE                            u181_20 0F28  
                          u181_21 0F27                            u178_20 0BAE                            u178_21 0BAD  
                          u179_20 0EEE                            u179_21 0EED                            _TMR0IF 005A  
                          _TMR1IF 0060                         ??_GetTime 0026                      ?_UART_TxChar 0070  
               __end_of_UART_Init 07FE                 __end_of_UART_Read 0BB1                            ___bmul 0C07  
                       ??___aldiv 002C                   GetTime@shortInt 0029                            ___wmul 0C44  
                       ??___awdiv 002F                            _decine 0063                         ??___awmod 0028  
                __end_of_init_ADC 0BDF                            _cycled 0052                  ___awdiv@quotient 0032  
                 ___awmod@divisor 0024                   ___awmod@counter 0029                  __end_of_sendByte 0C9C  
                 GetDigits@decine 0034                     main@pressione 01D8                         ?_ADC_Read 0024  
                          saved_w 007E           __end_of__initialization 003B                 __end_of_GetDigits 06A4  
                   ??_UpdateTimes 0024         __size_of_SetDefaultTimers 0090               ___bmul@multiplicand 0024  
                  __pcstackCOMMON 0070                 __end_of_BuildByte 056B                      __pidataBANK1 0BBC  
                _conteggioVeicoli 0EC4                 __end_of_Conteggio 0D63                     ?_luciSemaforo 0024  
                      ??_ADC_Read 0026            SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C  
                     ?_SetDisplay 0024                     GetDigits@Time 0036              _dataFromGatewayIndex 004D  
            _timerReadFromGateway 004C                        __pbssBANK0 004A                        __pbssBANK1 00A0  
                      __pbssBANK3 0190                        __pmaintext 003F                           ?___bmul 0024  
                         ?___wmul 0024                    ??_luciSemaforo 0025               __end_of_UpdateTimes 0EC4  
                   sendByte@byte0 003D                     sendByte@byte1 0038                        __pintentry 0004  
                _SetReceivedTimes 0F92       __end_of_ShowDigitsOnDisplay 0734                        __stringtab 0800  
                       ?_init_ADC 0070                           _GetTime 0CD1                   BuildByte@valore 0025  
                 BuildByte@txByte 0029           GetTime@_dataFromGateway 0024                         ?_sendByte 0038  
                      _n_semafori 0811              __size_of_UART_TxChar 000B                           ___aldiv 056B  
                 __size_of___bmul 0017                           ___awdiv 0F29                           ___awmod 0E0E  
             __size_of_SetDisplay 0015                   __size_of___wmul 0027                 conteggioVeicoli@i 007D  
                         __ptext1 0C6B                           __ptext2 0BB1                           __ptext3 04A3  
                         __ptext4 0C9C                           __ptext5 0C44                           __ptext6 0D63  
                         __ptext7 0BCC                           __ptext8 0E69                           __ptext9 07C4  
                         _comando 004F                           _display 0806                      __size_of_ISR 0058  
                    __size_of_map 0035                  ___awmod@dividend 0026                  ___aldiv@dividend 0028  
            BuildByte@sommaColumn 002F                           clrloop0 0BA1              end_of_initialization 003B  
                      ??_init_ADC 0024                    main@lux_select 01DF                       _UpdateTimes 0E69  
                      ??_sendByte 003A                  _SetDefaultTimers 0734                         _RCSTAbits 0018  
                ___aldiv@quotient 002F                        _motorcycle 005E                         _UART_Init 07C4  
                       _UART_Read 0BA8             SetReceivedTimes@index 0038                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                      SetDisplay@d1 0027  
                    SetDisplay@d2 0024                      SetDisplay@d3 0025                         _TRISCbits 0087  
               __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0F29              __end_of_luciSemaforo 0DB6  
                      map@out_max 003C                        map@out_min 003A  SetReceivedTimes@_dataFromGateway 0037  
                       _TXSTAbits 0098                         _GetDigits 0608                    __end_of___bmul 0C1E  
                  __end_of___wmul 0C6B                        ?_UART_Init 0033                        ?_UART_Read 0070  
                       _BuildByte 04A3                         _Conteggio 0D17                 BuildByte@sommaRow 002E  
             start_initialization 0013                       __end_of_ISR 0E0E                      ??_SetDisplay 0027  
                     __end_of_map 0CD1          __end_of_SetReceivedTimes 1000                        ?_GetDigits 0034  
                        ??___bmul 0025                    ADC_Read@canale 0027                          ??___wmul 0028  
                      init_fetch0 0BDF                       __pdataBANK1 00DD                __end_of_SetDisplay 0C07  
                      ?_BuildByte 0024                    GetDigits@unita 0035                        ?_Conteggio 0070  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK3 01D6  
                        ?_GetTime 0024             SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024  
               __size_of_init_ADC 0013                         _centinaia 0062                 __size_of_sendByte 0031  
                        ?___aldiv 0024                          ?___awdiv 002B                          ?___awmod 0024  
                     ??_UART_Init 0035                       ??_UART_Read 0070                    BuildByte@i_355 0036  
                       __pstrings 0800                    BuildByte@y_356 0032                    sendByte@valore 0039  
                  sendByte@txByte 003E                    BuildByte@byte0 0028                    BuildByte@byte1 0024  
        __end_of_SetDefaultTimers 07C4                          _ADC_Read 0C1E             __size_of_luciSemaforo 0053  
                       _count_lux 0050                     UART_TxChar@ch 0024      __size_of_ShowDigitsOnDisplay 0090  
                 ___aldiv@divisor 0024                 SetReceivedTimes@i 0039                 interrupt_function 0004  
                 ___aldiv@counter 002D                    ___wmul@product 0028        SetReceivedTimes@semaforoId 0035  
                    ?_UpdateTimes 0070                         clear_ram0 0BA0                          _PIE1bits 008C  
                   ??_UART_TxChar 0024                       ??_GetDigits 0038                          _GO_nDONE 00FA  
                    _luciSemaforo 0D63                 UART_Init@baudrate 0033                       ??_BuildByte 0026  
                       map@in_max 0038                         map@in_min 0036                       __stringbase 0805  
                       main@i_491 01DC                         main@i_493 01E0                       ??_Conteggio 0076  
                       main@i_488 01DD                         main@i_489 01DB                 ___wmul@multiplier 0024  
                    GetTime@index 0028                      _RoadsSensors 00A0                 ?_conteggioVeicoli 0070  
                    _secondPassed 0053                ??_conteggioVeicoli 0079                  __size_of_GetTime 0046  
                        _Semafori 00DD                GetDigits@centinaia 003B                       _readGateway 0054  
                __size_of___aldiv 009D               __end_of_UART_TxChar 0BBC                  __size_of___awdiv 0069  
                __size_of___awmod 005B                __end_of__stringtab 0806                         sendByte@i 003F  
                        __ptext10 056B                          __ptext11 06A4                          __ptext20 0C1E  
                        __ptext12 0BF2                          __ptext21 0DB6                          __ptext13 0F92  
                        __ptext22 0EC4                          __ptext14 0C07                          __ptext23 0D17  
                        __ptext15 0CD1                          __ptext24 0BA8                          __ptext16 0734  
                        __ptext17 0608                          __ptext18 0E0E                          __ptext19 0F29  
              __end_of_n_semafori 0812                          _init_ADC 0BCC                 ?_SetReceivedTimes 002C  
                   __size_of_main 0464                   _dataFromGateway 00A4                          _sendByte 0C6B  
              ??_SetReceivedTimes 002D                          main@temp 01D6                          main@time 01D9  
                      _INTCONbits 000B                          init_ram0 0BE3              Conteggio@_motorcycle 0072  
                        intlevel1 0000                   _readGatewayDone 0055                         stringcode 0800  
                     _UART_TxChar 0BB1           SetReceivedTimes@colorId 0036              __size_of_UpdateTimes 005B  
                      GetTime@tmp 002A               _ShowDigitsOnDisplay 06A4                        _OPTION_REG 0081  
                 SetDisplay@value 0026                          stringdir 0800                          stringtab 0800  
                    UpdateTimes@i 0036                      UpdateTimes@l 0035                 ?_SetDefaultTimers 0024  
                    ___aldiv@sign 002E                ??_SetDefaultTimers 002B              ?_ShowDigitsOnDisplay 0070  
                      BuildByte@i 0034                        BuildByte@y 0030         SetDefaultTimers@_semafori 002A  
                 Conteggio@_count 0070                     Conteggio@_car 0073                   Conteggio@_truck 0074  
                  Conteggio@index 0075  
