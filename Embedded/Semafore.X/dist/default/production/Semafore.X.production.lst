

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jul 10 12:55:46 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	idataBANK1
   200  0BB3                     __pidataBANK1:	
   201                           
   202                           ;initializer for _Semafori
   203  0BB3  34CF               	retlw	low (_s0| 0)
   204  0BB4  3400               	retlw	high (_s0| 0)
   205  0BB5  34C1               	retlw	low (_s1| 0)
   206  0BB6  3400               	retlw	high (_s1| 0)
   207  0BB7  34B3               	retlw	low (_s2| 0)
   208  0BB8  3400               	retlw	high (_s2| 0)
   209  0BB9  34C8               	retlw	low (_s3| (0+256))
   210  0BBA  3401               	retlw	high (_s3| (0+256))
   211  0BBB  34BA               	retlw	low (_s4| (0+256))
   212  0BBC  3401               	retlw	high (_s4| (0+256))
   213  0BBD  34AC               	retlw	low (_s5| (0+256))
   214  0BBE  3401               	retlw	high (_s5| (0+256))
   215  0BBF  349E               	retlw	low (_s6| (0+256))
   216  0BC0  3401               	retlw	high (_s6| (0+256))
   217  0BC1  3490               	retlw	low (_s7| (0+256))
   218  0BC2  3401               	retlw	high (_s7| (0+256))
   219                           
   220                           	psect	strings
   221  0800                     __pstrings:	
   222  0800                     stringtab:	
   223  0800                     __stringtab:	
   224  0800                     stringcode:	
   225                           ;	String table - string pointers are 1 byte each
   226                           
   227  0800                     stringdir:	
   228  0800  3008               	movlw	high stringdir
   229  0801  008A               	movwf	10
   230  0802  0804               	movf	4,w
   231  0803  0A84               	incf	4,f
   232  0804  0782               	addwf	2,f
   233  0805                     __stringbase:	
   234  0805  3400               	retlw	0
   235  0806                     __end_of__stringtab:	
   236  0806                     _display:	
   237  0806  343F               	retlw	63
   238  0807  3406               	retlw	6
   239  0808  345B               	retlw	91
   240  0809  344F               	retlw	79
   241  080A  3466               	retlw	102
   242  080B  346D               	retlw	109
   243  080C  347D               	retlw	125
   244  080D  3407               	retlw	7
   245  080E  347F               	retlw	127
   246  080F  346F               	retlw	111
   247  0810  3400               	retlw	0
   248  0811                     __end_of_display:	
   249  0811                     _n_semafori:	
   250  0811  3402               	retlw	2
   251  0812                     __end_of_n_semafori:	
   252  0007                     _PORTCbits	set	7
   253  0006                     _PORTBbits	set	6
   254  0008                     _PORTD	set	8
   255  0005                     _PORTAbits	set	5
   256  001A                     _RCREG	set	26
   257  0019                     _TXREG	set	25
   258  000B                     _INTCONbits	set	11
   259  0018                     _RCSTAbits	set	24
   260  001E                     _ADRESH	set	30
   261  001F                     _ADCON0	set	31
   262  000E                     _TMR1L	set	14
   263  000F                     _TMR1H	set	15
   264  0010                     _T1CON	set	16
   265  0001                     _TMR0	set	1
   266  000B                     _INTCON	set	11
   267  0060                     _TMR1IF	set	96
   268  005A                     _TMR0IF	set	90
   269  0065                     _RCIF	set	101
   270  0064                     _TXIF	set	100
   271  00FA                     _GO_nDONE	set	250
   272  008C                     _PIE1bits	set	140
   273  0099                     _SPBRG	set	153
   274  0098                     _TXSTAbits	set	152
   275  0087                     _TRISCbits	set	135
   276  009E                     _ADRESL	set	158
   277  009F                     _ADCON1	set	159
   278  0085                     _TRISA	set	133
   279  0081                     _OPTION_REG	set	129
   280  0089                     _TRISE	set	137
   281  0088                     _TRISD	set	136
   282  0087                     _TRISC	set	135
   283  0086                     _TRISB	set	134
   284                           
   285                           ; #config settings
   286  0000                     
   287                           	psect	cinit
   288  0013                     start_initialization:	
   289  0013                     __initialization:	
   290                           
   291                           ; Initialize objects allocated to BANK1
   292  0013  1383               	bcf	3,7	;select IRP bank0
   293  0014  30ED               	movlw	low (__pdataBANK1+16)
   294  0015  00FD               	movwf	btemp+-1
   295  0016  300B               	movlw	high __pidataBANK1
   296  0017  00FE               	movwf	btemp
   297  0018  30B3               	movlw	low __pidataBANK1
   298  0019  00FF               	movwf	btemp+1
   299  001A  30DD               	movlw	low __pdataBANK1
   300  001B  0084               	movwf	4
   301  001C  120A  158A  23DA  120A  118A  	fcall	init_ram0
   302                           
   303                           ; Clear objects allocated to BANK3
   304  0021  1783               	bsf	3,7	;select IRP bank2
   305  0022  3090               	movlw	low __pbssBANK3
   306  0023  0084               	movwf	4
   307  0024  30D6               	movlw	low (__pbssBANK3+70)
   308  0025  120A  158A  2397  120A  118A  	fcall	clear_ram0
   309                           
   310                           ; Clear objects allocated to BANK1
   311  002A  1383               	bcf	3,7	;select IRP bank0
   312  002B  30A0               	movlw	low __pbssBANK1
   313  002C  0084               	movwf	4
   314  002D  30DD               	movlw	low (__pbssBANK1+61)
   315  002E  120A  158A  2397  120A  118A  	fcall	clear_ram0
   316                           
   317                           ; Clear objects allocated to BANK0
   318  0033  304A               	movlw	low __pbssBANK0
   319  0034  0084               	movwf	4
   320  0035  3065               	movlw	low (__pbssBANK0+27)
   321  0036  120A  158A  2397  120A  118A  	fcall	clear_ram0
   322  003B                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  003B                     __end_of__initialization:	
   326  003B  0183               	clrf	3
   327  003C  120A  118A  283F   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssBANK0
   330  004A                     __pbssBANK0:	
   331  004A                     _count:	
   332  004A                     	ds	2
   333  004C                     _timerReadFromGateway:	
   334  004C                     	ds	1
   335  004D                     _dataFromGatewayIndex:	
   336  004D                     	ds	1
   337  004E                     _time:	
   338  004E                     	ds	1
   339  004F                     _comando:	
   340  004F                     	ds	1
   341  0050                     _count_lux:	
   342  0050                     	ds	1
   343  0051                     _disp:	
   344  0051                     	ds	1
   345  0052                     _cycled:	
   346  0052                     	ds	1
   347  0053                     _secondPassed:	
   348  0053                     	ds	1
   349  0054                     _readGateway:	
   350  0054                     	ds	1
   351  0055                     _readGatewayDone:	
   352  0055                     	ds	1
   353  0056                     _truck:	
   354  0056                     	ds	4
   355  005A                     _car:	
   356  005A                     	ds	4
   357  005E                     _motorcycle:	
   358  005E                     	ds	4
   359  0062                     _centinaia:	
   360  0062                     	ds	1
   361  0063                     _decine:	
   362  0063                     	ds	1
   363  0064                     _unita:	
   364  0064                     	ds	1
   365                           
   366                           	psect	bssBANK1
   367  00A0                     __pbssBANK1:	
   368  00A0                     _RoadsSensors:	
   369  00A0                     	ds	4
   370  00A4                     _dataFromGateway:	
   371  00A4                     	ds	15
   372  00B3                     _s2:	
   373  00B3                     	ds	14
   374  00C1                     _s1:	
   375  00C1                     	ds	14
   376  00CF                     _s0:	
   377  00CF                     	ds	14
   378                           
   379                           	psect	dataBANK1
   380  00DD                     __pdataBANK1:	
   381  00DD                     _Semafori:	
   382  00DD                     	ds	16
   383                           
   384                           	psect	bssBANK3
   385  0190                     __pbssBANK3:	
   386  0190                     _s7:	
   387  0190                     	ds	14
   388  019E                     _s6:	
   389  019E                     	ds	14
   390  01AC                     _s5:	
   391  01AC                     	ds	14
   392  01BA                     _s4:	
   393  01BA                     	ds	14
   394  01C8                     _s3:	
   395  01C8                     	ds	14
   396                           
   397                           	psect	inittext
   398  0BD6                     init_fetch0:	
   399                           ;	Called with low address in FSR and high address in W
   400                           
   401  0BD6  087E               	movf	btemp,w
   402  0BD7  008A               	movwf	10
   403  0BD8  087F               	movf	btemp+1,w
   404  0BD9  0082               	movwf	2
   405  0BDA                     init_ram0:	
   406                           ;Called with:
   407                           ;	high address of idata address in btemp 
   408                           ;	low address of idata address in btemp+1 
   409                           ;	low address of data in FSR
   410                           ;	high address + 1 of data in btemp-1
   411                           
   412  0BDA  120A  158A  23D6  120A  158A  	fcall	init_fetch0
   413  0BDF  0080               	movwf	0
   414  0BE0  0A84               	incf	4,f
   415  0BE1  0804               	movf	4,w
   416  0BE2  067D               	xorwf	btemp+-1,w
   417  0BE3  1903               	btfsc	3,2
   418  0BE4  3400               	retlw	0
   419  0BE5  0AFF               	incf	btemp+1,f
   420  0BE6  1903               	btfsc	3,2
   421  0BE7  0AFE               	incf	btemp,f
   422  0BE8  2BDA               	goto	init_ram0
   423                           
   424                           	psect	clrtext
   425  0B97                     clear_ram0:	
   426                           ;	Called with FSR containing the base address, and
   427                           ;	W with the last address+1
   428                           
   429  0B97  0064               	clrwdt	;clear the watchdog before getting into this loop
   430  0B98                     clrloop0:	
   431  0B98  0180               	clrf	0	;clear RAM location pointed to by FSR
   432  0B99  0A84               	incf	4,f	;increment pointer
   433  0B9A  0604               	xorwf	4,w	;XOR with final address
   434  0B9B  1903               	btfsc	3,2	;have we reached the end yet?
   435  0B9C  3400               	retlw	0	;all done for this memory range, return
   436  0B9D  0604               	xorwf	4,w	;XOR again to restore value
   437  0B9E  2B98               	goto	clrloop0	;do the next byte
   438                           
   439                           	psect	cstackBANK3
   440  01D6                     __pcstackBANK3:	
   441  01D6                     main@temp:	
   442                           
   443                           ; 1 bytes @ 0x0
   444  01D6                     	ds	1
   445  01D7                     main@umidita:	
   446                           
   447                           ; 1 bytes @ 0x1
   448  01D7                     	ds	1
   449  01D8                     main@pressione:	
   450                           
   451                           ; 1 bytes @ 0x2
   452  01D8                     	ds	1
   453  01D9                     main@time:	
   454                           
   455                           ; 2 bytes @ 0x3
   456  01D9                     	ds	2
   457  01DB                     main@i_489:	
   458                           
   459                           ; 1 bytes @ 0x5
   460  01DB                     	ds	1
   461  01DC                     main@i_491:	
   462                           
   463                           ; 1 bytes @ 0x6
   464  01DC                     	ds	1
   465  01DD                     main@i_488:	
   466                           
   467                           ; 2 bytes @ 0x7
   468  01DD                     	ds	2
   469  01DF                     main@lux_select:	
   470                           
   471                           ; 1 bytes @ 0x9
   472  01DF                     	ds	1
   473  01E0                     main@i_493:	
   474                           
   475                           ; 1 bytes @ 0xA
   476  01E0                     	ds	1
   477  01E1                     main@i:	
   478                           
   479                           ; 2 bytes @ 0xB
   480  01E1                     	ds	2
   481                           
   482                           	psect	cstackCOMMON
   483  0070                     __pcstackCOMMON:	
   484  0070                     ?_init_ADC:	
   485  0070                     ?_ShowDigitsOnDisplay:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_UpdateTimes:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_Conteggio:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_main:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_UART_TxChar:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_UART_Read:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ??_UART_Read:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_conteggioVeicoli:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_ISR:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     Conteggio@_count:	
   513                           ; 1 bytes @ 0x0
   514                           
   515                           
   516                           ; 2 bytes @ 0x0
   517  0070                     	ds	2
   518  0072                     Conteggio@_motorcycle:	
   519                           
   520                           ; 1 bytes @ 0x2
   521  0072                     	ds	1
   522  0073                     Conteggio@_car:	
   523                           
   524                           ; 1 bytes @ 0x3
   525  0073                     	ds	1
   526  0074                     Conteggio@_truck:	
   527                           
   528                           ; 1 bytes @ 0x4
   529  0074                     	ds	1
   530  0075                     Conteggio@index:	
   531                           
   532                           ; 1 bytes @ 0x5
   533  0075                     	ds	1
   534  0076                     ??_Conteggio:	
   535                           
   536                           ; 1 bytes @ 0x6
   537  0076                     	ds	3
   538  0079                     ??_conteggioVeicoli:	
   539                           
   540                           ; 1 bytes @ 0x9
   541  0079                     	ds	4
   542  007D                     conteggioVeicoli@i:	
   543                           
   544                           ; 1 bytes @ 0xD
   545  007D                     	ds	1
   546                           
   547                           	psect	cstackBANK0
   548  0020                     __pcstackBANK0:	
   549  0020                     ??_ISR:	
   550                           
   551                           ; 1 bytes @ 0x0
   552  0020                     	ds	4
   553  0024                     ??_init_ADC:	
   554  0024                     ?_luciSemaforo:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  0024                     ?_BuildByte:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  0024                     ??_UpdateTimes:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0024                     ?_SetDefaultTimers:	
   564                           ; 1 bytes @ 0x4
   565                           
   566  0024                     ??_UART_TxChar:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0024                     ?_SetDisplay:	
   570                           ; 1 bytes @ 0x4
   571                           
   572  0024                     ?___bmul:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0024                     ?_ADC_Read:	
   576                           ; 1 bytes @ 0x4
   577                           
   578  0024                     ?_GetTime:	
   579                           ; 2 bytes @ 0x4
   580                           
   581  0024                     ?___wmul:	
   582                           ; 2 bytes @ 0x4
   583                           
   584  0024                     ?___awmod:	
   585                           ; 2 bytes @ 0x4
   586                           
   587  0024                     ?___aldiv:	
   588                           ; 2 bytes @ 0x4
   589                           
   590  0024                     BuildByte@byte1:	
   591                           ; 4 bytes @ 0x4
   592                           
   593  0024                     GetTime@_dataFromGateway:	
   594                           ; 1 bytes @ 0x4
   595                           
   596  0024                     UART_TxChar@ch:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0024                     SetDisplay@d2:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0024                     luciSemaforo@lux:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0024                     ___bmul@multiplicand:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0024                     SetDefaultTimers@rosso:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0024                     ___wmul@multiplier:	
   612                           ; 2 bytes @ 0x4
   613                           
   614  0024                     ___awmod@divisor:	
   615                           ; 2 bytes @ 0x4
   616                           
   617  0024                     ___aldiv@divisor:	
   618                           ; 2 bytes @ 0x4
   619                           
   620                           
   621                           ; 4 bytes @ 0x4
   622  0024                     	ds	1
   623  0025                     ??_luciSemaforo:	
   624  0025                     ??___bmul:	
   625                           ; 1 bytes @ 0x5
   626                           
   627  0025                     BuildByte@valore:	
   628                           ; 1 bytes @ 0x5
   629                           
   630  0025                     SetDisplay@d3:	
   631                           ; 1 bytes @ 0x5
   632                           
   633                           
   634                           ; 1 bytes @ 0x5
   635  0025                     	ds	1
   636  0026                     ??_ADC_Read:	
   637  0026                     ??_BuildByte:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0026                     ??_GetTime:	
   641                           ; 1 bytes @ 0x6
   642                           
   643  0026                     SetDisplay@value:	
   644                           ; 1 bytes @ 0x6
   645                           
   646  0026                     ___bmul@product:	
   647                           ; 1 bytes @ 0x6
   648                           
   649  0026                     SetDefaultTimers@verde:	
   650                           ; 1 bytes @ 0x6
   651                           
   652  0026                     ___wmul@multiplicand:	
   653                           ; 2 bytes @ 0x6
   654                           
   655  0026                     ___awmod@dividend:	
   656                           ; 2 bytes @ 0x6
   657                           
   658                           
   659                           ; 2 bytes @ 0x6
   660  0026                     	ds	1
   661  0027                     ??_SetDisplay:	
   662  0027                     ADC_Read@canale:	
   663                           ; 1 bytes @ 0x7
   664                           
   665  0027                     SetDisplay@d1:	
   666                           ; 1 bytes @ 0x7
   667                           
   668  0027                     luciSemaforo@index:	
   669                           ; 1 bytes @ 0x7
   670                           
   671  0027                     ___bmul@multiplier:	
   672                           ; 1 bytes @ 0x7
   673                           
   674                           
   675                           ; 1 bytes @ 0x7
   676  0027                     	ds	1
   677  0028                     ??___wmul:	
   678  0028                     ??___awmod:	
   679                           ; 1 bytes @ 0x8
   680                           
   681  0028                     BuildByte@byte0:	
   682                           ; 1 bytes @ 0x8
   683                           
   684  0028                     GetTime@index:	
   685                           ; 1 bytes @ 0x8
   686                           
   687  0028                     SetDefaultTimers@giallo:	
   688                           ; 1 bytes @ 0x8
   689                           
   690  0028                     ___wmul@product:	
   691                           ; 2 bytes @ 0x8
   692                           
   693  0028                     ___aldiv@dividend:	
   694                           ; 2 bytes @ 0x8
   695                           
   696                           
   697                           ; 4 bytes @ 0x8
   698  0028                     	ds	1
   699  0029                     GetTime@shortInt:	
   700  0029                     ___awmod@counter:	
   701                           ; 1 bytes @ 0x9
   702                           
   703  0029                     BuildByte@txByte:	
   704                           ; 1 bytes @ 0x9
   705                           
   706                           
   707                           ; 5 bytes @ 0x9
   708  0029                     	ds	1
   709  002A                     SetDefaultTimers@_semafori:	
   710  002A                     ___awmod@sign:	
   711                           ; 1 bytes @ 0xA
   712                           
   713  002A                     GetTime@tmp:	
   714                           ; 1 bytes @ 0xA
   715                           
   716                           
   717                           ; 2 bytes @ 0xA
   718  002A                     	ds	1
   719  002B                     ??_ShowDigitsOnDisplay:	
   720  002B                     ??_SetDefaultTimers:	
   721                           ; 1 bytes @ 0xB
   722                           
   723  002B                     ?___awdiv:	
   724                           ; 1 bytes @ 0xB
   725                           
   726  002B                     ___awdiv@divisor:	
   727                           ; 2 bytes @ 0xB
   728                           
   729                           
   730                           ; 2 bytes @ 0xB
   731  002B                     	ds	1
   732  002C                     ?_SetReceivedTimes:	
   733  002C                     ??___aldiv:	
   734                           ; 1 bytes @ 0xC
   735                           
   736  002C                     SetReceivedTimes@_semafori:	
   737                           ; 1 bytes @ 0xC
   738                           
   739                           
   740                           ; 1 bytes @ 0xC
   741  002C                     	ds	1
   742  002D                     ??_SetReceivedTimes:	
   743  002D                     ___aldiv@counter:	
   744                           ; 1 bytes @ 0xD
   745                           
   746  002D                     ___awdiv@dividend:	
   747                           ; 1 bytes @ 0xD
   748                           
   749                           
   750                           ; 2 bytes @ 0xD
   751  002D                     	ds	1
   752  002E                     BuildByte@sommaRow:	
   753  002E                     ___aldiv@sign:	
   754                           ; 1 bytes @ 0xE
   755                           
   756                           
   757                           ; 1 bytes @ 0xE
   758  002E                     	ds	1
   759  002F                     ??___awdiv:	
   760  002F                     BuildByte@sommaColumn:	
   761                           ; 1 bytes @ 0xF
   762                           
   763  002F                     ___aldiv@quotient:	
   764                           ; 1 bytes @ 0xF
   765                           
   766                           
   767                           ; 4 bytes @ 0xF
   768  002F                     	ds	1
   769  0030                     ___awdiv@counter:	
   770  0030                     BuildByte@y:	
   771                           ; 1 bytes @ 0x10
   772                           
   773                           
   774                           ; 2 bytes @ 0x10
   775  0030                     	ds	1
   776  0031                     ___awdiv@sign:	
   777                           
   778                           ; 1 bytes @ 0x11
   779  0031                     	ds	1
   780  0032                     SetDefaultTimers@i:	
   781  0032                     BuildByte@y_356:	
   782                           ; 1 bytes @ 0x12
   783                           
   784  0032                     ___awdiv@quotient:	
   785                           ; 2 bytes @ 0x12
   786                           
   787                           
   788                           ; 2 bytes @ 0x12
   789  0032                     	ds	1
   790  0033                     ?_UART_Init:	
   791  0033                     SetDefaultTimers@l:	
   792                           ; 1 bytes @ 0x13
   793                           
   794  0033                     UART_Init@baudrate:	
   795                           ; 1 bytes @ 0x13
   796                           
   797                           
   798                           ; 2 bytes @ 0x13
   799  0033                     	ds	1
   800  0034                     ?_GetDigits:	
   801  0034                     ?_map:	
   802                           ; 1 bytes @ 0x14
   803                           
   804  0034                     GetDigits@decine:	
   805                           ; 2 bytes @ 0x14
   806                           
   807  0034                     UpdateTimes@_semafori:	
   808                           ; 1 bytes @ 0x14
   809                           
   810  0034                     map@x:	
   811                           ; 1 bytes @ 0x14
   812                           
   813  0034                     BuildByte@i:	
   814                           ; 2 bytes @ 0x14
   815                           
   816                           
   817                           ; 2 bytes @ 0x14
   818  0034                     	ds	1
   819  0035                     ??_UART_Init:	
   820  0035                     GetDigits@unita:	
   821                           ; 1 bytes @ 0x15
   822                           
   823  0035                     UpdateTimes@l:	
   824                           ; 1 bytes @ 0x15
   825                           
   826  0035                     SetReceivedTimes@semaforoId:	
   827                           ; 1 bytes @ 0x15
   828                           
   829                           
   830                           ; 1 bytes @ 0x15
   831  0035                     	ds	1
   832  0036                     UpdateTimes@i:	
   833  0036                     SetReceivedTimes@colorId:	
   834                           ; 1 bytes @ 0x16
   835                           
   836  0036                     map@in_min:	
   837                           ; 1 bytes @ 0x16
   838                           
   839  0036                     GetDigits@Time:	
   840                           ; 2 bytes @ 0x16
   841                           
   842  0036                     BuildByte@i_355:	
   843                           ; 2 bytes @ 0x16
   844                           
   845                           
   846                           ; 2 bytes @ 0x16
   847  0036                     	ds	1
   848  0037                     SetReceivedTimes@_dataFromGateway:	
   849                           
   850                           ; 1 bytes @ 0x17
   851  0037                     	ds	1
   852  0038                     ?_sendByte:	
   853  0038                     ??_GetDigits:	
   854                           ; 1 bytes @ 0x18
   855                           
   856  0038                     SetReceivedTimes@index:	
   857                           ; 1 bytes @ 0x18
   858                           
   859  0038                     sendByte@byte1:	
   860                           ; 1 bytes @ 0x18
   861                           
   862  0038                     map@in_max:	
   863                           ; 1 bytes @ 0x18
   864                           
   865                           
   866                           ; 2 bytes @ 0x18
   867  0038                     	ds	1
   868  0039                     SetReceivedTimes@i:	
   869  0039                     sendByte@valore:	
   870                           ; 1 bytes @ 0x19
   871                           
   872  0039                     _GetDigits$1222:	
   873                           ; 1 bytes @ 0x19
   874                           
   875                           
   876                           ; 2 bytes @ 0x19
   877  0039                     	ds	1
   878  003A                     ??_sendByte:	
   879  003A                     map@out_min:	
   880                           ; 1 bytes @ 0x1A
   881                           
   882                           
   883                           ; 2 bytes @ 0x1A
   884  003A                     	ds	1
   885  003B                     GetDigits@centinaia:	
   886                           
   887                           ; 1 bytes @ 0x1B
   888  003B                     	ds	1
   889  003C                     map@out_max:	
   890                           
   891                           ; 2 bytes @ 0x1C
   892  003C                     	ds	1
   893  003D                     sendByte@byte0:	
   894                           
   895                           ; 1 bytes @ 0x1D
   896  003D                     	ds	1
   897  003E                     ??_map:	
   898  003E                     sendByte@txByte:	
   899                           ; 1 bytes @ 0x1E
   900                           
   901                           
   902                           ; 1 bytes @ 0x1E
   903  003E                     	ds	1
   904  003F                     sendByte@i:	
   905                           
   906                           ; 1 bytes @ 0x1F
   907  003F                     	ds	1
   908  0040                     ??_main:	
   909                           
   910                           ; 1 bytes @ 0x20
   911  0040                     	ds	10
   912                           
   913                           	psect	maintext
   914  003F                     __pmaintext:	
   915 ;;
   916 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   917 ;;
   918 ;; *************** function _main *****************
   919 ;; Defined at:
   920 ;;		line 125 in file "main.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  lux_select      1    9[BANK3 ] unsigned char 
   925 ;;  i               1    6[BANK3 ] unsigned char 
   926 ;;  i               1    5[BANK3 ] unsigned char 
   927 ;;  i               2    7[BANK3 ] int 
   928 ;;  i               2   11[BANK3 ] int 
   929 ;;  i               1   10[BANK3 ] unsigned char 
   930 ;;  time            2    3[BANK3 ] int 
   931 ;;  pressione       1    2[BANK3 ] unsigned char 
   932 ;;  umidita         1    1[BANK3 ] unsigned char 
   933 ;;  temp            1    0[BANK3 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : B00/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         0       0       0      13       0
   945 ;;      Temps:          0      10       0       0       0
   946 ;;      Totals:         0      10       0      13       0
   947 ;;Total ram usage:       23 bytes
   948 ;; Hardware stack levels required when called:    5
   949 ;; This function calls:
   950 ;;		_ADC_Read
   951 ;;		_GetDigits
   952 ;;		_SetDefaultTimers
   953 ;;		_SetReceivedTimes
   954 ;;		_ShowDigitsOnDisplay
   955 ;;		_UART_Init
   956 ;;		_UpdateTimes
   957 ;;		_init_ADC
   958 ;;		_luciSemaforo
   959 ;;		_map
   960 ;;		_sendByte
   961 ;; This function is called by:
   962 ;;		Startup code after reset
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _main
   968  003F                     _main:	
   969  003F                     l3299:	
   970                           ;incstack = 0
   971                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   972                           
   973                           
   974                           ;main.c: 127:     TRISB = 0x38;
   975  003F  3038               	movlw	56
   976  0040  1683               	bsf	3,5	;RP0=1, select bank1
   977  0041  1303               	bcf	3,6	;RP1=0, select bank1
   978  0042  0086               	movwf	6	;volatile
   979                           
   980                           ;main.c: 128:     TRISC = 0x80;
   981  0043  3080               	movlw	128
   982  0044  0087               	movwf	7	;volatile
   983  0045                     l3301:	
   984                           
   985                           ;main.c: 129:     TRISD = 0x00;
   986  0045  0188               	clrf	8	;volatile
   987  0046                     l3303:	
   988                           
   989                           ;main.c: 130:     TRISE = 0x01;
   990  0046  3001               	movlw	1
   991  0047  0089               	movwf	9	;volatile
   992  0048                     l3305:	
   993                           
   994                           ;main.c: 131:     INTCON = 0xE0;
   995  0048  30E0               	movlw	224
   996  0049  008B               	movwf	11	;volatile
   997  004A                     l3307:	
   998                           
   999                           ;main.c: 132:     OPTION_REG = 0x04;
  1000  004A  3004               	movlw	4
  1001  004B  0081               	movwf	1	;volatile
  1002  004C                     l3309:	
  1003                           
  1004                           ;main.c: 133:     TMR0 = 6;
  1005  004C  3006               	movlw	6
  1006  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1007  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1008  004F  0081               	movwf	1	;volatile
  1009  0050                     l3311:	
  1010                           
  1011                           ;main.c: 134:     T1CON = 0x31;
  1012  0050  3031               	movlw	49
  1013  0051  0090               	movwf	16	;volatile
  1014  0052                     l3313:	
  1015                           
  1016                           ;main.c: 136:     TMR1H = 60;
  1017  0052  303C               	movlw	60
  1018  0053  008F               	movwf	15	;volatile
  1019  0054                     l3315:	
  1020                           
  1021                           ;main.c: 137:     TMR1L = 176;
  1022  0054  30B0               	movlw	176
  1023  0055  008E               	movwf	14	;volatile
  1024                           
  1025                           ;main.c: 140:     int time;;main.c: 141:     disp = 0;
  1026  0056  01D1               	clrf	_disp
  1027                           
  1028                           ;main.c: 143:     unsigned char umidita = 0;
  1029  0057  1683               	bsf	3,5	;RP0=1, select bank3
  1030  0058  1703               	bsf	3,6	;RP1=1, select bank3
  1031  0059  01D7               	clrf	main@umidita^(0+384)
  1032                           
  1033                           ;main.c: 144:     unsigned char pressione = 0;
  1034  005A  01D8               	clrf	main@pressione^(0+384)
  1035  005B                     l3317:	
  1036                           
  1037                           ;main.c: 146:     init_ADC();
  1038  005B  120A  158A  23C3  120A  118A  	fcall	_init_ADC
  1039  0060                     l3319:	
  1040                           
  1041                           ;main.c: 147:     UART_Init(9600);
  1042  0060  3080               	movlw	128
  1043  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0063  00B3               	movwf	UART_Init@baudrate
  1046  0064  3025               	movlw	37
  1047  0065  00B4               	movwf	UART_Init@baudrate+1
  1048  0066  120A  158A  2497  120A  118A  	fcall	_UART_Init
  1049  006B                     l3321:	
  1050                           
  1051                           ;main.c: 148:     SetDefaultTimers(1, 1, 1, Semafori);
  1052  006B  3001               	movlw	1
  1053  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1054  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1055  006E  00A4               	movwf	SetDefaultTimers@rosso
  1056  006F  3000               	movlw	0
  1057  0070  00A5               	movwf	SetDefaultTimers@rosso+1
  1058  0071  3001               	movlw	1
  1059  0072  00A6               	movwf	SetDefaultTimers@verde
  1060  0073  3000               	movlw	0
  1061  0074  00A7               	movwf	SetDefaultTimers@verde+1
  1062  0075  3001               	movlw	1
  1063  0076  00A8               	movwf	SetDefaultTimers@giallo
  1064  0077  3000               	movlw	0
  1065  0078  00A9               	movwf	SetDefaultTimers@giallo+1
  1066  0079  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1067  007A  00C0               	movwf	??_main
  1068  007B  0840               	movf	??_main,w
  1069  007C  00AA               	movwf	SetDefaultTimers@_semafori
  1070  007D  120A  118A  2551  120A  118A  	fcall	_SetDefaultTimers
  1071  0082                     l3323:	
  1072                           
  1073                           ;main.c: 151:     {;main.c: 153:         if (readGateway.Bit)
  1074  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0084  1C54               	btfss	_readGateway,0
  1077  0085  2887               	goto	u2801
  1078  0086  2888               	goto	u2800
  1079  0087                     u2801:	
  1080  0087  2B1C               	goto	l239
  1081  0088                     u2800:	
  1082  0088  2B07               	goto	l3403
  1083  0089                     l241:	
  1084                           ;main.c: 156:             {;main.c: 157:             case 0x08:
  1085                           
  1086                           
  1087                           ;main.c: 158:                 readGatewayDone.Bit = 1;
  1088  0089  1455               	bsf	_readGatewayDone,0
  1089                           
  1090                           ;main.c: 159:                 readGateway.Bit = 0;
  1091  008A  1054               	bcf	_readGateway,0
  1092  008B                     l3327:	
  1093                           
  1094                           ;main.c: 161:                 for (int i = 0; i < 4; i++)
  1095  008B  1683               	bsf	3,5	;RP0=1, select bank3
  1096  008C  1703               	bsf	3,6	;RP1=1, select bank3
  1097  008D  01E1               	clrf	main@i^(0+384)
  1098  008E  01E2               	clrf	(main@i+1)^(0+384)
  1099  008F  29AC               	goto	l3343
  1100  0090                     l3333:	
  1101                           
  1102                           ;main.c: 166:                         sendByte(0x03, 0x01, motorcycle[i]);
  1103  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0092  01B8               	clrf	sendByte@byte1
  1106  0093  0AB8               	incf	sendByte@byte1,f
  1107  0094  1683               	bsf	3,5	;RP0=1, select bank3
  1108  0095  1703               	bsf	3,6	;RP1=1, select bank3
  1109  0096  0861               	movf	main@i^(0+384),w
  1110  0097  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1111  0098  0084               	movwf	4
  1112  0099  1383               	bcf	3,7	;select IRP bank0
  1113  009A  0800               	movf	0,w
  1114  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1115  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1116  009D  00C0               	movwf	??_main
  1117  009E  0840               	movf	??_main,w
  1118  009F  00B9               	movwf	sendByte@valore
  1119  00A0  3003               	movlw	3
  1120  00A1  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1121                           
  1122                           ;main.c: 167:                         sendByte(0x03, 0x02, car[i]);
  1123  00A6  3002               	movlw	2
  1124  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1125  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1126  00A9  00C0               	movwf	??_main
  1127  00AA  0840               	movf	??_main,w
  1128  00AB  00B8               	movwf	sendByte@byte1
  1129  00AC  1683               	bsf	3,5	;RP0=1, select bank3
  1130  00AD  1703               	bsf	3,6	;RP1=1, select bank3
  1131  00AE  0861               	movf	main@i^(0+384),w
  1132  00AF  3E5A               	addlw	(low (_car| 0))& (0+255)
  1133  00B0  0084               	movwf	4
  1134  00B1  1383               	bcf	3,7	;select IRP bank0
  1135  00B2  0800               	movf	0,w
  1136  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00B5  00C1               	movwf	??_main+1
  1139  00B6  0841               	movf	??_main+1,w
  1140  00B7  00B9               	movwf	sendByte@valore
  1141  00B8  3003               	movlw	3
  1142  00B9  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1143                           
  1144                           ;main.c: 168:                         sendByte(0x03, 0x03, truck[i]);
  1145  00BE  3003               	movlw	3
  1146  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1147  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1148  00C1  00C0               	movwf	??_main
  1149  00C2  0840               	movf	??_main,w
  1150  00C3  00B8               	movwf	sendByte@byte1
  1151  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  1152  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  1153  00C6  0861               	movf	main@i^(0+384),w
  1154  00C7  3E56               	addlw	(low (_truck| 0))& (0+255)
  1155  00C8  0084               	movwf	4
  1156  00C9  1383               	bcf	3,7	;select IRP bank0
  1157  00CA  0800               	movf	0,w
  1158  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1159  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1160  00CD  00C1               	movwf	??_main+1
  1161  00CE  0841               	movf	??_main+1,w
  1162  00CF  00B9               	movwf	sendByte@valore
  1163  00D0  3003               	movlw	3
  1164  00D1  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1165                           
  1166                           ;main.c: 169:                         break;
  1167  00D6  29C1               	goto	l3345
  1168  00D7                     l3335:	
  1169                           
  1170                           ;main.c: 171:                         sendByte(0x05, 0x01, motorcycle[i]);
  1171  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1173  00D9  01B8               	clrf	sendByte@byte1
  1174  00DA  0AB8               	incf	sendByte@byte1,f
  1175  00DB  1683               	bsf	3,5	;RP0=1, select bank3
  1176  00DC  1703               	bsf	3,6	;RP1=1, select bank3
  1177  00DD  0861               	movf	main@i^(0+384),w
  1178  00DE  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1179  00DF  0084               	movwf	4
  1180  00E0  1383               	bcf	3,7	;select IRP bank0
  1181  00E1  0800               	movf	0,w
  1182  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1183  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1184  00E4  00C0               	movwf	??_main
  1185  00E5  0840               	movf	??_main,w
  1186  00E6  00B9               	movwf	sendByte@valore
  1187  00E7  3005               	movlw	5
  1188  00E8  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1189                           
  1190                           ;main.c: 172:                         sendByte(0x05, 0x02, car[i]);
  1191  00ED  3002               	movlw	2
  1192  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1193  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1194  00F0  00C0               	movwf	??_main
  1195  00F1  0840               	movf	??_main,w
  1196  00F2  00B8               	movwf	sendByte@byte1
  1197  00F3  1683               	bsf	3,5	;RP0=1, select bank3
  1198  00F4  1703               	bsf	3,6	;RP1=1, select bank3
  1199  00F5  0861               	movf	main@i^(0+384),w
  1200  00F6  3E5A               	addlw	(low (_car| 0))& (0+255)
  1201  00F7  0084               	movwf	4
  1202  00F8  1383               	bcf	3,7	;select IRP bank0
  1203  00F9  0800               	movf	0,w
  1204  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1205  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1206  00FC  00C1               	movwf	??_main+1
  1207  00FD  0841               	movf	??_main+1,w
  1208  00FE  00B9               	movwf	sendByte@valore
  1209  00FF  3005               	movlw	5
  1210  0100  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1211                           
  1212                           ;main.c: 173:                         sendByte(0x05, 0x03, truck[i]);
  1213  0105  3003               	movlw	3
  1214  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0108  00C0               	movwf	??_main
  1217  0109  0840               	movf	??_main,w
  1218  010A  00B8               	movwf	sendByte@byte1
  1219  010B  1683               	bsf	3,5	;RP0=1, select bank3
  1220  010C  1703               	bsf	3,6	;RP1=1, select bank3
  1221  010D  0861               	movf	main@i^(0+384),w
  1222  010E  3E56               	addlw	(low (_truck| 0))& (0+255)
  1223  010F  0084               	movwf	4
  1224  0110  1383               	bcf	3,7	;select IRP bank0
  1225  0111  0800               	movf	0,w
  1226  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0114  00C1               	movwf	??_main+1
  1229  0115  0841               	movf	??_main+1,w
  1230  0116  00B9               	movwf	sendByte@valore
  1231  0117  3005               	movlw	5
  1232  0118  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1233                           
  1234                           ;main.c: 174:                         break;
  1235  011D  29C1               	goto	l3345
  1236  011E                     l3337:	
  1237                           
  1238                           ;main.c: 176:                         sendByte(0x07, 0x01, motorcycle[i]);
  1239  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1240  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0120  01B8               	clrf	sendByte@byte1
  1242  0121  0AB8               	incf	sendByte@byte1,f
  1243  0122  1683               	bsf	3,5	;RP0=1, select bank3
  1244  0123  1703               	bsf	3,6	;RP1=1, select bank3
  1245  0124  0861               	movf	main@i^(0+384),w
  1246  0125  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1247  0126  0084               	movwf	4
  1248  0127  1383               	bcf	3,7	;select IRP bank0
  1249  0128  0800               	movf	0,w
  1250  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1251  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1252  012B  00C0               	movwf	??_main
  1253  012C  0840               	movf	??_main,w
  1254  012D  00B9               	movwf	sendByte@valore
  1255  012E  3007               	movlw	7
  1256  012F  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1257                           
  1258                           ;main.c: 177:                         sendByte(0x07, 0x02, car[i]);
  1259  0134  3002               	movlw	2
  1260  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0137  00C0               	movwf	??_main
  1263  0138  0840               	movf	??_main,w
  1264  0139  00B8               	movwf	sendByte@byte1
  1265  013A  1683               	bsf	3,5	;RP0=1, select bank3
  1266  013B  1703               	bsf	3,6	;RP1=1, select bank3
  1267  013C  0861               	movf	main@i^(0+384),w
  1268  013D  3E5A               	addlw	(low (_car| 0))& (0+255)
  1269  013E  0084               	movwf	4
  1270  013F  1383               	bcf	3,7	;select IRP bank0
  1271  0140  0800               	movf	0,w
  1272  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0143  00C1               	movwf	??_main+1
  1275  0144  0841               	movf	??_main+1,w
  1276  0145  00B9               	movwf	sendByte@valore
  1277  0146  3007               	movlw	7
  1278  0147  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1279                           
  1280                           ;main.c: 178:                         sendByte(0x07, 0x03, truck[i]);
  1281  014C  3003               	movlw	3
  1282  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1283  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1284  014F  00C0               	movwf	??_main
  1285  0150  0840               	movf	??_main,w
  1286  0151  00B8               	movwf	sendByte@byte1
  1287  0152  1683               	bsf	3,5	;RP0=1, select bank3
  1288  0153  1703               	bsf	3,6	;RP1=1, select bank3
  1289  0154  0861               	movf	main@i^(0+384),w
  1290  0155  3E56               	addlw	(low (_truck| 0))& (0+255)
  1291  0156  0084               	movwf	4
  1292  0157  1383               	bcf	3,7	;select IRP bank0
  1293  0158  0800               	movf	0,w
  1294  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1295  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1296  015B  00C1               	movwf	??_main+1
  1297  015C  0841               	movf	??_main+1,w
  1298  015D  00B9               	movwf	sendByte@valore
  1299  015E  3007               	movlw	7
  1300  015F  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1301                           
  1302                           ;main.c: 179:                         break;
  1303  0164  29C1               	goto	l3345
  1304  0165                     l3339:	
  1305                           
  1306                           ;main.c: 181:                         sendByte(0x09, 0x01, motorcycle[i]);
  1307  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0167  01B8               	clrf	sendByte@byte1
  1310  0168  0AB8               	incf	sendByte@byte1,f
  1311  0169  1683               	bsf	3,5	;RP0=1, select bank3
  1312  016A  1703               	bsf	3,6	;RP1=1, select bank3
  1313  016B  0861               	movf	main@i^(0+384),w
  1314  016C  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1315  016D  0084               	movwf	4
  1316  016E  1383               	bcf	3,7	;select IRP bank0
  1317  016F  0800               	movf	0,w
  1318  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0172  00C0               	movwf	??_main
  1321  0173  0840               	movf	??_main,w
  1322  0174  00B9               	movwf	sendByte@valore
  1323  0175  3009               	movlw	9
  1324  0176  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1325                           
  1326                           ;main.c: 182:                         sendByte(0x09, 0x02, car[i]);
  1327  017B  3002               	movlw	2
  1328  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1329  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1330  017E  00C0               	movwf	??_main
  1331  017F  0840               	movf	??_main,w
  1332  0180  00B8               	movwf	sendByte@byte1
  1333  0181  1683               	bsf	3,5	;RP0=1, select bank3
  1334  0182  1703               	bsf	3,6	;RP1=1, select bank3
  1335  0183  0861               	movf	main@i^(0+384),w
  1336  0184  3E5A               	addlw	(low (_car| 0))& (0+255)
  1337  0185  0084               	movwf	4
  1338  0186  1383               	bcf	3,7	;select IRP bank0
  1339  0187  0800               	movf	0,w
  1340  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1342  018A  00C1               	movwf	??_main+1
  1343  018B  0841               	movf	??_main+1,w
  1344  018C  00B9               	movwf	sendByte@valore
  1345  018D  3009               	movlw	9
  1346  018E  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1347                           
  1348                           ;main.c: 183:                         sendByte(0x09, 0x03, truck[i]);
  1349  0193  3003               	movlw	3
  1350  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0196  00C0               	movwf	??_main
  1353  0197  0840               	movf	??_main,w
  1354  0198  00B8               	movwf	sendByte@byte1
  1355  0199  1683               	bsf	3,5	;RP0=1, select bank3
  1356  019A  1703               	bsf	3,6	;RP1=1, select bank3
  1357  019B  0861               	movf	main@i^(0+384),w
  1358  019C  3E56               	addlw	(low (_truck| 0))& (0+255)
  1359  019D  0084               	movwf	4
  1360  019E  1383               	bcf	3,7	;select IRP bank0
  1361  019F  0800               	movf	0,w
  1362  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1363  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1364  01A2  00C1               	movwf	??_main+1
  1365  01A3  0841               	movf	??_main+1,w
  1366  01A4  00B9               	movwf	sendByte@valore
  1367  01A5  3009               	movlw	9
  1368  01A6  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1369                           
  1370                           ;main.c: 184:                         break;
  1371  01AB  29C1               	goto	l3345
  1372  01AC                     l3343:	
  1373                           
  1374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1375                           ; Switch size 1, requested type "simple"
  1376                           ; Number of cases is 1, Range of values is 0 to 0
  1377                           ; switch strategies available:
  1378                           ; Name         Instructions Cycles
  1379                           ; simple_byte            4     3 (average)
  1380                           ; direct_byte           11     8 (fixed)
  1381                           ; jumptable            260     6 (fixed)
  1382                           ;	Chosen strategy is simple_byte
  1383  01AC  1683               	bsf	3,5	;RP0=1, select bank3
  1384  01AD  1703               	bsf	3,6	;RP1=1, select bank3
  1385  01AE  0862               	movf	(main@i+1)^(0+384),w
  1386  01AF  3A00               	xorlw	0	; case 0
  1387  01B0  1903               	skipnz
  1388  01B1  29B3               	goto	l3673
  1389  01B2  29C1               	goto	l3345
  1390  01B3                     l3673:	
  1391                           
  1392                           ; Switch size 1, requested type "simple"
  1393                           ; Number of cases is 4, Range of values is 0 to 3
  1394                           ; switch strategies available:
  1395                           ; Name         Instructions Cycles
  1396                           ; simple_byte           13     7 (average)
  1397                           ; direct_byte           20     8 (fixed)
  1398                           ; jumptable            260     6 (fixed)
  1399                           ;	Chosen strategy is simple_byte
  1400  01B3  0861               	movf	main@i^(0+384),w
  1401  01B4  3A00               	xorlw	0	; case 0
  1402  01B5  1903               	skipnz
  1403  01B6  2890               	goto	l3333
  1404  01B7  3A01               	xorlw	1	; case 1
  1405  01B8  1903               	skipnz
  1406  01B9  28D7               	goto	l3335
  1407  01BA  3A03               	xorlw	3	; case 2
  1408  01BB  1903               	skipnz
  1409  01BC  291E               	goto	l3337
  1410  01BD  3A01               	xorlw	1	; case 3
  1411  01BE  1903               	skipnz
  1412  01BF  2965               	goto	l3339
  1413  01C0  29C1               	goto	l3345
  1414  01C1                     l3345:	
  1415                           
  1416                           ;main.c: 186:                 }
  1417  01C1  3001               	movlw	1
  1418  01C2  1683               	bsf	3,5	;RP0=1, select bank3
  1419  01C3  1703               	bsf	3,6	;RP1=1, select bank3
  1420  01C4  07E1               	addwf	main@i^(0+384),f
  1421  01C5  1803               	skipnc
  1422  01C6  0AE2               	incf	(main@i+1)^(0+384),f
  1423  01C7  3000               	movlw	0
  1424  01C8  07E2               	addwf	(main@i+1)^(0+384),f
  1425  01C9                     l3347:	
  1426  01C9  0862               	movf	(main@i+1)^(0+384),w
  1427  01CA  3A80               	xorlw	128
  1428  01CB  00FF               	movwf	btemp+1
  1429  01CC  3080               	movlw	128
  1430  01CD  027F               	subwf	btemp+1,w
  1431  01CE  1D03               	skipz
  1432  01CF  29D2               	goto	u2815
  1433  01D0  3004               	movlw	4
  1434  01D1  0261               	subwf	main@i^(0+384),w
  1435  01D2                     u2815:	
  1436  01D2  1C03               	skipc
  1437  01D3  29D5               	goto	u2811
  1438  01D4  29D6               	goto	u2810
  1439  01D5                     u2811:	
  1440  01D5  29AC               	goto	l3343
  1441  01D6                     u2810:	
  1442  01D6                     l3349:	
  1443                           
  1444                           ;main.c: 188:                 for (int i = 0; i < 4; i++)
  1445  01D6  1683               	bsf	3,5	;RP0=1, select bank3
  1446  01D7  1703               	bsf	3,6	;RP1=1, select bank3
  1447  01D8  01DD               	clrf	main@i_488^(0+384)
  1448  01D9  01DE               	clrf	(main@i_488+1)^(0+384)
  1449  01DA                     l3355:	
  1450                           
  1451                           ;main.c: 189:                 {;main.c: 190:                     motorcycle[i] = 0;
  1452  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  1453  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  1454  01DC  085D               	movf	main@i_488^(0+384),w
  1455  01DD  3E5E               	addlw	(low (_motorcycle| 0))& (0+255)
  1456  01DE  0084               	movwf	4
  1457  01DF  1383               	bcf	3,7	;select IRP bank0
  1458  01E0  0180               	clrf	0
  1459                           
  1460                           ;main.c: 191:                     car[i] = 0;
  1461  01E1  085D               	movf	main@i_488^(0+384),w
  1462  01E2  3E5A               	addlw	(low (_car| 0))& (0+255)
  1463  01E3  0084               	movwf	4
  1464  01E4  0180               	clrf	0
  1465                           
  1466                           ;main.c: 192:                     truck[i] = 0;
  1467  01E5  085D               	movf	main@i_488^(0+384),w
  1468  01E6  3E56               	addlw	(low (_truck| 0))& (0+255)
  1469  01E7  0084               	movwf	4
  1470  01E8  0180               	clrf	0
  1471  01E9                     l3357:	
  1472                           
  1473                           ;main.c: 193:                 }
  1474  01E9  3001               	movlw	1
  1475  01EA  07DD               	addwf	main@i_488^(0+384),f
  1476  01EB  1803               	skipnc
  1477  01EC  0ADE               	incf	(main@i_488+1)^(0+384),f
  1478  01ED  3000               	movlw	0
  1479  01EE  07DE               	addwf	(main@i_488+1)^(0+384),f
  1480  01EF                     l3359:	
  1481  01EF  085E               	movf	(main@i_488+1)^(0+384),w
  1482  01F0  3A80               	xorlw	128
  1483  01F1  00FF               	movwf	btemp+1
  1484  01F2  3080               	movlw	128
  1485  01F3  027F               	subwf	btemp+1,w
  1486  01F4  1D03               	skipz
  1487  01F5  29F8               	goto	u2825
  1488  01F6  3004               	movlw	4
  1489  01F7  025D               	subwf	main@i_488^(0+384),w
  1490  01F8                     u2825:	
  1491  01F8  1C03               	skipc
  1492  01F9  29FB               	goto	u2821
  1493  01FA  29FC               	goto	u2820
  1494  01FB                     u2821:	
  1495  01FB  29DA               	goto	l3355
  1496  01FC                     u2820:	
  1497  01FC                     l3361:	
  1498                           
  1499                           ;main.c: 195:                 for (unsigned char i = 0; i < 5; i++)
  1500  01FC  1683               	bsf	3,5	;RP0=1, select bank3
  1501  01FD  1703               	bsf	3,6	;RP1=1, select bank3
  1502  01FE  01DB               	clrf	main@i_489^(0+384)
  1503  01FF                     l3367:	
  1504                           
  1505                           ;main.c: 196:                 {;main.c: 197:                     dataFromGateway[i] = 0;
  1506  01FF  085B               	movf	main@i_489^(0+384),w
  1507  0200  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1508  0201  0084               	movwf	4
  1509  0202  1383               	bcf	3,7	;select IRP bank1
  1510  0203  0180               	clrf	0
  1511  0204                     l3369:	
  1512                           
  1513                           ;main.c: 198:                 }
  1514  0204  3001               	movlw	1
  1515  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0207  00C0               	movwf	??_main
  1518  0208  0840               	movf	??_main,w
  1519  0209  1683               	bsf	3,5	;RP0=1, select bank3
  1520  020A  1703               	bsf	3,6	;RP1=1, select bank3
  1521  020B  07DB               	addwf	main@i_489^(0+384),f
  1522  020C                     l3371:	
  1523  020C  3005               	movlw	5
  1524  020D  025B               	subwf	main@i_489^(0+384),w
  1525  020E  1C03               	skipc
  1526  020F  2A11               	goto	u2831
  1527  0210  2A12               	goto	u2830
  1528  0211                     u2831:	
  1529  0211  29FF               	goto	l3367
  1530  0212                     u2830:	
  1531  0212  2B1C               	goto	l239
  1532  0213                     l255:	
  1533                           ;main.c: 200:             case 0x0A:
  1534                           
  1535                           
  1536                           ;main.c: 201:                 readGatewayDone.Bit = 1;
  1537  0213  1455               	bsf	_readGatewayDone,0
  1538                           
  1539                           ;main.c: 202:                 readGateway.Bit = 0;
  1540  0214  1054               	bcf	_readGateway,0
  1541  0215                     l3373:	
  1542                           
  1543                           ;main.c: 204:                 temp = (char)map((ADC_Read(0) >> 2), 0, 255, -20, 60);
  1544  0215  3000               	movlw	0
  1545  0216  120A  158A  2415  120A  118A  	fcall	_ADC_Read
  1546  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1547  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1548  021D  0824               	movf	?_ADC_Read,w
  1549  021E  00C0               	movwf	??_main
  1550  021F  0825               	movf	?_ADC_Read+1,w
  1551  0220  00C1               	movwf	??_main+1
  1552  0221  0D41               	rlf	??_main+1,w
  1553  0222  0CC1               	rrf	??_main+1,f
  1554  0223  0CC0               	rrf	??_main,f
  1555  0224  0D41               	rlf	??_main+1,w
  1556  0225  0CC1               	rrf	??_main+1,f
  1557  0226  0CC0               	rrf	??_main,f
  1558  0227  0840               	movf	??_main,w
  1559  0228  00B4               	movwf	map@x
  1560  0229  0841               	movf	??_main+1,w
  1561  022A  00B5               	movwf	map@x+1
  1562  022B  3000               	movlw	0
  1563  022C  00B6               	movwf	map@in_min
  1564  022D  00B7               	movwf	map@in_min+1
  1565  022E  30FF               	movlw	255
  1566  022F  00B8               	movwf	map@in_max
  1567  0230  3000               	movlw	0
  1568  0231  00B9               	movwf	map@in_max+1
  1569  0232  30EC               	movlw	236
  1570  0233  00BA               	movwf	map@out_min
  1571  0234  30FF               	movlw	255
  1572  0235  00BB               	movwf	map@out_min+1
  1573  0236  303C               	movlw	60
  1574  0237  00BC               	movwf	map@out_max
  1575  0238  3000               	movlw	0
  1576  0239  00BD               	movwf	map@out_max+1
  1577  023A  120A  158A  2462  120A  118A  	fcall	_map
  1578  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0241  0834               	movf	?_map,w
  1581  0242  00C2               	movwf	??_main+2
  1582  0243  0842               	movf	??_main+2,w
  1583  0244  1683               	bsf	3,5	;RP0=1, select bank3
  1584  0245  1703               	bsf	3,6	;RP1=1, select bank3
  1585  0246  00D6               	movwf	main@temp^(0+384)
  1586                           
  1587                           ;main.c: 205:                 umidita = (char)map((ADC_Read(1) >> 2), 0, 255, 0, 100);
  1588  0247  3001               	movlw	1
  1589  0248  120A  158A  2415  120A  118A  	fcall	_ADC_Read
  1590  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1591  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1592  024F  0824               	movf	?_ADC_Read,w
  1593  0250  00C0               	movwf	??_main
  1594  0251  0825               	movf	?_ADC_Read+1,w
  1595  0252  00C1               	movwf	??_main+1
  1596  0253  0D41               	rlf	??_main+1,w
  1597  0254  0CC1               	rrf	??_main+1,f
  1598  0255  0CC0               	rrf	??_main,f
  1599  0256  0D41               	rlf	??_main+1,w
  1600  0257  0CC1               	rrf	??_main+1,f
  1601  0258  0CC0               	rrf	??_main,f
  1602  0259  0840               	movf	??_main,w
  1603  025A  00B4               	movwf	map@x
  1604  025B  0841               	movf	??_main+1,w
  1605  025C  00B5               	movwf	map@x+1
  1606  025D  3000               	movlw	0
  1607  025E  00B6               	movwf	map@in_min
  1608  025F  00B7               	movwf	map@in_min+1
  1609  0260  30FF               	movlw	255
  1610  0261  00B8               	movwf	map@in_max
  1611  0262  3000               	movlw	0
  1612  0263  00B9               	movwf	map@in_max+1
  1613  0264  3000               	movlw	0
  1614  0265  00BA               	movwf	map@out_min
  1615  0266  00BB               	movwf	map@out_min+1
  1616  0267  3064               	movlw	100
  1617  0268  00BC               	movwf	map@out_max
  1618  0269  3000               	movlw	0
  1619  026A  00BD               	movwf	map@out_max+1
  1620  026B  120A  158A  2462  120A  118A  	fcall	_map
  1621  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0272  0834               	movf	?_map,w
  1624  0273  00C2               	movwf	??_main+2
  1625  0274  0842               	movf	??_main+2,w
  1626  0275  1683               	bsf	3,5	;RP0=1, select bank3
  1627  0276  1703               	bsf	3,6	;RP1=1, select bank3
  1628  0277  00D7               	movwf	main@umidita^(0+384)
  1629                           
  1630                           ;main.c: 206:                 pressione = (char)map((ADC_Read(5) >> 2), 0, 255, 0, 100);
  1631  0278  3005               	movlw	5
  1632  0279  120A  158A  2415  120A  118A  	fcall	_ADC_Read
  1633  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1634  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0280  0824               	movf	?_ADC_Read,w
  1636  0281  00C0               	movwf	??_main
  1637  0282  0825               	movf	?_ADC_Read+1,w
  1638  0283  00C1               	movwf	??_main+1
  1639  0284  0D41               	rlf	??_main+1,w
  1640  0285  0CC1               	rrf	??_main+1,f
  1641  0286  0CC0               	rrf	??_main,f
  1642  0287  0D41               	rlf	??_main+1,w
  1643  0288  0CC1               	rrf	??_main+1,f
  1644  0289  0CC0               	rrf	??_main,f
  1645  028A  0840               	movf	??_main,w
  1646  028B  00B4               	movwf	map@x
  1647  028C  0841               	movf	??_main+1,w
  1648  028D  00B5               	movwf	map@x+1
  1649  028E  3000               	movlw	0
  1650  028F  00B6               	movwf	map@in_min
  1651  0290  00B7               	movwf	map@in_min+1
  1652  0291  30FF               	movlw	255
  1653  0292  00B8               	movwf	map@in_max
  1654  0293  3000               	movlw	0
  1655  0294  00B9               	movwf	map@in_max+1
  1656  0295  3000               	movlw	0
  1657  0296  00BA               	movwf	map@out_min
  1658  0297  00BB               	movwf	map@out_min+1
  1659  0298  3064               	movlw	100
  1660  0299  00BC               	movwf	map@out_max
  1661  029A  3000               	movlw	0
  1662  029B  00BD               	movwf	map@out_max+1
  1663  029C  120A  158A  2462  120A  118A  	fcall	_map
  1664  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1665  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1666  02A3  0834               	movf	?_map,w
  1667  02A4  00C2               	movwf	??_main+2
  1668  02A5  0842               	movf	??_main+2,w
  1669  02A6  1683               	bsf	3,5	;RP0=1, select bank3
  1670  02A7  1703               	bsf	3,6	;RP1=1, select bank3
  1671  02A8  00D8               	movwf	main@pressione^(0+384)
  1672  02A9                     l3375:	
  1673                           
  1674                           ;main.c: 207:                 sendByte(0x02, 0x00, temp);
  1675  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1676  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1677  02AB  01B8               	clrf	sendByte@byte1
  1678  02AC  1683               	bsf	3,5	;RP0=1, select bank3
  1679  02AD  1703               	bsf	3,6	;RP1=1, select bank3
  1680  02AE  0856               	movf	main@temp^(0+384),w
  1681  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1682  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1683  02B1  00C0               	movwf	??_main
  1684  02B2  0840               	movf	??_main,w
  1685  02B3  00B9               	movwf	sendByte@valore
  1686  02B4  3002               	movlw	2
  1687  02B5  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1688  02BA                     l3377:	
  1689                           
  1690                           ;main.c: 208:                 sendByte(0x04, 0x00, umidita);
  1691  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1692  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1693  02BC  01B8               	clrf	sendByte@byte1
  1694  02BD  1683               	bsf	3,5	;RP0=1, select bank3
  1695  02BE  1703               	bsf	3,6	;RP1=1, select bank3
  1696  02BF  0857               	movf	main@umidita^(0+384),w
  1697  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1698  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1699  02C2  00C0               	movwf	??_main
  1700  02C3  0840               	movf	??_main,w
  1701  02C4  00B9               	movwf	sendByte@valore
  1702  02C5  3004               	movlw	4
  1703  02C6  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1704  02CB                     l3379:	
  1705                           
  1706                           ;main.c: 209:                 sendByte(0x06, 0x00, pressione);
  1707  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1708  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1709  02CD  01B8               	clrf	sendByte@byte1
  1710  02CE  1683               	bsf	3,5	;RP0=1, select bank3
  1711  02CF  1703               	bsf	3,6	;RP1=1, select bank3
  1712  02D0  0858               	movf	main@pressione^(0+384),w
  1713  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1714  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1715  02D3  00C0               	movwf	??_main
  1716  02D4  0840               	movf	??_main,w
  1717  02D5  00B9               	movwf	sendByte@valore
  1718  02D6  3006               	movlw	6
  1719  02D7  120A  118A  27CE  120A  118A  	fcall	_sendByte
  1720  02DC                     l3381:	
  1721                           
  1722                           ;main.c: 211:                 for (unsigned char i = 0; i < 5; i++)
  1723  02DC  1683               	bsf	3,5	;RP0=1, select bank3
  1724  02DD  1703               	bsf	3,6	;RP1=1, select bank3
  1725  02DE  01DC               	clrf	main@i_491^(0+384)
  1726  02DF                     l3383:	
  1727  02DF  3005               	movlw	5
  1728  02E0  025C               	subwf	main@i_491^(0+384),w
  1729  02E1  1C03               	skipc
  1730  02E2  2AE4               	goto	u2841
  1731  02E3  2AE5               	goto	u2840
  1732  02E4                     u2841:	
  1733  02E4  2AE6               	goto	l3387
  1734  02E5                     u2840:	
  1735  02E5  2B1C               	goto	l239
  1736  02E6                     l3387:	
  1737                           
  1738                           ;main.c: 212:                 {;main.c: 213:                     dataFromGateway[i] = 0;
  1739  02E6  085C               	movf	main@i_491^(0+384),w
  1740  02E7  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  1741  02E8  0084               	movwf	4
  1742  02E9  1383               	bcf	3,7	;select IRP bank1
  1743  02EA  0180               	clrf	0
  1744  02EB                     l3389:	
  1745                           
  1746                           ;main.c: 214:                 }
  1747  02EB  3001               	movlw	1
  1748  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1749  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1750  02EE  00C0               	movwf	??_main
  1751  02EF  0840               	movf	??_main,w
  1752  02F0  1683               	bsf	3,5	;RP0=1, select bank3
  1753  02F1  1703               	bsf	3,6	;RP1=1, select bank3
  1754  02F2  07DC               	addwf	main@i_491^(0+384),f
  1755  02F3  2ADF               	goto	l3383
  1756  02F4                     l3393:	
  1757                           
  1758                           ;main.c: 218:                 if (timerReadFromGateway >= 4)
  1759  02F4  3004               	movlw	4
  1760  02F5  024C               	subwf	_timerReadFromGateway,w
  1761  02F6  1C03               	skipc
  1762  02F7  2AF9               	goto	u2851
  1763  02F8  2AFA               	goto	u2850
  1764  02F9                     u2851:	
  1765  02F9  2AFD               	goto	l3397
  1766  02FA                     u2850:	
  1767  02FA                     l3395:	
  1768                           
  1769                           ;main.c: 219:                 {;main.c: 220:                     readGatewayDone.Bit = 1
      +                          ;
  1770  02FA  1455               	bsf	_readGatewayDone,0
  1771                           
  1772                           ;main.c: 221:                     readGatewayDone.Timeout = 1;
  1773  02FB  14D5               	bsf	_readGatewayDone,1
  1774                           
  1775                           ;main.c: 222:                     readGateway.Bit = 0;
  1776  02FC  1054               	bcf	_readGateway,0
  1777  02FD                     l3397:	
  1778                           
  1779                           ;main.c: 225:                 if (dataFromGatewayIndex >= 15)
  1780  02FD  300F               	movlw	15
  1781  02FE  024D               	subwf	_dataFromGatewayIndex,w
  1782  02FF  1C03               	skipc
  1783  0300  2B02               	goto	u2861
  1784  0301  2B03               	goto	u2860
  1785  0302                     u2861:	
  1786  0302  2B1C               	goto	l239
  1787  0303                     u2860:	
  1788  0303                     l3399:	
  1789                           
  1790                           ;main.c: 226:                 {;main.c: 227:                     readGatewayDone.Bit = 1
      +                          ;
  1791  0303  1455               	bsf	_readGatewayDone,0
  1792                           
  1793                           ;main.c: 228:                     readGatewayDone.Timeout = 0;
  1794  0304  10D5               	bcf	_readGatewayDone,1
  1795                           
  1796                           ;main.c: 229:                     readGateway.Bit = 0;
  1797  0305  1054               	bcf	_readGateway,0
  1798  0306  2B1C               	goto	l239
  1799  0307                     l3403:	
  1800  0307  1683               	bsf	3,5	;RP0=1, select bank1
  1801  0308  1303               	bcf	3,6	;RP1=0, select bank1
  1802  0309  0824               	movf	_dataFromGateway^(0+128),w
  1803  030A  397F               	andlw	127
  1804  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1805  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1806  030D  00C0               	movwf	??_main
  1807  030E  01C1               	clrf	??_main+1
  1808                           
  1809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1810                           ; Switch size 1, requested type "simple"
  1811                           ; Number of cases is 1, Range of values is 0 to 0
  1812                           ; switch strategies available:
  1813                           ; Name         Instructions Cycles
  1814                           ; simple_byte            4     3 (average)
  1815                           ; direct_byte           11     8 (fixed)
  1816                           ; jumptable            260     6 (fixed)
  1817                           ;	Chosen strategy is simple_byte
  1818  030F  0841               	movf	??_main+1,w
  1819  0310  3A00               	xorlw	0	; case 0
  1820  0311  1903               	skipnz
  1821  0312  2B14               	goto	l3675
  1822  0313  2AF4               	goto	l3393
  1823  0314                     l3675:	
  1824                           
  1825                           ; Switch size 1, requested type "simple"
  1826                           ; Number of cases is 2, Range of values is 8 to 10
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            7     4 (average)
  1830                           ; direct_byte           20    11 (fixed)
  1831                           ; jumptable            263     9 (fixed)
  1832                           ;	Chosen strategy is simple_byte
  1833  0314  0840               	movf	??_main,w
  1834  0315  3A08               	xorlw	8	; case 8
  1835  0316  1903               	skipnz
  1836  0317  2889               	goto	l241
  1837  0318  3A02               	xorlw	2	; case 10
  1838  0319  1903               	skipnz
  1839  031A  2A13               	goto	l255
  1840  031B  2AF4               	goto	l3393
  1841  031C                     l239:	
  1842                           ;main.c: 233:         }
  1843                           
  1844                           
  1845                           ;main.c: 236:         if (readGatewayDone.Bit)
  1846  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1847  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1848  031E  1C55               	btfss	_readGatewayDone,0
  1849  031F  2B21               	goto	u2871
  1850  0320  2B22               	goto	u2870
  1851  0321                     u2871:	
  1852  0321  2B36               	goto	l3417
  1853  0322                     u2870:	
  1854  0322                     l3405:	
  1855                           
  1856                           ;main.c: 237:         {;main.c: 239:             readGateway.Bit = 0;
  1857  0322  1054               	bcf	_readGateway,0
  1858  0323                     l3407:	
  1859                           
  1860                           ;main.c: 240:             dataFromGatewayIndex = 0;
  1861  0323  01CD               	clrf	_dataFromGatewayIndex
  1862  0324                     l3409:	
  1863                           
  1864                           ;main.c: 241:             readGatewayDone.Bit = 0;
  1865  0324  1055               	bcf	_readGatewayDone,0
  1866                           
  1867                           ;main.c: 242:             timerReadFromGateway = 0;
  1868  0325  01CC               	clrf	_timerReadFromGateway
  1869  0326                     l3411:	
  1870                           
  1871                           ;main.c: 245:             if (readGatewayDone.Timeout)
  1872  0326  1CD5               	btfss	_readGatewayDone,1
  1873  0327  2B29               	goto	u2881
  1874  0328  2B2A               	goto	u2880
  1875  0329                     u2881:	
  1876  0329  2B2C               	goto	l3415
  1877  032A                     u2880:	
  1878  032A                     l3413:	
  1879                           
  1880                           ;main.c: 246:             {;main.c: 247:                 readGatewayDone.Timeout = 0;
  1881  032A  10D5               	bcf	_readGatewayDone,1
  1882                           
  1883                           ;main.c: 248:             }
  1884  032B  2B36               	goto	l3417
  1885  032C                     l3415:	
  1886                           
  1887                           ;main.c: 251:             {;main.c: 253:                 SetReceivedTimes(dataFromGatewa
      +                          y, Semafori);
  1888  032C  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  1889  032D  00C0               	movwf	??_main
  1890  032E  0840               	movf	??_main,w
  1891  032F  00AC               	movwf	SetReceivedTimes@_semafori
  1892  0330  30A4               	movlw	(low (_dataFromGateway| 0))& (0+255)
  1893  0331  120A  158A  2792  120A  118A  	fcall	_SetReceivedTimes
  1894  0336                     l3417:	
  1895                           
  1896                           ;main.c: 259:         if (secondPassed.Bit && cycled.Bit)
  1897  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0338  1C53               	btfss	_secondPassed,0
  1900  0339  2B3B               	goto	u2891
  1901  033A  2B3C               	goto	u2890
  1902  033B                     u2891:	
  1903  033B  2C70               	goto	l264
  1904  033C                     u2890:	
  1905  033C                     l3419:	
  1906  033C  1C52               	btfss	_cycled,0
  1907  033D  2B3F               	goto	u2901
  1908  033E  2B40               	goto	u2900
  1909  033F                     u2901:	
  1910  033F  2C70               	goto	l264
  1911  0340                     u2900:	
  1912  0340                     l3421:	
  1913                           
  1914                           ;main.c: 260:         {;main.c: 261:             time++;
  1915  0340  3001               	movlw	1
  1916  0341  1683               	bsf	3,5	;RP0=1, select bank3
  1917  0342  1703               	bsf	3,6	;RP1=1, select bank3
  1918  0343  07D9               	addwf	main@time^(0+384),f
  1919  0344  1803               	skipnc
  1920  0345  0ADA               	incf	(main@time+1)^(0+384),f
  1921  0346  3000               	movlw	0
  1922  0347  07DA               	addwf	(main@time+1)^(0+384),f
  1923  0348                     l3423:	
  1924                           
  1925                           ;main.c: 263:             unsigned char i = 0;
  1926  0348  01E0               	clrf	main@i_493^(0+384)
  1927                           
  1928                           ;main.c: 264:             while (i < n_semafori)
  1929  0349  2C6A               	goto	l3453
  1930  034A                     l3425:	
  1931                           
  1932                           ;main.c: 265:             {;main.c: 266:                 if ((*Semafori[i]).times[0] != 
      +                          0)
  1933  034A  0860               	movf	main@i_493^(0+384),w
  1934  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1935  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1936  034D  00C0               	movwf	??_main
  1937  034E  0740               	addwf	??_main,w
  1938  034F  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1939  0350  0084               	movwf	4
  1940  0351  1383               	bcf	3,7	;select IRP bank1
  1941  0352  0800               	movf	0,w
  1942  0353  00C1               	movwf	??_main+1
  1943  0354  0A84               	incf	4,f
  1944  0355  0800               	movf	0,w
  1945  0356  00C2               	movwf	??_main+2
  1946  0357  0841               	movf	??_main+1,w
  1947  0358  0084               	movwf	4
  1948  0359  1783               	bsf	3,7
  1949  035A  1C42               	btfss	??_main+2,0
  1950  035B  1383               	bcf	3,7
  1951  035C  0800               	movf	0,w
  1952  035D  00C3               	movwf	??_main+3
  1953  035E  0A84               	incf	4,f
  1954  035F  0800               	movf	0,w
  1955  0360  00C4               	movwf	??_main+4
  1956  0361  0843               	movf	??_main+3,w
  1957  0362  0444               	iorwf	??_main+4,w
  1958  0363  1903               	btfsc	3,2
  1959  0364  2B66               	goto	u2911
  1960  0365  2B67               	goto	u2910
  1961  0366                     u2911:	
  1962  0366  2C62               	goto	l3451
  1963  0367                     u2910:	
  1964  0367                     l3427:	
  1965                           
  1966                           ;main.c: 267:                 {;main.c: 268:                     unsigned char lux_selec
      +                          t = (*Semafori[i]).lux_select;
  1967  0367  1683               	bsf	3,5	;RP0=1, select bank3
  1968  0368  1703               	bsf	3,6	;RP1=1, select bank3
  1969  0369  0860               	movf	main@i_493^(0+384),w
  1970  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1971  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1972  036C  00C0               	movwf	??_main
  1973  036D  0740               	addwf	??_main,w
  1974  036E  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  1975  036F  0084               	movwf	4
  1976  0370  1383               	bcf	3,7	;select IRP bank1
  1977  0371  0800               	movf	0,w
  1978  0372  00C1               	movwf	??_main+1
  1979  0373  0A84               	incf	4,f
  1980  0374  0800               	movf	0,w
  1981  0375  00C2               	movwf	??_main+2
  1982  0376  0841               	movf	??_main+1,w
  1983  0377  3E0C               	addlw	12
  1984  0378  00C3               	movwf	??_main+3
  1985  0379  0842               	movf	??_main+2,w
  1986  037A  1803               	skipnc
  1987  037B  3E01               	addlw	1
  1988  037C  3E00               	addlw	0
  1989  037D  00C4               	movwf	??_main+4
  1990  037E  0843               	movf	??_main+3,w
  1991  037F  0084               	movwf	4
  1992  0380  1783               	bsf	3,7
  1993  0381  1C44               	btfss	??_main+4,0
  1994  0382  1383               	bcf	3,7
  1995  0383  0800               	movf	0,w
  1996  0384  00C5               	movwf	??_main+5
  1997  0385  0845               	movf	??_main+5,w
  1998  0386  1683               	bsf	3,5	;RP0=1, select bank3
  1999  0387  1703               	bsf	3,6	;RP1=1, select bank3
  2000  0388  00DF               	movwf	main@lux_select^(0+384)
  2001                           
  2002                           ;main.c: 269:                     if ((*Semafori[i]).times[lux_select] - time < 0)
  2003  0389  0860               	movf	main@i_493^(0+384),w
  2004  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2005  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2006  038C  00C0               	movwf	??_main
  2007  038D  0740               	addwf	??_main,w
  2008  038E  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2009  038F  0084               	movwf	4
  2010  0390  1383               	bcf	3,7	;select IRP bank1
  2011  0391  0800               	movf	0,w
  2012  0392  00C1               	movwf	??_main+1
  2013  0393  0A84               	incf	4,f
  2014  0394  0800               	movf	0,w
  2015  0395  00C2               	movwf	??_main+2
  2016  0396  1683               	bsf	3,5	;RP0=1, select bank3
  2017  0397  1703               	bsf	3,6	;RP1=1, select bank3
  2018  0398  085F               	movf	main@lux_select^(0+384),w
  2019  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2020  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2021  039B  00C3               	movwf	??_main+3
  2022  039C  0743               	addwf	??_main+3,w
  2023  039D  0741               	addwf	??_main+1,w
  2024  039E  00C4               	movwf	??_main+4
  2025  039F  0842               	movf	??_main+2,w
  2026  03A0  1803               	skipnc
  2027  03A1  3E01               	addlw	1
  2028  03A2  00C5               	movwf	??_main+5
  2029  03A3  0844               	movf	??_main+4,w
  2030  03A4  0084               	movwf	4
  2031  03A5  1783               	bsf	3,7
  2032  03A6  1C45               	btfss	??_main+5,0
  2033  03A7  1383               	bcf	3,7
  2034  03A8  0800               	movf	0,w
  2035  03A9  00C6               	movwf	??_main+6
  2036  03AA  0A84               	incf	4,f
  2037  03AB  0800               	movf	0,w
  2038  03AC  00C7               	movwf	??_main+7
  2039  03AD  1683               	bsf	3,5	;RP0=1, select bank3
  2040  03AE  1703               	bsf	3,6	;RP1=1, select bank3
  2041  03AF  0859               	movf	main@time^(0+384),w
  2042  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2043  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2044  03B2  0246               	subwf	??_main+6,w
  2045  03B3  00C8               	movwf	??_main+8
  2046  03B4  1683               	bsf	3,5	;RP0=1, select bank3
  2047  03B5  1703               	bsf	3,6	;RP1=1, select bank3
  2048  03B6  085A               	movf	(main@time+1)^(0+384),w
  2049  03B7  1C03               	skipc
  2050  03B8  0A5A               	incf	(main@time+1)^(0+384),w
  2051  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2052  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2053  03BB  0247               	subwf	??_main+7,w
  2054  03BC  00C9               	movwf	??_main+9
  2055  03BD  1FC9               	btfss	??_main+9,7
  2056  03BE  2BC0               	goto	u2921
  2057  03BF  2BC1               	goto	u2920
  2058  03C0                     u2921:	
  2059  03C0  2BDD               	goto	l3441
  2060  03C1                     u2920:	
  2061  03C1                     l3429:	
  2062                           
  2063                           ;main.c: 270:                     {;main.c: 271:                         lux_select++;
  2064  03C1  3001               	movlw	1
  2065  03C2  00C0               	movwf	??_main
  2066  03C3  0840               	movf	??_main,w
  2067  03C4  1683               	bsf	3,5	;RP0=1, select bank3
  2068  03C5  1703               	bsf	3,6	;RP1=1, select bank3
  2069  03C6  07DF               	addwf	main@lux_select^(0+384),f
  2070  03C7                     l3431:	
  2071                           
  2072                           ;main.c: 272:                         time = 1;
  2073  03C7  3001               	movlw	1
  2074  03C8  00D9               	movwf	main@time^(0+384)
  2075  03C9  3000               	movlw	0
  2076  03CA  00DA               	movwf	(main@time^(0+384)+1)
  2077  03CB                     l3433:	
  2078                           
  2079                           ;main.c: 274:                         if (lux_select >= 3)
  2080  03CB  3003               	movlw	3
  2081  03CC  025F               	subwf	main@lux_select^(0+384),w
  2082  03CD  1C03               	skipc
  2083  03CE  2BD0               	goto	u2931
  2084  03CF  2BD1               	goto	u2930
  2085  03D0                     u2931:	
  2086  03D0  2BDD               	goto	l3441
  2087  03D1                     u2930:	
  2088  03D1                     l3435:	
  2089                           
  2090                           ;main.c: 275:                         {;main.c: 276:                             lux_sel
      +                          ect = 0;
  2091  03D1  01DF               	clrf	main@lux_select^(0+384)
  2092  03D2                     l3437:	
  2093  03D2  0360               	decf	main@i_493^(0+384),w
  2094  03D3  1D03               	btfss	3,2
  2095  03D4  2BD6               	goto	u2941
  2096  03D5  2BD7               	goto	u2940
  2097  03D6                     u2941:	
  2098  03D6  2BDD               	goto	l3441
  2099  03D7                     u2940:	
  2100  03D7                     l3439:	
  2101                           
  2102                           ;main.c: 279:                             {;main.c: 280:                                
      +                           UpdateTimes(Semafori);
  2103  03D7  30DD               	movlw	(low (_Semafori| 0))& (0+255)
  2104  03D8  120A  158A  2669  120A  118A  	fcall	_UpdateTimes
  2105  03DD                     l3441:	
  2106                           
  2107                           ;main.c: 285:                     GetDigits(&centinaia, &decine, &unita, (*Semafori[i]).
      +                          times[lux_select] - time);
  2108  03DD  3063               	movlw	(low (_decine| 0))& (0+255)
  2109  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2110  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2111  03E0  00C0               	movwf	??_main
  2112  03E1  0840               	movf	??_main,w
  2113  03E2  00B4               	movwf	GetDigits@decine
  2114  03E3  3064               	movlw	(low (_unita| 0))& (0+255)
  2115  03E4  00C1               	movwf	??_main+1
  2116  03E5  0841               	movf	??_main+1,w
  2117  03E6  00B5               	movwf	GetDigits@unita
  2118  03E7  1683               	bsf	3,5	;RP0=1, select bank3
  2119  03E8  1703               	bsf	3,6	;RP1=1, select bank3
  2120  03E9  0860               	movf	main@i_493^(0+384),w
  2121  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2122  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2123  03EC  00C2               	movwf	??_main+2
  2124  03ED  0742               	addwf	??_main+2,w
  2125  03EE  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2126  03EF  0084               	movwf	4
  2127  03F0  1383               	bcf	3,7	;select IRP bank1
  2128  03F1  0800               	movf	0,w
  2129  03F2  00C3               	movwf	??_main+3
  2130  03F3  0A84               	incf	4,f
  2131  03F4  0800               	movf	0,w
  2132  03F5  00C4               	movwf	??_main+4
  2133  03F6  1683               	bsf	3,5	;RP0=1, select bank3
  2134  03F7  1703               	bsf	3,6	;RP1=1, select bank3
  2135  03F8  085F               	movf	main@lux_select^(0+384),w
  2136  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2137  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2138  03FB  00C5               	movwf	??_main+5
  2139  03FC  0745               	addwf	??_main+5,w
  2140  03FD  0743               	addwf	??_main+3,w
  2141  03FE  00C6               	movwf	??_main+6
  2142  03FF  0844               	movf	??_main+4,w
  2143  0400  1803               	skipnc
  2144  0401  3E01               	addlw	1
  2145  0402  00C7               	movwf	??_main+7
  2146  0403  0846               	movf	??_main+6,w
  2147  0404  0084               	movwf	4
  2148  0405  1783               	bsf	3,7
  2149  0406  1C47               	btfss	??_main+7,0
  2150  0407  1383               	bcf	3,7
  2151  0408  0800               	movf	0,w
  2152  0409  00C8               	movwf	??_main+8
  2153  040A  0A84               	incf	4,f
  2154  040B  0800               	movf	0,w
  2155  040C  00C9               	movwf	??_main+9
  2156  040D  1683               	bsf	3,5	;RP0=1, select bank3
  2157  040E  1703               	bsf	3,6	;RP1=1, select bank3
  2158  040F  0859               	movf	main@time^(0+384),w
  2159  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0412  0248               	subwf	??_main+8,w
  2162  0413  00B6               	movwf	GetDigits@Time
  2163  0414  1683               	bsf	3,5	;RP0=1, select bank3
  2164  0415  1703               	bsf	3,6	;RP1=1, select bank3
  2165  0416  085A               	movf	(main@time+1)^(0+384),w
  2166  0417  1C03               	skipc
  2167  0418  0A5A               	incf	(main@time+1)^(0+384),w
  2168  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2169  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2170  041B  0249               	subwf	??_main+9,w
  2171  041C  00B7               	movwf	GetDigits@Time+1
  2172  041D  3062               	movlw	(low (_centinaia| 0))& (0+255)
  2173  041E  120A  118A  26A2  120A  118A  	fcall	_GetDigits
  2174  0423                     l3443:	
  2175                           
  2176                           ;main.c: 286:                     ShowDigitsOnDisplay();
  2177  0423  120A  118A  273E  120A  118A  	fcall	_ShowDigitsOnDisplay
  2178  0428                     l3445:	
  2179                           
  2180                           ;main.c: 287:                     luciSemaforo(i, lux_select);
  2181  0428  1683               	bsf	3,5	;RP0=1, select bank3
  2182  0429  1703               	bsf	3,6	;RP1=1, select bank3
  2183  042A  085F               	movf	main@lux_select^(0+384),w
  2184  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2185  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2186  042D  00C0               	movwf	??_main
  2187  042E  0840               	movf	??_main,w
  2188  042F  00A4               	movwf	luciSemaforo@lux
  2189  0430  1683               	bsf	3,5	;RP0=1, select bank3
  2190  0431  1703               	bsf	3,6	;RP1=1, select bank3
  2191  0432  0860               	movf	main@i_493^(0+384),w
  2192  0433  120A  158A  2563  120A  118A  	fcall	_luciSemaforo
  2193  0438                     l3447:	
  2194                           
  2195                           ;main.c: 289:                     (*Semafori[i]).lux_select = lux_select;
  2196  0438  1683               	bsf	3,5	;RP0=1, select bank3
  2197  0439  1703               	bsf	3,6	;RP1=1, select bank3
  2198  043A  085F               	movf	main@lux_select^(0+384),w
  2199  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2200  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2201  043D  00C0               	movwf	??_main
  2202  043E  1683               	bsf	3,5	;RP0=1, select bank3
  2203  043F  1703               	bsf	3,6	;RP1=1, select bank3
  2204  0440  0860               	movf	main@i_493^(0+384),w
  2205  0441  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0442  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0443  00C1               	movwf	??_main+1
  2208  0444  0741               	addwf	??_main+1,w
  2209  0445  3EDD               	addlw	(low (_Semafori| 0))& (0+255)
  2210  0446  0084               	movwf	4
  2211  0447  1383               	bcf	3,7	;select IRP bank1
  2212  0448  0800               	movf	0,w
  2213  0449  00C2               	movwf	??_main+2
  2214  044A  0A84               	incf	4,f
  2215  044B  0800               	movf	0,w
  2216  044C  00C3               	movwf	??_main+3
  2217  044D  0842               	movf	??_main+2,w
  2218  044E  3E0C               	addlw	12
  2219  044F  00C4               	movwf	??_main+4
  2220  0450  0843               	movf	??_main+3,w
  2221  0451  1803               	skipnc
  2222  0452  3E01               	addlw	1
  2223  0453  3E00               	addlw	0
  2224  0454  00C5               	movwf	??_main+5
  2225  0455  0844               	movf	??_main+4,w
  2226  0456  0084               	movwf	4
  2227  0457  1783               	bsf	3,7
  2228  0458  1C45               	btfss	??_main+5,0
  2229  0459  1383               	bcf	3,7
  2230  045A  0840               	movf	??_main,w
  2231  045B  0080               	movwf	0
  2232  045C                     l3449:	
  2233                           
  2234                           ;main.c: 290:                     i++;
  2235  045C  3001               	movlw	1
  2236  045D  00C0               	movwf	??_main
  2237  045E  0840               	movf	??_main,w
  2238  045F  1683               	bsf	3,5	;RP0=1, select bank3
  2239  0460  1703               	bsf	3,6	;RP1=1, select bank3
  2240  0461  07E0               	addwf	main@i_493^(0+384),f
  2241  0462                     l3451:	
  2242                           
  2243                           ;main.c: 293:                 i++;
  2244  0462  3001               	movlw	1
  2245  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0465  00C0               	movwf	??_main
  2248  0466  0840               	movf	??_main,w
  2249  0467  1683               	bsf	3,5	;RP0=1, select bank3
  2250  0468  1703               	bsf	3,6	;RP1=1, select bank3
  2251  0469  07E0               	addwf	main@i_493^(0+384),f
  2252  046A                     l3453:	
  2253  046A  3002               	movlw	2
  2254  046B  0260               	subwf	main@i_493^(0+384),w
  2255  046C  1C03               	skipc
  2256  046D  2C6F               	goto	u2951
  2257  046E  2C70               	goto	u2950
  2258  046F                     u2951:	
  2259  046F  2B4A               	goto	l3425
  2260  0470                     u2950:	
  2261  0470                     l264:	
  2262                           ;main.c: 295:         }
  2263                           
  2264                           
  2265                           ;main.c: 301:         if (secondPassed.Bit && cycled.Bit)
  2266  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0471  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0472  1C53               	btfss	_secondPassed,0
  2269  0473  2C75               	goto	u2961
  2270  0474  2C76               	goto	u2960
  2271  0475                     u2961:	
  2272  0475  2C7C               	goto	l272
  2273  0476                     u2960:	
  2274  0476                     l3455:	
  2275  0476  1C52               	btfss	_cycled,0
  2276  0477  2C79               	goto	u2971
  2277  0478  2C7A               	goto	u2970
  2278  0479                     u2971:	
  2279  0479  2C7C               	goto	l272
  2280  047A                     u2970:	
  2281  047A                     l3457:	
  2282                           
  2283                           ;main.c: 302:         {;main.c: 303:             secondPassed.Bit = 0;
  2284  047A  1053               	bcf	_secondPassed,0
  2285                           
  2286                           ;main.c: 304:             cycled.Bit = 0;
  2287  047B  1052               	bcf	_cycled,0
  2288  047C                     l272:	
  2289                           ;main.c: 305:         }
  2290                           
  2291                           
  2292                           ;main.c: 306:         if (secondPassed.Bit && !cycled.Bit)
  2293  047C  1C53               	btfss	_secondPassed,0
  2294  047D  2C7F               	goto	u2981
  2295  047E  2C80               	goto	u2980
  2296  047F                     u2981:	
  2297  047F  2882               	goto	l3323
  2298  0480                     u2980:	
  2299  0480                     l3459:	
  2300  0480  1852               	btfsc	_cycled,0
  2301  0481  2C83               	goto	u2991
  2302  0482  2C84               	goto	u2990
  2303  0483                     u2991:	
  2304  0483  2882               	goto	l3323
  2305  0484                     u2990:	
  2306  0484                     l3461:	
  2307                           
  2308                           ;main.c: 307:         {;main.c: 308:             cycled.Bit = 1;
  2309  0484  1452               	bsf	_cycled,0
  2310  0485  2882               	goto	l3323
  2311  0486  120A  118A  2810   	ljmp	start
  2312  0489                     __end_of_main:	
  2313                           
  2314                           	psect	text1
  2315  07CE                     __ptext1:	
  2316 ;; *************** function _sendByte *****************
  2317 ;; Defined at:
  2318 ;;		line 369 in file "main.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  byte0           1    wreg     unsigned char 
  2321 ;;  byte1           1   24[BANK0 ] unsigned char 
  2322 ;;  valore          1   25[BANK0 ] unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  byte0           1   29[BANK0 ] unsigned char 
  2325 ;;  i               1   31[BANK0 ] unsigned char 
  2326 ;;  txByte          1   30[BANK0 ] PTR unsigned char 
  2327 ;;		 -> BuildByte@txByte(5), 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       2       0       0       0
  2338 ;;      Locals:         0       3       0       0       0
  2339 ;;      Temps:          0       3       0       0       0
  2340 ;;      Totals:         0       8       0       0       0
  2341 ;;Total ram usage:        8 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    4
  2344 ;; This function calls:
  2345 ;;		_BuildByte
  2346 ;;		_UART_TxChar
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _sendByte
  2354  07CE                     _sendByte:	
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in _sendByte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2358                           ;sendByte@byte0 stored from wreg
  2359  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2360  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2361  07D0  00BD               	movwf	sendByte@byte0
  2362  07D1                     l3199:	
  2363                           
  2364                           ;main.c: 369: void sendByte(char byte0, char byte1, char valore);main.c: 370: {;main.c: 
      +                          371:     char *txByte;;main.c: 372:     txByte = BuildByte(byte0, byte1, valore);
  2365  07D1  0838               	movf	sendByte@byte1,w
  2366  07D2  00BA               	movwf	??_sendByte
  2367  07D3  083A               	movf	??_sendByte,w
  2368  07D4  00A4               	movwf	BuildByte@byte1
  2369  07D5  0839               	movf	sendByte@valore,w
  2370  07D6  00BB               	movwf	??_sendByte+1
  2371  07D7  083B               	movf	??_sendByte+1,w
  2372  07D8  00A5               	movwf	BuildByte@valore
  2373  07D9  083D               	movf	sendByte@byte0,w
  2374  07DA  120A  118A  2489  120A  118A  	fcall	_BuildByte
  2375  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  2376  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  2377  07E1  00BC               	movwf	??_sendByte+2
  2378  07E2  083C               	movf	??_sendByte+2,w
  2379  07E3  00BE               	movwf	sendByte@txByte
  2380  07E4                     l3201:	
  2381                           
  2382                           ;main.c: 374:     for (unsigned char i = 0; i < 5; i++)
  2383  07E4  01BF               	clrf	sendByte@i
  2384  07E5                     l3207:	
  2385                           
  2386                           ;main.c: 375:     {;main.c: 376:         UART_TxChar(*(txByte++));
  2387  07E5  083E               	movf	sendByte@txByte,w
  2388  07E6  0084               	movwf	4
  2389  07E7  1383               	bcf	3,7	;select IRP bank0
  2390  07E8  0800               	movf	0,w
  2391  07E9  120A  158A  23A8  120A  118A  	fcall	_UART_TxChar
  2392  07EE                     l3209:	
  2393  07EE  3001               	movlw	1
  2394  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  2395  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  2396  07F1  00BA               	movwf	??_sendByte
  2397  07F2  083A               	movf	??_sendByte,w
  2398  07F3  07BE               	addwf	sendByte@txByte,f
  2399  07F4                     l3211:	
  2400                           
  2401                           ;main.c: 377:     }
  2402  07F4  3001               	movlw	1
  2403  07F5  00BA               	movwf	??_sendByte
  2404  07F6  083A               	movf	??_sendByte,w
  2405  07F7  07BF               	addwf	sendByte@i,f
  2406  07F8                     l3213:	
  2407  07F8  3005               	movlw	5
  2408  07F9  023F               	subwf	sendByte@i,w
  2409  07FA  1C03               	skipc
  2410  07FB  2FFD               	goto	u2711
  2411  07FC  2FFE               	goto	u2710
  2412  07FD                     u2711:	
  2413  07FD  2FE5               	goto	l3207
  2414  07FE                     u2710:	
  2415  07FE                     l311:	
  2416  07FE  0008               	return
  2417  07FF                     __end_of_sendByte:	
  2418                           
  2419                           	psect	text2
  2420  0BA8                     __ptext2:	
  2421 ;; *************** function _UART_TxChar *****************
  2422 ;; Defined at:
  2423 ;;		line 346 in file "main.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  ch              1    wreg     unsigned char 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  ch              1    4[BANK0 ] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         0       0       0       0       0
  2438 ;;      Locals:         0       1       0       0       0
  2439 ;;      Temps:          0       0       0       0       0
  2440 ;;      Totals:         0       1       0       0       0
  2441 ;;Total ram usage:        1 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_sendByte
  2448 ;;		_UART_Write_Text
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           
  2453                           ;psect for function _UART_TxChar
  2454  0BA8                     _UART_TxChar:	
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _UART_TxChar: [wreg]
  2458                           ;UART_TxChar@ch stored from wreg
  2459  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0BAA  00A4               	movwf	UART_TxChar@ch
  2462  0BAB                     l2929:	
  2463  0BAB                     l291:	
  2464                           ;main.c: 346: void UART_TxChar(char ch);main.c: 347: {;main.c: 348:     while (!TXIF);
  2465                           
  2466  0BAB  1E0C               	btfss	12,4	;volatile
  2467  0BAC  2BAE               	goto	u2261
  2468  0BAD  2BAF               	goto	u2260
  2469  0BAE                     u2261:	
  2470  0BAE  2BAB               	goto	l291
  2471  0BAF                     u2260:	
  2472  0BAF                     l293:	
  2473                           
  2474                           ;main.c: 349:     TXIF = 0;
  2475  0BAF  120C               	bcf	12,4	;volatile
  2476  0BB0                     l2931:	
  2477                           
  2478                           ;main.c: 350:     TXREG = ch;
  2479  0BB0  0824               	movf	UART_TxChar@ch,w
  2480  0BB1  0099               	movwf	25	;volatile
  2481  0BB2                     l294:	
  2482  0BB2  0008               	return
  2483  0BB3                     __end_of_UART_TxChar:	
  2484                           
  2485                           	psect	text3
  2486  0489                     __ptext3:	
  2487 ;; *************** function _BuildByte *****************
  2488 ;; Defined at:
  2489 ;;		line 2 in file "./CustomLib/Serial.h"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  byte0           1    wreg     unsigned char 
  2492 ;;  byte1           1    4[BANK0 ] unsigned char 
  2493 ;;  valore          1    5[BANK0 ] unsigned char 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  byte0           1    8[BANK0 ] unsigned char 
  2496 ;;  y               2   18[BANK0 ] int 
  2497 ;;  y               2   16[BANK0 ] int 
  2498 ;;  i               2   22[BANK0 ] int 
  2499 ;;  i               2   20[BANK0 ] int 
  2500 ;;  txByte          5    9[BANK0 ] unsigned char [5]
  2501 ;;  sommaColumn     1   15[BANK0 ] unsigned char 
  2502 ;;  sommaRow        1   14[BANK0 ] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      PTR unsigned char 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         0       2       0       0       0
  2513 ;;      Locals:         0      16       0       0       0
  2514 ;;      Temps:          0       2       0       0       0
  2515 ;;      Totals:         0      20       0       0       0
  2516 ;;Total ram usage:       20 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    3
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_sendByte
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _BuildByte
  2528  0489                     _BuildByte:	
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _BuildByte: [wreg-fsr0h+status,2+status,0+btemp+1]
  2532                           ;BuildByte@byte0 stored from wreg
  2533  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2534  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2535  048B  00A8               	movwf	BuildByte@byte0
  2536  048C                     l2847:	
  2537                           
  2538                           ;./CustomLib/Serial.h: 2: char *BuildByte(char byte0, char byte1, char valore);./CustomL
      +                          ib/Serial.h: 3: {;./CustomLib/Serial.h: 4:     char txByte[5];;./CustomLib/Serial.h: 6: 
      +                              txByte[0] = byte0 & 0x7F;
  2539  048C  0828               	movf	BuildByte@byte0,w
  2540  048D  397F               	andlw	127
  2541  048E  00A6               	movwf	??_BuildByte
  2542  048F  0826               	movf	??_BuildByte,w
  2543  0490  00A9               	movwf	BuildByte@txByte
  2544                           
  2545                           ;./CustomLib/Serial.h: 7:     txByte[1] = byte1 & 0x7F;
  2546  0491  0824               	movf	BuildByte@byte1,w
  2547  0492  397F               	andlw	127
  2548  0493  00A6               	movwf	??_BuildByte
  2549  0494  0826               	movf	??_BuildByte,w
  2550  0495  00AA               	movwf	BuildByte@txByte+1
  2551                           
  2552                           ;./CustomLib/Serial.h: 8:     txByte[2] = valore & 0x7F;
  2553  0496  0825               	movf	BuildByte@valore,w
  2554  0497  397F               	andlw	127
  2555  0498  00A6               	movwf	??_BuildByte
  2556  0499  0826               	movf	??_BuildByte,w
  2557  049A  00AB               	movwf	BuildByte@txByte+2
  2558  049B                     l2849:	
  2559                           
  2560                           ;./CustomLib/Serial.h: 9:     txByte[3] = (valore >> 7) & 0x7F;
  2561  049B  0825               	movf	BuildByte@valore,w
  2562  049C  00A6               	movwf	??_BuildByte
  2563  049D  3007               	movlw	7
  2564  049E                     u2155:	
  2565  049E  1003               	clrc
  2566  049F  0CA6               	rrf	??_BuildByte,f
  2567  04A0  3EFF               	addlw	-1
  2568  04A1  1D03               	skipz
  2569  04A2  2C9E               	goto	u2155
  2570  04A3  0826               	movf	??_BuildByte,w
  2571  04A4  397F               	andlw	127
  2572  04A5  00A7               	movwf	??_BuildByte+1
  2573  04A6  0827               	movf	??_BuildByte+1,w
  2574  04A7  00AC               	movwf	BuildByte@txByte+3
  2575  04A8                     l2851:	
  2576                           
  2577                           ;./CustomLib/Serial.h: 10:     char sommaRow = 0;
  2578  04A8  01AE               	clrf	BuildByte@sommaRow
  2579  04A9                     l2853:	
  2580                           
  2581                           ;./CustomLib/Serial.h: 11:     char sommaColumn = 0;
  2582  04A9  01AF               	clrf	BuildByte@sommaColumn
  2583  04AA                     l2855:	
  2584                           
  2585                           ;./CustomLib/Serial.h: 13:     for (int i = 0; i < 4; i++)
  2586  04AA  01B4               	clrf	BuildByte@i
  2587  04AB  01B5               	clrf	BuildByte@i+1
  2588  04AC                     l2861:	
  2589                           
  2590                           ;./CustomLib/Serial.h: 14:     {;./CustomLib/Serial.h: 15:         for (int y = 0; y < 8
      +                          ; y++)
  2591  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2592  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2593  04AE  01B0               	clrf	BuildByte@y
  2594  04AF  01B1               	clrf	BuildByte@y+1
  2595  04B0                     l2867:	
  2596                           
  2597                           ;./CustomLib/Serial.h: 16:         {;./CustomLib/Serial.h: 17:             sommaRow += (
      +                          txByte[i] >> y) & 1;
  2598  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2599  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2600  04B2  0834               	movf	BuildByte@i,w
  2601  04B3  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2602  04B4  0084               	movwf	4
  2603  04B5  1383               	bcf	3,7	;select IRP bank0
  2604  04B6  0800               	movf	0,w
  2605  04B7  00A6               	movwf	??_BuildByte
  2606  04B8  0A30               	incf	BuildByte@y,w
  2607  04B9  2CBC               	goto	u2164
  2608  04BA                     u2165:	
  2609  04BA  1003               	clrc
  2610  04BB  0CA6               	rrf	??_BuildByte,f
  2611  04BC                     u2164:	
  2612  04BC  3EFF               	addlw	-1
  2613  04BD  1D03               	skipz
  2614  04BE  2CBA               	goto	u2165
  2615  04BF  0826               	movf	??_BuildByte,w
  2616  04C0  3901               	andlw	1
  2617  04C1  00A7               	movwf	??_BuildByte+1
  2618  04C2  0827               	movf	??_BuildByte+1,w
  2619  04C3  07AE               	addwf	BuildByte@sommaRow,f
  2620  04C4                     l2869:	
  2621                           
  2622                           ;./CustomLib/Serial.h: 18:         }
  2623  04C4  3001               	movlw	1
  2624  04C5  07B0               	addwf	BuildByte@y,f
  2625  04C6  1803               	skipnc
  2626  04C7  0AB1               	incf	BuildByte@y+1,f
  2627  04C8  3000               	movlw	0
  2628  04C9  07B1               	addwf	BuildByte@y+1,f
  2629  04CA                     l2871:	
  2630  04CA  0831               	movf	BuildByte@y+1,w
  2631  04CB  3A80               	xorlw	128
  2632  04CC  00FF               	movwf	btemp+1
  2633  04CD  3080               	movlw	128
  2634  04CE  027F               	subwf	btemp+1,w
  2635  04CF  1D03               	skipz
  2636  04D0  2CD3               	goto	u2175
  2637  04D1  3008               	movlw	8
  2638  04D2  0230               	subwf	BuildByte@y,w
  2639  04D3                     u2175:	
  2640  04D3  1C03               	skipc
  2641  04D4  2CD6               	goto	u2171
  2642  04D5  2CD7               	goto	u2170
  2643  04D6                     u2171:	
  2644  04D6  2CB0               	goto	l2867
  2645  04D7                     u2170:	
  2646  04D7                     l123:	
  2647                           
  2648                           ;./CustomLib/Serial.h: 19:         if (sommaRow % 2 == 1)
  2649  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2650  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2651  04D9  1C2E               	btfss	BuildByte@sommaRow,0
  2652  04DA  2CDC               	goto	u2181
  2653  04DB  2CDD               	goto	u2180
  2654  04DC                     u2181:	
  2655  04DC  2CE5               	goto	l2875
  2656  04DD                     u2180:	
  2657  04DD                     l2873:	
  2658                           
  2659                           ;./CustomLib/Serial.h: 20:         {;./CustomLib/Serial.h: 21:             txByte[i] += 
      +                          0x01 << 7;
  2660  04DD  3080               	movlw	128
  2661  04DE  00A6               	movwf	??_BuildByte
  2662  04DF  0834               	movf	BuildByte@i,w
  2663  04E0  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2664  04E1  0084               	movwf	4
  2665  04E2  0826               	movf	??_BuildByte,w
  2666  04E3  1383               	bcf	3,7	;select IRP bank0
  2667  04E4  0780               	addwf	0,f
  2668  04E5                     l2875:	
  2669                           
  2670                           ;./CustomLib/Serial.h: 22:             sommaRow = 0;
  2671  04E5  01AE               	clrf	BuildByte@sommaRow
  2672  04E6                     l2879:	
  2673                           ;./CustomLib/Serial.h: 23:         }
  2674                           
  2675                           
  2676                           ;./CustomLib/Serial.h: 28:     }
  2677  04E6  3001               	movlw	1
  2678  04E7  07B4               	addwf	BuildByte@i,f
  2679  04E8  1803               	skipnc
  2680  04E9  0AB5               	incf	BuildByte@i+1,f
  2681  04EA  3000               	movlw	0
  2682  04EB  07B5               	addwf	BuildByte@i+1,f
  2683  04EC                     l2881:	
  2684  04EC  0835               	movf	BuildByte@i+1,w
  2685  04ED  3A80               	xorlw	128
  2686  04EE  00FF               	movwf	btemp+1
  2687  04EF  3080               	movlw	128
  2688  04F0  027F               	subwf	btemp+1,w
  2689  04F1  1D03               	skipz
  2690  04F2  2CF5               	goto	u2195
  2691  04F3  3004               	movlw	4
  2692  04F4  0234               	subwf	BuildByte@i,w
  2693  04F5                     u2195:	
  2694  04F5  1C03               	skipc
  2695  04F6  2CF8               	goto	u2191
  2696  04F7  2CF9               	goto	u2190
  2697  04F8                     u2191:	
  2698  04F8  2CAC               	goto	l2861
  2699  04F9                     u2190:	
  2700  04F9                     l2883:	
  2701                           
  2702                           ;./CustomLib/Serial.h: 31:     for (int i = 0; i < 8; i++)
  2703  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2704  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2705  04FB  01B6               	clrf	BuildByte@i_355
  2706  04FC  01B7               	clrf	BuildByte@i_355+1
  2707  04FD                     l2889:	
  2708                           
  2709                           ;./CustomLib/Serial.h: 32:     {;./CustomLib/Serial.h: 33:         for (int y = 0; y < 4
      +                          ; y++)
  2710  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2711  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2712  04FF  01B2               	clrf	BuildByte@y_356
  2713  0500  01B3               	clrf	BuildByte@y_356+1
  2714  0501                     l2895:	
  2715                           
  2716                           ;./CustomLib/Serial.h: 35:         {;./CustomLib/Serial.h: 36:             sommaColumn +
      +                          = (txByte[y] >> i) & 1;
  2717  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0502  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0503  0832               	movf	BuildByte@y_356,w
  2720  0504  3E29               	addlw	(low (BuildByte@txByte| 0))& (0+255)
  2721  0505  0084               	movwf	4
  2722  0506  1383               	bcf	3,7	;select IRP bank0
  2723  0507  0800               	movf	0,w
  2724  0508  00A6               	movwf	??_BuildByte
  2725  0509  0A36               	incf	BuildByte@i_355,w
  2726  050A  2D0D               	goto	u2204
  2727  050B                     u2205:	
  2728  050B  1003               	clrc
  2729  050C  0CA6               	rrf	??_BuildByte,f
  2730  050D                     u2204:	
  2731  050D  3EFF               	addlw	-1
  2732  050E  1D03               	skipz
  2733  050F  2D0B               	goto	u2205
  2734  0510  0826               	movf	??_BuildByte,w
  2735  0511  3901               	andlw	1
  2736  0512  00A7               	movwf	??_BuildByte+1
  2737  0513  0827               	movf	??_BuildByte+1,w
  2738  0514  07AF               	addwf	BuildByte@sommaColumn,f
  2739  0515                     l2897:	
  2740                           
  2741                           ;./CustomLib/Serial.h: 37:         }
  2742  0515  3001               	movlw	1
  2743  0516  07B2               	addwf	BuildByte@y_356,f
  2744  0517  1803               	skipnc
  2745  0518  0AB3               	incf	BuildByte@y_356+1,f
  2746  0519  3000               	movlw	0
  2747  051A  07B3               	addwf	BuildByte@y_356+1,f
  2748  051B                     l2899:	
  2749  051B  0833               	movf	BuildByte@y_356+1,w
  2750  051C  3A80               	xorlw	128
  2751  051D  00FF               	movwf	btemp+1
  2752  051E  3080               	movlw	128
  2753  051F  027F               	subwf	btemp+1,w
  2754  0520  1D03               	skipz
  2755  0521  2D24               	goto	u2215
  2756  0522  3004               	movlw	4
  2757  0523  0232               	subwf	BuildByte@y_356,w
  2758  0524                     u2215:	
  2759  0524  1C03               	skipc
  2760  0525  2D27               	goto	u2211
  2761  0526  2D28               	goto	u2210
  2762  0527                     u2211:	
  2763  0527  2D01               	goto	l2895
  2764  0528                     u2210:	
  2765  0528                     l129:	
  2766                           
  2767                           ;./CustomLib/Serial.h: 38:         if (sommaColumn % 2 == 1)
  2768  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2770  052A  1C2F               	btfss	BuildByte@sommaColumn,0
  2771  052B  2D2D               	goto	u2221
  2772  052C  2D2E               	goto	u2220
  2773  052D                     u2221:	
  2774  052D  2D3B               	goto	l2903
  2775  052E                     u2220:	
  2776  052E                     l2901:	
  2777                           
  2778                           ;./CustomLib/Serial.h: 39:         {;./CustomLib/Serial.h: 40:             txByte[4] += 
      +                          0x01 << i;
  2779  052E  3001               	movlw	1
  2780  052F  00A6               	movwf	??_BuildByte
  2781  0530  0A36               	incf	BuildByte@i_355,w
  2782  0531  2D34               	goto	u2234
  2783  0532                     u2235:	
  2784  0532  1003               	clrc
  2785  0533  0DA6               	rlf	??_BuildByte,f
  2786  0534                     u2234:	
  2787  0534  3EFF               	addlw	-1
  2788  0535  1D03               	skipz
  2789  0536  2D32               	goto	u2235
  2790  0537  0826               	movf	??_BuildByte,w
  2791  0538  00A7               	movwf	??_BuildByte+1
  2792  0539  0827               	movf	??_BuildByte+1,w
  2793  053A  07AD               	addwf	BuildByte@txByte+4,f
  2794  053B                     l2903:	
  2795                           
  2796                           ;./CustomLib/Serial.h: 41:             sommaColumn = 0;
  2797  053B  01AF               	clrf	BuildByte@sommaColumn
  2798  053C                     l2907:	
  2799                           ;./CustomLib/Serial.h: 42:         }
  2800                           
  2801                           
  2802                           ;./CustomLib/Serial.h: 47:     }
  2803  053C  3001               	movlw	1
  2804  053D  07B6               	addwf	BuildByte@i_355,f
  2805  053E  1803               	skipnc
  2806  053F  0AB7               	incf	BuildByte@i_355+1,f
  2807  0540  3000               	movlw	0
  2808  0541  07B7               	addwf	BuildByte@i_355+1,f
  2809  0542                     l2909:	
  2810  0542  0837               	movf	BuildByte@i_355+1,w
  2811  0543  3A80               	xorlw	128
  2812  0544  00FF               	movwf	btemp+1
  2813  0545  3080               	movlw	128
  2814  0546  027F               	subwf	btemp+1,w
  2815  0547  1D03               	skipz
  2816  0548  2D4B               	goto	u2245
  2817  0549  3008               	movlw	8
  2818  054A  0236               	subwf	BuildByte@i_355,w
  2819  054B                     u2245:	
  2820  054B  1C03               	skipc
  2821  054C  2D4E               	goto	u2241
  2822  054D  2D4F               	goto	u2240
  2823  054E                     u2241:	
  2824  054E  2CFD               	goto	l2889
  2825  054F                     u2240:	
  2826  054F                     l2911:	
  2827                           
  2828                           ;./CustomLib/Serial.h: 49:     return txByte;
  2829  054F  3029               	movlw	(low (BuildByte@txByte| 0))& (0+255)
  2830  0550                     l132:	
  2831  0550  0008               	return
  2832  0551                     __end_of_BuildByte:	
  2833                           
  2834                           	psect	text4
  2835  0C62                     __ptext4:	
  2836 ;; *************** function _map *****************
  2837 ;; Defined at:
  2838 ;;		line 1 in file "./CustomLib/Conversions.h"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  x               2   20[BANK0 ] int 
  2841 ;;  in_min          2   22[BANK0 ] int 
  2842 ;;  in_max          2   24[BANK0 ] int 
  2843 ;;  out_min         2   26[BANK0 ] int 
  2844 ;;  out_max         2   28[BANK0 ] int 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  2   20[BANK0 ] int 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0      10       0       0       0
  2857 ;;      Locals:         0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0
  2859 ;;      Totals:         0      10       0       0       0
  2860 ;;Total ram usage:       10 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    4
  2863 ;; This function calls:
  2864 ;;		___awdiv
  2865 ;;		___wmul
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _map
  2873  0C62                     _map:	
  2874  0C62                     l3087:	
  2875                           ;incstack = 0
  2876                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2877                           
  2878                           
  2879                           ;./CustomLib/Conversions.h: 1: int map(int x, int in_min, int in_max, int out_min, int o
      +                          ut_max);./CustomLib/Conversions.h: 2: {;./CustomLib/Conversions.h: 3:     return (x - in
      +                          _min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2880  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  2882  0C64  0836               	movf	map@in_min,w
  2883  0C65  0238               	subwf	map@in_max,w
  2884  0C66  00AB               	movwf	___awdiv@divisor
  2885  0C67  0837               	movf	map@in_min+1,w
  2886  0C68  1C03               	skipc
  2887  0C69  0A37               	incf	map@in_min+1,w
  2888  0C6A  0239               	subwf	map@in_max+1,w
  2889  0C6B  00AC               	movwf	___awdiv@divisor+1
  2890  0C6C  0836               	movf	map@in_min,w
  2891  0C6D  0234               	subwf	map@x,w
  2892  0C6E  00A4               	movwf	___wmul@multiplier
  2893  0C6F  0837               	movf	map@in_min+1,w
  2894  0C70  1C03               	skipc
  2895  0C71  0A37               	incf	map@in_min+1,w
  2896  0C72  0235               	subwf	map@x+1,w
  2897  0C73  00A5               	movwf	___wmul@multiplier+1
  2898  0C74  083A               	movf	map@out_min,w
  2899  0C75  023C               	subwf	map@out_max,w
  2900  0C76  00A6               	movwf	___wmul@multiplicand
  2901  0C77  083B               	movf	map@out_min+1,w
  2902  0C78  1C03               	skipc
  2903  0C79  0A3B               	incf	map@out_min+1,w
  2904  0C7A  023D               	subwf	map@out_max+1,w
  2905  0C7B  00A7               	movwf	___wmul@multiplicand+1
  2906  0C7C  120A  158A  243B  120A  158A  	fcall	___wmul
  2907  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0C83  0825               	movf	?___wmul+1,w
  2910  0C84  00AE               	movwf	___awdiv@dividend+1
  2911  0C85  0824               	movf	?___wmul,w
  2912  0C86  00AD               	movwf	___awdiv@dividend
  2913  0C87  120A  158A  2729  120A  158A  	fcall	___awdiv
  2914  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0C8E  083A               	movf	map@out_min,w
  2917  0C8F  072B               	addwf	?___awdiv,w
  2918  0C90  00B4               	movwf	?_map
  2919  0C91  083B               	movf	map@out_min+1,w
  2920  0C92  1803               	skipnc
  2921  0C93  0A3B               	incf	map@out_min+1,w
  2922  0C94  072C               	addwf	?___awdiv+1,w
  2923  0C95  00B5               	movwf	?_map+1
  2924  0C96                     l81:	
  2925  0C96  0008               	return
  2926  0C97                     __end_of_map:	
  2927                           
  2928                           	psect	text5
  2929  0C3B                     __ptext5:	
  2930 ;; *************** function ___wmul *****************
  2931 ;; Defined at:
  2932 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  multiplier      2    4[BANK0 ] unsigned int 
  2935 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  product         2    8[BANK0 ] unsigned int 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  2    4[BANK0 ] unsigned int 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         0       4       0       0       0
  2948 ;;      Locals:         0       2       0       0       0
  2949 ;;      Temps:          0       0       0       0       0
  2950 ;;      Totals:         0       6       0       0       0
  2951 ;;Total ram usage:        6 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    3
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_map
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function ___wmul
  2963  0C3B                     ___wmul:	
  2964  0C3B                     l2937:	
  2965                           ;incstack = 0
  2966                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2967                           
  2968  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0C3D  01A8               	clrf	___wmul@product
  2971  0C3E  01A9               	clrf	___wmul@product+1
  2972  0C3F                     l2939:	
  2973  0C3F  1C24               	btfss	___wmul@multiplier,0
  2974  0C40  2C42               	goto	u2271
  2975  0C41  2C43               	goto	u2270
  2976  0C42                     u2271:	
  2977  0C42  2C49               	goto	l447
  2978  0C43                     u2270:	
  2979  0C43                     l2941:	
  2980  0C43  0826               	movf	___wmul@multiplicand,w
  2981  0C44  07A8               	addwf	___wmul@product,f
  2982  0C45  1803               	skipnc
  2983  0C46  0AA9               	incf	___wmul@product+1,f
  2984  0C47  0827               	movf	___wmul@multiplicand+1,w
  2985  0C48  07A9               	addwf	___wmul@product+1,f
  2986  0C49                     l447:	
  2987  0C49  3001               	movlw	1
  2988  0C4A                     u2285:	
  2989  0C4A  1003               	clrc
  2990  0C4B  0DA6               	rlf	___wmul@multiplicand,f
  2991  0C4C  0DA7               	rlf	___wmul@multiplicand+1,f
  2992  0C4D  3EFF               	addlw	-1
  2993  0C4E  1D03               	skipz
  2994  0C4F  2C4A               	goto	u2285
  2995  0C50                     l2943:	
  2996  0C50  3001               	movlw	1
  2997  0C51                     u2295:	
  2998  0C51  1003               	clrc
  2999  0C52  0CA5               	rrf	___wmul@multiplier+1,f
  3000  0C53  0CA4               	rrf	___wmul@multiplier,f
  3001  0C54  3EFF               	addlw	-1
  3002  0C55  1D03               	skipz
  3003  0C56  2C51               	goto	u2295
  3004  0C57                     l2945:	
  3005  0C57  0824               	movf	___wmul@multiplier,w
  3006  0C58  0425               	iorwf	___wmul@multiplier+1,w
  3007  0C59  1D03               	btfss	3,2
  3008  0C5A  2C5C               	goto	u2301
  3009  0C5B  2C5D               	goto	u2300
  3010  0C5C                     u2301:	
  3011  0C5C  2C3F               	goto	l2939
  3012  0C5D                     u2300:	
  3013  0C5D                     l2947:	
  3014  0C5D  0829               	movf	___wmul@product+1,w
  3015  0C5E  00A5               	movwf	?___wmul+1
  3016  0C5F  0828               	movf	___wmul@product,w
  3017  0C60  00A4               	movwf	?___wmul
  3018  0C61                     l449:	
  3019  0C61  0008               	return
  3020  0C62                     __end_of___wmul:	
  3021                           
  3022                           	psect	text6
  3023  0D63                     __ptext6:	
  3024 ;; *************** function _luciSemaforo *****************
  3025 ;; Defined at:
  3026 ;;		line 409 in file "main.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  index           1    wreg     unsigned char 
  3029 ;;  lux             1    4[BANK0 ] unsigned char 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  index           1    7[BANK0 ] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         0       1       0       0       0
  3042 ;;      Locals:         0       1       0       0       0
  3043 ;;      Temps:          0       2       0       0       0
  3044 ;;      Totals:         0       4       0       0       0
  3045 ;;Total ram usage:        4 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    3
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_main
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           
  3056                           ;psect for function _luciSemaforo
  3057  0D63                     _luciSemaforo:	
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _luciSemaforo: [wreg-fsr0h+status,2+status,0]
  3061                           ;luciSemaforo@index stored from wreg
  3062  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0D64  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0D65  00A7               	movwf	luciSemaforo@index
  3065  0D66                     l3249:	
  3066                           
  3067                           ;main.c: 409: void luciSemaforo(unsigned char index, unsigned char lux);main.c: 410: {;m
      +                          ain.c: 411:     switch (index)
  3068  0D66  2DA5               	goto	l3261
  3069  0D67                     l328:	
  3070                           ;main.c: 415:         {;main.c: 416:         case 0:
  3071                           
  3072                           
  3073                           ;main.c: 417:             PORTCbits.RC1 = 0;
  3074  0D67  1087               	bcf	7,1	;volatile
  3075                           
  3076                           ;main.c: 418:             PORTCbits.RC3 = 0;
  3077  0D68  1187               	bcf	7,3	;volatile
  3078                           
  3079                           ;main.c: 419:             PORTCbits.RC0 = 1;
  3080  0D69  1407               	bsf	7,0	;volatile
  3081                           
  3082                           ;main.c: 420:             break;
  3083  0D6A  2DB5               	goto	l339
  3084  0D6B                     l330:	
  3085                           ;main.c: 421:         case 1:
  3086                           
  3087                           
  3088                           ;main.c: 422:             PORTCbits.RC0 = 0;
  3089  0D6B  1007               	bcf	7,0	;volatile
  3090                           
  3091                           ;main.c: 423:             PORTCbits.RC3 = 0;
  3092  0D6C  1187               	bcf	7,3	;volatile
  3093                           
  3094                           ;main.c: 424:             PORTCbits.RC1 = 1;
  3095  0D6D  1487               	bsf	7,1	;volatile
  3096                           
  3097                           ;main.c: 425:             break;
  3098  0D6E  2DB5               	goto	l339
  3099  0D6F                     l331:	
  3100                           ;main.c: 426:         case 2:
  3101                           
  3102                           
  3103                           ;main.c: 427:             PORTCbits.RC0 = 0;
  3104  0D6F  1007               	bcf	7,0	;volatile
  3105                           
  3106                           ;main.c: 428:             PORTCbits.RC1 = 0;
  3107  0D70  1087               	bcf	7,1	;volatile
  3108                           
  3109                           ;main.c: 429:             PORTCbits.RC3 = 1;
  3110  0D71  1587               	bsf	7,3	;volatile
  3111                           
  3112                           ;main.c: 430:             break;
  3113  0D72  2DB5               	goto	l339
  3114  0D73                     l3253:	
  3115  0D73  0824               	movf	luciSemaforo@lux,w
  3116  0D74  00A5               	movwf	??_luciSemaforo
  3117  0D75  01A6               	clrf	??_luciSemaforo+1
  3118                           
  3119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3120                           ; Switch size 1, requested type "simple"
  3121                           ; Number of cases is 1, Range of values is 0 to 0
  3122                           ; switch strategies available:
  3123                           ; Name         Instructions Cycles
  3124                           ; simple_byte            4     3 (average)
  3125                           ; direct_byte           11     8 (fixed)
  3126                           ; jumptable            260     6 (fixed)
  3127                           ;	Chosen strategy is simple_byte
  3128  0D76  0826               	movf	??_luciSemaforo+1,w
  3129  0D77  3A00               	xorlw	0	; case 0
  3130  0D78  1903               	skipnz
  3131  0D79  2D7B               	goto	l3677
  3132  0D7A  2DB5               	goto	l339
  3133  0D7B                     l3677:	
  3134                           
  3135                           ; Switch size 1, requested type "simple"
  3136                           ; Number of cases is 3, Range of values is 0 to 2
  3137                           ; switch strategies available:
  3138                           ; Name         Instructions Cycles
  3139                           ; simple_byte           10     6 (average)
  3140                           ; direct_byte           17     8 (fixed)
  3141                           ; jumptable            260     6 (fixed)
  3142                           ;	Chosen strategy is simple_byte
  3143  0D7B  0825               	movf	??_luciSemaforo,w
  3144  0D7C  3A00               	xorlw	0	; case 0
  3145  0D7D  1903               	skipnz
  3146  0D7E  2D67               	goto	l328
  3147  0D7F  3A01               	xorlw	1	; case 1
  3148  0D80  1903               	skipnz
  3149  0D81  2D6B               	goto	l330
  3150  0D82  3A03               	xorlw	3	; case 2
  3151  0D83  1903               	skipnz
  3152  0D84  2D6F               	goto	l331
  3153  0D85  2DB5               	goto	l339
  3154  0D86                     l335:	
  3155                           ;main.c: 436:         {;main.c: 437:         case 0:
  3156                           
  3157                           
  3158                           ;main.c: 438:             PORTBbits.RB1 = 0;
  3159  0D86  1086               	bcf	6,1	;volatile
  3160                           
  3161                           ;main.c: 439:             PORTBbits.RB6 = 0;
  3162  0D87  1306               	bcf	6,6	;volatile
  3163                           
  3164                           ;main.c: 440:             PORTBbits.RB7 = 1;
  3165  0D88  1786               	bsf	6,7	;volatile
  3166                           
  3167                           ;main.c: 441:             break;
  3168  0D89  2DB5               	goto	l339
  3169  0D8A                     l337:	
  3170                           ;main.c: 442:         case 1:
  3171                           
  3172                           
  3173                           ;main.c: 443:             PORTBbits.RB7 = 0;
  3174  0D8A  1386               	bcf	6,7	;volatile
  3175                           
  3176                           ;main.c: 444:             PORTBbits.RB6 = 0;
  3177  0D8B  1306               	bcf	6,6	;volatile
  3178                           
  3179                           ;main.c: 445:             PORTBbits.RB1 = 1;
  3180  0D8C  1486               	bsf	6,1	;volatile
  3181                           
  3182                           ;main.c: 446:             break;
  3183  0D8D  2DB5               	goto	l339
  3184  0D8E                     l338:	
  3185                           ;main.c: 447:         case 2:
  3186                           
  3187                           
  3188                           ;main.c: 448:             PORTBbits.RB7 = 0;
  3189  0D8E  1386               	bcf	6,7	;volatile
  3190                           
  3191                           ;main.c: 449:             PORTBbits.RB1 = 0;
  3192  0D8F  1086               	bcf	6,1	;volatile
  3193                           
  3194                           ;main.c: 450:             PORTBbits.RB6 = 1;
  3195  0D90  1706               	bsf	6,6	;volatile
  3196                           
  3197                           ;main.c: 451:             break;
  3198  0D91  2DB5               	goto	l339
  3199  0D92                     l3257:	
  3200  0D92  0824               	movf	luciSemaforo@lux,w
  3201  0D93  00A5               	movwf	??_luciSemaforo
  3202  0D94  01A6               	clrf	??_luciSemaforo+1
  3203                           
  3204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3205                           ; Switch size 1, requested type "simple"
  3206                           ; Number of cases is 1, Range of values is 0 to 0
  3207                           ; switch strategies available:
  3208                           ; Name         Instructions Cycles
  3209                           ; simple_byte            4     3 (average)
  3210                           ; direct_byte           11     8 (fixed)
  3211                           ; jumptable            260     6 (fixed)
  3212                           ;	Chosen strategy is simple_byte
  3213  0D95  0826               	movf	??_luciSemaforo+1,w
  3214  0D96  3A00               	xorlw	0	; case 0
  3215  0D97  1903               	skipnz
  3216  0D98  2D9A               	goto	l3679
  3217  0D99  2DB5               	goto	l339
  3218  0D9A                     l3679:	
  3219                           
  3220                           ; Switch size 1, requested type "simple"
  3221                           ; Number of cases is 3, Range of values is 0 to 2
  3222                           ; switch strategies available:
  3223                           ; Name         Instructions Cycles
  3224                           ; simple_byte           10     6 (average)
  3225                           ; direct_byte           17     8 (fixed)
  3226                           ; jumptable            260     6 (fixed)
  3227                           ;	Chosen strategy is simple_byte
  3228  0D9A  0825               	movf	??_luciSemaforo,w
  3229  0D9B  3A00               	xorlw	0	; case 0
  3230  0D9C  1903               	skipnz
  3231  0D9D  2D86               	goto	l335
  3232  0D9E  3A01               	xorlw	1	; case 1
  3233  0D9F  1903               	skipnz
  3234  0DA0  2D8A               	goto	l337
  3235  0DA1  3A03               	xorlw	3	; case 2
  3236  0DA2  1903               	skipnz
  3237  0DA3  2D8E               	goto	l338
  3238  0DA4  2DB5               	goto	l339
  3239  0DA5                     l3261:	
  3240  0DA5  0827               	movf	luciSemaforo@index,w
  3241  0DA6  00A5               	movwf	??_luciSemaforo
  3242  0DA7  01A6               	clrf	??_luciSemaforo+1
  3243                           
  3244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3245                           ; Switch size 1, requested type "simple"
  3246                           ; Number of cases is 1, Range of values is 0 to 0
  3247                           ; switch strategies available:
  3248                           ; Name         Instructions Cycles
  3249                           ; simple_byte            4     3 (average)
  3250                           ; direct_byte           11     8 (fixed)
  3251                           ; jumptable            260     6 (fixed)
  3252                           ;	Chosen strategy is simple_byte
  3253  0DA8  0826               	movf	??_luciSemaforo+1,w
  3254  0DA9  3A00               	xorlw	0	; case 0
  3255  0DAA  1903               	skipnz
  3256  0DAB  2DAD               	goto	l3681
  3257  0DAC  2DB5               	goto	l339
  3258  0DAD                     l3681:	
  3259                           
  3260                           ; Switch size 1, requested type "simple"
  3261                           ; Number of cases is 2, Range of values is 0 to 1
  3262                           ; switch strategies available:
  3263                           ; Name         Instructions Cycles
  3264                           ; simple_byte            7     4 (average)
  3265                           ; direct_byte           14     8 (fixed)
  3266                           ; jumptable            260     6 (fixed)
  3267                           ;	Chosen strategy is simple_byte
  3268  0DAD  0825               	movf	??_luciSemaforo,w
  3269  0DAE  3A00               	xorlw	0	; case 0
  3270  0DAF  1903               	skipnz
  3271  0DB0  2D73               	goto	l3253
  3272  0DB1  3A01               	xorlw	1	; case 1
  3273  0DB2  1903               	skipnz
  3274  0DB3  2D92               	goto	l3257
  3275  0DB4  2DB5               	goto	l339
  3276  0DB5                     l339:	
  3277  0DB5  0008               	return
  3278  0DB6                     __end_of_luciSemaforo:	
  3279                           
  3280                           	psect	text7
  3281  0BC3                     __ptext7:	
  3282 ;; *************** function _init_ADC *****************
  3283 ;; Defined at:
  3284 ;;		line 316 in file "main.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;		None
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;		None
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         0       0       0       0       0
  3299 ;;      Locals:         0       0       0       0       0
  3300 ;;      Temps:          0       1       0       0       0
  3301 ;;      Totals:         0       1       0       0       0
  3302 ;;Total ram usage:        1 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    3
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _init_ADC
  3314  0BC3                     _init_ADC:	
  3315  0BC3                     l3181:	
  3316                           ;incstack = 0
  3317                           ; Regs used in _init_ADC: [wreg+status,2]
  3318                           
  3319                           
  3320                           ;main.c: 318:     TRISA = 0xE3;
  3321  0BC3  30E3               	movlw	227
  3322  0BC4  1683               	bsf	3,5	;RP0=1, select bank1
  3323  0BC5  1303               	bcf	3,6	;RP1=0, select bank1
  3324  0BC6  0085               	movwf	5	;volatile
  3325  0BC7                     l3183:	
  3326                           
  3327                           ;main.c: 319:     ADCON0 = 0x00;
  3328  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0BC9  019F               	clrf	31	;volatile
  3331  0BCA                     l3185:	
  3332                           
  3333                           ;main.c: 320:     ADCON1 = 0x80;
  3334  0BCA  3080               	movlw	128
  3335  0BCB  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0BCC  1303               	bcf	3,6	;RP1=0, select bank1
  3337  0BCD  009F               	movwf	31	;volatile
  3338  0BCE                     l3187:	
  3339                           
  3340                           ;main.c: 321:     _delay((unsigned long)((10)*(32000000/4000000.0)));
  3341  0BCE  3019               	movlw	25
  3342  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0BD1  00A4               	movwf	??_init_ADC
  3345  0BD2                     u3017:	
  3346  0BD2  0BA4               	decfsz	??_init_ADC,f
  3347  0BD3  2BD2               	goto	u3017
  3348  0BD4  2BD5               	nop2
  3349  0BD5                     l279:	
  3350  0BD5  0008               	return
  3351  0BD6                     __end_of_init_ADC:	
  3352                           
  3353                           	psect	text8
  3354  0E69                     __ptext8:	
  3355 ;; *************** function _UpdateTimes *****************
  3356 ;; Defined at:
  3357 ;;		line 3 in file "./CustomLib/TrafficLight.h"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  _semafori       1    wreg     PTR PTR struct .
  3360 ;;		 -> Semafori(16), 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  _semafori       1   20[BANK0 ] PTR PTR struct .
  3363 ;;		 -> Semafori(16), 
  3364 ;;  i               1   22[BANK0 ] unsigned char 
  3365 ;;  l               1   21[BANK0 ] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3375 ;;      Params:         0       0       0       0       0
  3376 ;;      Locals:         0       3       0       0       0
  3377 ;;      Temps:          0      16       0       0       0
  3378 ;;      Totals:         0      19       0       0       0
  3379 ;;Total ram usage:       19 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    3
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           
  3390                           ;psect for function _UpdateTimes
  3391  0E69                     _UpdateTimes:	
  3392                           
  3393                           ;incstack = 0
  3394                           ; Regs used in _UpdateTimes: [wreg-fsr0h+status,2+status,0]
  3395                           ;UpdateTimes@_semafori stored from wreg
  3396  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3397  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  3398  0E6B  00B4               	movwf	UpdateTimes@_semafori
  3399  0E6C                     l3103:	
  3400                           
  3401                           ;./CustomLib/TrafficLight.h: 3: void UpdateTimes(_Semafori _semafori);./CustomLib/Traffi
      +                          cLight.h: 4: {;./CustomLib/TrafficLight.h: 6:     for (unsigned char l = 0; l < 16; l++)
  3402  0E6C  01B5               	clrf	UpdateTimes@l
  3403  0E6D                     l3109:	
  3404                           
  3405                           ;./CustomLib/TrafficLight.h: 7:     {;./CustomLib/TrafficLight.h: 8:         for(unsigne
      +                          d char i = 0; i < 3; i++)
  3406  0E6D  01B6               	clrf	UpdateTimes@i
  3407  0E6E                     l3115:	
  3408                           
  3409                           ;./CustomLib/TrafficLight.h: 9:         {;./CustomLib/TrafficLight.h: 10:             (*
      +                          (_semafori)[l]).times[i] = (*(_semafori)[l]).new_times[i];
  3410  0E6E  0835               	movf	UpdateTimes@l,w
  3411  0E6F  00A4               	movwf	??_UpdateTimes
  3412  0E70  0724               	addwf	??_UpdateTimes,w
  3413  0E71  0734               	addwf	UpdateTimes@_semafori,w
  3414  0E72  00A5               	movwf	??_UpdateTimes+1
  3415  0E73  0825               	movf	??_UpdateTimes+1,w
  3416  0E74  0084               	movwf	4
  3417  0E75  1383               	bcf	3,7	;select IRP bank0
  3418  0E76  0800               	movf	0,w
  3419  0E77  00A6               	movwf	??_UpdateTimes+2
  3420  0E78  0A84               	incf	4,f
  3421  0E79  0800               	movf	0,w
  3422  0E7A  00A7               	movwf	??_UpdateTimes+3
  3423  0E7B  0836               	movf	UpdateTimes@i,w
  3424  0E7C  00A8               	movwf	??_UpdateTimes+4
  3425  0E7D  0728               	addwf	??_UpdateTimes+4,w
  3426  0E7E  3E06               	addlw	6
  3427  0E7F  0726               	addwf	??_UpdateTimes+2,w
  3428  0E80  00A9               	movwf	??_UpdateTimes+5
  3429  0E81  0827               	movf	??_UpdateTimes+3,w
  3430  0E82  1803               	skipnc
  3431  0E83  3E01               	addlw	1
  3432  0E84  00AA               	movwf	??_UpdateTimes+6
  3433  0E85  0829               	movf	??_UpdateTimes+5,w
  3434  0E86  0084               	movwf	4
  3435  0E87  1783               	bsf	3,7
  3436  0E88  1C2A               	btfss	??_UpdateTimes+6,0
  3437  0E89  1383               	bcf	3,7
  3438  0E8A  0800               	movf	0,w
  3439  0E8B  00AB               	movwf	??_UpdateTimes+7
  3440  0E8C  0A84               	incf	4,f
  3441  0E8D  0800               	movf	0,w
  3442  0E8E  00AC               	movwf	??_UpdateTimes+8
  3443  0E8F  0835               	movf	UpdateTimes@l,w
  3444  0E90  00AD               	movwf	??_UpdateTimes+9
  3445  0E91  072D               	addwf	??_UpdateTimes+9,w
  3446  0E92  0734               	addwf	UpdateTimes@_semafori,w
  3447  0E93  00AE               	movwf	??_UpdateTimes+10
  3448  0E94  082E               	movf	??_UpdateTimes+10,w
  3449  0E95  0084               	movwf	4
  3450  0E96  1383               	bcf	3,7	;select IRP bank0
  3451  0E97  0800               	movf	0,w
  3452  0E98  00AF               	movwf	??_UpdateTimes+11
  3453  0E99  0A84               	incf	4,f
  3454  0E9A  0800               	movf	0,w
  3455  0E9B  00B0               	movwf	??_UpdateTimes+12
  3456  0E9C  0836               	movf	UpdateTimes@i,w
  3457  0E9D  00B1               	movwf	??_UpdateTimes+13
  3458  0E9E  0731               	addwf	??_UpdateTimes+13,w
  3459  0E9F  072F               	addwf	??_UpdateTimes+11,w
  3460  0EA0  00B2               	movwf	??_UpdateTimes+14
  3461  0EA1  0830               	movf	??_UpdateTimes+12,w
  3462  0EA2  1803               	skipnc
  3463  0EA3  3E01               	addlw	1
  3464  0EA4  00B3               	movwf	??_UpdateTimes+15
  3465  0EA5  0832               	movf	??_UpdateTimes+14,w
  3466  0EA6  0084               	movwf	4
  3467  0EA7  1783               	bsf	3,7
  3468  0EA8  1C33               	btfss	??_UpdateTimes+15,0
  3469  0EA9  1383               	bcf	3,7
  3470  0EAA  082B               	movf	??_UpdateTimes+7,w
  3471  0EAB  0080               	movwf	0
  3472  0EAC  0A84               	incf	4,f
  3473  0EAD  082C               	movf	??_UpdateTimes+8,w
  3474  0EAE  0080               	movwf	0
  3475  0EAF                     l3117:	
  3476                           
  3477                           ;./CustomLib/TrafficLight.h: 11:         }
  3478  0EAF  3001               	movlw	1
  3479  0EB0  00A4               	movwf	??_UpdateTimes
  3480  0EB1  0824               	movf	??_UpdateTimes,w
  3481  0EB2  07B6               	addwf	UpdateTimes@i,f
  3482  0EB3                     l3119:	
  3483  0EB3  3003               	movlw	3
  3484  0EB4  0236               	subwf	UpdateTimes@i,w
  3485  0EB5  1C03               	skipc
  3486  0EB6  2EB8               	goto	u2631
  3487  0EB7  2EB9               	goto	u2630
  3488  0EB8                     u2631:	
  3489  0EB8  2E6E               	goto	l3115
  3490  0EB9                     u2630:	
  3491  0EB9                     l3121:	
  3492                           
  3493                           ;./CustomLib/TrafficLight.h: 12:     }
  3494  0EB9  3001               	movlw	1
  3495  0EBA  00A4               	movwf	??_UpdateTimes
  3496  0EBB  0824               	movf	??_UpdateTimes,w
  3497  0EBC  07B5               	addwf	UpdateTimes@l,f
  3498  0EBD                     l3123:	
  3499  0EBD  3010               	movlw	16
  3500  0EBE  0235               	subwf	UpdateTimes@l,w
  3501  0EBF  1C03               	skipc
  3502  0EC0  2EC2               	goto	u2641
  3503  0EC1  2EC3               	goto	u2640
  3504  0EC2                     u2641:	
  3505  0EC2  2E6D               	goto	l3109
  3506  0EC3                     u2640:	
  3507  0EC3                     l139:	
  3508  0EC3  0008               	return
  3509  0EC4                     __end_of_UpdateTimes:	
  3510                           
  3511                           	psect	text9
  3512  0C97                     __ptext9:	
  3513 ;; *************** function _UART_Init *****************
  3514 ;; Defined at:
  3515 ;;		line 334 in file "main.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  baudrate        2   19[BANK0 ] int 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0, pclath, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         0       2       0       0       0
  3530 ;;      Locals:         0       0       0       0       0
  3531 ;;      Temps:          0       4       0       0       0
  3532 ;;      Totals:         0       6       0       0       0
  3533 ;;Total ram usage:        6 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    4
  3536 ;; This function calls:
  3537 ;;		___aldiv
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           
  3544                           ;psect for function _UART_Init
  3545  0C97                     _UART_Init:	
  3546  0C97                     l3189:	
  3547                           ;incstack = 0
  3548                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3549                           
  3550                           
  3551                           ;main.c: 334: void UART_Init(int baudrate);main.c: 335: {;main.c: 336:     TRISCbits.TRI
      +                          SC6 = 0;
  3552  0C97  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0C98  1303               	bcf	3,6	;RP1=0, select bank1
  3554  0C99  1307               	bcf	7,6	;volatile
  3555                           
  3556                           ;main.c: 337:     TXSTAbits.TXEN = 1;
  3557  0C9A  1698               	bsf	24,5	;volatile
  3558                           
  3559                           ;main.c: 338:     RCSTAbits.SPEN = 1;
  3560  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  3561  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  3562  0C9D  1798               	bsf	24,7	;volatile
  3563                           
  3564                           ;main.c: 339:     RCSTAbits.CREN = 1;
  3565  0C9E  1618               	bsf	24,4	;volatile
  3566  0C9F                     l3191:	
  3567                           
  3568                           ;main.c: 340:     SPBRG = (32000000 / (long)(64UL * baudrate)) - 1;
  3569  0C9F  0833               	movf	UART_Init@baudrate,w
  3570  0CA0  00B5               	movwf	??_UART_Init
  3571  0CA1  0834               	movf	UART_Init@baudrate+1,w
  3572  0CA2  00B6               	movwf	??_UART_Init+1
  3573  0CA3  3000               	movlw	0
  3574  0CA4  1BB6               	btfsc	??_UART_Init+1,7
  3575  0CA5  30FF               	movlw	255
  3576  0CA6  00B7               	movwf	??_UART_Init+2
  3577  0CA7  00B8               	movwf	??_UART_Init+3
  3578  0CA8  3006               	movlw	6
  3579  0CA9                     u2705:	
  3580  0CA9  1003               	clrc
  3581  0CAA  0DB5               	rlf	??_UART_Init,f
  3582  0CAB  0DB6               	rlf	??_UART_Init+1,f
  3583  0CAC  0DB7               	rlf	??_UART_Init+2,f
  3584  0CAD  0DB8               	rlf	??_UART_Init+3,f
  3585  0CAE                     u2700:	
  3586  0CAE  3EFF               	addlw	-1
  3587  0CAF  1D03               	skipz
  3588  0CB0  2CA9               	goto	u2705
  3589  0CB1  0838               	movf	??_UART_Init+3,w
  3590  0CB2  00A7               	movwf	___aldiv@divisor+3
  3591  0CB3  0837               	movf	??_UART_Init+2,w
  3592  0CB4  00A6               	movwf	___aldiv@divisor+2
  3593  0CB5  0836               	movf	??_UART_Init+1,w
  3594  0CB6  00A5               	movwf	___aldiv@divisor+1
  3595  0CB7  0835               	movf	??_UART_Init,w
  3596  0CB8  00A4               	movwf	___aldiv@divisor
  3597  0CB9  3001               	movlw	1
  3598  0CBA  00AB               	movwf	___aldiv@dividend+3
  3599  0CBB  30E8               	movlw	232
  3600  0CBC  00AA               	movwf	___aldiv@dividend+2
  3601  0CBD  3048               	movlw	72
  3602  0CBE  00A9               	movwf	___aldiv@dividend+1
  3603  0CBF  3000               	movlw	0
  3604  0CC0  00A8               	movwf	___aldiv@dividend
  3605  0CC1  120A  118A  2605  120A  158A  	fcall	___aldiv
  3606  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0CC8  0824               	movf	?___aldiv,w
  3609  0CC9  3EFF               	addlw	255
  3610  0CCA  1683               	bsf	3,5	;RP0=1, select bank1
  3611  0CCB  1303               	bcf	3,6	;RP1=0, select bank1
  3612  0CCC  0099               	movwf	25	;volatile
  3613  0CCD                     l3193:	
  3614                           
  3615                           ;main.c: 341:     INTCONbits.GIE = 1;
  3616  0CCD  178B               	bsf	11,7	;volatile
  3617  0CCE                     l3195:	
  3618                           
  3619                           ;main.c: 342:     INTCONbits.PEIE = 1;
  3620  0CCE  170B               	bsf	11,6	;volatile
  3621  0CCF                     l3197:	
  3622                           
  3623                           ;main.c: 343:     PIE1bits.RCIE = 1;
  3624  0CCF  168C               	bsf	12,5	;volatile
  3625  0CD0                     l288:	
  3626  0CD0  0008               	return
  3627  0CD1                     __end_of_UART_Init:	
  3628                           
  3629                           	psect	text10
  3630  0605                     __ptext10:	
  3631 ;; *************** function ___aldiv *****************
  3632 ;; Defined at:
  3633 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  divisor         4    4[BANK0 ] long 
  3636 ;;  dividend        4    8[BANK0 ] long 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  quotient        4   15[BANK0 ] long 
  3639 ;;  sign            1   14[BANK0 ] unsigned char 
  3640 ;;  counter         1   13[BANK0 ] unsigned char 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  4    4[BANK0 ] long 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2, status,0
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3650 ;;      Params:         0       8       0       0       0
  3651 ;;      Locals:         0       6       0       0       0
  3652 ;;      Temps:          0       1       0       0       0
  3653 ;;      Totals:         0      15       0       0       0
  3654 ;;Total ram usage:       15 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    3
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_UART_Init
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           
  3665                           ;psect for function ___aldiv
  3666  0605                     ___aldiv:	
  3667  0605                     l2965:	
  3668                           ;incstack = 0
  3669                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3670                           
  3671  0605  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0606  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0607  01AE               	clrf	___aldiv@sign
  3674  0608                     l2967:	
  3675  0608  1FA7               	btfss	___aldiv@divisor+3,7
  3676  0609  2E0B               	goto	u2331
  3677  060A  2E0C               	goto	u2330
  3678  060B                     u2331:	
  3679  060B  2E19               	goto	l512
  3680  060C                     u2330:	
  3681  060C                     l2969:	
  3682  060C  09A4               	comf	___aldiv@divisor,f
  3683  060D  09A5               	comf	___aldiv@divisor+1,f
  3684  060E  09A6               	comf	___aldiv@divisor+2,f
  3685  060F  09A7               	comf	___aldiv@divisor+3,f
  3686  0610  0AA4               	incf	___aldiv@divisor,f
  3687  0611  1903               	skipnz
  3688  0612  0AA5               	incf	___aldiv@divisor+1,f
  3689  0613  1903               	skipnz
  3690  0614  0AA6               	incf	___aldiv@divisor+2,f
  3691  0615  1903               	skipnz
  3692  0616  0AA7               	incf	___aldiv@divisor+3,f
  3693  0617  01AE               	clrf	___aldiv@sign
  3694  0618  0AAE               	incf	___aldiv@sign,f
  3695  0619                     l512:	
  3696  0619  1FAB               	btfss	___aldiv@dividend+3,7
  3697  061A  2E1C               	goto	u2341
  3698  061B  2E1D               	goto	u2340
  3699  061C                     u2341:	
  3700  061C  2E2C               	goto	l2975
  3701  061D                     u2340:	
  3702  061D                     l2971:	
  3703  061D  09A8               	comf	___aldiv@dividend,f
  3704  061E  09A9               	comf	___aldiv@dividend+1,f
  3705  061F  09AA               	comf	___aldiv@dividend+2,f
  3706  0620  09AB               	comf	___aldiv@dividend+3,f
  3707  0621  0AA8               	incf	___aldiv@dividend,f
  3708  0622  1903               	skipnz
  3709  0623  0AA9               	incf	___aldiv@dividend+1,f
  3710  0624  1903               	skipnz
  3711  0625  0AAA               	incf	___aldiv@dividend+2,f
  3712  0626  1903               	skipnz
  3713  0627  0AAB               	incf	___aldiv@dividend+3,f
  3714  0628                     l2973:	
  3715  0628  3001               	movlw	1
  3716  0629  00AC               	movwf	??___aldiv
  3717  062A  082C               	movf	??___aldiv,w
  3718  062B  06AE               	xorwf	___aldiv@sign,f
  3719  062C                     l2975:	
  3720  062C  3000               	movlw	0
  3721  062D  00B2               	movwf	___aldiv@quotient+3
  3722  062E  3000               	movlw	0
  3723  062F  00B1               	movwf	___aldiv@quotient+2
  3724  0630  3000               	movlw	0
  3725  0631  00B0               	movwf	___aldiv@quotient+1
  3726  0632  3000               	movlw	0
  3727  0633  00AF               	movwf	___aldiv@quotient
  3728  0634                     l2977:	
  3729  0634  0827               	movf	___aldiv@divisor+3,w
  3730  0635  0426               	iorwf	___aldiv@divisor+2,w
  3731  0636  0425               	iorwf	___aldiv@divisor+1,w
  3732  0637  0424               	iorwf	___aldiv@divisor,w
  3733  0638  1903               	skipnz
  3734  0639  2E3B               	goto	u2351
  3735  063A  2E3C               	goto	u2350
  3736  063B                     u2351:	
  3737  063B  2E89               	goto	l2997
  3738  063C                     u2350:	
  3739  063C                     l2979:	
  3740  063C  01AD               	clrf	___aldiv@counter
  3741  063D  0AAD               	incf	___aldiv@counter,f
  3742  063E  2E4C               	goto	l2983
  3743  063F                     l2981:	
  3744  063F  3001               	movlw	1
  3745  0640  00AC               	movwf	??___aldiv
  3746  0641                     u2365:	
  3747  0641  1003               	clrc
  3748  0642  0DA4               	rlf	___aldiv@divisor,f
  3749  0643  0DA5               	rlf	___aldiv@divisor+1,f
  3750  0644  0DA6               	rlf	___aldiv@divisor+2,f
  3751  0645  0DA7               	rlf	___aldiv@divisor+3,f
  3752  0646  0BAC               	decfsz	??___aldiv,f
  3753  0647  2E41               	goto	u2365
  3754  0648  3001               	movlw	1
  3755  0649  00AC               	movwf	??___aldiv
  3756  064A  082C               	movf	??___aldiv,w
  3757  064B  07AD               	addwf	___aldiv@counter,f
  3758  064C                     l2983:	
  3759  064C  1FA7               	btfss	___aldiv@divisor+3,7
  3760  064D  2E4F               	goto	u2371
  3761  064E  2E50               	goto	u2370
  3762  064F                     u2371:	
  3763  064F  2E3F               	goto	l2981
  3764  0650                     u2370:	
  3765  0650                     l2985:	
  3766  0650  3001               	movlw	1
  3767  0651  00AC               	movwf	??___aldiv
  3768  0652                     u2385:	
  3769  0652  1003               	clrc
  3770  0653  0DAF               	rlf	___aldiv@quotient,f
  3771  0654  0DB0               	rlf	___aldiv@quotient+1,f
  3772  0655  0DB1               	rlf	___aldiv@quotient+2,f
  3773  0656  0DB2               	rlf	___aldiv@quotient+3,f
  3774  0657  0BAC               	decfsz	??___aldiv,f
  3775  0658  2E52               	goto	u2385
  3776  0659                     l2987:	
  3777  0659  0827               	movf	___aldiv@divisor+3,w
  3778  065A  022B               	subwf	___aldiv@dividend+3,w
  3779  065B  1D03               	skipz
  3780  065C  2E67               	goto	u2395
  3781  065D  0826               	movf	___aldiv@divisor+2,w
  3782  065E  022A               	subwf	___aldiv@dividend+2,w
  3783  065F  1D03               	skipz
  3784  0660  2E67               	goto	u2395
  3785  0661  0825               	movf	___aldiv@divisor+1,w
  3786  0662  0229               	subwf	___aldiv@dividend+1,w
  3787  0663  1D03               	skipz
  3788  0664  2E67               	goto	u2395
  3789  0665  0824               	movf	___aldiv@divisor,w
  3790  0666  0228               	subwf	___aldiv@dividend,w
  3791  0667                     u2395:	
  3792  0667  1C03               	skipc
  3793  0668  2E6A               	goto	u2391
  3794  0669  2E6B               	goto	u2390
  3795  066A                     u2391:	
  3796  066A  2E7A               	goto	l2993
  3797  066B                     u2390:	
  3798  066B                     l2989:	
  3799  066B  0824               	movf	___aldiv@divisor,w
  3800  066C  02A8               	subwf	___aldiv@dividend,f
  3801  066D  0825               	movf	___aldiv@divisor+1,w
  3802  066E  1C03               	skipc
  3803  066F  0F25               	incfsz	___aldiv@divisor+1,w
  3804  0670  02A9               	subwf	___aldiv@dividend+1,f
  3805  0671  0826               	movf	___aldiv@divisor+2,w
  3806  0672  1C03               	skipc
  3807  0673  0F26               	incfsz	___aldiv@divisor+2,w
  3808  0674  02AA               	subwf	___aldiv@dividend+2,f
  3809  0675  0827               	movf	___aldiv@divisor+3,w
  3810  0676  1C03               	skipc
  3811  0677  0F27               	incfsz	___aldiv@divisor+3,w
  3812  0678  02AB               	subwf	___aldiv@dividend+3,f
  3813  0679                     l2991:	
  3814  0679  142F               	bsf	___aldiv@quotient,0
  3815  067A                     l2993:	
  3816  067A  3001               	movlw	1
  3817  067B                     u2405:	
  3818  067B  1003               	clrc
  3819  067C  0CA7               	rrf	___aldiv@divisor+3,f
  3820  067D  0CA6               	rrf	___aldiv@divisor+2,f
  3821  067E  0CA5               	rrf	___aldiv@divisor+1,f
  3822  067F  0CA4               	rrf	___aldiv@divisor,f
  3823  0680  3EFF               	addlw	-1
  3824  0681  1D03               	skipz
  3825  0682  2E7B               	goto	u2405
  3826  0683                     l2995:	
  3827  0683  3001               	movlw	1
  3828  0684  02AD               	subwf	___aldiv@counter,f
  3829  0685  1D03               	btfss	3,2
  3830  0686  2E88               	goto	u2411
  3831  0687  2E89               	goto	u2410
  3832  0688                     u2411:	
  3833  0688  2E50               	goto	l2985
  3834  0689                     u2410:	
  3835  0689                     l2997:	
  3836  0689  082E               	movf	___aldiv@sign,w
  3837  068A  1903               	btfsc	3,2
  3838  068B  2E8D               	goto	u2421
  3839  068C  2E8E               	goto	u2420
  3840  068D                     u2421:	
  3841  068D  2E99               	goto	l3001
  3842  068E                     u2420:	
  3843  068E                     l2999:	
  3844  068E  09AF               	comf	___aldiv@quotient,f
  3845  068F  09B0               	comf	___aldiv@quotient+1,f
  3846  0690  09B1               	comf	___aldiv@quotient+2,f
  3847  0691  09B2               	comf	___aldiv@quotient+3,f
  3848  0692  0AAF               	incf	___aldiv@quotient,f
  3849  0693  1903               	skipnz
  3850  0694  0AB0               	incf	___aldiv@quotient+1,f
  3851  0695  1903               	skipnz
  3852  0696  0AB1               	incf	___aldiv@quotient+2,f
  3853  0697  1903               	skipnz
  3854  0698  0AB2               	incf	___aldiv@quotient+3,f
  3855  0699                     l3001:	
  3856  0699  0832               	movf	___aldiv@quotient+3,w
  3857  069A  00A7               	movwf	?___aldiv+3
  3858  069B  0831               	movf	___aldiv@quotient+2,w
  3859  069C  00A6               	movwf	?___aldiv+2
  3860  069D  0830               	movf	___aldiv@quotient+1,w
  3861  069E  00A5               	movwf	?___aldiv+1
  3862  069F  082F               	movf	___aldiv@quotient,w
  3863  06A0  00A4               	movwf	?___aldiv
  3864  06A1                     l522:	
  3865  06A1  0008               	return
  3866  06A2                     __end_of___aldiv:	
  3867                           
  3868                           	psect	text11
  3869  073E                     __ptext11:	
  3870 ;; *************** function _ShowDigitsOnDisplay *****************
  3871 ;; Defined at:
  3872 ;;		line 458 in file "main.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3886 ;;      Params:         0       0       0       0       0
  3887 ;;      Locals:         0       0       0       0       0
  3888 ;;      Temps:          0       2       0       0       0
  3889 ;;      Totals:         0       2       0       0       0
  3890 ;;Total ram usage:        2 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    4
  3893 ;; This function calls:
  3894 ;;		_SetDisplay
  3895 ;;		___awmod
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function _ShowDigitsOnDisplay
  3903  073E                     _ShowDigitsOnDisplay:	
  3904  073E                     l3225:	
  3905                           ;incstack = 0
  3906                           ; Regs used in _ShowDigitsOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3907                           
  3908                           
  3909                           ;main.c: 461:     switch (disp)
  3910  073E  2FA0               	goto	l3241
  3911  073F                     l3227:	
  3912                           
  3913                           ;main.c: 464:             if (centinaia > 0)
  3914  073F  0862               	movf	_centinaia,w
  3915  0740  1903               	btfsc	3,2
  3916  0741  2F43               	goto	u2741
  3917  0742  2F44               	goto	u2740
  3918  0743                     u2741:	
  3919  0743  2F57               	goto	l344
  3920  0744                     u2740:	
  3921  0744                     l3229:	
  3922                           
  3923                           ;main.c: 465:             {;main.c: 466:                 SetDisplay(1, 0, 0, display[cen
      +                          tinaia]);
  3924  0744  01A4               	clrf	SetDisplay@d2
  3925  0745  01A5               	clrf	SetDisplay@d3
  3926  0746  0862               	movf	_centinaia,w
  3927  0747  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3928  0748  0084               	movwf	4
  3929  0749  120A  158A  2000  120A  118A  	fcall	stringdir
  3930  074E  00AB               	movwf	??_ShowDigitsOnDisplay
  3931  074F  082B               	movf	??_ShowDigitsOnDisplay,w
  3932  0750  00A6               	movwf	SetDisplay@value
  3933  0751  3001               	movlw	1
  3934  0752  120A  158A  23E9  120A  118A  	fcall	_SetDisplay
  3935  0757                     l344:	
  3936                           ;main.c: 467:             }
  3937                           
  3938  0757  1283               	bcf	3,5	;RP0=0, select bank0
  3939  0758  1303               	bcf	3,6	;RP1=0, select bank0
  3940  0759  01A4               	clrf	SetDisplay@d2
  3941  075A  01A5               	clrf	SetDisplay@d3
  3942  075B  3003               	movlw	low (((_display+2)-__stringbase)| (0+32768))
  3943  075C  0084               	movwf	4
  3944  075D  120A  158A  2000  120A  118A  	fcall	stringdir
  3945  0762  00AB               	movwf	??_ShowDigitsOnDisplay
  3946  0763  082B               	movf	??_ShowDigitsOnDisplay,w
  3947  0764  00A6               	movwf	SetDisplay@value
  3948  0765  3001               	movlw	1
  3949  0766  120A  158A  23E9  120A  118A  	fcall	_SetDisplay
  3950                           
  3951                           ;main.c: 470:             break;
  3952  076B  2FB5               	goto	l3243
  3953  076C                     l3231:	
  3954                           
  3955                           ;main.c: 472:             if (decine > 0 || centinaia > 0)
  3956  076C  0863               	movf	_decine,w
  3957  076D  1D03               	btfss	3,2
  3958  076E  2F70               	goto	u2751
  3959  076F  2F71               	goto	u2750
  3960  0770                     u2751:	
  3961  0770  2F76               	goto	l3235
  3962  0771                     u2750:	
  3963  0771                     l3233:	
  3964  0771  0862               	movf	_centinaia,w
  3965  0772  1903               	btfsc	3,2
  3966  0773  2F75               	goto	u2761
  3967  0774  2F76               	goto	u2760
  3968  0775                     u2761:	
  3969  0775  2FB5               	goto	l3243
  3970  0776                     u2760:	
  3971  0776                     l3235:	
  3972                           
  3973                           ;main.c: 473:             {;main.c: 474:                 SetDisplay(0, 1, 0, display[dec
      +                          ine]);
  3974  0776  01A4               	clrf	SetDisplay@d2
  3975  0777  0AA4               	incf	SetDisplay@d2,f
  3976  0778  01A5               	clrf	SetDisplay@d3
  3977  0779  0863               	movf	_decine,w
  3978  077A  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3979  077B  0084               	movwf	4
  3980  077C  120A  158A  2000  120A  118A  	fcall	stringdir
  3981  0781  00AB               	movwf	??_ShowDigitsOnDisplay
  3982  0782  082B               	movf	??_ShowDigitsOnDisplay,w
  3983  0783  00A6               	movwf	SetDisplay@value
  3984  0784  3000               	movlw	0
  3985  0785  120A  158A  23E9  120A  118A  	fcall	_SetDisplay
  3986  078A  2FB5               	goto	l3243
  3987  078B                     l3237:	
  3988                           
  3989                           ;main.c: 478:             SetDisplay(0, 0, 1, display[unita]);
  3990  078B  01A4               	clrf	SetDisplay@d2
  3991  078C  01A5               	clrf	SetDisplay@d3
  3992  078D  0AA5               	incf	SetDisplay@d3,f
  3993  078E  0864               	movf	_unita,w
  3994  078F  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
  3995  0790  0084               	movwf	4
  3996  0791  120A  158A  2000  120A  118A  	fcall	stringdir
  3997  0796  00AB               	movwf	??_ShowDigitsOnDisplay
  3998  0797  082B               	movf	??_ShowDigitsOnDisplay,w
  3999  0798  00A6               	movwf	SetDisplay@value
  4000  0799  3000               	movlw	0
  4001  079A  120A  158A  23E9  120A  118A  	fcall	_SetDisplay
  4002                           
  4003                           ;main.c: 479:             break;
  4004  079F  2FB5               	goto	l3243
  4005  07A0                     l3241:	
  4006  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  4007  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  4008  07A2  0851               	movf	_disp,w
  4009  07A3  00AB               	movwf	??_ShowDigitsOnDisplay
  4010  07A4  01AC               	clrf	??_ShowDigitsOnDisplay+1
  4011                           
  4012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4013                           ; Switch size 1, requested type "simple"
  4014                           ; Number of cases is 1, Range of values is 0 to 0
  4015                           ; switch strategies available:
  4016                           ; Name         Instructions Cycles
  4017                           ; simple_byte            4     3 (average)
  4018                           ; direct_byte           11     8 (fixed)
  4019                           ; jumptable            260     6 (fixed)
  4020                           ;	Chosen strategy is simple_byte
  4021  07A5  082C               	movf	??_ShowDigitsOnDisplay+1,w
  4022  07A6  3A00               	xorlw	0	; case 0
  4023  07A7  1903               	skipnz
  4024  07A8  2FAA               	goto	l3683
  4025  07A9  2FB5               	goto	l3243
  4026  07AA                     l3683:	
  4027                           
  4028                           ; Switch size 1, requested type "simple"
  4029                           ; Number of cases is 3, Range of values is 0 to 2
  4030                           ; switch strategies available:
  4031                           ; Name         Instructions Cycles
  4032                           ; simple_byte           10     6 (average)
  4033                           ; direct_byte           17     8 (fixed)
  4034                           ; jumptable            260     6 (fixed)
  4035                           ;	Chosen strategy is simple_byte
  4036  07AA  082B               	movf	??_ShowDigitsOnDisplay,w
  4037  07AB  3A00               	xorlw	0	; case 0
  4038  07AC  1903               	skipnz
  4039  07AD  2F3F               	goto	l3227
  4040  07AE  3A01               	xorlw	1	; case 1
  4041  07AF  1903               	skipnz
  4042  07B0  2F6C               	goto	l3231
  4043  07B1  3A03               	xorlw	3	; case 2
  4044  07B2  1903               	skipnz
  4045  07B3  2F8B               	goto	l3237
  4046  07B4  2FB5               	goto	l3243
  4047  07B5                     l3243:	
  4048                           
  4049                           ;main.c: 481:     disp = (disp + 1) % 3;
  4050  07B5  3003               	movlw	3
  4051  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  4052  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  4053  07B8  00A4               	movwf	___awmod@divisor
  4054  07B9  3000               	movlw	0
  4055  07BA  00A5               	movwf	___awmod@divisor+1
  4056  07BB  0851               	movf	_disp,w
  4057  07BC  3E01               	addlw	1
  4058  07BD  00A6               	movwf	___awmod@dividend
  4059  07BE  3000               	movlw	0
  4060  07BF  1803               	skipnc
  4061  07C0  3001               	movlw	1
  4062  07C1  00A7               	movwf	___awmod@dividend+1
  4063  07C2  120A  158A  260E  120A  118A  	fcall	___awmod
  4064  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  4065  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  4066  07C9  0824               	movf	?___awmod,w
  4067  07CA  00AB               	movwf	??_ShowDigitsOnDisplay
  4068  07CB  082B               	movf	??_ShowDigitsOnDisplay,w
  4069  07CC  00D1               	movwf	_disp
  4070  07CD                     l351:	
  4071  07CD  0008               	return
  4072  07CE                     __end_of_ShowDigitsOnDisplay:	
  4073                           
  4074                           	psect	text12
  4075  0BE9                     __ptext12:	
  4076 ;; *************** function _SetDisplay *****************
  4077 ;; Defined at:
  4078 ;;		line 380 in file "main.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  d1              1    wreg     unsigned char 
  4081 ;;  d2              1    4[BANK0 ] unsigned char 
  4082 ;;  d3              1    5[BANK0 ] unsigned char 
  4083 ;;  value           1    6[BANK0 ] unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  d1              1    7[BANK0 ] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       3       0       0       0
  4096 ;;      Locals:         0       1       0       0       0
  4097 ;;      Temps:          0       0       0       0       0
  4098 ;;      Totals:         0       4       0       0       0
  4099 ;;Total ram usage:        4 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    3
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_ShowDigitsOnDisplay
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           
  4110                           ;psect for function _SetDisplay
  4111  0BE9                     _SetDisplay:	
  4112                           
  4113                           ;incstack = 0
  4114                           ; Regs used in _SetDisplay: [wreg+status,0]
  4115                           ;SetDisplay@d1 stored from wreg
  4116  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0BEB  00A7               	movwf	SetDisplay@d1
  4119  0BEC                     l2933:	
  4120                           
  4121                           ;main.c: 380: void SetDisplay(char d1, char d2, char d3, char value);main.c: 381: {;main
      +                          .c: 382:     PORTAbits.RA2 = d1;
  4122  0BEC  0C27               	rrf	SetDisplay@d1,w
  4123  0BED  1C03               	skipc
  4124  0BEE  1105               	bcf	5,2	;volatile
  4125  0BEF  1803               	skipnc
  4126  0BF0  1505               	bsf	5,2	;volatile
  4127                           
  4128                           ;main.c: 383:     PORTAbits.RA3 = d2;
  4129  0BF1  0C24               	rrf	SetDisplay@d2,w
  4130  0BF2  1C03               	skipc
  4131  0BF3  1185               	bcf	5,3	;volatile
  4132  0BF4  1803               	skipnc
  4133  0BF5  1585               	bsf	5,3	;volatile
  4134                           
  4135                           ;main.c: 384:     PORTAbits.RA4 = d3;
  4136  0BF6  0C25               	rrf	SetDisplay@d3,w
  4137  0BF7  1C03               	skipc
  4138  0BF8  1205               	bcf	5,4	;volatile
  4139  0BF9  1803               	skipnc
  4140  0BFA  1605               	bsf	5,4	;volatile
  4141  0BFB                     l2935:	
  4142                           
  4143                           ;main.c: 385:     PORTD = value;
  4144  0BFB  0826               	movf	SetDisplay@value,w
  4145  0BFC  0088               	movwf	8	;volatile
  4146  0BFD                     l314:	
  4147  0BFD  0008               	return
  4148  0BFE                     __end_of_SetDisplay:	
  4149                           
  4150                           	psect	text13
  4151  0F92                     __ptext13:	
  4152 ;; *************** function _SetReceivedTimes *****************
  4153 ;; Defined at:
  4154 ;;		line 78 in file "./CustomLib/TrafficLight.h"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  _dataFromGat    1    wreg     PTR unsigned char 
  4157 ;;		 -> dataFromGateway(15), 
  4158 ;;  _semafori       1   12[BANK0 ] PTR PTR struct .
  4159 ;;		 -> Semafori(16), 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  _dataFromGat    1   23[BANK0 ] PTR unsigned char 
  4162 ;;		 -> dataFromGateway(15), 
  4163 ;;  index           1   24[BANK0 ] unsigned char 
  4164 ;;  colorId         1   22[BANK0 ] unsigned char 
  4165 ;;  semaforoId      1   21[BANK0 ] unsigned char 
  4166 ;;  i               1   25[BANK0 ] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4176 ;;      Params:         0       1       0       0       0
  4177 ;;      Locals:         0       5       0       0       0
  4178 ;;      Temps:          0       8       0       0       0
  4179 ;;      Totals:         0      14       0       0       0
  4180 ;;Total ram usage:       14 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    4
  4183 ;; This function calls:
  4184 ;;		_GetTime
  4185 ;;		___bmul
  4186 ;; This function is called by:
  4187 ;;		_main
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           
  4192                           ;psect for function _SetReceivedTimes
  4193  0F92                     _SetReceivedTimes:	
  4194                           
  4195                           ;incstack = 0
  4196                           ; Regs used in _SetReceivedTimes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4197                           ;SetReceivedTimes@_dataFromGateway stored from wreg
  4198  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4199  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4200  0F94  00B7               	movwf	SetReceivedTimes@_dataFromGateway
  4201  0F95                     l3163:	
  4202                           
  4203                           ;./CustomLib/TrafficLight.h: 78: void SetReceivedTimes(ProtocolBytes _dataFromGateway, _
      +                          Semafori _semafori);./CustomLib/TrafficLight.h: 79: {;./CustomLib/TrafficLight.h: 80:   
      +                                        for (unsigned char i = 0; i < 3; i++)
  4204  0F95  01B9               	clrf	SetReceivedTimes@i
  4205  0F96                     l3165:	
  4206  0F96  3003               	movlw	3
  4207  0F97  0239               	subwf	SetReceivedTimes@i,w
  4208  0F98  1C03               	skipc
  4209  0F99  2F9B               	goto	u2681
  4210  0F9A  2F9C               	goto	u2680
  4211  0F9B                     u2681:	
  4212  0F9B  2F9D               	goto	l3169
  4213  0F9C                     u2680:	
  4214  0F9C  2FFF               	goto	l167
  4215  0F9D                     l3169:	
  4216                           
  4217                           ;./CustomLib/TrafficLight.h: 81:                 {;./CustomLib/TrafficLight.h: 82:      
      +                                         unsigned char index = i * 5;
  4218  0F9D  3005               	movlw	5
  4219  0F9E  00AD               	movwf	??_SetReceivedTimes
  4220  0F9F  082D               	movf	??_SetReceivedTimes,w
  4221  0FA0  00A4               	movwf	___bmul@multiplicand
  4222  0FA1  0839               	movf	SetReceivedTimes@i,w
  4223  0FA2  120A  158A  23FE  120A  158A  	fcall	___bmul
  4224  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  4225  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  4226  0FA9  00AE               	movwf	??_SetReceivedTimes+1
  4227  0FAA  082E               	movf	??_SetReceivedTimes+1,w
  4228  0FAB  00B8               	movwf	SetReceivedTimes@index
  4229  0FAC                     l3171:	
  4230                           
  4231                           ;./CustomLib/TrafficLight.h: 83:                     unsigned char semaforoId = (_dataFr
      +                          omGateway[index] >> 1) & 0x0F;
  4232  0FAC  0838               	movf	SetReceivedTimes@index,w
  4233  0FAD  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4234  0FAE  00AD               	movwf	??_SetReceivedTimes
  4235  0FAF  082D               	movf	??_SetReceivedTimes,w
  4236  0FB0  0084               	movwf	4
  4237  0FB1  1383               	bcf	3,7	;select IRP bank0
  4238  0FB2  0800               	movf	0,w
  4239  0FB3  00AE               	movwf	??_SetReceivedTimes+1
  4240  0FB4  1003               	clrc
  4241  0FB5  0C2E               	rrf	??_SetReceivedTimes+1,w
  4242  0FB6  390F               	andlw	15
  4243  0FB7  00AF               	movwf	??_SetReceivedTimes+2
  4244  0FB8  082F               	movf	??_SetReceivedTimes+2,w
  4245  0FB9  00B5               	movwf	SetReceivedTimes@semaforoId
  4246  0FBA                     l3173:	
  4247                           
  4248                           ;./CustomLib/TrafficLight.h: 84:                     unsigned char colorId = ((_dataFrom
      +                          Gateway[index] >> 5) & 0x03) - 1;
  4249  0FBA  0838               	movf	SetReceivedTimes@index,w
  4250  0FBB  0737               	addwf	SetReceivedTimes@_dataFromGateway,w
  4251  0FBC  00AD               	movwf	??_SetReceivedTimes
  4252  0FBD  082D               	movf	??_SetReceivedTimes,w
  4253  0FBE  0084               	movwf	4
  4254  0FBF  0800               	movf	0,w
  4255  0FC0  00AE               	movwf	??_SetReceivedTimes+1
  4256  0FC1  3005               	movlw	5
  4257  0FC2                     u2695:	
  4258  0FC2  1003               	clrc
  4259  0FC3  0CAE               	rrf	??_SetReceivedTimes+1,f
  4260  0FC4  3EFF               	addlw	-1
  4261  0FC5  1D03               	skipz
  4262  0FC6  2FC2               	goto	u2695
  4263  0FC7  082E               	movf	??_SetReceivedTimes+1,w
  4264  0FC8  3903               	andlw	3
  4265  0FC9  3EFF               	addlw	255
  4266  0FCA  00AF               	movwf	??_SetReceivedTimes+2
  4267  0FCB  082F               	movf	??_SetReceivedTimes+2,w
  4268  0FCC  00B6               	movwf	SetReceivedTimes@colorId
  4269  0FCD                     l3175:	
  4270                           
  4271                           ;./CustomLib/TrafficLight.h: 86:                     (*(_semafori)[semaforoId]).new_time
      +                          s[colorId]=GetTime(index, _dataFromGateway);
  4272  0FCD  0837               	movf	SetReceivedTimes@_dataFromGateway,w
  4273  0FCE  00AD               	movwf	??_SetReceivedTimes
  4274  0FCF  082D               	movf	??_SetReceivedTimes,w
  4275  0FD0  00A4               	movwf	GetTime@_dataFromGateway
  4276  0FD1  0838               	movf	SetReceivedTimes@index,w
  4277  0FD2  120A  158A  24D1  120A  158A  	fcall	_GetTime
  4278  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0FD9  0835               	movf	SetReceivedTimes@semaforoId,w
  4281  0FDA  00AE               	movwf	??_SetReceivedTimes+1
  4282  0FDB  072E               	addwf	??_SetReceivedTimes+1,w
  4283  0FDC  072C               	addwf	SetReceivedTimes@_semafori,w
  4284  0FDD  00AF               	movwf	??_SetReceivedTimes+2
  4285  0FDE  082F               	movf	??_SetReceivedTimes+2,w
  4286  0FDF  0084               	movwf	4
  4287  0FE0  1383               	bcf	3,7	;select IRP bank0
  4288  0FE1  0800               	movf	0,w
  4289  0FE2  00B0               	movwf	??_SetReceivedTimes+3
  4290  0FE3  0A84               	incf	4,f
  4291  0FE4  0800               	movf	0,w
  4292  0FE5  00B1               	movwf	??_SetReceivedTimes+4
  4293  0FE6  0836               	movf	SetReceivedTimes@colorId,w
  4294  0FE7  00B2               	movwf	??_SetReceivedTimes+5
  4295  0FE8  0732               	addwf	??_SetReceivedTimes+5,w
  4296  0FE9  3E06               	addlw	6
  4297  0FEA  0730               	addwf	??_SetReceivedTimes+3,w
  4298  0FEB  00B3               	movwf	??_SetReceivedTimes+6
  4299  0FEC  0831               	movf	??_SetReceivedTimes+4,w
  4300  0FED  1803               	skipnc
  4301  0FEE  3E01               	addlw	1
  4302  0FEF  00B4               	movwf	??_SetReceivedTimes+7
  4303  0FF0  0833               	movf	??_SetReceivedTimes+6,w
  4304  0FF1  0084               	movwf	4
  4305  0FF2  1783               	bsf	3,7
  4306  0FF3  1C34               	btfss	??_SetReceivedTimes+7,0
  4307  0FF4  1383               	bcf	3,7
  4308  0FF5  0824               	movf	?_GetTime,w
  4309  0FF6  0080               	movwf	0
  4310  0FF7  0A84               	incf	4,f
  4311  0FF8  0825               	movf	?_GetTime+1,w
  4312  0FF9  0080               	movwf	0
  4313  0FFA                     l3177:	
  4314                           
  4315                           ;./CustomLib/TrafficLight.h: 87:                 }
  4316  0FFA  3001               	movlw	1
  4317  0FFB  00AD               	movwf	??_SetReceivedTimes
  4318  0FFC  082D               	movf	??_SetReceivedTimes,w
  4319  0FFD  07B9               	addwf	SetReceivedTimes@i,f
  4320  0FFE  2F96               	goto	l3165
  4321  0FFF                     l167:	
  4322  0FFF  0008               	return
  4323  1000                     __end_of_SetReceivedTimes:	
  4324                           
  4325                           	psect	text14
  4326  0BFE                     __ptext14:	
  4327 ;; *************** function ___bmul *****************
  4328 ;; Defined at:
  4329 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  multiplier      1    wreg     unsigned char 
  4332 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4335 ;;  product         1    6[BANK0 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      unsigned char 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4345 ;;      Params:         0       1       0       0       0
  4346 ;;      Locals:         0       2       0       0       0
  4347 ;;      Temps:          0       1       0       0       0
  4348 ;;      Totals:         0       4       0       0       0
  4349 ;;Total ram usage:        4 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    3
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_SetReceivedTimes
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function ___bmul
  4361  0BFE                     ___bmul:	
  4362                           
  4363                           ;incstack = 0
  4364                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4365                           ;___bmul@multiplier stored from wreg
  4366  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  4367  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  4368  0C00  00A7               	movwf	___bmul@multiplier
  4369  0C01                     l2951:	
  4370  0C01  01A6               	clrf	___bmul@product
  4371  0C02                     l2953:	
  4372  0C02  1C27               	btfss	___bmul@multiplier,0
  4373  0C03  2C05               	goto	u2311
  4374  0C04  2C06               	goto	u2310
  4375  0C05                     u2311:	
  4376  0C05  2C0A               	goto	l2957
  4377  0C06                     u2310:	
  4378  0C06                     l2955:	
  4379  0C06  0824               	movf	___bmul@multiplicand,w
  4380  0C07  00A5               	movwf	??___bmul
  4381  0C08  0825               	movf	??___bmul,w
  4382  0C09  07A6               	addwf	___bmul@product,f
  4383  0C0A                     l2957:	
  4384  0C0A  1003               	clrc
  4385  0C0B  0DA4               	rlf	___bmul@multiplicand,f
  4386  0C0C                     l2959:	
  4387  0C0C  1003               	clrc
  4388  0C0D  0CA7               	rrf	___bmul@multiplier,f
  4389  0C0E  0827               	movf	___bmul@multiplier,w
  4390  0C0F  1D03               	btfss	3,2
  4391  0C10  2C12               	goto	u2321
  4392  0C11  2C13               	goto	u2320
  4393  0C12                     u2321:	
  4394  0C12  2C02               	goto	l2953
  4395  0C13                     u2320:	
  4396  0C13                     l2961:	
  4397  0C13  0826               	movf	___bmul@product,w
  4398  0C14                     l473:	
  4399  0C14  0008               	return
  4400  0C15                     __end_of___bmul:	
  4401                           
  4402                           	psect	text15
  4403  0CD1                     __ptext15:	
  4404 ;; *************** function _GetTime *****************
  4405 ;; Defined at:
  4406 ;;		line 29 in file "./CustomLib/TrafficLight.h"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  index           1    wreg     unsigned char 
  4409 ;;  _dataFromGat    1    4[BANK0 ] PTR unsigned char 
  4410 ;;		 -> dataFromGateway(15), 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  index           1    8[BANK0 ] unsigned char 
  4413 ;;  tmp             2   10[BANK0 ] int 
  4414 ;;  shortInt        1    9[BANK0 ] struct .
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2    4[BANK0 ] int 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4424 ;;      Params:         0       2       0       0       0
  4425 ;;      Locals:         0       4       0       0       0
  4426 ;;      Temps:          0       2       0       0       0
  4427 ;;      Totals:         0       8       0       0       0
  4428 ;;Total ram usage:        8 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    3
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_SetReceivedTimes
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function _GetTime
  4440  0CD1                     _GetTime:	
  4441                           
  4442                           ;incstack = 0
  4443                           ; Regs used in _GetTime: [wreg-fsr0h+status,2+status,0+btemp+1]
  4444                           ;GetTime@index stored from wreg
  4445  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  4446  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  4447  0CD3  00A8               	movwf	GetTime@index
  4448  0CD4                     l2915:	
  4449                           
  4450                           ;./CustomLib/TrafficLight.h: 29: int GetTime(unsigned char index, ProtocolBytes _dataFro
      +                          mGateway);./CustomLib/TrafficLight.h: 30: {;./CustomLib/TrafficLight.h: 31:     int tmp;
      +                          ;./CustomLib/TrafficLight.h: 35:     } shortInt;;./CustomLib/TrafficLight.h: 37:     sho
      +                          rtInt.Val = _dataFromGateway[index + 3] & 0x7F;
  4451  0CD4  0828               	movf	GetTime@index,w
  4452  0CD5  0724               	addwf	GetTime@_dataFromGateway,w
  4453  0CD6  00A6               	movwf	??_GetTime
  4454  0CD7  0826               	movf	??_GetTime,w
  4455  0CD8  3E03               	addlw	3
  4456  0CD9  0084               	movwf	4
  4457  0CDA  307F               	movlw	127
  4458  0CDB  1383               	bcf	3,7	;select IRP bank0
  4459  0CDC  0500               	andwf	0,w
  4460  0CDD  00A7               	movwf	??_GetTime+1
  4461  0CDE  0829               	movf	GetTime@shortInt,w
  4462  0CDF  0627               	xorwf	??_GetTime+1,w
  4463  0CE0  3980               	andlw	-128
  4464  0CE1  0627               	xorwf	??_GetTime+1,w
  4465  0CE2  00A9               	movwf	GetTime@shortInt
  4466  0CE3                     l2917:	
  4467                           
  4468                           ;./CustomLib/TrafficLight.h: 38:     tmp = shortInt.Val;
  4469  0CE3  0829               	movf	GetTime@shortInt,w
  4470  0CE4  397F               	andlw	127
  4471  0CE5  00A6               	movwf	??_GetTime
  4472  0CE6  01A7               	clrf	??_GetTime+1
  4473  0CE7  0826               	movf	??_GetTime,w
  4474  0CE8  00AA               	movwf	GetTime@tmp
  4475  0CE9  0827               	movf	??_GetTime+1,w
  4476  0CEA  00AB               	movwf	GetTime@tmp+1
  4477  0CEB                     l2919:	
  4478                           
  4479                           ;./CustomLib/TrafficLight.h: 39:     tmp = (tmp << 7) & 0x80;
  4480  0CEB  082B               	movf	GetTime@tmp+1,w
  4481  0CEC  00A7               	movwf	??_GetTime+1
  4482  0CED  082A               	movf	GetTime@tmp,w
  4483  0CEE  00A6               	movwf	??_GetTime
  4484  0CEF  3007               	movlw	7
  4485  0CF0  00FF               	movwf	btemp+1
  4486  0CF1                     u2255:	
  4487  0CF1  1003               	clrc
  4488  0CF2  0DA6               	rlf	??_GetTime,f
  4489  0CF3  0DA7               	rlf	??_GetTime+1,f
  4490  0CF4  0BFF               	decfsz	btemp+1,f
  4491  0CF5  2CF1               	goto	u2255
  4492  0CF6  3080               	movlw	128
  4493  0CF7  0526               	andwf	??_GetTime,w
  4494  0CF8  00AA               	movwf	GetTime@tmp
  4495  0CF9  3000               	movlw	0
  4496  0CFA  0527               	andwf	??_GetTime+1,w
  4497  0CFB  00AB               	movwf	GetTime@tmp+1
  4498  0CFC                     l2921:	
  4499                           
  4500                           ;./CustomLib/TrafficLight.h: 41:     shortInt.Val = _dataFromGateway[index + 2] & 0x7F;
  4501  0CFC  0828               	movf	GetTime@index,w
  4502  0CFD  0724               	addwf	GetTime@_dataFromGateway,w
  4503  0CFE  00A6               	movwf	??_GetTime
  4504  0CFF  0826               	movf	??_GetTime,w
  4505  0D00  3E02               	addlw	2
  4506  0D01  0084               	movwf	4
  4507  0D02  307F               	movlw	127
  4508  0D03  0500               	andwf	0,w
  4509  0D04  00A7               	movwf	??_GetTime+1
  4510  0D05  0829               	movf	GetTime@shortInt,w
  4511  0D06  0627               	xorwf	??_GetTime+1,w
  4512  0D07  3980               	andlw	-128
  4513  0D08  0627               	xorwf	??_GetTime+1,w
  4514  0D09  00A9               	movwf	GetTime@shortInt
  4515  0D0A                     l2923:	
  4516                           
  4517                           ;./CustomLib/TrafficLight.h: 42:     tmp = tmp | shortInt.Val;
  4518  0D0A  0829               	movf	GetTime@shortInt,w
  4519  0D0B  397F               	andlw	127
  4520  0D0C  00A6               	movwf	??_GetTime
  4521  0D0D  082A               	movf	GetTime@tmp,w
  4522  0D0E  0426               	iorwf	??_GetTime,w
  4523  0D0F  00AA               	movwf	GetTime@tmp
  4524  0D10  082B               	movf	GetTime@tmp+1,w
  4525  0D11  00AB               	movwf	GetTime@tmp+1
  4526  0D12                     l2925:	
  4527                           
  4528                           ;./CustomLib/TrafficLight.h: 44:     return tmp;
  4529  0D12  082B               	movf	GetTime@tmp+1,w
  4530  0D13  00A5               	movwf	?_GetTime+1
  4531  0D14  082A               	movf	GetTime@tmp,w
  4532  0D15  00A4               	movwf	?_GetTime
  4533  0D16                     l149:	
  4534  0D16  0008               	return
  4535  0D17                     __end_of_GetTime:	
  4536                           
  4537                           	psect	text16
  4538  0551                     __ptext16:	
  4539 ;; *************** function _SetDefaultTimers *****************
  4540 ;; Defined at:
  4541 ;;		line 49 in file "./CustomLib/TrafficLight.h"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  rosso           2    4[BANK0 ] int 
  4544 ;;  verde           2    6[BANK0 ] int 
  4545 ;;  giallo          2    8[BANK0 ] int 
  4546 ;;  _semafori       1   10[BANK0 ] PTR PTR struct .
  4547 ;;		 -> Semafori(16), 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  i               1   18[BANK0 ] unsigned char 
  4550 ;;  l               1   19[BANK0 ] unsigned char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4560 ;;      Params:         0       7       0       0       0
  4561 ;;      Locals:         0       2       0       0       0
  4562 ;;      Temps:          0       7       0       0       0
  4563 ;;      Totals:         0      16       0       0       0
  4564 ;;Total ram usage:       16 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    3
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_main
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           
  4575                           ;psect for function _SetDefaultTimers
  4576  0551                     _SetDefaultTimers:	
  4577  0551                     l3125:	
  4578                           ;incstack = 0
  4579                           ; Regs used in _SetDefaultTimers: [wreg-fsr0h+status,2+status,0]
  4580                           
  4581                           
  4582                           ;./CustomLib/TrafficLight.h: 49: void SetDefaultTimers(int rosso, int verde, int giallo,
      +                           _Semafori _semafori);./CustomLib/TrafficLight.h: 50: {;./CustomLib/TrafficLight.h: 51: 
      +                              for (unsigned char l = 0; l < 16; l++)
  4583  0551  1283               	bcf	3,5	;RP0=0, select bank0
  4584  0552  1303               	bcf	3,6	;RP1=0, select bank0
  4585  0553  01B3               	clrf	SetDefaultTimers@l
  4586  0554                     l3131:	
  4587                           
  4588                           ;./CustomLib/TrafficLight.h: 52:     {;./CustomLib/TrafficLight.h: 53:         if(l<2)
  4589  0554  3002               	movlw	2
  4590  0555  0233               	subwf	SetDefaultTimers@l,w
  4591  0556  1803               	skipnc
  4592  0557  2D59               	goto	u2651
  4593  0558  2D5A               	goto	u2650
  4594  0559                     u2651:	
  4595  0559  2D78               	goto	l3135
  4596  055A                     u2650:	
  4597  055A                     l3133:	
  4598                           
  4599                           ;./CustomLib/TrafficLight.h: 54:         {;./CustomLib/TrafficLight.h: 55:             (
      +                          *(_semafori)[l]).lux_select=l;
  4600  055A  0833               	movf	SetDefaultTimers@l,w
  4601  055B  00AB               	movwf	??_SetDefaultTimers
  4602  055C  0833               	movf	SetDefaultTimers@l,w
  4603  055D  00AC               	movwf	??_SetDefaultTimers+1
  4604  055E  072C               	addwf	??_SetDefaultTimers+1,w
  4605  055F  072A               	addwf	SetDefaultTimers@_semafori,w
  4606  0560  00AD               	movwf	??_SetDefaultTimers+2
  4607  0561  082D               	movf	??_SetDefaultTimers+2,w
  4608  0562  0084               	movwf	4
  4609  0563  1383               	bcf	3,7	;select IRP bank0
  4610  0564  0800               	movf	0,w
  4611  0565  00AE               	movwf	??_SetDefaultTimers+3
  4612  0566  0A84               	incf	4,f
  4613  0567  0800               	movf	0,w
  4614  0568  00AF               	movwf	??_SetDefaultTimers+4
  4615  0569  082E               	movf	??_SetDefaultTimers+3,w
  4616  056A  3E0C               	addlw	12
  4617  056B  00B0               	movwf	??_SetDefaultTimers+5
  4618  056C  082F               	movf	??_SetDefaultTimers+4,w
  4619  056D  1803               	skipnc
  4620  056E  3E01               	addlw	1
  4621  056F  3E00               	addlw	0
  4622  0570  00B1               	movwf	??_SetDefaultTimers+6
  4623  0571  0830               	movf	??_SetDefaultTimers+5,w
  4624  0572  0084               	movwf	4
  4625  0573  1783               	bsf	3,7
  4626  0574  1C31               	btfss	??_SetDefaultTimers+6,0
  4627  0575  1383               	bcf	3,7
  4628  0576  082B               	movf	??_SetDefaultTimers,w
  4629  0577  0080               	movwf	0
  4630  0578                     l3135:	
  4631                           
  4632                           ;./CustomLib/TrafficLight.h: 58:         for (unsigned char i = 0; i < 3; i++)
  4633  0578  01B2               	clrf	SetDefaultTimers@i
  4634  0579  2DDD               	goto	l3149
  4635  057A                     l3141:	
  4636                           
  4637                           ;./CustomLib/TrafficLight.h: 63:                 (*(_semafori)[l]).times[i] = rosso;
  4638  057A  0833               	movf	SetDefaultTimers@l,w
  4639  057B  00AB               	movwf	??_SetDefaultTimers
  4640  057C  072B               	addwf	??_SetDefaultTimers,w
  4641  057D  072A               	addwf	SetDefaultTimers@_semafori,w
  4642  057E  00AC               	movwf	??_SetDefaultTimers+1
  4643  057F  082C               	movf	??_SetDefaultTimers+1,w
  4644  0580  0084               	movwf	4
  4645  0581  1383               	bcf	3,7	;select IRP bank0
  4646  0582  0800               	movf	0,w
  4647  0583  00AD               	movwf	??_SetDefaultTimers+2
  4648  0584  0A84               	incf	4,f
  4649  0585  0800               	movf	0,w
  4650  0586  00AE               	movwf	??_SetDefaultTimers+3
  4651  0587  0832               	movf	SetDefaultTimers@i,w
  4652  0588  00AF               	movwf	??_SetDefaultTimers+4
  4653  0589  072F               	addwf	??_SetDefaultTimers+4,w
  4654  058A  072D               	addwf	??_SetDefaultTimers+2,w
  4655  058B  00B0               	movwf	??_SetDefaultTimers+5
  4656  058C  082E               	movf	??_SetDefaultTimers+3,w
  4657  058D  1803               	skipnc
  4658  058E  3E01               	addlw	1
  4659  058F  00B1               	movwf	??_SetDefaultTimers+6
  4660  0590  0830               	movf	??_SetDefaultTimers+5,w
  4661  0591  0084               	movwf	4
  4662  0592  1783               	bsf	3,7
  4663  0593  1C31               	btfss	??_SetDefaultTimers+6,0
  4664  0594  1383               	bcf	3,7
  4665  0595  0824               	movf	SetDefaultTimers@rosso,w
  4666  0596  0080               	movwf	0
  4667  0597  0A84               	incf	4,f
  4668  0598  0825               	movf	SetDefaultTimers@rosso+1,w
  4669  0599  0080               	movwf	0
  4670                           
  4671                           ;./CustomLib/TrafficLight.h: 64:                 break;
  4672  059A  2DF0               	goto	l3151
  4673  059B                     l3143:	
  4674                           
  4675                           ;./CustomLib/TrafficLight.h: 66:                 (*(_semafori)[l]).times[i] = verde;
  4676  059B  0833               	movf	SetDefaultTimers@l,w
  4677  059C  00AB               	movwf	??_SetDefaultTimers
  4678  059D  072B               	addwf	??_SetDefaultTimers,w
  4679  059E  072A               	addwf	SetDefaultTimers@_semafori,w
  4680  059F  00AC               	movwf	??_SetDefaultTimers+1
  4681  05A0  082C               	movf	??_SetDefaultTimers+1,w
  4682  05A1  0084               	movwf	4
  4683  05A2  1383               	bcf	3,7	;select IRP bank0
  4684  05A3  0800               	movf	0,w
  4685  05A4  00AD               	movwf	??_SetDefaultTimers+2
  4686  05A5  0A84               	incf	4,f
  4687  05A6  0800               	movf	0,w
  4688  05A7  00AE               	movwf	??_SetDefaultTimers+3
  4689  05A8  0832               	movf	SetDefaultTimers@i,w
  4690  05A9  00AF               	movwf	??_SetDefaultTimers+4
  4691  05AA  072F               	addwf	??_SetDefaultTimers+4,w
  4692  05AB  072D               	addwf	??_SetDefaultTimers+2,w
  4693  05AC  00B0               	movwf	??_SetDefaultTimers+5
  4694  05AD  082E               	movf	??_SetDefaultTimers+3,w
  4695  05AE  1803               	skipnc
  4696  05AF  3E01               	addlw	1
  4697  05B0  00B1               	movwf	??_SetDefaultTimers+6
  4698  05B1  0830               	movf	??_SetDefaultTimers+5,w
  4699  05B2  0084               	movwf	4
  4700  05B3  1783               	bsf	3,7
  4701  05B4  1C31               	btfss	??_SetDefaultTimers+6,0
  4702  05B5  1383               	bcf	3,7
  4703  05B6  0826               	movf	SetDefaultTimers@verde,w
  4704  05B7  0080               	movwf	0
  4705  05B8  0A84               	incf	4,f
  4706  05B9  0827               	movf	SetDefaultTimers@verde+1,w
  4707  05BA  0080               	movwf	0
  4708                           
  4709                           ;./CustomLib/TrafficLight.h: 67:                 break;
  4710  05BB  2DF0               	goto	l3151
  4711  05BC                     l3145:	
  4712                           
  4713                           ;./CustomLib/TrafficLight.h: 69:                 (*(_semafori)[l]).times[i] = giallo;
  4714  05BC  0833               	movf	SetDefaultTimers@l,w
  4715  05BD  00AB               	movwf	??_SetDefaultTimers
  4716  05BE  072B               	addwf	??_SetDefaultTimers,w
  4717  05BF  072A               	addwf	SetDefaultTimers@_semafori,w
  4718  05C0  00AC               	movwf	??_SetDefaultTimers+1
  4719  05C1  082C               	movf	??_SetDefaultTimers+1,w
  4720  05C2  0084               	movwf	4
  4721  05C3  1383               	bcf	3,7	;select IRP bank0
  4722  05C4  0800               	movf	0,w
  4723  05C5  00AD               	movwf	??_SetDefaultTimers+2
  4724  05C6  0A84               	incf	4,f
  4725  05C7  0800               	movf	0,w
  4726  05C8  00AE               	movwf	??_SetDefaultTimers+3
  4727  05C9  0832               	movf	SetDefaultTimers@i,w
  4728  05CA  00AF               	movwf	??_SetDefaultTimers+4
  4729  05CB  072F               	addwf	??_SetDefaultTimers+4,w
  4730  05CC  072D               	addwf	??_SetDefaultTimers+2,w
  4731  05CD  00B0               	movwf	??_SetDefaultTimers+5
  4732  05CE  082E               	movf	??_SetDefaultTimers+3,w
  4733  05CF  1803               	skipnc
  4734  05D0  3E01               	addlw	1
  4735  05D1  00B1               	movwf	??_SetDefaultTimers+6
  4736  05D2  0830               	movf	??_SetDefaultTimers+5,w
  4737  05D3  0084               	movwf	4
  4738  05D4  1783               	bsf	3,7
  4739  05D5  1C31               	btfss	??_SetDefaultTimers+6,0
  4740  05D6  1383               	bcf	3,7
  4741  05D7  0828               	movf	SetDefaultTimers@giallo,w
  4742  05D8  0080               	movwf	0
  4743  05D9  0A84               	incf	4,f
  4744  05DA  0829               	movf	SetDefaultTimers@giallo+1,w
  4745  05DB  0080               	movwf	0
  4746                           
  4747                           ;./CustomLib/TrafficLight.h: 70:                 break;
  4748  05DC  2DF0               	goto	l3151
  4749  05DD                     l3149:	
  4750  05DD  0832               	movf	SetDefaultTimers@i,w
  4751  05DE  00AB               	movwf	??_SetDefaultTimers
  4752  05DF  01AC               	clrf	??_SetDefaultTimers+1
  4753                           
  4754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4755                           ; Switch size 1, requested type "simple"
  4756                           ; Number of cases is 1, Range of values is 0 to 0
  4757                           ; switch strategies available:
  4758                           ; Name         Instructions Cycles
  4759                           ; simple_byte            4     3 (average)
  4760                           ; direct_byte           11     8 (fixed)
  4761                           ; jumptable            260     6 (fixed)
  4762                           ;	Chosen strategy is simple_byte
  4763  05E0  082C               	movf	??_SetDefaultTimers+1,w
  4764  05E1  3A00               	xorlw	0	; case 0
  4765  05E2  1903               	skipnz
  4766  05E3  2DE5               	goto	l3685
  4767  05E4  2DF0               	goto	l3151
  4768  05E5                     l3685:	
  4769                           
  4770                           ; Switch size 1, requested type "simple"
  4771                           ; Number of cases is 3, Range of values is 0 to 2
  4772                           ; switch strategies available:
  4773                           ; Name         Instructions Cycles
  4774                           ; simple_byte           10     6 (average)
  4775                           ; direct_byte           17     8 (fixed)
  4776                           ; jumptable            260     6 (fixed)
  4777                           ;	Chosen strategy is simple_byte
  4778  05E5  082B               	movf	??_SetDefaultTimers,w
  4779  05E6  3A00               	xorlw	0	; case 0
  4780  05E7  1903               	skipnz
  4781  05E8  2D7A               	goto	l3141
  4782  05E9  3A01               	xorlw	1	; case 1
  4783  05EA  1903               	skipnz
  4784  05EB  2D9B               	goto	l3143
  4785  05EC  3A03               	xorlw	3	; case 2
  4786  05ED  1903               	skipnz
  4787  05EE  2DBC               	goto	l3145
  4788  05EF  2DF0               	goto	l3151
  4789  05F0                     l3151:	
  4790                           
  4791                           ;./CustomLib/TrafficLight.h: 72:         }
  4792  05F0  3001               	movlw	1
  4793  05F1  00AB               	movwf	??_SetDefaultTimers
  4794  05F2  082B               	movf	??_SetDefaultTimers,w
  4795  05F3  07B2               	addwf	SetDefaultTimers@i,f
  4796  05F4                     l3153:	
  4797  05F4  3003               	movlw	3
  4798  05F5  0232               	subwf	SetDefaultTimers@i,w
  4799  05F6  1C03               	skipc
  4800  05F7  2DF9               	goto	u2661
  4801  05F8  2DFA               	goto	u2660
  4802  05F9                     u2661:	
  4803  05F9  2DDD               	goto	l3149
  4804  05FA                     u2660:	
  4805  05FA                     l3155:	
  4806                           
  4807                           ;./CustomLib/TrafficLight.h: 73:     }
  4808  05FA  3001               	movlw	1
  4809  05FB  00AB               	movwf	??_SetDefaultTimers
  4810  05FC  082B               	movf	??_SetDefaultTimers,w
  4811  05FD  07B3               	addwf	SetDefaultTimers@l,f
  4812  05FE                     l3157:	
  4813  05FE  3010               	movlw	16
  4814  05FF  0233               	subwf	SetDefaultTimers@l,w
  4815  0600  1C03               	skipc
  4816  0601  2E03               	goto	u2671
  4817  0602  2E04               	goto	u2670
  4818  0603                     u2671:	
  4819  0603  2D54               	goto	l3131
  4820  0604                     u2670:	
  4821  0604                     l162:	
  4822  0604  0008               	return
  4823  0605                     __end_of_SetDefaultTimers:	
  4824                           
  4825                           	psect	text17
  4826  06A2                     __ptext17:	
  4827 ;; *************** function _GetDigits *****************
  4828 ;; Defined at:
  4829 ;;		line 29 in file "./CustomLib/Conversions.h"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  centinaia       1    wreg     PTR unsigned char 
  4832 ;;		 -> centinaia(1), 
  4833 ;;  decine          1   20[BANK0 ] PTR unsigned char 
  4834 ;;		 -> decine(1), 
  4835 ;;  unita           1   21[BANK0 ] PTR unsigned char 
  4836 ;;		 -> unita(1), 
  4837 ;;  Time            2   22[BANK0 ] int 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  centinaia       1   27[BANK0 ] PTR unsigned char 
  4840 ;;		 -> centinaia(1), 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4850 ;;      Params:         0       4       0       0       0
  4851 ;;      Locals:         0       3       0       0       0
  4852 ;;      Temps:          0       1       0       0       0
  4853 ;;      Totals:         0       8       0       0       0
  4854 ;;Total ram usage:        8 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    4
  4857 ;; This function calls:
  4858 ;;		___awdiv
  4859 ;;		___awmod
  4860 ;; This function is called by:
  4861 ;;		_main
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           
  4866                           ;psect for function _GetDigits
  4867  06A2                     _GetDigits:	
  4868                           
  4869                           ;incstack = 0
  4870                           ; Regs used in _GetDigits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4871                           ;GetDigits@centinaia stored from wreg
  4872  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  4873  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  4874  06A4  00BB               	movwf	GetDigits@centinaia
  4875  06A5                     l3091:	
  4876                           
  4877                           ;./CustomLib/Conversions.h: 29: void GetDigits(unsigned char *centinaia, unsigned char *
      +                          decine, unsigned char *unita, int Time);./CustomLib/Conversions.h: 30: {;./CustomLib/Con
      +                          versions.h: 31:     while(Time/1000>0)
  4878  06A5  2EBB               	goto	l3095
  4879  06A6                     l3093:	
  4880                           
  4881                           ;./CustomLib/Conversions.h: 32:     {;./CustomLib/Conversions.h: 33:         Time=Time/1
      +                          0;
  4882  06A6  300A               	movlw	10
  4883  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  4884  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  4885  06A9  00AB               	movwf	___awdiv@divisor
  4886  06AA  3000               	movlw	0
  4887  06AB  00AC               	movwf	___awdiv@divisor+1
  4888  06AC  0837               	movf	GetDigits@Time+1,w
  4889  06AD  00AE               	movwf	___awdiv@dividend+1
  4890  06AE  0836               	movf	GetDigits@Time,w
  4891  06AF  00AD               	movwf	___awdiv@dividend
  4892  06B0  120A  158A  2729  120A  118A  	fcall	___awdiv
  4893  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  4894  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  4895  06B7  082C               	movf	?___awdiv+1,w
  4896  06B8  00B7               	movwf	GetDigits@Time+1
  4897  06B9  082B               	movf	?___awdiv,w
  4898  06BA  00B6               	movwf	GetDigits@Time
  4899  06BB                     l3095:	
  4900                           
  4901                           ;./CustomLib/Conversions.h: 31:     while(Time/1000>0)
  4902  06BB  30E8               	movlw	232
  4903  06BC  00AB               	movwf	___awdiv@divisor
  4904  06BD  3003               	movlw	3
  4905  06BE  00AC               	movwf	___awdiv@divisor+1
  4906  06BF  0837               	movf	GetDigits@Time+1,w
  4907  06C0  00AE               	movwf	___awdiv@dividend+1
  4908  06C1  0836               	movf	GetDigits@Time,w
  4909  06C2  00AD               	movwf	___awdiv@dividend
  4910  06C3  120A  158A  2729  120A  118A  	fcall	___awdiv
  4911  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  4912  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  4913  06CA  082C               	movf	?___awdiv+1,w
  4914  06CB  3A80               	xorlw	128
  4915  06CC  00FF               	movwf	btemp+1
  4916  06CD  3080               	movlw	128
  4917  06CE  027F               	subwf	btemp+1,w
  4918  06CF  1D03               	skipz
  4919  06D0  2ED3               	goto	u2625
  4920  06D1  3001               	movlw	1
  4921  06D2  022B               	subwf	?___awdiv,w
  4922  06D3                     u2625:	
  4923  06D3  1803               	skipnc
  4924  06D4  2ED6               	goto	u2621
  4925  06D5  2ED7               	goto	u2620
  4926  06D6                     u2621:	
  4927  06D6  2EA6               	goto	l3093
  4928  06D7                     u2620:	
  4929  06D7                     l3097:	
  4930                           
  4931                           ;./CustomLib/Conversions.h: 36:     *centinaia = Time / 100;
  4932  06D7  3064               	movlw	100
  4933  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  4934  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  4935  06DA  00AB               	movwf	___awdiv@divisor
  4936  06DB  3000               	movlw	0
  4937  06DC  00AC               	movwf	___awdiv@divisor+1
  4938  06DD  0837               	movf	GetDigits@Time+1,w
  4939  06DE  00AE               	movwf	___awdiv@dividend+1
  4940  06DF  0836               	movf	GetDigits@Time,w
  4941  06E0  00AD               	movwf	___awdiv@dividend
  4942  06E1  120A  158A  2729  120A  118A  	fcall	___awdiv
  4943  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  4944  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  4945  06E8  082B               	movf	?___awdiv,w
  4946  06E9  00B8               	movwf	??_GetDigits
  4947  06EA  083B               	movf	GetDigits@centinaia,w
  4948  06EB  0084               	movwf	4
  4949  06EC  0838               	movf	??_GetDigits,w
  4950  06ED  1383               	bcf	3,7	;select IRP bank0
  4951  06EE  0080               	movwf	0
  4952                           
  4953                           ;./CustomLib/Conversions.h: 37:     *decine = (Time % 100) / 10;
  4954  06EF  300A               	movlw	10
  4955  06F0  00AB               	movwf	___awdiv@divisor
  4956  06F1  3000               	movlw	0
  4957  06F2  00AC               	movwf	___awdiv@divisor+1
  4958  06F3  0837               	movf	GetDigits@Time+1,w
  4959  06F4  00A7               	movwf	___awmod@dividend+1
  4960  06F5  0836               	movf	GetDigits@Time,w
  4961  06F6  00A6               	movwf	___awmod@dividend
  4962  06F7  3064               	movlw	100
  4963  06F8  00A4               	movwf	___awmod@divisor
  4964  06F9  3000               	movlw	0
  4965  06FA  00A5               	movwf	___awmod@divisor+1
  4966  06FB  120A  158A  260E  120A  118A  	fcall	___awmod
  4967  0700  1283               	bcf	3,5	;RP0=0, select bank0
  4968  0701  1303               	bcf	3,6	;RP1=0, select bank0
  4969  0702  0825               	movf	?___awmod+1,w
  4970  0703  00AE               	movwf	___awdiv@dividend+1
  4971  0704  0824               	movf	?___awmod,w
  4972  0705  00AD               	movwf	___awdiv@dividend
  4973  0706  120A  158A  2729  120A  118A  	fcall	___awdiv
  4974  070B  1283               	bcf	3,5	;RP0=0, select bank0
  4975  070C  1303               	bcf	3,6	;RP1=0, select bank0
  4976  070D  082B               	movf	?___awdiv,w
  4977  070E  00B8               	movwf	??_GetDigits
  4978  070F  0834               	movf	GetDigits@decine,w
  4979  0710  0084               	movwf	4
  4980  0711  0838               	movf	??_GetDigits,w
  4981  0712  1383               	bcf	3,7	;select IRP bank0
  4982  0713  0080               	movwf	0
  4983  0714                     l3099:	
  4984                           
  4985                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  4986  0714  0837               	movf	GetDigits@Time+1,w
  4987  0715  00A7               	movwf	___awmod@dividend+1
  4988  0716  0836               	movf	GetDigits@Time,w
  4989  0717  00A6               	movwf	___awmod@dividend
  4990  0718  3064               	movlw	100
  4991  0719  00A4               	movwf	___awmod@divisor
  4992  071A  3000               	movlw	0
  4993  071B  00A5               	movwf	___awmod@divisor+1
  4994  071C  120A  158A  260E  120A  118A  	fcall	___awmod
  4995  0721  1283               	bcf	3,5	;RP0=0, select bank0
  4996  0722  1303               	bcf	3,6	;RP1=0, select bank0
  4997  0723  0825               	movf	?___awmod+1,w
  4998  0724  00BA               	movwf	_GetDigits$1222+1
  4999  0725  0824               	movf	?___awmod,w
  5000  0726  00B9               	movwf	_GetDigits$1222
  5001  0727                     l3101:	
  5002                           
  5003                           ;./CustomLib/Conversions.h: 38:     *unita = (Time % 100) % 10;
  5004  0727  300A               	movlw	10
  5005  0728  00A4               	movwf	___awmod@divisor
  5006  0729  3000               	movlw	0
  5007  072A  00A5               	movwf	___awmod@divisor+1
  5008  072B  083A               	movf	_GetDigits$1222+1,w
  5009  072C  00A7               	movwf	___awmod@dividend+1
  5010  072D  0839               	movf	_GetDigits$1222,w
  5011  072E  00A6               	movwf	___awmod@dividend
  5012  072F  120A  158A  260E  120A  118A  	fcall	___awmod
  5013  0734  1283               	bcf	3,5	;RP0=0, select bank0
  5014  0735  1303               	bcf	3,6	;RP1=0, select bank0
  5015  0736  0824               	movf	?___awmod,w
  5016  0737  00B8               	movwf	??_GetDigits
  5017  0738  0835               	movf	GetDigits@unita,w
  5018  0739  0084               	movwf	4
  5019  073A  0838               	movf	??_GetDigits,w
  5020  073B  1383               	bcf	3,7	;select IRP bank0
  5021  073C  0080               	movwf	0
  5022  073D                     l98:	
  5023  073D  0008               	return
  5024  073E                     __end_of_GetDigits:	
  5025                           
  5026                           	psect	text18
  5027  0E0E                     __ptext18:	
  5028 ;; *************** function ___awmod *****************
  5029 ;; Defined at:
  5030 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  divisor         2    4[BANK0 ] int 
  5033 ;;  dividend        2    6[BANK0 ] int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  sign            1   10[BANK0 ] unsigned char 
  5036 ;;  counter         1    9[BANK0 ] unsigned char 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  2    4[BANK0 ] int 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5046 ;;      Params:         0       4       0       0       0
  5047 ;;      Locals:         0       2       0       0       0
  5048 ;;      Temps:          0       1       0       0       0
  5049 ;;      Totals:         0       7       0       0       0
  5050 ;;Total ram usage:        7 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    3
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_GetDigits
  5057 ;;		_ShowDigitsOnDisplay
  5058 ;;		_intToString
  5059 ;;		_ChangeTrafficLight
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function ___awmod
  5065  0E0E                     ___awmod:	
  5066  0E0E                     l3049:	
  5067                           ;incstack = 0
  5068                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5069                           
  5070  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  5071  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  5072  0E10  01AA               	clrf	___awmod@sign
  5073  0E11                     l3051:	
  5074  0E11  1FA7               	btfss	___awmod@dividend+1,7
  5075  0E12  2E14               	goto	u2531
  5076  0E13  2E15               	goto	u2530
  5077  0E14                     u2531:	
  5078  0E14  2E1C               	goto	l3057
  5079  0E15                     u2530:	
  5080  0E15                     l3053:	
  5081  0E15  09A6               	comf	___awmod@dividend,f
  5082  0E16  09A7               	comf	___awmod@dividend+1,f
  5083  0E17  0AA6               	incf	___awmod@dividend,f
  5084  0E18  1903               	skipnz
  5085  0E19  0AA7               	incf	___awmod@dividend+1,f
  5086  0E1A                     l3055:	
  5087  0E1A  01AA               	clrf	___awmod@sign
  5088  0E1B  0AAA               	incf	___awmod@sign,f
  5089  0E1C                     l3057:	
  5090  0E1C  1FA5               	btfss	___awmod@divisor+1,7
  5091  0E1D  2E1F               	goto	u2541
  5092  0E1E  2E20               	goto	u2540
  5093  0E1F                     u2541:	
  5094  0E1F  2E25               	goto	l3061
  5095  0E20                     u2540:	
  5096  0E20                     l3059:	
  5097  0E20  09A4               	comf	___awmod@divisor,f
  5098  0E21  09A5               	comf	___awmod@divisor+1,f
  5099  0E22  0AA4               	incf	___awmod@divisor,f
  5100  0E23  1903               	skipnz
  5101  0E24  0AA5               	incf	___awmod@divisor+1,f
  5102  0E25                     l3061:	
  5103  0E25  0824               	movf	___awmod@divisor,w
  5104  0E26  0425               	iorwf	___awmod@divisor+1,w
  5105  0E27  1903               	btfsc	3,2
  5106  0E28  2E2A               	goto	u2551
  5107  0E29  2E2B               	goto	u2550
  5108  0E2A                     u2551:	
  5109  0E2A  2E5A               	goto	l3079
  5110  0E2B                     u2550:	
  5111  0E2B                     l3063:	
  5112  0E2B  01A9               	clrf	___awmod@counter
  5113  0E2C  0AA9               	incf	___awmod@counter,f
  5114  0E2D  2E39               	goto	l3069
  5115  0E2E                     l3065:	
  5116  0E2E  3001               	movlw	1
  5117  0E2F                     u2565:	
  5118  0E2F  1003               	clrc
  5119  0E30  0DA4               	rlf	___awmod@divisor,f
  5120  0E31  0DA5               	rlf	___awmod@divisor+1,f
  5121  0E32  3EFF               	addlw	-1
  5122  0E33  1D03               	skipz
  5123  0E34  2E2F               	goto	u2565
  5124  0E35                     l3067:	
  5125  0E35  3001               	movlw	1
  5126  0E36  00A8               	movwf	??___awmod
  5127  0E37  0828               	movf	??___awmod,w
  5128  0E38  07A9               	addwf	___awmod@counter,f
  5129  0E39                     l3069:	
  5130  0E39  1FA5               	btfss	___awmod@divisor+1,7
  5131  0E3A  2E3C               	goto	u2571
  5132  0E3B  2E3D               	goto	u2570
  5133  0E3C                     u2571:	
  5134  0E3C  2E2E               	goto	l3065
  5135  0E3D                     u2570:	
  5136  0E3D                     l3071:	
  5137  0E3D  0825               	movf	___awmod@divisor+1,w
  5138  0E3E  0227               	subwf	___awmod@dividend+1,w
  5139  0E3F  1D03               	skipz
  5140  0E40  2E43               	goto	u2585
  5141  0E41  0824               	movf	___awmod@divisor,w
  5142  0E42  0226               	subwf	___awmod@dividend,w
  5143  0E43                     u2585:	
  5144  0E43  1C03               	skipc
  5145  0E44  2E46               	goto	u2581
  5146  0E45  2E47               	goto	u2580
  5147  0E46                     u2581:	
  5148  0E46  2E4D               	goto	l3075
  5149  0E47                     u2580:	
  5150  0E47                     l3073:	
  5151  0E47  0824               	movf	___awmod@divisor,w
  5152  0E48  02A6               	subwf	___awmod@dividend,f
  5153  0E49  0825               	movf	___awmod@divisor+1,w
  5154  0E4A  1C03               	skipc
  5155  0E4B  03A7               	decf	___awmod@dividend+1,f
  5156  0E4C  02A7               	subwf	___awmod@dividend+1,f
  5157  0E4D                     l3075:	
  5158  0E4D  3001               	movlw	1
  5159  0E4E                     u2595:	
  5160  0E4E  1003               	clrc
  5161  0E4F  0CA5               	rrf	___awmod@divisor+1,f
  5162  0E50  0CA4               	rrf	___awmod@divisor,f
  5163  0E51  3EFF               	addlw	-1
  5164  0E52  1D03               	skipz
  5165  0E53  2E4E               	goto	u2595
  5166  0E54                     l3077:	
  5167  0E54  3001               	movlw	1
  5168  0E55  02A9               	subwf	___awmod@counter,f
  5169  0E56  1D03               	btfss	3,2
  5170  0E57  2E59               	goto	u2601
  5171  0E58  2E5A               	goto	u2600
  5172  0E59                     u2601:	
  5173  0E59  2E3D               	goto	l3071
  5174  0E5A                     u2600:	
  5175  0E5A                     l3079:	
  5176  0E5A  082A               	movf	___awmod@sign,w
  5177  0E5B  1903               	btfsc	3,2
  5178  0E5C  2E5E               	goto	u2611
  5179  0E5D  2E5F               	goto	u2610
  5180  0E5E                     u2611:	
  5181  0E5E  2E64               	goto	l3083
  5182  0E5F                     u2610:	
  5183  0E5F                     l3081:	
  5184  0E5F  09A6               	comf	___awmod@dividend,f
  5185  0E60  09A7               	comf	___awmod@dividend+1,f
  5186  0E61  0AA6               	incf	___awmod@dividend,f
  5187  0E62  1903               	skipnz
  5188  0E63  0AA7               	incf	___awmod@dividend+1,f
  5189  0E64                     l3083:	
  5190  0E64  0827               	movf	___awmod@dividend+1,w
  5191  0E65  00A5               	movwf	?___awmod+1
  5192  0E66  0826               	movf	___awmod@dividend,w
  5193  0E67  00A4               	movwf	?___awmod
  5194  0E68                     l613:	
  5195  0E68  0008               	return
  5196  0E69                     __end_of___awmod:	
  5197                           
  5198                           	psect	text19
  5199  0F29                     __ptext19:	
  5200 ;; *************** function ___awdiv *****************
  5201 ;; Defined at:
  5202 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  divisor         2   11[BANK0 ] int 
  5205 ;;  dividend        2   13[BANK0 ] int 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  quotient        2   18[BANK0 ] int 
  5208 ;;  sign            1   17[BANK0 ] unsigned char 
  5209 ;;  counter         1   16[BANK0 ] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  2   11[BANK0 ] int 
  5212 ;; Registers used:
  5213 ;;		wreg, status,2, status,0
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5219 ;;      Params:         0       4       0       0       0
  5220 ;;      Locals:         0       4       0       0       0
  5221 ;;      Temps:          0       1       0       0       0
  5222 ;;      Totals:         0       9       0       0       0
  5223 ;;Total ram usage:        9 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    3
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_map
  5230 ;;		_GetDigits
  5231 ;;		_intToString
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function ___awdiv
  5237  0F29                     ___awdiv:	
  5238  0F29                     l3005:	
  5239                           ;incstack = 0
  5240                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5241                           
  5242  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  5243  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  5244  0F2B  01B1               	clrf	___awdiv@sign
  5245  0F2C                     l3007:	
  5246  0F2C  1FAC               	btfss	___awdiv@divisor+1,7
  5247  0F2D  2F2F               	goto	u2431
  5248  0F2E  2F30               	goto	u2430
  5249  0F2F                     u2431:	
  5250  0F2F  2F37               	goto	l3013
  5251  0F30                     u2430:	
  5252  0F30                     l3009:	
  5253  0F30  09AB               	comf	___awdiv@divisor,f
  5254  0F31  09AC               	comf	___awdiv@divisor+1,f
  5255  0F32  0AAB               	incf	___awdiv@divisor,f
  5256  0F33  1903               	skipnz
  5257  0F34  0AAC               	incf	___awdiv@divisor+1,f
  5258  0F35                     l3011:	
  5259  0F35  01B1               	clrf	___awdiv@sign
  5260  0F36  0AB1               	incf	___awdiv@sign,f
  5261  0F37                     l3013:	
  5262  0F37  1FAE               	btfss	___awdiv@dividend+1,7
  5263  0F38  2F3A               	goto	u2441
  5264  0F39  2F3B               	goto	u2440
  5265  0F3A                     u2441:	
  5266  0F3A  2F44               	goto	l3019
  5267  0F3B                     u2440:	
  5268  0F3B                     l3015:	
  5269  0F3B  09AD               	comf	___awdiv@dividend,f
  5270  0F3C  09AE               	comf	___awdiv@dividend+1,f
  5271  0F3D  0AAD               	incf	___awdiv@dividend,f
  5272  0F3E  1903               	skipnz
  5273  0F3F  0AAE               	incf	___awdiv@dividend+1,f
  5274  0F40                     l3017:	
  5275  0F40  3001               	movlw	1
  5276  0F41  00AF               	movwf	??___awdiv
  5277  0F42  082F               	movf	??___awdiv,w
  5278  0F43  06B1               	xorwf	___awdiv@sign,f
  5279  0F44                     l3019:	
  5280  0F44  01B2               	clrf	___awdiv@quotient
  5281  0F45  01B3               	clrf	___awdiv@quotient+1
  5282  0F46                     l3021:	
  5283  0F46  082B               	movf	___awdiv@divisor,w
  5284  0F47  042C               	iorwf	___awdiv@divisor+1,w
  5285  0F48  1903               	btfsc	3,2
  5286  0F49  2F4B               	goto	u2451
  5287  0F4A  2F4C               	goto	u2450
  5288  0F4B                     u2451:	
  5289  0F4B  2F83               	goto	l3041
  5290  0F4C                     u2450:	
  5291  0F4C                     l3023:	
  5292  0F4C  01B0               	clrf	___awdiv@counter
  5293  0F4D  0AB0               	incf	___awdiv@counter,f
  5294  0F4E  2F5A               	goto	l3029
  5295  0F4F                     l3025:	
  5296  0F4F  3001               	movlw	1
  5297  0F50                     u2465:	
  5298  0F50  1003               	clrc
  5299  0F51  0DAB               	rlf	___awdiv@divisor,f
  5300  0F52  0DAC               	rlf	___awdiv@divisor+1,f
  5301  0F53  3EFF               	addlw	-1
  5302  0F54  1D03               	skipz
  5303  0F55  2F50               	goto	u2465
  5304  0F56                     l3027:	
  5305  0F56  3001               	movlw	1
  5306  0F57  00AF               	movwf	??___awdiv
  5307  0F58  082F               	movf	??___awdiv,w
  5308  0F59  07B0               	addwf	___awdiv@counter,f
  5309  0F5A                     l3029:	
  5310  0F5A  1FAC               	btfss	___awdiv@divisor+1,7
  5311  0F5B  2F5D               	goto	u2471
  5312  0F5C  2F5E               	goto	u2470
  5313  0F5D                     u2471:	
  5314  0F5D  2F4F               	goto	l3025
  5315  0F5E                     u2470:	
  5316  0F5E                     l3031:	
  5317  0F5E  3001               	movlw	1
  5318  0F5F                     u2485:	
  5319  0F5F  1003               	clrc
  5320  0F60  0DB2               	rlf	___awdiv@quotient,f
  5321  0F61  0DB3               	rlf	___awdiv@quotient+1,f
  5322  0F62  3EFF               	addlw	-1
  5323  0F63  1D03               	skipz
  5324  0F64  2F5F               	goto	u2485
  5325  0F65  082C               	movf	___awdiv@divisor+1,w
  5326  0F66  022E               	subwf	___awdiv@dividend+1,w
  5327  0F67  1D03               	skipz
  5328  0F68  2F6B               	goto	u2495
  5329  0F69  082B               	movf	___awdiv@divisor,w
  5330  0F6A  022D               	subwf	___awdiv@dividend,w
  5331  0F6B                     u2495:	
  5332  0F6B  1C03               	skipc
  5333  0F6C  2F6E               	goto	u2491
  5334  0F6D  2F6F               	goto	u2490
  5335  0F6E                     u2491:	
  5336  0F6E  2F76               	goto	l3037
  5337  0F6F                     u2490:	
  5338  0F6F                     l3033:	
  5339  0F6F  082B               	movf	___awdiv@divisor,w
  5340  0F70  02AD               	subwf	___awdiv@dividend,f
  5341  0F71  082C               	movf	___awdiv@divisor+1,w
  5342  0F72  1C03               	skipc
  5343  0F73  03AE               	decf	___awdiv@dividend+1,f
  5344  0F74  02AE               	subwf	___awdiv@dividend+1,f
  5345  0F75                     l3035:	
  5346  0F75  1432               	bsf	___awdiv@quotient,0
  5347  0F76                     l3037:	
  5348  0F76  3001               	movlw	1
  5349  0F77                     u2505:	
  5350  0F77  1003               	clrc
  5351  0F78  0CAC               	rrf	___awdiv@divisor+1,f
  5352  0F79  0CAB               	rrf	___awdiv@divisor,f
  5353  0F7A  3EFF               	addlw	-1
  5354  0F7B  1D03               	skipz
  5355  0F7C  2F77               	goto	u2505
  5356  0F7D                     l3039:	
  5357  0F7D  3001               	movlw	1
  5358  0F7E  02B0               	subwf	___awdiv@counter,f
  5359  0F7F  1D03               	btfss	3,2
  5360  0F80  2F82               	goto	u2511
  5361  0F81  2F83               	goto	u2510
  5362  0F82                     u2511:	
  5363  0F82  2F5E               	goto	l3031
  5364  0F83                     u2510:	
  5365  0F83                     l3041:	
  5366  0F83  0831               	movf	___awdiv@sign,w
  5367  0F84  1903               	btfsc	3,2
  5368  0F85  2F87               	goto	u2521
  5369  0F86  2F88               	goto	u2520
  5370  0F87                     u2521:	
  5371  0F87  2F8D               	goto	l3045
  5372  0F88                     u2520:	
  5373  0F88                     l3043:	
  5374  0F88  09B2               	comf	___awdiv@quotient,f
  5375  0F89  09B3               	comf	___awdiv@quotient+1,f
  5376  0F8A  0AB2               	incf	___awdiv@quotient,f
  5377  0F8B  1903               	skipnz
  5378  0F8C  0AB3               	incf	___awdiv@quotient+1,f
  5379  0F8D                     l3045:	
  5380  0F8D  0833               	movf	___awdiv@quotient+1,w
  5381  0F8E  00AC               	movwf	?___awdiv+1
  5382  0F8F  0832               	movf	___awdiv@quotient,w
  5383  0F90  00AB               	movwf	?___awdiv
  5384  0F91                     l600:	
  5385  0F91  0008               	return
  5386  0F92                     __end_of___awdiv:	
  5387                           
  5388                           	psect	text20
  5389  0C15                     __ptext20:	
  5390 ;; *************** function _ADC_Read *****************
  5391 ;; Defined at:
  5392 ;;		line 325 in file "main.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  canale          1    wreg     unsigned char 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  canale          1    7[BANK0 ] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  2    4[BANK0 ] int 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5406 ;;      Params:         0       2       0       0       0
  5407 ;;      Locals:         0       1       0       0       0
  5408 ;;      Temps:          0       1       0       0       0
  5409 ;;      Totals:         0       4       0       0       0
  5410 ;;Total ram usage:        4 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:    3
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_main
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           
  5421                           ;psect for function _ADC_Read
  5422  0C15                     _ADC_Read:	
  5423                           
  5424                           ;incstack = 0
  5425                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5426                           ;ADC_Read@canale stored from wreg
  5427  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  5428  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  5429  0C17  00A7               	movwf	ADC_Read@canale
  5430  0C18                     l3215:	
  5431                           
  5432                           ;main.c: 325: int ADC_Read(char canale);main.c: 326: {;main.c: 327:     ADCON0 = (1 << 0
      +                          ) | (canale << 3);
  5433  0C18  0827               	movf	ADC_Read@canale,w
  5434  0C19  00A6               	movwf	??_ADC_Read
  5435  0C1A  3002               	movlw	2
  5436  0C1B                     u2725:	
  5437  0C1B  1003               	clrc
  5438  0C1C  0DA6               	rlf	??_ADC_Read,f
  5439  0C1D  3EFF               	addlw	-1
  5440  0C1E  1D03               	skipz
  5441  0C1F  2C1B               	goto	u2725
  5442  0C20  1003               	clrc
  5443  0C21  0D26               	rlf	??_ADC_Read,w
  5444  0C22  3801               	iorlw	1
  5445  0C23  009F               	movwf	31	;volatile
  5446  0C24                     l3217:	
  5447                           
  5448                           ;main.c: 328:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  5449  0C24  3004               	movlw	4
  5450  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  5451  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  5452  0C27  00A6               	movwf	??_ADC_Read
  5453  0C28                     u3027:	
  5454  0C28  0BA6               	decfsz	??_ADC_Read,f
  5455  0C29  2C28               	goto	u3027
  5456  0C2A  0000               	nop
  5457  0C2B                     l3219:	
  5458                           
  5459                           ;main.c: 329:     GO_nDONE = 1;
  5460  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  5461  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0C2D  151F               	bsf	31,2	;volatile
  5463  0C2E                     l282:	
  5464                           ;main.c: 330:     while (GO_nDONE);
  5465                           
  5466  0C2E  191F               	btfsc	31,2	;volatile
  5467  0C2F  2C31               	goto	u2731
  5468  0C30  2C32               	goto	u2730
  5469  0C31                     u2731:	
  5470  0C31  2C2E               	goto	l282
  5471  0C32                     u2730:	
  5472  0C32                     l3221:	
  5473                           
  5474                           ;main.c: 331:     return ADRESL + (ADRESH << 8);
  5475  0C32  081E               	movf	30,w	;volatile
  5476  0C33  00A5               	movwf	?_ADC_Read+1
  5477  0C34  1683               	bsf	3,5	;RP0=1, select bank1
  5478  0C35  1303               	bcf	3,6	;RP1=0, select bank1
  5479  0C36  081E               	movf	30,w	;volatile
  5480  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  5481  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  5482  0C39  00A4               	movwf	?_ADC_Read
  5483  0C3A                     l285:	
  5484  0C3A  0008               	return
  5485  0C3B                     __end_of_ADC_Read:	
  5486                           
  5487                           	psect	text21
  5488  0DB6                     __ptext21:	
  5489 ;; *************** function _ISR *****************
  5490 ;; Defined at:
  5491 ;;		line 485 in file "main.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;		None
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5505 ;;      Params:         0       0       0       0       0
  5506 ;;      Locals:         0       0       0       0       0
  5507 ;;      Temps:          0       4       0       0       0
  5508 ;;      Totals:         0       4       0       0       0
  5509 ;;Total ram usage:        4 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    2
  5512 ;; This function calls:
  5513 ;;		_UART_Read
  5514 ;;		_conteggioVeicoli
  5515 ;; This function is called by:
  5516 ;;		Interrupt level 1
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function _ISR
  5522  0DB6                     _ISR:	
  5523  0DB6                     i1l2613:	
  5524                           
  5525                           ;main.c: 488:     if (RCIF && readGateway.Bit == 0)
  5526  0DB6  1E8C               	btfss	12,5	;volatile
  5527  0DB7  2DB9               	goto	u208_21
  5528  0DB8  2DBA               	goto	u208_20
  5529  0DB9                     u208_21:	
  5530  0DB9  2DC3               	goto	i1l2621
  5531  0DBA                     u208_20:	
  5532  0DBA                     i1l2615:	
  5533  0DBA  1854               	btfsc	_readGateway,0
  5534  0DBB  2DBD               	goto	u209_21
  5535  0DBC  2DBE               	goto	u209_20
  5536  0DBD                     u209_21:	
  5537  0DBD  2DC3               	goto	i1l2621
  5538  0DBE                     u209_20:	
  5539  0DBE                     i1l2617:	
  5540                           
  5541                           ;main.c: 489:     {;main.c: 490:         readGateway.Bit = 1;
  5542  0DBE  1454               	bsf	_readGateway,0
  5543                           
  5544                           ;main.c: 491:         readGatewayDone.Bit = 0;
  5545  0DBF  1055               	bcf	_readGatewayDone,0
  5546                           
  5547                           ;main.c: 492:         readGatewayDone.Timeout = 0;
  5548  0DC0  10D5               	bcf	_readGatewayDone,1
  5549  0DC1                     i1l2619:	
  5550                           
  5551                           ;main.c: 493:         dataFromGatewayIndex = 0;
  5552  0DC1  01CD               	clrf	_dataFromGatewayIndex
  5553                           
  5554                           ;main.c: 494:         timerReadFromGateway = 0;
  5555  0DC2  01CC               	clrf	_timerReadFromGateway
  5556  0DC3                     i1l2621:	
  5557                           
  5558                           ;main.c: 496:     if (RCIF && readGateway.Bit == 1)
  5559  0DC3  1E8C               	btfss	12,5	;volatile
  5560  0DC4  2DC6               	goto	u210_21
  5561  0DC5  2DC7               	goto	u210_20
  5562  0DC6                     u210_21:	
  5563  0DC6  2DDE               	goto	i1l2631
  5564  0DC7                     u210_20:	
  5565  0DC7                     i1l2623:	
  5566  0DC7  1C54               	btfss	_readGateway,0
  5567  0DC8  2DCA               	goto	u211_21
  5568  0DC9  2DCB               	goto	u211_20
  5569  0DCA                     u211_21:	
  5570  0DCA  2DDE               	goto	i1l2631
  5571  0DCB                     u211_20:	
  5572  0DCB                     i1l2625:	
  5573                           
  5574                           ;main.c: 497:     {;main.c: 498:         dataFromGateway[dataFromGatewayIndex] = UART_Re
      +                          ad();
  5575  0DCB  120A  158A  239F  120A  158A  	fcall	_UART_Read
  5576  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  5578  0DD2  00A0               	movwf	??_ISR
  5579  0DD3  084D               	movf	_dataFromGatewayIndex,w
  5580  0DD4  3EA4               	addlw	(low (_dataFromGateway| 0))& (0+255)
  5581  0DD5  0084               	movwf	4
  5582  0DD6  0820               	movf	??_ISR,w
  5583  0DD7  1383               	bcf	3,7	;select IRP bank1
  5584  0DD8  0080               	movwf	0
  5585  0DD9                     i1l2627:	
  5586                           
  5587                           ;main.c: 499:         dataFromGatewayIndex++;
  5588  0DD9  3001               	movlw	1
  5589  0DDA  00A0               	movwf	??_ISR
  5590  0DDB  0820               	movf	??_ISR,w
  5591  0DDC  07CD               	addwf	_dataFromGatewayIndex,f
  5592  0DDD                     i1l2629:	
  5593                           
  5594                           ;main.c: 500:         timerReadFromGateway = 0;
  5595  0DDD  01CC               	clrf	_timerReadFromGateway
  5596  0DDE                     i1l2631:	
  5597                           
  5598                           ;main.c: 505:     if (TMR0IF)
  5599  0DDE  1D0B               	btfss	11,2	;volatile
  5600  0DDF  2DE1               	goto	u212_21
  5601  0DE0  2DE2               	goto	u212_20
  5602  0DE1                     u212_21:	
  5603  0DE1  2DEC               	goto	i1l2639
  5604  0DE2                     u212_20:	
  5605  0DE2                     i1l2633:	
  5606                           
  5607                           ;main.c: 506:     {;main.c: 507:         TMR0IF = 0;
  5608  0DE2  110B               	bcf	11,2	;volatile
  5609  0DE3                     i1l2635:	
  5610                           
  5611                           ;main.c: 508:         conteggioVeicoli();
  5612  0DE3  120A  158A  26C4  120A  158A  	fcall	_conteggioVeicoli
  5613  0DE8                     i1l2637:	
  5614                           
  5615                           ;main.c: 509:         TMR0 = 6;
  5616  0DE8  3006               	movlw	6
  5617  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  5618  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  5619  0DEB  0081               	movwf	1	;volatile
  5620  0DEC                     i1l2639:	
  5621                           
  5622                           ;main.c: 512:     if (TMR1IF)
  5623  0DEC  1C0C               	btfss	12,0	;volatile
  5624  0DED  2DEF               	goto	u213_21
  5625  0DEE  2DF0               	goto	u213_20
  5626  0DEF                     u213_21:	
  5627  0DEF  2E05               	goto	i1l361
  5628  0DF0                     u213_20:	
  5629  0DF0                     i1l2641:	
  5630                           
  5631                           ;main.c: 513:     {;main.c: 514:         TMR1IF = 0;
  5632  0DF0  100C               	bcf	12,0	;volatile
  5633  0DF1                     i1l2643:	
  5634                           
  5635                           ;main.c: 515:         count_lux++;
  5636  0DF1  3001               	movlw	1
  5637  0DF2  00A0               	movwf	??_ISR
  5638  0DF3  0820               	movf	??_ISR,w
  5639  0DF4  07D0               	addwf	_count_lux,f
  5640  0DF5                     i1l2645:	
  5641                           
  5642                           ;main.c: 517:         if (count_lux >= 20)
  5643  0DF5  3014               	movlw	20
  5644  0DF6  0250               	subwf	_count_lux,w
  5645  0DF7  1C03               	skipc
  5646  0DF8  2DFA               	goto	u214_21
  5647  0DF9  2DFB               	goto	u214_20
  5648  0DFA                     u214_21:	
  5649  0DFA  2E01               	goto	i1l2653
  5650  0DFB                     u214_20:	
  5651  0DFB                     i1l2647:	
  5652                           
  5653                           ;main.c: 518:         {;main.c: 519:             secondPassed.Bit = 1;
  5654  0DFB  1453               	bsf	_secondPassed,0
  5655  0DFC                     i1l2649:	
  5656                           
  5657                           ;main.c: 520:             count_lux = 0;
  5658  0DFC  01D0               	clrf	_count_lux
  5659  0DFD                     i1l2651:	
  5660                           
  5661                           ;main.c: 521:             timerReadFromGateway++;
  5662  0DFD  3001               	movlw	1
  5663  0DFE  00A0               	movwf	??_ISR
  5664  0DFF  0820               	movf	??_ISR,w
  5665  0E00  07CC               	addwf	_timerReadFromGateway,f
  5666  0E01                     i1l2653:	
  5667                           
  5668                           ;main.c: 524:         TMR1H = 60;
  5669  0E01  303C               	movlw	60
  5670  0E02  008F               	movwf	15	;volatile
  5671  0E03                     i1l2655:	
  5672                           
  5673                           ;main.c: 525:         TMR1L = 176;
  5674  0E03  30B0               	movlw	176
  5675  0E04  008E               	movwf	14	;volatile
  5676  0E05                     i1l361:	
  5677  0E05  0823               	movf	??_ISR+3,w
  5678  0E06  008A               	movwf	10
  5679  0E07  0822               	movf	??_ISR+2,w
  5680  0E08  0084               	movwf	4
  5681  0E09  0E21               	swapf	(??_ISR+1)^0,w
  5682  0E0A  0083               	movwf	3
  5683  0E0B  0EFE               	swapf	btemp,f
  5684  0E0C  0E7E               	swapf	btemp,w
  5685  0E0D  0009               	retfie
  5686  0E0E                     __end_of_ISR:	
  5687                           
  5688                           	psect	intentry
  5689  0004                     __pintentry:	
  5690                           ;incstack = 0
  5691                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5692                           
  5693  0004                     interrupt_function:	
  5694  007E                     saved_w	set	btemp
  5695  0004  00FE               	movwf	btemp
  5696  0005  0E03               	swapf	3,w
  5697  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5698  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5699  0008  00A1               	movwf	??_ISR+1
  5700  0009  0804               	movf	4,w
  5701  000A  00A2               	movwf	??_ISR+2
  5702  000B  080A               	movf	10,w
  5703  000C  00A3               	movwf	??_ISR+3
  5704  000D  120A  158A  2DB6   	ljmp	_ISR
  5705                           
  5706                           	psect	text22
  5707  0EC4                     __ptext22:	
  5708 ;; *************** function _conteggioVeicoli *****************
  5709 ;; Defined at:
  5710 ;;		line 388 in file "main.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  i               1   13[COMMON] unsigned char 
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5724 ;;      Params:         0       0       0       0       0
  5725 ;;      Locals:         1       0       0       0       0
  5726 ;;      Temps:          4       0       0       0       0
  5727 ;;      Totals:         5       0       0       0       0
  5728 ;;Total ram usage:        5 bytes
  5729 ;; Hardware stack levels used:    1
  5730 ;; Hardware stack levels required when called:    1
  5731 ;; This function calls:
  5732 ;;		_Conteggio
  5733 ;; This function is called by:
  5734 ;;		_ISR
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           
  5739                           ;psect for function _conteggioVeicoli
  5740  0EC4                     _conteggioVeicoli:	
  5741  0EC4                     i1l2391:	
  5742                           ;incstack = 0
  5743                           ; Regs used in _conteggioVeicoli: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5744                           
  5745                           
  5746                           ;main.c: 390:     RoadsSensors[0] = PORTBbits.RB3;
  5747  0EC4  3000               	movlw	0
  5748  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5749  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  5750  0EC7  1986               	btfsc	6,3	;volatile
  5751  0EC8  3001               	movlw	1
  5752  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  5753  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  5754  0ECB  00A0               	movwf	_RoadsSensors^(0+128)
  5755                           
  5756                           ;main.c: 391:     RoadsSensors[1] = PORTBbits.RB4;
  5757  0ECC  3000               	movlw	0
  5758  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  5759  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  5760  0ECF  1A06               	btfsc	6,4	;volatile
  5761  0ED0  3001               	movlw	1
  5762  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  5763  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  5764  0ED3  00A1               	movwf	(_RoadsSensors^(0+128)+1)
  5765                           
  5766                           ;main.c: 392:     RoadsSensors[2] = PORTBbits.RB5;
  5767  0ED4  3000               	movlw	0
  5768  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5769  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  5770  0ED7  1A86               	btfsc	6,5	;volatile
  5771  0ED8  3001               	movlw	1
  5772  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  5773  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  5774  0EDB  00A2               	movwf	(_RoadsSensors^(0+128)+2)
  5775                           
  5776                           ;main.c: 393:     RoadsSensors[3] = PORTAbits.RA5;
  5777  0EDC  3000               	movlw	0
  5778  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  5779  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  5780  0EDF  1A85               	btfsc	5,5	;volatile
  5781  0EE0  3001               	movlw	1
  5782  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  5783  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  5784  0EE3  00A3               	movwf	(_RoadsSensors^(0+128)+3)
  5785  0EE4                     i1l2393:	
  5786                           
  5787                           ;main.c: 395:     for (unsigned char i = 0; i < 4; i++)
  5788  0EE4  01FD               	clrf	conteggioVeicoli@i
  5789  0EE5                     i1l2397:	
  5790                           
  5791                           ;main.c: 396:     {;main.c: 397:         if (!RoadsSensors[i])
  5792  0EE5  087D               	movf	conteggioVeicoli@i,w
  5793  0EE6  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5794  0EE7  0084               	movwf	4
  5795  0EE8  1383               	bcf	3,7	;select IRP bank1
  5796  0EE9  0800               	movf	0,w
  5797  0EEA  1D03               	btfss	3,2
  5798  0EEB  2EED               	goto	u181_21
  5799  0EEC  2EEE               	goto	u181_20
  5800  0EED                     u181_21:	
  5801  0EED  2EF7               	goto	i1l2401
  5802  0EEE                     u181_20:	
  5803  0EEE                     i1l2399:	
  5804                           
  5805                           ;main.c: 398:         {;main.c: 399:             count++;
  5806  0EEE  3001               	movlw	1
  5807  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  5808  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  5809  0EF1  07CA               	addwf	_count,f
  5810  0EF2  1803               	skipnc
  5811  0EF3  0ACB               	incf	_count+1,f
  5812  0EF4  3000               	movlw	0
  5813  0EF5  07CB               	addwf	_count+1,f
  5814                           
  5815                           ;main.c: 400:         }
  5816  0EF6  2F1E               	goto	i1l2407
  5817  0EF7                     i1l2401:	
  5818  0EF7  087D               	movf	conteggioVeicoli@i,w
  5819  0EF8  3EA0               	addlw	(low (_RoadsSensors| 0))& (0+255)
  5820  0EF9  0084               	movwf	4
  5821  0EFA  0800               	movf	0,w
  5822  0EFB  1903               	btfsc	3,2
  5823  0EFC  2EFE               	goto	u182_21
  5824  0EFD  2EFF               	goto	u182_20
  5825  0EFE                     u182_21:	
  5826  0EFE  2F1E               	goto	i1l2407
  5827  0EFF                     u182_20:	
  5828  0EFF                     i1l2403:	
  5829                           
  5830                           ;main.c: 402:         {;main.c: 403:             Conteggio(count, motorcycle, car, truck
      +                          , i);
  5831  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5832  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5833  0F01  084B               	movf	_count+1,w
  5834  0F02  00F1               	movwf	Conteggio@_count+1
  5835  0F03  084A               	movf	_count,w
  5836  0F04  00F0               	movwf	Conteggio@_count
  5837  0F05  305E               	movlw	(low (_motorcycle| 0))& (0+255)
  5838  0F06  00F9               	movwf	??_conteggioVeicoli
  5839  0F07  0879               	movf	??_conteggioVeicoli,w
  5840  0F08  00F2               	movwf	Conteggio@_motorcycle
  5841  0F09  305A               	movlw	(low (_car| 0))& (0+255)
  5842  0F0A  00FA               	movwf	??_conteggioVeicoli+1
  5843  0F0B  087A               	movf	??_conteggioVeicoli+1,w
  5844  0F0C  00F3               	movwf	Conteggio@_car
  5845  0F0D  3056               	movlw	(low (_truck| 0))& (0+255)
  5846  0F0E  00FB               	movwf	??_conteggioVeicoli+2
  5847  0F0F  087B               	movf	??_conteggioVeicoli+2,w
  5848  0F10  00F4               	movwf	Conteggio@_truck
  5849  0F11  087D               	movf	conteggioVeicoli@i,w
  5850  0F12  00FC               	movwf	??_conteggioVeicoli+3
  5851  0F13  087C               	movf	??_conteggioVeicoli+3,w
  5852  0F14  00F5               	movwf	Conteggio@index
  5853  0F15  120A  158A  2517  120A  158A  	fcall	_Conteggio
  5854  0F1A                     i1l2405:	
  5855                           
  5856                           ;main.c: 404:             count = 0;
  5857  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0F1C  01CA               	clrf	_count
  5860  0F1D  01CB               	clrf	_count+1
  5861  0F1E                     i1l2407:	
  5862                           
  5863                           ;main.c: 406:     }
  5864  0F1E  3001               	movlw	1
  5865  0F1F  00F9               	movwf	??_conteggioVeicoli
  5866  0F20  0879               	movf	??_conteggioVeicoli,w
  5867  0F21  07FD               	addwf	conteggioVeicoli@i,f
  5868  0F22                     i1l2409:	
  5869  0F22  3004               	movlw	4
  5870  0F23  027D               	subwf	conteggioVeicoli@i,w
  5871  0F24  1C03               	skipc
  5872  0F25  2F27               	goto	u183_21
  5873  0F26  2F28               	goto	u183_20
  5874  0F27                     u183_21:	
  5875  0F27  2EE5               	goto	i1l2397
  5876  0F28                     u183_20:	
  5877  0F28                     i1l322:	
  5878  0F28  0008               	return
  5879  0F29                     __end_of_conteggioVeicoli:	
  5880                           
  5881                           	psect	text23
  5882  0D17                     __ptext23:	
  5883 ;; *************** function _Conteggio *****************
  5884 ;; Defined at:
  5885 ;;		line 92 in file "./CustomLib/TrafficLight.h"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  _count          2    0[COMMON] unsigned int 
  5888 ;;  _motorcycle     1    2[COMMON] PTR unsigned char 
  5889 ;;		 -> motorcycle(4), 
  5890 ;;  _car            1    3[COMMON] PTR unsigned char 
  5891 ;;		 -> car(4), 
  5892 ;;  _truck          1    4[COMMON] PTR unsigned char 
  5893 ;;		 -> truck(4), 
  5894 ;;  index           1    5[COMMON] unsigned char 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      void 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5906 ;;      Params:         6       0       0       0       0
  5907 ;;      Locals:         0       0       0       0       0
  5908 ;;      Temps:          3       0       0       0       0
  5909 ;;      Totals:         9       0       0       0       0
  5910 ;;Total ram usage:        9 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; This function calls:
  5913 ;;		Nothing
  5914 ;; This function is called by:
  5915 ;;		_conteggioVeicoli
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           
  5920                           ;psect for function _Conteggio
  5921  0D17                     _Conteggio:	
  5922  0D17                     i1l2021:	
  5923                           ;incstack = 0
  5924                           ; Regs used in _Conteggio: [wreg-fsr0h+status,2+status,0]
  5925                           
  5926                           
  5927                           ;./CustomLib/TrafficLight.h: 92: void Conteggio(unsigned int _count, unsigned char _moto
      +                          rcycle[4], unsigned char _car[4], unsigned char _truck[4], unsigned char index);./Custom
      +                          Lib/TrafficLight.h: 93: {;./CustomLib/TrafficLight.h: 94:         if (_count >= 500)
  5928  0D17  3001               	movlw	1
  5929  0D18  0271               	subwf	Conteggio@_count+1,w
  5930  0D19  30F4               	movlw	244
  5931  0D1A  1903               	skipnz
  5932  0D1B  0270               	subwf	Conteggio@_count,w
  5933  0D1C  1C03               	skipc
  5934  0D1D  2D1F               	goto	u126_21
  5935  0D1E  2D20               	goto	u126_20
  5936  0D1F                     u126_21:	
  5937  0D1F  2D30               	goto	i1l2025
  5938  0D20                     u126_20:	
  5939  0D20                     i1l2023:	
  5940                           
  5941                           ;./CustomLib/TrafficLight.h: 95:         {;./CustomLib/TrafficLight.h: 96:             _
      +                          motorcycle[index]=_motorcycle[index]+1;
  5942  0D20  0875               	movf	Conteggio@index,w
  5943  0D21  0772               	addwf	Conteggio@_motorcycle,w
  5944  0D22  00F6               	movwf	??_Conteggio
  5945  0D23  0876               	movf	??_Conteggio,w
  5946  0D24  0084               	movwf	4
  5947  0D25  1383               	bcf	3,7	;select IRP bank0
  5948  0D26  0800               	movf	0,w
  5949  0D27  3E01               	addlw	1
  5950  0D28  00F7               	movwf	??_Conteggio+1
  5951  0D29  0875               	movf	Conteggio@index,w
  5952  0D2A  0772               	addwf	Conteggio@_motorcycle,w
  5953  0D2B  00F8               	movwf	??_Conteggio+2
  5954  0D2C  0878               	movf	??_Conteggio+2,w
  5955  0D2D  0084               	movwf	4
  5956  0D2E  0877               	movf	??_Conteggio+1,w
  5957  0D2F  0080               	movwf	0
  5958  0D30                     i1l2025:	
  5959                           
  5960                           ;./CustomLib/TrafficLight.h: 98:         if (_count >= 1500)
  5961  0D30  3005               	movlw	5
  5962  0D31  0271               	subwf	Conteggio@_count+1,w
  5963  0D32  30DC               	movlw	220
  5964  0D33  1903               	skipnz
  5965  0D34  0270               	subwf	Conteggio@_count,w
  5966  0D35  1C03               	skipc
  5967  0D36  2D38               	goto	u127_21
  5968  0D37  2D39               	goto	u127_20
  5969  0D38                     u127_21:	
  5970  0D38  2D49               	goto	i1l2029
  5971  0D39                     u127_20:	
  5972  0D39                     i1l2027:	
  5973                           
  5974                           ;./CustomLib/TrafficLight.h: 99:         {;./CustomLib/TrafficLight.h: 100:             
      +                          _car[index]=_car[index]+1;
  5975  0D39  0875               	movf	Conteggio@index,w
  5976  0D3A  0773               	addwf	Conteggio@_car,w
  5977  0D3B  00F6               	movwf	??_Conteggio
  5978  0D3C  0876               	movf	??_Conteggio,w
  5979  0D3D  0084               	movwf	4
  5980  0D3E  1383               	bcf	3,7	;select IRP bank0
  5981  0D3F  0800               	movf	0,w
  5982  0D40  3E01               	addlw	1
  5983  0D41  00F7               	movwf	??_Conteggio+1
  5984  0D42  0875               	movf	Conteggio@index,w
  5985  0D43  0773               	addwf	Conteggio@_car,w
  5986  0D44  00F8               	movwf	??_Conteggio+2
  5987  0D45  0878               	movf	??_Conteggio+2,w
  5988  0D46  0084               	movwf	4
  5989  0D47  0877               	movf	??_Conteggio+1,w
  5990  0D48  0080               	movwf	0
  5991  0D49                     i1l2029:	
  5992                           
  5993                           ;./CustomLib/TrafficLight.h: 102:         if (_count >= 3000)
  5994  0D49  300B               	movlw	11
  5995  0D4A  0271               	subwf	Conteggio@_count+1,w
  5996  0D4B  30B8               	movlw	184
  5997  0D4C  1903               	skipnz
  5998  0D4D  0270               	subwf	Conteggio@_count,w
  5999  0D4E  1C03               	skipc
  6000  0D4F  2D51               	goto	u128_21
  6001  0D50  2D52               	goto	u128_20
  6002  0D51                     u128_21:	
  6003  0D51  2D62               	goto	i1l173
  6004  0D52                     u128_20:	
  6005  0D52                     i1l2031:	
  6006                           
  6007                           ;./CustomLib/TrafficLight.h: 103:         {;./CustomLib/TrafficLight.h: 104:            
      +                           _truck[index]=_truck[index]+1;
  6008  0D52  0875               	movf	Conteggio@index,w
  6009  0D53  0774               	addwf	Conteggio@_truck,w
  6010  0D54  00F6               	movwf	??_Conteggio
  6011  0D55  0876               	movf	??_Conteggio,w
  6012  0D56  0084               	movwf	4
  6013  0D57  1383               	bcf	3,7	;select IRP bank0
  6014  0D58  0800               	movf	0,w
  6015  0D59  3E01               	addlw	1
  6016  0D5A  00F7               	movwf	??_Conteggio+1
  6017  0D5B  0875               	movf	Conteggio@index,w
  6018  0D5C  0774               	addwf	Conteggio@_truck,w
  6019  0D5D  00F8               	movwf	??_Conteggio+2
  6020  0D5E  0878               	movf	??_Conteggio+2,w
  6021  0D5F  0084               	movwf	4
  6022  0D60  0877               	movf	??_Conteggio+1,w
  6023  0D61  0080               	movwf	0
  6024  0D62                     i1l173:	
  6025  0D62  0008               	return
  6026  0D63                     __end_of_Conteggio:	
  6027                           
  6028                           	psect	text24
  6029  0B9F                     __ptext24:	
  6030 ;; *************** function _UART_Read *****************
  6031 ;; Defined at:
  6032 ;;		line 362 in file "main.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;		None
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  1    wreg      unsigned char 
  6039 ;; Registers used:
  6040 ;;		wreg
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6046 ;;      Params:         0       0       0       0       0
  6047 ;;      Locals:         0       0       0       0       0
  6048 ;;      Temps:          0       0       0       0       0
  6049 ;;      Totals:         0       0       0       0       0
  6050 ;;Total ram usage:        0 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_ISR
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           
  6060                           ;psect for function _UART_Read
  6061  0B9F                     _UART_Read:	
  6062  0B9F                     i1l2385:	
  6063                           ;incstack = 0
  6064                           ; Regs used in _UART_Read: [wreg]
  6065                           
  6066  0B9F                     i1l303:	
  6067                           ;main.c: 364:     while (!RCIF);
  6068                           
  6069  0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0BA0  1303               	bcf	3,6	;RP1=0, select bank0
  6071  0BA1  1E8C               	btfss	12,5	;volatile
  6072  0BA2  2BA4               	goto	u180_21
  6073  0BA3  2BA5               	goto	u180_20
  6074  0BA4                     u180_21:	
  6075  0BA4  2B9F               	goto	i1l303
  6076  0BA5                     u180_20:	
  6077  0BA5                     i1l305:	
  6078                           
  6079                           ;main.c: 365:     RCIF = 0;
  6080  0BA5  128C               	bcf	12,5	;volatile
  6081  0BA6                     i1l2387:	
  6082                           
  6083                           ;main.c: 366:     return RCREG;
  6084  0BA6  081A               	movf	26,w	;volatile
  6085  0BA7                     i1l306:	
  6086  0BA7  0008               	return
  6087  0BA8                     __end_of_UART_Read:	
  6088  007E                     btemp	set	126	;btemp
  6089  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    12
    Data        16
    BSS         158
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      69
    BANK1            80      0      77
    BANK3            96     13      83
    BANK2            96      0       0

Pointer List with Targets:

    sendByte@txByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    Semafori	PTR struct .[8] size(2) Largest target is 14
		 -> s7(BANK3[14]), s6(BANK3[14]), s5(BANK3[14]), s4(BANK3[14]), 
		 -> s3(BANK3[14]), s2(BANK1[14]), s1(BANK1[14]), s0(BANK1[14]), 

    Conteggio@_truck	PTR unsigned char  size(1) Largest target is 4
		 -> truck(BANK0[4]), 

    Conteggio@_car	PTR unsigned char  size(1) Largest target is 4
		 -> car(BANK0[4]), 

    Conteggio@_motorcycle	PTR unsigned char  size(1) Largest target is 4
		 -> motorcycle(BANK0[4]), 

    SetReceivedTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    SetReceivedTimes@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    SetDefaultTimers@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    GetTime@_dataFromGateway	PTR unsigned char  size(1) Largest target is 15
		 -> dataFromGateway(BANK1[15]), 

    UpdateTimes@_semafori	PTR PTR struct . size(1) Largest target is 16
		 -> Semafori(BANK1[16]), 

    sp__BuildByte	PTR unsigned char  size(1) Largest target is 5
		 -> BuildByte@txByte(BANK0[5]), 

    GetDigits@unita	PTR unsigned char  size(1) Largest target is 1
		 -> unita(BANK0[1]), 

    GetDigits@decine	PTR unsigned char  size(1) Largest target is 1
		 -> decine(BANK0[1]), 

    GetDigits@centinaia	PTR unsigned char  size(1) Largest target is 1
		 -> centinaia(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_conteggioVeicoli
    _conteggioVeicoli->_Conteggio

Critical Paths under _main in BANK0

    _main->_sendByte
    _sendByte->_BuildByte
    _map->___awdiv
    _UART_Init->___aldiv
    _ShowDigitsOnDisplay->___awmod
    _SetReceivedTimes->_GetTime
    _GetDigits->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   19935
                                             32 BANK0     10    10      0
                                              0 BANK3     13    13      0
                           _ADC_Read
                          _GetDigits
                   _SetDefaultTimers
                   _SetReceivedTimes
                _ShowDigitsOnDisplay
                          _UART_Init
                        _UpdateTimes
                           _init_ADC
                       _luciSemaforo
                                _map
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             8     6      2    4067
                                             24 BANK0      8     6      2
                          _BuildByte
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BuildByte                                           20    18      2    1138
                                              4 BANK0     20    18      2
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     0     10    4418
                                             20 BANK0     10     0     10
                           _ADC_Read (ARG)
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1326
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _luciSemaforo                                         4     3      1     183
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UpdateTimes                                         19    19      0     358
                                              4 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     746
                                             19 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ShowDigitsOnDisplay                                  2     2      0    2717
                                             11 BANK0      2     2      0
                         _SetDisplay
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SetDisplay                                           4     1      3    1204
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetReceivedTimes                                    14    13      1    1333
                                             12 BANK0     14    13      1
                            _GetTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     436
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _GetTime                                              8     6      2     384
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SetDefaultTimers                                    16     9      7    1023
                                              4 BANK0     16     9      7
 ---------------------------------------------------------------------------------
 (1) _GetDigits                                            8     4      4    3629
                                             20 BANK0      8     4      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      31
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     822
                                              0 BANK0      4     4      0
                          _UART_Read
                   _conteggioVeicoli
 ---------------------------------------------------------------------------------
 (4) _conteggioVeicoli                                     5     5      0     822
                                              9 COMMON     5     5      0
                          _Conteggio
 ---------------------------------------------------------------------------------
 (5) _Conteggio                                            9     3      6     710
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _GetDigits
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _SetDefaultTimers
   _SetReceivedTimes
     _GetTime
     ___bmul
   _ShowDigitsOnDisplay
     _SetDisplay
     ___awmod
   _UART_Init
     ___aldiv
   _UpdateTimes
   _init_ADC
   _luciSemaforo
   _map
     _ADC_Read (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _sendByte
     _BuildByte
     _UART_TxChar

 _ISR (ROOT)
   _UART_Read
   _conteggioVeicoli
     _Conteggio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D      53       9       86.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      45       5       86.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      F3      12        0.0%
ABS                  0      0      F3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jul 10 12:55:46 2020

                 luciSemaforo@lux 0024                                 pc 0002                    ___bmul@product 0026  
                     __CFG_CP$OFF 0000                                l81 0C96                                l98 073D  
                    ___awdiv@sign 0031                                _s0 00CF                                _s1 00C1  
                              _s2 00B3                                _s3 01C8                                _s4 01BA  
                              _s5 01AC                                _s6 019E                                _s7 0190  
                              fsr 0004               ___wmul@multiplicand 0026                    _GetDigits$1222 0039  
               luciSemaforo@index 0027                       __CFG_LVP$ON 0000                               l123 04D7  
                             l132 0550                               l311 07FE                               l129 0528  
                             l241 0089                               l162 0604                               l314 0BFD  
                             l330 0D6B                               l139 0EC3                               l331 0D6F  
                             l149 0D16                               l167 0FFF                               l351 07CD  
                             l335 0D86                               l255 0213                               l239 031C  
                             l600 0F91                               l344 0757                               l512 0619  
                             l328 0D67                               l272 047C                               l264 0470  
                             l337 0D8A                               l282 0C2E                               l522 06A1  
                             l338 0D8E                               l339 0DB5                               l291 0BAB  
                             l285 0C3A                               l613 0E68                               l293 0BAF  
                             l294 0BB2                               l279 0BD5                               l447 0C49  
                             l288 0CD0                               l473 0C14                               l449 0C61  
                    __CFG_CPD$OFF 0000                               _ISR 0DB6                               _car 005A  
                             _map 0C62                               fsr0 0004                               indf 0000  
                    ___awmod@sign 002A                      __CFG_FOSC$HS 0000                              ?_ISR 0070  
           ??_ShowDigitsOnDisplay 002B                              l3001 0699                              l3011 0F35  
                            l3021 0F46                              l3013 0F37                              l3005 0F29  
                            l3101 0727                              l3031 0F5E                              l3023 0F4C  
                            l3015 0F3B                              l3007 0F2C                              l3103 0E6C  
                            l3033 0F6F                              l3025 0F4F                              l3041 0F83  
                            l3017 0F40                              l3009 0F30                              l3121 0EB9  
                            l3201 07E4                              l3043 0F88                              l3035 0F75  
                            l3027 0F56                              l3019 0F44                              l3051 0E11  
                            l3131 0554                              l3123 0EBD                              l3115 0E6E  
                            l3211 07F4                              l3221 0C32                              l3045 0F8D  
                            l3037 0F76                              l3029 0F5A                              l3061 0E25  
                            l3053 0E15                              l3141 057A                              l3133 055A  
                            l3125 0551                              l3117 0EAF                              l3109 0E6D  
                            l3213 07F8                              l3301 0045                              l3215 0C18  
                            l3039 0F7D                              l3071 0E3D                              l3063 0E2B  
                            l3055 0E1A                              l3143 059B                              l3151 05F0  
                            l3135 0578                              l3231 076C                              l3119 0EB3  
                            l3207 07E5                              l3311 0050                              l3303 0046  
                            l3217 0C24                              l3081 0E5F                              l3073 0E47  
                            l3065 0E2E                              l3057 0E1C                              l3049 0E0E  
                            l3153 05F4                              l3145 05BC                              l3233 0771  
                            l3241 07A0                              l3225 073E                              l3209 07EE  
                            l3321 006B                              l3313 0052                              l3305 0048  
                            l3219 0C2B                              l3083 0E64                              l3075 0E4D  
                            l3067 0E35                              l3059 0E20                              l3091 06A5  
                            l3155 05FA                              l3171 0FAC                              l3163 0F95  
                            l3235 0776                              l3243 07B5                              l3227 073F  
                            l3411 0326                              l3403 0307                              l3323 0082  
                            l3315 0054                              l3307 004A                              l3077 0E54  
                            l3069 0E39                              l3093 06A6                              l3157 05FE  
                            l3149 05DD                              l3173 0FBA                              l3165 0F96  
                            l3237 078B                              l3229 0744                              l3181 0BC3  
                            l3253 0D73                              l3261 0DA5                              l3421 0340  
                            l3413 032A                              l3405 0322                              l3333 0090  
                            l3317 005B                              l3309 004C                              l3079 0E5A  
                            l3095 06BB                              l3175 0FCD                              l3191 0C9F  
                            l3183 0BC7                              l3087 0C62                              l3431 03C7  
                            l3423 0348                              l3415 032C                              l3407 0323  
                            l3335 00D7                              l3343 01AC                              l3327 008B  
                            l3319 0060                              l3097 06D7                              l3177 0FFA  
                            l3169 0F9D                              l3193 0CCD                              l3185 0BCA  
                            l3257 0D92                              l3249 0D66                              l3433 03CB  
                            l3441 03DD                              l3425 034A                              l3409 0324  
                            l3417 0336                              l3361 01FC                              l3337 011E  
                            l3345 01C1                              l3099 0714                              l3195 0CCE  
                            l3187 0BCE                              l3443 0423                              l3435 03D1  
                            l3427 0367                              l3451 0462                              l3419 033C  
                            l3371 020C                              l3355 01DA                              l3347 01C9  
                            l3339 0165                              l3197 0CCF                              l3189 0C97  
                            l2901 052E                              l3461 0484                              l3445 0428  
                            l3437 03D2                              l3429 03C1                              l3453 046A  
                            l3381 02DC                              l3373 0215                              l3357 01E9  
                            l3349 01D6                              l2911 054F                              l2903 053B  
                            l3199 07D1                              l3455 0476                              l3447 0438  
                            l3439 03D7                              l3383 02DF                              l3375 02A9  
                            l3367 01FF                              l3359 01EF                              l2921 0CFC  
                            l3457 047A                              l3449 045C                              l3393 02F4  
                            l3377 02BA                              l3369 0204                              l2923 0D0A  
                            l2915 0CD4                              l2907 053C                              l2851 04A8  
                            l2931 0BB0                              l3459 0480                              l3395 02FA  
                            l3387 02E6                              l3379 02CB                              l3299 003F  
                            l2925 0D12                              l2917 0CE3                              l2933 0BEC  
                            l2941 0C43                              l2909 0542                              l2861 04AC  
                            l2853 04A9                              l3397 02FD                              l3389 02EB  
                            ?_map 0034                              l2919 0CEB                              l2951 0C01  
                            l2935 0BFB                              l2943 0C50                              l2871 04CA  
                            l2855 04AA                              l2847 048C                              l3399 0303  
                            l2961 0C13                              l2953 0C02                              l3681 0DAD  
                            l2945 0C57                              l2937 0C3B                              l2881 04EC  
                            l2873 04DD                              l2849 049B                              l2929 0BAB  
                            l3673 01B3                              l2955 0C06                              l3683 07AA  
                            l2971 061D                              l2947 0C5D                              l2939 0C3F  
                            l2883 04F9                              l2875 04E5                              l2867 04B0  
                            l3675 0314                              l3685 05E5                              l2957 0C0A  
                            l2981 063F                              l2973 0628                              l2965 0605  
                            l3677 0D7B                              l2869 04C4                              l2959 0C0C  
                            l2991 0679                              l2983 064C                              l2975 062C  
                            l2967 0608                              l3679 0D9A                              l2895 0501  
                            l2879 04E6                              l2993 067A                              l2985 0650  
                            l2977 0634                              l2969 060C                              l2897 0515  
                            l2889 04FD                              l2995 0683                              l2987 0659  
                            l2979 063C                              l2899 051B                              l2989 066B  
                            l2997 0689                              l2999 068E                              u2210 0528  
                            u2211 0527                              u2300 0C5D                              u2220 052E  
                            u2204 050D                              u2301 0C5C                              u2221 052D  
                            u2205 050B                              u2310 0C06                              u2311 0C05  
                            u2215 0524                              u2320 0C13                              u2240 054F  
                            u2321 0C12                              u3017 0BD2                              u2241 054E  
                            u2410 0689                              u2330 060C                              u2234 0534  
                            u2170 04D7                              u3027 0C28                              u2411 0688  
                            u2331 060B                              u2235 0532                              u2171 04D6  
                            u2155 049E                              u2420 068E                              u2340 061D  
                            u2180 04DD                              u2164 04BC                              u2260 0BAF  
                            u2421 068D                              u2405 067B                              u2341 061C  
                            u2245 054B                              u2181 04DC                              u2165 04BA  
                            u2261 0BAE                              u2510 0F83                              u2430 0F30  
                            u2350 063C                              u2270 0C43                              u2190 04F9  
                            u2511 0F82                              u2431 0F2F                              u2255 0CF1  
                            u2351 063B                              u2271 0C42                              u2191 04F8  
                            u2175 04D3                              u2520 0F88                              u2440 0F3B  
                            u2600 0E5A                              u2521 0F87                              u2505 0F77  
                            u2441 0F3A                              u2601 0E59                              u2450 0F4C  
                            u2610 0E5F                              u2530 0E15                              u2370 0650  
                            u2451 0F4B                              u2611 0E5E                              u2531 0E14  
                            u2371 064F                              u2195 04F5                              u2540 0E20  
                            u2620 06D7                              u2700 0CAE                              u2541 0E1F  
                            u2621 06D6                              u2365 0641                              u2285 0C4A  
                            u2470 0F5E                              u2550 0E2B                              u2390 066B  
                            u2630 0EB9                              u2710 07FE                              u2471 0F5D  
                            u2551 0E2A                              u2391 066A                              u2631 0EB8  
                            u2295 0C51                              u2711 07FD                              u2640 0EC3  
                            u2800 0088                              u2465 0F50                              u2625 06D3  
                            u2385 0652                              u2705 0CA9                              u2641 0EC2  
                            u2801 0087                              u2730 0C32                              u2490 0F6F  
                            u2570 0E3D                              u2650 055A                              u2810 01D6  
                            u2731 0C31                              u2491 0F6E                              u2571 0E3C  
                            u2651 0559                              u2395 0667                              u2811 01D5  
                            u2580 0E47                              u2660 05FA                              u2740 0744  
                            u2900 0340                              u2820 01FC                              u2725 0C1B  
                            u2485 0F5F                              u2581 0E46                              u2565 0E2F  
                            u2661 05F9                              u2741 0743                              u2901 033F  
                            u2821 01FB                              u2670 0604                              u2750 0771  
                            u2910 0367                              u2830 0212                              u2495 0F6B  
                            u2671 0603                              u2751 0770                              u2911 0366  
                            u2831 0211                              u2815 01D2                              u2680 0F9C  
                            u2760 0776                              u2920 03C1                              u2840 02E5  
                            u2585 0E43                              u2681 0F9B                              u2761 0775  
                            u2921 03C0                              u2841 02E4                              u2825 01F8  
                            u2930 03D1                              u2850 02FA                              u2595 0E4E  
                            u2931 03D0                              u2851 02F9                              u2940 03D7  
                            u2860 0303                              u2941 03D6                              u2861 0302  
                            u2950 0470                              u2870 0322                              u2695 0FC2  
                            u2951 046F                              u2871 0321                              u2960 0476  
                            u2880 032A                              u2961 0475                              u2881 0329  
                            u2970 047A                              u2890 033C                              u2971 0479  
                            u2891 033B                              u2980 0480                              _RCIF 0065  
                            u2981 047F                              u2990 0484                              u2991 0483  
                            _TMR0 0001                              _TXIF 0064                      __CFG_WRT$OFF 0000  
                            _disp 0051                              _main 003F                              _time 004E  
                            map@x 0034                              btemp 007E                  __end_of_ADC_Read 0C3B  
                   __CFG_BOREN$ON 0000                       main@umidita 01D7                              start 0010  
                 __end_of_GetTime 0D17                 ___bmul@multiplier 0027                             ??_ISR 0020  
       __size_of_conteggioVeicoli 0065                             ??_map 003E                   __end_of___aldiv 06A2  
                           ?_main 0070                   __end_of___awdiv 0F92                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 0E69                   ___awdiv@divisor 002B                             _T1CON 0010  
                           i1l303 0B9F                             i1l305 0BA5                             i1l306 0BA7  
                           i1l322 0F28                             i1l173 0D62                             i1l361 0E05  
                 ___awdiv@counter 0030                             _RCREG 001A              UpdateTimes@_semafori 0034  
                           _TMR1H 000F                             _TMR1L 000E                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _TRISE 0089  
                           _TXREG 0019                     __CFG_PWRTE$ON 0000                __size_of_UART_Init 003A  
              __size_of_UART_Read 0009                   __end_of_display 0811                             _count 004A  
                           _unita 0064                             main@i 01E1                             _truck 0056  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 0013                      __end_of_main 0489         __size_of_SetReceivedTimes 006E  
              __size_of_GetDigits 009C                            ??_main 0040                 SetDefaultTimers@i 0032  
               SetDefaultTimers@l 0033                __size_of_BuildByte 00C8                        _SetDisplay 0BE9  
                          _ADCON0 001F                            _ADCON1 009F                __size_of_Conteggio 004C  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 002D  
                          i1l2021 0D17                            i1l2031 0D52                            i1l2023 0D20  
                          i1l2025 0D30                            i1l2027 0D39                            i1l2029 0D49  
                          i1l2401 0EF7                            i1l2403 0EFF                            i1l2405 0F1A  
                          i1l2407 0F1E                            i1l2409 0F22                            i1l2621 0DC3  
                          i1l2613 0DB6                            i1l2391 0EC4                            i1l2623 0DC7  
                          i1l2631 0DDE                            i1l2615 0DBA                            u210_20 0DC7  
                          i1l2385 0B9F                            i1l2393 0EE4                            i1l2641 0DF0  
                          i1l2633 0DE2                            i1l2625 0DCB                            u210_21 0DC6  
                          i1l2617 0DBE                            i1l2387 0BA6                            i1l2651 0DFD  
                          i1l2643 0DF1                            i1l2635 0DE3                            i1l2627 0DD9  
                          i1l2619 0DC1                            i1l2397 0EE5                            i1l2653 0E01  
                          i1l2645 0DF5                            i1l2637 0DE8                            i1l2629 0DDD  
                          i1l2399 0EEE                            i1l2655 0E03                            i1l2647 0DFB  
                          i1l2639 0DEC                            u211_20 0DCB                            i1l2649 0DFC  
                          u211_21 0DCA                            u212_20 0DE2                            u212_21 0DE1  
                          u213_20 0DF0                            u213_21 0DEF                            u126_20 0D20  
                          u214_20 0DFB                            u126_21 0D1F                            u214_21 0DFA  
                          u127_20 0D39                            u127_21 0D38                            u128_20 0D52  
                          u208_20 0DBA                            u128_21 0D51                            u208_21 0DB9  
                          u209_20 0DBE                            _INTCON 000B                            u209_21 0DBD  
                          u180_20 0BA5                            u180_21 0BA4                            u181_20 0EEE  
                          u181_21 0EED                            u182_20 0EFF                            u182_21 0EFE  
                          u183_20 0F28                            u183_21 0F27                            _TMR0IF 005A  
                          _TMR1IF 0060                         ??_GetTime 0026                      ?_UART_TxChar 0070  
               __end_of_UART_Init 0CD1                 __end_of_UART_Read 0BA8                            ___bmul 0BFE  
                       ??___aldiv 002C                   GetTime@shortInt 0029                            ___wmul 0C3B  
                       ??___awdiv 002F                            _decine 0063                         ??___awmod 0028  
                __end_of_init_ADC 0BD6                            _cycled 0052                  ___awdiv@quotient 0032  
                 ___awmod@divisor 0024                   ___awmod@counter 0029                  __end_of_sendByte 07FF  
                 GetDigits@decine 0034                     main@pressione 01D8                         ?_ADC_Read 0024  
                          saved_w 007E           __end_of__initialization 003B                 __end_of_GetDigits 073E  
                   ??_UpdateTimes 0024         __size_of_SetDefaultTimers 00B4               ___bmul@multiplicand 0024  
                  __pcstackCOMMON 0070                 __end_of_BuildByte 0551                      __pidataBANK1 0BB3  
                _conteggioVeicoli 0EC4                 __end_of_Conteggio 0D63                     ?_luciSemaforo 0024  
                      ??_ADC_Read 0026            SetDefaultTimers@giallo 0028         SetReceivedTimes@_semafori 002C  
                     ?_SetDisplay 0024                     GetDigits@Time 0036              _dataFromGatewayIndex 004D  
            _timerReadFromGateway 004C                        __pbssBANK0 004A                        __pbssBANK1 00A0  
                      __pbssBANK3 0190                        __pmaintext 003F                           ?___bmul 0024  
                         ?___wmul 0024                    ??_luciSemaforo 0025               __end_of_UpdateTimes 0EC4  
                   sendByte@byte0 003D                     sendByte@byte1 0038                        __pintentry 0004  
                _SetReceivedTimes 0F92       __end_of_ShowDigitsOnDisplay 07CE                        __stringtab 0800  
                       ?_init_ADC 0070                           _GetTime 0CD1                   BuildByte@valore 0025  
                 BuildByte@txByte 0029           GetTime@_dataFromGateway 0024                         ?_sendByte 0038  
                      _n_semafori 0811              __size_of_UART_TxChar 000B                           ___aldiv 0605  
                 __size_of___bmul 0017                           ___awdiv 0F29                           ___awmod 0E0E  
             __size_of_SetDisplay 0015                   __size_of___wmul 0027                 conteggioVeicoli@i 007D  
                         __ptext1 07CE                           __ptext2 0BA8                           __ptext3 0489  
                         __ptext4 0C62                           __ptext5 0C3B                           __ptext6 0D63  
                         __ptext7 0BC3                           __ptext8 0E69                           __ptext9 0C97  
                         _comando 004F                           _display 0806                      __size_of_ISR 0058  
                    __size_of_map 0035                  ___awmod@dividend 0026                  ___aldiv@dividend 0028  
            BuildByte@sommaColumn 002F                           clrloop0 0B98              end_of_initialization 003B  
                      ??_init_ADC 0024                    main@lux_select 01DF                       _UpdateTimes 0E69  
                      ??_sendByte 003A                  _SetDefaultTimers 0551                         _RCSTAbits 0018  
                ___aldiv@quotient 002F                        _motorcycle 005E                         _UART_Init 0C97  
                       _UART_Read 0B9F             SetReceivedTimes@index 0038                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                      SetDisplay@d1 0027  
                    SetDisplay@d2 0024                      SetDisplay@d3 0025                         _TRISCbits 0087  
               __size_of_ADC_Read 0026          __end_of_conteggioVeicoli 0F29              __end_of_luciSemaforo 0DB6  
                      map@out_max 003C                        map@out_min 003A  SetReceivedTimes@_dataFromGateway 0037  
                       _TXSTAbits 0098                         _GetDigits 06A2                    __end_of___bmul 0C15  
                  __end_of___wmul 0C62                        ?_UART_Init 0033                        ?_UART_Read 0070  
                       _BuildByte 0489                         _Conteggio 0D17                 BuildByte@sommaRow 002E  
             start_initialization 0013                       __end_of_ISR 0E0E                      ??_SetDisplay 0027  
                     __end_of_map 0C97          __end_of_SetReceivedTimes 1000                        ?_GetDigits 0034  
                        ??___bmul 0025                    ADC_Read@canale 0027                          ??___wmul 0028  
                      init_fetch0 0BD6                       __pdataBANK1 00DD                __end_of_SetDisplay 0BFE  
                      ?_BuildByte 0024                    GetDigits@unita 0035                        ?_Conteggio 0070  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK3 01D6  
                        ?_GetTime 0024             SetDefaultTimers@verde 0026             SetDefaultTimers@rosso 0024  
               __size_of_init_ADC 0013                         _centinaia 0062                 __size_of_sendByte 0031  
                        ?___aldiv 0024                          ?___awdiv 002B                          ?___awmod 0024  
                     ??_UART_Init 0035                       ??_UART_Read 0070                    BuildByte@i_355 0036  
                       __pstrings 0800                    BuildByte@y_356 0032                    sendByte@valore 0039  
                  sendByte@txByte 003E                    BuildByte@byte0 0028                    BuildByte@byte1 0024  
        __end_of_SetDefaultTimers 0605                          _ADC_Read 0C15             __size_of_luciSemaforo 0053  
                       _count_lux 0050                     UART_TxChar@ch 0024      __size_of_ShowDigitsOnDisplay 0090  
                 ___aldiv@divisor 0024                 SetReceivedTimes@i 0039                 interrupt_function 0004  
                 ___aldiv@counter 002D                    ___wmul@product 0028        SetReceivedTimes@semaforoId 0035  
                    ?_UpdateTimes 0070                         clear_ram0 0B97                          _PIE1bits 008C  
                   ??_UART_TxChar 0024                       ??_GetDigits 0038                          _GO_nDONE 00FA  
                    _luciSemaforo 0D63                 UART_Init@baudrate 0033                       ??_BuildByte 0026  
                       map@in_max 0038                         map@in_min 0036                       __stringbase 0805  
                       main@i_491 01DC                         main@i_493 01E0                       ??_Conteggio 0076  
                       main@i_488 01DD                         main@i_489 01DB                 ___wmul@multiplier 0024  
                    GetTime@index 0028                      _RoadsSensors 00A0                 ?_conteggioVeicoli 0070  
                    _secondPassed 0053                ??_conteggioVeicoli 0079                  __size_of_GetTime 0046  
                        _Semafori 00DD                GetDigits@centinaia 003B                       _readGateway 0054  
                __size_of___aldiv 009D               __end_of_UART_TxChar 0BB3                  __size_of___awdiv 0069  
                __size_of___awmod 005B                __end_of__stringtab 0806                         sendByte@i 003F  
                        __ptext10 0605                          __ptext11 073E                          __ptext20 0C15  
                        __ptext12 0BE9                          __ptext21 0DB6                          __ptext13 0F92  
                        __ptext22 0EC4                          __ptext14 0BFE                          __ptext23 0D17  
                        __ptext15 0CD1                          __ptext24 0B9F                          __ptext16 0551  
                        __ptext17 06A2                          __ptext18 0E0E                          __ptext19 0F29  
              __end_of_n_semafori 0812                          _init_ADC 0BC3                 ?_SetReceivedTimes 002C  
                   __size_of_main 044A                   _dataFromGateway 00A4                          _sendByte 07CE  
              ??_SetReceivedTimes 002D                          main@temp 01D6                          main@time 01D9  
                      _INTCONbits 000B                          init_ram0 0BDA              Conteggio@_motorcycle 0072  
                        intlevel1 0000                   _readGatewayDone 0055                         stringcode 0800  
                     _UART_TxChar 0BA8           SetReceivedTimes@colorId 0036              __size_of_UpdateTimes 005B  
                      GetTime@tmp 002A               _ShowDigitsOnDisplay 073E                        _OPTION_REG 0081  
                 SetDisplay@value 0026                          stringdir 0800                          stringtab 0800  
                    UpdateTimes@i 0036                      UpdateTimes@l 0035                 ?_SetDefaultTimers 0024  
                    ___aldiv@sign 002E                ??_SetDefaultTimers 002B              ?_ShowDigitsOnDisplay 0070  
                      BuildByte@i 0034                        BuildByte@y 0030         SetDefaultTimers@_semafori 002A  
                 Conteggio@_count 0070                     Conteggio@_car 0073                   Conteggio@_truck 0074  
                  Conteggio@index 0075  
